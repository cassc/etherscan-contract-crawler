{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract PurchaseContract {\r\n    address public owner;\r\n    uint256 public feePercentage = 2;\r\n\r\n    struct Purchase {\r\n        bytes32 ethsId;\r\n        bytes32 listId;\r\n        address listAddress;\r\n        uint256 price;\r\n        bool isPurchased;\r\n    }\r\n\r\n    mapping(bytes32 => Purchase) public purchases;\r\n\r\n    event PurchaseMade(address from, address to, bytes32 listHash);\r\n    event OwnershipTransferred(address indexed oldOwner, address indexed newOwner);\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call this function.\");\r\n        _;\r\n    }\r\n\r\n    function setFeePercentage(uint256 newFee) public onlyOwner {\r\n        feePercentage = newFee;\r\n    }\r\n\r\n    function buy(bytes32 ethsId, bytes32 listId, address listAddress, uint256 price) public payable {\r\n        bytes32 purchaseHash = keccak256(abi.encodePacked(ethsId, listId));\r\n        require(!purchases[purchaseHash].isPurchased, \"This item is already purchased.\");\r\n        require(msg.value == price, \"Incorrect price.\");\r\n\r\n        purchases[purchaseHash] = Purchase(ethsId, listId, listAddress, price, true);\r\n\r\n        uint256 fee = (price * feePercentage) / 100;\r\n        uint256 amountToSend = price - fee;\r\n\r\n        payable(listAddress).transfer(amountToSend);\r\n        // The fee remains in the contract\r\n\r\n        emit PurchaseMade(msg.sender, listAddress, purchaseHash);\r\n    }\r\n\r\n    function withdraw(uint256 amount) public onlyOwner {\r\n        uint256 balance = address(this).balance;\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n        require(balance >= amount, \"Insufficient funds in contract\");\r\n\r\n        payable(owner).transfer(amount);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"New owner cannot be the zero address\");\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    \r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"listHash\",\"type\":\"bytes32\"}],\"name\":\"PurchaseMade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ethsId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"listId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"listAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"purchases\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ethsId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"listId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"listAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPurchased\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PurchaseContract", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://b05b7c1c3a9fcf532f11fbf950b06ba153c97431ca26403a00d732cb00acec91"}