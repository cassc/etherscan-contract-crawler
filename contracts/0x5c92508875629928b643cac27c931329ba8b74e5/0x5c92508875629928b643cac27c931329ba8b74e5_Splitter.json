{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/splitter/contracts/Splitter.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: Unlicensed\\n\\n// Deployed with the Atlas IDE\\n// https://app.atlaszk.com\\n\\npragma solidity ^0.8.19;\\n\\ncontract Splitter {\\n    address payable public recipient1 = payable(0x4C14EbC1ee74964593632eCaD6AA967f9A023a9F);\\n    address payable public recipient2 = payable(0x1A02f9c21816C772a7066fdF565E97532EaC9395);\\n    address payable public recipient3 = payable(0x81c1a5CF8B7e995D42E146C842bfE17e4B5DbE3D);\\n    address payable public recipient4 = payable(0xBC161e3009e60AA6e0B5D4941dd327ee1088D645);\\n\\n    receive() external payable {\\n        uint256 amount1 = msg.value * 333 / 1000; // 33.3%\\n        uint256 amount2 = msg.value * 222 / 1000; // 22.2%\\n        uint256 amount3 = msg.value * 222 / 1000; // 22.2%\\n        uint256 amount4 = msg.value * 222 / 1000; // 22.2%\\n\\n        recipient1.transfer(amount1);\\n        recipient2.transfer(amount2);\\n        recipient3.transfer(amount3);\\n        recipient4.transfer(amount4);\\n        // The remaining amount after integer division might be slightly less than the exact split. \\n        // To avoid locking up any funds in the contract, we send the remaining balance to recipient1.\\n        recipient1.transfer(address(this).balance);\\n    }\\n\\n    // This function is to recover any funds accidentally sent to the contract directly\\n    function recover() public {\\n        payable(msg.sender).transfer(address(this).balance);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"recipient1\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recipient2\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recipient3\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recipient4\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Splitter", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}