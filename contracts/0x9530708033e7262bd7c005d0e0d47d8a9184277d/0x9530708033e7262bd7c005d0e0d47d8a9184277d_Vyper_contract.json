{"SourceCode": "# @version 0.2.12\r\n# @author skozin <info@lido.fi>\r\n# @licence MIT\r\n# @notice  The Lido DAO stops maintaining the Anchor <> stETH integration. Minting and rewards distribution are discontinued.\r\n#          Withdrawals continue to work.\r\n#          More about here https://research.lido.fi/t/sunsetting-lido-on-terra/2367\r\nfrom vyper.interfaces import ERC20\r\n\r\ninterface Burnable:\r\n    def burn(owner: address, amount: uint256): nonpayable\r\n\r\ninterface Lido:\r\n    def getPooledEthByShares(shares_amount: uint256) -> uint256: view\r\n\r\nevent Deposited:\r\n    sender: indexed(address)\r\n    amount: uint256\r\n    terra_address: bytes32\r\n    beth_amount_received: uint256\r\n\r\nevent Withdrawn:\r\n    recipient: indexed(address)\r\n    amount: uint256\r\n    steth_amount_received: uint256\r\n\r\nevent Refunded:\r\n    recipient: indexed(address)\r\n    beth_amount: uint256\r\n    steth_amount: uint256\r\n    comment: String[1024]\r\n\r\nevent RefundedBethBurned:\r\n    beth_amount: uint256\r\n\r\n\r\nevent RewardsCollected:\r\n    steth_amount: uint256\r\n    ust_amount: uint256\r\n\r\nevent AdminChanged:\r\n    new_admin: address\r\n\r\nevent EmergencyAdminChanged:\r\n    new_emergency_admin: address\r\n\r\nevent BridgeConnectorUpdated:\r\n    bridge_connector: address\r\n\r\nevent RewardsLiquidatorUpdated:\r\n    rewards_liquidator: address\r\n\r\nevent InsuranceConnectorUpdated:\r\n    insurance_connector: address\r\n\r\nevent LiquidationConfigUpdated:\r\n    liquidations_admin: address\r\n    no_liquidation_interval: uint256\r\n    restricted_liquidation_interval: uint256\r\n\r\nevent AnchorRewardsDistributorUpdated:\r\n    anchor_rewards_distributor: bytes32\r\n\r\nevent VersionIncremented:\r\n    new_version: uint256\r\n\r\nevent OperationsStopped:\r\n    pass\r\n\r\nevent OperationsResumed:\r\n    pass\r\n\r\n# WARNING: since this contract is behind a proxy, don't change the order of the variables\r\n# and don't remove variables during the code upgrades. You can only append new variables\r\n# to the end of the list.\r\n\r\nadmin: public(address)\r\n\r\nbeth_token: public(address)\r\nsteth_token: public(address)\r\nbridge_connector: public(address)\r\nrewards_liquidator: public(address)\r\ninsurance_connector: public(address)\r\nanchor_rewards_distributor: public(bytes32)\r\n\r\nliquidations_admin: public(address)\r\nno_liquidation_interval: public(uint256)\r\nrestricted_liquidation_interval: public(uint256)\r\n\r\nlast_liquidation_time: public(uint256)\r\nlast_liquidation_share_price: public(uint256)\r\nlast_liquidation_shares_burnt: public(uint256)\r\n\r\n# The contract version. Used to mark backwards-incompatible changes to the contract\r\n# logic, including installing delegates with an incompatible API. Can be changed\r\n# in `_initialize_vX` after implementation.\r\n#\r\n# The following functions revert unless the value of the `_expected_version` argument\r\n# matches the one stored in this state variable:\r\n#\r\n# * `withdraw`\r\n#\r\n# It's recommended for any external code interacting with this contract, both onchain\r\n# and offchain, to have the current version set as a configurable parameter to make\r\n# sure any incompatible change to the contract logic won't produce unexpected results,\r\n# reverting the transactions instead until the compatibility is manually checked and\r\n# the configured version is updated.\r\n#\r\nversion: public(uint256)\r\n\r\nemergency_admin: public(address)\r\noperations_allowed: public(bool)\r\n\r\ntotal_beth_refunded: public(uint256)\r\n\r\n@internal\r\ndef _assert_version(_expected_version: uint256):\r\n    assert _expected_version == self.version, \"unexpected contract version\"\r\n\r\n@internal\r\ndef _assert_admin(addr: address):\r\n    assert addr == self.admin # dev: unauthorized\r\n\r\n@external\r\ndef __init__():\r\n    # dev: Prevents initialization of an implementation sitting behind a proxy.\r\n    assert self.version == 0 # dev: already initialized\r\n    self.version = MAX_UINT256\r\n\r\n@external\r\ndef pause():\r\n    \"\"\"\r\n    @dev Stops the operations of the contract. Can only be called\r\n    by the contract' admin.\r\n\r\n    While contract is in the stopped state, the following functions revert:\r\n\r\n    * `withdraw`\r\n\r\n    See `resume`.\r\n    \"\"\"\r\n    self._assert_admin(msg.sender)\r\n    assert self.operations_allowed # dev: stopped\r\n    self.operations_allowed = False\r\n    log OperationsStopped()\r\n\r\n@external\r\ndef resume():\r\n    \"\"\"\r\n    @dev Resumes normal operations of the contract. Can only be called\r\n    by the contract' admin.\r\n\r\n    See `pause`.\r\n    \"\"\"\r\n    self._assert_admin(msg.sender)\r\n    assert not self.operations_allowed # dev: not stopped\r\n    self.operations_allowed = True\r\n    log OperationsResumed()\r\n\r\n@external\r\ndef change_admin(new_admin: address):\r\n    \"\"\"\r\n    @dev Changes the admin address. Can only be called by the contract' admin.\r\n\r\n    Setting the admin to zero ossifies the contract, i.e. makes it irreversibly non-administrable.\r\n    \"\"\"\r\n    self._assert_admin(msg.sender)\r\n    # we're explicitly allowing zero admin address for ossification\r\n    self.admin = new_admin\r\n    log AdminChanged(new_admin)\r\n\r\n@internal\r\n@view\r\ndef _get_rate() -> uint256:\r\n    steth_balance: uint256 = ERC20(self.steth_token).balanceOf(self)\r\n    beth_supply: uint256 = ERC20(self.beth_token).totalSupply() - self.total_beth_refunded\r\n    if steth_balance >= beth_supply:\r\n        return 10**18\r\n\r\n    return (steth_balance * 10**18) / beth_supply\r\n\r\n@external\r\n@view\r\ndef get_rate() -> uint256:\r\n    \"\"\"\r\n    @dev How much bETH one needs to provide to withdraw one stETH, 10**18 being the 1:1 rate.\r\n\r\n    This rate is normally 10**18 (1:1) but might be different after severe penalties inflicted\r\n    on the Lido validators.\r\n    \"\"\"\r\n    return self._get_rate()\r\n\r\n@external\r\n@payable\r\ndef submit(\r\n    _amount: uint256,\r\n    _terra_address: bytes32,\r\n    _extra_data: Bytes[1024],\r\n    _expected_version: uint256\r\n) -> (uint256, uint256):\r\n    \"\"\"\r\n    @dev The Lido DAO stops maintaining the Anchor <> stETH integration. Minting and rewards distribution are discontinued.\r\n         Withdrawals continue to work.\r\n\r\n    Context: https://research.lido.fi/t/sunsetting-lido-on-terra/2367.\r\n    \"\"\"\r\n    raise \"Minting is discontinued\"\r\n\r\n@internal\r\ndef _withdraw(recipient: address, beth_amount: uint256, steth_rate: uint256) -> uint256:\r\n    steth_amount: uint256 = (beth_amount * steth_rate) / 10**18\r\n    ERC20(self.steth_token).transfer(recipient, steth_amount)\r\n    return steth_amount\r\n\r\n@external\r\ndef withdraw(\r\n    _beth_amount: uint256,\r\n    _expected_version: uint256,\r\n    _recipient: address = msg.sender\r\n) -> uint256:\r\n    \"\"\"\r\n    @dev Burns the `_beth_amount` of provided Ethereum-side bETH tokens in return for stETH\r\n         tokens transferred to the `_recipient` Ethereum address.\r\n\r\n    To withdraw Terra-side bETH, you should firstly transfer the tokens to the Ethereum\r\n    blockchain.\r\n\r\n    The conversion rate from stETH to bETH should normally be 1 but might be different after\r\n    severe penalties inflicted on the Lido validators.\r\n    \"\"\"\r\n    assert self.operations_allowed, \"contract stopped\"\r\n    self._assert_version(_expected_version)\r\n\r\n    steth_rate: uint256 = self._get_rate()\r\n    Burnable(self.beth_token).burn(msg.sender, _beth_amount)\r\n    steth_amount: uint256 = self._withdraw(_recipient, _beth_amount, steth_rate)\r\n\r\n    log Withdrawn(_recipient, _beth_amount, steth_amount)\r\n\r\n    return steth_amount\r\n\r\n@external\r\ndef finalize_upgrade_v4():\r\n    \"\"\"\r\n    @dev Performs state changes required for proxy upgrade from version 3 to version 4.\r\n\r\n    Can only be called by the contract' admin.\r\n    \"\"\"\r\n    self._assert_admin(msg.sender)\r\n    self._assert_version(3)\r\n\r\n    self.version = 4\r\n    self.emergency_admin = ZERO_ADDRESS\r\n    self.bridge_connector = ZERO_ADDRESS\r\n    self.rewards_liquidator = ZERO_ADDRESS\r\n    self.insurance_connector = ZERO_ADDRESS\r\n    self.anchor_rewards_distributor = empty(bytes32)\r\n    self.liquidations_admin = ZERO_ADDRESS\r\n    self.no_liquidation_interval = 0\r\n    self.restricted_liquidation_interval = 0\r\n\r\n    self.last_liquidation_time = 0\r\n    self.last_liquidation_share_price = 0\r\n    self.last_liquidation_shares_burnt = 0\r\n\r\n    log VersionIncremented(4)\r\n    log EmergencyAdminChanged(ZERO_ADDRESS)\r\n    log BridgeConnectorUpdated(ZERO_ADDRESS)\r\n    log RewardsLiquidatorUpdated(ZERO_ADDRESS)\r\n    log InsuranceConnectorUpdated(ZERO_ADDRESS)\r\n    log AnchorRewardsDistributorUpdated(empty(bytes32))\r\n    log LiquidationConfigUpdated(\r\n        ZERO_ADDRESS,\r\n        0,\r\n        0\r\n    )\r\n\r\n@external\r\ndef collect_rewards() -> uint256:\r\n    \"\"\"\r\n    @dev The Lido DAO stops maintaining the Anchor <> stETH integration. Minting and rewards distribution are discontinued.\r\n         Withdrawals continue to work.\r\n    \"\"\"\r\n    raise \"Collect rewards stopped\"", "ABI": "[{\"name\":\"Deposited\",\"inputs\":[{\"name\":\"sender\",\"type\":\"address\",\"indexed\":true},{\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"terra_address\",\"type\":\"bytes32\",\"indexed\":false},{\"name\":\"beth_amount_received\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"Withdrawn\",\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\",\"indexed\":true},{\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"steth_amount_received\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"Refunded\",\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\",\"indexed\":true},{\"name\":\"beth_amount\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"steth_amount\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"comment\",\"type\":\"string\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"RefundedBethBurned\",\"inputs\":[{\"name\":\"beth_amount\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"RewardsCollected\",\"inputs\":[{\"name\":\"steth_amount\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"ust_amount\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"AdminChanged\",\"inputs\":[{\"name\":\"new_admin\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"EmergencyAdminChanged\",\"inputs\":[{\"name\":\"new_emergency_admin\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"BridgeConnectorUpdated\",\"inputs\":[{\"name\":\"bridge_connector\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"RewardsLiquidatorUpdated\",\"inputs\":[{\"name\":\"rewards_liquidator\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"InsuranceConnectorUpdated\",\"inputs\":[{\"name\":\"insurance_connector\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"LiquidationConfigUpdated\",\"inputs\":[{\"name\":\"liquidations_admin\",\"type\":\"address\",\"indexed\":false},{\"name\":\"no_liquidation_interval\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"restricted_liquidation_interval\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"AnchorRewardsDistributorUpdated\",\"inputs\":[{\"name\":\"anchor_rewards_distributor\",\"type\":\"bytes32\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"VersionIncremented\",\"inputs\":[{\"name\":\"new_version\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"OperationsStopped\",\"inputs\":[],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"OperationsResumed\",\"inputs\":[],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"pause\",\"inputs\":[],\"outputs\":[],\"gas\":25752},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"resume\",\"inputs\":[],\"outputs\":[],\"gas\":40785},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"change_admin\",\"inputs\":[{\"name\":\"new_admin\",\"type\":\"address\"}],\"outputs\":[],\"gas\":39315},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"get_rate\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":12581},{\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"submit\",\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_terra_address\",\"type\":\"bytes32\"},{\"name\":\"_extra_data\",\"type\":\"bytes\"},{\"name\":\"_expected_version\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":764},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"withdraw\",\"inputs\":[{\"name\":\"_beth_amount\",\"type\":\"uint256\"},{\"name\":\"_expected_version\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"withdraw\",\"inputs\":[{\"name\":\"_beth_amount\",\"type\":\"uint256\"},{\"name\":\"_expected_version\",\"type\":\"uint256\"},{\"name\":\"_recipient\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"finalize_upgrade_v4\",\"inputs\":[],\"outputs\":[],\"gas\":271242},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"collect_rewards\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":515},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":2628},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"beth_token\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":2658},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"steth_token\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":2688},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"bridge_connector\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":2718},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"rewards_liquidator\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":2748},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"insurance_connector\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":2778},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"anchor_rewards_distributor\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"gas\":2808},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"liquidations_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":2838},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"no_liquidation_interval\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":2868},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"restricted_liquidation_interval\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":2898},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"last_liquidation_time\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":2928},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"last_liquidation_share_price\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":2958},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"last_liquidation_shares_burnt\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":2988},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"version\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":3018},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"emergency_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":3048},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"operations_allowed\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":3078},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"total_beth_refunded\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":3108}]", "ContractName": "Vyper_contract", "CompilerVersion": "vyper:0.2.12", "OptimizationUsed": "0", "Runs": "0", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}