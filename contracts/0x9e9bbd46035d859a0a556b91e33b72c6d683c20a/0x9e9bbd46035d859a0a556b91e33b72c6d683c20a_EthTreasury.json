{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"EthTreasury.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\ncontract EthTreasury{\\r\\n    address public owner;\\r\\n    uint256 public withdrawTimes = 0;\\r\\n    uint256 public lastWithdrawTimestamp = 0;\\r\\n    uint256 public constant WITHDRAW_MAX_TIMES = 360;\\r\\n    uint256 public constant WITHDRAW_ONE_MONTH = 2592000;                 // 1 month(60*60*24*30 seconds)\\r\\n    uint256 public constant WITHDRAW_START_TIMESTAMP = 1893456000;        // 2030-01-01\\r\\n\\r\\n    constructor() payable {\\r\\n        owner = msg.sender;  \\r\\n    }\\r\\n\\r\\n    modifier onlyOwner {\\r\\n        require(msg.sender == owner,\\\"Only the owner can call this function\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    function getBlockInfo() public view returns(uint256 block_number,uint256 block_timestamp) {\\r\\n        return (block.number,block.timestamp);\\r\\n    }\\r\\n\\r\\n    event EthWithdraw(uint256 withdrawTimes,uint256 withdrawAmount,uint256 timestamp);\\r\\n\\r\\n    function WithDrawMonthly() external onlyOwner {\\r\\n        require(block.timestamp >= WITHDRAW_START_TIMESTAMP,\\\"Withdrawal time not reached\\\");\\r\\n        require(block.timestamp - lastWithdrawTimestamp >= WITHDRAW_ONE_MONTH,\\\"Can only withdraw once per month\\\");\\r\\n\\r\\n        uint256 amountToSend = address(this).balance / (WITHDRAW_MAX_TIMES - withdrawTimes);  \\r\\n\\r\\n        (bool success, ) = owner.call{value: amountToSend}(\\\"\\\");\\r\\n        require(success, \\\"ETH transfer failed\\\");  \\r\\n\\r\\n        emit EthWithdraw(withdrawTimes,amountToSend,block.timestamp);\\r\\n\\r\\n        withdrawTimes++;   \\r\\n        lastWithdrawTimestamp = block.timestamp; \\r\\n    }\\r\\n\\r\\n    function WithdrawalAllEmergencybyTimestamp() external onlyOwner {\\r\\n        require((block.timestamp == 0) || (block.timestamp == 2**256-1),\\\"Block timestamp still works\\\");\\r\\n\\r\\n        (bool success, ) = owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success, \\\"ETH transfer failed\\\");   \\r\\n    }    \\r\\n\\r\\n    function WithdrawalAllEmergencybyBlocknum() external onlyOwner {\\r\\n        require(block.number >= 500000000,\\\"Block number not reached\\\");\\r\\n\\r\\n        (bool success, ) = owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success, \\\"ETH transfer failed\\\");   \\r\\n    }           \\r\\n} \"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTimes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"EthWithdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WITHDRAW_MAX_TIMES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_ONE_MONTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_START_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WithDrawMonthly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WithdrawalAllEmergencybyBlocknum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WithdrawalAllEmergencybyTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"block_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block_timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastWithdrawTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "EthTreasury", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}