{"SourceCode": "// the first deflationary ERC-404 featuring a 1% token burn mechanism applied to each transaction\r\n// https://twitter.com/Furnace404\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\ninterface IFurnace {\r\n    function transfer(address to, uint amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint);\r\n    function burn(uint amount) external;\r\n}\r\n\r\ncontract DeflationaryMechanism {\r\n    IFurnace public furnaceToken;\r\n    address public owner;\r\n    bool public burnEnabled = false;\r\n    uint256 public burnFeePercentage = 1; \r\n\r\n    event TokenSet(address tokenAddress);\r\n    event BurnEnabledUpdated(bool enabled);\r\n    event BurnFeePercentageUpdated(uint256 percentage);\r\n    event FeeBurned(uint256 amount);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function setDeflationaryToken(address _tokenAddress) external onlyOwner {\r\n        furnaceToken = IFurnace(_tokenAddress);\r\n        emit TokenSet(_tokenAddress);\r\n    }\r\n\r\n    function setBurnEnabled(bool _enabled) external onlyOwner {\r\n        burnEnabled = _enabled;\r\n        emit BurnEnabledUpdated(_enabled);\r\n    }\r\n\r\n    function setBurnFeePercentage(uint256 _percentage) external onlyOwner {\r\n        require(_percentage <= 5, \"Burn fee cannot exceed 5%\");\r\n        burnFeePercentage = _percentage;\r\n        emit BurnFeePercentageUpdated(_percentage);\r\n    }\r\n\r\n    function transferWithFeeBurn(address to, uint256 amount) external {\r\n        require(address(furnaceToken) != address(0), \"Furnace token not set\");\r\n        require(burnEnabled, \"Token burn is not enabled\");\r\n\r\n        uint256 burnAmount = (amount * burnFeePercentage) / 100;\r\n        uint256 transferAmount = amount - burnAmount;\r\n\r\n\r\n        furnaceToken.burn(burnAmount);\r\n        emit FeeBurned(burnAmount);\r\n\r\n\r\n        require(furnaceToken.transfer(to, transferAmount), \"Transfer failed\");\r\n    }\r\n\r\n    function rescueLostToken(address _token, address to, uint256 amount) external onlyOwner {\r\n        require(_token != address(furnaceToken), \"Cannot rescue Furnace token\");\r\n        IFurnace(_token).transfer(to, amount);\r\n    }\r\n    \r\n    \r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"BurnEnabledUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"BurnFeePercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TokenSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"burnEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"furnaceToken\",\"outputs\":[{\"internalType\":\"contract IFurnace\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueLostToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setBurnEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setBurnFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"setDeflationaryToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferWithFeeBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DeflationaryMechanism", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f7d78d755e24f39af3e0ea2630fc18c028e5b9879fffddcf2582003143f27639"}