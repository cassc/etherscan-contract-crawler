{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Artiox{\r\n    mapping(address => uint256) private _balances;\r\n    string private _name;\r\n    string private _symbol;\r\n    address private _owner;\r\n    uint256 private _totalSupply;\r\n    uint256 private _lockedSupply;\r\n    uint256 private _releaseTime;\r\n\r\n    constructor(string memory name_, string memory symbol_, uint256 totalSupply_, uint256 lockedSupply_, uint256 releaseTime_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _owner = msg.sender;\r\n        require(lockedSupply_ <= totalSupply_, \"Locked supply can't be greater than total supply\");\r\n        _lockedSupply = lockedSupply_ * 10 ** decimals();\r\n        _mint(msg.sender, totalSupply_ * 10 ** decimals());\r\n        require(releaseTime_ >= block.timestamp, \"New release time is before current time\");\r\n        _releaseTime = releaseTime_;\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return 2;\r\n    }\r\n    \r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n    \r\n    function lockedSupply() public view returns (uint256) {\r\n        return _lockedSupply;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n    \r\n    function releaseTime() public view returns (uint256) {\r\n        return _releaseTime;\r\n    }\r\n    \r\n    function setReleaseTime(uint256 releaseTime_) public returns (bool) {\r\n        require(msg.sender == owner(), \"Only contract owner can set release time\");\r\n        require(block.timestamp >= releaseTime(), \"Current time is before release time\");\r\n        require(releaseTime_ >= block.timestamp, \"New release time is before current time\");\r\n        _releaseTime = releaseTime_;\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n    \r\n    function lock(uint256 amount) public returns (bool) {\r\n        require(msg.sender == owner(), \"Only contract owner can lock tokens\");\r\n        require(balanceOf(msg.sender) - lockedSupply() >= amount, \"Lock amount exceeds balance\");\r\n        _lockedSupply += amount;\r\n        return true;\r\n    }\r\n    \r\n    function release(uint256 amount) public returns (bool) {\r\n        require(msg.sender == owner(), \"Only contract owner can release tokens\");\r\n        require(block.timestamp >= releaseTime(), \"Current time is before release time\");\r\n        require(lockedSupply() >= amount, \"Release amount exceeds locked balance\");\r\n        _lockedSupply -= amount;\r\n        return true;\r\n    }\r\n\r\n\r\n    function transfer(address recipient, uint256 amount) public returns (bool) {\r\n        if (msg.sender == owner()){\r\n            require(balanceOf(msg.sender) - lockedSupply() >= amount, \"Can't transfer locked tokes\");\r\n            _transfer(msg.sender, recipient, amount);\r\n        }\r\n        else{\r\n            _transfer(msg.sender, recipient, amount);\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    function burn(uint256 amount) public {\r\n        if (msg.sender == owner()){\r\n            require(balanceOf(msg.sender) - lockedSupply() >= amount, \"Can't burn locked tokes\");\r\n            _burn(msg.sender, amount);\r\n        }\r\n        else{\r\n            _burn(msg.sender, amount);\r\n        }\r\n    }\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \"Transfer from the zero address\");\r\n        require(recipient != address(0), \"Transfer to the zero address\");\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"Transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"Mint to the zero address\");\r\n        \r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0), \"Burn from the zero address\");\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"Burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n}\r\n\r\ncontract Face is Artiox{\r\n    constructor() Artiox(\"Yuzler, Inan Ergin\", \"FACE\", 1100000, 0, block.timestamp + 1 days) {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"release\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"releaseTime_\",\"type\":\"uint256\"}],\"name\":\"setReleaseTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Face", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7186429f2dc9306f34aeb4b13694b06a98667cb2386e78dca55473f3426f2bf8"}