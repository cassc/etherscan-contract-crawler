{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/SlickSwapProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * SlickSwap Proxy\\n *\\n * A pretty minimal implementation of EIP-1967 proxy contract which simply forwards all calls to\\n * the logic contract.\\n *\\n * Please use Read as Proxy / Write as Proxy on etherscan.io to interact with the wallet.\\n */\\ncontract SlickSwapProxy {\\n  // Initial SlickSwap implementation address (might change during upgrades)\\n  address constant internal IMPLEMENTATION_ADDRESS = 0xC887bE361b98b73Fc5Ad7F221964b1518d9e0f23;\\n  // EIP-1967 slot storing implementation address.\\n  bytes32 constant internal IMPLEMENTATION_SLOT = hex'360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc';\\n\\n  /**\\n   * Initializes the contract by storing the current address into implementation slot.\\n   */\\n  constructor() {\\n    assembly {\\n      sstore(IMPLEMENTATION_SLOT, IMPLEMENTATION_ADDRESS)\\n    }\\n  }\\n\\n  /**\\n   * Catch-all fallback function that invokes logic's method via delegatecall(), which makes the logic\\n   * use this contract's storage yet run implementation's logic.\\n   */\\n  fallback() external payable {\\n    assembly {\\n      calldatacopy(0, 0, calldatasize())\\n\\n      let result := delegatecall(gas(), sload(IMPLEMENTATION_SLOT), 0, calldatasize(), 0, 0)\\n      returndatacopy(0, 0, returndatasize())\\n\\n      switch result\\n      case 0 {\\n        revert(0, returndatasize())\\n      }\\n      default {\\n        return(0, returndatasize())\\n      }\\n    }\\n  }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"none\"\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": false\r\n    },\r\n    \"evmVersion\": \"shanghai\",\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "SlickSwapProxy", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "shanghai", "Library": "", "LicenseType": "MIT", "Proxy": "1", "Implementation": "0x48d03c9f1da2472224bd4aca7769021d7e93aa0f", "SwarmSource": "none://164736f6c6343000817000a"}