{"SourceCode": "pragma solidity ^0.4.25;\r\n\r\n/**\r\n\r\n /$$$$$$$            /$$                                                                \r\n| $$__  $$          |__/                                                                \r\n| $$  \\ $$  /$$$$$$  /$$  /$$$$$$$  /$$$$$$  /$$$$$$/$$$$   /$$$$$$  /$$$$$$$   /$$$$$$ \r\n| $$$$$$$/ |____  $$| $$ /$$_____/ /$$__  $$| $$_  $$_  $$ |____  $$| $$__  $$ |____  $$\r\n| $$__  $$  /$$$$$$$| $$|  $$$$$$ | $$$$$$$$| $$ \\ $$ \\ $$  /$$$$$$$| $$  \\ $$  /$$$$$$$\r\n| $$  \\ $$ /$$__  $$| $$ \\____  $$| $$_____/| $$ | $$ | $$ /$$__  $$| $$  | $$ /$$__  $$\r\n| $$  | $$|  $$$$$$$| $$ /$$$$$$$/|  $$$$$$$| $$ | $$ | $$|  $$$$$$$| $$  | $$|  $$$$$$$\r\n|__/  |__/ \\_______/|__/|_______/  \\_______/|__/ |__/ |__/ \\_______/|__/  |__/ \\_______/\r\n\r\n        Campaign: Mana - Night Club Manager: Violet Vibe\r\n        Token: MNCMVV \r\n        by Codeaddict\r\n        v1.0                                                                                                                                                                                                                                                                    \r\n */\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    function changeOwner(address newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"RAISEMANA: Only the contract owner is allowed to called requested function.\");\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Erc20Token is Owned {\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public onlyOwner returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public onlyOwner returns (bool success);\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract RaisemanaCampaignToken is Erc20Token {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public constant decimals = 0;\r\n\r\n    uint _totalSupply;\r\n    mapping(address => uint) _balanceOf;\r\n    mapping(address => mapping(address => uint)) _allowance;\r\n\r\n    constructor(string tokenName, string tokenSymbol, uint maximumTotalSupply) public {\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n        _totalSupply = maximumTotalSupply;\r\n        _balanceOf[msg.sender] = _totalSupply;\r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n    }\r\n\r\n    function totalSupply() public view returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n        return _balanceOf[tokenOwner];\r\n    }\r\n\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n        return _allowance[tokenOwner][spender];\r\n    }\r\n\r\n    function transfer(address to, uint value) public onlyOwner returns (bool success){\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint value) public onlyOwner returns (bool success) {\r\n        require(_allowance[from][msg.sender] >= value, \"ERC20: transfer amount exceeds allowance.\");\r\n        _allowance[from][msg.sender] -= value;\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint value) public returns (bool success) {\r\n        require(spender == owner, \"RAISEMANA: The only one autorized entity to have allowence for transfer tokens is Raisemana.\");\r\n        _allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function endOfTheCampaignContract(address tokenOwner) public onlyOwner returns (bool success) {\r\n        require(tokenOwner != owner, \"RAISEMANA: Cannot end campaign contract for the owner.\");\r\n        uint balance = _balanceOf[tokenOwner];\r\n        _transfer(tokenOwner, msg.sender, balance);\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address from, address to, uint value) internal {\r\n        require(to != 0x0, \"ERC20: transfer to the zero address.\");\r\n        require(_balanceOf[from] >= value, \"ERC20: transfer amount exceeds balance.\");\r\n        require(_balanceOf[to] + value >= _balanceOf[to], \"ERC20: transfer amount exceeds balance.\");\r\n\r\n        uint previousBalance = _balanceOf[from] + _balanceOf[to];\r\n        _balanceOf[from] -= value;\r\n        _balanceOf[to] += value;\r\n\r\n        emit Transfer(from, to, value);\r\n        assert(_balanceOf[from] + _balanceOf[to] == previousBalance);\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"endOfTheCampaignContract\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"maximumTotalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "RaisemanaCampaignToken", "CompilerVersion": "v0.4.25+commit.59dbf8f1", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000927c000000000000000000000000000000000000000000000000000000000000000264d616e61202d204e6967687420436c7562204d616e616765723a2056696f6c65742056696265000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064d4e434d56560000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://63bd234f03df4481ea196eef0667e22ecf027236efaff1836963559248e85f24"}