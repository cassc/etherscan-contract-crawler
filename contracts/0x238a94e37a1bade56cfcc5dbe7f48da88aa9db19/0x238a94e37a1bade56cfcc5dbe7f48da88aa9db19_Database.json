{"SourceCode": "/**\r\n *Submitted for verification at Etherscan.io on 2023-12-01\r\n*/\r\n\r\n//SPDX-License-Identifier: Apache-2.0\r\npragma solidity 0.8.14;\r\n\r\ninterface IAuth {\r\n    function isAuthorized(address account) external view returns (bool); \r\n}\r\n\r\ninterface IKYC {\r\n    function isVerified(address account) external view returns (bool);\r\n}\r\n\r\ncontract Database {\r\n\r\n    // Authenticator Contract\r\n    IAuth public Auth;\r\n\r\n    // KYC Verification Contract\r\n    IKYC public KYC;\r\n\r\n    // Database Owner, Controls Everything\r\n    address public owner;\r\n\r\n    // Only Authenticated Users Can Change Database Values\r\n    modifier onlyOwner() {\r\n        require(\r\n            owner == msg.sender,\r\n            'Only Database Owner Can Call'\r\n        );\r\n        _;\r\n    }\r\n\r\n    // Events\r\n    event OwnerChanged(address oldOwner, address newOwner);\r\n    event AuthChanged(address oldAuth, address newAuth);\r\n    event KYCChanged(address oldKYC, address newKYC);\r\n\r\n    // initialize owner\r\n    constructor(address initialOwner){\r\n        owner = initialOwner;\r\n        emit OwnerChanged(address(0), initialOwner);\r\n    }\r\n\r\n    /**\r\n        Sets The Database Owner\r\n     */\r\n    function changeOwner(address newOwner) external onlyOwner {\r\n        emit OwnerChanged(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    /**\r\n        Sets KYC Verification Contract\r\n     */\r\n    function setKYC(IKYC KYC_) external onlyOwner {\r\n        require(\r\n            address(KYC_) != address(0),\r\n            'Zero Address'\r\n        );\r\n        emit KYCChanged(address(KYC), address(KYC_));\r\n        KYC = KYC_;\r\n    }\r\n\r\n    /**\r\n        Sets Authentication Contract\r\n     */\r\n    function setAuth(IAuth Auth_) external onlyOwner {\r\n        require(\r\n            address(Auth_) != address(0),\r\n            'Zero Address'\r\n        );\r\n        emit AuthChanged(address(Auth), address(Auth_));\r\n        Auth = Auth_;\r\n    }\r\n\r\n    /**\r\n        Returns true if `account` is Authorized, False Otherwise\r\n     */\r\n    function isAuthorized(address account) external view returns (bool) {\r\n        return Auth.isAuthorized(account) || account == owner;\r\n    }\r\n\r\n    /**\r\n        Returns true if `account` has been KYC Verified, False Otherwise\r\n     */\r\n    function isVerified(address account) external view returns (bool) {\r\n        return KYC.isVerified(account) || account == owner;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAuth\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAuth\",\"type\":\"address\"}],\"name\":\"AuthChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldKYC\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newKYC\",\"type\":\"address\"}],\"name\":\"KYCChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Auth\",\"outputs\":[{\"internalType\":\"contract IAuth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KYC\",\"outputs\":[{\"internalType\":\"contract IKYC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuth\",\"name\":\"Auth_\",\"type\":\"address\"}],\"name\":\"setAuth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IKYC\",\"name\":\"KYC_\",\"type\":\"address\"}],\"name\":\"setKYC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Database", "CompilerVersion": "v0.8.14+commit.80d49f37", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000cc4bb0428aba70f9a2b3132feddd2a6c6e3fa546", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f115ba83f1bcff22c7335d8c596131ca34e9dc779915be3ff618e659008195d5"}