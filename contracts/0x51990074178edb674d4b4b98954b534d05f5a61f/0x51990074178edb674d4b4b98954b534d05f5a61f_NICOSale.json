{"SourceCode": "pragma solidity ^0.8.0;\r\n\r\ninterface AggregatorV3Interface {\r\n    function decimals() external view returns (uint8);\r\n\r\n    function description() external view returns (string memory);\r\n\r\n    function version() external view returns (uint256);\r\n\r\n    function getRoundData(uint80 _roundId)\r\n        external\r\n        view\r\n        returns (\r\n            uint80 roundId,\r\n            int256 answer,\r\n            uint256 startedAt,\r\n            uint256 updatedAt,\r\n            uint80 answeredInRound\r\n        );\r\n\r\n    function latestRoundData()\r\n        external\r\n        view\r\n        returns (\r\n            uint80 roundId,\r\n            int256 answer,\r\n            uint256 startedAt,\r\n            uint256 updatedAt,\r\n            uint80 answeredInRound\r\n        );\r\n}\r\n\r\n// File: NICOsale.sol\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n}\r\n\r\ncontract NICOSale {\r\n    address public taxReceiver = 0x26684D7Dd3934aea7873C8567a1Ea56B3B58Abb9 ;\r\n    address public admin;\r\n    IERC20 public NICOToken;\r\n    IERC20 public usdcToken;\r\n    AggregatorV3Interface internal ethUsdPriceFeed;\r\n    uint256 public tokenPrice = 0.35 * 1e6; // 1 NICO = 0.35 usdc\r\n\r\n    event TokensPurchased(\r\n        address indexed buyer,\r\n        uint256 amount,\r\n        uint256 totalPrice\r\n    );\r\n\r\n    constructor(\r\n        address _NICOTokenAddress,\r\n        address _usdcTokenAddress,\r\n        address _ethUsdPriceFeedAddress\r\n    ) {\r\n        admin = msg.sender;\r\n        NICOToken = IERC20(_NICOTokenAddress);\r\n        usdcToken = IERC20(_usdcTokenAddress);\r\n         ethUsdPriceFeed = AggregatorV3Interface(_ethUsdPriceFeedAddress);\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"Only admin can call this function\");\r\n        _;\r\n    }\r\n\r\n    function setTokenPrice(uint256 _tokenPrice) external onlyAdmin {\r\n        tokenPrice = _tokenPrice;\r\n    }\r\n\r\n    function buyTokens(uint256 numberOfTokens) external {\r\n        uint256 totalPrice = numberOfTokens * tokenPrice;\r\n        require(\r\n            NICOToken.balanceOf(msg.sender) >= numberOfTokens,\r\n            \"Insufficient NICO balance\"\r\n        );\r\n        require(\r\n            usdcToken.transferFrom(\r\n                msg.sender,\r\n                taxReceiver,\r\n                totalPrice / 10**18\r\n            ),\r\n            \"Token transfer failed\"\r\n        );\r\n        require(\r\n            NICOToken.transfer(msg.sender, numberOfTokens),\r\n            \"Token transfer to buyer failed\"\r\n        );\r\n        emit TokensPurchased(msg.sender, numberOfTokens, totalPrice);\r\n    }\r\n\r\n    function getEthPriceInUSD() public view returns (uint256) {\r\n        (, int256 price, , , ) = ethUsdPriceFeed.latestRoundData();\r\n        return uint256(price);\r\n    }\r\n\r\n    function buyTokensInEth(uint256 ethAmount) external payable {\r\n        uint256 ethPriceInUSD = getEthPriceInUSD() / 10**8;\r\n        uint256 ethAmountInWei = ethAmount * 10**18;\r\n        uint256 totalPriceInCents = (ethAmountInWei * ethPriceInUSD) / 1 ether;\r\n        uint256 numberOfTokens = (totalPriceInCents * 100) / 35; // 1 token = 0.35 USD\r\n        require(msg.value >= ethAmount, \"Insufficient ETH sent\");\r\n        payable(taxReceiver).transfer(msg.value);\r\n        require(\r\n            NICOToken.transfer(msg.sender, numberOfTokens),\r\n            \"Token transfer to buyer failed\"\r\n        );\r\n        emit TokensPurchased(msg.sender, numberOfTokens, ethAmount);\r\n    }\r\n\r\n \r\n    function withdrawERC20(IERC20 _address) external onlyAdmin {\r\n        uint256 contractBalance = _address.balanceOf(address(this));\r\n        require(\r\n            _address.transfer(admin, contractBalance),\r\n            \"Funds withdrawal failed\"\r\n        );\r\n    }\r\n\r\n    function withdrawFundsETH() external onlyAdmin {\r\n        payable(admin).transfer(address(this).balance);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NICOTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ethUsdPriceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalPrice\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NICOToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokensInEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthPriceInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFundsETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "NICOSale", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000026f2b2507de128d0c2f3f36511e49a4dcefd79f6000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000005f4ec3df9cbd43714fe2740f5e3616155c5b8419", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c7a3e9de9c563ed6c21aaf86a346ef2d98304c51b7c92bb8eac36adc9aa13095"}