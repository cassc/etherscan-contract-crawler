{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/MevEthRateProvider.sol\": {\r\n      \"content\": \"/// SPDX-License-Identifier: SSPL-1.-0\\n\\n/**\\n * @custom:org.protocol='mevETH LST Protocol'\\n * @custom:org.security='mailto:security@manifoldfinance.com'\\n * @custom:org.vcs-commit=$GIT_COMMIT_SHA\\n * @custom:org.vendor='CommodityStream, Inc'\\n * @custom:org.schema-version=\\\"1.0\\\"\\n * @custom.org.encryption=\\\"manifoldfinance.com/.well-known/pgp-key.asc\\\"\\n * @custom:org.preferred-languages=\\\"en\\\"\\n */\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"src/interfaces/IRateProvider.sol\\\";\\nimport \\\"src/interfaces/IMevEth.sol\\\";\\n\\n/**\\n * @title MevEth Rate Provider\\n * @notice Returns the value of mevETH in terms of ETH\\n */\\ncontract MevEthRateProvider is IRateProvider {\\n    /// @notice The address of the mevETH contract\\n    IMevEth public immutable mevETH;\\n\\n    /// @notice Constructs the MevETHRateProvider contract, setting the mevETH address\\n    constructor(IMevEth _mevETH) {\\n        mevETH = _mevETH;\\n    }\\n\\n    /// @notice Returns the value of mevETH in terms of ETH\\n    /// @return the value of mevETH in terms of ETH\\n    function getRate() external view override returns (uint256) {\\n        return mevETH.convertToAssets(1 ether);\\n    }\\n}\\n\"\r\n    },\r\n    \"src/interfaces/IRateProvider.sol\": {\r\n      \"content\": \"/// SPDX-License-Identifier: SSPL-1.-0\\n\\n/**\\n * @custom:org.protocol='mevETH LST Protocol'\\n * @custom:org.security='mailto:security@manifoldfinance.com'\\n * @custom:org.vcs-commit=$GIT_COMMIT_SHA\\n * @custom:org.vendor='CommodityStream, Inc'\\n * @custom:org.schema-version=\\\"1.0\\\"\\n * @custom.org.encryption=\\\"manifoldfinance.com/.well-known/pgp-key.asc\\\"\\n * @custom:org.preferred-languages=\\\"en\\\"\\n */\\n\\npragma solidity ^0.8.19;\\n\\n/// @title IRateProvider\\ninterface IRateProvider {\\n    /**\\n     * getRate()\\n     *\\n     * @dev Returns the current rate of a given asset.\\n     * @return uint256 The current rate of the asset.\\n     */\\n    function getRate() external view returns (uint256);\\n}\\n\"\r\n    },\r\n    \"src/interfaces/IMevEth.sol\": {\r\n      \"content\": \"/// SPDX-License-Identifier: SSPL-1.-0\\n\\n/**\\n * @custom:org.protocol='mevETH LST Protocol'\\n * @custom:org.security='mailto:security@manifoldfinance.com'\\n * @custom:org.vcs-commit=$GIT_COMMIT_SHA\\n * @custom:org.vendor='CommodityStream, Inc'\\n * @custom:org.schema-version=\\\"1.0\\\"\\n * @custom.org.encryption=\\\"manifoldfinance.com/.well-known/pgp-key.asc\\\"\\n * @custom:org.preferred-languages=\\\"en\\\"\\n */\\n\\npragma solidity ^0.8.19;\\n\\n/// @title IMevEth\\ninterface IMevEth {\\n    /**\\n     * convertToAssets()\\n     *\\n     * @dev Converts a given number of shares to assets.\\n     * @param shares The number of shares to convert.\\n     * @return The number of assets.\\n     */\\n    function convertToAssets(uint256 shares) external view returns (uint256);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"@openzeppelin/=lib/openzeppelin-contracts/\",\r\n      \"ds-test/=lib/forge-std/lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"properties/=lib/properties/contracts/\",\r\n      \"safe-contracts/=lib/safe-tools/lib/safe-contracts/contracts/\",\r\n      \"safe-tools/=lib/safe-tools/src/\",\r\n      \"solady/utils/=lib/solady/src/utils/\",\r\n      \"solmate/=lib/solmate/src/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 512,\r\n      \"details\": {\r\n        \"constantOptimizer\": true,\r\n        \"yul\": true,\r\n        \"yulDetails\": {\r\n          \"stackAllocation\": true\r\n        }\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"none\",\r\n      \"appendCBOR\": false\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"viaIR\": true,\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract IMevEth\",\"name\":\"_mevETH\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mevETH\",\"outputs\":[{\"internalType\":\"contract IMevEth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MevEthRateProvider", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "512", "ConstructorArguments": "00000000000000000000000024ae2da0f361aa4be46b48eb19c91e02c5e4f27e", "EVMVersion": "london", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}