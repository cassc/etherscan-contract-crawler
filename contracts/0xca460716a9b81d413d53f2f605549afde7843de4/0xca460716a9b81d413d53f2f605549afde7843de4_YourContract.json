{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"contracts/YourContract.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\n/*\\n                                                                                    \\n  ####   ####  #    #  ####  #        ##   #####   ####  #    # # #####                   \\n #      #    # #    # #    # #       #  #  #    # #      #    # # #    #                  \\n  ####  #      ###### #    # #      #    # #    #  ####  ###### # #    #                  \\n      # #      #    # #    # #      ###### #####       # #    # # #####                   \\n #    # #    # #    # #    # #      #    # #   #  #    # #    # # #                       \\n  ####   ####  #    #  ####  ###### #    # #    #  ####  #    # # #                       \\n                                                                                          \\n                                                                                          \\n     #####  #    # # #####  #       ####  #    # # #####  #           ####   ####  #    # \\n     #    # #    # # #    # #      #    # #    # # #    # #          #    # #    # ##  ## \\n     #####  #    # # #    # #      #      #    # # #    # #          #      #    # # ## # \\n ### #    # #    # # #    # #      #  ### #    # # #    # #      ### #      #    # #    # \\n ### #    # #    # # #    # #      #    # #    # # #    # #      ### #    # #    # #    # \\n ### #####   ####  # #####  ######  ####   ####  # #####  ###### ###  ####   ####  #    # \\n                                                                                          \\n */\\ncontract ENSContract {\\n\\tfunction setName(string memory newName) public {\\n\\t\\t//do something\\n\\t}\\n}\\ncontract IERC20 {\\n\\tfunction transfer(address recipient, uint256 amount) public returns (bool) {\\n\\t\\t//do something\\n\\t}\\n}\\n\\ncontract IERC721 {\\n\\tfunction transferFrom(address from, address to, uint256 tokenId) public {\\n\\t\\t//do something\\n\\t}\\n}\\n\\ncontract YourContract {\\n\\n\\taddress public immutable owner = 0x34aA3F359A9D614239015126635CE7732c18fDF3;\\n\\tENSContract public immutable ensContract = ENSContract(0xa58E81fe9b61B5c3fE2AFD33CF304c454AbFc7Cb);\\n\\n\\tfunction setName(string memory newName) public {\\n\\t\\trequire(msg.sender == owner, \\\"Only the owner can change the name\\\");\\n\\t\\tensContract.setName(newName);\\n\\t}\\n\\n\\tfunction transferERC20(address tokenAddress, address recipient, uint256 amount) public {\\n\\t\\trequire(msg.sender == owner, \\\"Only the owner can transfer ERC20\\\");\\n\\t\\tIERC20(tokenAddress).transfer(recipient, amount);\\n\\t}\\n\\n\\tfunction transferERC721(address tokenAddress, address recipient, uint256 tokenId) public {\\n\\t\\trequire(msg.sender == owner, \\\"Only the owner can transfer ERC721\\\");\\n\\t\\tIERC721(tokenAddress).transferFrom(address(this), recipient, tokenId);\\n\\t}\\n\\n\\tmapping(address => bool) public canSendEther;\\n\\n\\tconstructor() {\\n\\t\\tcanSendEther[owner] = true;\\n\\t}\\n\\n\\tevent CanSendEther(address indexed user, bool canSend);\\n\\n\\tfunction setCanSendEther(address user, bool canSend) public {\\n\\t\\trequire(msg.sender == owner, \\\"Only the owner can change the name\\\");\\n\\t\\tcanSendEther[user] = canSend;\\n\\t\\temit CanSendEther(user, canSend);\\n\\t}\\n\\n\\tevent EtherSent(address indexed recipient, uint256 amount);\\n\\n\\tfunction sendEther(address payable recipient, uint256 amount) public {\\n\\t\\trequire(canSendEther[msg.sender], \\\"You are not allowed to send Ether\\\");\\n\\t\\t(bool success,) = recipient.call{value: amount}(\\\"\\\");\\n\\t\\trequire(success, \\\"Failed to send Ether\\\");\\n\\t\\temit EtherSent(recipient, amount);\\n\\t}\\n\\n\\treceive() external payable {}\\n}\\n\"\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"canSend\",\"type\":\"bool\"}],\"name\":\"CanSendEther\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canSendEther\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ensContract\",\"outputs\":[{\"internalType\":\"contract ENSContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"canSend\",\"type\":\"bool\"}],\"name\":\"setCanSendEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "YourContract", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "london", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}