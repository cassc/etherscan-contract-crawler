{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/HypeRegistry.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.6.0 <0.8.0;\\n\\ncontract HypeRegistry {\\n    \\n    address public owner;\\n    address[] public registry;\\n    mapping(address=>uint256) public registryMap;\\n    int256 public counter;\\n    \\n    event HypeAdded(address hype, uint256 index);\\n    event HypeRemoved(address hype, uint256 index);\\n    \\n    constructor() {\\n        owner = msg.sender;    \\n    }\\n    \\n    function add(address hype) external {\\n        require(msg.sender == owner,\\\"only owner\\\");\\n        require(registryMap[hype]==0, \\\"exists\\\");\\n        registry.push(hype);\\n        registryMap[hype] = registry.length;\\n        counter++;\\n        emit HypeAdded(hype, registry.length-1);\\n    }\\n    \\n    function addMany(address[] memory hypes) external {\\n        require(msg.sender == owner,\\\"only owner\\\");\\n        for(uint256 i=0; i<hypes.length; i++) {\\n            if(registryMap[hypes[i]]!=0) continue;\\n            registry.push(hypes[i]);\\n            registryMap[hypes[i]] = registry.length;\\n            counter++;\\n            emit HypeAdded(hypes[i], registry.length-1);\\n        }\\n    }\\n\\n    function remove(address hype) external {\\n        require(msg.sender == owner,\\\"only owner\\\");\\n        require(registryMap[hype]!=0, \\\"not exists\\\");\\n        emit HypeRemoved(hype, registryMap[hype]-1);\\n        registryMap[hype] = 0;\\n        counter--;\\n    }\\n    \\n    function hypeByIndex(uint256 index) external view returns (address, uint256){\\n        return (registry[index], registryMap[registry[index]]);\\n    }\\n    \\n    function transferOwnership(address newOwner) external {\\n        require(msg.sender == owner, \\\"only owner\\\");\\n        owner = newOwner;\\n    }\\n\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 800\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"none\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"hype\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"HypeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"hype\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"HypeRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hype\",\"type\":\"address\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"hypes\",\"type\":\"address[]\"}],\"name\":\"addMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"hypeByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registryMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hype\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "HypeRegistry", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "1", "Runs": "800", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}