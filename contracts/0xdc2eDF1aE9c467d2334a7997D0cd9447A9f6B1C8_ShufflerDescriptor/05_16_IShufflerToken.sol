// SPDX-License-Identifier: GPL-3.0

/// @title Interface for ShufflerToken

/**************************************************************************
...........................................................................
...........................................................................
...........................................................................
...........................................................................
.....................     ...............      .......      ...............
...................  .?5?:  ........... .::::::. ... .:::::.  .............
.................  :?B&@&B?:  ....... .^7??????!:. .~7??????~: ............
...............  :J#&&&&&&&#J:  .....^7??????JJJ?!!7????JJJ?J?!............
.............  ^Y#&&&&&&&&&&&#Y^  .. !J??YGGP^^~?JJ?5GGJ^^~????: ..........
...........  ^5&@&&&&&&&&&&&&&@&5~   [email protected]@B. [email protected]@Y  :????:...........
.......... :5&&BBB###&&&&#BBB###&&P: [email protected]@B. [email protected]@Y  :???7............
......... ^P&&#:..7J?G&&&5..:??J#&&G~ ~??J55Y!!!????Y5PJ!!!??7.............
......... [email protected]&&#.  7??G&&&5  :??J#&&@7  ^?????JJJ????????JJJ?7..............
......... [email protected]&&#~^^JYJB&&&P^^~JYY#&&@7 ..:~?J??????????????7^...............
......... :JB&&&&&&&&B#&#B&&&&&&&&#J: ..  .~?J????????J?!:. ...............
..........  :?BBBBBB5YB&BY5BBBBBB?:  .....  .~77???J?7!:. .................
............  ....^Y#@@&@@#Y^....  .......... ..^!7~:.. ...................
..............   .!777???777!.   ............   :^^^.   ...................
..................  .^7?7^.  .............. .~Y5#&&&G57: ..................
................  :~???????~:  .............!&&&&&&&&@@5:..................
.............. .:!?J???????J?!:  ......... ~&&&&&&&&&&&@5 .................
............ .:!??JJJ????????J?!:. ......  ^B&&&&&&&&&&&J  ................
............^!JGBG!^^7???YBBP^^~?!^. .   .^^~YG&&&&&&#57^^:   .............
......... :7??J&&&^  [email protected]@B. .?J?7: :?5G&&&#PY#&&&P5B&&&#5Y^ ............
...........~7?J&&&^  [email protected]@B. .?J?~.:Y&@G77?555#&&&Y!7J55P&&#~............
........... .^75557!!7???J55Y!!!7~.  [email protected]&&5  .???#&&&7  ^??Y&&&&: ..........
............. .^7?JJ?????????J7^. .. J&&&5  .??J#&&&7  ^??Y&&&G: ..........
............... .^7?J???????7^. ..... ?#@#55PBG5#&&&5J5PBBB&&P: ...........
................. .:!?JJJ?!:. ........ ^!JBBBGYP&&&&B5PBBBP!!. ............
................... .:!7!:. ...........   ..:JGBGGGGBG5~ ..   .............
..................... ... ................. ............ ..................
...........................................................................
...........................................................................
...........................................................................
...........................................................................
***************************************************************************/

pragma solidity ^0.8.6;

import { IShufflerDescriptor } from './IShufflerDescriptor.sol';

interface IShufflerToken {
    event ShufflerCreated(address indexed creator, uint256 indexed startTokenId, uint256 indexed endTokenId);
    
    event NftOverridden(uint256 indexed tokenId, address indexed override_contract, uint256 indexed override_token_id);

    event DescriptorUpdated(IShufflerDescriptor descriptor);

    event DescriptorLocked();

    event SeedsLocked();

    event SeedsAdded(uint256[] seeds);

    event Reveal(uint64 offset);

    struct Seed {
        uint48 background;
        uint48 card;
        uint48 side;
        uint48 corner;
        uint48 center;
        address override_contract;
        uint64 override_token_id;
    }

    function setTreasury(address payable _treasury) external;

    function lockSeeds() external;

    function areSeedsLocked() external returns (bool);

    function addManySeeds(uint256[] calldata seeds) external;

    function seedCount() external view returns (uint256);

    function mint(uint256 count) external payable;

    function ownerMint(address to, uint256 count) external;

    function mintWhiteList(uint256 count, uint256 maxCount, bytes32[] calldata merkleProof) external payable;

    function reveal() external;

    function setDescriptor(IShufflerDescriptor descriptor) external;

    function lockDescriptor() external;

    function withdraw() external;

    function setComposePrice(uint256 _price) external;

    function setOverrideNft(uint256 tokenId, address override_contract, uint64 override_token_id) external payable;

    function removeOverrideNft(uint256 tokenId) external;
}