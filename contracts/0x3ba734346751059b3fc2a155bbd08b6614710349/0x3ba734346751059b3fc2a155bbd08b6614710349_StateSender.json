{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/interfaces/IStateSender.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\ninterface IStateSender {\\n    function syncState(address receiver, bytes calldata data) external;\\n}\\n\"\r\n    },\r\n    \"contracts/root/StateSender.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\nimport \\\"../interfaces/IStateSender.sol\\\";\\n\\ncontract StateSender is IStateSender {\\n    uint256 public constant MAX_LENGTH = 2048;\\n    uint256 public counter;\\n\\n    event StateSynced(uint256 indexed id, address indexed sender, address indexed receiver, bytes data);\\n\\n    /**\\n     *\\n     * @notice Generates sync state event based on receiver and data.\\n     * Anyone can call this method to emit an event. Receiver on Polygon should add check based on sender.\\n     *\\n     * @param receiver Receiver address on Polygon chain\\n     * @param data Data to send on Polygon chain\\n     *\\n     */\\n    function syncState(address receiver, bytes calldata data) external {\\n        // check receiver\\n        require(receiver != address(0), \\\"INVALID_RECEIVER\\\");\\n        // check data length\\n        require(data.length <= MAX_LENGTH, \\\"EXCEEDS_MAX_LENGTH\\\");\\n\\n        // State sync id will start with 1\\n        emit StateSynced(++counter, msg.sender, receiver, data);\\n    }\\n\\n    // slither-disable-next-line unused-state,naming-convention\\n    uint256[50] private __gap;\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 115\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"StateSynced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"syncState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "StateSender", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "115", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}