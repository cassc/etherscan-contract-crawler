{"SourceCode": "/**\r\n\r\nThe official contract to manage and operate the FlappyBet game\r\n\r\nNetwork: Main ETH\r\nVersion 1.0 (Launch)\r\nflappybet.io\r\n\r\n*/\r\n\r\npragma solidity ^0.5.0;\r\n\r\ncontract FlappyBetGame {\r\n    uint public silverScore = 10;\r\n    uint public goldScore = 40;\r\n    uint public fee = 1 finney;\r\n    uint public silverPrize = 1 finney;\r\n    uint public goldPrize = 5 finney;\r\n    uint public newRecordPrize = 10 finney;\r\n    address public owner;\r\n\r\n    uint[] public price = [0, 10 finney, 30 finney, 40 finney, 50 finney, 1 ether];\r\n    mapping (address => bool) public isPlaying;\r\n\r\n    mapping (address => mapping (uint => bool)) public ownedBirds;\r\n    mapping (address => uint) public usingBird;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, 'only contract owner can peform this');\r\n        _;\r\n    }\r\n\r\n    constructor () public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function setSilverPrize(uint prize)\r\n        public\r\n    {\r\n        silverPrize = prize;\r\n    }\r\n\r\n    function setGoldPrize(uint prize)\r\n        public\r\n    {\r\n        goldPrize = prize;\r\n    }\r\n\r\n    function setNewRecordPrize(uint prize)\r\n        public\r\n    {\r\n        newRecordPrize = prize;\r\n    }\r\n\r\n    function getUsingBird()\r\n        public\r\n        view\r\n        returns (uint)\r\n    {\r\n        return usingBird[msg.sender];\r\n    }\r\n\r\n    function useBird(uint birdId)\r\n        public\r\n    {\r\n        require(birdId < price.length, 'invalid birdId');\r\n        require(ownedBirds[msg.sender][birdId] || birdId == 0, 'this bird is not yours');\r\n        usingBird[msg.sender] = birdId;\r\n    }\r\n\r\n    function play()\r\n        public\r\n        payable\r\n    {\r\n        // require(!isPlaying[msg.sender], 'player must not in game');\r\n        require(msg.value >= fee, 'you must pay for playing');\r\n        if (msg.value > fee) {\r\n            msg.sender.transfer(msg.value - fee);\r\n        }\r\n        isPlaying[msg.sender] = true;\r\n    }\r\n\r\n    function endGame(uint score)\r\n        public\r\n    {\r\n        require(isPlaying[msg.sender], 'player must be in game');\r\n        isPlaying[msg.sender] = false;\r\n        if (score >= goldScore) {\r\n            msg.sender.transfer(goldPrize);\r\n        } else if (score >= silverScore) {\r\n            msg.sender.transfer(silverPrize);\r\n        }\r\n    }\r\n\r\n    function quit()\r\n        public\r\n    {\r\n        isPlaying[msg.sender] = false;\r\n    }\r\n\r\n    function purchase(uint birdId)\r\n        public\r\n        payable\r\n    {\r\n        require(msg.value >= price[birdId], 'value is not enough');\r\n        require(birdId < price.length, 'invalid birdId');\r\n       ownedBirds[msg.sender][birdId] = true;\r\n    }\r\n\r\n    function getMyBirds() public view returns (bool, bool, bool, bool, bool, bool)\r\n    {\r\n        return (true, ownedBirds[msg.sender][1], ownedBirds[msg.sender][2], ownedBirds[msg.sender][3], ownedBirds[msg.sender][4], ownedBirds[msg.sender][5]);\r\n    }\r\n\r\n    function withdrawal(uint amount)\r\n        public\r\n        onlyOwner\r\n    {\r\n        require(amount < address(this).balance, 'amount must be less than contract balance');\r\n        selfdestruct(msg.sender);\r\n    }\r\n\r\n    function destroy()\r\n        public\r\n        onlyOwner\r\n    {\r\n        selfdestruct(msg.sender);\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"birdId\",\"type\":\"uint256\"}],\"name\":\"useBird\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUsingBird\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"setGoldPrize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"usingBird\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goldScore\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newRecordPrize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyBirds\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"play\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goldPrize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"silverScore\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"setSilverPrize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPlaying\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownedBirds\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"endGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"setNewRecordPrize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"silverPrize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"birdId\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"quit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]", "ContractName": "FlappyBetGame", "CompilerVersion": "v0.5.0+commit.1d4f565a", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://cef527135a00f522ea0a15044810af93748879a38ea242263b104262c0667619"}