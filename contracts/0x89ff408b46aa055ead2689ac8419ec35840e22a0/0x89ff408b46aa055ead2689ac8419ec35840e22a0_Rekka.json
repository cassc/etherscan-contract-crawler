{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Rekka.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: Rekka Uzumaki Collection\\n/// @author: manifold.xyz\\n\\nimport \\\"./manifold/ERC721Creator.sol\\\";\\n\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                                            //\\n//                                                                                                            //\\n//     ``` ````.3??????????????????????????????????????????????1z??Tm,``` ``` ``` ``` ``` ``` ``` ``` ```     //\\n//     ` ``  ` f????????????????????????????????????????1z1zz????zz???N,`` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` `    //\\n//     `` ````(?????????????????????????????????????????1z???zOuz??vz??7N,` ``` ``` ``` ``` ``` ``` ``` ``    //\\n//      `  ` .5????????????=??=??1??????????????????=z????zIzz???vGx?vz??Ta.`` `  ` `  `  ` `  `  ` `  ` `    //\\n//     ``` ` y?????????1?????<??!(???????????????????zZu&z???1Ouz???7Gzvx?zH,``` ``` ````` ``````` ```` `     //\\n//     `` ``.$???????=:(?=??!(?:`.????????????????????G. ?UXx???z6&????Sc4x?dp``` ``` ` ``` ` ` ``` ` ````    //\\n//     `` ` K????????+`(>+?>`+>```<??????????????????=zn```.4Jnx???vGz???nJn??h.`` ` `` ` `` ` ` ` `` ` ``    //\\n//     ``` .D???????=:`( <<``< `` +????????????????????I|`` ` 4/4x???zSz???mXxzN.`` `` `` ``````` `` ``` `    //\\n//     ` ``d1???????<````````  ` .??????????????????=??d(``` ``.1,4x???vnz?1WykzN,`` `` ``  `  ` `` ` ` `     //\\n//     ``  #???????=:`` .` .``` `.??1??????????????=z??z;; `` ```(,(4z???Ze??dk4zN.` ` ` `` `` `` `` ` ```    //\\n//     ```.@??????=?```(<.+<`_ ``+??z??????????????zb???]1` ` ` ``.l ?k=??z4??dkWdN.``` ` `` `` ` ` ``` `     //\\n//     ` `.b???=???>```+?(??<<`` ???I?==??=?=?=?=??d@???I,`` ``` ` .o.(Ue???4z?ddkdb`` `` ` ` `` `` ` `` `    //\\n//     `` -D???????:`  ??z????_` ???I??j???????????dK??=z._ ..JYBmXY\\\"5<!jhz??4z?WXfKb``` ``` ` `` `` ` ``     //\\n//     ```($???????_`` ??1????:` ??jI??1Z=?????????dW???d g81gV\\\"`````.-` <Ux??S?JfNWd[` `` ```` `` ```` ``    //\\n//     `` JI??????? `` ??z??z?>` ??dv???S??????&=??dX???d dd=```` ``., .P`jMs??y?RdK?d,`` ` ` `` `` `` ``     //\\n//     ```JI??????<``  ??z??z??  ??d=???d?????=H???dd???Z :``` `` `.dL.Mb.N5dgkM?Xz#??N.```` `` `` ` .`` `    //\\n//     ` `J$??????>` ` ??zI?z??_ ??d????dz????jH???XX???].  ` `..7gMNMMMMMNMMMzd?KjMp?JN   `` ` ` `` .` ``    //\\n//     `` -R??????>`.  ??zR?z??: ??d????d=????dd???bk??j>/`` .\\\"_(NMHN2!``.N@(d=djDd@Mx?db`` `` `````.?_``     //\\n//     ```,b??=?=?> +<.??zb?1I?< ??d????dz????dd??jDK??v.!` `!.MM01=?W `` M\\\\.d=KdqM@@N?zM,`` ``  ` `.<  ``    //\\n//     `` ,b??????>.?????1N??I??_??dz???H???=?kk??dzb?j\\\\/````.N8dN???z_` `\\\"`.XdEHM@@@Mp?dD`` ````` ``` ``     //\\n//     ```,@??????<.??????H2?z??_<?dI??j#????d6b?1Kd$?2.``   MM??1???d```` `.bMdM@@g@@NzzM-`` `` `` ` `` `    //\\n//     ` `.#???????+??????Wb?dz?<(?zR??d3???1Kd6?dld1d`_```` @,y????u%` `J``(#MM@@@@@@Hb?db`` `` `` `` ```    //\\n//     ``  N??????????????dN??0??(?1b?=K????dld?dSldj^``  `` `` ?Cv\\\"``..Y~`.#>,N@@gg@@@McdMc`` `` `` `` `     //\\n//     ``.`M??????????????dM2?w?????R?dC??=dOlbu8llR%` ``  ` ` `` ``` ```` .``,NgH@@g@gMb?NM. `  `  `  ` `    //\\n//     ````dz???????=ugwXQgNb?dz????XuD??1dlldG8lldD`` ` `` ` `  `  ` `  `````.NHHgH@@@@N?Wzb` ````` `` `     //\\n//     ` ``JS?????=?d$``  ``(??D????dk??u8v1ld8z!1! ` ` ` ```` `` `` ``. ,..`` M@@gHgM@gM2dId[` ` ``  `` `    //\\n//     `` `,b???????K`.Z^?T+,y?d???=d1uXIv`(lz! ```` ` ``  ` .``` `` ``.[j,!`` N@@@HH@@@Hbdb?W,` `  `  ` `    //\\n//     `  `.#???????b`Z` ??! 4?zf??jmf1dc `?!``` ` `` ` `` ` =z,`` `  ``^``  `.M@g@g@@M@g@db?zN`` `` `` `     //\\n//     `` _`Mz??????W.S `` (ldx?X????b?d!````  `` ` ` `  `` `?<<!` ``  `  ```.MM@@M@MgH@gMd@??dp`` `` `` `    //\\n//     `` ~`Jf??????zb.4..`?1lb?zy???d?z]`  `` ` ` ` ``` ` ` `` ` ` ``` ````.M@ggg@@M@M@gMdH???W,``  ` ` `    //\\n//     ` `( ,N?=??????h (\\\"3(,-wz?X=??dz?b`` ..`` `` `  `` ` ` `` ``  ` ` ` .MH@@g@@@Mg@@@HNN???zb` `` `` `    //\\n//     ```._`Nz????<??1W, `` =Jb?zf??zR?d.`(.(,``  `` `  `` `  ` ` `` ` ``.Mgg@H@H@gM@g@g@NH?<??d;```  ``     //\\n//     ` ` 1.(p????<????1T9Q+(.(z?q???b?1LJ% ?N,`` ` ``` ` ``` `` ` `` ` .M@@@gMgMg@M@@@@gNH??_?1N` ``` `     //\\n//     ` ``(1_N????>(??????dg@@@b?1b??d?1d!.-,.b` ` `  `` ` ` .?`` ` ``.JMg@@g@@@M@gM@@M@@NN??!<?d|`  ` ``    //\\n//     `` ` !<d2????`(=????Jg@HgMz?dx?JRd^G.,,h-[`` ``  `` ` ``  `` ` .MH@g@@gH@@M@@Mg@MgHM#??_(?zE``` ` `    //\\n//     ` ```` ?b????  1?????W@@@@b??4??W#J_`.b,|N. ````` `` ` ``  ```.M@@H@M@@M@gM@gM@@M@M@#??`.??d.` ``      //\\n//     `   ` `.Wz???_`(?????d@@gMMx?1h?dN#_j`(_FJRlOUUu(...``` ````.dMgg@Mg@@HHgH@@H@gg@@MME?>` ??d]`._```    //\\n//     ``` ````(b???<` 1?=???HgMHHb??J2dWE1v`(_F Nl=====llzZU9GjJJMMgg@@M@gM@@@@HggM@gH@gMM$?:``:1?N`.>`      //\\n//     ` ``  ` `Wz??<``.?????d@H@MM2??ddPKh.-^.'`(Kll=llllz<<?!JMggggg@gMgH@HMggM@g@@@M@@MM??~```+?W` <.``    //\\n//     `  ` ` ``,b???;``<?????H@M@MN???W#,m..J3```4[!~` ` `````(Mgggg@gM@@H@M@gM@@@M@@M@MH@??  ` +?d.`(``     //\\n//     ``` ``` ``Ws???.` 1????dHMHMMp=?zM[` ``  `  W,` ` `   ``,M@g@ggMM@HMHM@gM@gHMgHMgMM6?>````+?d_.? ``    //\\n//     ` ` ` ``` .N???< . 1????W@M@MNz??dN-`  `` `` W,`` `` ` `.Ngg@@@M@@M@M@@HM@gM@@M@MM#??:``  ??dI??_`     //\\n//     `` ` ` ` _`JR???> 1.1???zM@MMMNz??dN-`` ` ``` H, ` `` ```Mggg@MHHMHHMgg@@g@M@@M@MMD??` -` ??d`.<```    //\\n//     ` ``` ` ` ` Nz???< <-1???d@M@MMpz??dN& ` `  `` W,` ` `  `dH@gM@@@M@MHgHM@@MgHMg@MM1?> (!`.??# ``` `    //\\n//     `  `````   `,b????1.-1????M@M@MMs???dNe.`` ` `` Up``` ```,Ng@gg@MgM@@@M@g@MM@M@MM@??!.<``.?jF`` .`     //\\n//     `` ``_ :`````ds????1..????JM@MMHMx????Mmi.`` ` ``7k.`` ` `M@@g@M@@MH@M@g@M@@M@@MMz?<.?~``+?d%`` _``    //\\n//     ``  ```(..` ` Mx?????-(????d@MHM@Nx????WNz- ` ` ``(N,``.K4(N@@@HHM@@HMgHHMg@MgMM@??+??.`.??M ` .!``    //\\n//     ```` .. !!``.`.Nz?????<.1???W@M@M@Nx?1aY?Nsz.``  `` Tm.^,, 7NHg@MM@g@@@@Mg@M@@MM1????< .??dF``.?~``    //\\n//     ` ` 1??!` `` ``.Nz??????(1??zM@M@M@Ng#!``.Wmli.``  ``,#``W.`.WNgM@@M@g@Mg@gM@MM@?????!.??1M!` (?` `    //\\n//     `  `` `` ` ``_.`.Hx???????????M@NNHW# ` ```UNzl.`` ``,N`` W,``?MM@M@gg@M@@M@@MM1????>(???dF  .<<`      //\\n//     `` ``` `` ` ``??++Hc??????????dMM^`d#` ``.1=dNs=1.` `.N,```Ta..dMN@@g@M@@HM@MM8????>,???dM?<<!``       //\\n//     ``  ` ` ` `` ``(???W2??????ug#dM>``?#` ``+=ll?Ms=li ``?b` `` ?7` TMNMM@g@Mg@M#=???<.???dN6``... ```    //\\n//                                                                                                            //\\n//                                                                                                            //\\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract Rekka is ERC721Creator {\\n    constructor() ERC721Creator(\\\"Rekka Uzumaki Collection\\\", \\\"Rekka\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/manifold/ERC721Creator.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC721Creator is Proxy {\\n    \\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6;\\n        (bool success, ) = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6.delegatecall(abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol));\\n        require(success, \\\"Initialization failed\\\");\\n    }\\n        \\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"node_modules/@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"@openzeppelin/=node_modules/@openzeppelin/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Rekka", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "london", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0x5133522ea5a0494ecb83f26311a095ddd7a9d4b6", "SwarmSource": ""}