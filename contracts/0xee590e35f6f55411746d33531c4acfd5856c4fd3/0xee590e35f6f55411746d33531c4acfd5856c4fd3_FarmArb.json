{"SourceCode": "pragma solidity ^0.8.20;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IUniswapV2Router01 {\r\n    function swapExactTokensForTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n}\r\n\r\ninterface INoMintRewardPool {\r\n    function migrate() external;\r\n    function exit() external;\r\n}\r\n\r\ninterface IFarmERC20 is IERC20 {\r\n    function withdraw(uint256 numberOfShares) external;\r\n}\r\n\r\ninterface IBalancerVault {\r\n    function flashLoan(\r\n        address recipient,\r\n        address[] memory tokens,\r\n        uint256[] memory amounts,\r\n        bytes memory userData\r\n    ) external;\r\n}\r\n\r\ncontract FarmArb {\r\n    IUniswapV2Router01 router = IUniswapV2Router01(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n    IERC20 usdc = IERC20(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48);\r\n    IERC20 fUsdc = IERC20(0xc3F7ffb5d5869B3ade9448D094d81B0521e8326f);\r\n    INoMintRewardPool pool = INoMintRewardPool(0x4F7c28cCb0F1Dbd1388209C67eEc234273C878Bd);\r\n    IFarmERC20 mFUsdc = IFarmERC20(0xf0358e8c3CD5Fa238a29301d0bEa3D63A17bEdBE);\r\n    IBalancerVault balancerVault = IBalancerVault(0xBA12222222228d8Ba445958a75a0704d566BF2C8);\r\n    uint input;\r\n    uint min;\r\n\r\n    function aaaRun(uint _input, uint _min, uint flash) public {\r\n        input = _input;\r\n        min = _min;\r\n        address[] memory tokens = new address[](1);\r\n        tokens[0] = address(usdc);\r\n\r\n        uint256[] memory amounts = new uint256[](1);\r\n        amounts[0] = flash;\r\n\r\n        balancerVault.flashLoan(address(this), tokens, amounts, \"\");\r\n        usdc.transfer(msg.sender, usdc.balanceOf(address(this)));\r\n    }\r\n\r\n    function receiveFlashLoan(\r\n        IERC20[] memory,\r\n        uint256[] memory amounts,\r\n        uint256[] memory,\r\n        bytes memory\r\n    ) external {\r\n        address[] memory usdcTofUsdc = new address[](2);\r\n        usdcTofUsdc[0] = address(usdc);\r\n        usdcTofUsdc[1] = address(fUsdc);\r\n\r\n        usdc.approve(address(router), input);\r\n        router.swapExactTokensForTokens(\r\n            input,\r\n            min,\r\n            usdcTofUsdc,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n\r\n        fUsdc.approve(address(pool), fUsdc.balanceOf(address(this)));\r\n        pool.migrate();\r\n        pool.exit();\r\n        mFUsdc.withdraw(mFUsdc.balanceOf(address(this)));\r\n\r\n        usdc.transfer(address(balancerVault), amounts[0]);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_input\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flash\",\"type\":\"uint256\"}],\"name\":\"aaaRun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "FarmArb", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0c88513b34c90f10fd862150f0212d823a410ce824d5e454dfd1a31b150d8200"}