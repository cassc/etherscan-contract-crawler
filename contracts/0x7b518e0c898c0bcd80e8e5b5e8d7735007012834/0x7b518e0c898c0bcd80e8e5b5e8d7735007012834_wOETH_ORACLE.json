{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/oracle/External/wOETH_Oracle.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"../IOracleRelay.sol\\\";\\n\\n/*****************************************\\n * This gets USD price on Optimism based on the exchange rate\\n * found on the RocketOvmPriceOracle @ 0x1a8F81c256aee9C640e14bB0453ce247ea0DFE6F\\n * This is a price ported from mainnet and should not be used as a primary oracle on Optimism\\n */\\ninterface IWOETH {\\n  function previewDeposit(uint256 assets) external view returns (uint256 shares);\\n}\\n\\ninterface ICurvePool {\\n  function price_oracle() external view returns (uint256);\\n}\\n\\ncontract wOETH_ORACLE is IOracleRelay {\\n  IWOETH public immutable _priceFeed;\\n  IOracleRelay public immutable _ethOracle;\\n  ICurvePool public immutable _curvePool;\\n\\n  uint256 private constant AMOUNT = 1e18;\\n\\n  ///@param priceFeed should be the wOETH addr\\n  constructor(ICurvePool curvePool, IWOETH priceFeed, IOracleRelay ethOracle) {\\n    _priceFeed = priceFeed;\\n    _ethOracle = ethOracle;\\n    _curvePool = curvePool;\\n  }\\n\\n  function currentValue() external view override returns (uint256) {\\n    uint256 curvePrice = getCurvePrice();\\n    uint256 ethPrice = _ethOracle.currentValue();\\n\\n    //apply wOETH conversion\\n    uint256 priceInOeth = _priceFeed.previewDeposit(AMOUNT);\\n\\n    return ((curvePrice * 1e18) / priceInOeth);\\n  }\\n\\n  ///@notice price_oracle() returns a manipulation resistant EMA price\\n  function getCurvePrice() internal view returns (uint256 cPrice) {\\n    uint256 ethPrice = _ethOracle.currentValue();\\n    uint256 priceInEth = _curvePool.price_oracle();\\n\\n    cPrice = ((ethPrice * 1e18) / priceInEth);\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/oracle/IOracleRelay.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\n/// @title OracleRelay Interface\\n/// @notice Interface for interacting with OracleRelay\\ninterface IOracleRelay {\\n  // returns  price with 18 decimals\\n  function currentValue() external view returns (uint256);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200,\r\n      \"details\": {\r\n        \"orderLiterals\": true,\r\n        \"deduplicate\": true,\r\n        \"cse\": true,\r\n        \"yul\": true\r\n      }\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract ICurvePool\",\"name\":\"curvePool\",\"type\":\"address\"},{\"internalType\":\"contract IWOETH\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"contract IOracleRelay\",\"name\":\"ethOracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_curvePool\",\"outputs\":[{\"internalType\":\"contract ICurvePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ethOracle\",\"outputs\":[{\"internalType\":\"contract IOracleRelay\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_priceFeed\",\"outputs\":[{\"internalType\":\"contract IWOETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "wOETH_ORACLE", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000094b17476a93b3262d87b9a326965d1e91f9c13e7000000000000000000000000dcee70654261af21c44c093c300ed3bb97b781920000000000000000000000008ed31d7ff5d2ffbf17fe3118a61123f50adb523a", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}