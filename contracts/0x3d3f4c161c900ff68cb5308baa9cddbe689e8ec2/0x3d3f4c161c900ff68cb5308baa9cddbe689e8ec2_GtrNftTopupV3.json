{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"GtrNftTopupV3.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.13;\\n\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) { return msg.sender; }\\n    function _msgData() internal view virtual returns (bytes calldata) { return msg.data; }\\n}\\n\\nabstract contract Pausable is Context {\\n    event Paused(address account);\\n    event Unpaused(address account);\\n    bool private _paused;\\n    constructor() { _paused = false; }\\n    function paused() public view virtual returns (bool) { return _paused; }\\n    modifier whenNotPaused() { require(!paused(), \\\"Pausable: paused\\\"); _; }\\n    modifier whenPaused() { require(paused(), \\\"Pausable: not paused\\\"); _; }\\n    function _pause() internal virtual whenNotPaused { _paused = true; emit Paused(_msgSender()); }\\n    function _unpause() internal virtual whenPaused { _paused = false; emit Unpaused(_msgSender()); }\\n}\\n\\nabstract contract Ownable is Context {\\n    address private _owner;\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    constructor() { _transferOwnership(_msgSender()); }\\n    function owner() public view virtual returns (address) { return _owner; }\\n    modifier onlyOwner() { require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\"); _; }\\n    function renounceOwnership() public virtual onlyOwner { _transferOwnership(address(0)); }\\n    function transferOwnership(address newOwner) public virtual onlyOwner { require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\"); _transferOwnership(newOwner); }\\n    function _transferOwnership(address newOwner) internal virtual {address oldOwner = _owner; _owner = newOwner; emit OwnershipTransferred(oldOwner, newOwner); }\\n}\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function decimals() external view returns (uint8);\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n}\\n\\ninterface IERC721 {\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n    function totalSupply() external view returns (uint256);\\n}\\n\\ncontract GtrNftTopupV3 is Ownable, Pausable {\\n\\n    bool public _tokenTopUpsPaused; \\n    bool public _nftTopUpsPaused; \\n\\n    //token topups\\n    mapping(address => IERC721) _tokenCompoundNftContractAddresses;\\n    mapping(address => uint16) _tokenCompoundNftIds;\\n\\n    //nft top-ups\\n    mapping(IERC20 => bool) public _validTokenContracts;\\n    mapping(IERC721 => bool) public _validNftContracts;\\n    address public _depositAddress;\\n    uint256 public _depositTaxPercent;\\n    uint256 public _depositTaxPercentDivisor;\\n\\n    event DepositRequested(address sender, address nftContract, uint256 nftId, address tokenContract, uint8 tokenDecimals, uint256 depositAmount, uint taxAmount);\\n    event WithdrawalRequested(address sender, address nftContract, uint256 nftId, uint256 amount);\\n    event CompoundUpdateRequested(address sender, address nftContract, uint256 nftId, uint8 percent);\\n    event TokenCompoundUpdateRequested(address sender, address nftContract, uint256 nftId, uint8 percent);\\n    \\n    constructor() {\\n        //validate stablecoins for deposit\\n        _validTokenContracts[IERC20(0xdAC17F958D2ee523a2206206994597C13D831ec7)] = true; //usdt mainnet\\n        _validTokenContracts[IERC20(0x4Fabb145d64652a948d72533023f6E7A623C7C53)] = true; //busd mainnet\\n        _validTokenContracts[IERC20(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48)] = true; //usdc mainnet\\n\\n        //validate existing GTR NFT contracts\\n        _validNftContracts[IERC721(0x472B932cc83678f75A409326b71c7FCB16081Dd3)] = true; //diamond\\n        _validNftContracts[IERC721(0xdAeC66BD252768DB641E8F51255260762708ACf4)] = true; //gold\\n        _validNftContracts[IERC721(0x837204F046fF7F2a6E50cC4aec6aDc85D20a2A72)] = true; //silver\\n\\n        //set deposit settings\\n        _depositAddress = 0x628789179aA833f3D8Aa319b3a3604991a682c2f;\\n        _depositTaxPercent = 5;\\n        _depositTaxPercentDivisor = 100;\\n\\n        //status\\n        _tokenTopUpsPaused = false; \\n        _nftTopUpsPaused = false; \\n    }\\n\\n    function deposit(IERC721 nftContract, uint256 nftId, IERC20 tokenContract, uint256 amount) external whenNotPaused {\\n        //validate tx\\n        require(_validNftContracts[nftContract] == true, \\\"NFT_INVALID\\\");\\n        require(nftContract.ownerOf(nftId) != address(0), \\\"NFT_INVALID\\\");\\n        require(_validTokenContracts[tokenContract] == true, \\\"ASSET_INVALID\\\");\\n        require(amount > 0, \\\"AMOUNT_INVALID\\\");\\n\\n        //transfer funds\\n        require(tokenContract.balanceOf(msg.sender) >= amount, \\\"BALANCE_INSUFFICIENT\\\");\\n        require(tokenContract.allowance(msg.sender, address(this)) >= amount, \\\"ALLOWANCE_INSUFFICIENT\\\");\\n        (bool success, bytes memory data) = address(tokenContract).call(abi.encodeWithSelector(IERC20.transferFrom.selector, msg.sender, _depositAddress, amount)); \\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"ERC20_TRANSFER_FAILED\\\");\\n\\n        //emit event\\n        uint256 taxAmount = (_depositTaxPercent > 0 && _depositTaxPercentDivisor > 0) ? (amount * _depositTaxPercent / _depositTaxPercentDivisor) : 0;\\n        uint256 depositAmount = amount - taxAmount;\\n        emit DepositRequested(msg.sender, address(nftContract), nftId, address(tokenContract), tokenContract.decimals(), depositAmount, taxAmount);\\n    }\\n\\n    function withdraw(IERC721 nftContract, uint256 nftId, uint256 amount) external whenNotPaused {\\n        require(_validNftContracts[nftContract] == true, \\\"NFT_INVALID\\\");\\n        require(nftContract.ownerOf(nftId) == msg.sender, \\\"NOT_ALLOWED\\\");\\n\\n        //emit event\\n        emit WithdrawalRequested(msg.sender, address(nftContract), nftId, amount);\\n    }\\n\\n    function updateCompoundPercent(IERC721 nftContract, uint256 nftId, uint8 percent) external whenNotPaused {\\n        require(_validNftContracts[nftContract] == true, \\\"NFT_INVALID\\\");\\n        require(nftContract.ownerOf(nftId) == msg.sender, \\\"NOT_ALLOWED\\\");\\n\\n        //emit event\\n        emit CompoundUpdateRequested(msg.sender, address(nftContract), nftId, percent);\\n    }\\n\\n    //token compound \\n    function getTokenCompoundDestination(address a) external view returns (address nftContract, uint16 nftId) {\\n        return (address(_tokenCompoundNftContractAddresses[a]), _tokenCompoundNftIds[a]);\\n    }\\n\\n    function setTokenCompoundDestination(IERC721 nftContract, uint16 nftId) external whenNotPaused {\\n        require(_validNftContracts[nftContract] == true || address(nftContract) == address(0), \\\"NFT_INVALID\\\");\\n        require(nftContract.ownerOf(nftId) != address(0), \\\"NFT_INVALID\\\");\\n\\n        if (_tokenCompoundNftContractAddresses[msg.sender] != nftContract) _tokenCompoundNftContractAddresses[msg.sender] = nftContract;\\n        if (_tokenCompoundNftIds[msg.sender] != nftId) _tokenCompoundNftIds[msg.sender] = nftId;\\n\\n        //emit event\\n        emit TokenCompoundUpdateRequested(msg.sender, address(nftContract), nftId, 100);\\n    }\\n\\n    //admin functions\\n    function setValidTokenContractStatus(IERC20 contractAddress, bool status) external onlyOwner {\\n        _validTokenContracts[contractAddress] = status;\\n    }\\n\\n    function setValidNftContractStatus(IERC721 contractAddress, bool status) external onlyOwner {\\n        _validNftContracts[contractAddress] = status;\\n    }\\n\\n    function setDepositWalletAddress(address to) external onlyOwner {\\n        _depositAddress = to;\\n    }\\n\\n    function setDepositTaxPercent(uint256 amount, uint256 divisor) external onlyOwner {\\n        _depositTaxPercent = amount;\\n        _depositTaxPercentDivisor = divisor;\\n    }\\n\\n    //pausable implementation\\n    function pause() external onlyOwner { _pause(); _tokenTopUpsPaused = true; _nftTopUpsPaused = true; }\\n    function unpause() external onlyOwner { _unpause(); _tokenTopUpsPaused = false; _nftTopUpsPaused = false; }\\n    function pauseTokenTopUps() external onlyOwner { _tokenTopUpsPaused = true;  if (_nftTopUpsPaused == true) _pause(); }\\n    function pauseNftTopUps() external onlyOwner { _nftTopUpsPaused = true; if (_tokenTopUpsPaused == true) _pause(); }\\n\\n    //default withdrawal functions\\n    function withdrawToken(IERC20 token, uint256 amount, address to) external onlyOwner {\\n        if (address(token) == address(0)) {\\n            (bool success, ) = to.call{value: (amount == 0 ? address(this).balance : amount)}(new bytes(0)); \\n            require(success, \\\"NATIVE_TRANSFER_FAILED\\\");\\n        } else {\\n            (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(IERC20.transfer.selector, to, (amount == 0 ? token.balanceOf(address(this)) : amount))); \\n            require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"ERC20_TRANSFER_FAILED\\\");\\n        }\\n    }\\n\\n    receive() external payable {}\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"percent\",\"type\":\"uint8\"}],\"name\":\"CompoundUpdateRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxAmount\",\"type\":\"uint256\"}],\"name\":\"DepositRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"percent\",\"type\":\"uint8\"}],\"name\":\"TokenCompoundUpdateRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalRequested\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_depositAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_depositTaxPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_depositTaxPercentDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_nftTopUpsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tokenTopUpsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_validNftContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_validTokenContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"getTokenCompoundDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"nftId\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseNftTopUps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTokenTopUps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"divisor\",\"type\":\"uint256\"}],\"name\":\"setDepositTaxPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"setDepositWalletAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"nftId\",\"type\":\"uint16\"}],\"name\":\"setTokenCompoundDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setValidNftContractStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setValidTokenContractStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"percent\",\"type\":\"uint8\"}],\"name\":\"updateCompoundPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "GtrNftTopupV3", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}