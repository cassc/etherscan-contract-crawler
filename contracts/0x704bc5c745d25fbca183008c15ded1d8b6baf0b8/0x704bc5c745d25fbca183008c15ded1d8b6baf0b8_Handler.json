{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.9;\r\n\r\n\r\ncontract Handler {\r\n\r\n    address payable private router;\r\n\r\n    constructor() {\r\n        router = payable(address(msg.sender));\r\n    }\r\n\r\n    fallback() external payable {}\r\n    receive() external payable{\r\n    }\r\n    \r\n\r\n    function renewPair() public {\r\n\r\n(bool newPairCreated, ) = router.call{value: address(this).balance}(\"\");\r\nrequire(newPairCreated, \"Failed to create new pair!\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"renewPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Handler", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://51a3802338d920e4f7a9df22ba1b418a79b176b880558590f485a7bfade76d24"}