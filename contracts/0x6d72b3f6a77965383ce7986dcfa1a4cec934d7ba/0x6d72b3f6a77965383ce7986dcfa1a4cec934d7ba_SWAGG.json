{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/SWAGG.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: neurocolor clothing 1155\\n/// @author: manifold.xyz\\n\\nimport \\\"./manifold/ERC1155Creator.sol\\\";\\n\\n////////////////////////////////////////////////////////////////////////////////////////////////\\n//                                                                                            //\\n//                                                                                            //\\n//                                                                                            //\\n//        ________________________________ \u2584\u2584\u2584\u2580\u2559\u2580W\u00b5_______________________________________    //\\n//        ______________________________\u2553\u2580\u2500 \u2580__\u2584\u00b5_\u2588___________________\u2553\u2584\u2584\u2580\u2580\u2580\u2584_____________    //\\n//        ________________________\u2584\u2557_\u2553#\u2568_\u2553\u0398\u2514_\u2584\u255c_\u2593\u2580\u258c________________,\u00c5\u2514 \u2580__\u2584__\u258c____________    //\\n//        _______________________\u2553\u2500 \u2580_ \u00c6\u2559__\u2553\u255c__\u255d_,\u258c__________\u2584\u2584_,\u00c6\u2568_\u2553\u03a6\u2514_\u2553\u255c_\u2593\u2580\u2584____________    //\\n//        ______________________\u2584\u2500___/\u2514__\u00c6\u2514__/\u2559\u00b5\u2584\u2580_\u2559\u2559\u2580\u2580\u00a5\u2584,__\u2590\u2500.\u2580__\u00c6\u2559__,\u2580__\u255d_\u2552\u2580____________    //\\n//        ____________________\u2584\u2568__.\u2584`__\u2553\u2559__\u250c\u2514_\u2584\u2568\u258c__\u2500\u2559\u2559\u2580\u2580\u2584\u2584\u2559\u2580\u258c\u2556__z\u2559__\u00e6\u2518__/\u2580_\u2584\u2580_____________    //\\n//        __________________/\u2500_______,\u255b__\u250c^_,\u258c_\u2590__________\u2559\u2580\u2557\u2584\u2559\u2580\u2584_\u2553\u2559__\u250c\u2514_\u2584\u2580\u258c______________    //\\n//        _________________\u2590____________\u00c6_.\u03a6\u2580\u2584_\u2593\u2310_____________\u2559k\u2584\u2559\u258c_,^_,\u2559_\u256b_______________    //\\n//        ________________]\u2310___________ _ \u2580___ \u2588_________________\u03a3\u00e7\u2559\u258c.\u03a6\u2588\u2584_\u2588_______________    //\\n//        _______________\u00bb\u2580_____________\u2553\u255c___\u2593\u2580_________________\u2584\u2557\u2584\\\\_\u2588__\u2514 \u2588_______________    //\\n//        ______\u2552*T\u2559\u2514\u2580\u2500________________\u2584\u2500__ \u2588\u2580________________\u2584\u2514____\u2580_\u2588_\u2584\u2580________________    //\\n//        _____\u2584\u2580____\u00aa\u2588__ ___________\u2584\u2580___\u2565\u2588\u2500_________________\u258c___\u00c6\u2514^\u258cj\u2588\u2568_________________    //\\n//        ____\u2593\u00b5__________\u2559\u2310_____,\u2584\u2580\u2580__\u2584\u2593\u2588\u2588_\u2593,________________\u258c__ \u2310_\u2588\u2588_\u2588___________,,\u00c6\u2580R\u2584_    //\\n//        ____\u2559\u258c___________\u2559\u2584\u2584\u2584\u2588\u2580\u2514__\u2559\u2580\u2559\u2584\u256b\u2593_\u2588_\u2588\u2588_______________\u2559,__\u00bc_\u2553\u2593_\u2593________\u2584\u2580_\u2565\u2580__\u255c_\u256b    //\\n//        _____\u2568\u2593______ ____\u2584\u2593\u2588___Y\u2584___\u2580\u2580\u2588w\u2590b\u256b\u2588________________\u2514\u00a5w\u252c\u2310\u2514^\u2584\u2559\u2584,\u2584__\u2553\u03a6\u2559_\u2584\u2559__#\u2500\u255f\u2580\u258c    //\\n//        _______\u2580\u258c______\u2514\u03a3\u2580\u2580\u2588\u2580\u2580\u2557\u2584,\u2559\u2568\u2559^\\\"\u00ba\u2310,\u2584_\u2580\u2588__ \u2593____\u2553\u2584\u2593\u2593\u2593\u2584\u2584\u2584\u2584,___\u2584\u2593\u2593_\u2588\u258c_\u2593\u2580_,\u03a6\u2514__\u2584\u2559_,\u2580_\u2593    //\\n//        _________\u2559\u00a5\u00e7_____,\u258c\u2500 \u258c \u2584\u2559\u2580\u2580\u2514\u2584\u2580\u2580\u2593\u2559_\u258c\u2580\u258c__\u2590_\u2590\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256b\u2588\u2588\u2588\u2588\u2588 \u2588\u258c___ \u255c__,m\u2514_ *\u2584 \u258c_    //\\n//        ____________\u2514\u2559\u2559\u2580\u2559____\u2580_\u2588\u2580,\u2584\u2580_\u2553\u2580_,\u03a6\u2584,\u258c ,\u2569_\u256b\u2580\u2580\u2580\u2580\u2588\u2588\u2588\u2588\u2310___\u255f\u2588\u2588\u2588\u2593_\u2593\u2514___/ __\u00c9___\u00f3_ \u258c\u2588__    //\\n//        ___________________ \u2593\u2580\u2584\u2584\u2580\u2500 \u00c6\u2559__\u00c6\u2500_\u258c\u2559\u2588_\u2553\u2584\u2593\u258c_ __-*\u2580_____ ___\u258c\u2590\u258c_ _\u2514__x\u2514__>`_\u00c6\u2514 \u258c__    //\\n//        ___________________\u2584\u2500_\u2559_\u2553\u2580___A\u2559_ \u255c_\u2565\u2580\u2590\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2584\u2584\u2584\u2584\u2584\u2588\u2588\u2588\u2588\u2593\u2593_\u2588_________,__\u2553\u2580\u2588_\u2590b__    //\\n//        _________________ \u255d____\u00aa__,\u03a6__ \u2229\u2514\u258c\u2593\u2518\u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588_\u2593_________'__\u256b____\u256bb__    //\\n//        _______________\u2553\u2580\u2514_ ~\u00c6 __A___/__#_\u258c\u2590\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2580\u00ac\u2588\u2584`\u2580\u2590\u2580\u2565\u2584\u2584\u2580____________\u00c6___,\u2580\u2514___    //\\n//        ______________\u00c5________/\u2514__\u00b2 _\u2584\u258c_\u2590_\u2593\u258c\u256b\u2588\u2588\u2588\u2588\u2588\u2588\u2588_____\u2559\u2593\u2588_\u2588_____________.\u2580___\u2584\u2588_____    //\\n//        _____________\u256b___________ \u255c_\u2553\u255c\u2559\u258c_\u256bb\u256b\u2588\u2593\u2580\u2588\u2580\u2588\u00c6\u258c\u2593\u2559\u258c\u2310\u00c6\u00c6\u2553,\u2593_\u2588____________\u2584\u2559___\u2584\u2580______    //\\n//        ____________\u2590\u2500_____________.\u255c___\u2553\u2593_\u2584_\u2588\u2588\u2500,\u2559\u03a6\u2588\u2593\u2559\u2588\u00a5__\u2584_Q\u2310\u256b\u2568\u00b5_______\u2584\u2580\u2568__\u2553\u2593\u2588________    //\\n//        _____,,_--\u2553\u2310\u2514_____________\u2584\u2514__ \u2588\u2500^\u2588\u258c\u2553\u2593\u2588\u2593\u2588\u2588\u250c_\u2559\u2580\u2580\u2593\u2588\u2588\u2588\u2580\u2565\u2584\u2580_\u255c__\u2553\u2584\u2584\u2559\u2514_\u2559\u2580\u2580\u2580\u2580\u2580\u258c\u2593_______    //\\n//        __\u00c6\u2559\u2559__\u2559\u2584_______________ \u2580___,\u2588\u2500_\u2580\u2584\u2559\u2580\u2588\u2588\u2584\u2559\u258c\u2514\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2568\u2553\u258c__\u2584\u2580\u2559\u2588\u2514_\u2560\u2514\u2580____\u00a5\u2593\u2588\u2584 \u258c______    //\\n//        \u2553#\u2580____\\\"\u2580___\u2510_________,\u2584\u2559___\u2584\u2580_____\u2559\u2580\u2584\u2559\u2580\u2588\u2588\u258c__\u2514\u2588\u2580\u2580\u2580_\u2559\u2565\u2580\u2568_\u2553\u2580_,\u00c9\u2580\u2584\u258c_\u2580\u03a3\u00a5\u2550\u252c\u2584\u2584\u2580_______    //\\n//        \u256b\u258c___________\u258c____,\u2584\u00c6\u2580\u2584,\u2584\u2584\u2588\u2588\u2588\u00b5________\u2559\u2580\u2557\u2584\u2559\u2580\u2580\u2593_\u2588\u2559\u258c\u258c\u2580_,\u00c6\u2559__\u00c6\u2500_\u258c_\u2593_\u2593\u2593\u258c\u258c\u2593\u2593_________    //\\n//        ^\u2588____________\u2580\u2580\u2588\u2588\u2559_____\u00ac\u2500\u2500\u2563_\u2580\u2310___________\u2514\u2559\u2580`\u2584`___\u2553\u2580___m\u2514_ \u255c_\u2553\u255c________________    //\\n//        __\u2580\u2584______~,__\u2593\u2588\u2580___^\u2593\u2584__\u2559\u2580\u2580\u03a3\u2584b_____________,\u2580____\u03a9__,\u255c__,\u255b_\u2593\u2593`_________________    //\\n//        ____\u2580\u2584______\u2514\u2559\u2559\u2588\u2568\u2559\u2580\u258c\u2584\u2584\u2584 \u2514\u2514\u2568\u2593\u258c_____________\u2584\u2580\u2559_ \u00ac\u2580`__/___/_ \u00c6_\u258c__________________    //\\n//        ______\u2580W\u2584, \u2553\u2584\u2584\u2580______\u2559\u2559\u2580\u2580\u2580\u2580\u2580_____________\u258c________ \u2514__\u00b2__\u2584\u2593_ \u258c__________________    //\\n//        ___________\u2500____________________________\u256b___________ \u2559_\u250c\u2568_\u2580_j\u258c__________________    //\\n//        _______________________________________\u2590\u2580_____________ \u2568___\u2553\u2580___________________    //\\n//        ________________________________\u2584\u00e6,M\u00ac\u221e\u00c9\u2514_____________\u2584\u2518__ \u2588\u00ac____________________    //\\n//        _____________________________\u2590\u2584\u2500___\u2580_______________ \u2580___ \u2588\u2500_____________________    //\\n//        ___________________________\u2565\u2580\u2559_____\u2559`__%_________,#\u2559__,\u2584\u2580_______________________    //\\n//        ___________________________\u2590\u2588___________\u2580____\u2584\u2584\u2580\u2568\u256b\u2584\u2584\u258c\u2593\u2588\u2593\u258c_______________________    //\\n//        ____________________________\u2593\u2584___________\u2559\u2580\u2588\u2588\u2514______?Q\u2580\u2592\u2514\u258c______________________    //\\n//        _____________________________\u2559\u2593______`w,_\u255f\u2588\u2593\u2565___\u2580\u2593\u2565,,\u2559\u2559\u2559\u2584\u2580______________________    //\\n//        _______________________________\u2559\u258c,________\u256b\u2500_\u2559\u2580\u2593\u2593\u2584\u2584,\u2553\u2590\u2593\u258c________________________    //\\n//        _________________________________\u2514\u2580W\u2584\u2553\u2584\u2584\u00c6\u2568_______\u2514\u2514\u2559\u2559\u2559\u2514_________________________    //\\n//                                                                                            //\\n//                                                                                            //\\n//                                                                                            //\\n//                                                                                            //\\n//                                                                                            //\\n////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract SWAGG is ERC1155Creator {\\n    constructor() ERC1155Creator(\\\"neurocolor clothing 1155\\\", \\\"SWAGG\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/manifold/ERC1155Creator.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC1155Creator is Proxy {\\n\\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xE9FF7CA11280553Af56d04Ecb8Be6B8c4468DCB2;\\n        (bool success, ) = 0xE9FF7CA11280553Af56d04Ecb8Be6B8c4468DCB2.delegatecall(abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol));\\n        require(success, \\\"Initialization failed\\\");\\n    }\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"node_modules/@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"@openzeppelin/=node_modules/@openzeppelin/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "SWAGG", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xe9ff7ca11280553af56d04ecb8be6b8c4468dcb2", "SwarmSource": ""}