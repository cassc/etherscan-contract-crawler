{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Pair {\r\n    function totalSupply() external view returns (uint);\r\n}\r\n\r\ncontract LOWT is IERC20 {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 18;\r\n    uint256 private _totalSupply;\r\n\r\n    uint256 public buyTaxPercent;\r\n    uint256 public sellTaxPercent;\r\n    bool public taxesRemoved = false;\r\n    bool public liquidityCheckCompleted = false;\r\n\r\n    address public uniswapV2FactoryAddress = 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;  // Ethereum mainnet address, change if needed\r\n    address public uniswapV2Pair;\r\n    uint256 public liquidityAddedBlock;\r\n\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    constructor(\r\n        string memory _name, \r\n        string memory _symbol, \r\n        uint256 _premint,\r\n        uint256 _buyTax,\r\n        uint256 _sellTax\r\n    ) {\r\n        require(_buyTax <= 100 && _sellTax <= 100, \"Tax percentage too high.\");\r\n        \r\n        name = _name;\r\n        symbol = _symbol;\r\n        _totalSupply = _premint * (10 ** uint256(decimals));\r\n        _balances[msg.sender] = _totalSupply;\r\n        buyTaxPercent = _buyTax;\r\n        sellTaxPercent = _sellTax;\r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n    }\r\n\r\n    function setUniswapV2FactoryAddress(address _address) external {\r\n        uniswapV2FactoryAddress = _address;\r\n    }\r\n\r\n    function _startLiquidityBlockCount() internal {\r\n        if (liquidityAddedBlock == 0 && uniswapV2Pair == address(0)) {\r\n            uniswapV2Pair = IUniswapV2Factory(uniswapV2FactoryAddress).getPair(address(this), 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);  // WETH address on Ethereum mainnet\r\n            if (uniswapV2Pair != address(0) && IUniswapV2Pair(uniswapV2Pair).totalSupply() > 0) {\r\n                liquidityAddedBlock = block.number;\r\n            }\r\n        }\r\n    }\r\n\r\n    function _beforeTokenTransfer() internal {\r\n        if (!liquidityCheckCompleted) {\r\n            _startLiquidityBlockCount();  // Check for liquidity addition and possibly start block count\r\n            if (liquidityAddedBlock > 0 && block.number > liquidityAddedBlock + 10) {\r\n                buyTaxPercent = 0;\r\n                sellTaxPercent = 0;\r\n                taxesRemoved = true;\r\n                liquidityCheckCompleted = true;  // Set the flag to true\r\n            }\r\n        }\r\n    }\r\n\r\n    function _applyTax(uint256 amount, uint256 taxPercent) internal pure returns (uint256) {\r\n        return amount - (amount * taxPercent / 100);\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _beforeTokenTransfer();  // Check and possibly remove taxes\r\n        \r\n        require(recipient != address(0), \"Transfer to the zero address\");\r\n        \r\n        // Apply tax based on whether it's a buy or sell\r\n        uint256 finalAmount = amount;\r\n        if (!taxesRemoved) {\r\n            if (recipient == address(this) || recipient == address(0)) {\r\n                finalAmount = _applyTax(amount, sellTaxPercent);\r\n            } else {\r\n                finalAmount = _applyTax(amount, buyTaxPercent);\r\n            }\r\n        }\r\n\r\n        require(_balances[msg.sender] >= finalAmount, \"Insufficient balance\");\r\n        \r\n        _balances[msg.sender] -= finalAmount;\r\n        _balances[recipient] += finalAmount;\r\n        emit Transfer(msg.sender, recipient, finalAmount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _beforeTokenTransfer();  // Check and possibly remove taxes\r\n        \r\n        require(sender != address(0), \"Transfer from the zero address\");\r\n        require(recipient != address(0), \"Transfer to the zero address\");\r\n        \r\n        uint256 finalAmount = amount;\r\n        if (!taxesRemoved) {\r\n            if (recipient == address(this) || recipient == address(0)) {\r\n                finalAmount = _applyTax(amount, sellTaxPercent);\r\n            } else {\r\n                finalAmount = _applyTax(amount, buyTaxPercent);\r\n            }\r\n        }\r\n\r\n        require(_balances[sender] >= finalAmount, \"Insufficient balance\");\r\n        require(_allowances[sender][msg.sender] >= finalAmount, \"Allowance exceeded\");\r\n\r\n        _balances[sender] -= finalAmount;\r\n        _balances[recipient] += finalAmount;\r\n        _allowances[sender][msg.sender] -= finalAmount;\r\n        emit Transfer(sender, recipient, finalAmount);\r\n        return true;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_premint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sellTax\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTaxPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAddedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityCheckCompleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTaxPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setUniswapV2FactoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxesRemoved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2FactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "LOWT", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000019d81f47980000000000000000000000000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000254d696c616479546573746f737465726f6e655368696e676c65735261626269743639496e7500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044c4f575400000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://6805eb66c0caca92c183791f70fc9a4ebfbc0e0d164de2435fd3571574bc678c"}