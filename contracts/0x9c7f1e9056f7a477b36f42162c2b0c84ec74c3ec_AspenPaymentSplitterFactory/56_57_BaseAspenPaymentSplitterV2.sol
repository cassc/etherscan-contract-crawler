// SPDX-License-Identifier: Apache-2.0

// Generated by impl.ts. Will be overwritten.
// Filename: './BaseAspenPaymentSplitterV2.sol'

pragma solidity ^0.8.4;

import "../../api/impl/IAspenPaymentSplitter.sol";
import "../../api/IAspenFeatures.sol";
import "../../api/IAspenVersioned.sol";
import "../../api/IMulticallable.sol";
import "../../api/splitpayment/ISplitPayment.sol";

/// Inherit from this base to implement introspection
abstract contract BaseAspenPaymentSplitterV2 is IAspenFeaturesV1, IAspenVersionedV2, IMulticallableV0, IAspenSplitPaymentV2 {
    function supportedFeatureCodes() override public pure returns (uint256[] memory features) {
        features = new uint256[](4);
        /// IAspenFeatures.sol:IAspenFeaturesV1
        features[0] = 0x6efbb19b;
        /// IAspenVersioned.sol:IAspenVersionedV2
        features[1] = 0xe4144b09;
        /// IMulticallable.sol:IMulticallableV0
        features[2] = 0xad792170;
        /// splitpayment/ISplitPayment.sol:IAspenSplitPaymentV2
        features[3] = 0xb046de33;
    }

    /// This needs to be public to be callable from initialize via delegatecall
    function minorVersion() virtual override public pure returns (uint256 minor, uint256 patch);

    function implementationVersion() override public pure returns (uint256 major, uint256 minor, uint256 patch) {
        (minor, patch) = minorVersion();
        major = 2;
    }

    function implementationInterfaceId() virtual override public pure returns (string memory interfaceId) {
        interfaceId = "impl/IAspenPaymentSplitter.sol:IAspenPaymentSplitterV2";
    }

    function supportsInterface(bytes4 interfaceID) virtual override public view returns (bool) {
        /// ERC165 'handshake'
        if ((interfaceID == 0x0) || (interfaceID == 0xffffffff)) return false;
        /// ERC165 itself
        if (interfaceID == 0x01ffc9a7) return true;
        /// impl/IAspenPaymentSplitter.sol:IAspenPaymentSplitterV2
        if (interfaceID == 0x599089d6) return true;
        /// IAspenFeatures.sol:IAspenFeaturesV1
        if (interfaceID == 0x43c60851) return true;
        /// IAspenVersioned.sol:IAspenVersionedV2
        if (interfaceID == 0x0b2a676f) return true;
        /// IMulticallable.sol:IMulticallableV0
        if (interfaceID == 0xac9650d8) return true;
        /// splitpayment/ISplitPayment.sol:IAspenSplitPaymentV2
        if (interfaceID == 0xbc157f97) return true;
        /// splitpayment/ISplitPayment.sol:IAspenSplitPaymentV1
        if (interfaceID == 0x4869c01f) return true;
        /// splitpayment/ISplitPayment.sol:ICedarSplitPaymentV0
        if (interfaceID == 0x8120d881) return true;
        /// Otherwise not supported
        return false;
    }

    function isIAspenFeaturesV1() override public pure returns (bool) {
        return true;
    }
}