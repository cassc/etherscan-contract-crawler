{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/ERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\n/// @notice Simple ERC20 + EIP-2612 implementation.\\r\\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/tokens/ERC20.sol)\\r\\n/// @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\r\\n/// @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol)\\r\\n/// Note:\\r\\n/// The ERC20 standard allows minting and transferring to and from the zero address,\\r\\n/// minting and transferring zero tokens, as well as self-approvals.\\r\\n/// For performance, this implementation WILL NOT revert for such actions.\\r\\n/// Please add any checks with overrides if desired.\\r\\nabstract contract ERC20 {\\r\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\r\\n    /*                       CUSTOM ERRORS                        */\\r\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\r\\n\\r\\n    /// @dev The total supply has overflowed.\\r\\n    error TotalSupplyOverflow();\\r\\n\\r\\n    /// @dev The allowance has overflowed.\\r\\n    error AllowanceOverflow();\\r\\n\\r\\n    /// @dev The allowance has underflowed.\\r\\n    error AllowanceUnderflow();\\r\\n\\r\\n    /// @dev Insufficient balance.\\r\\n    error InsufficientBalance();\\r\\n\\r\\n    /// @dev Insufficient allowance.\\r\\n    error InsufficientAllowance();\\r\\n\\r\\n    /// @dev The permit is invalid.\\r\\n    error InvalidPermit();\\r\\n\\r\\n    /// @dev The permit has expired.\\r\\n    error PermitExpired();\\r\\n\\r\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\r\\n    /*                           EVENTS                           */\\r\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\r\\n\\r\\n    /// @dev Emitted when `amount` tokens is transferred from `from` to `to`.\\r\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\r\\n\\r\\n    /// @dev Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 amount\\r\\n    );\\r\\n\\r\\n    /// @dev `keccak256(bytes(\\\"Transfer(address,address,uint256)\\\"))`.\\r\\n    uint256 private constant _TRANSFER_EVENT_SIGNATURE =\\r\\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\\r\\n\\r\\n    /// @dev `keccak256(bytes(\\\"Approval(address,address,uint256)\\\"))`.\\r\\n    uint256 private constant _APPROVAL_EVENT_SIGNATURE =\\r\\n        0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925;\\r\\n\\r\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\r\\n    /*                          STORAGE                           */\\r\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\r\\n\\r\\n    /// @dev The storage slot for the total supply.\\r\\n    uint256 private constant _TOTAL_SUPPLY_SLOT = 0x05345cdf77eb68f44c;\\r\\n\\r\\n    /// @dev The balance slot of `owner` is given by:\\r\\n    /// ```\\r\\n    ///     mstore(0x0c, _BALANCE_SLOT_SEED)\\r\\n    ///     mstore(0x00, owner)\\r\\n    ///     let balanceSlot := keccak256(0x0c, 0x20)\\r\\n    /// ```\\r\\n    uint256 private constant _BALANCE_SLOT_SEED = 0x87a211a2;\\r\\n\\r\\n    /// @dev The allowance slot of (`owner`, `spender`) is given by:\\r\\n    /// ```\\r\\n    ///     mstore(0x20, spender)\\r\\n    ///     mstore(0x0c, _ALLOWANCE_SLOT_SEED)\\r\\n    ///     mstore(0x00, owner)\\r\\n    ///     let allowanceSlot := keccak256(0x0c, 0x34)\\r\\n    /// ```\\r\\n    uint256 private constant _ALLOWANCE_SLOT_SEED = 0x7f5e9f20;\\r\\n\\r\\n    /// @dev The nonce slot of `owner` is given by:\\r\\n    /// ```\\r\\n    ///     mstore(0x0c, _NONCES_SLOT_SEED)\\r\\n    ///     mstore(0x00, owner)\\r\\n    ///     let nonceSlot := keccak256(0x0c, 0x20)\\r\\n    /// ```\\r\\n    uint256 private constant _NONCES_SLOT_SEED = 0x38377508;\\r\\n\\r\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\r\\n    /*                       ERC20 METADATA                       */\\r\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\r\\n\\r\\n    /// @dev Returns the name of the token.\\r\\n    function name() public view virtual returns (string memory);\\r\\n\\r\\n    /// @dev Returns the symbol of the token.\\r\\n    function symbol() public view virtual returns (string memory);\\r\\n\\r\\n    /// @dev Returns the decimals places of the token.\\r\\n    function decimals() public view virtual returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\r\\n    /*                           ERC20                            */\\r\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\r\\n\\r\\n    /// @dev Returns the amount of tokens in existence.\\r\\n    function totalSupply() public view virtual returns (uint256 result) {\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            result := sload(_TOTAL_SUPPLY_SLOT)\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Returns the amount of tokens owned by `owner`.\\r\\n    function balanceOf(\\r\\n        address owner\\r\\n    ) public view virtual returns (uint256 result) {\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            mstore(0x0c, _BALANCE_SLOT_SEED)\\r\\n            mstore(0x00, owner)\\r\\n            result := sload(keccak256(0x0c, 0x20))\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Returns the amount of tokens that `spender` can spend on behalf of `owner`.\\r\\n    function allowance(\\r\\n        address owner,\\r\\n        address spender\\r\\n    ) public view virtual returns (uint256 result) {\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            mstore(0x20, spender)\\r\\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\\r\\n            mstore(0x00, owner)\\r\\n            result := sload(keccak256(0x0c, 0x34))\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n    ///\\r\\n    /// Emits a {Approval} event.\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) public virtual returns (bool) {\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            // Compute the allowance slot and store the amount.\\r\\n            mstore(0x20, spender)\\r\\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\\r\\n            mstore(0x00, caller())\\r\\n            sstore(keccak256(0x0c, 0x34), amount)\\r\\n            // Emit the {Approval} event.\\r\\n            mstore(0x00, amount)\\r\\n            log3(\\r\\n                0x00,\\r\\n                0x20,\\r\\n                _APPROVAL_EVENT_SIGNATURE,\\r\\n                caller(),\\r\\n                shr(96, mload(0x2c))\\r\\n            )\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n    ///\\r\\n    /// Emits a {Approval} event.\\r\\n    function increaseAllowance(\\r\\n        address spender,\\r\\n        uint256 difference\\r\\n    ) public virtual returns (bool) {\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            // Compute the allowance slot and load its value.\\r\\n            mstore(0x20, spender)\\r\\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\\r\\n            mstore(0x00, caller())\\r\\n            let allowanceSlot := keccak256(0x0c, 0x34)\\r\\n            let allowanceBefore := sload(allowanceSlot)\\r\\n            // Add to the allowance.\\r\\n            let allowanceAfter := add(allowanceBefore, difference)\\r\\n            // Revert upon overflow.\\r\\n            if lt(allowanceAfter, allowanceBefore) {\\r\\n                mstore(0x00, 0xf9067066) // `AllowanceOverflow()`.\\r\\n                revert(0x1c, 0x04)\\r\\n            }\\r\\n            // Store the updated allowance.\\r\\n            sstore(allowanceSlot, allowanceAfter)\\r\\n            // Emit the {Approval} event.\\r\\n            mstore(0x00, allowanceAfter)\\r\\n            log3(\\r\\n                0x00,\\r\\n                0x20,\\r\\n                _APPROVAL_EVENT_SIGNATURE,\\r\\n                caller(),\\r\\n                shr(96, mload(0x2c))\\r\\n            )\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n    ///\\r\\n    /// Emits a {Approval} event.\\r\\n    function decreaseAllowance(\\r\\n        address spender,\\r\\n        uint256 difference\\r\\n    ) public virtual returns (bool) {\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            // Compute the allowance slot and load its value.\\r\\n            mstore(0x20, spender)\\r\\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\\r\\n            mstore(0x00, caller())\\r\\n            let allowanceSlot := keccak256(0x0c, 0x34)\\r\\n            let allowanceBefore := sload(allowanceSlot)\\r\\n            // Revert if will underflow.\\r\\n            if lt(allowanceBefore, difference) {\\r\\n                mstore(0x00, 0x8301ab38) // `AllowanceUnderflow()`.\\r\\n                revert(0x1c, 0x04)\\r\\n            }\\r\\n            // Subtract and store the updated allowance.\\r\\n            let allowanceAfter := sub(allowanceBefore, difference)\\r\\n            sstore(allowanceSlot, allowanceAfter)\\r\\n            // Emit the {Approval} event.\\r\\n            mstore(0x00, allowanceAfter)\\r\\n            log3(\\r\\n                0x00,\\r\\n                0x20,\\r\\n                _APPROVAL_EVENT_SIGNATURE,\\r\\n                caller(),\\r\\n                shr(96, mload(0x2c))\\r\\n            )\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @dev Transfer `amount` tokens from the caller to `to`.\\r\\n    ///\\r\\n    /// Requirements:\\r\\n    /// - `from` must at least have `amount`.\\r\\n    ///\\r\\n    /// Emits a {Transfer} event.\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual returns (bool) {\\r\\n        _beforeTokenTransfer(msg.sender, to, amount);\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            // Compute the balance slot and load its value.\\r\\n            mstore(0x0c, _BALANCE_SLOT_SEED)\\r\\n            mstore(0x00, caller())\\r\\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\\r\\n            let fromBalance := sload(fromBalanceSlot)\\r\\n            // Revert if insufficient balance.\\r\\n            if gt(amount, fromBalance) {\\r\\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\\r\\n                revert(0x1c, 0x04)\\r\\n            }\\r\\n            // Subtract and store the updated balance.\\r\\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\\r\\n            // Compute the balance slot of `to`.\\r\\n            mstore(0x00, to)\\r\\n            let toBalanceSlot := keccak256(0x0c, 0x20)\\r\\n            // Add and store the updated balance of `to`.\\r\\n            // Will not overflow because the sum of all user balances\\r\\n            // cannot exceed the maximum uint256 value.\\r\\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\\r\\n            // Emit the {Transfer} event.\\r\\n            mstore(0x20, amount)\\r\\n            log3(\\r\\n                0x20,\\r\\n                0x20,\\r\\n                _TRANSFER_EVENT_SIGNATURE,\\r\\n                caller(),\\r\\n                shr(96, mload(0x0c))\\r\\n            )\\r\\n        }\\r\\n        _afterTokenTransfer(msg.sender, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @dev Transfers `amount` tokens from `from` to `to`.\\r\\n    ///\\r\\n    /// Note: does not update the allowance if it is the maximum uint256 value.\\r\\n    ///\\r\\n    /// Requirements:\\r\\n    /// - `from` must at least have `amount`.\\r\\n    /// - The caller must have at least `amount` of allowance to transfer the tokens of `from`.\\r\\n    ///\\r\\n    /// Emits a {Transfer} event.\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual returns (bool) {\\r\\n        _beforeTokenTransfer(from, to, amount);\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            let from_ := shl(96, from)\\r\\n            // Compute the allowance slot and load its value.\\r\\n            mstore(0x20, caller())\\r\\n            mstore(0x0c, or(from_, _ALLOWANCE_SLOT_SEED))\\r\\n            let allowanceSlot := keccak256(0x0c, 0x34)\\r\\n            let allowance_ := sload(allowanceSlot)\\r\\n            // If the allowance is not the maximum uint256 value.\\r\\n            if iszero(eq(allowance_, not(0))) {\\r\\n                // Revert if the amount to be transferred exceeds the allowance.\\r\\n                if gt(amount, allowance_) {\\r\\n                    mstore(0x00, 0x13be252b) // `InsufficientAllowance()`.\\r\\n                    revert(0x1c, 0x04)\\r\\n                }\\r\\n                // Subtract and store the updated allowance.\\r\\n                sstore(allowanceSlot, sub(allowance_, amount))\\r\\n            }\\r\\n            // Compute the balance slot and load its value.\\r\\n            mstore(0x0c, or(from_, _BALANCE_SLOT_SEED))\\r\\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\\r\\n            let fromBalance := sload(fromBalanceSlot)\\r\\n            // Revert if insufficient balance.\\r\\n            if gt(amount, fromBalance) {\\r\\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\\r\\n                revert(0x1c, 0x04)\\r\\n            }\\r\\n            // Subtract and store the updated balance.\\r\\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\\r\\n            // Compute the balance slot of `to`.\\r\\n            mstore(0x00, to)\\r\\n            let toBalanceSlot := keccak256(0x0c, 0x20)\\r\\n            // Add and store the updated balance of `to`.\\r\\n            // Will not overflow because the sum of all user balances\\r\\n            // cannot exceed the maximum uint256 value.\\r\\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\\r\\n            // Emit the {Transfer} event.\\r\\n            mstore(0x20, amount)\\r\\n            log3(\\r\\n                0x20,\\r\\n                0x20,\\r\\n                _TRANSFER_EVENT_SIGNATURE,\\r\\n                shr(96, from_),\\r\\n                shr(96, mload(0x0c))\\r\\n            )\\r\\n        }\\r\\n        _afterTokenTransfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\r\\n    /*                          EIP-2612                          */\\r\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\r\\n\\r\\n    /// @dev Returns the current nonce for `owner`.\\r\\n    /// This value is used to compute the signature for EIP-2612 permit.\\r\\n    function nonces(\\r\\n        address owner\\r\\n    ) public view virtual returns (uint256 result) {\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            // Compute the nonce slot and load its value.\\r\\n            mstore(0x0c, _NONCES_SLOT_SEED)\\r\\n            mstore(0x00, owner)\\r\\n            result := sload(keccak256(0x0c, 0x20))\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Sets `value` as the allowance of `spender` over the tokens of `owner`,\\r\\n    /// authorized by a signed approval by `owner`.\\r\\n    ///\\r\\n    /// Emits a {Approval} event.\\r\\n    function permit(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) public virtual {\\r\\n        bytes32 domainSeparator = DOMAIN_SEPARATOR();\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            // Grab the free memory pointer.\\r\\n            let m := mload(0x40)\\r\\n            // Revert if the block timestamp greater than `deadline`.\\r\\n            if gt(timestamp(), deadline) {\\r\\n                mstore(0x00, 0x1a15a3cc) // `PermitExpired()`.\\r\\n                revert(0x1c, 0x04)\\r\\n            }\\r\\n            // Clean the upper 96 bits.\\r\\n            owner := shr(96, shl(96, owner))\\r\\n            spender := shr(96, shl(96, spender))\\r\\n            // Compute the nonce slot and load its value.\\r\\n            mstore(0x0c, _NONCES_SLOT_SEED)\\r\\n            mstore(0x00, owner)\\r\\n            let nonceSlot := keccak256(0x0c, 0x20)\\r\\n            let nonceValue := sload(nonceSlot)\\r\\n            // Increment and store the updated nonce.\\r\\n            sstore(nonceSlot, add(nonceValue, 1))\\r\\n            // Prepare the inner hash.\\r\\n            // `keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")`.\\r\\n            // forgefmt: disable-next-item\\r\\n            mstore(\\r\\n                m,\\r\\n                0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\\r\\n            )\\r\\n            mstore(add(m, 0x20), owner)\\r\\n            mstore(add(m, 0x40), spender)\\r\\n            mstore(add(m, 0x60), value)\\r\\n            mstore(add(m, 0x80), nonceValue)\\r\\n            mstore(add(m, 0xa0), deadline)\\r\\n            // Prepare the outer hash.\\r\\n            mstore(0, 0x1901)\\r\\n            mstore(0x20, domainSeparator)\\r\\n            mstore(0x40, keccak256(m, 0xc0))\\r\\n            // Prepare the ecrecover calldata.\\r\\n            mstore(0, keccak256(0x1e, 0x42))\\r\\n            mstore(0x20, and(0xff, v))\\r\\n            mstore(0x40, r)\\r\\n            mstore(0x60, s)\\r\\n            pop(staticcall(gas(), 1, 0, 0x80, 0x20, 0x20))\\r\\n            // If the ecrecover fails, the returndatasize will be 0x00,\\r\\n            // `owner` will be be checked if it equals the hash at 0x00,\\r\\n            // which evaluates to false (i.e. 0), and we will revert.\\r\\n            // If the ecrecover succeeds, the returndatasize will be 0x20,\\r\\n            // `owner` will be compared against the returned address at 0x20.\\r\\n            if iszero(eq(mload(returndatasize()), owner)) {\\r\\n                mstore(0x00, 0xddafbaef) // `InvalidPermit()`.\\r\\n                revert(0x1c, 0x04)\\r\\n            }\\r\\n            // Compute the allowance slot and store the value.\\r\\n            // The `owner` is already at slot 0x20.\\r\\n            mstore(0x40, or(shl(160, _ALLOWANCE_SLOT_SEED), spender))\\r\\n            sstore(keccak256(0x2c, 0x34), value)\\r\\n            // Emit the {Approval} event.\\r\\n            log3(add(m, 0x60), 0x20, _APPROVAL_EVENT_SIGNATURE, owner, spender)\\r\\n            mstore(0x40, m) // Restore the free memory pointer.\\r\\n            mstore(0x60, 0) // Restore the zero pointer.\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Returns the EIP-2612 domains separator.\\r\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32 result) {\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            result := mload(0x40) // Grab the free memory pointer.\\r\\n        }\\r\\n        //  We simply calculate it on-the-fly to allow for cases where the `name` may change.\\r\\n        bytes32 nameHash = keccak256(bytes(name()));\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            let m := result\\r\\n            // `keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")`.\\r\\n            // forgefmt: disable-next-item\\r\\n            mstore(\\r\\n                m,\\r\\n                0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\\r\\n            )\\r\\n            mstore(add(m, 0x20), nameHash)\\r\\n            // `keccak256(\\\"1\\\")`.\\r\\n            // forgefmt: disable-next-item\\r\\n            mstore(\\r\\n                add(m, 0x40),\\r\\n                0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\\r\\n            )\\r\\n            mstore(add(m, 0x60), chainid())\\r\\n            mstore(add(m, 0x80), address())\\r\\n            result := keccak256(m, 0xa0)\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\r\\n    /*                  INTERNAL MINT FUNCTIONS                   */\\r\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\r\\n\\r\\n    /// @dev Mints `amount` tokens to `to`, increasing the total supply.\\r\\n    ///\\r\\n    /// Emits a {Transfer} event.\\r\\n    function _mint(address to, uint256 amount) internal virtual {\\r\\n        _beforeTokenTransfer(address(0), to, amount);\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            let totalSupplyBefore := sload(_TOTAL_SUPPLY_SLOT)\\r\\n            let totalSupplyAfter := add(totalSupplyBefore, amount)\\r\\n            // Revert if the total supply overflows.\\r\\n            if lt(totalSupplyAfter, totalSupplyBefore) {\\r\\n                mstore(0x00, 0xe5cfe957) // `TotalSupplyOverflow()`.\\r\\n                revert(0x1c, 0x04)\\r\\n            }\\r\\n            // Store the updated total supply.\\r\\n            sstore(_TOTAL_SUPPLY_SLOT, totalSupplyAfter)\\r\\n            // Compute the balance slot and load its value.\\r\\n            mstore(0x0c, _BALANCE_SLOT_SEED)\\r\\n            mstore(0x00, to)\\r\\n            let toBalanceSlot := keccak256(0x0c, 0x20)\\r\\n            // Add and store the updated balance.\\r\\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\\r\\n            // Emit the {Transfer} event.\\r\\n            mstore(0x20, amount)\\r\\n            log3(0x20, 0x20, _TRANSFER_EVENT_SIGNATURE, 0, shr(96, mload(0x0c)))\\r\\n        }\\r\\n        _afterTokenTransfer(address(0), to, amount);\\r\\n    }\\r\\n\\r\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\r\\n    /*                  INTERNAL BURN FUNCTIONS                   */\\r\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\r\\n\\r\\n    /// @dev Burns `amount` tokens from `from`, reducing the total supply.\\r\\n    ///\\r\\n    /// Emits a {Transfer} event.\\r\\n    function _burn(address from, uint256 amount) internal virtual {\\r\\n        _beforeTokenTransfer(from, address(0), amount);\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            // Compute the balance slot and load its value.\\r\\n            mstore(0x0c, _BALANCE_SLOT_SEED)\\r\\n            mstore(0x00, from)\\r\\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\\r\\n            let fromBalance := sload(fromBalanceSlot)\\r\\n            // Revert if insufficient balance.\\r\\n            if gt(amount, fromBalance) {\\r\\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\\r\\n                revert(0x1c, 0x04)\\r\\n            }\\r\\n            // Subtract and store the updated balance.\\r\\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\\r\\n            // Subtract and store the updated total supply.\\r\\n            sstore(_TOTAL_SUPPLY_SLOT, sub(sload(_TOTAL_SUPPLY_SLOT), amount))\\r\\n            // Emit the {Transfer} event.\\r\\n            mstore(0x00, amount)\\r\\n            log3(\\r\\n                0x00,\\r\\n                0x20,\\r\\n                _TRANSFER_EVENT_SIGNATURE,\\r\\n                shr(96, shl(96, from)),\\r\\n                0\\r\\n            )\\r\\n        }\\r\\n        _afterTokenTransfer(from, address(0), amount);\\r\\n    }\\r\\n\\r\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\r\\n    /*                INTERNAL TRANSFER FUNCTIONS                 */\\r\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\r\\n\\r\\n    /// @dev Moves `amount` of tokens from `from` to `to`.\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        _beforeTokenTransfer(from, to, amount);\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            let from_ := shl(96, from)\\r\\n            // Compute the balance slot and load its value.\\r\\n            mstore(0x0c, or(from_, _BALANCE_SLOT_SEED))\\r\\n            let fromBalanceSlot := keccak256(0x0c, 0x20)\\r\\n            let fromBalance := sload(fromBalanceSlot)\\r\\n            // Revert if insufficient balance.\\r\\n            if gt(amount, fromBalance) {\\r\\n                mstore(0x00, 0xf4d678b8) // `InsufficientBalance()`.\\r\\n                revert(0x1c, 0x04)\\r\\n            }\\r\\n            // Subtract and store the updated balance.\\r\\n            sstore(fromBalanceSlot, sub(fromBalance, amount))\\r\\n            // Compute the balance slot of `to`.\\r\\n            mstore(0x00, to)\\r\\n            let toBalanceSlot := keccak256(0x0c, 0x20)\\r\\n            // Add and store the updated balance of `to`.\\r\\n            // Will not overflow because the sum of all user balances\\r\\n            // cannot exceed the maximum uint256 value.\\r\\n            sstore(toBalanceSlot, add(sload(toBalanceSlot), amount))\\r\\n            // Emit the {Transfer} event.\\r\\n            mstore(0x20, amount)\\r\\n            log3(\\r\\n                0x20,\\r\\n                0x20,\\r\\n                _TRANSFER_EVENT_SIGNATURE,\\r\\n                shr(96, from_),\\r\\n                shr(96, mload(0x0c))\\r\\n            )\\r\\n        }\\r\\n        _afterTokenTransfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\r\\n    /*                INTERNAL ALLOWANCE FUNCTIONS                */\\r\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\r\\n\\r\\n    /// @dev Updates the allowance of `owner` for `spender` based on spent `amount`.\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            // Compute the allowance slot and load its value.\\r\\n            mstore(0x20, spender)\\r\\n            mstore(0x0c, _ALLOWANCE_SLOT_SEED)\\r\\n            mstore(0x00, owner)\\r\\n            let allowanceSlot := keccak256(0x0c, 0x34)\\r\\n            let allowance_ := sload(allowanceSlot)\\r\\n            // If the allowance is not the maximum uint256 value.\\r\\n            if iszero(eq(allowance_, not(0))) {\\r\\n                // Revert if the amount to be transferred exceeds the allowance.\\r\\n                if gt(amount, allowance_) {\\r\\n                    mstore(0x00, 0x13be252b) // `InsufficientAllowance()`.\\r\\n                    revert(0x1c, 0x04)\\r\\n                }\\r\\n                // Subtract and store the updated allowance.\\r\\n                sstore(allowanceSlot, sub(allowance_, amount))\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Sets `amount` as the allowance of `spender` over the tokens of `owner`.\\r\\n    ///\\r\\n    /// Emits a {Approval} event.\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            let owner_ := shl(96, owner)\\r\\n            // Compute the allowance slot and store the amount.\\r\\n            mstore(0x20, spender)\\r\\n            mstore(0x0c, or(owner_, _ALLOWANCE_SLOT_SEED))\\r\\n            sstore(keccak256(0x0c, 0x34), amount)\\r\\n            // Emit the {Approval} event.\\r\\n            mstore(0x00, amount)\\r\\n            log3(\\r\\n                0x00,\\r\\n                0x20,\\r\\n                _APPROVAL_EVENT_SIGNATURE,\\r\\n                shr(96, owner_),\\r\\n                shr(96, mload(0x2c))\\r\\n            )\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\r\\n    /*                     HOOKS TO OVERRIDE                      */\\r\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\r\\n\\r\\n    /// @dev Hook that is called before any transfer of tokens.\\r\\n    /// This includes minting and burning.\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /// @dev Hook that is called after any transfer of tokens.\\r\\n    /// This includes minting and burning.\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\"\r\n    },\r\n    \"contracts/Owned.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: AGPL-3.0-only\\r\\npragma solidity >=0.8.0;\\r\\n\\r\\n/// @notice Simple single owner authorization mixin.\\r\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Owned.sol)\\r\\nabstract contract Owned {\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                                 EVENTS\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n\\r\\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                            OWNERSHIP STORAGE\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n\\r\\n    address public owner;\\r\\n\\r\\n    modifier onlyOwner() virtual {\\r\\n        require(msg.sender == owner, \\\"UNAUTHORIZED\\\");\\r\\n\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                               CONSTRUCTOR\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n\\r\\n    constructor(address _owner) {\\r\\n        owner = _owner;\\r\\n\\r\\n        emit OwnershipTransferred(address(0), _owner);\\r\\n    }\\r\\n\\r\\n    /*//////////////////////////////////////////////////////////////\\r\\n                             OWNERSHIP LOGIC\\r\\n    //////////////////////////////////////////////////////////////*/\\r\\n\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        owner = newOwner;\\r\\n\\r\\n        emit OwnershipTransferred(msg.sender, newOwner);\\r\\n    }\\r\\n}\\r\\n\"\r\n    },\r\n    \"contracts/sale.sol\": {\r\n      \"content\": \"pragma solidity ^0.8.13;\\r\\n\\r\\nimport \\\"./ERC20.sol\\\";\\r\\nimport \\\"./Owned.sol\\\";\\r\\n\\r\\n\\r\\n// \u286f\u28de\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\u28fd\u287a\\r\\n// \u286f\u28de\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u286e\u286f\\r\\n// \u286f\u28de\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u282e\u283b\u282e\u283b\u280a\u281b\u280a\u281b\u280a\u283b\u282a\u281f\u282e\u283b\u28ae\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u28ee\u287b\u286e\u286f\u286f\u286f\\r\\n// \u286f\u28de\u28ee\u287b\u28ee\u28fb\u28fa\u287a\u28f5\u28fb\u28ea\u28af\u28de\u28be\u28d5\u28df\u28ae\u28af\u28de\u28be\u28d5\u28df\u28ae\u28af\u28de\u28be\u28d5\u28df\u28ae\u28af\u28de\u28be\u28d5\u28df\u28ae\u28af\u28de\u28be\u28d5\u28df\u28ae\u28af\u28de\u28be\u28d5\u28df\u28ae\u282f\u281e\u281a\u2811\u2809\u2808\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2809\u280a\u281b\u28ba\u28ae\u28b7\u28bd\u28ae\u28fb\u287a\u286e\u2877\u287d\u28ee\u28fb\u287a\u286e\u2877\u287d\u28ee\u28fb\u287a\u286e\u2877\u287d\u28ee\u28fb\u287a\u286e\u2877\u287d\u28ee\u28fb\u287a\u286e\u2877\u287d\u28ee\u28fb\u287a\u286e\u2877\u287d\u286e\u286f\u286f\u286f\u286f\u286f\\r\\n// \u286f\u28de\u28ee\u28fb\u28fa\u287a\u286e\u28fb\u28fa\u287a\u286e\u28d7\u286f\u28d7\u28b7\u28bd\u28dd\u28b7\u28dd\u28d7\u28b7\u28bd\u28dd\u28b7\u28dd\u28d7\u28b7\u28bd\u28dd\u28b7\u28dd\u28d7\u28b7\u28bd\u28dd\u28b7\u28dd\u28d7\u28b7\u28bd\u285d\u2817\u2819\u2801\u2801\u2801\u2804\u2804\u2880\u28c0\u28a0\u2884\u28d6\u28e6\u28f2\u28e6\u2876\u28d7\u287f\u287e\u28f7\u28bf\u28fe\u28fb\u287e\u287f\u287e\u28ef\u28b7\u28f5\u28f4\u28e6\u28d6\u28c6\u28c6\u28a4\u2880\u2840\u2804\u2804\u2804\u2804\u2809\u2809\u2813\u2897\u286f\u286f\u28ef\u28fb\u28fa\u28ea\u28af\u28af\u28af\u28fb\u28fa\u28ea\u28af\u28af\u28af\u28fb\u28fa\u28ea\u28af\u28af\u28af\u28fb\u28fa\u28ea\u28af\u28af\u28af\u28fb\u28fa\u28ea\u28af\u28af\u28af\u28af\u28af\u28af\u28af\u28af\u28eb\u28af\\r\\n// \u286f\u28de\u28de\u28de\u28ae\u28af\u28af\u28f3\u2873\u286f\u28ef\u28f3\u28bd\u28fa\u28bd\u28f3\u28dd\u28d7\u28b7\u28bd\u28dd\u28b7\u28dd\u28d7\u28b7\u28bd\u28dd\u28b7\u28dd\u28d7\u28b7\u28bd\u28dd\u28b7\u28dd\u28d7\u2837\u2819\u2819\u2801\u2804\u2804\u2804\u2860\u2860\u28c4\u28f6\u286e\u28f7\u28be\u287f\u28ff\u28fd\u28ef\u28ff\u28b7\u28ff\u28bf\u287f\u28ff\u28bf\u28df\u28ef\u28ff\u28bf\u287f\u28ff\u28bf\u287f\u28df\u28f7\u287f\u28f7\u28ff\u28fd\u287f\u28f7\u28f3\u2875\u28f6\u28e0\u28c4\u2884\u2804\u2804\u2804\u2809\u2819\u283a\u28fa\u287a\u286e\u286f\u286f\u28d7\u28d7\u28b7\u28bd\u28bd\u289d\u28d7\u28d7\u28b7\u28bd\u28bd\u289d\u28d7\u28d7\u28b7\u28bd\u28bd\u289d\u28d7\u28d7\u28b7\u28bd\u28bd\u28bd\u28bd\u289d\u287d\u287d\u28f5\u28fb\u287a\u287d\\r\\n// \u286f\u28de\u28de\u28be\u28bd\u28bd\u28dd\u286e\u28ef\u28fb\u287a\u28ee\u28fb\u287a\u28fd\u28fa\u287a\u286e\u286f\u28d7\u28d7\u286f\u28de\u286e\u286f\u28d7\u28d7\u286f\u28de\u286e\u286f\u28d7\u28d7\u282f\u280a\u2804\u2804\u2804\u2880\u2840\u28e4\u28f2\u28f5\u287f\u28ff\u28fb\u28ef\u28ff\u28bf\u28fb\u287f\u28ff\u28fd\u28f7\u28bf\u28df\u287f\u28df\u287f\u287f\u28df\u287f\u28ef\u287f\u287f\u28df\u287f\u287f\u28ff\u28df\u28ff\u28fb\u28ef\u28f7\u28ff\u28fb\u28ff\u28fb\u287f\u28df\u28ef\u287f\u28ef\u28ef\u28a7\u28e2\u28c0\u28c0\u2804\u2804\u2819\u283d\u283d\u28fd\u28fa\u28fa\u28bd\u28bd\u28bd\u28dd\u28de\u28be\u28bd\u28bd\u28bd\u28dd\u28de\u28be\u28bd\u28bd\u28bd\u28dd\u28de\u28be\u28bd\u28bd\u28bd\u289d\u287d\u28fd\u287a\u28fd\u287a\u286e\u286f\u286f\\r\\n// \u286f\u28de\u28be\u28bd\u28dd\u28d7\u28d7\u28df\u28de\u28ee\u28fb\u287a\u28ee\u28fb\u28fa\u28fa\u287a\u287d\u28dd\u28d7\u28b7\u28dd\u28b7\u28bd\u28dd\u28d7\u28b7\u28dd\u28b7\u28bd\u281d\u2803\u2804\u2804\u2804\u2880\u2884\u28d6\u28f7\u28ff\u28bf\u28fd\u28ef\u28ff\u28ff\u28fb\u28fd\u28ff\u28fb\u28ff\u28fb\u28fd\u28fd\u28be\u28fb\u28fd\u28ef\u28ff\u28fd\u28ef\u28ef\u28ff\u28fd\u28fd\u28bf\u28fd\u28fd\u28ef\u28ef\u28ef\u2877\u28ef\u286f\u28f7\u286f\u28ff\u28fd\u28bf\u28fb\u28ff\u28fb\u28ff\u28fb\u28ff\u28fb\u28ef\u28ff\u287e\u28d6\u28c6\u2804\u2804\u2804\u2811\u2833\u28bd\u28bd\u28dd\u28d7\u28b7\u28bd\u28bd\u28bd\u28bd\u28b5\u28f3\u28bd\u28bd\u28bd\u28bd\u28b5\u28f3\u28bd\u28bd\u28bd\u28bd\u28bd\u28dd\u28be\u28b5\u28eb\u2897\u286f\u286f\u286f\u286f\\r\\n// \u286f\u28fa\u28bd\u28f3\u28f3\u28f3\u28f3\u28f3\u28f3\u28f3\u2873\u28fd\u28fa\u28fa\u287a\u286e\u286f\u286f\u2877\u28dd\u28b7\u28bd\u28dd\u28d7\u28b7\u28dd\u28b7\u28bd\u281d\u2801\u2804\u2804\u2880\u28d4\u28fe\u28be\u287f\u28ff\u28fd\u28bf\u28fb\u28ff\u28fd\u28bf\u28fe\u28af\u287f\u28fe\u28fd\u28fe\u28ef\u28f7\u28bf\u28df\u28ef\u28bf\u287e\u28fd\u28be\u287d\u2877\u286f\u287f\u28de\u28ef\u28af\u2877\u28ef\u28bf\u28be\u286f\u28ff\u287d\u28ff\u28bd\u287f\u28fe\u28ef\u28ef\u287f\u28fd\u28fd\u28bf\u28be\u28ff\u28fd\u28f7\u28bf\u28ff\u28fb\u28fd\u28ef\u28d6\u28c0\u2804\u2804\u2801\u2813\u28d7\u286f\u286f\u286f\u286f\u28ef\u2873\u286f\u286f\u286f\u286f\u28ef\u2873\u286f\u286f\u286f\u286f\u28ef\u28f3\u28bd\u28bd\u28dd\u28be\u28bd\u28fa\u28bd\u28bd\u28dd\\r\\n// \u286f\u28f3\u28af\u28de\u28de\u28de\u28de\u289e\u28de\u28ae\u28fb\u28fa\u287a\u286e\u286f\u286f\u286f\u286f\u28fb\u28fa\u28dd\u28d7\u28b7\u289d\u28d7\u287d\u2809\u2801\u2804\u2804\u28d4\u28f6\u28f7\u28bf\u28df\u28ff\u28bf\u28ff\u28fd\u28bf\u287f\u28fd\u287e\u28ff\u28fd\u28bf\u28fb\u28ef\u28b7\u28bf\u28be\u28bd\u28af\u286f\u286f\u286f\u286f\u286f\u286f\u286f\u28af\u282f\u282f\u281f\u282e\u282f\u282f\u282f\u282f\u282f\u282f\u28af\u28af\u28af\u28bf\u28bd\u28df\u28be\u286f\u28ff\u28b7\u287f\u28fb\u28fd\u28b7\u28bf\u28fe\u28bf\u28ef\u28ff\u28fd\u28fe\u28bf\u2877\u28f7\u2874\u2840\u2804\u2808\u2818\u283d\u287d\u28dd\u286e\u286f\u286f\u286f\u286f\u28ef\u28fa\u28bd\u28bd\u28bd\u28bd\u289d\u28de\u286e\u286f\u2877\u287d\u287d\u28dd\u287e\u28dd\u28d7\u28d7\\r\\n// \u286f\u28de\u28d7\u28d7\u28d7\u28d7\u287d\u28dd\u287e\u28dd\u28de\u286e\u286f\u286f\u286f\u286f\u286f\u28ef\u28f3\u28f3\u2873\u287d\u287d\u281d\u280a\u2804\u2804\u28a0\u28f0\u28fc\u28ff\u28fd\u28fe\u28bf\u28ff\u28fb\u28ff\u28fb\u287e\u28df\u287f\u28df\u287f\u28ef\u28bf\u28af\u287f\u287e\u28fb\u28af\u28bf\u28af\u282f\u288f\u280f\u280f\u280b\u280d\u2809\u2808\u2805\u2809\u2801\u2809\u2808\u2804\u2801\u2848\u2880\u2801\u2809\u2808\u2809\u281d\u281d\u28af\u28af\u28af\u28bf\u28bd\u28af\u28bf\u28fb\u28bd\u28bf\u28af\u28ff\u28fb\u287d\u28ef\u287f\u28fe\u28bf\u28df\u28ff\u28fb\u28f7\u28f5\u28c0\u2804\u2804\u280b\u2897\u286f\u286f\u286f\u286f\u286f\u28de\u286e\u286f\u286f\u286f\u286f\u28fb\u28ae\u28af\u28af\u28af\u28af\u28af\u28f3\u28fb\u28fa\u28fa\u287a\\r\\n// \u286f\u28de\u28de\u28de\u28de\u28ae\u28af\u28f3\u28af\u28f3\u2873\u286f\u286f\u286f\u286f\u28fb\u28ae\u2897\u28d7\u28d7\u28af\u282f\u2803\u2804\u2804\u28c0\u28f4\u287d\u28ff\u28fd\u28fe\u28ef\u28ff\u28bf\u28fd\u28eb\u28f7\u28bf\u28bd\u287f\u286f\u286b\u286f\u286b\u28ab\u28af\u28af\u282b\u2839\u282d\u280d\u282f\u28bf\u28f3\u28ff\u28fa\u2842\u2804\u2804\u2804\u2804\u2840\u2804\u2820\u2880\u2805\u2850\u2804\u2822\u2828\u2828\u2820\u2801\u2804\u2888\u2808\u2821\u2839\u283d\u283d\u287d\u28bd\u282d\u281d\u2809\u289d\u287e\u28fd\u28bf\u28fd\u28fd\u28bf\u28df\u28ff\u28ef\u287f\u28f7\u28fb\u2877\u28e7\u28c4\u2804\u2804\u2838\u28bd\u28bd\u28bd\u28dd\u28be\u28bd\u28bd\u28bd\u28bd\u28bd\u28fa\u28bd\u28bd\u28bd\u28bd\u28bd\u28dd\u28de\u28de\u28de\u28ae\u28af\\r\\n// \u286f\u28de\u28de\u28de\u286e\u28ef\u287b\u286e\u28d7\u28d7\u286f\u286f\u286f\u286f\u28ef\u2873\u28ef\u28fb\u28fa\u287a\u2801\u2804\u2804\u2880\u2894\u28ff\u28be\u28df\u28ef\u28ff\u28fe\u287f\u28fe\u287f\u28ee\u28bd\u28bd\u282d\u28bd\u28bd\u28a7\u2829\u28ad\u2829\u28a8\u28ad\u28ad\u280c\u2885\u28a1\u280d\u2865\u28f9\u28fd\u28ef\u28ef\u2806\u2840\u2801\u2804\u2804\u2814\u280c\u280c\u280c\u2848\u2804\u2881\u2801\u2804\u2802\u2804\u2848\u2804\u2810\u2848\u2820\u2810\u2880\u2829\u2828\u2805\u2805\u2804\u280c\u28ad\u286f\u28ef\u28df\u2877\u28df\u28ff\u28fd\u28bf\u287e\u28df\u28ef\u28ff\u28fd\u28bf\u28fd\u28f6\u28c0\u2804\u2804\u2819\u28b5\u28eb\u28af\u28af\u28af\u28af\u28af\u28f3\u28bd\u28bd\u28bd\u28bd\u28bd\u28b5\u28f3\u28f3\u2873\u287d\u287d\u287d\\r\\n// \u286f\u28de\u28de\u28ee\u287b\u286e\u286f\u286f\u28d7\u28d7\u286f\u286f\u28ef\u287b\u28ee\u28fb\u28fa\u28fa\u285a\u2804\u2804\u2804\u28f8\u28fe\u28df\u28ef\u287f\u28ef\u28bf\u28f3\u287f\u28df\u287f\u287f\u287d\u2875\u2861\u2875\u2867\u286d\u2867\u2865\u288e\u28ac\u282c\u282d\u2827\u2825\u2825\u283c\u283d\u2860\u2897\u282f\u287f\u283e\u2815\u2804\u2805\u2821\u2801\u2805\u280c\u280c\u282a\u282c\u282e\u2815\u282d\u283d\u2838\u2871\u2814\u2825\u2805\u280e\u2894\u2825\u2804\u2804\u2804\u2802\u2804\u2804\u2828\u2835\u282f\u2837\u283d\u287d\u28bd\u28bd\u28be\u287b\u286f\u28ef\u28b7\u287f\u28fe\u28bf\u28ef\u28ff\u28fd\u28d6\u2840\u2804\u2808\u283a\u287d\u287d\u287d\u28dd\u28b7\u28bd\u28bd\u28bd\u28bd\u28bd\u289d\u28d7\u28d7\u28d7\u28af\u28af\u28af\u28af\\r\\n// \u286f\u28de\u28de\u286e\u286f\u286f\u28ef\u28fb\u287a\u286e\u28ef\u287b\u286e\u286f\u28de\u28de\u28be\u2808\u2804\u2804\u28f0\u28fa\u28fd\u28f7\u28bf\u28ef\u287f\u28df\u28ef\u28af\u280d\u280d\u2809\u2809\u2809\u2809\u2809\u2808\u2801\u2809\u2808\u2808\u2801\u2801\u2809\u2809\u288c\u2808\u2808\u2801\u2805\u2801\u2804\u2801\u2801\u2801\u2801\u2804\u2804\u2804\u2840\u2804\u2804\u2840\u2802\u2801\u2808\u2808\u2828\u2828\u2829\u2828\u2829\u2829\u2839\u2839\u2831\u2839\u282c\u2805\u2801\u2801\u2802\u2801\u2808\u2808\u2809\u2809\u2809\u2808\u2801\u2811\u2801\u2809\u2809\u2809\u28bd\u28bd\u28bf\u28fb\u28ef\u28ff\u28fd\u28bf\u28fe\u28a6\u2840\u2804\u2809\u28ef\u28fb\u287a\u287d\u287d\u287d\u287d\u287d\u287d\u28dd\u28de\u28de\u28be\u28bd\u28bd\u28bd\u28bd\\r\\n// \u286f\u28de\u286e\u286f\u28ef\u28fb\u28fa\u28ea\u28af\u287b\u286e\u286f\u286f\u28fb\u28fa\u285a\u2801\u2804\u2880\u28bc\u287e\u28ff\u28fd\u28be\u287f\u28fd\u28df\u28ef\u28bf\u289d\u2814\u2804\u2828\u28a4\u2870\u286c\u2844\u284c\u2804\u2821\u2808\u2804\u2801\u2808\u2804\u2802\u2810\u2804\u2801\u2804\u2804\u2840\u2820\u2820\u2810\u2804\u2802\u2801\u2808\u2844\u280c\u280c\u2805\u2821\u2801\u2891\u2808\u2804\u2804\u2820\u2804\u2808\u2804\u2805\u2804\u2805\u2841\u2841\u2881\u2803\u2804\u2822\u2820\u2820\u2802\u2804\u2802\u2804\u2804\u2886\u28a4\u2822\u2844\u2825\u2804\u2804\u28b9\u289d\u28ef\u28bf\u28ef\u28ef\u287f\u28df\u28ff\u28ef\u28e7\u2884\u2804\u2811\u2897\u286f\u286f\u286f\u286f\u286f\u286f\u28fb\u28fa\u28fa\u28fa\u28bd\u28bd\u28bd\u28dd\u28d7\\r\\n// \u286f\u28fa\u28bd\u28dd\u28de\u28de\u28de\u28ae\u28af\u28af\u28af\u28af\u28af\u28f3\u2853\u2804\u2804\u2860\u28ee\u28ff\u28ef\u28bf\u28de\u28ef\u28ff\u28af\u28ef\u28ef\u286f\u286f\u2840\u2804\u28a1\u28ab\u286f\u286f\u286d\u280c\u2804\u2804\u2808\u2804\u2880\u2808\u2804\u2804\u2840\u2880\u2820\u28a0\u28a1\u286a\u288d\u2821\u2804\u2882\u28e0\u28b5\u282d\u2808\u2840\u2804\u2840\u2884\u28ac\u28a4\u28a5\u28ad\u282e\u2885\u2805\u280c\u2840\u2804\u2808\u2828\u2828\u2828\u2822\u2885\u282c\u2828\u288c\u282c\u28a8\u2820\u2821\u2890\u2888\u2808\u282d\u286b\u28af\u280d\u2804\u2804\u282d\u287d\u28fd\u28bd\u28b7\u28ff\u28fd\u28ef\u287f\u28fe\u28fd\u28f7\u28c6\u2804\u2808\u28af\u28af\u28af\u28af\u28af\u28af\u28f3\u28f3\u28f3\u28bd\u28bd\u289d\u28d7\u28d7\u28d7\\r\\n// \u286f\u28f3\u28af\u28de\u28de\u28de\u286e\u286f\u286f\u286f\u286f\u28ef\u28f3\u28f3\u2801\u2804\u2820\u28ff\u28fb\u2875\u28ef\u28bf\u28fd\u28ef\u28bf\u287d\u2877\u286f\u286f\u2867\u2802\u2804\u2830\u28f9\u28bd\u283d\u282c\u2808\u2804\u2804\u2802\u2801\u2820\u2820\u2808\u2804\u2820\u2820\u282c\u28a7\u282f\u28ac\u283d\u284c\u28ac\u28fa\u28ae\u2827\u2825\u2841\u2804\u2824\u28fc\u28af\u282f\u284a\u28a8\u282e\u283d\u282d\u2829\u2850\u2804\u2804\u2802\u2804\u2804\u2888\u2828\u2820\u2821\u2821\u2821\u2808\u2804\u2821\u2821\u2821\u2820\u2805\u2805\u282d\u2827\u282d\u2804\u2804\u282d\u28ae\u28af\u28af\u28bf\u28be\u28fd\u28fe\u287d\u28ef\u286f\u28ff\u28fd\u28c6\u2804\u2818\u287d\u287d\u287d\u28dd\u28d7\u28d7\u28b7\u28bd\u28bd\u28bd\u28dd\u28de\u28de\u286e\\r\\n// \u286f\u28de\u28d7\u28d7\u28d7\u28b7\u28bd\u28bd\u28bd\u28bd\u28dd\u28de\u285e\u2804\u2804\u2870\u28ff\u28af\u28b7\u28af\u286f\u28ef\u2877\u28ff\u28bd\u286f\u287f\u28fd\u28bd\u288e\u2802\u2804\u2821\u2873\u287d\u286d\u2802\u2841\u2802\u2804\u2804\u2810\u2820\u2821\u2828\u280c\u280c\u282c\u282d\u2863\u28af\u28bd\u28bd\u28ac\u28b7\u28bd\u28b5\u28bd\u28a5\u2827\u28bd\u28b9\u28fd\u28bf\u28af\u282f\u288f\u28ac\u287c\u287d\u282d\u280c\u2804\u2801\u2880\u2808\u2820\u2804\u2804\u2804\u2804\u2802\u2840\u2802\u2805\u2850\u2804\u2842\u2805\u2828\u2810\u2804\u2805\u2825\u2801\u2804\u28b8\u2835\u28bd\u28bd\u28bd\u2873\u28d7\u28ef\u287f\u2877\u28df\u2877\u28ef\u287f\u28d6\u2840\u2808\u28bd\u28bd\u28fa\u28fa\u287a\u287d\u287d\u28dd\u28d7\u28d7\u28d7\u28b7\u28bd\\r\\n// \u286f\u28de\u28de\u28de\u28ae\u28af\u28af\u28af\u28af\u28d7\u28d7\u2857\u2801\u2804\u28b0\u287f\u28df\u287f\u287d\u28df\u287f\u28df\u28ff\u28fb\u28af\u28bf\u28af\u28bf\u28bd\u2863\u2841\u2804\u280c\u286f\u28af\u2803\u2805\u2890\u2808\u2804\u2882\u2808\u2804\u2821\u2828\u2828\u2811\u280d\u282d\u289d\u2835\u28dd\u28af\u28af\u28af\u28df\u28af\u28af\u28bf\u287d\u28fd\u287d\u287d\u286f\u282f\u287d\u28fa\u28bd\u28bd\u28b5\u28b7\u28bf\u289d\u287d\u2866\u2804\u2810\u2804\u2840\u2804\u280c\u2810\u2820\u2821\u2881\u2822\u2811\u2828\u2828\u2891\u2831\u2821\u2825\u2891\u2801\u2804\u28b8\u28b9\u28bd\u28bd\u28bd\u28bd\u28af\u28b7\u28bf\u287f\u28df\u287f\u28fd\u28bf\u28bf\u2866\u2804\u2804\u28af\u289e\u286e\u286f\u286f\u28ef\u28f3\u28f3\u2873\u287d\u28dd\u28d7\\r\\n// \u286f\u28de\u28de\u28be\u28bd\u28bd\u28bd\u28dd\u28d7\u28d7\u2817\u2801\u2804\u2820\u28fd\u28bf\u28bd\u28bd\u28af\u28ff\u28fb\u287d\u28ef\u28af\u28bf\u28bd\u28af\u28bf\u28bd\u2871\u2801\u2804\u2810\u285d\u286d\u2801\u2805\u2810\u2848\u2804\u2802\u2848\u2820\u2881\u2821\u2821\u2821\u2809\u280c\u2889\u2829\u2818\u2829\u2831\u2899\u280e\u289f\u28bd\u289d\u286f\u286f\u286f\u286f\u286f\u28ef\u28bf\u28bd\u28bd\u28af\u28df\u287f\u28fd\u28bf\u28fd\u28fb\u28d5\u2804\u2801\u2804\u2840\u2804\u2804\u2881\u2820\u2810\u2804\u2805\u2841\u2805\u2802\u2805\u2829\u2828\u2828\u2804\u2804\u2829\u2818\u289d\u287d\u28f9\u28bd\u283d\u289d\u28ab\u289f\u28ef\u287f\u28fd\u28fb\u287d\u28ff\u28e2\u2804\u2808\u28b9\u28fa\u28bd\u28bd\u28fa\u287a\u286e\u286f\u28ef\u28f3\u28f3\\r\\n// \u286f\u28de\u28be\u28bd\u28bd\u28dd\u28d7\u28d7\u28d7\u2807\u2804\u2804\u28a0\u28f9\u28ef\u287f\u28fd\u286f\u28ff\u28fd\u28fd\u28fd\u28af\u287f\u28fd\u286f\u28ff\u28bd\u287d\u286e\u28c2\u28c8\u2860\u286b\u2850\u2888\u2804\u2821\u2820\u2808\u2804\u2804\u2820\u2804\u2805\u2825\u2821\u2801\u2801\u2804\u2804\u2808\u2804\u2801\u2804\u2808\u2804\u2805\u280d\u282d\u286d\u28af\u283d\u286d\u282f\u282d\u282d\u282d\u289d\u283c\u282d\u28af\u28af\u28af\u286f\u28ef\u286f\u284c\u280c\u2804\u2804\u2801\u2840\u2804\u2821\u28a1\u2821\u2868\u2828\u2828\u2828\u2821\u2825\u2861\u28c1\u28c0\u28a1\u2801\u280c\u282d\u2815\u288d\u282c\u28ac\u28be\u286f\u28ff\u287f\u28fd\u28fd\u28fd\u28fd\u28f7\u2845\u2804\u2804\u2813\u28ef\u287b\u286e\u286f\u28ef\u28fb\u28fa\u28fa\u287a\\r\\n// \u286f\u28fa\u28bd\u28dd\u28d7\u28d7\u28d7\u28d7\u28d7\u2804\u2804\u2804\u28ae\u287f\u28d7\u286f\u28ef\u28bf\u28ef\u287f\u28fe\u28bd\u287d\u287d\u28d7\u286f\u28ef\u28af\u286f\u28ef\u28b7\u28b5\u283d\u280c\u2820\u2804\u280c\u2820\u2804\u2804\u2804\u2804\u2804\u2804\u2828\u2820\u2810\u2804\u2801\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2821\u2828\u282c\u280c\u282c\u280c\u282c\u282c\u280c\u2806\u2825\u282d\u28aa\u282a\u2827\u282f\u286f\u286f\u2846\u2828\u2805\u2802\u2801\u2804\u2804\u2805\u2825\u2825\u280c\u280c\u280c\u280c\u280c\u2824\u2821\u28a2\u2822\u2804\u2810\u2828\u2820\u2821\u2805\u282e\u28bc\u28af\u28af\u28b7\u28bf\u28bf\u28de\u2877\u28fd\u28be\u28ef\u2804\u2804\u2804\u28d7\u28af\u28af\u28fb\u28fa\u28fa\u287a\u286e\u286f\\r\\n// \u286f\u28eb\u28d7\u28d7\u28d7\u28d7\u28d7\u28d7\u2801\u2804\u2804\u2820\u28ff\u28af\u2837\u282f\u282f\u287f\u2857\u283f\u283d\u283d\u281d\u283d\u2815\u282f\u283a\u281d\u283d\u282a\u282f\u282b\u282d\u2804\u2802\u2810\u2804\u2802\u2804\u2808\u2804\u2804\u2804\u2804\u2804\u2802\u2804\u2820\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2802\u2810\u2850\u280c\u2814\u2821\u2828\u2820\u2821\u2825\u2831\u2831\u2831\u282d\u282d\u28af\u28ba\u28bd\u282a\u2820\u2851\u280c\u280c\u2814\u2828\u2820\u2811\u288c\u2822\u2821\u2828\u280c\u280e\u282c\u2828\u2810\u2880\u2821\u2821\u2828\u2828\u2850\u2805\u2805\u286b\u28af\u28bf\u28bd\u28af\u28bf\u287e\u287d\u28d7\u286f\u28ff\u2862\u2804\u2804\u2808\u28ef\u28fb\u28fa\u28fa\u28fa\u287a\u287d\u287d\\r\\n// \u286f\u28de\u28de\u28de\u28de\u28de\u28de\u284e\u2804\u2804\u2804\u28ae\u28ff\u287b\u28ef\u28af\u28ea\u2823\u2883\u2803\u2805\u280a\u2810\u2820\u2801\u2802\u2841\u2802\u2801\u2802\u2848\u2804\u2802\u2801\u280c\u2808\u2848\u2810\u2804\u2802\u2820\u2804\u2804\u2804\u2804\u2802\u2801\u2804\u2804\u2808\u2804\u2804\u2804\u2804\u2880\u2804\u2801\u2804\u2804\u2808\u2804\u2888\u2808\u2848\u2808\u2808\u2808\u2820\u2801\u2889\u2829\u2809\u280f\u288f\u280f\u284f\u28af\u280b\u280c\u2802\u2885\u2823\u2879\u2898\u282c\u2811\u2805\u2851\u2821\u2823\u2829\u2829\u288a\u28ba\u28ae\u2872\u286c\u2828\u288a\u280c\u2862\u2861\u2843\u282a\u2829\u2839\u28bd\u287b\u286f\u28ff\u28fb\u28bd\u28af\u28df\u286f\u2844\u2804\u2804\u28b8\u28fa\u28fa\u287a\u286e\u286f\u286f\u286f\\r\\n// \u286f\u28de\u28de\u28de\u28de\u28de\u28de\u2806\u2804\u2804\u2830\u28fd\u28f3\u28af\u286f\u28df\u28ff\u28fd\u28ac\u284c\u2848\u2848\u2848\u2880\u2801\u2841\u2880\u2801\u2881\u2801\u2840\u2810\u2808\u2820\u2808\u2820\u2810\u2808\u2808\u2848\u2890\u2804\u2804\u2804\u2880\u2804\u2841\u2804\u2804\u2804\u2880\u2804\u2820\u2804\u2840\u2804\u2804\u2808\u2840\u2808\u2840\u2804\u2804\u2804\u2804\u2801\u2804\u2810\u2808\u2804\u2804\u2805\u280d\u2845\u284d\u28ad\u2891\u2805\u280d\u2868\u28c8\u28aa\u2821\u284d\u286a\u28e9\u28a1\u288a\u280c\u288d\u280c\u280d\u2860\u28eb\u28eb\u28dd\u28ad\u2828\u2828\u2868\u28dd\u2875\u286f\u286f\u28cf\u2867\u28eb\u289d\u287d\u28ef\u286f\u28df\u28fd\u2873\u28ff\u2862\u2804\u2804\u2804\u28f3\u28f3\u28bd\u28bd\u28bd\u28bd\u28dd\\r\\n// \u286f\u28de\u28de\u28de\u28de\u28de\u28de\u2804\u2804\u2804\u28ae\u28ff\u28fd\u28fd\u28fd\u28fd\u28ff\u28be\u28ef\u28ef\u28e6\u28c6\u2844\u2802\u2804\u2890\u2820\u2808\u2820\u2820\u2804\u2805\u2848\u2804\u2828\u2880\u2810\u2848\u2820\u2820\u28a1\u2885\u28c2\u2881\u2880\u2820\u2804\u2840\u2801\u2808\u2804\u2804\u2804\u2804\u2804\u2808\u2804\u2801\u2840\u2802\u2804\u2820\u2804\u2804\u2801\u2804\u2881\u2808\u2884\u2821\u2861\u2825\u2869\u28ac\u28aa\u28a5\u28a3\u282d\u282c\u286c\u28ac\u28ac\u2895\u286d\u286d\u28ee\u28a7\u286f\u286d\u286c\u284c\u286c\u28e8\u28be\u2875\u28fd\u28ed\u28a5\u2895\u287d\u28f7\u28bd\u28fd\u28bd\u2875\u286f\u28ef\u28bd\u28bd\u287d\u28ef\u287f\u28ee\u28ff\u28fd\u286f\u2840\u2804\u2804\u28b8\u28ae\u28af\u28af\u28af\u28f3\u28f3\\r\\n// \u286f\u28de\u28de\u28de\u28de\u28de\u282e\u2804\u2804\u2804\u28fd\u28bf\u28fa\u28be\u28fa\u28fd\u287e\u28df\u287e\u2875\u28d7\u28b7\u28bd\u28ac\u2824\u2804\u2804\u2804\u2802\u2804\u2802\u2804\u2804\u2804\u2801\u2820\u2804\u2804\u2802\u2828\u2810\u2825\u2862\u2805\u2820\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2820\u2808\u2820\u2804\u2804\u2804\u2880\u2810\u2820\u2828\u28a0\u2831\u2828\u282c\u2828\u2820\u2821\u280c\u2822\u2821\u2831\u2828\u282a\u280c\u2826\u2815\u2825\u283d\u287d\u286e\u2847\u2867\u2895\u2835\u28bc\u28bd\u28bd\u28b5\u28af\u28a7\u28af\u28af\u28af\u28af\u28be\u283d\u286e\u286f\u28be\u28bd\u28b5\u28af\u28ff\u28bd\u28f3\u28b7\u28bd\u287f\u2844\u2804\u2804\u28b8\u28bd\u28bd\u28bd\u28dd\u28de\u28de\\r\\n// \u286f\u28de\u28de\u28de\u28de\u286e\u2847\u2804\u2804\u2898\u28be\u287f\u28fa\u28bd\u28be\u28fd\u28af\u2877\u286f\u28df\u28ae\u2873\u287d\u282e\u286f\u2873\u2865\u2804\u2804\u2804\u2804\u2810\u2804\u2804\u2804\u2804\u2804\u2804\u2810\u2804\u2821\u2863\u2872\u2804\u2802\u2820\u2804\u2804\u2820\u2880\u2820\u2804\u2820\u2880\u2882\u2890\u2888\u2810\u2804\u2895\u2830\u2810\u2848\u2804\u2882\u28a2\u2831\u28d5\u2866\u28d7\u28f7\u28f3\u28fd\u28be\u28f5\u28fb\u28ae\u28b7\u28b5\u2895\u2894\u2804\u2811\u280c\u280e\u286a\u286f\u28d7\u28df\u28be\u285d\u286e\u2833\u2899\u283d\u28fa\u2873\u286f\u2877\u286f\u286f\u28d7\u28af\u28af\u287a\u287a\u2875\u28f3\u28bd\u2873\u28fb\u28df\u28be\u28bd\u28f3\u28ff\u28a2\u2804\u2804\u28b8\u28bd\u28bd\u28b5\u28f3\u28f3\u28f3\\r\\n// \u286f\u28de\u28de\u28de\u28ae\u28fb\u2842\u2804\u2804\u2828\u28ff\u28df\u28df\u28df\u28ef\u28ff\u28fb\u287d\u28ef\u287b\u287d\u287d\u28dd\u28bf\u289d\u28af\u287b\u286b\u2853\u2804\u2804\u2804\u2820\u2804\u2802\u2801\u2804\u2801\u2804\u2880\u2821\u2829\u286b\u2842\u2801\u2804\u2862\u289a\u28b5\u28b3\u287d\u28df\u28ff\u28fb\u28df\u28ff\u28fb\u28fd\u28eb\u28b3\u2831\u2843\u2863\u286b\u287a\u28dd\u287f\u28ef\u287f\u28df\u28ff\u28fb\u28fd\u28fb\u28dd\u28cf\u28af\u28db\u289f\u28af\u28af\u286b\u2863\u2891\u2889\u282a\u28fb\u287b\u28fa\u28ab\u282b\u286b\u286b\u28d7\u287f\u28dd\u286f\u28df\u286f\u28df\u28af\u287b\u287d\u28f9\u289d\u287d\u28bd\u28bd\u289d\u286f\u28df\u28ef\u28df\u28df\u28b7\u28ff\u2873\u2804\u2804\u28b8\u28bd\u289d\u28d7\u28d7\u28d7\u28d7\\r\\n// \u286f\u28de\u28de\u28be\u28bd\u28fa\u2805\u2804\u2804\u2838\u28fd\u28ef\u28fa\u2875\u28ef\u28ff\u28f3\u28af\u28f3\u28bd\u28dd\u28dd\u286d\u28eb\u28eb\u28eb\u28ad\u284b\u2840\u2801\u2804\u2840\u2804\u2804\u2804\u2804\u2804\u2804\u2820\u2880\u2888\u2829\u2888\u2802\u2804\u2841\u280c\u2861\u28c9\u28a5\u282d\u28a5\u288d\u28d7\u286f\u28ff\u28bd\u287e\u28fd\u2829\u2801\u2801\u2808\u2828\u28b9\u289d\u28df\u287f\u28dd\u287f\u28dd\u287d\u28f9\u2895\u28db\u289e\u283d\u28dd\u28af\u28cf\u2897\u28ad\u288d\u2890\u2804\u2848\u28aa\u28a9\u288d\u2895\u2869\u286a\u2869\u286b\u28cf\u28d7\u287d\u287d\u28dd\u287d\u286d\u28dd\u286d\u28dd\u286d\u28eb\u28eb\u289d\u286d\u286f\u28ef\u2877\u28fd\u28f9\u28dd\u28fe\u2873\u2804\u2804\u28b8\u28bd\u28dd\u28de\u28de\u28de\u28de\\r\\n// \u286f\u28de\u28be\u28dd\u28b7\u28dd\u2867\u2804\u2804\u2838\u28fd\u28fe\u28f3\u28ef\u287f\u28fe\u28fd\u28fd\u287d\u28fd\u287c\u286e\u286f\u287e\u287c\u28ee\u2863\u2845\u2804\u2820\u2804\u2804\u2804\u2804\u2808\u2804\u2808\u2804\u2840\u288c\u2802\u2820\u2804\u2805\u2804\u2804\u2805\u280c\u2806\u2802\u2811\u2821\u28a9\u2898\u289c\u28ac\u28ad\u289d\u282d\u2828\u2804\u2804\u2808\u2804\u286a\u286d\u2877\u286d\u2867\u287d\u287c\u283c\u28ac\u28aa\u282c\u286a\u28ac\u2822\u2855\u288c\u288e\u2825\u2825\u2825\u2860\u2804\u2820\u2805\u2827\u28d5\u28bd\u28ec\u2875\u28c5\u28b7\u28b5\u28ef\u286f\u28f7\u28bd\u286d\u2877\u28fd\u28b5\u287d\u28f5\u28f3\u287d\u28fd\u287d\u28fd\u28ef\u28be\u2875\u28d7\u28ff\u289d\u2804\u2804\u28b8\u28b5\u28f3\u28f3\u28f3\u28f3\u2873\\r\\n// \u286f\u28fa\u28f3\u28dd\u28d7\u28d7\u286f\u2804\u2804\u2838\u28fd\u28b7\u28fb\u28be\u28bd\u287f\u28de\u286e\u28df\u28ae\u283e\u286d\u2873\u28dd\u289e\u2826\u2807\u2802\u2804\u2804\u2804\u2804\u2802\u2804\u2802\u2804\u2820\u2804\u2804\u2804\u2820\u2804\u2804\u2801\u2804\u2804\u2804\u2804\u2804\u2804\u2802\u2801\u2802\u2801\u2801\u2802\u2804\u2804\u2804\u2804\u2804\u2804\u2802\u2821\u282c\u282a\u286a\u282a\u281c\u2814\u280c\u282a\u2890\u2810\u2850\u280c\u2890\u2810\u2850\u2890\u2810\u280c\u280c\u2806\u2842\u2882\u2810\u2828\u2804\u2804\u2823\u282f\u287b\u28bc\u2830\u2895\u28b7\u289d\u2806\u2831\u287d\u287d\u28ae\u2897\u28af\u289e\u286e\u28de\u28b7\u28bd\u28fd\u28be\u28bd\u28ae\u2837\u28ff\u2805\u2804\u2804\u28b8\u28f3\u28f3\u28f3\u28f3\u2873\u286f\\r\\n// \u286f\u28f3\u28f3\u28f3\u28f3\u2873\u28ef\u2843\u2804\u2804\u28fd\u28ff\u287a\u286f\u2877\u28ff\u2877\u28fb\u287a\u2875\u287b\u287a\u287a\u286a\u285e\u288e\u2802\u2804\u2820\u2804\u2801\u2804\u2804\u2880\u2804\u2880\u28a6\u28ba\u28b1\u2801\u2894\u288a\u2802\u2804\u2810\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2802\u280c\u2886\u2823\u284a\u288e\u282a\u288a\u2814\u2881\u2802\u2842\u2802\u2882\u2802\u2842\u2842\u2822\u282a\u2858\u281c\u2894\u2822\u2842\u282a\u2878\u2878\u2878\u2894\u2895\u28aa\u28b2\u2831\u28aa\u2873\u2895\u2802\u2802\u289d\u28be\u28bd\u287a\u28dd\u28d7\u289f\u286e\u28d7\u28b7\u28bf\u2873\u2867\u2873\u28fd\u28ef\u2843\u2804\u2804\u28b8\u28fa\u28fa\u287a\u286e\u286f\u286f\\r\\n// \u286f\u28f3\u28f3\u28f3\u28f3\u28bd\u28fa\u2886\u2804\u2804\u28aa\u28f7\u28fb\u28fb\u28fb\u28fd\u28df\u286f\u28df\u28af\u287b\u28dd\u288f\u28af\u28ab\u2803\u2804\u2804\u2804\u2804\u2804\u2840\u2888\u28d0\u2872\u2879\u28d3\u288f\u2897\u2801\u2853\u2805\u2804\u2808\u2804\u2840\u2820\u2804\u2804\u2804\u2804\u2804\u2840\u2810\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2808\u2848\u2898\u2898\u2898\u2898\u2838\u2858\u2885\u2803\u2815\u2851\u2828\u288a\u2882\u2815\u28d8\u2898\u288d\u288f\u289e\u289d\u2873\u2879\u286a\u286b\u28fa\u286b\u28df\u289d\u2893\u2895\u2891\u280f\u2853\u288f\u2803\u2810\u2808\u2808\u280b\u280f\u288b\u281b\u282a\u281b\u28dd\u28af\u28fb\u287f\u28dd\u28df\u28bd\u28b7\u28d7\u2804\u2804\u2804\u28b8\u28fa\u28fa\u287a\u287d\u287d\u28dd\\r\\n// \u286f\u28f3\u28f3\u28f3\u28dd\u28b7\u28dd\u28d7\u2804\u2804\u2828\u28fb\u287d\u28dd\u28de\u28fd\u28fd\u287d\u28dd\u28dd\u28ce\u2897\u28cd\u288f\u2851\u2804\u2804\u2804\u2801\u2804\u28c4\u28d4\u289c\u28dc\u289c\u28cd\u28ae\u2879\u28c8\u2841\u2804\u2801\u2801\u2804\u2841\u2804\u2840\u2840\u2848\u2880\u2804\u2801\u2804\u2804\u2804\u2840\u2804\u2804\u2804\u2840\u2808\u2880\u2880\u28c4\u28c2\u2844\u28c5\u28a1\u2888\u2842\u284d\u2868\u2868\u28c8\u2842\u28c5\u2851\u28cc\u286a\u28ea\u2871\u28ed\u28e3\u28eb\u2871\u28d1\u28a9\u28ea\u28af\u28eb\u2873\u28f9\u2871\u2861\u2881\u2820\u2804\u2840\u2801\u2840\u2804\u2801\u2840\u2880\u28a0\u28e0\u28ea\u28e3\u28eb\u287e\u28ef\u287a\u28ee\u28fb\u28bf\u2851\u2804\u2804\u2804\u28f8\u28fa\u28ea\u28af\u28af\u28af\u28f3\\r\\n// \u286f\u28f3\u28f3\u28f3\u28dd\u28d7\u28d7\u28b7\u2805\u2804\u2804\u289e\u28ff\u28fd\u28f3\u28f7\u28fb\u28fd\u28f3\u28d7\u28f7\u28bd\u287c\u2865\u2815\u2804\u2880\u28d0\u28a4\u28af\u28f2\u28b5\u28b5\u28b5\u28b5\u28b5\u28b5\u28bd\u28b4\u28a5\u2840\u2804\u2804\u2814\u2804\u2842\u2804\u2884\u2804\u2884\u2810\u2840\u2802\u2808\u2804\u2804\u2804\u28cc\u28f4\u28f0\u28ac\u28b4\u28f3\u28f5\u28f7\u28df\u28f7\u287f\u286e\u28ce\u2894\u2894\u2894\u2894\u288c\u28a6\u2895\u28f5\u28f9\u28dc\u28ee\u28b7\u2875\u28f5\u28dd\u2854\u2865\u28de\u28ff\u287a\u28ee\u28f7\u28fd\u28fa\u28a6\u28e2\u2804\u2804\u2801\u2804\u2804\u2801\u2820\u28f4\u28bd\u28bc\u28bc\u287c\u28ee\u28ff\u28ae\u28ef\u28b7\u28ef\u28df\u2804\u2804\u2804\u28a0\u28f3\u2873\u287d\u287d\u287d\u28dd\u28de\\r\\n// \u286f\u28f3\u28f3\u28f3\u28f3\u2873\u287d\u28dd\u2867\u2804\u2804\u2810\u28ff\u28de\u2877\u28f3\u28af\u28f7\u28b7\u28f3\u28bd\u2873\u2873\u2855\u2880\u2826\u28d6\u289e\u28ae\u28b3\u282e\u285e\u286e\u285e\u285e\u28de\u282e\u2857\u286f\u2873\u28d5\u28a6\u28a2\u2860\u2862\u2810\u2808\u2814\u2808\u2804\u2802\u2840\u2808\u2804\u2804\u2804\u2804\u2804\u2802\u2822\u2801\u2811\u289d\u28b7\u2897\u28df\u28d7\u282f\u2823\u2822\u2842\u2822\u2882\u2822\u2811\u2814\u2895\u28b2\u28aa\u289e\u28bc\u2873\u287d\u287a\u2872\u2832\u2830\u28b5\u28b3\u28aa\u28b7\u28d7\u28b7\u28af\u2873\u2815\u2804\u2820\u2804\u2802\u2808\u2804\u2804\u28aa\u289e\u28ae\u2873\u28ef\u28b7\u286f\u2877\u286f\u2877\u28ff\u2842\u2804\u2804\u28a0\u28af\u28de\u287d\u287d\u287d\u28fd\u28fa\u28fa\\r\\n// \u286f\u28f3\u28f3\u28f3\u28f3\u28bd\u28dd\u28d7\u286f\u2804\u2804\u2804\u287d\u28ff\u28de\u2877\u28fb\u28be\u28ff\u28fa\u28d7\u286f\u28d7\u28b7\u28f3\u28bb\u28ba\u287a\u28d5\u2897\u288f\u281e\u284e\u28de\u289e\u28de\u28b5\u2873\u28fb\u28ba\u287a\u286e\u28f3\u28b3\u286a\u2842\u2810\u2820\u2801\u2882\u2810\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2820\u2898\u2894\u282a\u280a\u2896\u289e\u289c\u282a\u2852\u2850\u2850\u2850\u2820\u2821\u2891\u2892\u28aa\u28b2\u28b3\u2873\u287b\u286e\u28d7\u288f\u2897\u28b1\u28b1\u287b\u28fa\u28d7\u28b7\u28fb\u28b3\u2815\u2805\u2882\u28a2\u287a\u28d5\u2897\u2884\u2808\u2890\u28b3\u28f3\u28fb\u28fd\u28bf\u28de\u286f\u28df\u28ff\u28df\u2804\u2804\u2804\u28ef\u28f3\u28f3\u28bd\u28bd\u28bd\u28fa\u287a\u286e\\r\\n// \u286f\u28f3\u28f3\u28f3\u28dd\u28d7\u28d7\u28d7\u28af\u28a7\u2804\u2804\u2808\u28fb\u28f7\u28fb\u28fb\u28fb\u28fb\u28d7\u28ff\u28dd\u287f\u28fd\u28fa\u287b\u28dd\u287d\u28da\u28d3\u2801\u2809\u2808\u2857\u28df\u28de\u28af\u28fb\u289d\u286f\u28fb\u28dd\u28ef\u28fb\u28da\u284a\u2848\u2810\u2841\u2802\u2810\u2804\u2804\u2804\u2802\u2804\u2801\u2804\u2802\u2801\u2880\u2888\u2821\u2801\u28c1\u28e1\u28d1\u28d1\u28d9\u2858\u286a\u28ca\u288e\u286a\u28ca\u2886\u2883\u28a3\u28ab\u2873\u287b\u28dd\u286f\u28eb\u28fb\u289d\u284e\u28d7\u28df\u28fd\u28fa\u28fb\u28dd\u28c3\u280b\u2801\u2879\u2879\u28dd\u28f3\u286b\u28cf\u28df\u28b6\u28fd\u28f3\u28df\u28ff\u28fb\u28fa\u28fb\u28fb\u28ef\u2803\u2804\u2804\u28d4\u28d7\u28d7\u287d\u287d\u28dd\u28d7\u28d7\u286f\u286f\\r\\n// \u286f\u28f3\u28f3\u28f3\u28f3\u28f3\u2873\u287d\u287d\u28fd\u28e2\u2804\u2804\u2818\u28fa\u28ef\u28ef\u28ef\u28df\u28ff\u28fa\u2875\u28ef\u28f3\u28f3\u28bd\u28d5\u28cf\u2867\u28c3\u2804\u2804\u2801\u28dd\u28dc\u28ce\u286f\u28ee\u28eb\u28fa\u28d5\u28d7\u28f5\u28f3\u28d5\u2845\u2840\u2841\u2840\u2841\u2890\u2804\u2808\u2804\u2860\u2860\u2860\u28e4\u2894\u28dc\u28de\u2875\u28fb\u28fa\u28bd\u28f9\u287b\u28dd\u28d7\u28df\u28de\u28ee\u2873\u28dd\u28dc\u28cc\u2862\u2861\u28c3\u28eb\u289d\u28ce\u28ef\u28f3\u28b5\u28f9\u28dc\u28d5\u28d7\u28d7\u28af\u28f3\u28dd\u2844\u2805\u2804\u288c\u28dd\u28bc\u28f8\u28ea\u28f3\u28bd\u28fd\u28fa\u28f3\u28fb\u28d7\u28ef\u2877\u28ef\u287f\u2805\u2804\u2804\u2870\u28f5\u28f3\u28f3\u28bd\u28dd\u28d7\u28d7\u28b7\u28bd\u28bd\\r\\n// \u286f\u28f3\u28f3\u28f3\u28f3\u2873\u287d\u287d\u28fd\u287a\u286e\u28c7\u2804\u2804\u2898\u28bf\u28f7\u28bf\u28fe\u28ef\u28ff\u28ef\u28f7\u28b7\u28ef\u28d7\u28d7\u2877\u28dd\u2866\u2841\u2804\u2880\u28a7\u28d7\u28d7\u28df\u28ee\u28b7\u28f3\u28d7\u28f7\u28d7\u28d7\u28e7\u28a7\u2804\u2804\u2860\u2804\u2842\u2820\u2804\u2802\u2820\u2811\u2809\u2802\u2801\u2880\u2804\u28c0\u2884\u28d0\u28e0\u28e0\u28c2\u28c6\u28d4\u28d4\u2894\u2854\u28cc\u2886\u28a7\u287a\u28dc\u287c\u287c\u28dc\u28d7\u28f7\u28f3\u28fd\u28fd\u28fa\u286e\u28de\u28f6\u28b5\u28fb\u28de\u28ee\u286a\u2840\u2804\u289c\u286c\u28d7\u28d7\u28d7\u28ef\u28f7\u28b7\u28ef\u28ff\u28fd\u28fe\u28f7\u28bf\u28ff\u2807\u2804\u2804\u2860\u28ef\u28f3\u28f3\u2873\u286f\u28de\u28de\u286e\u286f\u286f\u286f\\r\\n// \u286f\u28f3\u28f3\u28f3\u28f3\u28bd\u28eb\u289f\u286e\u28ef\u28fb\u287a\u2844\u2804\u2804\u28b9\u28fb\u287f\u28f7\u28ff\u28fe\u2877\u28ff\u28bd\u28de\u28fe\u28fa\u28bd\u287a\u2852\u2804\u2804\u2820\u2873\u28f3\u28d7\u28b7\u28af\u28b7\u28f3\u2897\u2877\u28d7\u28df\u28de\u28d7\u280c\u2820\u2804\u2882\u2810\u2810\u2804\u2804\u2804\u2840\u2880\u2810\u2890\u2890\u2896\u2896\u2877\u28de\u28be\u28fa\u289e\u287e\u287a\u286e\u28fa\u28b2\u286a\u28de\u28bc\u287a\u286e\u285a\u286e\u287a\u286a\u28de\u28fe\u28fa\u28be\u28fa\u28bd\u28fa\u287a\u287a\u28fa\u287a\u2872\u2852\u2804\u2804\u28aa\u28ba\u28b5\u2897\u28df\u287e\u28de\u287f\u28fe\u28f3\u28ff\u287e\u28df\u28ff\u2853\u2804\u2804\u2804\u286f\u28d7\u28d7\u28b7\u28bd\u28bd\u28fa\u28ae\u28af\u28af\u28af\u28af\\r\\n// \u286f\u28f3\u28f3\u28f3\u28dd\u28b7\u28bd\u28bd\u28fa\u28b5\u2873\u286f\u28ef\u2842\u2804\u2804\u2810\u28ff\u28bf\u28fe\u28b7\u28ff\u28bf\u28fb\u287e\u28de\u28fe\u28f3\u28fb\u286a\u2802\u2804\u2810\u28dd\u287e\u28fa\u28af\u28fb\u28f3\u28f3\u28fb\u287d\u28fe\u28fa\u28be\u28fa\u2872\u2888\u2882\u2882\u2890\u2888\u2810\u2890\u2810\u2840\u2890\u2810\u2810\u2802\u2812\u2811\u2812\u280a\u2812\u2851\u2851\u2853\u289d\u289a\u28da\u28d3\u28db\u289e\u28d3\u2897\u28d3\u2893\u28da\u28da\u28de\u287e\u28fe\u28fa\u28df\u28fe\u28fb\u28fa\u287a\u28dd\u28d6\u289f\u287a\u2852\u2840\u2810\u2878\u28fa\u28bd\u28f3\u28d7\u28ff\u28f3\u28df\u28ef\u28f7\u28ff\u28fb\u28ff\u2805\u2804\u2804\u2804\u2878\u28fd\u28fa\u28fa\u28bd\u28bd\u28bd\u287a\u287d\u287d\u287d\u287d\u28dd\\r\\n// \u286f\u28f3\u28f3\u28f3\u28bd\u28bd\u28dd\u28b7\u28dd\u28d7\u28ef\u28fb\u28fa\u28fa\u2842\u2804\u2804\u2818\u287b\u28ff\u28df\u28ff\u28df\u28ff\u28ff\u28fb\u28ef\u28b7\u28fb\u28da\u2804\u2804\u2802\u28d7\u28df\u28df\u28ef\u28bf\u28dd\u28df\u28de\u28df\u28df\u28fe\u28fb\u28fb\u28da\u2804\u2808\u2812\u2891\u2850\u2848\u2850\u2880\u2810\u2804\u2804\u2808\u2804\u2804\u2804\u2880\u2810\u2810\u2880\u2802\u284a\u2850\u28d1\u2890\u2852\u28ca\u28da\u28ce\u2897\u28d3\u28f3\u28f3\u28f3\u28df\u28ff\u28fb\u287d\u28de\u28d7\u28df\u28fe\u2879\u285a\u28fa\u28f9\u289d\u28ca\u2802\u2804\u286a\u28fb\u28fd\u28f3\u28fb\u28de\u28df\u28fe\u28df\u28f7\u28ff\u28fb\u280d\u2804\u2804\u2804\u2874\u28fb\u28fa\u287a\u286e\u286f\u286f\u28d7\u286f\u286f\u286f\u28ef\u28fb\u287a\\r\\n// \u286f\u28f3\u28f3\u28bd\u28dd\u28d7\u287d\u28f3\u28f3\u28f3\u28f3\u28f3\u28f3\u2873\u2867\u28c4\u2804\u2804\u2808\u28b9\u28ff\u28fd\u28ff\u28fd\u28fe\u28bf\u28fa\u28df\u28d7\u28c7\u2805\u2804\u2808\u28ca\u288e\u28d3\u2859\u2855\u28cb\u285a\u2855\u28cb\u28da\u28ca\u2853\u28d3\u28d1\u2808\u2804\u2880\u2804\u2848\u288a\u2890\u2860\u2840\u2804\u2840\u2840\u2840\u2884\u2888\u2844\u28cc\u28d0\u28d0\u28e8\u28f0\u28e8\u28e2\u28e3\u286e\u28ee\u28d6\u28d7\u28ef\u2877\u28ef\u28af\u28db\u285a\u2855\u286b\u286b\u28d3\u28ab\u289a\u285a\u285c\u28d0\u28c2\u2853\u2855\u2841\u2842\u2804\u28ea\u28fa\u28fa\u28fd\u28fa\u28ef\u28df\u28f7\u28df\u28ef\u285f\u280a\u2804\u2804\u2804\u287c\u28dd\u28d7\u28b7\u28bd\u28bd\u28bd\u28dd\u28b7\u28bd\u28bd\u28bd\u287a\u286e\u286f\\r\\n// \u286f\u28f3\u28dd\u28d7\u28d7\u28b7\u28dd\u28d7\u28d7\u28d7\u28d7\u2897\u28d7\u287d\u28fd\u287a\u2866\u2840\u2804\u2804\u2813\u28bf\u28fe\u287f\u28fe\u28ff\u28bf\u28f7\u28bf\u28fa\u2850\u2880\u2804\u2840\u2880\u2804\u2880\u2804\u2840\u2880\u2804\u2880\u2804\u2880\u2804\u2840\u2890\u2848\u2820\u2804\u2840\u2804\u2842\u28c2\u2852\u28c6\u2845\u28c6\u28d4\u28d4\u28e6\u28f3\u28fa\u28ee\u28f6\u28fa\u28f6\u28f3\u28f7\u287f\u28de\u28ff\u2877\u28ff\u28fd\u28d7\u28ff\u28f3\u28f3\u28d0\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u2880\u2804\u2840\u2840\u2840\u2880\u2880\u2880\u2880\u28b2\u28f5\u28fb\u287e\u28fe\u28fe\u28fb\u28fe\u287f\u281d\u2802\u2804\u2804\u28c0\u289e\u287e\u28d5\u286f\u286f\u286f\u286f\u2877\u287d\u287d\u287d\u287d\u287d\u287d\u287d\u28dd\\r\\n// \u286f\u28de\u28de\u28de\u286e\u28d7\u28d7\u28d7\u28d7\u28d7\u28d7\u28af\u28de\u287d\u286e\u286f\u28ef\u28f3\u2840\u2804\u2804\u2808\u283a\u28ff\u28fb\u28fd\u28ff\u28fb\u28ff\u28b7\u28ef\u28f3\u28fd\u28ea\u28de\u287e\u28dc\u286e\u287e\u28dc\u287e\u28dc\u28de\u286e\u28de\u287c\u2852\u2804\u2802\u2820\u2804\u2804\u2890\u2820\u2892\u2892\u2892\u2850\u2810\u2812\u280a\u281a\u281a\u28be\u28be\u2877\u28ff\u28fb\u28fe\u28bf\u28fb\u28f7\u28fb\u28d7\u28b7\u28f3\u28f3\u28d7\u28f7\u28f3\u28f3\u28f3\u28f3\u2873\u28f3\u28f3\u28f3\u2873\u28f3\u28b1\u2871\u286a\u286a\u28ea\u287a\u28fa\u287a\u287e\u28de\u28ff\u28f3\u28ff\u28fd\u285e\u280a\u2804\u2804\u2804\u2860\u28ef\u2873\u28ef\u2873\u286f\u286f\u286f\u286f\u286f\u286f\u286f\u286f\u286f\u286f\u286f\u28fb\u28fa\\r\\n// \u286f\u28de\u28de\u286e\u28ef\u28f3\u28f3\u28f3\u28f3\u2873\u28dd\u28d7\u28b7\u28bd\u28bd\u28bd\u287a\u28ee\u28fb\u28c2\u2804\u2804\u2804\u2808\u283b\u28fd\u28fe\u287f\u28fe\u28ff\u28be\u28fb\u28fe\u28f3\u28f7\u28fb\u28f3\u28df\u28ef\u28d7\u28ff\u28fa\u28de\u28de\u2857\u2853\u2810\u2810\u2804\u2802\u2810\u2810\u2890\u2810\u2852\u2852\u2855\u28d2\u2851\u2880\u2804\u2802\u2810\u2880\u2813\u28df\u28ff\u28fd\u28fe\u28df\u28f7\u28fb\u28fe\u28fa\u28fb\u28de\u28de\u28fe\u28fa\u28de\u28fe\u28fa\u28de\u28fe\u28f3\u28f3\u28f3\u28fb\u28fa\u28d3\u28d7\u28d7\u28df\u28f2\u287a\u28f2\u28da\u28de\u28d3\u28df\u28fa\u2897\u2807\u2801\u2804\u2804\u28b0\u28bd\u28bd\u28fa\u28bd\u28ae\u28af\u28af\u28af\u28af\u28af\u28eb\u28af\u28af\u28af\u28eb\u28af\u28af\u28f3\u28f3\\r\\n// \u286f\u28de\u28ee\u28fb\u28fa\u28fa\u28fa\u287a\u286e\u28ef\u28f3\u28bd\u28bd\u28bd\u28dd\u28d7\u28df\u28de\u28de\u28be\u28b5\u2884\u2804\u2804\u2804\u2809\u2897\u28bf\u28df\u28ff\u28df\u28ff\u28fb\u28fd\u28fe\u28fb\u28f3\u28df\u28fe\u28f3\u28fb\u28da\u2853\u2803\u2841\u2802\u2810\u2804\u2881\u2808\u2804\u2841\u2882\u2882\u2892\u2898\u28ca\u28d2\u28d3\u2850\u2840\u2841\u288a\u2880\u288a\u28d0\u28d3\u28ff\u28fa\u28ef\u28df\u28f7\u28fb\u28fd\u28de\u28d7\u28ff\u28fa\u28f3\u28fb\u28de\u28f7\u28fb\u28de\u28ef\u28fb\u28fd\u28fa\u28f3\u28fb\u28fa\u28fa\u28f3\u28d7\u28df\u28f7\u28f3\u28ff\u28fa\u2857\u281d\u2804\u2804\u2804\u28e0\u28f2\u28bd\u28bd\u28bd\u28fa\u28bd\u28bd\u28bd\u28bd\u28bd\u289d\u2877\u287d\u287d\u28dd\u28b7\u28bd\u28dd\u28d7\u28d7\u28d7\\r\\n// \u286f\u28de\u28de\u28de\u28de\u28de\u28ae\u28af\u28fb\u287a\u286e\u286f\u286f\u28d7\u28d7\u28d7\u28d7\u28b7\u28bd\u28bd\u28bd\u28bd\u28e2\u2840\u2804\u2804\u2804\u2809\u281b\u286f\u28ff\u28fb\u28fd\u28ff\u28be\u28fb\u28fd\u28de\u28d7\u286b\u2812\u2850\u2804\u2802\u2840\u2804\u2880\u2804\u2804\u2802\u2820\u2810\u2840\u2850\u2860\u2851\u28d0\u28d0\u28c2\u28e3\u28c2\u2890\u2880\u2882\u28d0\u28d4\u28fa\u28fa\u28ef\u28f7\u28fb\u28d7\u28ff\u28fa\u28f3\u28fb\u28fa\u28f3\u28fb\u28fa\u28f3\u28f3\u28d7\u28df\u28de\u28f7\u28f3\u28fb\u28fa\u28de\u28d7\u28ff\u28fd\u28fe\u28fb\u28fd\u287f\u287a\u2813\u2801\u2804\u2804\u2880\u28d4\u28b7\u28bd\u28bd\u28bd\u28dd\u286e\u286f\u286f\u286f\u286f\u28ef\u2873\u286f\u28ef\u28fb\u287a\u28dd\u28d7\u28d7\u28d7\u28d7\u28d7\\r\\n// \u286f\u28de\u28de\u28de\u28de\u28be\u28bd\u28bd\u28ae\u28af\u28af\u28af\u28af\u28f3\u28f3\u28f3\u28bd\u28bd\u28bd\u28bd\u289d\u28d7\u28b7\u28dd\u28e6\u28c0\u2804\u2804\u2804\u2808\u281d\u283f\u28fd\u28fe\u28ff\u28fb\u28af\u2853\u2862\u2851\u2862\u2880\u28d0\u2880\u2822\u2890\u2880\u2804\u2850\u2848\u2850\u2850\u2840\u2842\u28c2\u2892\u2894\u2894\u28d2\u28d2\u28d2\u28c6\u2850\u2860\u2850\u28d4\u286a\u28de\u28fe\u28fa\u287f\u28fe\u28b7\u28fb\u28f7\u28fb\u28d7\u28ff\u28de\u28ff\u28fa\u2877\u28ff\u28de\u28f7\u287f\u28fe\u28fb\u28f7\u28ff\u28be\u28ff\u28f3\u28ff\u289f\u281f\u2808\u2804\u2804\u2804\u2880\u2874\u28eb\u28be\u28bd\u28bd\u28dd\u28d7\u28b7\u28bd\u28bd\u28bd\u28bd\u28dd\u286e\u28ef\u28fb\u287a\u286e\u28ef\u28f3\u28f3\u28f3\u28f3\u28f3\u2873\\r\\n// \u286f\u28de\u28de\u28de\u286e\u286f\u286f\u286f\u286f\u286f\u286f\u286f\u286f\u28de\u28de\u286e\u286f\u286f\u286f\u286f\u286f\u28de\u28d7\u28d7\u28d7\u28d7\u28b7\u28c4\u2840\u2804\u2804\u2804\u2808\u281e\u2856\u2854\u2802\u2892\u2890\u2890\u2880\u2802\u2804\u2892\u289a\u2894\u2844\u2850\u2804\u2882\u2892\u2890\u28a2\u2892\u2892\u2892\u2852\u2855\u28d2\u2896\u2856\u28d6\u2896\u2852\u2852\u28d2\u28aa\u2872\u28fa\u28fa\u28bd\u28fb\u28df\u28f7\u28b7\u28fb\u28fe\u28d7\u28ff\u28de\u28f7\u28ff\u28fb\u28fe\u28fb\u28df\u28ff\u28ef\u28f7\u287f\u28df\u28f7\u28bb\u280a\u2801\u2804\u2804\u2804\u28a0\u28d6\u28df\u28de\u287d\u287d\u28dd\u28d7\u28b7\u28bd\u28bd\u28bd\u28bd\u28dd\u28d7\u28b7\u28bd\u287a\u286e\u28ef\u28fb\u28fa\u28fa\u28fa\u28fa\u28fa\u28ea\u28af\\r\\n// \u286f\u28de\u28de\u286e\u286f\u286f\u286f\u286f\u286f\u286f\u28eb\u28af\u28fb\u287a\u286e\u286f\u286f\u286f\u286f\u286f\u28fb\u28fa\u28fa\u28fa\u28fa\u28fa\u28f3\u2873\u287d\u2875\u28c4\u2804\u2804\u2804\u2804\u2808\u2813\u28d2\u28a0\u2890\u2890\u2898\u28c8\u2882\u28d2\u28d2\u288e\u28f2\u2808\u2892\u2892\u28b2\u28b0\u2862\u28d1\u28d1\u28d3\u289d\u28da\u28d5\u289f\u28de\u28d7\u28df\u28de\u287a\u28da\u28de\u28d7\u28fb\u28fb\u28f3\u28ff\u28fb\u28df\u28ff\u28fe\u28fb\u28f7\u28bf\u28f7\u28df\u28ef\u28ff\u28ef\u28ff\u28fb\u28fe\u289e\u282f\u2803\u2801\u2804\u2804\u2804\u28c0\u28b4\u28af\u28fb\u28fa\u287a\u286e\u286f\u28fb\u28fa\u287a\u287d\u287d\u287d\u287d\u28f5\u2873\u287d\u28dd\u28d7\u28af\u28fb\u28fa\u28fa\u28fa\u28fa\u28fa\u28fa\u287a\u286e\u286f\\r\\n// \u286f\u28de\u286e\u286f\u286f\u286f\u286f\u286f\u286f\u28ef\u28f3\u287b\u286e\u286f\u286f\u286f\u286f\u286f\u286f\u28ef\u28f3\u28f3\u28f3\u28f3\u28f3\u28f3\u2873\u287d\u287d\u28fd\u28fa\u28b5\u28f2\u2884\u2840\u2804\u2804\u2804\u2801\u2811\u2831\u28d2\u2894\u28d1\u28d2\u285a\u28fe\u2803\u284a\u2890\u2890\u2890\u2892\u28ca\u288e\u28d3\u28cf\u28cf\u28d7\u28f3\u28f9\u28fa\u28f2\u28f3\u28d7\u28f7\u28f3\u28ef\u28ff\u28fb\u28fb\u28df\u28fe\u28df\u28ff\u28fb\u28fa\u28fb\u28df\u28ff\u28ef\u28ff\u28fb\u28b7\u289f\u285e\u281d\u2808\u2801\u2804\u2804\u28c0\u2864\u28d6\u28fd\u28fa\u28bd\u28bd\u287a\u286e\u286f\u286f\u28ef\u28f3\u2873\u286f\u286f\u286f\u286f\u28ef\u28fa\u28bd\u28dd\u28b7\u28bd\u28dd\u28de\u28de\u28de\u28de\u28ae\u28de\u28de\u28be\u28bd\u28bd\\r\\n// \u286f\u28fa\u28bd\u28bd\u28bd\u28bd\u28bd\u28bd\u289d\u28de\u286e\u286f\u286f\u286f\u286f\u286f\u286f\u286f\u286f\u28de\u28de\u28de\u28de\u28de\u28de\u28ae\u28af\u28af\u28fb\u28fa\u287a\u28fd\u287a\u28fd\u287a\u2875\u2864\u2864\u2840\u2804\u2804\u2804\u2801\u280a\u2802\u2833\u28b3\u2860\u2860\u2840\u2842\u2802\u2842\u2842\u288e\u28d2\u2896\u28d3\u28de\u28de\u28de\u28d6\u28d7\u28f7\u28fb\u28ff\u28fb\u28fd\u28fe\u28df\u28ef\u28ff\u28d7\u28df\u28c3\u2883\u28d2\u287a\u28fa\u287b\u283a\u281d\u280a\u2803\u2801\u2804\u2804\u28c0\u28a4\u28b4\u28fa\u28f3\u28eb\u2897\u28d7\u28d7\u286f\u286f\u286f\u286f\u286f\u286f\u28de\u286e\u286f\u286f\u286f\u28ef\u28fb\u287a\u286e\u2877\u287d\u28dd\u28d7\u28d7\u28d7\u28d7\u28b7\u28dd\u28d7\u28b7\u28bd\u28bd\u289d\u28d7\\r\\n// \u286f\u28f3\u28af\u28af\u28af\u28af\u28af\u28af\u287b\u286e\u286f\u286f\u286f\u286f\u286f\u28eb\u28af\u28be\u28bd\u28fa\u28fa\u28fa\u28fa\u287a\u286e\u286f\u28ef\u28fb\u287a\u28ee\u287b\u28ee\u287b\u286e\u286f\u286f\u286f\u286f\u28ef\u28f3\u28e2\u2884\u28c0\u2840\u2804\u2804\u2804\u2804\u2809\u281a\u280a\u2827\u2832\u2812\u2896\u2894\u2896\u288e\u2856\u2856\u28ce\u2896\u2897\u289e\u28be\u289f\u28bf\u28bd\u28be\u28bf\u2873\u28d7\u2817\u2816\u2832\u2815\u2803\u280b\u2808\u2804\u2804\u2880\u28c0\u28c0\u28a4\u28ae\u28fb\u287a\u287d\u28fd\u28fa\u28fa\u287a\u28fd\u287a\u286e\u286f\u286f\u286f\u286f\u286f\u28fb\u28ae\u28af\u28af\u28af\u28fb\u28fa\u28fa\u287a\u287d\u287d\u28fd\u28fa\u28fa\u28fa\u287a\u286e\u28d7\u28b7\u28bd\u28bd\u28bd\u28bd\u28dd\u28de\\r\\n// \u286f\u28de\u287d\u287d\u287d\u287d\u287d\u28f5\u28eb\u28af\u28af\u28af\u28af\u28af\u28af\u28f3\u28af\u28af\u28d7\u28d7\u28d7\u28d7\u28b7\u28bd\u28bd\u28bd\u287a\u28ee\u287b\u28ee\u287b\u286e\u286f\u286f\u286f\u286f\u28ef\u28fb\u28fa\u287a\u28ee\u287b\u286e\u28ef\u28fb\u28b5\u2872\u2864\u28c4\u2840\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2801\u2809\u2808\u2808\u2801\u2809\u2808\u2801\u2809\u2808\u2808\u2804\u2804\u2804\u2804\u2804\u2804\u2880\u28c0\u2860\u28e4\u2872\u28dd\u28d7\u28b7\u28bd\u28bd\u28dd\u286e\u28ef\u28fb\u28fa\u287a\u286e\u28fb\u28ae\u28af\u28af\u28af\u28af\u28af\u28af\u28fb\u287a\u287d\u287d\u28dd\u28d7\u28d7\u28d7\u28b7\u28bd\u28bd\u28bd\u28fa\u28fa\u287a\u286e\u28ef\u28fb\u287a\u287d\u287d\u287d\u287d\u2875\u28f3\u28f3\\r\\n// \u286f\u28fa\u28bd\u28bd\u28bd\u28bd\u28dd\u28de\u286e\u286f\u286f\u28ef\u2873\u28ef\u287b\u286e\u286f\u28d7\u28d7\u28d7\u28b7\u28bd\u28bd\u28bd\u28dd\u28d7\u28df\u28ee\u287b\u286e\u286f\u286f\u286f\u286f\u286f\u28fb\u28fa\u28fa\u287a\u286e\u28d7\u28ef\u28fb\u287a\u286e\u286f\u28ef\u287b\u286e\u286f\u286f\u286f\u28ef\u28f3\u2872\u2866\u28e4\u28a4\u28a4\u28c0\u28c0\u28c0\u28c0\u28c0\u28c0\u28a4\u28e0\u28a4\u28a4\u28f2\u2872\u286e\u286f\u286f\u28ef\u28f3\u28f3\u287b\u286e\u28ef\u28f3\u28bd\u28bd\u28dd\u28d7\u28b7\u28bd\u28fa\u287a\u286e\u286f\u28ef\u2873\u286f\u286f\u286f\u286f\u28eb\u28d7\u286f\u28de\u287d\u287d\u28fd\u28fa\u28fa\u287a\u286e\u286f\u286f\u28ef\u28fb\u287a\u286e\u28ef\u28fb\u28fa\u28ea\u28af\u28af\u28af\u28af\u28af\u28af\u28f3\u28f3\\r\\n// \u286f\u28f3\u28af\u28af\u28af\u28f3\u28f3\u28f3\u28bd\u28bd\u28bd\u28ae\u287b\u286e\u286f\u28ef\u28fb\u28fa\u287a\u286e\u286f\u286f\u28ef\u28f3\u28f3\u28f3\u28f3\u2873\u287d\u287d\u287d\u287d\u28dd\u287d\u287d\u28f5\u28f3\u2873\u287d\u28fd\u28fa\u287a\u286e\u286f\u28ef\u287b\u286e\u286f\u286f\u286f\u28ef\u28fb\u287a\u286e\u28ef\u28fb\u287a\u287d\u28fd\u28fa\u28fa\u28fa\u28fa\u28fa\u28fa\u28bd\u28fa\u28bd\u28bd\u28ae\u28af\u28af\u28af\u28af\u28de\u28de\u286e\u28ef\u28fb\u287a\u286e\u286f\u28d7\u28b7\u28bd\u28dd\u28d7\u28d7\u286f\u28ef\u287b\u286e\u286f\u286f\u286f\u286f\u28ef\u28f3\u28f3\u28bd\u28f3\u28bd\u28bd\u28fa\u287a\u286e\u286f\u286f\u28ef\u28fb\u287a\u286e\u286f\u286f\u28de\u28de\u28de\u28ae\u28af\u28af\u28af\u28af\u28af\u28f3\u28f3\u28f3\\r\\n// \u286f\u28de\u287d\u287d\u28dd\u28de\u28de\u286e\u286f\u286f\u286f\u286f\u286f\u28ef\u28fb\u28fa\u28fa\u28ea\u28af\u28af\u28af\u28fb\u28fa\u28fa\u28fa\u287a\u286e\u286f\u286f\u286f\u28ef\u287b\u286e\u28ef\u28fb\u28fa\u28ea\u28af\u28fb\u287a\u286e\u286f\u286f\u286f\u28de\u287d\u287d\u287d\u287d\u28dd\u28de\u286e\u28ef\u28fb\u287a\u286e\u28ef\u28fb\u28fa\u28fa\u28fa\u28fa\u28fa\u28fa\u287a\u28fd\u287a\u287d\u287d\u287d\u287d\u287d\u28dd\u28d7\u28d7\u28b7\u28bd\u287a\u286e\u286f\u286f\u286f\u286f\u28ef\u28f3\u28f3\u28f3\u28f3\u28bd\u28ae\u28af\u28af\u28af\u28af\u28af\u28af\u28de\u28de\u286e\u28df\u286e\u28ef\u287b\u286e\u286f\u286f\u28ef\u28fb\u28fa\u28ea\u28af\u28af\u28af\u28fb\u28fa\u28fa\u287a\u287d\u287d\u287d\u287d\u28dd\u28d7\u28d7\u28d7\u28b7\\r\\n//\\r\\n// Social Credit Coin $CCP\\r\\n// https://twitter.com/SocialCreditPR \\r\\n// https://www.socialcredits.us/ \\r\\n// https://t.me/SocialCreditPR \\r\\n\\r\\n\\r\\ncontract Sale is Owned {\\r\\n    /*/////////////////////////////////////////////////\\r\\n                          EVENTS\\r\\n    /////////////////////////////////////////////////*/\\r\\n\\r\\n    event SaleEntered(address indexed user, uint256 amount);\\r\\n    event SaleClaimed(address indexed user, uint256 amount);\\r\\n    event TokensSupplied(uint256 amount);\\r\\n    event ProceedsWithdrawn(uint256 amount);\\r\\n\\r\\n    /*/////////////////////////////////////////////////\\r\\n                            STATE\\r\\n    /////////////////////////////////////////////////*/\\r\\n\\r\\n    /// @notice token being sold off\\r\\n    ERC20 public immutable token;\\r\\n\\r\\n    /// @notice if sale is live\\r\\n    bool public saleLive;\\r\\n\\r\\n    /// @notice max amount per address to mint\\r\\n    uint256 public immutable MAX_SALE = 27 ether / 100;\\r\\n\\r\\n    /// @notice maximum amount of total ether accepted for sale\\r\\n    uint256 public constant HARDCAP = 15 ether;\\r\\n\\r\\n    /// @notice internal accounting of tokens supplied to sale, can be upped before sale ends\\r\\n    uint256 public suppliedTokens;\\r\\n\\r\\n    /// @notice internal accounting of total deposits\\r\\n    /// @dev lp may be filled before everyone has claimed, so this maintains eth proceeds accounting\\r\\n    uint256 public totalDeposits;\\r\\n\\r\\n    /// @notice total eth deposits for each address, cannot exceed MAX_SALE\\r\\n    mapping(address => uint256) public deposits;\\r\\n\\r\\n    constructor(\\r\\n        ERC20 token_,\\r\\n        address owner_\\r\\n    ) Owned(owner_) {\\r\\n        token = token_;\\r\\n        saleLive = true;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        if(isContract(msg.sender)) revert(\\\"Contracts cannot participate\\\");\\r\\n\\r\\n        if (!saleLive) revert(\\\"sale ended\\\");\\r\\n\\r\\n        if (deposits[msg.sender] + msg.value > MAX_SALE)\\r\\n            revert(\\\"max sale amount\\\");\\r\\n\\r\\n        if(HARDCAP < totalDeposits + msg.value)\\r\\n            revert(\\\"max sale amount\\\");\\r\\n\\r\\n        // The total supply of ether will never overflow\\r\\n        unchecked {\\r\\n            deposits[msg.sender] += msg.value;\\r\\n            totalDeposits += msg.value;\\r\\n        }\\r\\n\\r\\n        emit SaleEntered(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function claimTokens() external {\\r\\n        if (saleLive) revert(\\\"sale live\\\");\\r\\n\\r\\n        uint256 share = getCurrentShare(msg.sender);\\r\\n        delete deposits[msg.sender];\\r\\n\\r\\n        token.transfer(msg.sender, share);\\r\\n        emit SaleClaimed(msg.sender, share);\\r\\n    }\\r\\n\\r\\n    function getCurrentShare(address account) public view returns (uint256) {\\r\\n        return (suppliedTokens * deposits[account]) / totalDeposits;\\r\\n    }\\r\\n\\r\\n    function supplyTokens() external onlyOwner {\\r\\n        if (!saleLive) revert(\\\"sale ended\\\");\\r\\n        suppliedTokens = token.balanceOf(address(this));\\r\\n\\r\\n        emit TokensSupplied(token.balanceOf(address(this)));\\r\\n    }\\r\\n\\r\\n    function endSale() external onlyOwner {\\r\\n        saleLive = false;\\r\\n    }\\r\\n\\r\\n    function withdrawProceeds() external onlyOwner {\\r\\n        emit ProceedsWithdrawn(address(this).balance);\\r\\n        payable(owner).transfer(address(this).balance);\\r\\n    }\\r\\n\\r\\n    function isContract(address account) private view returns (bool) {\\r\\n        uint256 size;\\r\\n        assembly {\\r\\n            size := extcodesize(account)\\r\\n        }\\r\\n        return size > 0;\\r\\n    }\\r\\n\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProceedsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SaleClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SaleEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensSupplied\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"HARDCAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SALE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleLive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"suppliedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Sale", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000ce085ca2eb8c298ef96d7d05cec239e6bf4ab51700000000000000000000000008b1289d92001888ef026de03ae21bdeaa2b3a4d", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}