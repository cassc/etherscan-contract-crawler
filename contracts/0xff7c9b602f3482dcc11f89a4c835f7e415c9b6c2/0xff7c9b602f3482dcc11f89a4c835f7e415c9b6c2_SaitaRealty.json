{"SourceCode": "// SPDX-License-Identifier: NOLICENSE\r\npragma solidity ^0.8.10;\r\n                                                                                                                                                                                                     \r\n/*\r\n                                                                                           .=+*-                                                                                                        \r\n                                                                                         :%%@%%@%                                                                                                       \r\n                                                                                        =%%####%@#                                                                                                      \r\n                                                                                      :#%#######@@+                                                                                                     \r\n                                                                                      #@#########%@=                                                                                                    \r\n                                                                                     *@@%#########%@*                                                                                                   \r\n                                                                                    #@@@@##########%@*                                                                                                  \r\n                                                                                    %@@@@############@-                                                                                                 \r\n                                                                            =++=   .@@@@#############@-                                                                                                 \r\n                                                                           #@%%%@*:.@@@@@############%#=                                                                                                \r\n                                                                          %@######%@@@@@@%############%%%--.                                                                                            \r\n                                                                          %@########%@@@@%###############%%%@#+:                                                                                        \r\n                                                                          +#@##########%@%##############%@%##%%@@=                                                                                      \r\n                                                                           =@%############################@%####%@*                                                                                     \r\n                                                                            *@@############################%#####%@#                                                                                    \r\n                                                                             %@###############################%%%%%@-                                                                                   \r\n                                                                             :@@##########################%%%%%%%%%%%=                                                                                  \r\n                                                                              -@######################%%%%%%%%%%%%%%%#+                                                                                 \r\n                                                                               @@#################%%%%%%%%%%%%%%%%%%%%@-                                                                                \r\n                                                                               +@############%%%%%%%%%%%%%%%%%%%%%%%@@@*:                                                                               \r\n                                                                               =@@####%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@*+                                                                              \r\n                                                                               =@@%%%%%%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@==.                                                                            \r\n                                                                               =@@%%%%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@#=:                                                                          \r\n                                                                               %@%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#+-                                                                        \r\n                                                                              =@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@-                                                                      \r\n                                                                             =@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.                                                                   \r\n                                                                          .:#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+                                                                   \r\n                                                                        -#%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%@@@#=                                                                     \r\n                                                                         :**#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                                                                            \r\n                                                                           -%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*                                                                            \r\n                                                                        .=@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%                                                                           \r\n                                                                     -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-                                                                         \r\n                                                                      .=**@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#-                                                                       \r\n                                                                         +@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-                                                                      \r\n                                                                        .%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#                                                                         \r\n                                                                       :+@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+=                                                                       \r\n                                                                       +@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##-                                                                     \r\n                                                                      *@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-                                                                   \r\n                                                                    =@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+                                                                      \r\n                                                                   =@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:                                                                     \r\n                                                                    --*@@@#.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:                                                                     \r\n                                                                    ##@@@#  -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#                                                                      \r\n                                                                    +*@@@+  -@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-                                                                       \r\n                                                                            .*@@@@@%@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:                                                                      \r\n                                                                               @%%%%%%%%%%%%@@%%%%%%%%%%%%==%@@@@@@@@@@@@@@@@@@                                                                         \r\n                                                                             :@%%%%%%%%%%%%%@@%%%%%%%%%%%+ :+@%@@@@@@@@@@@@@@@%*:                                                                       \r\n                                                                               *%%%%%%%%%%%@%*@%%%%%%%%%%= :@%%%%%%%%@@@@@@@@@@*                                                                        \r\n                                                                                 =%%%%%%%%@@: =%%%%%%%%@*  -#%%%%%%%%%%%%%%@@@#.                                                                        \r\n                                                                                 -%%%%%%%%@:. .@%%%%%%%#:  .*%%%%%%%%%%%%%%%@%-                                                                         \r\n                                                                                   +@###%%+=   =++%###%#:   -*%%%%%%%@@%%%%%@*.                                                                         \r\n                                                                                   :%###%@%    -%%###%-      +@@%%%%%@@%%%%@==.                                                                         \r\n                                                                                    +@##%*.    :%@%###=       +%%%%%@@@%%%%@%@-                                                                         \r\n                                                                                     *%%@-     .+#%##%%        *@%%%@ -#%%%%*-                                                                          \r\n                                                                                     =%#@        =%##%=         =%%%%  :@@+:                                                                            \r\n                                                                                                 +#%@+           -+*=                                                                                   \r\n                                                                                                                                                                                                                                                                                                                                                                                                               \r\n                                                                                                                                                                                                        \r\n             .-:.   ..:-                         -=----                                                                                               ===--=+                                           \r\n           =+-::::::::::*                       %-::::#      :=.                           @==========+---..                                          #=::::+        ==                                 \r\n         -=::-+=--==-==:+                       :=++=-=      +:-+                          --+=:::-+++=:::::+=.                                        :%:::+       +*-+*                               \r\n         +:::@         :.         .:::.         .::::       #-::*            .::::           ++:::=:   -+:::::+          .:-:            .:--:.         @:::+      :*:::%...    ....                    \r\n        ==:::+=              +*=-::::::-*-=   .*:::::+=   +:::::::::::* -*+-:::::::++=       ++:::=.    =:::::*      :=*=::::-*=-   :**=:::::::-*=      @:::+    @-:::::::::::#=:::::-    .======-      \r\n         +::::-=--:-.        +=::=-=-+-:::--   :-=:::-*   -=+:::+------ :+::=-=-=-:::-=      ++:::+.    =::::-+     +=:-=:---:::=-  .#-::+==-=:::-*:    @:::+    -=+::::*:::::--:-:::-:   .-:::-::      \r\n         :==::::::::-=--.     ..:.    %::::=     +:::-*     #:::*        ..::    +=:::*      ++:::=-.:=-=:-+=-    :#-::=    ==:::*    -.-.   -=::::=    @:::+      =::::%        :-:::=    -::--        \r\n            -+*-::::::::=-            +-:::+     +:::-*     #:::*                 @:::*      ++:::::::::-::=      @::::+----==:::*            @::::=    @:::+      =::::%         =:::=-   =::=         \r\n               .-.-=-::::#    :=:=++===-:::+     +:::-*     #:::*        .=-=++===-:::*      ++:::=--:=+:::-:     @::::-+++++++++-   .:-=+++++-::::=    @:::+      =::::%         :::::+  --:::         \r\n                    :+:::+  :*-::=.:::=-:::+     +:::-*     #:::*       *-::=.::::#:::*      ++:::+.    =:::+*    @::::*            -=:::+::::#::::=    @:::+      =::::#         .=:::-..=::=          \r\n         ==-         +:::%  @::::=    *-:::+     +:::-*     %:::+.     =+:::+    :*:::*      ++:::+.    :::::-+   #=:::-#       =:  +::::#    *::::=    @:::+      =::::-.         +-::::+::=-          \r\n        %-::==:-==-:+-:-+.  #-:::-:----::::=-: :.=:::-*.-   #-:::+-=:=-:*:::----:=::::==-  -.+=:::=-.:   +-:::===: =+::::++:::+=-*  +::::-----:::::=- ::#:::=-::   :*::::::::=      +:::=-:-=           \r\n        .-:=+++=+++-:-::     --++++=-:-:-::--..-.......:*    :=-:::-=-. :-=+++=--::-::-=-  *.........=    ::-++++=   -.==-:::-==..  .=:++++:=----::=- =.......:=    .-=-:::-:.      .:.:-::-            \r\n                                                                                                                                                                                       +::::            \r\n                                                                                                                                                                               ...    =-::-             \r\n                                                                                                                                                                               -::::-:::-:              \r\n                                                                                                                                                                               :.:::.::.                \r\n                                               .   :.                     .                                                                                                                             \r\n                                              =:*  +-          -=@       --+===      .   =*:    +++++++.:     =*.=*        :::::::                                                                      \r\n                                             =+:*=====+     --++:      -=#*-*:*      :.  =:-     ::-+*+=.     =::=:       --------=       .:-+                                                          \r\n                                              -:= --=     +-=+:*      .=::-#+=       :.  =+        *:*:       -= =: -#-   ---%*---:    :=*=%:       ........                                            \r\n                                                .==+         =:*        :=+*:         .=-+-       =-*         ++ =:*+      :+--        .: .@                                                            \r\n                                                -:           :-:        -:.           :-:.       .::         .:  ..-       -.:            .-                       \r\n\r\n*/\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() {\r\n        _setOwner(_msgSender());\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _setOwner(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _setOwner(newOwner);\r\n    }\r\n\r\n    function _setOwner(address newOwner) private {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ninterface IFactory{\r\n        function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IRouter {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline) external;\r\n}\r\n\r\ncontract SaitaRealty is Context, IERC20, Ownable {\r\n\r\n    mapping (address => uint256) private _rOwned;\r\n    mapping (address => uint256) private _tOwned;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    mapping (address => bool) private _isExcluded;\r\n    mapping (address => bool) private _isBot;\r\n\r\n    address[] private _excluded;\r\n    \r\n    bool public swapEnabled;\r\n    bool private swapping;\r\n\r\n    IRouter public router;\r\n    address public pair;\r\n\r\n    uint8 private constant _decimals = 9;\r\n    uint256 private constant MAX = ~uint256(0);\r\n\r\n    uint256 private _tTotal = 12e16 * 10**_decimals;\r\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\r\n\r\n    \r\n    uint256 public swapTokensAtAmount = 120_000_000_000_000 * 10**_decimals;\r\n    uint256 public maxTxAmount = 5_000_000_000_000 * 10**_decimals;\r\n    \r\n    // Anti Dump //\r\n    mapping (address => uint256) public _lastTrade;\r\n    bool public coolDownEnabled = true;\r\n    uint256 public coolDownTime = 30 seconds;\r\n\r\n    address public treasuryAddress = 0x7f0Ac568E9B8fC2BeCfE7f6e8A3F070f2D05Baaf;\r\n    address public marketingAddress = 0xbb6Bbe5fD38F856C34361f75bfE5616908C67bc7;\r\n    address public burnAddress = 0x000000000000000000000000000000000000dEaD;\r\n    address public lpRecipient = 0xB6dadf218e9a7EcF71DA05CA18A23A6a842AE45F;\r\n\r\n\r\n    string private constant _name = \"SaitaRealty\";\r\n    string private constant _symbol = \"SaitaRealty\";\r\n\r\n\r\n    struct Taxes {\r\n      uint256 rfi;\r\n      uint256 treasury;\r\n      uint256 marketing;\r\n      uint256 burn;\r\n      uint256 liquidity;\r\n    }\r\n\r\n    Taxes public taxes = Taxes(10,50,20,10,0);\r\n\r\n    struct TotFeesPaidStruct{\r\n        uint256 rfi;\r\n        uint256 treasury;\r\n        uint256 marketing;\r\n        uint256 burn;\r\n        uint256 liquidity;\r\n    }\r\n    TotFeesPaidStruct public totFeesPaid;\r\n\r\n    struct valuesFromGetValues{\r\n      uint256 rAmount;\r\n      uint256 rTransferAmount;\r\n      uint256 rRfi;\r\n      uint256 rTreasury;\r\n      uint256 rMarketing;\r\n      uint256 rBurn;\r\n      uint256 rLiquidity;\r\n      uint256 tTransferAmount;\r\n      uint256 tRfi;\r\n      uint256 tTreasury;\r\n      uint256 tMarketing;\r\n      uint256 tBurn;\r\n      uint256 tLiquidity;\r\n    }\r\n\r\n    event FeesChanged();\r\n    event UpdatedRouter(address oldRouter, address newRouter);\r\n\r\n    modifier lockTheSwap {\r\n        swapping = true;\r\n        _;\r\n        swapping = false;\r\n    }\r\n\r\n    constructor (address routerAddress) {\r\n        IRouter _router = IRouter(routerAddress);\r\n        address _pair = IFactory(_router.factory())\r\n            .createPair(address(this), _router.WETH());\r\n\r\n        router = _router;\r\n        pair = _pair;\r\n        \r\n        excludeFromReward(pair);\r\n\r\n        _rOwned[owner()] = _rTotal;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[treasuryAddress]=true;\r\n        _isExcludedFromFee[burnAddress] = true;\r\n        _isExcludedFromFee[marketingAddress] = true;\r\n        _isExcludedFromFee[lpRecipient] = true;\r\n\r\n        emit Transfer(address(0), owner(), _tTotal);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        if (_isExcluded[account]) return _tOwned[account];\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        _approve(sender, _msgSender(), currentAllowance - amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n\r\n        return true;\r\n    }\r\n\r\n    function isExcludedFromReward(address account) public view returns (bool) {\r\n        return _isExcluded[account];\r\n    }\r\n\r\n    function reflectionFromToken(uint256 tAmount, bool deductTransferRfi) public view returns(uint256) {\r\n        require(tAmount <= _tTotal, \"Amount must be less than supply\");\r\n        if (!deductTransferRfi) {\r\n            valuesFromGetValues memory s = _getValues(tAmount, true);\r\n            return s.rAmount;\r\n        } else {\r\n            valuesFromGetValues memory s = _getValues(tAmount, true);\r\n            return s.rTransferAmount;\r\n        }\r\n    }\r\n\r\n    function tokenFromReflection(uint256 rAmount) public view returns(uint256) {\r\n        require(rAmount <= _rTotal, \"Amount must be less than total reflections\");\r\n        uint256 currentRate =  _getRate();\r\n        return rAmount/currentRate;\r\n    }\r\n\r\n    function excludeFromReward(address account) public onlyOwner() {\r\n        require(!_isExcluded[account], \"Account is already excluded\");\r\n        if(_rOwned[account] > 0) {\r\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\r\n        }\r\n        _isExcluded[account] = true;\r\n        _excluded.push(account);\r\n    }\r\n\r\n    function includeInReward(address account) external onlyOwner() {\r\n        require(_isExcluded[account], \"Account is not excluded\");\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (_excluded[i] == account) {\r\n                _excluded[i] = _excluded[_excluded.length - 1];\r\n                _tOwned[account] = 0;\r\n                _isExcluded[account] = false;\r\n                _excluded.pop();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function excludeFromFee(address account) public onlyOwner {\r\n        _isExcludedFromFee[account] = true;\r\n    }\r\n\r\n    function includeInFee(address account) public onlyOwner {\r\n        _isExcludedFromFee[account] = false;\r\n    }\r\n\r\n\r\n    function isExcludedFromFee(address account) public view returns(bool) {\r\n        return _isExcludedFromFee[account];\r\n    }\r\n\r\n    function setTaxes(uint256 _rfi, uint256 _treasury, uint256 _marketing, uint256 _burn, uint256 _liquidity) public onlyOwner {\r\n        taxes.rfi = _rfi;\r\n        taxes.treasury = _treasury;\r\n        taxes.marketing = _marketing;\r\n        taxes.burn = _burn;\r\n        taxes.liquidity = _liquidity;\r\n        emit FeesChanged();\r\n    }\r\n\r\n\r\n    function _reflectRfi(uint256 rRfi, uint256 tRfi) private {\r\n        _rTotal -=rRfi;\r\n        totFeesPaid.rfi +=tRfi;\r\n    }\r\n\r\n    function _takeLiquidity(uint256 rLiquidity, uint256 tLiquidity) private {\r\n        totFeesPaid.liquidity +=tLiquidity;\r\n        if(_isExcluded[address(this)]) _tOwned[address(this)]+=tLiquidity;\r\n        _rOwned[address(this)] +=rLiquidity;\r\n    }\r\n\r\n    function _takeTreasury(uint256 rTreasury, uint256 tTreasury) private {\r\n        totFeesPaid.treasury +=tTreasury;\r\n        if(_isExcluded[treasuryAddress]) _tOwned[treasuryAddress]+=tTreasury;\r\n        _rOwned[treasuryAddress] +=rTreasury;\r\n    }\r\n    \r\n    function _takeMarketing(uint256 rMarketing, uint256 tMarketing) private{\r\n        totFeesPaid.marketing +=tMarketing;\r\n        if(_isExcluded[marketingAddress]) _tOwned[marketingAddress]+=tMarketing;\r\n        _rOwned[marketingAddress] +=rMarketing;\r\n    }\r\n\r\n    function _takeBurn(uint256 rBurn, uint256 tBurn) private{\r\n        totFeesPaid.burn +=tBurn;\r\n        if(_isExcluded[marketingAddress])_tOwned[burnAddress]+=tBurn;\r\n        _rOwned[burnAddress] +=rBurn;\r\n    }\r\n\r\n    function _getValues(uint256 tAmount, bool takeFee) private view returns (valuesFromGetValues memory to_return) {\r\n        to_return = _getTValues(tAmount, takeFee);\r\n        (to_return.rAmount, to_return.rTransferAmount, to_return.rRfi, to_return.rTreasury,to_return.rMarketing, to_return.rBurn, to_return.rLiquidity) = _getRValues(to_return, tAmount, takeFee, _getRate());\r\n        return to_return;\r\n    }\r\n\r\n    function _getTValues(uint256 tAmount, bool takeFee) private view returns (valuesFromGetValues memory s) {\r\n\r\n        if(!takeFee) {\r\n          s.tTransferAmount = tAmount;\r\n          return s;\r\n        }\r\n        \r\n        s.tRfi = tAmount*taxes.rfi/1000;\r\n        s.tTreasury = tAmount*taxes.treasury/1000;\r\n        s.tMarketing = tAmount*taxes.marketing/1000;\r\n        s.tBurn = tAmount*taxes.burn/1000;\r\n        s.tLiquidity = tAmount*taxes.liquidity/1000;\r\n        s.tTransferAmount = tAmount-s.tRfi-s.tTreasury-s.tLiquidity-s.tMarketing-s.tBurn;\r\n        return s;\r\n    }\r\n\r\n    function _getRValues(valuesFromGetValues memory s, uint256 tAmount, bool takeFee, uint256 currentRate) private pure returns (uint256 rAmount, uint256 rTransferAmount, uint256 rRfi,uint256 rTreasury,uint256 rMarketing,uint256 rBurn,uint256 rLiquidity) {\r\n        rAmount = tAmount*currentRate;\r\n\r\n        if(!takeFee) {\r\n          return(rAmount, rAmount, 0,0,0,0,0);\r\n        }\r\n\r\n        rRfi = s.tRfi*currentRate;\r\n        rTreasury = s.tTreasury*currentRate;\r\n        rLiquidity = s.tLiquidity*currentRate;\r\n        rMarketing = s.tMarketing*currentRate;\r\n        rBurn = s.tBurn*currentRate;\r\n        rTransferAmount =  rAmount-rRfi-rTreasury-rLiquidity-rMarketing-rBurn;\r\n        return (rAmount, rTransferAmount, rRfi,rTreasury,rMarketing,rBurn,rLiquidity);\r\n    }\r\n\r\n    function _getRate() private view returns(uint256) {\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n        return rSupply/tSupply;\r\n    }\r\n\r\n    function _getCurrentSupply() private view returns(uint256, uint256) {\r\n        uint256 rSupply = _rTotal;\r\n        uint256 tSupply = _tTotal;\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (_rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply) return (_rTotal, _tTotal);\r\n            rSupply = rSupply-_rOwned[_excluded[i]];\r\n            tSupply = tSupply-_tOwned[_excluded[i]];\r\n        }\r\n        if (rSupply < _rTotal/_tTotal) return (_rTotal, _tTotal);\r\n        return (rSupply, tSupply);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        require(amount <= balanceOf(from),\"You are trying to transfer more than your balance\");\r\n        require(!_isBot[from] && !_isBot[to], \"You are a bot\");\r\n        \r\n\r\n        if(!_isExcludedFromFee[from] && !_isExcludedFromFee[to] && !swapping){\r\n            require(amount <= maxTxAmount ,\"Amount is exceeding maxTxAmount\");\r\n\r\n            if(from != pair && coolDownEnabled){\r\n                uint256 timePassed = block.timestamp - _lastTrade[from];\r\n                require(timePassed > coolDownTime, \"You must wait coolDownTime\");\r\n                _lastTrade[from] = block.timestamp;\r\n            }\r\n            if(to != pair && coolDownEnabled){\r\n                uint256 timePassed2 = block.timestamp - _lastTrade[to];\r\n                require(timePassed2 > coolDownTime, \"You must wait coolDownTime\");\r\n                _lastTrade[to] = block.timestamp;\r\n            }\r\n        }\r\n        \r\n        bool canSwap = balanceOf(address(this)) >= swapTokensAtAmount;\r\n        if(!swapping && swapEnabled && canSwap && from != pair && !_isExcludedFromFee[from] && !_isExcludedFromFee[to]){\r\n            swapAndLiquify(swapTokensAtAmount);\r\n        }\r\n\r\n        _tokenTransfer(from, to, amount, !(_isExcludedFromFee[from] || _isExcludedFromFee[to]));\r\n    }\r\n\r\n\r\n    //this method is responsible for taking all fee, if takeFee is true\r\n    function _tokenTransfer(address sender, address recipient, uint256 tAmount, bool takeFee) private {\r\n\r\n        valuesFromGetValues memory s = _getValues(tAmount, takeFee);\r\n\r\n        if (_isExcluded[sender] ) {  //from excluded\r\n                _tOwned[sender] = _tOwned[sender]-tAmount;\r\n        }\r\n        if (_isExcluded[recipient]) { //to excluded\r\n                _tOwned[recipient] = _tOwned[recipient]+s.tTransferAmount;\r\n        }\r\n\r\n        _rOwned[sender] = _rOwned[sender]-s.rAmount;\r\n        _rOwned[recipient] = _rOwned[recipient]+s.rTransferAmount;\r\n        \r\n        if(s.rRfi > 0 || s.tRfi > 0) _reflectRfi(s.rRfi, s.tRfi);\r\n        if(s.rLiquidity > 0 || s.tLiquidity > 0) {\r\n            _takeLiquidity(s.rLiquidity,s.tLiquidity);\r\n        }\r\n        if(s.rTreasury > 0 || s.tTreasury > 0){\r\n            _takeTreasury(s.rTreasury, s.tTreasury);\r\n            emit Transfer(sender, treasuryAddress, s.tMarketing);\r\n        }\r\n        if(s.rMarketing > 0 || s.tMarketing > 0){\r\n            _takeMarketing(s.rMarketing, s.tMarketing);\r\n            emit Transfer(sender, marketingAddress, s.tMarketing);\r\n        }\r\n        if(s.rBurn > 0 || s.tBurn > 0){\r\n            _takeBurn(s.rBurn, s.tBurn);\r\n            emit Transfer(sender, burnAddress, s.tBurn);\r\n        }\r\n        \r\n        emit Transfer(sender, recipient, s.tTransferAmount);\r\n        emit Transfer(sender, address(this), s.tLiquidity);\r\n        \r\n    }\r\n\r\n    function swapAndLiquify(uint256 tokens) private lockTheSwap{\r\n       // Split the contract balance into halves\r\n        uint256 tokensToAddLiquidityWith = tokens / 2;\r\n        uint256 toSwap = tokens - tokensToAddLiquidityWith;\r\n\r\n        uint256 initialBalance = address(this).balance;\r\n        swapTokensForETH(toSwap);\r\n        uint256 ETHToAddLiquidityWith = address(this).balance - initialBalance;\r\n\r\n        if(ETHToAddLiquidityWith > 0){\r\n            // Add liquidity to pancake\r\n            addLiquidity(tokensToAddLiquidityWith, ETHToAddLiquidityWith);\r\n        }\r\n\r\n    }\r\n\r\n    function addLiquidity(uint256 tokenAmount, uint256 ETHAmount) private {\r\n        // approve token transfer to cover all possible scenarios\r\n        _approve(address(this), address(router), tokenAmount);\r\n\r\n        // add the liquidity\r\n        router.addLiquidityETH{value: ETHAmount}(\r\n            address(this),\r\n            tokenAmount,\r\n            0, // slippage is unavoidable\r\n            0, // slippage is unavoidable\r\n            lpRecipient,\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function swapTokensForETH(uint256 tokenAmount) private {\r\n        // generate the uniswap pair path of token -> weth\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = router.WETH();\r\n\r\n        _approve(address(this), address(router), tokenAmount);\r\n\r\n        // make the swap\r\n        router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0, // accept any amount of ETH\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function updateTreasuryWallet(address newWallet) external onlyOwner{\r\n        require(treasuryAddress != newWallet ,'Wallet already set');\r\n        treasuryAddress = newWallet;\r\n        _isExcludedFromFee[treasuryAddress];\r\n    }\r\n\r\n    function updateBurnWallet(address newWallet) external onlyOwner{\r\n        require(burnAddress != newWallet ,'Wallet already set');\r\n        burnAddress = newWallet;\r\n        _isExcludedFromFee[burnAddress];\r\n    }\r\n\r\n    function updateMarketingWallet(address newWallet) external onlyOwner{\r\n        require(marketingAddress != newWallet ,'Wallet already set');\r\n        marketingAddress = newWallet;\r\n        _isExcludedFromFee[marketingAddress];\r\n    }\r\n\r\n    function updateLPRecipient(address newWallet) external onlyOwner{\r\n        require(lpRecipient != newWallet ,'Wallet already set');\r\n        lpRecipient = newWallet;\r\n        _isExcludedFromFee[lpRecipient];\r\n    }\r\n\r\n    function updateMaxTxAmt(uint256 amount) external onlyOwner{\r\n        maxTxAmount = amount * 10**_decimals;\r\n    }\r\n\r\n    function updateSwapTokensAtAmount(uint256 amount) external onlyOwner{\r\n        swapTokensAtAmount = amount * 10**_decimals;\r\n    }\r\n\r\n    function updateSwapEnabled(bool _enabled) external onlyOwner{\r\n        swapEnabled = _enabled;\r\n    }\r\n\r\n    function updateCoolDownSettings(bool _enabled, uint256 _timeInSeconds) external onlyOwner{\r\n        coolDownEnabled = _enabled;\r\n        coolDownTime = _timeInSeconds * 1 seconds;\r\n    }\r\n\r\n    function setAntibot(address account, bool state) external onlyOwner{\r\n        require(_isBot[account] != state, 'Value already set');\r\n        _isBot[account] = state;\r\n    }\r\n    \r\n    function bulkAntiBot(address[] memory accounts, bool state) external onlyOwner{\r\n        for(uint256 i = 0; i < accounts.length; i++){\r\n            _isBot[accounts[i]] = state;\r\n        }\r\n    }\r\n    \r\n    function updateRouterAndPair(address newRouter, address newPair) external onlyOwner{\r\n        router = IRouter(newRouter);\r\n        pair = newPair;\r\n    }\r\n    \r\n    function isBot(address account) public view returns(bool){\r\n        return _isBot[account];\r\n    }\r\n    \r\n    function airdropTokens(address[] memory recipients, uint256[] memory amounts) external onlyOwner{\r\n         require(recipients.length == amounts.length,\"Invalid size\");\r\n         address sender = msg.sender;\r\n         for(uint256 i; i<recipients.length; i++){\r\n            address recipient = recipients[i];\r\n            uint256 rAmount = amounts[i]*_getRate();\r\n            _rOwned[sender] = _rOwned[sender]- rAmount;\r\n            _rOwned[recipient] = _rOwned[recipient] + rAmount;\r\n            emit Transfer(sender, recipient, amounts[i]);\r\n         }\r\n    }\r\n\r\n    //Use this in case ETH are sent to the contract by mistake\r\n    function rescueETH(uint256 weiAmount) external onlyOwner{\r\n        require(address(this).balance >= weiAmount, \"insufficient ETH balance\");\r\n        payable(owner()).transfer(weiAmount);\r\n    }\r\n    \r\n    // Function to allow admin to claim *other* ERC20 tokens sent to this contract (by mistake)\r\n    // Owner cannot transfer out catecoin from this smart contract\r\n    function rescueAnyERC20Tokens(address _tokenAddr, address _to, uint _amount) public onlyOwner {\r\n        IERC20(_tokenAddr).transfer(_to, _amount);\r\n    }\r\n\r\n    receive() external payable{\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"FeesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldRouter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRouter\",\"type\":\"address\"}],\"name\":\"UpdatedRouter\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_lastTrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"airdropTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"bulkAntiBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coolDownEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coolDownTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deductTransferRfi\",\"type\":\"bool\"}],\"name\":\"reflectionFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"rescueAnyERC20Tokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"rescueETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setAntibot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rfi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_treasury\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_burn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"}],\"name\":\"setTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTokensAtAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rfi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"treasury\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"burn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"}],\"name\":\"tokenFromReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totFeesPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rfi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"treasury\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"burn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"updateBurnWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_timeInSeconds\",\"type\":\"uint256\"}],\"name\":\"updateCoolDownSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"updateLPRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"updateMarketingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateMaxTxAmt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newPair\",\"type\":\"address\"}],\"name\":\"updateRouterAndPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"updateSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateSwapTokensAtAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"updateTreasuryWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "SaitaRealty", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "1500", "ConstructorArguments": "0000000000000000000000001c47ad80a8b0b467eb67ef23f2d4f772d500fb08", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://615408ce280580d2fe55cd82ef35b4482f05eed35074b614f858e7f5bd03b7ec"}