{"SourceCode": "pragma solidity ^0.4.18;\r\n \r\ncontract Token {\r\n    string public symbol = \"\";\r\n    string public name = \"\";\r\n    uint8 public constant decimals = 18;\r\n\tstring public constant ICOFactoryVersion = \"1.0\";\r\n    uint256 _totalSupply = 0;\r\n\tuint256 _oneEtherEqualsInWei = 0;\t\r\n\tuint256 _maxICOpublicSupply = 0;\r\n\tuint256 _ownerICOsupply = 0;\r\n\tuint256 _currentICOpublicSupply = 0;\r\n\tuint256 _blockICOdatetime = 0;\r\n\taddress _ICOfundsReceiverAddress = 0;\r\n\taddress _remainingTokensReceiverAddress = 0;\r\n    address owner = 0;\t\r\n    bool setupDone = false;\r\n\tbool isICOrunning = false;\r\n\tbool ICOstarted = false;\r\n\tuint256 ICOoverTimestamp = 0;\r\n   \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\tevent Burn(address indexed _owner, uint256 _value);\r\n \r\n    mapping(address => uint256) balances;\r\n \r\n    mapping(address => mapping (address => uint256)) allowed;\r\n \r\n    function Token(address adr) public {\r\n        owner = adr;        \r\n    }\r\n\t\r\n\tfunction() public payable\r\n\t{\r\n\t\tif ((isICOrunning && _blockICOdatetime == 0) || (isICOrunning && _blockICOdatetime > 0 && now <= _blockICOdatetime))\r\n\t\t{\r\n\t\t\tuint256 _amount = ((msg.value * _oneEtherEqualsInWei) / 1000000000000000000);\r\n\t\t\t\r\n\t\t\tif (((_currentICOpublicSupply + _amount) > _maxICOpublicSupply) && _maxICOpublicSupply > 0) revert();\r\n\t\t\t\r\n\t\t\tif(!_ICOfundsReceiverAddress.send(msg.value)) revert();\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t_currentICOpublicSupply += _amount;\r\n\t\t\t\r\n\t\t\tbalances[msg.sender] += _amount;\r\n\t\t\t\r\n\t\t\t_totalSupply += _amount;\t\t\t\r\n\t\t\t\r\n\t\t\tTransfer(this, msg.sender, _amount);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\trevert();\r\n\t\t}\r\n\t}\r\n   \r\n    function SetupToken(string tokenName, string tokenSymbol, uint256 oneEtherEqualsInWei, uint256 maxICOpublicSupply, uint256 ownerICOsupply, address remainingTokensReceiverAddress, address ICOfundsReceiverAddress, uint256 blockICOdatetime) public\r\n    {\r\n        if (msg.sender == owner && !setupDone)\r\n        {\r\n            symbol = tokenSymbol;\r\n            name = tokenName;\r\n\t\t\t_oneEtherEqualsInWei = oneEtherEqualsInWei;\r\n\t\t\t_maxICOpublicSupply = maxICOpublicSupply * 1000000000000000000;\t\t\t\t\t\t\t\t\t\r\n\t\t\tif (ownerICOsupply > 0)\r\n\t\t\t{\r\n\t\t\t\t_ownerICOsupply = ownerICOsupply * 1000000000000000000;\r\n\t\t\t\t_totalSupply = _ownerICOsupply;\r\n\t\t\t\tbalances[owner] = _totalSupply;\r\n\t\t\t\tTransfer(this, owner, _totalSupply);\r\n\t\t\t}\t\t\t\r\n\t\t\t_ICOfundsReceiverAddress = ICOfundsReceiverAddress;\r\n\t\t\tif (_ICOfundsReceiverAddress == 0) _ICOfundsReceiverAddress = owner;\r\n\t\t\t_remainingTokensReceiverAddress = remainingTokensReceiverAddress;\r\n\t\t\t_blockICOdatetime = blockICOdatetime;\t\t\t\r\n            setupDone = true;\r\n        }\r\n    }\r\n\t\r\n\tfunction StartICO() public returns (bool success)\r\n    {\r\n        if (msg.sender == owner && !ICOstarted && setupDone)\r\n        {\r\n            ICOstarted = true;\t\t\t\r\n\t\t\tisICOrunning = true;\t\t\t\r\n        }\r\n\t\telse\r\n\t\t{\r\n\t\t\trevert();\r\n\t\t}\r\n\t\treturn true;\r\n    }\r\n\t\r\n\tfunction StopICO() public returns (bool success)\r\n    {\r\n        if (msg.sender == owner && isICOrunning)\r\n        {            \r\n\t\t\tif (_remainingTokensReceiverAddress != 0 && _maxICOpublicSupply > 0)\r\n\t\t\t{\r\n\t\t\t\tuint256 _remainingAmount = _maxICOpublicSupply - _currentICOpublicSupply;\r\n\t\t\t\tif (_remainingAmount > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tbalances[_remainingTokensReceiverAddress] += _remainingAmount;\r\n\t\t\t\t\t_totalSupply += _remainingAmount;\r\n\t\t\t\t\tTransfer(this, _remainingTokensReceiverAddress, _remainingAmount);\t\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\t\r\n\t\t\tisICOrunning = false;\t\r\n\t\t\tICOoverTimestamp = now;\r\n        }\r\n\t\telse\r\n\t\t{\r\n\t\t\trevert();\r\n\t\t}\r\n\t\treturn true;\r\n    }\r\n\t\r\n\tfunction BurnTokens(uint256 amountInWei) public returns (bool success)\r\n    {\r\n\t\tif (balances[msg.sender] >= amountInWei)\r\n\t\t{\r\n\t\t\tbalances[msg.sender] -= amountInWei;\r\n\t\t\t_totalSupply -= amountInWei;\r\n\t\t\tBurn(msg.sender, amountInWei);\r\n\t\t\tTransfer(msg.sender, 0, amountInWei);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\trevert();\r\n\t\t}\r\n\t\treturn true;\r\n    }\r\n \r\n    function totalSupply() public constant returns (uint256 totalSupplyValue) {        \r\n        return _totalSupply;\r\n    }\r\n\t\r\n\tfunction OneEtherEqualsInWei() public constant returns (uint256 oneEtherEqualsInWei) {        \r\n        return _oneEtherEqualsInWei;\r\n    }\r\n\t\r\n\tfunction MaxICOpublicSupply() public constant returns (uint256 maxICOpublicSupply) {        \r\n        return _maxICOpublicSupply;\r\n    }\r\n\t\r\n\tfunction OwnerICOsupply() public constant returns (uint256 ownerICOsupply) {        \r\n        return _ownerICOsupply;\r\n    }\r\n\t\r\n\tfunction CurrentICOpublicSupply() public constant returns (uint256 currentICOpublicSupply) {        \r\n        return _currentICOpublicSupply;\r\n    }\r\n\t\r\n\tfunction RemainingTokensReceiverAddress() public constant returns (address remainingTokensReceiverAddress) {        \r\n        return _remainingTokensReceiverAddress;\r\n    }\r\n\t\r\n\tfunction ICOfundsReceiverAddress() public constant returns (address ICOfundsReceiver) {        \r\n        return _ICOfundsReceiverAddress;\r\n    }\r\n\t\r\n\tfunction Owner() public constant returns (address ownerAddress) {        \r\n        return owner;\r\n    }\r\n\t\r\n\tfunction SetupDone() public constant returns (bool setupDoneFlag) {        \r\n        return setupDone;\r\n    }\r\n    \r\n\tfunction IsICOrunning() public constant returns (bool isICOrunningFalg) {        \r\n        return isICOrunning;\r\n    }\r\n\t\r\n\tfunction IsICOstarted() public constant returns (bool isICOstartedFlag) {        \r\n        return ICOstarted;\r\n    }\r\n\t\r\n\tfunction ICOoverTimeStamp() public constant returns (uint256 ICOoverTimestampCheck) {        \r\n        return ICOoverTimestamp;\r\n    }\r\n\t\r\n\tfunction BlockICOdatetime() public constant returns (uint256 blockStopICOdate) {        \r\n        return _blockICOdatetime;\r\n    }\r\n\t\r\n\tfunction TimeNow() public constant returns (uint256 timenow) {        \r\n        return now;\r\n    }\r\n\t \r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n \r\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\r\n        if (balances[msg.sender] >= _amount\r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(msg.sender, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) public returns (bool success) {\r\n        if (balances[_from] >= _amount\r\n            && allowed[_from][msg.sender] >= _amount\r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[_from] -= _amount;\r\n            allowed[_from][msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(_from, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n \r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupplyValue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OneEtherEqualsInWei\",\"outputs\":[{\"name\":\"oneEtherEqualsInWei\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOoverTimeStamp\",\"outputs\":[{\"name\":\"ICOoverTimestampCheck\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amountInWei\",\"type\":\"uint256\"}],\"name\":\"BurnTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MaxICOpublicSupply\",\"outputs\":[{\"name\":\"maxICOpublicSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OwnerICOsupply\",\"outputs\":[{\"name\":\"ownerICOsupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StopICO\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsICOrunning\",\"outputs\":[{\"name\":\"isICOrunningFalg\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOfundsReceiverAddress\",\"outputs\":[{\"name\":\"ICOfundsReceiver\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StartICO\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOFactoryVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"oneEtherEqualsInWei\",\"type\":\"uint256\"},{\"name\":\"maxICOpublicSupply\",\"type\":\"uint256\"},{\"name\":\"ownerICOsupply\",\"type\":\"uint256\"},{\"name\":\"remainingTokensReceiverAddress\",\"type\":\"address\"},{\"name\":\"ICOfundsReceiverAddress\",\"type\":\"address\"},{\"name\":\"blockICOdatetime\",\"type\":\"uint256\"}],\"name\":\"SetupToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsICOstarted\",\"outputs\":[{\"name\":\"isICOstartedFlag\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CurrentICOpublicSupply\",\"outputs\":[{\"name\":\"currentICOpublicSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"name\":\"ownerAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TimeNow\",\"outputs\":[{\"name\":\"timenow\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BlockICOdatetime\",\"outputs\":[{\"name\":\"blockStopICOdate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SetupDone\",\"outputs\":[{\"name\":\"setupDoneFlag\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RemainingTokensReceiverAddress\",\"outputs\":[{\"name\":\"remainingTokensReceiverAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"adr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]", "ContractName": "Token", "CompilerVersion": "v0.4.18+commit.9cf6e910", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000001d5d0ded021a1b2592532d4f1426b48b866392e5", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://009d9b24c731157709d6650c4f60d37341da5734ae47214e234930c937c504cb"}