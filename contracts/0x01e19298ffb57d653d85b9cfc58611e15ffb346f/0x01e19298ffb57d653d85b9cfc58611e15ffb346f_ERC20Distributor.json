{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ncontract ERC20Distributor {\r\n    function distributeTokens(\r\n        address _tokenAddress,\r\n        uint256 _totalAmount,\r\n        address[] memory _recipients,\r\n        uint[] memory _percentages\r\n    ) public {\r\n        require(_recipients.length == _percentages.length, \"Recipients and percentages length mismatch\");\r\n\r\n        IERC20 token = IERC20(_tokenAddress);\r\n        uint8 decimals = token.decimals();\r\n\r\n        uint256 totalDistributed;\r\n        for (uint i = 0; i < _recipients.length; i++) {\r\n            uint256 amount = _totalAmount * _percentages[i] / 10000;\r\n            require(token.transferFrom(msg.sender, _recipients[i], amount), \"Transfer failed\");\r\n            totalDistributed += amount;\r\n        }\r\n\r\n        require(totalDistributed <= _totalAmount, \"Distributed more than specified\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_percentages\",\"type\":\"uint256[]\"}],\"name\":\"distributeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ERC20Distributor", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://298630c74071831b29aeb9bf5c6d8ee8164d555ff897cbfa23dca97525788f1a"}