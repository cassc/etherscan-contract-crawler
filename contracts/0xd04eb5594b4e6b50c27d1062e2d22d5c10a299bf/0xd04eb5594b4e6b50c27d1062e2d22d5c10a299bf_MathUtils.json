{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/libraries/math/MathUtils.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\nlibrary MathUtils {\\n    uint256 private constant _BASIS_POINTS = 10_000;\\n\\n    /**\\n     * @dev Calculate the current interest linearly accrued since the loan start time.\\n     * @param principal The principal amount of the loan in WEI\\n     * @param rateBips The yearly interest rate of the loan in bips\\n     * @param loanStartTime The timestamp at which this loan is opened\\n     * @return interest The current interest in WEI\\n     */\\n    function calculateCurrentInterest(\\n        uint256 principal,\\n        uint256 rateBips,\\n        uint256 loanStartTime\\n    ) external view returns (uint256 interest) {\\n        interest = (principal * rateBips * (block.timestamp - loanStartTime)) / (_BASIS_POINTS * 365 days);\\n    }\\n\\n    /**\\n     * @dev Calculates the current allowed auction price (increases linearly in time)\\n     * @param price The max auction buy price in WEI\\n     * @param auctionElapsed The current elapsed auction time\\n     * @param auctionDuration The block span for the auction\\n     * @return currentAuctionPrice Current allowed auction price in WEI\\n     */\\n    function calculateCurrentAuctionPrice(\\n        uint256 price,\\n        uint256 auctionElapsed,\\n        uint256 auctionDuration\\n    ) external pure returns (uint256 currentAuctionPrice) {\\n        uint256 auctionPortion = auctionElapsed > auctionDuration ? auctionDuration : auctionElapsed;\\n        currentAuctionPrice = (price * auctionPortion) / auctionDuration;\\n    }\\n\\n    /**\\n     * @dev Calculates the proportion that goes into treasury\\n     * @param interest total interest accrued in WEI\\n     * @param portionBips The treasury proportion in bips\\n     * @return treasuryAmount Amount goes into treasury in WEI\\n     */\\n    function calculateTreasuryProportion(\\n        uint256 interest,\\n        uint256 portionBips\\n    ) external pure returns (uint256 treasuryAmount) {\\n        treasuryAmount = (interest * portionBips) / _BASIS_POINTS;\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\r\n      \"@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\r\n      \"@solmate/=lib/solmate/src/\",\r\n      \"ds-test/=lib/forge-std/lib/ds-test/src/\",\r\n      \"openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\r\n      \"openzeppelin-contracts/=lib/openzeppelin-contracts/\",\r\n      \"solmate/=lib/solmate/src/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"paris\",\r\n    \"libraries\": {\r\n      \"contracts/libraries/math/MathUtils.sol\": {\r\n        \"MathUtils\": \"0xd04eb5594b4e6b50c27d1062e2d22d5c10a299bf\"\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionElapsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionDuration\",\"type\":\"uint256\"}],\"name\":\"calculateCurrentAuctionPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentAuctionPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateBips\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanStartTime\",\"type\":\"uint256\"}],\"name\":\"calculateCurrentInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"portionBips\",\"type\":\"uint256\"}],\"name\":\"calculateTreasuryProportion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"treasuryAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "MathUtils", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "paris", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}