{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"CatNamer.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface MoonCats {\\n    function rescueOrder(uint order) external view returns (bytes5);\\n    function catNames(bytes5 catId) external view returns (bytes32);\\n    function nameCat(bytes5 catId, bytes32 catName) external;\\n    function makeAdoptionOfferToAddress(bytes5 catId, uint price, address to) external;\\n}\\n\\ninterface WrappedMoonCats {\\n    function ownerOf(uint catId) external view returns (address);\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);    \\n    function transferFrom(address from, address to, uint tokenId) external;\\n    function wrap(uint tokenId) external returns (uint);\\n    function unwrap(uint tokenId) external returns (uint);\\n}\\n\\ncontract CatNamer {\\n\\n    event PriceChanged(address indexed owner, uint indexed catId);\\n    event MyCatNamed(address indexed namer, uint indexed catId, bytes32 indexed name);\\n    event TheirCatNamed(address indexed namer, uint indexed catId, bytes32 indexed name);\\n    \\n    mapping(uint => uint) public price;\\n\\n    address MC_ADDR = 0x60cd862c9C687A9dE49aecdC3A99b74A4fc54aB6;\\n    address WMC_ADDR = 0xc3f733ca98E0daD0386979Eb96fb1722A1A05E69;\\n\\n    MoonCats mc = MoonCats(MC_ADDR);\\n    WrappedMoonCats wmc = WrappedMoonCats(WMC_ADDR);\\n\\n    constructor() {}\\n\\n    function sellNamingRights(uint catId, uint namingPrice) external {\\n        require(mc.catNames(mc.rescueOrder(catId)) == 0x0, \\\"Cat already named\\\");\\n        require(wmc.ownerOf(catId) == msg.sender, \\\"You don't own the cat\\\");\\n        require(wmc.isApprovedForAll(msg.sender, address(this)), \\\"Contract not approved for transfers\\\");\\n        require(namingPrice != price[catId], \\\"Same as existing price\\\");\\n\\n        price[catId] = namingPrice;\\n\\n        emit PriceChanged(msg.sender, catId);\\n    }\\n\\n    function nameMyCat(uint catId, bytes32 name) external {\\n        require(wmc.ownerOf(catId) == msg.sender, \\\"You don't own the cat\\\");\\n        \\n        nameCat(msg.sender, catId, name);\\n\\n        emit MyCatNamed(msg.sender, catId, name);\\n    }\\n\\n    function nameTheirCat(uint catId, bytes32 name) external payable {\\n        require(price[catId] > 0, \\\"Naming rights not for sale\\\");\\n        require(msg.value == price[catId], \\\"Must send exact price\\\");\\n\\n        nameCat(wmc.ownerOf(catId), catId, name);\\n        payable(wmc.ownerOf(catId)).transfer(msg.value);\\n\\n        emit TheirCatNamed(msg.sender, catId, name);\\n    }\\n\\n    function nameCat(address owner, uint catId, bytes32 name) private {\\n        require(name != 0x0, \\\"No name provided\\\");\\n        require(mc.catNames(mc.rescueOrder(catId)) == 0x0, \\\"Cat already named\\\");\\n        require(wmc.isApprovedForAll(owner, address(this)), \\\"Contract not approved for transfers\\\");\\n\\n        wmc.transferFrom(owner, address(this), catId);\\n        wmc.unwrap(catId);\\n        mc.nameCat(mc.rescueOrder(catId), name);\\n        mc.makeAdoptionOfferToAddress(mc.rescueOrder(catId), 0, WMC_ADDR);\\n        wmc.wrap(catId);\\n        wmc.transferFrom(address(this), owner, catId);\\n        price[catId] = 0;\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"namer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"catId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"MyCatNamed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"catId\",\"type\":\"uint256\"}],\"name\":\"PriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"namer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"catId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"TheirCatNamed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"catId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"nameMyCat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"catId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"nameTheirCat\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"catId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"namingPrice\",\"type\":\"uint256\"}],\"name\":\"sellNamingRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CatNamer", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}