{"SourceCode": "/*\r\n      https://pyrabank.com\r\n      \"relax and divs\"\r\n*/\r\npragma solidity >=0.6.2;\r\n \r\ninterface IERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool);\r\n  function approveAndCall(address spender, uint tokens, bytes calldata data) external returns (bool success);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n \r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n \r\ninterface ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes calldata data) external;\r\n}\r\n \r\n \r\ncontract Private is IERC20 {\r\n  using SafeMath for uint256;\r\n \r\n  mapping (address => uint256) private balances;\r\n  mapping (address => mapping (address => uint256)) private allowed;\r\n  string public constant name  = \"Pyrabank Private\";\r\n  string public constant symbol = \"PBPRV\";\r\n  uint8 public constant decimals = 18;\r\n  bool public isBootStrapped = false;\r\n \r\n  address public owner = msg.sender;\r\n \r\n  address[15] ambassadorList = [\r\n    0x5138240E96360ad64010C27eB0c685A8b2eDE4F2,\r\n    0x9D7a76fD386eDEB3A871c3A096Ca875aDc1a55b7,\r\n    0x90D20d17Cc9e07020bB490c5e34f486286d3Eeb2,\r\n    0xAA7A7C2DECB180f68F11E975e6D92B5Dc06083A6,\r\n    0xF8be37CF74A05B96Ca40e7998B08f237f0f8b80b,\r\n    0xb7159F2a8380c8c84a6664916B59B1588670E6ec,\r\n    0x818F1B08E38376E9635C5bE156B8786317e833b3,\r\n    0x7D10f0fa8aB734328718212f21Aa8018CCcEd0f4,\r\n    0x15938D852a889f2f955aA74182Ebb64D3B148242,\r\n    0x39E00115d71313fD5983DE3Cf2b5820dd3Cc4447,\r\n    0xEe54D208f62368B4efFe176CB548A317dcAe963F,\r\n    0xeef3ADc384017E09bad1b5422aBaf7544555fee9,\r\n    0x43678bB266e75F50Fbe5927128Ab51930b447eaB,\r\n    0xD0A18Fd109F116c7bdb431d07aD6722d5A59F449,\r\n    0x09a054B60bd3B908791B55eEE81b515B93831E99\r\n  ];\r\n  address marketingAccount = 0xf160BCDA554662f4E66fc1Bf8FcAf385E8e5da4d;\r\n\r\n  uint256 _totalSupply = 20000000000 * (10 ** 18); // 20 billion supply\r\n\r\n  /**\r\n   * @dev Bootstrap the supply distribution and fund the UniswapV2 liquidity pool\r\n   */\r\n  function bootstrap() external returns (bool){\r\n\r\n\r\n      require(isBootStrapped == false, 'Require unintialized token');\r\n      require(msg.sender == owner, 'Require ownership');\r\n\r\n      //Distribute tokens\r\n      uint256 premineAmount = 100000000 * (10 ** 18); //100 mil per preminer\r\n      uint256 marketingAmount = 1000000000 * (10 ** 18); // 1 bil for marketing\r\n\r\n      balances[marketingAccount] = marketingAmount;\r\n      emit Transfer(address(0), marketingAccount, marketingAmount);\r\n\r\n\r\n      for (uint256 i = 0; i < 15; i++) {\r\n        balances[ambassadorList[i]] = premineAmount;\r\n        emit Transfer(address(0), ambassadorList[i], balances[ambassadorList[i]]);\r\n      }\r\n      balances[owner] = _totalSupply.sub(marketingAmount + 15 * premineAmount);\r\n\r\n      emit Transfer(address(0), owner, balances[owner]);\r\n\r\n      isBootStrapped = true;\r\n\r\n      return isBootStrapped;\r\n\r\n  }\r\n \r\n  function totalSupply() public override view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n \r\n  function balanceOf(address player) public override view returns (uint256) {\r\n    return balances[player];\r\n  }\r\n \r\n  function allowance(address player, address spender) public override view returns (uint256) {\r\n    return allowed[player][spender];\r\n  }\r\n \r\n \r\n  function transfer(address to, uint256 value) public override returns (bool) {\r\n    require(value <= balances[msg.sender]);\r\n    require(to != address(0));\r\n \r\n    balances[msg.sender] = balances[msg.sender].sub(value);\r\n    balances[to] = balances[to].add(value);\r\n \r\n    emit Transfer(msg.sender, to, value);\r\n    return true;\r\n  }\r\n \r\n  function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {\r\n    for (uint256 i = 0; i < receivers.length; i++) {\r\n      transfer(receivers[i], amounts[i]);\r\n    }\r\n  }\r\n \r\n  function approve(address spender, uint256 value) override public returns (bool) {\r\n    require(spender != address(0));\r\n    allowed[msg.sender][spender] = value;\r\n    emit Approval(msg.sender, spender, value);\r\n    return true;\r\n  }\r\n \r\n  function approveAndCall(address spender, uint256 tokens, bytes calldata data) override external returns (bool) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\r\n        return true;\r\n    }\r\n \r\n  function transferFrom(address from, address to, uint256 value) override public returns (bool) {\r\n    require(value <= balances[from]);\r\n    require(value <= allowed[from][msg.sender]);\r\n    require(to != address(0));\r\n \r\n    balances[from] = balances[from].sub(value);\r\n    balances[to] = balances[to].add(value);\r\n \r\n    allowed[from][msg.sender] = allowed[from][msg.sender].sub(value);\r\n \r\n    emit Transfer(from, to, value);\r\n    return true;\r\n  }\r\n \r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    require(spender != address(0));\r\n    allowed[msg.sender][spender] = allowed[msg.sender][spender].add(addedValue);\r\n    emit Approval(msg.sender, spender, allowed[msg.sender][spender]);\r\n    return true;\r\n  }\r\n \r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    require(spender != address(0));\r\n    allowed[msg.sender][spender] = allowed[msg.sender][spender].sub(subtractedValue);\r\n    emit Approval(msg.sender, spender, allowed[msg.sender][spender]);\r\n    return true;\r\n  }\r\n \r\n  function burn(uint256 amount) external {\r\n    require(amount != 0);\r\n    require(amount <= balances[msg.sender]);\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    balances[msg.sender] = balances[msg.sender].sub(amount);\r\n    emit Transfer(msg.sender, address(0), amount);\r\n  }\r\n \r\n}\r\n \r\n \r\n \r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    require(c / a == b);\r\n    return c;\r\n  }\r\n \r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n \r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b <= a);\r\n    return a - b;\r\n  }\r\n \r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a);\r\n    return c;\r\n  }\r\n \r\n  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\r\n    uint256 c = add(a,m);\r\n    uint256 d = sub(c,1);\r\n    return mul(div(d,m),m);\r\n  }\r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bootstrap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBootStrapped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Private", "CompilerVersion": "v0.6.2+commit.bacdbe57", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://6d8738a454dd8f08a2bb87284dd8fbcb6a1b3c99d5e91fdd42a0fbe330c25f79"}