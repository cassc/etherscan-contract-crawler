{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13;\r\n\r\ncontract ChainXBridge {\r\n    address public cold;\r\n    uint64 public chainId;\r\n    uint64 public nonce;\r\n\r\n    event SwapOut(\r\n        bytes32 swapId,\r\n        uint64 fromChainId,\r\n        uint64 toChainId,\r\n        address sender,\r\n        string receiver,\r\n        uint256 amount,\r\n        uint256 estGas\r\n    );\r\n\r\n    modifier autoIncreaseNonce() {\r\n        nonce = nonce + 1;\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        address _cold,\r\n        uint64 _chainId\r\n    ){\r\n        require(_cold != address(0), \"InvalidCold\");\r\n        require(_chainId != 0, \"InvalidChainId\");\r\n\r\n        cold = _cold;\r\n        chainId = _chainId;\r\n        nonce = 0;\r\n    }\r\n\r\n    function swap_out(\r\n        bytes32 swapID,\r\n        uint64 toChainId,\r\n        string calldata receiver,\r\n        uint256 amount,\r\n        uint256 estGas\r\n    ) external payable autoIncreaseNonce {\r\n        require((cold != address(0)), \"InvalidCold\");\r\n        require(msg.value == amount, \"ValueErr\");\r\n\r\n        uint256 old_balance = cold.balance;\r\n        (bool sent, ) = payable(cold).call{value: amount}(\"\");\r\n        require(sent, \"Failed to send Ether\");\r\n        uint256 new_balance = cold.balance;\r\n\r\n        require(new_balance > old_balance && new_balance == old_balance + amount, \"Unexpect\");\r\n\r\n        emit SwapOut(\r\n            swapID,\r\n            chainId,\r\n            toChainId,\r\n            msg.sender,\r\n            receiver,\r\n            amount,\r\n            estGas\r\n        );\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cold\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_chainId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"swapId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"fromChainId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"toChainId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"receiver\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"estGas\",\"type\":\"uint256\"}],\"name\":\"SwapOut\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cold\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"swapID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"toChainId\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"receiver\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"estGas\",\"type\":\"uint256\"}],\"name\":\"swap_out\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "ChainXBridge", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000171c3ca2488401e51332c518e99c13b561fca20f0000000000000000000000000000000000000000000000000000000000000001", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://552b95b7b1cc096dcd90a10bf77a3a80edf0e9009e2a8d665de3918d30fbf56b"}