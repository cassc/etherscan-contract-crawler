{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"Contracts/TTSwapV1Marketor.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/ITTSwapV1Marketor.sol\\\";\\n\\ncontract TTSwapV1Marketor is ITTSwapV1Marketor {\\n    //\u5e02\u573a\u7ba1\u7406\u5458\\n    mapping(uint128 => address) public Marketors;\\n    //\u8bb0\u5f55\u7ba1\u7406\u53f7\u7f16\u53f7\\n    //Marketoraddress=>MarketorNo\\n    mapping(address => uint128) public MarketorsNo;\\n    //\u8bb0\u5f55\u5e02\u573a\u7ba1\u7406\u5458\u4eba\u6570(\u5305\u542b\u5df2\u52a0\u4eba\u5458)\\n    uint128 public maxMarketorNo;\\n    //\u8bb0\u5f55\u5e02\u573a\u521b\u5efa\u8005\\n    address public marketCreator;\\n\\n    //\u521d\u59cb\u5316\u65f6\\n    constructor(address _marketCreator) {\\n        marketCreator = _marketCreator;\\n        maxMarketorNo = 1;\\n    }\\n\\n    //\u53ea\u80fd\u5e02\u573a\u521b\u5efa\u8005\u8fd0\u884c\\n    modifier onlyMarketCreator() {\\n        require(msg.sender == marketCreator);\\n        _;\\n    }\\n\\n    //\u589e\u52a0\u5e02\u573a\u7ba1\u7406\u5458\\n    function setMarketorByMarketCreator(\\n        address _owner\\n    ) external override onlyMarketCreator {\\n        require(\\n            maxMarketorNo + 1 >= maxMarketorNo,\\n            \\\"maxMarketorNo connot increase\\\"\\n        );\\n        maxMarketorNo += 1;\\n        MarketorsNo[_owner] = maxMarketorNo;\\n        Marketors[maxMarketorNo] = _owner;\\n        emit e_setMarketorByMarketCreator(_owner);\\n    }\\n\\n    //\u5220\u9664\u5e02\u573a\u7ba1\u7406\u5458\\n    function delMarketorByMarketCreator(\\n        address _owner\\n    ) external override onlyMarketCreator {\\n        delete Marketors[MarketorsNo[_owner]];\\n        delete MarketorsNo[_owner];\\n        emit e_delMarketorByMarketCreator(_owner);\\n    }\\n\\n    //\u5224\u5b9a\u6267\u884c\u8005\u662f\u5426\u662f\u7ba1\u7406\u5458\\n    function isValidMarketor() external view override returns (bool) {\\n        return MarketorsNo[msg.sender] > 0 ? true : false;\\n    }\\n\\n    //\u5224\u5b9a\u7279\u5b9a\u5730\u5740\u662f\u5426\u662f\u7ba1\u7406\u5458\\n    function isValidMarketor(\\n        address mkaddress\\n    ) external view override returns (bool) {\\n        return MarketorsNo[mkaddress] > 0 ? true : false;\\n    }\\n\\n    //\u83b7\u53d6\u8c03\u7528\u8005\u7684\u7ba1\u7406\u5458\u7f16\u53f7\\n    function getMarketorNo() external view returns (uint128) {\\n        return MarketorsNo[msg.sender];\\n    }\\n\\n    //\u83b7\u53d6\u7279\u5b9a\u5730\u5740\u7684\u7ba1\u7406\u5458\u7f16\u53f7\\n    function getMarketorNo(\\n        address _marketorAddress\\n    ) external view returns (uint128) {\\n        return MarketorsNo[_marketorAddress];\\n    }\\n\\n    //\u83b7\u53d6\u5f53\u524d\u6700\u5927\u7f16\u53f7\\n    function getMaxMarketorNo() external view returns (uint128) {\\n        return maxMarketorNo;\\n    }\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/ITTSwapV1Marketor.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Marketor/IMarketorV1Events.sol\\\";\\nimport \\\"./Marketor/IMarketorV1Immutables.sol\\\";\\nimport \\\"./Marketor/IMarketorV1MarketCreatorActions.sol\\\";\\nimport \\\"./Marketor/IMarketorV1State.sol\\\";\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface ITTSwapV1Marketor is\\n    IMarketorV1Events,\\n    IMarketorV1Immutables,\\n    IMarketorV1MarketCreatorActions,\\n    IMarketorV1State\\n{\\n\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Marketor/IMarketorV1State.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IMarketorV1State {\\n    function isValidMarketor() external view returns (bool);\\n\\n    function isValidMarketor(address) external view returns (bool);\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IMarketorV1MarketCreatorActions {\\n    function setMarketorByMarketCreator(address _owner) external;\\n\\n    /// @notice Explain to an end user what this does\\n    /// @dev Explain to a developer any extra details\\n    function delMarketorByMarketCreator(address _owner) external;\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IMarketorV1Immutables {\\n\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Marketor/IMarketorV1Events.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IMarketorV1Events {\\n    event e_setMarketorByMarketCreator(address);\\n    event e_delMarketorByMarketCreator(address);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketCreator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"e_delMarketorByMarketCreator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"e_setMarketorByMarketCreator\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"Marketors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MarketorsNo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketorNo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketorAddress\",\"type\":\"address\"}],\"name\":\"getMarketorNo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxMarketorNo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mkaddress\",\"type\":\"address\"}],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isValidMarketor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMarketorNo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMarketorByMarketCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TTSwapV1Marketor", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000ac09dacf87ed845eb4ce5e9967304d4e84dadf65", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}