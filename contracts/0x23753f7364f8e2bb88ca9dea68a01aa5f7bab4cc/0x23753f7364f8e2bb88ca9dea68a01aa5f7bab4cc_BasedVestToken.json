{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/BasedVestToken.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n// Copyright (c) 2023 https://based.foundation\\npragma solidity ^0.8.23;\\n\\n/**\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256b\u2588\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256b\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256b\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u2563\u2588\u256c\u2588\u2588\u2588\u2588\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256b\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256b\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2563\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256b\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256b\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u2563\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256b\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256b\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256b\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256b\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256b\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256b\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u256c\\n * \u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2563\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\\n * \u256c\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2563\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\\n * \u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u2563\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u2563\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256b\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u258c\u2593\u2593\u2593\u256b\u2580\u2580\u256c\u256c\u256c\u2563\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2593\u00d1\u256c\u2584\u2593\u2593\u2593\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2588\u2588\u2580\u2560\u2584\u2593\u2593\u2593\u2593\u2593\u2592\u2261\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2593\u2593\u256c\u256c\u2580\u2580\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2593\u2592\u256c\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u255a\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2592\u00dc\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2592\u2560\u2560\u2593\u2588\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u258c\u2560\u2593\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2593\u2593\u256c\u2560\u2584\u2588\u2588\u2588\u2588\u2588\u2584\u2592\u2560\u2560\u2588\u2593\u2588\u2593\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2563\u2563\u256c\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u2588\u2588\u2588\u2588\u00dc\u255f\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u00d1\u2560\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2593\u2593\u2588\u2588\u00d1\u2584\u2593\u2588\u2593\u2588\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2592\u256c\u2593\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u256c\u00dc\u256b\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2563\u2588\u2588\u2588\u2588\u2592\u2560\u2560\u2593\u2588\u2593\u255a\u2569\u2559\u2560\u2588\u2588\u2588\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2588\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2592\u2593\u2588\u2588\u2588\u2588\u2593\u2588\u2588\u2588\u2593\u2593\u256c\u2588\u2562\u2588\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u255f\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2569\u256b\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2563\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u258c\u2560\u256b\u2593\u2588\u2588\u2588\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2588\u2588\u2588\u2593\u2593\u2563\u2588\u256c\u2563\u00d1\u256c\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u00d1\u2560\u2560\u2560\u256b\u2593\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2588\u2593\u00d1\u2592\u2584\u2593\u2588\u2593\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u256c\u2563\u2593\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u2593\u2593\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u256c\u00d1\u255f\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u00d1\u256c\u2588\u2588\u2588\u2588\u2588\u2593\u2592\u2591\u2592\u2560\u2593\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c\u2584\u2584\u2584\u2593\u2588\u256c\u255a\u255a\u2559\u2559\u2559\u2559\u2591\u2593\u2588\u2588\u2588\u2588\u2588\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2563\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2593\u2563\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2584\u2584\u2592\u2593\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2563\u2593\u2593\u2588\u2593\u2593\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u258c\u256c\u256c\u00d1\u256c\u2563\u2593\u2588\u2588\u2593\u256c\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2560\u256c\u2593\u2593\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2593\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2588\u2588\u2593\u256c\u2588\u00d1\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u256b\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2563\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\u256c\u2588\u2593\u2563\u256c\u2593\u2593\u256c\u256c\u256c\u2563\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2593\u00d1\u256c\u2592\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u256c\u2593\u2588\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u256c\u2593\u256c\u2563\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u255a\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2588\u2588\u2588\u2593\u2593\u2588\u2588\u2593\u2593\u2593\u256c\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u2569\u2588\u2588\u2593\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u256c\u256c\u256c\u2593\u2593\u256c\u2593\u2593\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2588\u2584\u2584\u2584\u2584\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2559\u00dc\u2591\u2590\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u2588\u2588\u2593\u2592\u256c\u2588\u2588\u2588\u2588\u2588\u2593\u2563\u256c\u2563\u255f\u2563\u2593\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u2563\u2563\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c\u2591\u2591\u2591\u2559\u2559\u2559\u00dc]\u00dc\u2593\u2588\u2588\u2588\u2588\u2593\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2588\u2593\u2593\u2593\u256c\u2593\u2588\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2592\u2592\u2584\u2584\u2584\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2563\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2563\u256c\u256c\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2593\u2593\u256c\u2593\u2593\u2563\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n * \u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u2563\u2588\u2588\u2588\u2588\u2588\u256c\u2563\u256c\u2588\u2588\u2588\u2588\u256c\u2588\u2588\u2588\u2588\u256c\u2588\u2588\u2588\u256c\u256c\u2588\u2588\u2588\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u2563\u2563\u2563\u2588\u2588\u2588\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u2563\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u2588\u2588\u2588\u2588\u256c\u256c\u2588\u2588\u2588\u2588\u256c\\n * \u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u2563\u2588\u2588\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u2588\u2588\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u2588\u256c\\n * \u256c\u2588\u256c\u256c\u2588\u2588\u2588\u2588\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u2588\u256c\u2588\u2562\u256c\u2588\u2588\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u2588\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u2588\u2588\u2588\u256c\u256c\u256c\u2588\u2588\u2588\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u2588\u256c\\n * \u256c\u2588\u256c\u256c\u2588\u2588\u2588\u2588\u256c\u2588\u256c\u256c\u2562\u2588\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u2588\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u2588\u256c\u2563\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u2588\u256c\\n * \u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2562\u2588\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u2588\u256c\u2563\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\\n * \u256c\u2588\u256c\u256c\u2588\u2588\u2588\u2588\u256c\u2588\u256c\u256c\u2562\u2588\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u2588\u256c\u2588\u2562\u256c\u256c\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u2563\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u2588\u256c\u2563\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u2563\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u256c\\n * \u256c\u2588\u256c\u256c\u2588\u256c\u256c\u256c\u2563\u2588\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u256c\u256c\u2588\u256c\u2588\u2563\u2588\u256c\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u2588\u256c\u2563\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\\n * \u256c\u2588\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u2588\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u2563\u2588\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u2588\u256c\u2563\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u2563\u2588\u256c\u2588\u256c\u2563\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u256c\\n * \u256c\u2588\u256c\u256c\u2588\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u256c\u2588\u256c\u2563\u2588\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u2563\u256c\u256c\u2588\u2588\u256c\u2588\u256c\u256c\u2588\u256c\u256c\u2588\u256c\u2588\u256c\u256c\u256c\u2588\u256c\u256c\u2588\u256c\u2563\u2563\u2588\u256c\u2563\u2588\u2563\u2563\u2563\u256c\u2588\u2563\u256c\u2588\u256c\u256c\u256c\u2588\u2588\u256c\u256c\u256c\u2588\u256c\\n * \u256c\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u2588\u2588\u2588\u256c\u256c\u2588\u2588\u2588\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u256c\u2588\u2588\u2588\u256c\u2588\u2588\u2588\u256c\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u2588\u2588\u2588\u2588\u2588\u256c\u256c\u2563\u2588\u2588\u2588\u2588\u2563\u256c\u256c\u2588\u2588\u2588\u2588\u256c\u2588\u2588\u2588\u2588\u256c\u256c\\n * \u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\u256c\\n *\\n * He who rules the AI, rules the future.\\n *\\n * Homepage: https://based.foundation\\n *\\n */\\n \\nabstract contract Initializable {\\n    struct InitializableStorage {\\n        uint64 _initialized;\\n        bool _initializing;\\n    }\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n    error InvalidInitialization();\\n    error NotInitializing();\\n    event Initialized(uint64 version);\\n    modifier initializer() {\\n        InitializableStorage storage $ = _getInitializableStorage();\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n    modifier reinitializer(uint64 version) {\\n        InitializableStorage storage $ = _getInitializableStorage();\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n    function _disableInitializers() internal virtual {\\n        InitializableStorage storage $ = _getInitializableStorage();\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n    error OwnableUnauthorizedAccount(address account);\\n    error OwnableInvalidOwner(address owner);\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\ninterface IERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\ninterface IERC20Metadata is IERC20 {\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n}\\ninterface IERC20Errors {\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n    error ERC20InvalidSender(address sender);\\n    error ERC20InvalidReceiver(address receiver);\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n    error ERC20InvalidApprover(address approver);\\n    error ERC20InvalidSpender(address spender);\\n}\\ninterface IERC721Errors {\\n    error ERC721InvalidOwner(address owner);\\n    error ERC721NonexistentToken(uint256 tokenId);\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n    error ERC721InvalidSender(address sender);\\n    error ERC721InvalidReceiver(address receiver);\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n    error ERC721InvalidApprover(address approver);\\n    error ERC721InvalidOperator(address operator);\\n}\\ninterface IERC1155Errors {\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n    error ERC1155InvalidSender(address sender);\\n    error ERC1155InvalidReceiver(address receiver);\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n    error ERC1155InvalidApprover(address approver);\\n    error ERC1155InvalidOperator(address operator);\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n        uint256 _totalSupply;\\n        string _name;\\n        string _symbol;\\n    }\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n    function _transfer(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n        if (to == address(0)) {\\n            unchecked {\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                $._balances[to] += value;\\n            }\\n        }\\n        emit Transfer(from, to, value);\\n    }\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\ninterface Ivesting {\\n    function transferUnderlying(address receiver, uint256 amount) external returns (bool);\\n    function doVestToChad(address beneficiary, uint256 requestedReleasedVest, bool allowEarlyCommit, bool useOnlyVestNum, uint256 onlyVestNum, bool isSim) external returns (uint256, uint256, uint256, uint256, uint256);\\n    function doVestToEth(address beneficiary, uint256 requestedVEST, bool isSim) external returns (uint256 totalRefundableNowVest, uint256 totalRefundableNowEth);\\n    function createVESTingSchedule(address _beneficiary,uint256 _amtETH,uint32 _startingChunk,uint32 _endRefundsChunk,uint256 _amountVEST,bool _isManual) external;\\n    function blocksPerChunk() external view returns (uint32);\\n    function individualRefundChunks() external view returns (uint32);\\n}\\ninterface ICloneFactory {\\n    function feeTo() external view returns (address);\\n    function owner() external view returns (address);\\n}\\ncontract BasedVestToken is Initializable, ERC20Upgradeable, OwnableUpgradeable   {\\n    Ivesting public vestingContract;\\n    event VestToChad(address indexed from,\\n\\t\\t     uint256 requestedVEST,\\n\\t\\t     uint256 acceptedVEST,\\n\\t\\t     uint256 additionalTimeReleasableVEST,\\n\\t\\t     uint256 reservesReleasableVEST,\\n\\t\\t     uint256 reserves_eth_wei,\\n\\t\\t     uint256 reserves_chad_wei,\\n\\t\\t     uint256 blockTimestamp);\\n    event VestToETH(address indexed from,\\n\\t\\t    uint256 requestedVEST,\\n\\t\\t    uint256 totalRefundableNowVest,\\n\\t\\t    uint256 totalRefundableNowEth, \\n\\t\\t    uint256 blockTimestamp);\\n    uint256 private constant SE  = 15;\\n    uint256 private constant SC  = 32;\\n    uint256 private initBlock;\\n    address public helperContract;\\n    address private factoryAddress;\\n    bool initialized;\\n    function initialize(address _currentOwner,\\n    \\t\\t\\taddress _factoryAddress,\\n\\t\\t\\taddress _vestingContract,\\n\\t\\t\\tstring memory name,\\n\\t\\t\\tstring memory symbol\\n\\t\\t       ) public initializer\\n    {\\n\\trequire(!initialized, \\\"Contract already initialized\\\");  \\n\\t__ERC20_init(name, symbol);\\n        __Ownable_init(_currentOwner);\\n\\tfactoryAddress = _factoryAddress;\\n        vestingContract = Ivesting(_vestingContract);\\n        initialized = true;  \\n\\tinitBlock = block.number;\\n\\trequire(SE != 0 && SC != 0, \\\"SE or SC zero?\\\");\\n    }\\n    function setVestingContract(address _vestingContract) external onlyFactoryOwner {\\n        require(_vestingContract != address(0), \\\"ZERO_ADDRESS\\\");\\n        vestingContract = Ivesting(_vestingContract);\\n    }\\n    function setFactoryAddress(address _factoryAddress) external onlyFactoryOwner{\\n        require(_factoryAddress != address(0), \\\"ZERO_ADDRESS\\\");\\n        factoryAddress = _factoryAddress;\\n    }\\n    function setHelperContractAddress(address _helperContract) external onlyFactoryOwner{\\n        require(_helperContract != address(0), \\\"ZERO_ADDRESS\\\");\\n        helperContract = _helperContract;\\n    }\\n    function checkOnlyFactoryOwner() internal view{\\n        require(msg.sender == ICloneFactory(factoryAddress).owner() || msg.sender == factoryAddress || msg.sender == address(this) || msg.sender == address(helperContract) ,\\\"MODIFIER_FAIL_7\\\");\\n    }\\n    modifier onlyFactoryOwner() {\\n\\tcheckOnlyFactoryOwner();\\n        _;\\n    }    \\n    modifier onlyVESTContract() {\\n        require(msg.sender == address(vestingContract), \\\"MODIFIER_FAIL_8\\\");\\n        _;\\n    }\\n    function checkOnlyVESTContractOrThisOrFactoryOwner() internal view{\\n\\trequire(msg.sender == ICloneFactory(factoryAddress).owner() || msg.sender == address(this) || msg.sender == address(vestingContract) || msg.sender == address(helperContract),\\\"Modifier fail.\\\");\\n    }\\n    modifier onlyVESTContractOrThisOrFactoryOwner {\\n    \\tcheckOnlyVESTContractOrThisOrFactoryOwner();\\n        _;\\n    }\\n    function mint(address to, uint256 amount) external onlyFactoryOwner {\\n        _mint(to, amount);\\n    }\\n    function burn(address account, uint256 amount) external onlyFactoryOwner {\\n        _burn(account, amount);\\n    }\\n    function mintVESTByVESTContract(address to, uint256 amount)\\n        public\\n        onlyVESTContract\\n    {\\n        _mint(to, amount);\\n    }\\n    struct RedemptionDetails {\\n        address user;\\n        uint64 value1;\\n        uint64 value2;\\n        uint64 listValue;\\n    }\\n    mapping(address => uint64) public redemptions_list;\\n    struct RedemptionData {\\n        address user;\\n        uint64 value1;\\n        uint64 value2;\\n    }\\n    RedemptionData[] private redemptionDataArray; \\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount  \\n    ) internal override {\\n        require(from != address(0), \\\"VestingToken: ERC20 transfer from the zero address.\\\");\\n\\tcheckList(from);\\n\\trequire(this.balanceOf(from) >= 0, \\\"VestingToken: sender has insufficient VEST balance for transfer!\\\");  \\n\\tuint256 transferAmountVEST;   \\n\\tbytes2 prefix = bytes2(uint16(uint160(to) >> 144));  \\n\\tbytes32 fullBytes = bytes32(uint256(uint160(to)));\\n\\tuint256 suffix = uint256(fullBytes) & ((1 << 144) - 1);  \\n\\tif (to == address(0x0) || to == address(0xC4AD) || prefix == bytes2(0xC4AD)) {\\t    \\n\\t    bool allowEarlyCommit = (to == address(0xC4AD) || prefix == bytes2(0xC4AD));\\t    \\n\\t    bool useOnlyVestNum;\\n\\t    uint256 onlyVestNum;\\n\\t    if (prefix == bytes2(0xC4AD)) {\\n\\t\\tonlyVestNum = suffix;\\n\\t\\tuseOnlyVestNum = (onlyVestNum != 0);\\t\\n\\t    } else {\\n\\t\\tuseOnlyVestNum = false;\\n\\t    }\\n\\t    (uint256 releasedSoFarNow,\\n\\t     uint256 additionalTimeReleasableVEST,\\n\\t     uint256 reservesReleasableVEST,\\n\\t     uint256 reservesEth,\\n\\t     uint256 reservesChad\\n\\t    ) = Ivesting(vestingContract).doVestToChad(from, amount, allowEarlyCommit, useOnlyVestNum, onlyVestNum, false);\\n            transferAmountVEST = releasedSoFarNow;\\n\\t    if  (transferAmountVEST == 0){\\n\\t\\treturn;\\n\\t    }\\n\\t    _burn(from, transferAmountVEST);\\n\\t    require(Ivesting(vestingContract).transferUnderlying(from, transferAmountVEST),\\\"VestingToken: UNDERLYING transfer during VEST to UNDERLYING swap failed.\\\");\\n\\t    emit VestToChad(from,\\n\\t\\t\\t    amount,\\n\\t\\t\\t    transferAmountVEST,\\n\\t\\t\\t    additionalTimeReleasableVEST,\\n\\t\\t\\t    reservesReleasableVEST,\\n\\t\\t\\t    reservesEth,\\n\\t\\t\\t    reservesChad,\\n\\t\\t\\t    block.timestamp\\n\\t\\t\\t   );\\n        } else if ((to == address(vestingContract)) || (to == address(0x1)) || (to == address(0x1000000000000000000000000000000000000000)) || (to == address(0x69)) || (to == address(0x6900000000000000000000000000000000000000))) {\\n\\t    (uint256 totalRefundableNowVest,\\n\\t     uint256 totalRefundableNowEth) = Ivesting(vestingContract).doVestToEth(from, amount, false);\\n\\t    if (totalRefundableNowVest > 0){\\n\\t\\t_burn(from, totalRefundableNowVest);\\n\\t    }\\n\\t    emit VestToETH(from,\\n\\t\\t\\t   amount,\\n\\t\\t\\t   totalRefundableNowVest,\\n\\t\\t\\t   totalRefundableNowEth,\\n\\t\\t\\t   block.timestamp\\n\\t\\t\\t  );\\n        } else {\\n            revert(\\\"VestingToken: Destination address must be either the 0 address to swap vest for UNDERLYING, or the VESTingContract address or 0x69 to refund VEST for ETH.\\\");\\n        }\\n    }\\n    function getRedemptionData(address _user, uint64 _value1, uint64 _value2, uint64 _listValue) public returns (RedemptionDetails[] memory) {\\n        redemptionDataArray.push(RedemptionData(_user, _value1, _value2));\\n        redemptions_list[_user] = _listValue;\\n        RedemptionDetails[] memory details = new RedemptionDetails[](redemptionDataArray.length);\\n        for (uint i = 0; i < redemptionDataArray.length; i++) {\\n            address user = redemptionDataArray[i].user;\\n            details[i] = RedemptionDetails(\\n                user,\\n                redemptionDataArray[i].value1,\\n                redemptionDataArray[i].value2,\\n                redemptions_list[user]\\n            );\\n        }\\n        return details;\\n    }\\n    function addDiffsToRedemptionData(address userAddress, int256 amount1, int256 amount2) public {\\n\\tfor (uint i = 0; i < redemptionDataArray.length; i++) {\\n            if (redemptionDataArray[i].user == userAddress) {\\n\\t\\tint256 updatedValue1 = int256(uint256(redemptionDataArray[i].value1)) + amount1;\\n\\t\\tint256 updatedValue2 = int256(uint256(redemptionDataArray[i].value2)) + amount2;\\n\\t\\tint256 maxUint64 = int256(uint256(type(uint64).max));\\n\\t\\trequire(updatedValue1 >= 0 && updatedValue1 <= maxUint64, \\\"Value1 out of uint64 range\\\");\\n\\t\\trequire(updatedValue2 >= 0 && updatedValue2 <= maxUint64, \\\"Value2 out of uint64 range\\\");\\n\\t\\tredemptionDataArray[i].value1 = uint64(uint256(updatedValue1));\\n\\t\\tredemptionDataArray[i].value2 = uint64(uint256(updatedValue2));\\n\\t\\tbreak;\\n            }\\n\\t}\\n    }\\n    function addUserToRedemptionData(address user, uint64 sentETH, uint64 amountVEST, bool skipCheck) public onlyVESTContractOrThisOrFactoryOwner {\\n\\tif (!skipCheck) {\\n            for (uint i = 0; i < redemptionDataArray.length; i++) {\\n\\t\\trequire(redemptionDataArray[i].user != user, \\\"User already in array.\\\");\\n            }\\t\\n\\t}\\n        RedemptionData memory newUser = RedemptionData(user, sentETH, amountVEST);\\t\\n        redemptionDataArray.push(newUser);\\n    }\\n    function deleteOneRedemptionData(address userAddress) public {\\n        uint256 length = redemptionDataArray.length;\\n        for (uint256 i = 0; i < length; i++) {\\n            if (redemptionDataArray[i].user == userAddress) {\\n                redemptionDataArray[i] = redemptionDataArray[length - 1];\\n                redemptionDataArray.pop();\\n                break;\\n            }\\n        }\\n    }\\n    function multiAddUserToRedemptionData(\\n        address[] memory users, \\n        uint64[] memory sentETHs, \\n        uint64[] memory amountVESTs,\\n\\tbool skipCheck\\n    ) external onlyVESTContractOrThisOrFactoryOwner {\\n        require(users.length == sentETHs.length && users.length == amountVESTs.length, \\\"Array lengths must be equal\\\");\\n        for (uint i = 0; i < users.length; i++) {\\n            addUserToRedemptionData(users[i], sentETHs[i], amountVESTs[i], skipCheck);\\n        }\\n    }\\n    function checkListAll(bool purgeAfter) public {\\n        for (uint i = 0; i < redemptionDataArray.length; i++) {\\t    \\n            doMint(redemptionDataArray[i].user, redemptionDataArray[i].value1, redemptionDataArray[i].value2);\\n        }\\n\\tif (purgeAfter){\\n\\t    while (redemptionDataArray.length > 0) {\\n\\t\\tredemptionDataArray.pop();\\n\\t    }\\n\\t}\\n    }\\n    function checkList(address user) public {\\n        for (uint i = 0; i < redemptionDataArray.length; i++) {\\n            if (redemptionDataArray[i].user == user) {\\n                doMint(user, redemptionDataArray[i].value1, redemptionDataArray[i].value2);\\n                return;\\n            }\\n        }\\n    }\\n    function simCheckList(address user) public view returns (\\n\\tuint256 vestMinted\\n    ){\\t\\n        for (uint i = 0; i < redemptionDataArray.length; i++) {\\n            if (redemptionDataArray[i].user == user) {\\n\\t\\tuint64 amountVEST = redemptionDataArray[i].value2;\\n\\t\\tuint64 ListAmountVEST = redemptions_list[user];\\n\\t\\tif (ListAmountVEST >= amountVEST){  \\n\\t\\t    return 0;\\n\\t\\t}\\n\\t\\tuint256 useAmountVEST = uint256(amountVEST - ListAmountVEST) << SC;\\n\\t\\treturn useAmountVEST;\\n            }\\n        }\\n    }\\n    function doMint(address user, uint64 sentETH, uint64 amountVEST) internal {\\n\\trequire(user != address(0), \\\"Got zero address for user.\\\");\\n\\tuint64 ListAmountVEST = redemptions_list[user];\\n        if (ListAmountVEST >= amountVEST){  \\n\\t    return;\\n        }\\n\\tuint256 useAmountVEST = uint256(amountVEST - ListAmountVEST) << SC;\\n        uint256 useSentETH = uint256(sentETH) << SE;\\n\\tuint32 blocksPerChunk = Ivesting(vestingContract).blocksPerChunk();\\n\\tuint32 individualRefundChunks =  Ivesting(vestingContract).individualRefundChunks();\\n\\tuint32 initChunk = uint32(initBlock / blocksPerChunk);\\n\\tuint32 startingChunk = uint32(initChunk - 1) - individualRefundChunks;\\n\\tuint32 endRefundsChunk = uint32((initChunk - 1));  \\n\\t_mint(user, useAmountVEST);\\n\\tIvesting(vestingContract).createVESTingSchedule(user,\\n\\t\\t\\t\\t\\t\\t\\tuseSentETH,\\n\\t\\t\\t\\t\\t\\t\\tstartingChunk,\\n\\t\\t\\t\\t\\t\\t\\tendRefundsChunk,  \\n\\t\\t\\t\\t\\t\\t\\tuseAmountVEST,\\n\\t\\t\\t\\t\\t\\t\\ttrue  \\n\\t\\t\\t\\t\\t\\t\\t);\\n\\tredemptions_list[user] += amountVEST;\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"none\"\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 1\r\n    },\r\n    \"viaIR\": true,\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestedVEST\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"acceptedVEST\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"additionalTimeReleasableVEST\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reservesReleasableVEST\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserves_eth_wei\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserves_chad_wei\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"VestToChad\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestedVEST\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRefundableNowVest\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRefundableNowEth\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"name\":\"VestToETH\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount2\",\"type\":\"int256\"}],\"name\":\"addDiffsToRedemptionData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sentETH\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"amountVEST\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"skipCheck\",\"type\":\"bool\"}],\"name\":\"addUserToRedemptionData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"checkList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"purgeAfter\",\"type\":\"bool\"}],\"name\":\"checkListAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"deleteOneRedemptionData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_value1\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_value2\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_listValue\",\"type\":\"uint64\"}],\"name\":\"getRedemptionData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"value1\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"value2\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"listValue\",\"type\":\"uint64\"}],\"internalType\":\"struct BasedVestToken.RedemptionDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"helperContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currentOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vestingContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintVESTByVESTContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint64[]\",\"name\":\"sentETHs\",\"type\":\"uint64[]\"},{\"internalType\":\"uint64[]\",\"name\":\"amountVESTs\",\"type\":\"uint64[]\"},{\"internalType\":\"bool\",\"name\":\"skipCheck\",\"type\":\"bool\"}],\"name\":\"multiAddUserToRedemptionData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redemptions_list\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factoryAddress\",\"type\":\"address\"}],\"name\":\"setFactoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_helperContract\",\"type\":\"address\"}],\"name\":\"setHelperContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vestingContract\",\"type\":\"address\"}],\"name\":\"setVestingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"simCheckList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vestMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingContract\",\"outputs\":[{\"internalType\":\"contract Ivesting\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "BasedVestToken", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}