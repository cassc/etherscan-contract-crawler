{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/rewards-booster/interfaces/IValidator.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.10;\\n\\n/**\\n * @title Asymetrix Protocol V2 IValidator\\n * @author Asymetrix Protocol Inc Team\\n * @notice An interface that all validators should implement.\\n */\\ninterface IValidator {\\n    /**\\n     * @notice Validates if stake parameters are valid.\\n     * @param _pid Staking pool ID.\\n     * @param _amountOrId Amount of ERC-20 LP tokens or ID of ERC-721 NFT token to validate.\\n     */\\n    function validateStake(uint8 _pid, uint256 _amountOrId) external;\\n}\\n\"\r\n    },\r\n    \"contracts/rewards-booster/libraries/RewardsBoosterErrors.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.10;\\n\\n/**\\n * @title Asymetrix Protocol V2 RewardsBoosterErrors library\\n * @author Asymetrix Protocol Inc Team\\n * @notice A library with errors for rewards booster contracts.\\n */\\nlibrary RewardsBoosterErrors {\\n    error WrongLockDurtionSettingsNumber();\\n    error WrongBalancerPoolTokensNumber();\\n    error WrongLockDurtionSettings();\\n    error TooSmallBoostThreshold();\\n    error NoEmptySlotsInThisPool();\\n    error InvalidStakeArguments();\\n    error WrongValidityDuration();\\n    error TooBigBoostThreshold();\\n    error TooMuchLocksCreated();\\n    error StakeTokenWithdraw();\\n    error LockIsNotFinished();\\n    error WrongLockDurtion();\\n    error NotExistingPool();\\n    error NotExistingLock();\\n    error LengthsMismatch();\\n    error NotContract();\\n    error ZeroAddress();\\n    error ZeroAmount();\\n    error StalePrice();\\n    error WrongTick();\\n    error WrongTokensRatio();\\n    error WrongMaxTokenDominance();\\n    error StubMethod();\\n}\\n\"\r\n    },\r\n    \"contracts/rewards-booster/validators/ValidatorBalancerWeighted.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.10;\\n\\nimport { IValidator } from \\\"../interfaces/IValidator.sol\\\";\\nimport { RewardsBoosterErrors } from \\\"../libraries/RewardsBoosterErrors.sol\\\";\\n\\n/**\\n * @title Asymetrix Protocol V2 ValidatorBalancerWeighted\\n * @author Asymetrix Protocol Inc Team\\n * @notice A validator that validates staking parameters in time of staking in the Balancer V2 Weighted staking pool on\\n *         the RewardsBooster contract.\\n */\\ncontract ValidatorBalancerWeighted is IValidator {\\n    /// @inheritdoc IValidator\\n    function validateStake(uint8, uint256 _amount) external pure {\\n        if (_amount == 0) revert RewardsBoosterErrors.InvalidStakeArguments();\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 2000\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"InvalidStakeArguments\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"validateStake\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "ValidatorBalancerWeighted", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "2000", "ConstructorArguments": "", "EVMVersion": "london", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}