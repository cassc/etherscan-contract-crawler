{"SourceCode": "/*\r\n\r\n\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\r\n\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\r\n\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\r\n\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\r\n\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\r\n\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\ud83d\udfea\ud83d\udfea\ud83d\udfea\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\u2b1c\ufe0f\ud83d\udfea\u2b1c\ufe0f\r\n\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\u2b1c\ufe0f\r\n\r\n\ud83d\udd17 | TipMaster Social Links   \r\n----------------------------------------\r\n\u2708\ufe0f | Telegram https://t.me/TipMasterERC\r\n\ud83d\ude80 | Website http://www.tipmaster.tech/\r\n\ud83d\udc19 | GitBook https://tipmaster-bot.gitbook.io/introduction-to-tipmaster-1/\r\n\u2716\ufe0f | Twitter https://twitter.com/TipMasterBot\r\n\ud83e\udd16 | Utility https://t.me/Tip_Master_Bot\r\n*/\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.21;\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ninterface IERC20Metadata is IERC20 {\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n}\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    uint256 private _totalSupply;\r\n    string private _name;\r\n    string private _symbol;\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, _allowances[owner][spender] + addedValue);\r\n        return true;\r\n    }\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = _allowances[owner][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n        return true;\r\n    }\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        _beforeTokenTransfer(from, to, amount);\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n        }\r\n        _balances[to] += amount;\r\n        emit Transfer(from, to, amount);\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n        emit Transfer(account, address(0), amount);\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\ncontract TipMasterERC is ERC20 {\r\n\r\n    // mint initial supply\r\n    constructor() ERC20(\"TipMaster\", \"TIPMR\") {\r\n        _mint(msg.sender, 100_000_000 ether);\r\n    }\r\n\r\n    // anyone can burn tokens from their wallet\r\n    function burn(uint256 amount) external {\r\n        _burn(msg.sender, amount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TipMasterERC", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e828bacf6e99e7937b957926e18758ce648a10108664ca77fa5e7179daf9698c"}