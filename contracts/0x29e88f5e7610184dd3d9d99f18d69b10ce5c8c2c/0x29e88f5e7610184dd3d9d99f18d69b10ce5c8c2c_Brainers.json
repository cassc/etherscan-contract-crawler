{"SourceCode": "/// SPDX-License-Identifier: MIT\r\n//\r\n// Symbol          : BRAINERS\r\n// Name            : Brainers\r\n// Total supply    : 371,000,000\r\n// Decimals        : 18\r\n// Bainers Social  : www.brainers.network\r\n// Brainers Docs   : www.docs.brainers.network\r\n// About contract  : www.token.brainers.network\r\n\r\n\r\npragma solidity ^0.8.11;\r\n\r\n/**\r\n * @title Brainers Token\r\n * @dev Standard ERC20 implementation for the Brainers Token.\r\n */\r\ncontract Brainers {\r\n    string public constant name = \"Brainers\";\r\n    string public constant symbol = \"BRAINERS\";\r\n    uint8 public constant decimals = 18;\r\n\r\n    uint256 private _totalSupply;\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    address private immutable _socialNetworkAddress = 0x3170444AaefdBC05C11616c0212b07Dfa351185f;\r\n    address private immutable _teamAddress = 0x7e898711B28d376297Be8B12AC9c4b18Cf098824;\r\n\r\n    uint256 private _teamSupply;\r\n    uint256 private _teamUnlockTime;\r\n    uint256 private _teamReleaseAmount;\r\n    uint256 private _teamReleaseInterval;\r\n    uint256 private _teamReleaseStartTime;\r\n\r\n    uint256 private _socialReleaseInterval;\r\n    uint256 private _socialReleaseStartTime;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    modifier onlyUnlockedTeam() {\r\n        require(block.timestamp >= _teamUnlockTime, \"Team supply not unlocked yet\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == _teamAddress, \"Only the owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        _totalSupply = 371_000_000 * 10 ** uint256(decimals);\r\n        uint256 socialPercentage = 80;\r\n        uint256 teamPercentage = 3;\r\n        uint256 marketingPercentage = 5;\r\n        uint256 developmentPercentage = 2;\r\n        uint256 investorPercentage = 2;\r\n        uint256 futureDevelopmentPercentage = 8;\r\n\r\n        _teamSupply = (_totalSupply * teamPercentage) / 100;\r\n        _teamUnlockTime = block.timestamp + (12 * 30 days); // Lock team supply for 12 months\r\n        _teamReleaseAmount = (_teamSupply * 5) / 100; // 5% released every 30 days after 12 months\r\n        _teamReleaseInterval = 30 days;\r\n\r\n        _socialReleaseInterval = 30 days; // Monthly release for Brainers Social\r\n        _socialReleaseStartTime = block.timestamp;\r\n\r\n        _balances[_socialNetworkAddress] = (_totalSupply * socialPercentage) / 100;\r\n        _balances[_teamAddress] = _teamSupply;\r\n        _balances[address(this)] = (_totalSupply * (marketingPercentage + developmentPercentage + investorPercentage + futureDevelopmentPercentage)) / 100;\r\n\r\n        emit Transfer(address(0), _socialNetworkAddress, _balances[_socialNetworkAddress]);\r\n        emit Transfer(address(0), _teamAddress, _teamSupply);\r\n        emit Transfer(address(0), address(this), _balances[address(this)]);\r\n    }\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender] - subtractedValue);\r\n        return true;\r\n    }\r\n\r\n    function releaseTeamSupply() external onlyUnlockedTeam {\r\n        require(_teamReleaseStartTime + _teamReleaseInterval <= block.timestamp, \"Team supply release interval not reached yet\");\r\n\r\n        uint256 releaseAmount = _teamReleaseAmount;\r\n        if (releaseAmount > _teamSupply) {\r\n            releaseAmount = _teamSupply;\r\n        }\r\n\r\n        _balances[_teamAddress] += releaseAmount;\r\n        _teamSupply -= releaseAmount;\r\n        _teamReleaseStartTime += _teamReleaseInterval;\r\n\r\n        emit Transfer(address(this), _teamAddress, releaseAmount);\r\n    }\r\n\r\n    function releaseSocialSupply() external onlyOwner {\r\n        require(block.timestamp >= _socialReleaseStartTime + _socialReleaseInterval, \"Social supply release interval not reached yet\");\r\n\r\n        uint256 releaseAmount = (_totalSupply * 80) / 1000; // 10% of Brainers Social allocation\r\n        require(releaseAmount > 0, \"No more tokens to release\");\r\n\r\n        _balances[_socialNetworkAddress] += releaseAmount;\r\n        _totalSupply -= releaseAmount;\r\n        _socialReleaseStartTime += _socialReleaseInterval;\r\n\r\n        emit Transfer(address(this), _socialNetworkAddress, releaseAmount);\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \"Transfer from the zero address\");\r\n        require(recipient != address(0), \"Transfer to the zero address\");\r\n        require(_balances[sender] >= amount, \"Insufficient balance\");\r\n\r\n        _balances[sender] -= amount;\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) internal {\r\n        require(owner != address(0), \"Approve from the zero address\");\r\n        require(spender != address(0), \"Approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseSocialSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseTeamSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Brainers", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://6168ee0eff00098c6ee7c619d0090a36769b775c5439462d35be58594f6dd83d"}