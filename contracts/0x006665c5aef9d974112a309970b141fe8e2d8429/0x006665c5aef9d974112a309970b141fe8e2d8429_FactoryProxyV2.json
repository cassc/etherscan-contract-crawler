{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary StorageSlot {\r\n    struct AddressSlot {\r\n        address value;\r\n    }\r\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n}\r\n\r\ncontract Proxy {\r\n    //EIP1967 Impl_solt: keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1\r\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n    //EIP1967 Admin_solt: keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1\r\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\r\n\r\n    event Upgraded(address indexed impl);\r\n    event AdminChanged(address preAdmin, address newAdmin);\r\n\r\n    modifier onlyAmdin(){\r\n        require(msg.sender == admin(), \"Porxy: Caller not admin\");\r\n        _;\r\n    }\r\n\r\n    function _setAdmin(address _admin) internal {\r\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = _admin;\r\n    }\r\n\r\n    function _setLogic(address _logic) internal {\r\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = _logic;\r\n    }\r\n\r\n    function logic() public view returns (address) {\r\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n    }\r\n\r\n    function admin() public view returns (address) {\r\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\r\n    }\r\n\r\n    function changeAdmin(address newAdmin) external onlyAmdin returns(bool) {\r\n        address oldAdmin = admin();\r\n        _setAdmin(newAdmin);\r\n        emit AdminChanged(oldAdmin, newAdmin);\r\n        return true;\r\n    }\r\n\r\n    function upgrad(address newLogic) external onlyAmdin returns(bool) {\r\n        _setLogic(newLogic);\r\n        emit Upgraded(newLogic);\r\n        return true;\r\n    }\r\n\r\n\r\n    fallback () external payable {\r\n        assembly {\r\n            let impl := sload(_IMPLEMENTATION_SLOT)\r\n            calldatacopy(0, 0, calldatasize())\r\n            let result := delegatecall(gas(), impl, 0, calldatasize(), 0, 0)\r\n            returndatacopy(0, 0, returndatasize())\r\n            switch result\r\n            case 0 { revert(0, returndatasize()) }\r\n            default { return(0, returndatasize()) }\r\n        }\r\n    }\r\n\r\n    receive () external payable virtual {}\r\n}\r\n\r\n\r\ncontract FactoryProxyV2 is Proxy{\r\n    constructor(address factory){\r\n        _setLogic(factory);\r\n        _setAdmin(msg.sender);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"preAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"logic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newLogic\",\"type\":\"address\"}],\"name\":\"upgrad\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "FactoryProxyV2", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000009a850b43f205d65128aefe23fd2a886c48ab77aa", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "1", "Implementation": "0x9a850b43f205d65128aefe23fd2a886c48ab77aa", "SwarmSource": "ipfs://b53b2e6177b5afdc5b1fdc2a7b6b6590f37072fa763ee71f69a29aae7f1d22be"}