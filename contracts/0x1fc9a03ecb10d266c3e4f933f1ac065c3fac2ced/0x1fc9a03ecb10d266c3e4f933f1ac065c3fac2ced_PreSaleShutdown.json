{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/PreSaleShutdown.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./Mutex.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\ncontract PreSaleShutdown is Initializable, Mutex {\\n    uint256 constant DECIMALS = 18;\\n    uint256 constant USDT_DECIMALS = 6;\\n    uint256 constant START_PRICE = 3 * 10 ** 14; // 0.0003 USDT\\n    uint256 constant PRICE_PER_USDT = 5 * 10 ** 10; // 0.00000005\\n    uint256 constant MAX_TOTAL_SUPPLY = 6_993_000_000 * 10 ** DECIMALS;\\n\\n    address public admin;\\n    IERC20 private usdt;\\n    mapping(address => uint256) public balanceOf;\\n    uint256 public totalSupply;\\n\\n    function init(address admin_, address usdt_) external whenNotInitialized {\\n        require(admin_ != address(0), \\\"zero admin address\\\");\\n        require(usdt_ != address(0), \\\"zero usdt address\\\");\\n        admin = admin_;\\n        usdt = IERC20(usdt_);\\n    }\\n\\n    receive() external payable mutex {\\n        // Add ETH recv\\n    }\\n\\n    function emergencyWithdraw(address recipient) external {\\n        require(msg.sender == admin, \\\"only admin\\\");\\n        usdt.transfer(recipient, usdt.balanceOf(address(this)));\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/IERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\ninterface IERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account_) external view returns (uint256);\\n\\n    function transfer(address to_, uint256 amount_) external returns (bool);\\n\\n    function allowance(address owner_, address spender_)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender_, uint256 amount_) external returns (bool);\\n\\n    function transferFrom(\\n        address from_,\\n        address to_,\\n        uint256 amount_\\n    ) external;\\n}\\n\"\r\n    },\r\n    \"contracts/Mutex.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nabstract contract Mutex {\\n    bool private _lock;\\n\\n    modifier mutex() {\\n        require(!_lock, \\\"mutex lock\\\");\\n        _lock = true;\\n        _;\\n        _lock = false;\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/Initializable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nabstract contract Initializable {\\n    bool internal isInited;\\n\\n    modifier whenInitialized() {\\n        require(isInited, \\\"not initialized\\\");\\n        _;\\n    }\\n\\n    modifier whenNotInitialized() {\\n        require(!isInited, \\\"already initialized\\\");\\n        _;\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 999999\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usdt_\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PreSaleShutdown", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "999999", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}