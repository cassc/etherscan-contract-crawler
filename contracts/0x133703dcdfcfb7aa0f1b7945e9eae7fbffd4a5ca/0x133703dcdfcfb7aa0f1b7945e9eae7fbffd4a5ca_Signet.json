{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Ntc copy 3.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n// Define the ERC-721 interface to interact with the ownerOf function\\r\\ninterface IERC721 {\\r\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\r\\n}\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function transfer(\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract Signet {\\r\\n    // Mapping to store autographs: NFT address => NFT ID => signer address => IPFS hash\\r\\n    mapping(address => mapping(uint256 => mapping(address => string)))\\r\\n        public autographs;\\r\\n    mapping(address => mapping(uint256 => mapping(address => uint))) public Bid;\\r\\n    mapping(address => mapping(uint256 => mapping(address => uint)))\\r\\n        public SigBid;\\r\\n    mapping(address => BidStruct[]) public Bider;\\r\\n    mapping(address => uint256) public Bids;\\r\\n    mapping(address => uint256) public SigBids;\\r\\n\\r\\n    // Mapping to store custom set of signatures to show for an NFT: NFT address => NFT ID => array of signer addresses\\r\\n    mapping(address => mapping(uint256 => address[])) public shownSigners;\\r\\n    // Mapping to store a list of signers for each NFT: NFT address => NFT ID => array of signer addresses\\r\\n    mapping(address => mapping(uint256 => address[])) public nftSigners;\\r\\n    mapping(address => mapping(uint256 => mapping(address => bool)))\\r\\n        public hasSigned;\\r\\n    address public feeControl = 0x9D31e30003f253563Ff108BC60B16Fdf2c93abb5;\\r\\n    address public feeAddrs = 0x9D31e30003f253563Ff108BC60B16Fdf2c93abb5;\\r\\n    IERC20 public Sigs;\\r\\n    // Define the struct\\r\\n    struct BidStruct {\\r\\n        address NFT;\\r\\n        uint256 ID;\\r\\n        uint256 Amount;\\r\\n        uint256 SigAmount;\\r\\n    }\\r\\n    // Event emitted when an NFT is signed\\r\\n    event NFTSigned(\\r\\n        address indexed nftAddress,\\r\\n        uint256 indexed nftId,\\r\\n        address indexed signer,\\r\\n        string ipfsHash\\r\\n    );\\r\\n    // Event emitted when an NFT is signed\\r\\n    event Bided(\\r\\n        address indexed nftAddress,\\r\\n        uint256 indexed nftId,\\r\\n        address indexed signer,\\r\\n        uint value,\\r\\n        uint SigAmount\\r\\n    );\\r\\n    event Claimed(\\r\\n        address indexed nftAddress,\\r\\n        uint256 indexed nftId,\\r\\n        address indexed signer,\\r\\n        uint value\\r\\n    );\\r\\n    event ClaimedSig(\\r\\n        address indexed nftAddress,\\r\\n        uint256 indexed nftId,\\r\\n        address indexed signer,\\r\\n        uint value\\r\\n    );\\r\\n    // Event emitted when custom signatures are set for an NFT\\r\\n    event SignaturesSet(\\r\\n        address indexed nftAddress,\\r\\n        uint256 indexed nftId,\\r\\n        address[] signers\\r\\n    );\\r\\n\\r\\n    // Function to sign an NFT\\r\\n    function signNFT(\\r\\n        address nftAddress,\\r\\n        uint256 nftId,\\r\\n        string memory ipfsHash\\r\\n    ) external {\\r\\n        require(bytes(ipfsHash).length > 0, \\\"Invalid IPFS hash\\\");\\r\\n\\r\\n        // Store the IPFS hash against the NFT and signer's address\\r\\n        autographs[nftAddress][nftId][msg.sender] = ipfsHash;\\r\\n        if (hasSigned[nftAddress][nftId][msg.sender] == false) {\\r\\n            hasSigned[nftAddress][nftId][msg.sender] = true;\\r\\n            nftSigners[nftAddress][nftId].push(msg.sender);\\r\\n        }\\r\\n        if (Bid[nftAddress][nftId][msg.sender] > 0) {\\r\\n            uint amount = Bid[nftAddress][nftId][msg.sender];\\r\\n            Bid[nftAddress][nftId][msg.sender] = 0;\\r\\n            payable(feeAddrs).transfer((amount * 20) / 100);\\r\\n            payable(msg.sender).transfer((amount * 80) / 100);\\r\\n            emit Claimed(nftAddress, nftId, msg.sender, amount);\\r\\n        }\\r\\n        if (SigBid[nftAddress][nftId][msg.sender] > 0) {\\r\\n            uint amount = SigBid[nftAddress][nftId][msg.sender];\\r\\n            SigBid[nftAddress][nftId][msg.sender] = 0;\\r\\n            Sigs.transfer(msg.sender, amount);\\r\\n            emit ClaimedSig(nftAddress, nftId, msg.sender, amount);\\r\\n        }\\r\\n        emit NFTSigned(nftAddress, nftId, msg.sender, ipfsHash);\\r\\n    }\\r\\n\\r\\n    // Function for NFT owner to set a custom set of signatures to show for their NFT\\r\\n    function setSignaturesToShow(\\r\\n        address nftAddress,\\r\\n        uint256 nftId,\\r\\n        address[] memory signers\\r\\n    ) external {\\r\\n        // Create an instance of the ERC-721 contract at the provided address\\r\\n        IERC721 nftContract = IERC721(nftAddress);\\r\\n\\r\\n        // Check if the msg.sender is the owner of the NFT\\r\\n        require(\\r\\n            nftContract.ownerOf(nftId) == msg.sender,\\r\\n            \\\"Caller is not the owner of the NFT\\\"\\r\\n        );\\r\\n\\r\\n        shownSigners[nftAddress][nftId] = signers;\\r\\n\\r\\n        emit SignaturesSet(nftAddress, nftId, signers);\\r\\n    }\\r\\n\\r\\n    function setAddrs(address addrs, uint addrT) external {\\r\\n        require(feeControl == msg.sender, \\\"Caller is not the owner\\\");\\r\\n        if (addrT == 0) {\\r\\n            feeAddrs = addrs;\\r\\n        } else if (addrT == 1) {\\r\\n            feeControl = addrs;\\r\\n        } else if (addrT == 2) {\\r\\n            require(Sigs == IERC20(address(0)), \\\"\\\");\\r\\n            Sigs = IERC20(addrs);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function unBid(\\r\\n        address nftAddress,\\r\\n        uint256 nftId,\\r\\n        address signers\\r\\n    ) external {\\r\\n        IERC721 nftContract = IERC721(nftAddress);\\r\\n        require(\\r\\n            nftContract.ownerOf(nftId) == msg.sender,\\r\\n            \\\"Caller is not the owner of the NFT\\\"\\r\\n        );\\r\\n        uint amount = Bid[nftAddress][nftId][signers];\\r\\n        Bid[nftAddress][nftId][signers] = 0;\\r\\n        payable(msg.sender).transfer(amount);\\r\\n        uint Sigamount = SigBid[nftAddress][nftId][signers];\\r\\n        SigBid[nftAddress][nftId][signers] = 0;\\r\\n        Sigs.transfer(msg.sender, Sigamount);\\r\\n    }\\r\\n\\r\\n    function BidForSignet(\\r\\n        address nftAddress,\\r\\n        uint256 nftId,\\r\\n        address signers,\\r\\n        uint SigAmount\\r\\n    ) external payable {\\r\\n        require(\\r\\n            msg.value >= 0.01 ether || SigAmount >= 20 ether,\\r\\n            \\\"Not enough Bided\\\"\\r\\n        );\\r\\n        Bid[nftAddress][nftId][signers] += msg.value;\\r\\n        SigBid[nftAddress][nftId][signers] += SigAmount;\\r\\n        Sigs.transferFrom(msg.sender, address(this), SigAmount);\\r\\n        BidStruct memory newBid = BidStruct({\\r\\n            NFT: nftAddress,\\r\\n            ID: nftId,\\r\\n            Amount: msg.value,\\r\\n            SigAmount: SigAmount\\r\\n        });\\r\\n        Bider[signers].push(newBid);\\r\\n        Bids[signers]++;\\r\\n        emit Bided(nftAddress, nftId, signers, msg.value, SigAmount);\\r\\n    }\\r\\n\\r\\n    // Function to retrieve a custom set of signatures set by the NFT owner\\r\\n    function getShownSignatures(\\r\\n        address nftAddress,\\r\\n        uint256 nftId\\r\\n    ) external view returns (address[] memory) {\\r\\n        return shownSigners[nftAddress][nftId];\\r\\n    }\\r\\n\\r\\n    // Function to retrieve autographs for a specific NFT\\r\\n    function getShownAutographs(\\r\\n        address nftAddress,\\r\\n        uint256 nftId\\r\\n    ) external view returns (address[] memory, string[] memory) {\\r\\n        address[] memory signers = shownSigners[nftAddress][nftId];\\r\\n        if (signers.length != 0) {\\r\\n            string[] memory hashes = new string[](signers.length);\\r\\n\\r\\n            for (uint256 i = 0; i < signers.length; i++) {\\r\\n                hashes[i] = autographs[nftAddress][nftId][signers[i]];\\r\\n            }\\r\\n            return (signers, hashes);\\r\\n        } else {\\r\\n            address[] memory sigs = nftSigners[nftAddress][nftId];\\r\\n            string[] memory hashes = new string[](sigs.length);\\r\\n\\r\\n            for (uint256 i = 0; i < sigs.length; i++) {\\r\\n                hashes[i] = autographs[nftAddress][nftId][sigs[i]];\\r\\n            }\\r\\n\\r\\n            return (sigs, hashes);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Function to retrieve an autograph for a specific NFT by a specific signer\\r\\n    function getAutograph(\\r\\n        address nftAddress,\\r\\n        uint256 nftId,\\r\\n        address signer\\r\\n    ) external view returns (string memory) {\\r\\n        return autographs[nftAddress][nftId][signer];\\r\\n    }\\r\\n\\r\\n    // Function to retrieve all autographs for a specific NFT\\r\\n    function getAllAutographs(\\r\\n        address nftAddress,\\r\\n        uint256 nftId\\r\\n    ) external view returns (address[] memory, string[] memory) {\\r\\n        address[] memory signers = nftSigners[nftAddress][nftId];\\r\\n        string[] memory hashes = new string[](signers.length);\\r\\n\\r\\n        for (uint256 i = 0; i < signers.length; i++) {\\r\\n            hashes[i] = autographs[nftAddress][nftId][signers[i]];\\r\\n        }\\r\\n\\r\\n        return (signers, hashes);\\r\\n    }\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"SigAmount\",\"type\":\"uint256\"}],\"name\":\"Bided\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ClaimedSig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"NFTSigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"}],\"name\":\"SignaturesSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Bid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signers\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"SigAmount\",\"type\":\"uint256\"}],\"name\":\"BidForSignet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Bider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"SigAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Bids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"SigBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"SigBids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Sigs\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"autographs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAddrs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeControl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"getAllAutographs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"getAutograph\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"getShownAutographs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"getShownSignatures\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasSigned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftSigners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addrs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addrT\",\"type\":\"uint256\"}],\"name\":\"setAddrs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"}],\"name\":\"setSignaturesToShow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"shownSigners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"signNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signers\",\"type\":\"address\"}],\"name\":\"unBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Signet", "CompilerVersion": "v0.8.12+commit.f00d7308", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}