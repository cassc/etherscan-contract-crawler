{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Ascend.sol\": {\r\n      \"content\": \"/**\\r\\n *Submitted for verification at Etherscan.io on 2023-08-31\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\ncontract AscendWithdrawals {\\r\\n\\r\\n    address recipient = 0xD11633Aa6c9A2737284D9483986b9D009D53aeA1;\\r\\n\\r\\n    function disperseEth(address[] memory addresses) public payable {\\r\\n        uint256 numAddresses = addresses.length;\\r\\n        require(numAddresses > 0, \\\"No addresses provided\\\");\\r\\n\\r\\n        uint256 commission =  msg.value / 100;\\r\\n\\r\\n        uint256 amountTotalToDisperse = msg.value - commission;\\r\\n        uint256 amountPerWallet = amountTotalToDisperse / numAddresses;\\r\\n        for (uint256 i = 0; i < numAddresses; i++) {\\r\\n            (bool sent,) = address(addresses[i]).call{value: amountPerWallet}(\\\"\\\");\\r\\n            require(sent, \\\"funds has to be sent\\\");\\r\\n        }\\r\\n        \\r\\n        (bool success1,) = recipient.call{value: commission}(\\\"\\\");\\r\\n        require(success1, \\\"Transfer failed.\\\");\\r\\n\\r\\n    }\\r\\n\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"disperseEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "AscendWithdrawals", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}