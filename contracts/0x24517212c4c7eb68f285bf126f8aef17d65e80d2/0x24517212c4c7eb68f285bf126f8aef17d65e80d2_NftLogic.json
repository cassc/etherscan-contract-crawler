{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/libraries/helpers/Errors.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.8.4;\\n\\n/**\\n * @title Errors library\\n * @author BendDao; Forked and edited by Unlockd\\n * @notice Defines the error messages emitted by the different contracts of the Unlockd protocol\\n */\\nlibrary Errors {\\n  enum ReturnCode {\\n    SUCCESS,\\n    FAILED\\n  }\\n\\n  string public constant SUCCESS = \\\"0\\\";\\n\\n  //common errors\\n  string public constant CALLER_NOT_POOL_ADMIN = \\\"100\\\"; // 'The caller must be the pool admin'\\n  string public constant CALLER_NOT_ADDRESS_PROVIDER = \\\"101\\\";\\n  string public constant INVALID_FROM_BALANCE_AFTER_TRANSFER = \\\"102\\\";\\n  string public constant INVALID_TO_BALANCE_AFTER_TRANSFER = \\\"103\\\";\\n  string public constant CALLER_NOT_ONBEHALFOF_OR_IN_WHITELIST = \\\"104\\\";\\n  string public constant CALLER_NOT_POOL_LIQUIDATOR = \\\"105\\\";\\n  string public constant INVALID_ZERO_ADDRESS = \\\"106\\\";\\n  string public constant CALLER_NOT_LTV_MANAGER = \\\"107\\\";\\n  string public constant CALLER_NOT_PRICE_MANAGER = \\\"108\\\";\\n  string public constant CALLER_NOT_UTOKEN_MANAGER = \\\"109\\\";\\n\\n  //math library errors\\n  string public constant MATH_MULTIPLICATION_OVERFLOW = \\\"200\\\";\\n  string public constant MATH_ADDITION_OVERFLOW = \\\"201\\\";\\n  string public constant MATH_DIVISION_BY_ZERO = \\\"202\\\";\\n\\n  //validation & check errors\\n  string public constant VL_INVALID_AMOUNT = \\\"301\\\"; // 'Amount must be greater than 0'\\n  string public constant VL_NO_ACTIVE_RESERVE = \\\"302\\\"; // 'Action requires an active reserve'\\n  string public constant VL_RESERVE_FROZEN = \\\"303\\\"; // 'Action cannot be performed because the reserve is frozen'\\n  string public constant VL_NOT_ENOUGH_AVAILABLE_USER_BALANCE = \\\"304\\\"; // 'User cannot withdraw more than the available balance'\\n  string public constant VL_BORROWING_NOT_ENABLED = \\\"305\\\"; // 'Borrowing is not enabled'\\n  string public constant VL_COLLATERAL_BALANCE_IS_0 = \\\"306\\\"; // 'The collateral balance is 0'\\n  string public constant VL_HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD = \\\"307\\\"; // 'Health factor is lesser than the liquidation threshold'\\n  string public constant VL_COLLATERAL_CANNOT_COVER_NEW_BORROW = \\\"308\\\"; // 'There is not enough collateral to cover a new borrow'\\n  string public constant VL_NO_DEBT_OF_SELECTED_TYPE = \\\"309\\\"; // 'for repayment of stable debt, the user needs to have stable debt, otherwise, he needs to have variable debt'\\n  string public constant VL_NO_ACTIVE_NFT = \\\"310\\\";\\n  string public constant VL_NFT_FROZEN = \\\"311\\\";\\n  string public constant VL_SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER = \\\"312\\\"; // 'User did not borrow the specified currency'\\n  string public constant VL_INVALID_HEALTH_FACTOR = \\\"313\\\";\\n  string public constant VL_INVALID_ONBEHALFOF_ADDRESS = \\\"314\\\";\\n  string public constant VL_INVALID_TARGET_ADDRESS = \\\"315\\\";\\n  string public constant VL_INVALID_RESERVE_ADDRESS = \\\"316\\\";\\n  string public constant VL_SPECIFIED_LOAN_NOT_BORROWED_BY_USER = \\\"317\\\";\\n  string public constant VL_SPECIFIED_RESERVE_NOT_BORROWED_BY_USER = \\\"318\\\";\\n  string public constant VL_HEALTH_FACTOR_HIGHER_THAN_LIQUIDATION_THRESHOLD = \\\"319\\\";\\n  string public constant VL_TIMEFRAME_EXCEEDED = \\\"320\\\";\\n  string public constant VL_VALUE_EXCEED_TREASURY_BALANCE = \\\"321\\\";\\n\\n  //lend pool errors\\n  string public constant LP_CALLER_NOT_LEND_POOL_CONFIGURATOR = \\\"400\\\"; // 'The caller of the function is not the lending pool configurator'\\n  string public constant LP_IS_PAUSED = \\\"401\\\"; // 'Pool is paused'\\n  string public constant LP_NO_MORE_RESERVES_ALLOWED = \\\"402\\\";\\n  string public constant LP_NOT_CONTRACT = \\\"403\\\";\\n  string public constant LP_BORROW_NOT_EXCEED_LIQUIDATION_THRESHOLD = \\\"404\\\";\\n  string public constant LP_BORROW_IS_EXCEED_LIQUIDATION_PRICE = \\\"405\\\";\\n  string public constant LP_NO_MORE_NFTS_ALLOWED = \\\"406\\\";\\n  string public constant LP_INVALID_USER_NFT_AMOUNT = \\\"407\\\";\\n  string public constant LP_INCONSISTENT_PARAMS = \\\"408\\\";\\n  string public constant LP_NFT_IS_NOT_USED_AS_COLLATERAL = \\\"409\\\";\\n  string public constant LP_CALLER_MUST_BE_AN_UTOKEN = \\\"410\\\";\\n  string public constant LP_INVALID_NFT_AMOUNT = \\\"411\\\";\\n  string public constant LP_NFT_HAS_USED_AS_COLLATERAL = \\\"412\\\";\\n  string public constant LP_DELEGATE_CALL_FAILED = \\\"413\\\";\\n  string public constant LP_AMOUNT_LESS_THAN_EXTRA_DEBT = \\\"414\\\";\\n  string public constant LP_AMOUNT_LESS_THAN_REDEEM_THRESHOLD = \\\"415\\\";\\n  string public constant LP_AMOUNT_GREATER_THAN_MAX_REPAY = \\\"416\\\";\\n  string public constant LP_NFT_TOKEN_ID_EXCEED_MAX_LIMIT = \\\"417\\\";\\n  string public constant LP_NFT_SUPPLY_NUM_EXCEED_MAX_LIMIT = \\\"418\\\";\\n  string public constant LP_CALLER_NOT_LEND_POOL_LIQUIDATOR_NOR_GATEWAY = \\\"419\\\";\\n  string public constant LP_CONSECUTIVE_BIDS_NOT_ALLOWED = \\\"420\\\";\\n  string public constant LP_INVALID_OVERFLOW_VALUE = \\\"421\\\";\\n  string public constant LP_CALLER_NOT_NFT_HOLDER = \\\"422\\\";\\n  string public constant LP_NFT_NOT_ALLOWED_TO_SELL = \\\"423\\\";\\n  string public constant LP_RESERVES_WITHOUT_ENOUGH_LIQUIDITY = \\\"424\\\";\\n  string public constant LP_COLLECTION_NOT_SUPPORTED = \\\"425\\\";\\n  string public constant LP_MSG_VALUE_DIFFERENT_FROM_CONFIG_FEE = \\\"426\\\";\\n  string public constant LP_INVALID_SAFE_HEALTH_FACTOR = \\\"427\\\";\\n  string public constant LP_AMOUNT_LESS_THAN_DEBT = \\\"428\\\";\\n  string public constant LP_AMOUNT_DIFFERENT_FROM_REQUIRED_BUYOUT_PRICE = \\\"429\\\";\\n  string public constant LP_CALLER_NOT_DEBT_TOKEN_MANAGER = \\\"430\\\";\\n  string public constant LP_CALLER_NOT_RESERVOIR_OR_DEBT_MARKET = \\\"431\\\";\\n  string public constant LP_AMOUNT_LESS_THAN_BUYOUT_PRICE = \\\"432\\\";\\n\\n  //lend pool loan errors\\n  string public constant LPL_CLAIM_HASNT_STARTED_YET = \\\"479\\\";\\n  string public constant LPL_INVALID_LOAN_STATE = \\\"480\\\";\\n  string public constant LPL_INVALID_LOAN_AMOUNT = \\\"481\\\";\\n  string public constant LPL_INVALID_TAKEN_AMOUNT = \\\"482\\\";\\n  string public constant LPL_AMOUNT_OVERFLOW = \\\"483\\\";\\n  string public constant LPL_BID_PRICE_LESS_THAN_DEBT_PRICE = \\\"484\\\";\\n  string public constant LPL_BID_PRICE_LESS_THAN_HIGHEST_PRICE = \\\"485\\\";\\n  string public constant LPL_BID_REDEEM_DURATION_HAS_END = \\\"486\\\";\\n  string public constant LPL_BID_USER_NOT_SAME = \\\"487\\\";\\n  string public constant LPL_BID_REPAY_AMOUNT_NOT_ENOUGH = \\\"488\\\";\\n  string public constant LPL_BID_AUCTION_DURATION_HAS_END = \\\"489\\\";\\n  string public constant LPL_BID_AUCTION_DURATION_NOT_END = \\\"490\\\";\\n  string public constant LPL_BID_PRICE_LESS_THAN_BORROW = \\\"491\\\";\\n  string public constant LPL_INVALID_BIDDER_ADDRESS = \\\"492\\\";\\n  string public constant LPL_AMOUNT_LESS_THAN_BID_FINE = \\\"493\\\";\\n  string public constant LPL_INVALID_BID_FINE = \\\"494\\\";\\n  string public constant LPL_BID_PRICE_LESS_THAN_MIN_BID_REQUIRED = \\\"495\\\";\\n  string public constant LPL_BID_NOT_BUYOUT_PRICE = \\\"496\\\";\\n  string public constant LPL_BUYOUT_DURATION_HAS_END = \\\"497\\\";\\n  string public constant LPL_BUYOUT_PRICE_LESS_THAN_BORROW = \\\"498\\\";\\n  string public constant LPL_CALLER_MUST_BE_MARKET_ADAPTER = \\\"499\\\";\\n\\n  //common token errors\\n  string public constant CT_CALLER_MUST_BE_LEND_POOL = \\\"500\\\"; // 'The caller of this function must be a lending pool'\\n  string public constant CT_INVALID_MINT_AMOUNT = \\\"501\\\"; //invalid amount to mint\\n  string public constant CT_INVALID_BURN_AMOUNT = \\\"502\\\"; //invalid amount to burn\\n  string public constant CT_BORROW_ALLOWANCE_NOT_ENOUGH = \\\"503\\\";\\n  string public constant CT_CALLER_MUST_BE_DEBT_MARKET = \\\"504\\\"; // 'The caller of this function must be a debt market'\\n\\n  //reserve logic errors\\n  string public constant RL_RESERVE_ALREADY_INITIALIZED = \\\"601\\\"; // 'Reserve has already been initialized'\\n  string public constant RL_LIQUIDITY_INDEX_OVERFLOW = \\\"602\\\"; //  Liquidity index overflows uint128\\n  string public constant RL_VARIABLE_BORROW_INDEX_OVERFLOW = \\\"603\\\"; //  Variable borrow index overflows uint128\\n  string public constant RL_LIQUIDITY_RATE_OVERFLOW = \\\"604\\\"; //  Liquidity rate overflows uint128\\n  string public constant RL_VARIABLE_BORROW_RATE_OVERFLOW = \\\"605\\\"; //  Variable borrow rate overflows uint128\\n\\n  //configure errors\\n  string public constant LPC_RESERVE_LIQUIDITY_NOT_0 = \\\"700\\\"; // 'The liquidity of the reserve needs to be 0'\\n  string public constant LPC_INVALID_CONFIGURATION = \\\"701\\\"; // 'Invalid risk parameters for the reserve'\\n  string public constant LPC_CALLER_NOT_EMERGENCY_ADMIN = \\\"702\\\"; // 'The caller must be the emergency admin'\\n  string public constant LPC_INVALID_UNFT_ADDRESS = \\\"703\\\";\\n  string public constant LPC_INVALIED_LOAN_ADDRESS = \\\"704\\\";\\n  string public constant LPC_NFT_LIQUIDITY_NOT_0 = \\\"705\\\";\\n  string public constant LPC_PARAMS_MISMATCH = \\\"706\\\"; // NFT assets & token ids mismatch\\n  string public constant LPC_FEE_PERCENTAGE_TOO_HIGH = \\\"707\\\";\\n  string public constant LPC_INVALID_LTVMANAGER_ADDRESS = \\\"708\\\";\\n  string public constant LPC_INCONSISTENT_PARAMS = \\\"709\\\";\\n  string public constant LPC_INVALID_SAFE_HEALTH_FACTOR = \\\"710\\\";\\n  //reserve config errors\\n  string public constant RC_INVALID_LTV = \\\"730\\\";\\n  string public constant RC_INVALID_LIQ_THRESHOLD = \\\"731\\\";\\n  string public constant RC_INVALID_LIQ_BONUS = \\\"732\\\";\\n  string public constant RC_INVALID_DECIMALS = \\\"733\\\";\\n  string public constant RC_INVALID_RESERVE_FACTOR = \\\"734\\\";\\n  string public constant RC_INVALID_REDEEM_DURATION = \\\"735\\\";\\n  string public constant RC_INVALID_AUCTION_DURATION = \\\"736\\\";\\n  string public constant RC_INVALID_REDEEM_FINE = \\\"737\\\";\\n  string public constant RC_INVALID_REDEEM_THRESHOLD = \\\"738\\\";\\n  string public constant RC_INVALID_MIN_BID_FINE = \\\"739\\\";\\n  string public constant RC_INVALID_MAX_BID_FINE = \\\"740\\\";\\n  string public constant RC_INVALID_MAX_CONFIG_TIMESTAMP = \\\"741\\\";\\n\\n  //address provider erros\\n  string public constant LPAPR_PROVIDER_NOT_REGISTERED = \\\"760\\\"; // 'Provider is not registered'\\n  string public constant LPAPR_INVALID_ADDRESSES_PROVIDER_ID = \\\"761\\\";\\n\\n  //NFTOracleErrors\\n  string public constant NFTO_INVALID_PRICEM_ADDRESS = \\\"900\\\";\\n\\n  //Debt Market\\n  string public constant DM_CALLER_NOT_THE_OWNER = \\\"1000\\\";\\n  string public constant DM_DEBT_SHOULD_EXIST = \\\"1001\\\";\\n  string public constant DM_INVALID_AMOUNT = \\\"1002\\\";\\n  string public constant DM_FAIL_ON_SEND_ETH = \\\"1003\\\";\\n  string public constant DM_DEBT_SHOULD_NOT_BE_SOLD = \\\"1004\\\";\\n  string public constant DM_DEBT_ALREADY_EXIST = \\\"1005\\\";\\n  string public constant DM_LOAN_SHOULD_EXIST = \\\"1006\\\";\\n  string public constant DM_AUCTION_ALREADY_ENDED = \\\"1007\\\";\\n  string public constant DM_BID_PRICE_HIGHER_THAN_SELL_PRICE = \\\"1008\\\";\\n  string public constant DM_BID_PRICE_LESS_THAN_PREVIOUS_BID = \\\"1009\\\";\\n  string public constant DM_INVALID_SELL_TYPE = \\\"1010\\\";\\n  string public constant DM_AUCTION_NOT_ALREADY_ENDED = \\\"1011\\\";\\n  string public constant DM_INVALID_CLAIM_RECEIVER = \\\"1012\\\";\\n  string public constant DM_AMOUNT_DIFFERENT_FROM_SELL_PRICE = \\\"1013\\\";\\n  string public constant DM_BID_PRICE_LESS_THAN_MIN_BID_PRICE = \\\"1014\\\";\\n  string public constant DM_BORROWED_AMOUNT_DIVERGED = \\\"1015\\\";\\n  string public constant DM_INVALID_AUTHORIZED_ADDRESS = \\\"1016\\\";\\n  string public constant DM_CALLER_NOT_THE_OWNER_OR_AUTHORIZED = \\\"1017\\\";\\n  string public constant DM_INVALID_DELTA_BID_PERCENT = \\\"1018\\\";\\n  string public constant DM_IS_PAUSED = \\\"1019\\\";\\n}\\n\"\r\n    },\r\n    \"contracts/libraries/logic/NftLogic.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.8.4;\\n\\nimport {Errors} from \\\"../helpers/Errors.sol\\\";\\nimport {DataTypes} from \\\"../types/DataTypes.sol\\\";\\n\\n/**\\n * @title NftLogic library\\n * @author BendDao; Forked and edited by Unlockd\\n * @notice Implements the logic to update the nft state\\n */\\nlibrary NftLogic {\\n  /**\\n   * @dev Initializes a nft\\n   * @param nft The nft object\\n   * @param uNftAddress The address of the uNFT contract\\n   **/\\n  function init(DataTypes.NftData storage nft, address uNftAddress) external {\\n    require(nft.uNftAddress == address(0), Errors.RL_RESERVE_ALREADY_INITIALIZED);\\n\\n    nft.uNftAddress = uNftAddress;\\n  }\\n}\\n\"\r\n    },\r\n    \"contracts/libraries/types/DataTypes.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.8.4;\\n\\nlibrary DataTypes {\\n  struct ReserveData {\\n    //stores the reserve configuration\\n    ReserveConfigurationMap configuration;\\n    //the liquidity index. Expressed in ray\\n    uint128 liquidityIndex;\\n    //variable borrow index. Expressed in ray\\n    uint128 variableBorrowIndex;\\n    //the current supply rate. Expressed in ray\\n    uint128 currentLiquidityRate;\\n    //the current variable borrow rate. Expressed in ray\\n    uint128 currentVariableBorrowRate;\\n    uint40 lastUpdateTimestamp;\\n    //tokens addresses\\n    address uTokenAddress;\\n    address debtTokenAddress;\\n    //address of the interest rate strategy\\n    address interestRateAddress;\\n    //the id of the reserve. Represents the position in the list of the active reserves\\n    uint8 id;\\n  }\\n\\n  struct NftData {\\n    //stores the nft configuration\\n    NftConfigurationMap configuration;\\n    //address of the uNFT contract\\n    address uNftAddress;\\n    //the id of the nft. Represents the position in the list of the active nfts\\n    uint8 id;\\n    uint256 maxSupply;\\n    uint256 maxTokenId;\\n  }\\n\\n  struct ReserveConfigurationMap {\\n    //bit 0-15: LTV\\n    //bit 16-31: Liq. threshold\\n    //bit 32-47: Liq. bonus\\n    //bit 48-55: Decimals\\n    //bit 56: Reserve is active\\n    //bit 57: reserve is frozen\\n    //bit 58: borrowing is enabled\\n    //bit 59: stable rate borrowing enabled\\n    //bit 60-63: reserved\\n    //bit 64-79: reserve factor\\n    uint256 data;\\n  }\\n\\n  struct NftConfigurationMap {\\n    //bit 0-15: LTV\\n    //bit 16-31: Liq. threshold\\n    //bit 32-47: Liq. bonus\\n    //bit 56: NFT is active\\n    //bit 57: NFT is frozen\\n    //bit 64-71: Redeem duration\\n    //bit 72-79: Auction duration\\n    //bit 80-95: Redeem fine\\n    //bit 96-111: Redeem threshold\\n    //bit 112-127: Min bid fine\\n    //bit 128-159: Timestamp Config\\n    uint256 data;\\n  }\\n\\n  /**\\n   * @dev Enum describing the current state of a loan\\n   * State change flow:\\n   *  Created -> Active -> Repaid\\n   *                    -> Auction -> Defaulted\\n   */\\n  enum LoanState {\\n    // We need a default that is not 'Created' - this is the zero value\\n    None,\\n    // The loan data is stored, but not initiated yet.\\n    Created,\\n    // The loan has been initialized, funds have been delivered to the borrower and the collateral is held.\\n    Active,\\n    // The loan is in auction, higest price liquidator will got chance to claim it.\\n    Auction,\\n    // The loan has been repaid, and the collateral has been returned to the borrower. This is a terminal state.\\n    Repaid,\\n    // The loan was delinquent and collateral claimed by the liquidator. This is a terminal state.\\n    Defaulted\\n  }\\n\\n  struct LoanData {\\n    //the id of the nft loan\\n    uint256 loanId;\\n    //the current state of the loan\\n    LoanState state;\\n    //address of borrower\\n    address borrower;\\n    //address of nft asset token\\n    address nftAsset;\\n    //the id of nft token\\n    uint256 nftTokenId;\\n    //address of reserve asset token\\n    address reserveAsset;\\n    //scaled borrow amount. Expressed in ray\\n    uint256 scaledAmount;\\n    //start time of first bid time\\n    uint256 bidStartTimestamp;\\n    //bidder address of higest bid\\n    address bidderAddress;\\n    //price of higest bid\\n    uint256 bidPrice;\\n    //borrow amount of loan\\n    uint256 bidBorrowAmount;\\n    //bidder address of first bid\\n    address firstBidderAddress;\\n  }\\n\\n  struct ExecuteDepositParams {\\n    address initiator;\\n    address asset;\\n    uint256 amount;\\n    address onBehalfOf;\\n    uint16 referralCode;\\n  }\\n\\n  struct ExecuteWithdrawParams {\\n    address initiator;\\n    address asset;\\n    uint256 amount;\\n    address to;\\n  }\\n\\n  struct ExecuteBorrowParams {\\n    address initiator;\\n    address asset;\\n    uint256 amount;\\n    address nftAsset;\\n    uint256 nftTokenId;\\n    address onBehalfOf;\\n    uint16 referralCode;\\n  }\\n\\n  struct ExecuteRepayParams {\\n    address initiator;\\n    address nftAsset;\\n    uint256 nftTokenId;\\n    uint256 amount;\\n  }\\n\\n  struct ExecuteAuctionParams {\\n    address initiator;\\n    address nftAsset;\\n    uint256 nftTokenId;\\n    uint256 bidPrice;\\n    address onBehalfOf;\\n    uint256 auctionDurationConfigFee;\\n    uint256 bidDelta;\\n  }\\n\\n  struct ExecuteRedeemParams {\\n    address initiator;\\n    address nftAsset;\\n    uint256 nftTokenId;\\n    uint256 amount;\\n    uint256 bidFine;\\n    uint256 safeHealthFactor;\\n  }\\n\\n  struct ExecuteLiquidateParams {\\n    address initiator;\\n    address nftAsset;\\n    uint256 nftTokenId;\\n    uint256 amount;\\n  }\\n\\n  struct ExecuteBuyoutParams {\\n    address initiator;\\n    address nftAsset;\\n    uint256 nftTokenId;\\n    address onBehalfOf;\\n  }\\n\\n  struct ExecuteLiquidateMarketsParams {\\n    address nftAsset;\\n    uint256 nftTokenId;\\n    uint256 liquidateFeePercentage;\\n    uint256 amountOutMin;\\n  }\\n\\n  struct ExecuteLendPoolStates {\\n    uint256 pauseStartTime;\\n    uint256 pauseDurationTime;\\n  }\\n\\n  struct ExecuteYearnParams {\\n    address underlyingAsset;\\n    uint256 amount;\\n  }\\n\\n  enum DebtMarketType {\\n    FixedPrice, //0\\n    Auction, //1\\n    Mixed //2\\n  }\\n\\n  enum DebtMarketState {\\n    //No bids\\n    New,\\n    //Exist bids\\n    Active,\\n    //Is sold\\n    Sold,\\n    Canceled\\n  }\\n\\n  struct DebtMarketListing {\\n    uint256 debtId;\\n    address debtor;\\n    address nftAsset;\\n    uint256 tokenId;\\n    DebtMarketType sellType;\\n    DebtMarketState state;\\n    uint256 sellPrice;\\n    address reserveAsset;\\n    uint256 scaledAmount;\\n    address bidderAddress;\\n    uint256 bidPrice;\\n    uint256 auctionEndTimestamp;\\n    uint256 startBiddingPrice;\\n  }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[]", "ContractName": "NftLogic", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "istanbul", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}