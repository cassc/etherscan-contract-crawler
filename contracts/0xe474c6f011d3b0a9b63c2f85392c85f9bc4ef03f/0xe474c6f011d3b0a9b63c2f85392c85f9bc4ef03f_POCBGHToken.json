{"SourceCode": "pragma solidity >=0.4.22 <0.7.0;\r\n\r\ncontract POCBGHToken{\r\n\r\n\r\n    // -------------------------SafeMath Start-----------------------------------------------\r\n    //\r\n    function safeAdd(uint a, uint b) private pure returns (uint c) { c = a + b; require(c >= a); }\r\n    function safeSub(uint a, uint b) private pure returns (uint c) { require(b <= a); c = a - b; }\r\n    function safeMul(uint a, uint b) private pure returns (uint c) { c = a * b; require(a == 0 || c / a == b);}\r\n    function safeDiv(uint a, uint b) private pure returns (uint c) { require(b > 0); c = a / b; }\r\n    //\r\n    // -------------------------SafeMath End-------------------------------------------------\r\n\r\n    // -------------------------Owned Start-----------------------------------------------\r\n    //\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    // constructor() public {\r\n    //     owner = msg.sender;\r\n    // }\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n    modifier onlyOwner { require(msg.sender == owner); _; }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n    //\r\n    // -------------------------Owned End-------------------------------------------------\r\n\r\n    // -------------------------ERC20Interface Start-----------------------------------------------\r\n    //\r\n    string public symbol = \"POCBGH\";\r\n    string public name = \"POC Big Gold Hammer\";\r\n    uint8 public decimals = 18;\r\n    uint public totalSupply = 21e24;//\u603b\u91cf2100\u4e07\r\n    bool public allowTransfer = true;//\u662f\u5426\u5141\u8bb8\u4ea4\u6613\r\n\r\n    mapping(address => uint) private balances;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n\r\n    address private retentionAddress = 0xB4c5baF0450Af948DEBbe8aA8A20B9A05a3475c0;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n\r\n        balances[owner] = 7e24;\r\n        balances[retentionAddress] = 14e24;\r\n        emit Transfer(address(0), owner, balances[owner]);\r\n        emit Transfer(address(0), retentionAddress, balances[retentionAddress]);\r\n    }\r\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n        balance = balances[tokenOwner];\r\n    }\r\n    function allowance(address tokenOwner, address spender) public pure returns (uint remaining) {\r\n        require(tokenOwner != spender);\r\n        //------do nothing------\r\n        remaining = 0;\r\n    }\r\n    function transfer(address to, uint tokens) public returns (bool success) {\r\n        require(allowTransfer && tokens > 0);\r\n        require(to != msg.sender);\r\n\r\n        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\r\n        balances[to] = safeAdd(balances[to], tokens);\r\n        emit Transfer(msg.sender, to, tokens);\r\n        success = true;\r\n    }\r\n    function approve(address spender, uint tokens) public pure returns (bool success) {\r\n        require(address(0) != spender);\r\n        require(tokens > 0);\r\n        //------do nothing------\r\n        success = false;\r\n    }\r\n    function transferFrom(address from, address to, uint tokens) public pure returns (bool success) {\r\n        require(from != to);\r\n        require(tokens > 0);\r\n        //------do nothing------\r\n        success = false;\r\n    }\r\n    //\r\n    // -------------------------ERC20Interface End-------------------------------------------------\r\n\r\n    // -------------------------Others-----------------------------------------------\r\n    //\r\n    function chAllowTransfer(bool _allowTransfer) public onlyOwner {\r\n        allowTransfer = _allowTransfer;\r\n    }\r\n    function sendToken(address[] memory _to, uint[] memory _tokens) public onlyOwner {\r\n        if (_to.length != _tokens.length) {\r\n            revert();\r\n        }\r\n        uint count = 0;\r\n        for (uint i = 0; i < _tokens.length; i++) {\r\n            count = safeAdd(count, _tokens[i]);\r\n        }\r\n        if (count > balances[msg.sender]) {\r\n            revert();\r\n        }\r\n        for (uint i = 0; i < _to.length; i++) {\r\n            transfer(_to[i], _tokens[i]);\r\n        }\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allowTransfer\",\"type\":\"bool\"}],\"name\":\"chAllowTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_tokens\",\"type\":\"uint256[]\"}],\"name\":\"sendToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "POCBGHToken", "CompilerVersion": "v0.5.8+commit.23d335f2", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://b0dc7c5f502763d3af659564eadf3a34add3decd41ec21147dc986bd2bb8ffee"}