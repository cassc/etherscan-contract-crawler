{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/MAGA.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\n// forgefmt: disable-start\\n/**\\n\\nThe DJT $MAGA Token\\n@MAGADJT_ (twitter/no telegram)\\n\\n\\n$$\\\\      $$\\\\  $$$$$$\\\\  $$\\\\   $$\\\\ $$$$$$$$\\\\                                                             \\n$$$\\\\    $$$ |$$  __$$\\\\ $$ | $$  |$$  _____|                                                            \\n$$$$\\\\  $$$$ |$$ /  $$ |$$ |$$  / $$ |                                                                  \\n$$\\\\$$\\\\$$ $$ |$$$$$$$$ |$$$$$  /  $$$$$\\\\                                                                \\n$$ \\\\$$$  $$ |$$  __$$ |$$  $$<   $$  __|                                                               \\n$$ |\\\\$  /$$ |$$ |  $$ |$$ |\\\\$$\\\\  $$ |                                                                  \\n$$ | \\\\_/ $$ |$$ |  $$ |$$ | \\\\$$\\\\ $$$$$$$$\\\\                                                             \\n\\\\__|     \\\\__|\\\\__|  \\\\__|\\\\__|  \\\\__|\\\\________|                                                            \\n                                                                                                       \\n                                                                                                       \\n                                                                                                       \\n $$$$$$\\\\  $$\\\\      $$\\\\ $$$$$$$$\\\\ $$$$$$$\\\\  $$$$$$\\\\  $$$$$$\\\\   $$$$$$\\\\                                  \\n$$  __$$\\\\ $$$\\\\    $$$ |$$  _____|$$  __$$\\\\ \\\\_$$  _|$$  __$$\\\\ $$  __$$\\\\                                 \\n$$ /  $$ |$$$$\\\\  $$$$ |$$ |      $$ |  $$ |  $$ |  $$ /  \\\\__|$$ /  $$ |                                \\n$$$$$$$$ |$$\\\\$$\\\\$$ $$ |$$$$$\\\\    $$$$$$$  |  $$ |  $$ |      $$$$$$$$ |                                \\n$$  __$$ |$$ \\\\$$$  $$ |$$  __|   $$  __$$<   $$ |  $$ |      $$  __$$ |                                \\n$$ |  $$ |$$ |\\\\$  /$$ |$$ |      $$ |  $$ |  $$ |  $$ |  $$\\\\ $$ |  $$ |                                \\n$$ |  $$ |$$ | \\\\_/ $$ |$$$$$$$$\\\\ $$ |  $$ |$$$$$$\\\\ \\\\$$$$$$  |$$ |  $$ |                                \\n\\\\__|  \\\\__|\\\\__|     \\\\__|\\\\________|\\\\__|  \\\\__|\\\\______| \\\\______/ \\\\__|  \\\\__|                                \\n                                                                                                       \\n                                                                                                       \\n                                                                                                       \\n $$$$$$\\\\  $$$$$$$\\\\  $$$$$$$$\\\\  $$$$$$\\\\ $$$$$$$$\\\\        $$$$$$\\\\   $$$$$$\\\\   $$$$$$\\\\  $$$$$$\\\\ $$\\\\   $$\\\\ \\n$$  __$$\\\\ $$  __$$\\\\ $$  _____|$$  __$$\\\\\\\\__$$  __|      $$  __$$\\\\ $$  __$$\\\\ $$  __$$\\\\ \\\\_$$  _|$$$\\\\  $$ |\\n$$ /  \\\\__|$$ |  $$ |$$ |      $$ /  $$ |  $$ |         $$ /  $$ |$$ /  \\\\__|$$ /  $$ |  $$ |  $$$$\\\\ $$ |\\n$$ |$$$$\\\\ $$$$$$$  |$$$$$\\\\    $$$$$$$$ |  $$ |         $$$$$$$$ |$$ |$$$$\\\\ $$$$$$$$ |  $$ |  $$ $$\\\\$$ |\\n$$ |\\\\_$$ |$$  __$$< $$  __|   $$  __$$ |  $$ |         $$  __$$ |$$ |\\\\_$$ |$$  __$$ |  $$ |  $$ \\\\$$$$ |\\n$$ |  $$ |$$ |  $$ |$$ |      $$ |  $$ |  $$ |         $$ |  $$ |$$ |  $$ |$$ |  $$ |  $$ |  $$ |\\\\$$$ |\\n\\\\$$$$$$  |$$ |  $$ |$$$$$$$$\\\\ $$ |  $$ |  $$ |         $$ |  $$ |\\\\$$$$$$  |$$ |  $$ |$$$$$$\\\\ $$ | \\\\$$ |\\n \\\\______/ \\\\__|  \\\\__|\\\\________|\\\\__|  \\\\__|  \\\\__|         \\\\__|  \\\\__| \\\\______/ \\\\__|  \\\\__|\\\\______|\\\\__|  \\\\__|\\n.........................................................................................................................................................\\n.........................................................................................................................................................\\n.........................................................................................................................................................\\n......................:::................................................................................................................................\\n.....................:----:..............................................................................................................................\\n.....................------:.............................................................................................................................\\n.....................:=====-.................................................:...........................................................................\\n.....................:==+++-........................................::-====+++++++++=-:..................................................................\\n.....................:=++++-....................................:-==++++++++++==+++=++===---:............................................................\\n.............::--------===+=:.................................:=+++++=====++============++++==-:.........................................................\\n............:-------------==:...............................-=++++++++=====++=++================-:.......................................................\\n............----=+===-----=+-:............................-++****+++++====================++======:......................................................\\n..........:-------====+++**+=:..........................-+*****++++==============++++++++++****+++-......................................................\\n..........-=========-----=**=-.........................-*#**++++++==================++++++**+++**=:......................................................\\n..........-++====-=--=---=++=-.........................=*#*+++++++====================+++++++*++-........................................................\\n..........----==+++++++++***+-.........................=#*++++++========--============+=+++++++=-........................................................\\n.........:-=======-----=*##*+-........................:+#**++++===========================+++++==:.......................................................\\n.........:=+++========-=+*%*=:........................-*#*++=======-----===++++++**####*++++++++=:.......................................................\\n.........:-===++++++*******+-.........................:+#*+===========+**#####+==*#%%%%%%#*+++*++:.......................................................\\n.........:-=====--==+*%%%#+=..........................:+#*+==+======+*#%%%%%%*=--=###+++=+#*+++++-.......................................................\\n.........:+*++++=====+++++=:..........................-***+++=====+*#*+========--====+++++==++***+:......................................................\\n..........:+*++++****###*+=..........................:=**++++=====+++=+**++=-===--=+===---===+****-......................................................\\n...........:***#%%%%%%#*++*:.........................-****+++==========-----====--==++=---==++++**=......................................................\\n...........:*+##%%%%%%##**#:.........................:+##**++==+===--------=++====+++++=====+++***=......................................................\\n..........:.+++*#######**=:-:.........................-****++==+++==----===+*+#@%#%@%*+*++++++***=:......................................................\\n.........:+-:****#####*+--=+:.........................:=*+*#+=++++=======++*++*+***+++==+*+++++++=:......................................................\\n.........=%#-:*####**+--==#*:..........................:==+*===+++=+++++**+==============++++++*+=:......................................................\\n........:*%%*=:+*#*=--=++#%*:...........................:=======+++++++**+======++*****##*+==++++-.......................................................\\n........=%%%%*--*=.-=+++#%%#-............................-==-==+=+++++=++++*##+=====++++====++++-........................................................\\n.......:#%%%%%*++=+++++*%%%#-............................:====+++++++++===+==++*###***+++=++++*+:........................................................\\n.......+%%%%%%%*+=++++*%@@%#-.............................:+*#**++++++++++====++===========++++-.........................................................\\n......:*%%%%%%%@@%#%%@@@@%%#-..............................:+***++++++++++=======+==++++=+++++=:.........................................................\\n......+%%%%%%%@@@@@@@@@@@@@#-...............................:=**+++*+++++++++===+++++**++***++-..........................................................\\n.....=%%%%%%%%@@@@@@@@@@@@@#-.................................-+++++**++++********#######****+:..........................................................\\n....-#%%%%%@%@@@@@@@@@@@@@@%=...................................:=++++*****++*###########****=...........................................................\\n....*%%%%%%%@@@@@@@@@@@@@@@%+:...................................:++++++***++***#########****-:..........................................................\\n...-#%%%%%@%%@@@@@@@@@@@@@@%#-..................................:::-=*++*******######%###***=-:..........................................................\\n...+%%%%%@%%@@@@@@@@@@@@@@@@%-.................................:-:::::-=+***+**####%####**+-----.........................................................\\n..:*%%%%%%@@@@@@@@@@@@@@@@@@%=................................:*%=:....::--=+**#######**+=------*=:......................................................\\n..-#%%%%%%%%@@@@@@@@@@@@@@@@%=...............................-#%%%%=:.......:-=+*#%%%*=-::::-----%%*=:...................................................\\n..-#%%%%%%@@@@@@@@@@@@@@@@@@%=............................:=*%%%%%%%#-:........-+***###=:::::::--+%%%%#+-:...............................................\\n..-#%%%%%@@@@@@@@@@@@@@@@@@@@*-::::::::::::::..........:=#%%%%%%%%%%%%=:......##%%%*#%%%#=:::::::-=#%%%%%%%#*+=::........................................\\n..-#%%%%@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%###%%%%%%%%%%%%%%%%%+::..:+#####**####*+-::::::-=%%%%%%%%%%%%%%##*+=-::...............................\\n..-#%%%%@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%+:.-**+=-+#*+*+--:-=-:::::--*%%%%%%%%%%%%%%%%%%%%%##*=-:.........................\\n..-#%%%%@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=:--::::-**+*-::::::::::::--%%%%%%%%%%%%%%%%%%%%%%%%%%%##*=-:...................\\n..-#@%%%%@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-::::::+#***=::::::::::::::*%%%%%%%%%*#%%%%%%%%%%%%%%%%%%%%%#*-................\\n..-#@@%%@@@@@@@@@@@@@@@@@@@@@@@%%%%%@%@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=::::=*#*****-::..::::::::-%%%%%%%%%%+-+%%%%%%%%%%%%%%%%%%%%%%*:..............\\n..-#@@@%@@@@@@@@@@@@@@@@@@@@@@@%%%%%%@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=:.:=##**+**++-::::::::.:-#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%+:.............\\n..+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=::=##**++**++::..::....:+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=.............\\n.-#%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-:###**++++++*::..:....:=#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-............\\n.=#%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=%#***++++++*+::.......:*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#:...........\\n.-#%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%####***++++++++:.......:*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%+:..........\\n..+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#***+++++++*=.......:+%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-..........\\n..:*%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#****+++++++*:......:-#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%*:.........\\n...+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%%%%%%%##***++**+++**......::#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%%=.........\\n...-%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%%%%%%%#****+***++**-.....::#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@%%%%%%*:........\\n....=%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%%%%%%%#********+++**:.....:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%%+........\\n.....=#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%%%%%%#********+++**+.....:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%%#-.......\\n......-*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%@@%%%%%%%%%%#*********++**+:...::#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*:......\\n........:*%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@%%%%%%%%%#********++****=...::#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#-......\\n..........:=*%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@%%%%%%%%%********+**+**+:::::#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*:.....\\n..............:=#%@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@%%%%%%%%#**************-::::#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%+.....\\n..................:=*%@@@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@%%%%%%%%#***************:::-#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%%%%#-....\\n......................:-*%@@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@%%%%%%%%***************-::-*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@%%%%%%%%%%#:...\\n...........................-*%@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@%%%%%%%#***************::-*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@%%%%%%%%%%+...\\n.............................:=*%@@@@@@@@@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@%%%%%%#***************::-*%%%%%%%%@%%%%%%%%%%%%%%%%%%%%%%@@@%%%%%%%%%@%=..\\n................................:*%@@@%@@@@@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%@@@@@%%%%%#***************+:-*%%%%%%%%@%%%%%%%%%%%%%%%%%%%%%@@@@@@%%%%%%%@%#-.\\n\\n             \\n\\n\\n\\nIn the heart of the greatest nation on Earth, amidst the bustling cities and the serene countryside, a new dawn rises. It's a call to the true believers, the patriots, the steadfast defenders of liberty and the American dream. This is more than a moment\u2014it's our destiny unfolding.\\n\\nThe Vision:\\nWe stand at a crossroads, where the legacy of our forebears and the hopes of future generations converge, faced with the choice to either uphold the torch of freedom or let it flicker in the shadows of tyranny. The DJT $MAGA Token emerges as the beacon of this era, a clarion call to rally the lovers of freedom, democracy, liberty and prosperity. The Constitution of the United States of America is not merely a document from our past; it is a living promise of liberty, a covenant with the future that we must tirelessly defend. In its wisdom, we find the blueprint for a society that respects the dignity of the individual and the sanctity of freedom.\\nInspired by the unwavering spirit of DJT, this token is our standard in the battle to reclaim the essence of America: a land of unparalleled opportunity, where every voice is heard, and every dream can take flight.\\n\\nThe Mission:\\nOur mission is clear\u2014fuel the resurgence of 'America First,' championing policies and ideals that prioritize the well-being of every American. To bring back America is to rekindle the flames of patriotism, to honor the sacrifices of those who came before us by committing ourselves to the principles of individualism and capitalism that have made this nation a beacon of hope and opportunity across the globe. With the DJT $MAGA Token, we weave the fabric of a community united by shared values and a common purpose: to secure a future where America continues to shine as the beacon of freedom and greatness.\\n\\nThe Strategy:\\nFirst, we align our efforts with the resurgence campaign, ensuring that every token transaction fortifies our resolve to see DJT return to the White House, steering America back to prosperity, strength, and unity. A portion of every transaction nurtures the roots of our movement, supporting the MAGA foundation and amplifying our message across the nation.\\nOur mission is clear: to champion the cause of the individual, to celebrate the entrepreneurial spirit that propels our economy forward, and to assert, without apology, that the pursuit of excellence and the rewards it brings are not just the foundation of American prosperity but the very essence of our national character.\\nSimultaneously, we support through donations key organizations and movements that further the MAGA cause. We inspire the younger generation of the great American past and how bright the American future can be.\\nWe will restore faith in the American dream, where hard work and perseverance are rewarded, where innovation and ambition are encouraged, and where each citizen has the opportunity to achieve greatness on their own terms. We will honor our heroes, not just those who fought on battlefields, but also those who conquer in the marketplace, who innovate in the laboratory, and who inspire in the world.\\n\\nThe Call to Action:\\nNow is the time for courage, for action. This is our moment\u2014our chance to stand shoulder to shoulder, to reclaim the promise of America for ourselves and for posterity. The DJT $MAGA Token is not just a currency; it's a declaration of our shared destiny, an investment in the America we believe in, an America where every day is a testament to greatness.\\nJoin us as we embark on this journey, not just to witness history but to write it. Together, with the DJT $MAGA Token, we will breathe fire into the heart and soul of this land, igniting a new era of American greatness. This is our time. Now or never.\\nLet us then, with the courage of our forefathers and the unwavering belief in our shared destiny, pledge to rebuild an America that shines as a testament to the power of the individual, the resilience of our economy, and the enduring strength of our democratic ideals. This is our vision, our promise, and our duty\u2014to reignite the mighty spirit of America and ensure that this great nation continues to be, now and forever, the land of the free and the home of the brave.\\n\\nThe Promise:\\nWith every token, with every transaction, we build more than a campaign; we build a legacy. For the lovers of freedom, for the believers in the American dream, the DJT $MAGA Token is your banner. Under this banner, we march forward\u2014united, invincible, unstoppable. Together, we are the architects of the future. This is your call to arms. Join us, and let's Make America Great Again, greater than ever before.\\n\\n**/\\n\\n// forgefmt: disable-end\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {SafeERC20} from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IUniswapV2Factory} from \\\"./interfaces/IUniswapV2Factory.sol\\\";\\nimport {IUniswapV2Router02} from \\\"./interfaces/IUniswapV2Router02.sol\\\";\\n\\n/// @title MAGAToken\\n/// @notice Bigly gas optimized ERC20 token with fees\\n/// @author MAGA (@@MAGADJT_)\\n/// @author Modified from GasliteToken (https://github.com/PopPunkLLC/gaslite-core/blob/main/src/GasliteToken.sol)\\n/// @author Modified from Harrison (@PopPunkOnChain)\\n/// @author Modified from 0xjustadev (@0xjustadev)\\n/// @author Modified from (@GasliteGG)\\ncontract MAGA is Ownable {\\n    string public name;\\n    string public symbol;\\n    uint8 public constant decimals = 18;\\n    uint256 public immutable totalSupply;\\n    uint256 public immutable TAX_SWAP_THRESHOLD;\\n    uint256 public immutable MAX_TAX_SWAP;\\n\\n    address private lpTokenRecipient;\\n    address public developmentWallet;\\n    address public magaWallet;\\n\\n    uint8 public constant TRADING_DISABLED = 0;\\n    uint8 public constant TRADING_ENABLED = 1;\\n    uint8 public constant BUY_TOTAL_FEES = 10;            // BUY_TOTAL_FEES / 1000         =  1%\\n    uint8 public constant SELL_TOTAL_FEES = 10;           // SELL_TOTAL_FEES / 1000        =  1%\\n    uint8 public constant PERCENTAGE_FEE_TO_MAGA = 50;    // PERCENTAGE_FEE_TO_MAGA / 100  = 50%\\n    uint8 public tradingStatus = TRADING_DISABLED;\\n\\n    mapping(address => uint256) private _balances;\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n    mapping(address => bool) private _isExcludedFromFees;\\n    mapping(address => bool) private automatedMarketMakerPairs;\\n\\n    IUniswapV2Router02 public immutable uniswapV2Router;\\n    address public immutable uniswapV2Pair;\\n\\n    error ZeroAddress();\\n    error InsufficientAllowance();\\n    error InsufficientBalance();\\n    error CannotRemoveV2Pair();\\n    error WithdrawalFailed();\\n    error InvalidState();\\n    error TradingDisabled();\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /// @notice Constructor\\n    /// @param _name Name of the token\\n    /// @param _symbol Symbol of the token\\n    /// @param _totalSupply Total supply of the token\\n    /// @param _lpTokenRecipient Address to receive LP tokens\\n    /// @param _developmentWallet Address to receive fees\\n    /// @param _magaWallet Address to receive fees\\n    /// @param _uniswapV2RouterAddress Address of Uniswap V2 Router\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _totalSupply,\\n        address _lpTokenRecipient,\\n        address _developmentWallet,\\n        address _magaWallet,\\n        address _uniswapV2RouterAddress\\n    ) payable Ownable(_lpTokenRecipient) {\\n        if (_uniswapV2RouterAddress == address(0)) revert ZeroAddress();\\n\\n        name = _name;\\n        symbol = _symbol;\\n        totalSupply = _totalSupply;\\n        lpTokenRecipient = _lpTokenRecipient;\\n        magaWallet = _magaWallet;\\n        developmentWallet = _developmentWallet;\\n\\n        TAX_SWAP_THRESHOLD = _totalSupply * 10 / 10_000;\\n        MAX_TAX_SWAP = _totalSupply * 100 / 10_000;\\n\\n        uniswapV2Router = IUniswapV2Router02(_uniswapV2RouterAddress);\\n\\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\\n        automatedMarketMakerPairs[uniswapV2Pair] = true;\\n\\n        _isExcludedFromFees[owner()] = true;\\n        _isExcludedFromFees[address(this)] = true;\\n        _isExcludedFromFees[_developmentWallet] = true;\\n        _isExcludedFromFees[_magaWallet] = true;\\n\\n        _balances[address(this)] = _totalSupply;\\n        emit Transfer(address(0), address(this), _totalSupply);\\n\\n        _approve(address(this), address(uniswapV2Router), type(uint256).max);\\n    }\\n\\n    receive() external payable {}\\n\\n    /// @notice Adds liquidity to Uniswap\\n    function fundLP() external payable onlyOwner {\\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(\\n            address(this), totalSupply, 0, 0, lpTokenRecipient, block.timestamp\\n        );\\n    }\\n\\n    /// @notice Gets balance of an address\\n    /// @param account Address to check balance of\\n    /// @return Balance of the address\\n    function balanceOf(address account) public view returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /// @notice Gets allowance of an address\\n    /// @param owner Address of the owner\\n    /// @param spender Address of the spender\\n    /// @return Allowance of the address\\n    function allowance(address owner, address spender) public view returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /// @notice Approves an address to spend tokens\\n    /// @param spender Address of the spender\\n    /// @param amount Amount to approve\\n    /// @return True if successful\\n    function approve(address spender, uint256 amount) external returns (bool) {\\n        _approve(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /// @notice Internal approve\\n    /// @param owner Address of the owner\\n    /// @param spender Address of the spender\\n    /// @param amount Amount to approve\\n    function _approve(address owner, address spender, uint256 amount) private {\\n        if (owner == address(0)) revert ZeroAddress();\\n        if (spender == address(0)) revert ZeroAddress();\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /// @notice Transfers tokens to an address\\n    /// @param recipient Address of the recipient\\n    /// @param amount Amount to transfer\\n    /// @return True if successful\\n    function transfer(address recipient, uint256 amount) external returns (bool) {\\n        _transfer(msg.sender, recipient, amount);\\n        return true;\\n    }\\n\\n    /// @notice Transfers tokens from an address to another address\\n    /// @param sender Address of the sender\\n    /// @param recipient Address of the recipient\\n    /// @param amount Amount to transfer\\n    /// @return True if successful\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\\n        uint256 currentAllowance = _allowances[sender][msg.sender];\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < amount) revert InsufficientAllowance();\\n            unchecked {\\n                _approve(sender, msg.sender, currentAllowance - amount);\\n            }\\n        }\\n\\n        _transfer(sender, recipient, amount);\\n\\n        return true;\\n    }\\n\\n    /// @notice Internal transfer\\n    /// @param from Address of the sender\\n    /// @param to Address of the recipient\\n    function _transfer(address from, address to, uint256 amount) private {\\n        if (from == address(0)) revert ZeroAddress();\\n        if (to == address(0)) revert ZeroAddress();\\n\\n        if (tradingStatus == TRADING_DISABLED) {\\n            if (from != owner() && from != magaWallet && from != developmentWallet && from != address(this) && to != owner()) {\\n                revert TradingDisabled();\\n            }\\n        }\\n\\n        bool takeFee = true;\\n        if (_isExcludedFromFees[from] || _isExcludedFromFees[to]) {\\n            takeFee = false;\\n        }\\n\\n        uint256 senderBalance = _balances[from];\\n        if (senderBalance < amount) revert InsufficientBalance();\\n\\n        uint256 fees = 0;\\n        if (takeFee) {\\n            if (automatedMarketMakerPairs[to] && SELL_TOTAL_FEES > 0) {\\n                fees = (amount * SELL_TOTAL_FEES) / 1000;\\n            } else if (automatedMarketMakerPairs[from] && BUY_TOTAL_FEES > 0) {\\n                fees = (amount * BUY_TOTAL_FEES) / 1000;\\n            }\\n\\n            if (fees > 0) {\\n                uint256 tokenBalance = balanceOf(address(this));\\n                if (tokenBalance > TAX_SWAP_THRESHOLD && to == uniswapV2Pair) {\\n                    uint256 minOfAll;\\n                    if (tokenBalance < MAX_TAX_SWAP) minOfAll = tokenBalance < amount ? tokenBalance : amount;\\n                    else minOfAll = MAX_TAX_SWAP < amount ? MAX_TAX_SWAP : amount;\\n\\n                    uint256 preEthBalance = address(this).balance;\\n                    // this.swapTokensForEth(minOfAll);\\n\\n                    address[] memory path = new address[](2);\\n                    path[0] = address(this);\\n                    path[1] = uniswapV2Router.WETH();\\n                    _approve(address(this), address(uniswapV2Router), minOfAll);\\n                    uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n                        minOfAll,\\n                        0,\\n                        path,\\n                        address(this),\\n                        block.timestamp\\n                    );\\n\\n                    uint256 ethBalance = address(this).balance - preEthBalance;\\n                    if (ethBalance > 0) {\\n                        uint256 magaETHFees = ethBalance * PERCENTAGE_FEE_TO_MAGA / 100;\\n                        payable(magaWallet).transfer(magaETHFees);\\n                        payable(developmentWallet).transfer(ethBalance - magaETHFees);\\n                    }\\n\\n                }\\n                unchecked {\\n                    amount = amount - fees;\\n                    _balances[from] -= fees;\\n                    _balances[address(this)] += fees;\\n                }\\n                emit Transfer(from, address(this), fees);\\n            }\\n        }\\n        unchecked {\\n            _balances[from] -= amount;\\n            _balances[to] += amount;\\n        }\\n        emit Transfer(from, to, amount);\\n    }\\n\\n\\n    /// @notice Enables trading\\n    function enableTrading() public onlyOwner {\\n        tradingStatus = TRADING_ENABLED;\\n    }\\n\\n    /// @notice Sets AMM pair\\n    /// @param pair Address of the pair\\n    /// @param value True if AMM pair\\n    function setAutomatedMarketMakerPair(address pair, bool value) external onlyOwner {\\n        if (pair == uniswapV2Pair) revert CannotRemoveV2Pair();\\n        automatedMarketMakerPairs[pair] = value;\\n    }\\n\\n    /// @notice Withdraw tokens from the contract\\n    /// @param token Address of the token\\n    /// @param to Address to withdraw to\\n    function withdrawToken(address token, address to) external onlyOwner {\\n        uint256 _contractBalance = IERC20(token).balanceOf(address(this));\\n        SafeERC20.safeTransfer(IERC20(token), to, _contractBalance);\\n    }\\n\\n    /// @notice Withdraw ETH from the contract\\n    /// @param addr Address to withdraw to\\n    function withdrawETH(address addr) external onlyOwner {\\n        if (addr == address(0)) revert ZeroAddress();\\n\\n        (bool success,) = addr.call{value: address(this).balance}(\\\"\\\");\\n        if (!success) revert WithdrawalFailed();\\n    }\\n}\"\r\n    },\r\n    \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\r\n    },\r\n    \"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\"\r\n    },\r\n    \"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\"\r\n    },\r\n    \"src/interfaces/IUniswapV2Factory.sol\": {\r\n      \"content\": \"pragma solidity 0.8.20;\\n\\ninterface IUniswapV2Factory {\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n}\"\r\n    },\r\n    \"src/interfaces/IUniswapV2Router02.sol\": {\r\n      \"content\": \"pragma solidity 0.8.20;\\n\\ninterface IUniswapV2Router02 {\\n    function factory() external pure returns (address);\\n\\n    function WETH() external pure returns (address);\\n\\n    function getAmountsOut(uint amountIn, address[] memory path) external view returns (uint[] memory amounts);\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\\n\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n}\"\r\n    },\r\n    \"lib/openzeppelin-contracts/contracts/utils/Context.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\"\r\n    },\r\n    \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\"\r\n    },\r\n    \"lib/openzeppelin-contracts/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\r\n      \"ds-test/=lib/forge-std/lib/ds-test/src/\",\r\n      \"erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"openzeppelin-contracts/=lib/openzeppelin-contracts/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 10000000\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"paris\",\r\n    \"viaIR\": true,\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_lpTokenRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_developmentWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_magaWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapV2RouterAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotRemoveV2Pair\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TradingDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BUY_TOTAL_FEES\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TAX_SWAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTAGE_FEE_TO_MAGA\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SELL_TOTAL_FEES\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TAX_SWAP_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRADING_DISABLED\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRADING_ENABLED\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"developmentWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundLP\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"magaWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setAutomatedMarketMakerPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingStatus\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MAGA", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "1", "Runs": "10000000", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000028c418afbbb5c0000000000000000000000000000c17c27d49601dd045f3b225908bdacf8c042bb9d000000000000000000000000c17c27d49601dd045f3b225908bdacf8c042bb9d000000000000000000000000f131ee77313af70c6ba2159e7058f33f41b9a2a40000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d0000000000000000000000000000000000000000000000000000000000000003444a54000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044d41474100000000000000000000000000000000000000000000000000000000", "EVMVersion": "paris", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}