{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/helpers/OracleHelperLibrary.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nlibrary OracleHelperLibrary {\\n    struct SecurityParams {\\n        uint32[] secondsAgos;\\n        int24 maxDeviation;\\n    }\\n\\n    function mevSecurityParams(uint24 fee) external pure returns (bytes memory) {\\n        if (fee <= 100) {\\n            uint32[] memory secondsAgos001 = new uint32[](3);\\n            secondsAgos001[0] = 10;\\n            secondsAgos001[1] = 30;\\n            secondsAgos001[2] = 60;\\n            int24 maxDeviation001 = 20;\\n            return abi.encode(SecurityParams({secondsAgos: secondsAgos001, maxDeviation: maxDeviation001}));\\n        }\\n\\n        if (fee <= 500) {\\n            uint32[] memory secondsAgos005 = new uint32[](2);\\n            secondsAgos005[0] = 10;\\n            secondsAgos005[1] = 60;\\n            int24 maxDeviation005 = 50;\\n            return abi.encode(SecurityParams({secondsAgos: secondsAgos005, maxDeviation: maxDeviation005}));\\n        }\\n\\n        if (fee <= 3000) {\\n            uint32[] memory secondsAgos03 = new uint32[](2);\\n            secondsAgos03[0] = 10;\\n            secondsAgos03[1] = 60;\\n            int24 maxDeviation03 = 100;\\n            return abi.encode(SecurityParams({secondsAgos: secondsAgos03, maxDeviation: maxDeviation03}));\\n        }\\n\\n        uint32[] memory secondsAgos = new uint32[](2);\\n        secondsAgos[0] = 10;\\n        secondsAgos[1] = 60;\\n        int24 maxDeviation = 200;\\n        return abi.encode(SecurityParams({secondsAgos: secondsAgos, maxDeviation: maxDeviation}));\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\r\n      \"ds-test/=lib/forge-std/lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"@diamond-3-hardhat/=lib/diamond-3-hardhat/contracts/\",\r\n      \"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\r\n      \"@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\r\n      \"@solmate/=lib/solmate/\",\r\n      \"@zodiac/=lib/zodiac/contracts/\",\r\n      \"@mellow-vaults/=lib/mellow-vaults/\",\r\n      \"@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\r\n      \"diamond-3-hardhat/=lib/diamond-3-hardhat/contracts/\",\r\n      \"erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\r\n      \"openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\r\n      \"openzeppelin-contracts/=lib/openzeppelin-contracts/\",\r\n      \"openzeppelin/=lib/openzeppelin-contracts/contracts/\",\r\n      \"safe-contracts/=lib/safe-contracts/\",\r\n      \"solmate/=lib/solmate/src/\",\r\n      \"zodiac/=lib/zodiac/contracts/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200,\r\n      \"details\": {\r\n        \"yul\": true,\r\n        \"yulDetails\": {\r\n          \"stackAllocation\": true\r\n        }\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"paris\",\r\n    \"libraries\": {\r\n      \"src/helpers/OracleHelperLibrary.sol\": {\r\n        \"OracleHelperLibrary\": \"0xa87a5f9299037ca6ad8b38f4ea95069af140ea90\"\r\n      },\r\n      \"src/libraries/UniswapCalculations.sol\": {\r\n        \"UniswapCalculations\": \"0xef0b54dba501524ef5c827e5bdf4a4d4e4c4b76f\"\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"mevSecurityParams\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "OracleHelperLibrary", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "paris", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}