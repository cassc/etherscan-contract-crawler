{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\n// ERC721CSBT (ERC721 Claimable Soulbound Token)\r\n// Author: 0xInuarashi of CypherLabz\r\n// https://twitter.com/0xInuarashi || 0xInuarashi#1234 (Discord)\r\n\r\n// NOTE: This does NOT comply to IERC721 Standards. It is purely experimental.\r\n// It does NOT work like a normal ERC721, so I did not make it have to comply.\r\n\r\n// JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJJJJJJJYYYYYYYYYYYYYYYYYYJJJJJJJJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJJJJJJ?~~~~~~~~~~~~~~~~~~!JJJJJJJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJJJJJY! ................ :JJJJJJJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJJJJJJ7::::::::::::::::::~JJJJJJJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJJ?????????JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJ?.........!YJJJJJJJ?^::::::::!JJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJ?.........!YJJJJJJJ?:::::::::!YJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJ?..........:::::::::.....::::!YJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJ?........................::::!YJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJ?~~~~^..................:!!!!?JJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJJYYYY7::::..............:YYYYJJJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJJJJJY!....^~~~~. . .^^^^!JJJJJJJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJJJJJY!    ?####.    5PPP5JJJJJJJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJJYYYY! .. 7GGGG.    YYYYYYYYYJJJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJYGGGGJ:::::....:::::....~GGGG5JJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJYGGGGJ::::.....:::::....^GGGG5JJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJYGGGGP5555~.............^YYYYYJJJJJJJJJJJJ\r\n// JJJJJJJJJJJJJYGGGGGGGGB!.............:JJJJJJJJJJJJJJJJJ\r\n// JJJJJJJJJ5PPPPGGGG57777^.........????J5555YJJJJJJJJJJJJ\r\n// JJJJJJJJJGBGBGGGGGJ.:::.........:GBBBBGGGG5JJJJJJJJJJJJ\r\n// JJJJJJJJJGGGGGPPPGY!!!!:........:PGGGP5PPPYJJJJJJJJJJJJ\r\n// JJJJJJJJJGGGGG5555PPPPP~........:5P555JJJJJJJJJJJJJJJJJ\r\n// JJJJJJJJJGGGGG55555555P!::::....:5P5P5YYYYJJJJJJJJJJJJJ\r\n// JJJJJJJJJ5P5P5555555555PGGGG^...:5P555555PYJJJJJJJJJJJJ\r\n// JJJJJJJJJ55555555555555GBGGG^...:5PPPP555PYJJJJJJJJJJJJ\r\n// JJJJY555555555555555555GGGGG5YYYYGGGGG555555555YJJJJJJJ\r\n// JJJJ5PPPP55555555555555GGGGGPPPPPGGGGG55555PPPPYJJJJJJJ\r\n\r\n///// Import Solidity Modules /////\r\n\r\n// Short and Simple Ownable by 0xInuarashi\r\n// Ownable follows EIP-173 compliant standard\r\n\r\nabstract contract Ownable {\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    address public owner;\r\n    constructor() { \r\n        owner = msg.sender; \r\n    }\r\n    modifier onlyOwner { \r\n        require(owner == msg.sender, \"onlyOwner not owner!\");\r\n        _; \r\n    }\r\n    function transferOwnership(address new_) external onlyOwner {\r\n        address _old = owner;\r\n        owner = new_;\r\n        emit OwnershipTransferred(_old, new_);\r\n    }\r\n}\r\n\r\nabstract contract ERC721TokenURI {\r\n\r\n    string public baseTokenURI;\r\n\r\n    function _setBaseTokenURI(string memory uri_) internal virtual {\r\n        baseTokenURI = uri_;\r\n    }\r\n\r\n    function _toString(uint256 value_) internal pure virtual \r\n    returns (string memory _str) {\r\n        assembly {\r\n            let m := add(mload(0x40), 0xa0)\r\n            mstore(0x40, m)\r\n            _str := sub(m, 0x20)\r\n            mstore(_str, 0)\r\n\r\n            let end := _str\r\n\r\n            for { let temp := value_ } 1 {} {\r\n                _str := sub(_str, 1)\r\n                mstore8(_str, add(48, mod(temp, 10)))\r\n                temp := div(temp, 10)\r\n                if iszero(temp) { break }\r\n            }\r\n\r\n            let length := sub(end, _str)\r\n            _str := sub(_str, 0x20)\r\n            mstore(_str, length)\r\n        }\r\n    }\r\n\r\n    function _getTokenURI(uint256 tokenId_) internal virtual view \r\n    returns (string memory) {\r\n        return string(abi.encodePacked(baseTokenURI, _toString(tokenId_)));\r\n    }\r\n}\r\n\r\nabstract contract ERC721TokenReceiver {\r\n    function onERC721Received(address, address, uint256, bytes calldata) \r\n    external virtual returns (bytes4) {\r\n        return ERC721TokenReceiver.onERC721Received.selector;\r\n    }\r\n}\r\n\r\ninterface IERC721 {\r\n    function ownerOf(uint256 tokenId_) external view returns (address);\r\n}\r\n\r\ncontract ERC721CSBT is ERC721TokenURI, Ownable {\r\n    \r\n    ///// Events /////\r\n    event Transfer(address indexed from_, address indexed to_, uint256 indexed tokenId_);\r\n    \r\n    ///// Token Data /////\r\n    string public name; \r\n    string public symbol;\r\n\r\n    ///// Interface Data /////\r\n    IERC721 public immutable ERC721Token;\r\n\r\n    ///// Token Storage /////\r\n    /** @dev these structs can be expanded to fill the empty bytes */\r\n    struct TokenData {\r\n        address owner;\r\n    }\r\n\r\n    //// Token Mappings /////\r\n    mapping(uint256 => TokenData) public _tokenData;\r\n\r\n    function ownerOf(uint256 tokenId_) public virtual view returns (address) {\r\n        address _owner = _tokenData[tokenId_].owner;\r\n        return _owner;\r\n    }\r\n\r\n    ///// Constructor /////\r\n    constructor(string memory name_, string memory symbol_, address erc721_) {\r\n        name = name_;\r\n        symbol = symbol_;\r\n        ERC721Token = IERC721(erc721_);\r\n    }\r\n    \r\n    ///// Ownable Settings /////\r\n    function setBaseTokenURI(string calldata uri_) external onlyOwner {\r\n        _setBaseTokenURI(uri_);\r\n    }\r\n\r\n    ///// ERC721-Like Functions /////\r\n    function _transfer(address from_, address to_, uint256 tokenId_) internal \r\n    virtual { unchecked {\r\n        _tokenData[tokenId_].owner = to_;\r\n        emit Transfer(from_, to_, tokenId_);\r\n    }}\r\n\r\n    ///// ERC721CSBT Functions /////\r\n    function callToken(uint256 tokenId_) external {\r\n        address _owner = ownerOf(tokenId_);\r\n        address _ERC721Owner = ERC721Token.ownerOf(tokenId_);\r\n        require(_ERC721Owner == msg.sender, \"You are not the owner!\");\r\n        _transfer(_owner, _ERC721Owner, tokenId_);\r\n    }\r\n    function burnToken(uint256 tokenId_) external {\r\n        address _owner = ownerOf(tokenId_);\r\n        address _ERC721Owner = ERC721Token.ownerOf(tokenId_);\r\n        require(_ERC721Owner == msg.sender, \"You are not the owner!\");\r\n        _transfer(_owner, address(0), tokenId_);\r\n    }\r\n\r\n    ///// ERC165 Interface /////\r\n    function supportsInterface(bytes4 iid_) public virtual view returns (bool) {\r\n        return  iid_ == 0x01ffc9a7 || // ERC165 Interface ID for ERC165\r\n                iid_ == 0x80ac58cd || // ERC165 Interface ID for ERC721\r\n                iid_ == 0x5b5e139f;   // ERC165 Interface ID for ERC721Metadata\r\n    }\r\n\r\n    ///// TokenURI Things /////\r\n    function tokenURI(uint256 tokenId_) public virtual view returns (string memory) {\r\n        return _getTokenURI(tokenId_);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"erc721_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ERC721Token\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokenData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"callToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"name\":\"setBaseTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"iid_\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ERC721CSBT", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000015cc16bfe6fac624247490aa29b6d632be549f00000000000000000000000000000000000000000000000000000000000000001a4f66662d436861696e20416e6f6e796d6963652042616269657300000000000000000000000000000000000000000000000000000000000000000000000000084f43424142494553000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://43ec709ca4aea23442f7f691908b11d05c6f6dd21343c28a7d3bbfd84b8d7b5e"}