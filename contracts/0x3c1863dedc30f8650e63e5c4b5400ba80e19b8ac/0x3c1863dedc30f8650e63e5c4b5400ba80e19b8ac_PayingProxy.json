{"SourceCode": "pragma solidity ^0.4.24;\r\n\r\ncontract SecuredTokenTransfer {\r\n\r\n    /// @dev Transfers a token and returns if it was a success\r\n    /// @param token Token that should be transferred\r\n    /// @param receiver Receiver to whom the token should be transferred\r\n    /// @param amount The amount of tokens that should be transferred\r\n    function transferToken (\r\n        address token, \r\n        address receiver,\r\n        uint256 amount\r\n    )\r\n        internal\r\n        returns (bool transferred)\r\n    {\r\n        bytes memory data = abi.encodeWithSignature(\"transfer(address,uint256)\", receiver, amount);\r\n        // solium-disable-next-line security/no-inline-assembly\r\n        assembly {\r\n            let success := call(sub(gas, 10000), token, 0, add(data, 0x20), mload(data), 0, 0)\r\n            let ptr := mload(0x40)\r\n            returndatacopy(ptr, 0, returndatasize)\r\n            switch returndatasize \r\n            case 0 { transferred := success }\r\n            case 0x20 { transferred := iszero(or(iszero(success), iszero(mload(ptr)))) }\r\n            default { transferred := 0 }\r\n        }\r\n    }\r\n}\r\n\r\ncontract Proxy {\r\n\r\n    // masterCopy always needs to be first declared variable, to ensure that it is at the same location in the contracts to which calls are delegated.\r\n    address masterCopy;\r\n\r\n    /// @dev Constructor function sets address of master copy contract.\r\n    /// @param _masterCopy Master copy address.\r\n    constructor(address _masterCopy)\r\n        public\r\n    {\r\n        require(_masterCopy != 0, \"Invalid master copy address provided\");\r\n        masterCopy = _masterCopy;\r\n    }\r\n\r\n    /// @dev Fallback function forwards all transactions and returns all received return data.\r\n    function ()\r\n        external\r\n        payable\r\n    {\r\n        // solium-disable-next-line security/no-inline-assembly\r\n        assembly {\r\n            let masterCopy := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\r\n            calldatacopy(0, 0, calldatasize())\r\n            let success := delegatecall(gas, masterCopy, 0, calldatasize(), 0, 0)\r\n            returndatacopy(0, 0, returndatasize())\r\n            if eq(success, 0) { revert(0, returndatasize()) }\r\n            return(0, returndatasize())\r\n        }\r\n    }\r\n\r\n    function implementation()\r\n        public\r\n        view\r\n        returns (address)\r\n    {\r\n        return masterCopy;\r\n    }\r\n\r\n    function proxyType()\r\n        public\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return 2;\r\n    }\r\n}\r\n\r\ncontract DelegateConstructorProxy is Proxy {\r\n\r\n    /// @dev Constructor function sets address of master copy contract.\r\n    /// @param _masterCopy Master copy address.\r\n    /// @param initializer Data used for a delegate call to initialize the contract.\r\n    constructor(address _masterCopy, bytes initializer) Proxy(_masterCopy)\r\n        public\r\n    {\r\n        if (initializer.length > 0) {\r\n            // solium-disable-next-line security/no-inline-assembly\r\n            assembly {\r\n                let masterCopy := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\r\n                let success := delegatecall(sub(gas, 10000), masterCopy, add(initializer, 0x20), mload(initializer), 0, 0)\r\n                let ptr := mload(0x40)\r\n                returndatacopy(ptr, 0, returndatasize)\r\n                if eq(success, 0) { revert(ptr, returndatasize) }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ncontract PayingProxy is DelegateConstructorProxy, SecuredTokenTransfer {\r\n\r\n    /// @dev Constructor function sets address of master copy contract.\r\n    /// @param _masterCopy Master copy address.\r\n    /// @param initializer Data used for a delegate call to initialize the contract.\r\n    /// @param funder Address that should be paid for the execution of this call\r\n    /// @param paymentToken Token that should be used for the payment (0 is ETH)\r\n    /// @param payment Value that should be paid\r\n    constructor(address _masterCopy, bytes initializer, address funder, address paymentToken, uint256 payment) \r\n        DelegateConstructorProxy(_masterCopy, initializer)\r\n        public\r\n    {\r\n        if (payment > 0) {\r\n            if (paymentToken == address(0)) {\r\n                 // solium-disable-next-line security/no-send\r\n                require(funder.send(payment), \"Could not pay safe creation with ether\");\r\n            } else {\r\n                require(transferToken(paymentToken, funder, payment), \"Could not pay safe creation with token\");\r\n            }\r\n        } \r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"proxyType\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_masterCopy\",\"type\":\"address\"},{\"name\":\"initializer\",\"type\":\"bytes\"},{\"name\":\"funder\",\"type\":\"address\"},{\"name\":\"paymentToken\",\"type\":\"address\"},{\"name\":\"payment\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "PayingProxy", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000ac6072986e985aabe7804695ec2d8970cf7541a200000000000000000000000000000000000000000000000000000000000000a000000000000000000000000007f455f30e862e13e3e3d960762cb11c4f744d520000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e788ddd56250000000000000000000000000000000000000000000000000000000000000001440ec78d9e0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000300000000000000000000000024989bf0d1a525099585abad06b65def6d8c001200000000000000000000000038b78470cb503ec9d31a05b439e23bc1dd6bddae000000000000000000000000d69c9a39d292447d34802e98e21ef46e867ca7820000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://07fffd557dfc8c4d2fdf56ba6381a6ce5b65b6260e1492d87f26c6d4f1d04108"}