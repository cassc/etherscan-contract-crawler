{"SourceCode": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n/*\r\n* Just a helper contract to fetch data for the UI\r\n* v0.0.1\r\n*/\r\ncontract Stats {\r\n\r\n    IStogies public stogies = IStogies(0xec6eD05f61E2e8230081eaD6362ebCf2AC505126);\r\n    IBadges public badges = IBadges(0xED9a438bD8E2F0e3F0Feb4DD397cBA4274609DBe);\r\n\r\n    struct BadeStats {\r\n        uint256[] ret;                // different stats, including balances, etc\r\n        IBadges.Badge[]  inventory;   // badges\r\n        string[]  uris;               // uris\r\n        uint256[]  ids;               // ids\r\n        IBadges.Badge[]  expInventory;// expired badges\r\n        string[]  expUris;            // uris of expired tokens\r\n        uint256[]  expIds;            // expired ids\r\n    }\r\n\r\n    struct Reserve {\r\n        uint112 token0;\r\n        uint112 token1;\r\n        address t0;\r\n        uint256 allowance;\r\n    }\r\n\r\n    function getStats(\r\n        address _user,\r\n        address[] calldata pools) external view returns (\r\n        uint256[] memory ret,\r\n        uint256[] memory cigdata,\r\n        address theCEO,\r\n        bytes32 graffiti,\r\n        uint112[] memory reserves,\r\n        BadeStats memory bs,       // data from idbadges.sol\r\n        Reserve[] memory r         // reserves info for each pool passed\r\n    ) {\r\n        (ret, cigdata, theCEO, graffiti, reserves) = stogies.getStats(_user);\r\n        (\r\n            bs.ret,\r\n            bs.inventory,\r\n            bs.uris,\r\n            bs.ids,\r\n            bs.expInventory,\r\n            bs.expUris,\r\n            bs.expIds) = badges.getStats(_user);\r\n        r = new Reserve[](pools.length);\r\n        for (uint256 i; i < pools.length; i++) {\r\n            (r[i].token0,r[i].token1,) = ILiquidityPool(pools[i]).getReserves();\r\n            r[i].t0 = ILiquidityPool(pools[i]).token0();\r\n            if (r[i].t0 == address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2)) {\r\n                r[i].allowance = IAllowance(ILiquidityPool(pools[i]).token1())\r\n                    .allowance(_user, address(stogies));\r\n            } else {\r\n                r[i].allowance = IAllowance(r[i].t0).allowance(_user, address(stogies));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IAllowance {\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n}\r\n\r\ninterface IStogies {\r\n    function getStats(address _user) external view returns (\r\n        uint256[] memory, // ret\r\n        uint256[] memory, // cigdata\r\n        address,          // theCEO\r\n        bytes32,          // graffiti\r\n        uint112[] memory  // reserves\r\n    );\r\n}\r\n\r\ninterface IBadges {\r\n    enum State {\r\n        Uninitialized,\r\n        Active,\r\n        PendingExpiry,\r\n        Expired\r\n    }\r\n    struct Badge {\r\n        address identiconSeed;   // address of identicon (the minter)\r\n        address owner;           // address of current owner\r\n        uint256 minStog;         // minimum stogies deposit needed\r\n        address approval;        // address approved for\r\n        uint64 transferAt;       // block id of when was the last transfer\r\n        uint64 index;            // sequential index in the wallet\r\n        State state;             // NFT's state\r\n    }\r\n    function getStats(\r\n        address _holder\r\n    ) view external returns (\r\n        uint256[] memory,           // different stats, including balances, etc\r\n        Badge[] memory inventory,   // badges\r\n        string[] memory uris,       // uris\r\n        uint256[] memory ids,       // ids\r\n        Badge[] memory expInventory,// expired badges\r\n        string[] memory expUris,    // uris of expired tokens\r\n        uint256[] memory expIds     // expired ids\r\n    );\r\n}\r\n\r\ninterface ILiquidityPool  {\r\n    function getReserves() external view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n}", "ABI": "[{\"inputs\":[],\"name\":\"badges\",\"outputs\":[{\"internalType\":\"contract IBadges\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"}],\"name\":\"getStats\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ret\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"cigdata\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"theCEO\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"graffiti\",\"type\":\"bytes32\"},{\"internalType\":\"uint112[]\",\"name\":\"reserves\",\"type\":\"uint112[]\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"ret\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"identiconSeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minStog\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"approval\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"transferAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"enum IBadges.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"struct IBadges.Badge[]\",\"name\":\"inventory\",\"type\":\"tuple[]\"},{\"internalType\":\"string[]\",\"name\":\"uris\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"identiconSeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minStog\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"approval\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"transferAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"enum IBadges.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"struct IBadges.Badge[]\",\"name\":\"expInventory\",\"type\":\"tuple[]\"},{\"internalType\":\"string[]\",\"name\":\"expUris\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"expIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct Stats.BadeStats\",\"name\":\"bs\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint112\",\"name\":\"token0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"token1\",\"type\":\"uint112\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"internalType\":\"struct Stats.Reserve[]\",\"name\":\"r\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stogies\",\"outputs\":[{\"internalType\":\"contract IStogies\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Stats", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://bc77ddd30a200f0fb1f6e131c4bcb79dde4001484e4be06a56c1ac9eba066f5f"}