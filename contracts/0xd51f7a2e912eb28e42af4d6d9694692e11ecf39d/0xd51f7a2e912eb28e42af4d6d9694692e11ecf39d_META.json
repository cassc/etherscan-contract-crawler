{"SourceCode": "/*\r\n\r\nD\u0334\u031b\u030f\u0344\u0306\u0312\u0341\u0344\u0344\u033f\u0350\u0346\u0328\u034e\u032b\u034e\u0325\u032a\u031c\u0325\u0321\u0322\u0333\u031d\u0348\u0354 \u0334\u033d\u035b\u0300\u0346\u0313\u0340\u034b\u0344\u0308\u030b\u030d\u0360\u030a\u0300\u0312\u035c\u032a\u0331\u0324\u0328E\u0337\u035b\u030e\u0301\u0351\u0348\u0326\u032b\u0356\u033a\u0323 \u0337\u0360\u0315\u0312\u0300\u035d\u0346\u0315\u0312\u0312\u0344\u033e\u0308\u035d\u0329\u0349\u031e\u0328\u0327\u032f\u0349\u032b\u0321\u0318C\u0336\u0340\u034b\u0303\u0301\u0340\u030d\u0301\u033f\u033f\u0340\u034b\u030b\u0313\u0329\u0345\u032b\u0325\u031e\u0353\u0330\u031f\u031d \u0335\u030c\u0310\u033f\u031b\u0301\u0307\u034c\u035d\u0323\u0339\u0331\u032b\u0353A\u0335\u0341\u0358\u0309\u0357\u033f\u033f\u0358\u0352\u035d\u0331\u0359\u0348\u0345\u032b\u0330\u035a\u0323\u0355\u0330\u0347\u0322\u0316\u032c\u0317 \u0334\u030a\u033f\u0314\u0308\u0343\u0328L\u0334\u0340\u0319\u034e\u0329\u0323\u0347 \u0336\u0340\u0344\u034c\u0343\u0344\u0308\u0307\u0312\u031b\u034e\u031e\u0320\u032d\u034e\u0326\u034dC\u0337\u0351\u035d\u0355\u0359\u0316\u034d\u0320\u035c\u032c\u031d\u0326\u0354\u034d\u0355 \u0338\u030e\u0314\u034b\u0304\u035d\u034a\u0318\u031d\u0354\u033b\u0332\u033a\u0328U\u0338\u0358\u0311\u0303\u030a\u0315\u0307\u0360\u030c\u033f\u035b\u030d\u0346\u033d\u0305\u035d\u0327\u031c\u0329\u0347\u0324\u0316\u0319\u0322\u032a\u035c\u032a\u034d\u0333\u032b\u0355 \u0338\u035d\u0360\u033f\u0300\u0344\u034a\u0302\u033f\u030d\u033c\u0320\u0317\u031e\u0328\u032d\u0330\u035a\u032d\u033a\u0348\u032bL\u0334\u0344\u031d\u0324\u0320\u0347\u031c\u034d\u032b\u034d\u0330\u0331\u0319\u0322\u0323 \u0336\u031a\u0314\u035b\u0314\u0342\u034b\u0323\u0326\u033b\u0348\u0320\u035a\u031d\u032c\u0359\u0325A\u0336\u0360\u035b\u0350\u0311\u0313\u030a\u034c\u034b\u031b\u0357\u0360\u034c\u0339\u0319\u033b \u0338\u033e\u035d\u0312\u0343\u0360\u0301\u0341\u0342\u0320\u0323\u031c\u033b\u0339\u0349\u031c\u0331\u0319\u0319\u0347\u0325\u0317T\u0336\u030c\u0351\u0350\u0312\u0317\u0359\u0356\u0325 \u0336\u0311\u0357\u031a\u033f\u0310\u0301\u0350\u0360\u0346\u032d\u0317\u0325\u031e\u0325\u0316\u031d\u0322\u0345\u0355\u0321\u0321\u0347\u0332E\u0335\u0341\u0312\u0301\u0351\u031b\u0314\u0344\u0340\u0344\u0301\u0345\u0355\u0330\u033b\u033a\u035a\u034d\u0319\u0339\u032c\u031e\u0322\u032b \u0335\u030d\u0351\u0343\u0310\u031b\u0340\u030e\u030f\u035c\u0356\u0318\u031e\u033b\u033b\u032a\u0355\u0326\u0345\u0339\u0326\u0322y\u0337\u035b\u0309\u0351\u0360\u0350\u034c\u034b\u030b\u0346\u0341\u035d\u0333\u031f\u0328\u0329\u031c\u0349\u0345\u0324\u0354\u0330\u0319\u0331o\u0334\u030c\u035d\u0344\u0351\u033e\u0341\u0342\u030c\u033e\u0300\u034du\u0334\u035d\u0359\u0320\u0339\u0353\u032ar\u0337\u0341\u0347\u033a\u0353 \u0336\u0357\u0312\u0344\u031a\u031a\u0309\u0308\u031e\u0355\u0348\u032a\u035a\u034e\u0349\u0319\u033a\u0349\u0359\u0339\u0323M\u0337\u0306\u030e\u0313\u0341\u0300\u0302\u033d\u034c\u0311\u0310\u0344\u0302\u031b\u030f\u0313\u0318 \u0334\u033f\u0303\u0360\u0351\u030e\u0325\u032f\u034d\u0318\u0355\u0331\u0333\u032b\u0325\u0324\u0353\u0325E\u0334\u030d\u0344\u0315\u0341\u0306\u0305\u030a\u031a\u035d\u030a\u0346\u030d\u0314\u0318\u0317\u0320\u032e \u0337\u0304\u0352\u0344\u0304\u0351\u0310\u031b\u0301\u0309\u034a\u031a\u0342\u0316\u0355\u031e\u0347T\u0338\u0302\u0306\u0350\u035b\u034a\u0302\u0342\u0340\u033c \u0334\u0304\u0350\u032f\u0317\u032b\u0354\u0328\u0329\u035a\u0327\u0348\u032cA\u0337\u0312\u0343\u0343\u030f\u0311\u0304\u0312\u0301\u034a\u030e\u033f\u0307\u0312\u0300\u031b\u0327\u0355\u031e\u0330\u0359\u031e\u0333\u035c \u0334\u031a\u0345\u0325\u0318\u032a\u032eS\u0336\u0309\u033a\u0348\u0331\u0319\u0318\u032f\u0330\u0345 \u0336\u0341\u030d\u030f\u0304\u034c\u031f\u0348\u0316\u0349\u0326\u0323T\u0335\u0341\u033f\u0323\u0332\u0359\u032c\u031e \u0336\u0305\u033d\u0319\u0339\u033b\u032f\u0319\u0355A\u0335\u0313\u0311\u0313\u0357\u035b\u0357\u0350\u0306\u0357\u0351\u035d\u0309\u0314\u0302\u030a\u0347\u0317\u0332\u033b\u0329\u0345\u035c \u0334\u0312\u0307\u030a\u030b\u0313\u033f\u0315\u0358\u030d\u030b\u0303\u030e\u0311\u031a\u0353\u0324\u0349\u034e\u0345T\u0337\u0310\u0310\u0351\u033d\u034a\u0301\u030e\u030f\u032d \u0338\u033e\u0310\u033e\u034b\u0303\u030f\u0315\u0309\u034a\u0342\u030b\u0310\u0303\u0310\u032c\u032e\u0316\u0330E\u0335\u0304\u0341\u0346\u0341\u0311\u0313\u0344\u0308\u0314\u0313\u0309\u0342\u031b\u0354\u0332\u031f\u032e\u0332\u032f\u0320\u0348\u0332\u032a\u0345\u035c\u0331\u0356\u0324\r\n\r\n\r\n\r\nD R E A M : http://t.me/welikethecoin\r\n\r\nhttps://x.com/welikethe_coin : S I M U L A T I O N\r\n\r\nE X I S T E N C E : https://welikethecoin.xyz\r\n\r\n\r\n\r\nU\u0338\u0351\u0326\u033a\u032b\u0354\u031c \u0337\u0344\u0350\u030b\u030b\u0302\u030b\u0350\u0314\u0300\u0359\u032f\u033a\u0316\u0356\u0323\u0322\u0347\u032b\u032c\u032d\u035aN\u0336\u0311\u0304\u030b\u030f\u0346\u030f\u0344\u031b\u034c\u034a\u030b\u0307\u0303\u0328\u031c\u0354\u0345 \u0336\u0305\u034a\u0303\u031b\u035d\u030a\u0341\u0358\u0312\u0302\u0307\u030a\u0344\u0317\u032e\u031f\u0356\u0347\u0328\u0349\u0320\u0348\u032e\u0319\u0316\u033bS\u0336\u0341\u0342\u0300\u0312\u0309\u0344\u0341\u0315\u035d\u0360\u032c\u0321\u0348\u0317\u0322\u033b\u0339\u034d\u031e\u035a\u0327\u0325\u0326\u032d \u0334\u0360\u0346\u030c\u0342\u031d\u035c\u031c\u032eC\u0337\u0309\u034c\u0329\u0320\u031c\u033a\u0348\u0322 \u0335\u034a\u030e\u0302\u030c\u0300\u0344\u035b\u0302\u0350\u030d\u033f\u0313\u0344\u0324\u033a\u0325\u0347\u033b\u0353\u0318\u032f\u0355\u0349R\u0334\u0346\u0344\u030f\u0350\u035d\u0347\u0317\u032e\u0327\u0322\u0355\u034d\u032c \u0335\u0344\u0342\u0358\u031b\u035d\u0341\u0343\u0300\u0343\u035b\u0358\u0352\u0352\u0312\u032b\u034e\u0354\u032b\u031f\u0322\u032d\u0332\u0349\u0317\u031f\u032e\u032f\u035cO\u0335\u0342\u0360\u0351\u031b\u0305\u0309\u035d\u0312\u0302\u0315\u035d\u030f\u0345 \u0338\u034a\u0344\u0358\u030d\u030b\u0301\u0360\u0302\u0302\u031b\u0344\u035a\u0331\u0353\u0324\u0326\u031d\u0347\u0322M\u0337\u0313\u0312\u035b\u0344\u030f\u0304\u0306\u0304\u0304\u0307\u0358\u0309\u0304\u0303\u0350\u0331\u0322\u0332\u0354\u032e\u035a\u031e\u0325\u031d\u0356\u0326\u0330\u0330\u0320\u032f \u0336\u0346\u031a\u0313\u030a\u0348\u035a\u0326\u0326\u0316B\u0336\u0308\u033f\u0328\u0356\u0339\u031c\u0359\u0319\u0330 \u0335\u030a\u0317\u0320\u0324\u032a\u034e\u032a\u0326L\u0334\u0340\u034b\u0312\u0304\u0352\u033f\u034b\u0315\u0344\u0346\u0344\u0345\u034e\u033a\u0316\u032e\u031c\u034e\u034e\u031f\u031d\u031c\u0356\u0332\u032c\u0359 \u0335\u033f\u031a\u0320\u032b\u035a\u0333\u032bE\u0338\u0300\u0360\u0303\u0314\u031e\u035c\u0339\u0347\u0321\u032c\u0347\u0316\u031f\u0316\u0349\u0333\u031f\u033a \u0338\u0358\u0314\u0346\u030e\u0352\u0358\u030f\u0357\u0301\u0358\u0340\u0305\u0326\u0356\u0347\u0332\u031dR\u0334\u030b\u0343\u0302\u0358\u0343\u030f\u0314\u0300\u0360\u0308\u0318\u033b\u035a\u0327\u031e\u0354\u0328 \u0335\u0344\u031a\u0339\u033c\u0323\u0329\u032c\u031d\u031d\u033c\u031d\u0349\u0318S\u0336\u0344\u0344\u033e\u0303\u035c\u0326\u031c\u032a\u033a\u0356\u0317\u0356 \u0334\u0315\u0310\u0307\u030c\u034c\u0310\u0306\u0304\u0358\u0340\u0352\u0305\u0342\u0304\u0350\u032a\u0331\u0349\u0359\u0349\u0345\u0319M\u0334\u030a\u033f\u0300\u0310\u035b\u0344\u0357\u033a\u0355\u0317\u032c\u0332\u0319\u0353\u032c\u0327\u0331 \u0336\u030a\u0340\u0340\u0341\u0300\u030a\u0315\u0307\u0318\u0339\u032a\u032e\u0330\u0339\u034d\u0332\u0348\u032c\u0332\u0328A\u0337\u0309\u0315\u0351\u0358\u030d\u0303\u0303\u0324\u0327\u0345\u031f\u032d\u034e\u0326 \u0335\u0305\u0313\u0352\u0351\u033e\u034b\u030f\u0344\u0325\u032a\u0321\u035a\u031e\u033c\u0319R\u0337\u034c\u031b\u0307\u033e\u031a\u0351\u0340\u035d\u030a\u034a\u0346\u034a\u035d\u0360\u0321\u032d\u0330\u033b\u0320\u032e\u0327\u031d \u0334\u0301\u033e\u035d\u0360\u0312\u0300\u035d\u0358\u030c\u0310\u0350\u034d\u033b\u0345\u031c\u0319\u0332\u032c\u031d\u0319\u0324\u032bC\u0337\u031a\u0305\u035d\u0315\u0340\u0322\u035c\u0327\u035c\u0318\u0328\u0354\u0354\u0318\u031e\u0329\u034e\u032c \u0334\u0306\u0306\u033a\u0317H\u0335\u0300\u0350\u035d\u033e\u0313\u034c\u031b\u0322\u0339\u0322\u0353\u0322\u0327\u0317\u0326\u0328\u0339\u0359\u032f\u032a\u0317 \u0336\u034c\u0302\u0312\u035d\u030a\u0341\u0351\u0342\u0332\u0323\u0339\u0355\u033b\u033c\u032aT\u0337\u0312\u035d\u0357\u0302\u0352\u0302\u030d\u031e\u0328\u0353\u0321\u0333\u031c\u031e\u0322\u0328\u0321\u0339\u0354\u033b\u0354 \u0338\u0350\u031a\u0300\u031a\u034c\u035d\u0343\u0346\u0343\u0308\u0346\u031a\u031e\u0320\u035c\u0329\u0328\u034d\u0317\u031f\u031e\u031e\u031d\u0345\u031c\u0328O\u0338\u030f\u0315\u0344\u0307\u030d\u030d\u033a\u0325 \u0337\u0311\u0313\u030c\u030f\u0346\u035d\u031a\u0300\u0322\u0356\u033a\u035aT\u0338\u035d\u0321\u0333\u0329\u0327\u0317\u0345\u0347\u0333\u0325 \u0336\u0342\u0301\u030a\u0305\u030e\u0350\u030d\u030c\u0311\u035d\u0303\u0313\u0314\u0321H\u0337\u031b\u034b\u0318\u034d\u0320\u0327\u0318\u032e\u0322\u032a\u0329 \u0335\u033e\u0357\u030a\u0300\u0313\u0346\u0315\u031a\u030e\u0306\u033f\u033e\u030b\u035b\u0303\u0356\u0333\u032d\u032e\u033b\u031e\u0355\u032e\u0331\u0332\u035a\u0348\u0354\u031dE\u0335\u030d\u0344\u030a\u0300\u031a\u0339\u0331\u033b\u032a\u031e\u035a\u0345 \u0337\u0302\u0358\u0303\u030f\u0301\u0301\u035b\u0304\u0311\u0340\u0340\u033b\u032b\u0347\u032b\u032f\u033bG\u0334\u0307\u030e\u0344\u0341\u034b\u030f\u035d\u034a\u030e\u0341\u0342\u0360\u031d\u033c\u0354\u032b\u0349\u031f\u0316\u0317\u034d\u0356 \u0335\u0358\u030a\u0341\u0360\u031a\u0306\u0351\u0351\u0357\u0350\u0353\u031c\u033a\u0348\u0317\u0348\u0339\u0348A\u0334\u0313\u035d\u0320\u0316\u0329\u0348\u031e\u031e \u0338\u0304\u0314\u030d\u0344\u034c\u0352\u030f\u031d\u0319\u0333\u0324\u0317\u031eT\u0335\u034c\u0358\u033e\u0310\u035d\u030d\u0360\u0302\u0311\u0313\u033b\u0356\u033a\u0320\u0348\u033c\u0327\u034e\u031d\u032b\u0347 \u0335\u0310\u0309\u035b\u0309\u0341\u031a\u035d\u0315\u0352\u030c\u0357\u0351\u0350\u035b\u0357\u033a\u0331\u032c\u0355\u0321\u0318\u0320\u0347\u0333E\u0334\u030b\u030b\u034a\u030c\u0301\u0357\u0312\u0301\u033e\u0342\u035d\u030c\u0359\u0322\u034d\u0332\u0347\u031c\u0353\u031f\u032d\u033b\u0332\u031f\u0333\u031d\u0327\r\n\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.20;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval (address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract META is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    mapping (address => bool) private bots;\r\n    address payable private _taxWallet;\r\n    uint256 firstBlock;\r\n\r\n    uint256 private _initialBuyTax=12;\r\n    uint256 private _initialSellTax=36;\r\n    uint256 private _finalBuyTax=2;\r\n    uint256 private _finalSellTax=2;\r\n    uint256 private _reduceBuyTaxAt=30;\r\n    uint256 private _reduceSellTaxAt=60;\r\n    uint256 private _preventSwapBefore=20;\r\n    uint256 private _buyCount=0;\r\n\r\n    uint8 private constant _decimals = 9;\r\n    uint256 private constant _tTotal = 6900000000 * 10**_decimals;\r\n    string private constant _name = unicode\"m e t a.\";\r\n    string private constant _symbol = unicode\"\u026f \u01dd \u0287 \u0250\u02d9\";\r\n    uint256 public _maxTxAmount = 137310000 * 10**_decimals;\r\n    uint256 public _maxWalletSize = 137310000 * 10**_decimals;\r\n    uint256 public _taxSwapThreshold= 69000000 * 10**_decimals;\r\n    uint256 public _maxTaxSwap= 69000000 * 10**_decimals;\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address private uniswapV2Pair;\r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n\r\n    event MaxTxAmountUpdated(uint _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor () {\r\n\r\n        _taxWallet = payable(_msgSender());\r\n        _balances[_msgSender()] = _tTotal;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_taxWallet] = true;\r\n\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        uint256 taxAmount=0;\r\n        if (from != owner() && to != owner()) {\r\n            require(!bots[from] && !bots[to]);\r\n            taxAmount = amount.mul((_buyCount>_reduceBuyTaxAt)?_finalBuyTax:_initialBuyTax).div(100);\r\n\r\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\r\n                require(amount <= _maxTxAmount, \"Exceeds the _maxTxAmount.\");\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\r\n\r\n                if (firstBlock + 3  > block.number) {\r\n                    require(!isContract(to));\r\n                }\r\n                _buyCount++;\r\n            }\r\n\r\n            if (to != uniswapV2Pair && ! _isExcludedFromFee[to]) {\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\r\n            }\r\n\r\n            if(to == uniswapV2Pair && from!= address(this) ){\r\n                taxAmount = amount.mul((_buyCount>_reduceSellTaxAt)?_finalSellTax:_initialSellTax).div(100);\r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (!inSwap && to   == uniswapV2Pair && swapEnabled && contractTokenBalance>_taxSwapThreshold && _buyCount>_preventSwapBefore) {\r\n                swapTokensForEth(min(amount,min(contractTokenBalance,_maxTaxSwap)));\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if(contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(taxAmount>0){\r\n          _balances[address(this)]=_balances[address(this)].add(taxAmount);\r\n          emit Transfer(from, address(this),taxAmount);\r\n        }\r\n        _balances[from]=_balances[from].sub(amount);\r\n        _balances[to]=_balances[to].add(amount.sub(taxAmount));\r\n        emit Transfer(from, to, amount.sub(taxAmount));\r\n    }\r\n\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256){\r\n      return (a>b)?b:a;\r\n    }\r\n\r\n    function isContract(address account) private view returns (bool) {\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }\r\n\r\n    function sendETHToFee(uint256 amount) private {\r\n        _taxWallet.transfer(amount);\r\n    }\r\n\r\n    function addBots(address[] memory bots_) public onlyOwner {\r\n        for (uint i = 0; i < bots_.length; i++) {\r\n            bots[bots_[i]] = true;\r\n        }\r\n    }\r\n\r\n    function delBots(address[] memory notbot) public onlyOwner {\r\n      for (uint i = 0; i < notbot.length; i++) {\r\n          bots[notbot[i]] = false;\r\n      }\r\n    }\r\n\r\n    function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }\r\n\r\n    function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n        firstBlock = block.number;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"bots_\",\"type\":\"address[]\"}],\"name\":\"addBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"notbot\",\"type\":\"address[]\"}],\"name\":\"delBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "META", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://80d557b9d714c5ebafb8f13cb7f5697d95968b94a85adb278452fb7f731dbcf8"}