{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/wsteth-exchange-rate-adapter/WstEthStEthExchangeRateChainlinkAdapter.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity 0.8.21;\\n\\nimport {IStEth} from \\\"./interfaces/IStEth.sol\\\";\\nimport {MinimalAggregatorV3Interface} from \\\"./interfaces/MinimalAggregatorV3Interface.sol\\\";\\n\\n/// @title WstEthStEthExchangeRateChainlinkAdapter\\n/// @author Morpho Labs\\n/// @custom:contact security@morpho.org\\n/// @notice wstETH/stETH exchange rate price feed.\\n/// @dev This contract should only be deployed on Ethereum and used as a price feed for Morpho oracles.\\ncontract WstEthStEthExchangeRateChainlinkAdapter is MinimalAggregatorV3Interface {\\n    /// @inheritdoc MinimalAggregatorV3Interface\\n    // @dev The calculated price has 18 decimals precision, whatever the value of `decimals`.\\n    uint8 public constant decimals = 18;\\n\\n    /// @notice The description of the price feed.\\n    string public constant description = \\\"wstETH/stETH exchange rate\\\";\\n\\n    /// @notice The address of stETH on Ethereum.\\n    IStEth public constant ST_ETH = IStEth(0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84);\\n\\n    /// @inheritdoc MinimalAggregatorV3Interface\\n    /// @dev Returns zero for roundId, startedAt, updatedAt and answeredInRound.\\n    /// @dev Silently overflows if `getPooledEthByShares`'s return value is greater than `type(int256).max`.\\n    function latestRoundData() external view returns (uint80, int256, uint256, uint256, uint80) {\\n        // It is assumed that `getPooledEthByShares` returns a price with 18 decimals precision.\\n        return (0, int256(ST_ETH.getPooledEthByShares(1 ether)), 0, 0, 0);\\n    }\\n}\\n\"\r\n    },\r\n    \"src/wsteth-exchange-rate-adapter/interfaces/IStEth.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\ninterface IStEth {\\n    function getPooledEthByShares(uint256) external view returns (uint256);\\n}\\n\"\r\n    },\r\n    \"src/wsteth-exchange-rate-adapter/interfaces/MinimalAggregatorV3Interface.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0;\\n\\n/// @dev Inspired by\\n/// https://github.com/smartcontractkit/chainlink/blob/master/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\n/// @dev This is the minimal feed interface required by `MorphoChainlinkOracleV2`.\\ninterface MinimalAggregatorV3Interface {\\n    /// @notice Returns the precision of the feed.\\n    function decimals() external view returns (uint8);\\n\\n    /// @notice Returns Chainlink's `latestRoundData` return values.\\n    /// @notice Only the `answer` field is used by `MorphoChainlinkOracleV2`.\\n    function latestRoundData()\\n        external\\n        view\\n        returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\r\n      \"ds-test/=lib/forge-std/lib/ds-test/src/\",\r\n      \"erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"morpho-blue/=lib/morpho-blue/\",\r\n      \"openzeppelin-contracts/=lib/openzeppelin-contracts/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 999999\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"paris\",\r\n    \"viaIR\": true,\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"ST_ETH\",\"outputs\":[{\"internalType\":\"contract IStEth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "WstEthStEthExchangeRateChainlinkAdapter", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "1", "Runs": "999999", "ConstructorArguments": "", "EVMVersion": "paris", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}