{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Presale {\r\n    address public owner;\r\n    uint256 public maxCap;\r\n    uint256 public currentAmount;\r\n    mapping(address => bool) public whitelistedAddresses;\r\n    mapping(address => uint256) public contributions;\r\n    mapping(address => bool) public hasContributed;\r\n\r\n    event Contribution(address indexed contributor, uint256 amount);\r\n    event Withdrawal(address indexed receiver, uint256 amount);\r\n    event Whitelisted(address indexed user, bool status);\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n        maxCap = 15 ether;\r\n        currentAmount = 0;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyWhitelisted() {\r\n        require(whitelistedAddresses[msg.sender] == true, \"Your address is not whitelisted\");\r\n        _;\r\n    }\r\n\r\n    modifier withinCap(uint256 _amount) {\r\n        require(currentAmount + _amount <= maxCap, \"Amount exceeds the maximum cap\");\r\n        _;\r\n    }\r\n\r\n    modifier validContribution(uint256 _amount) {\r\n        require(_amount >= 0.25 ether && _amount <= 0.5 ether, \"Contribution should be between 0.25 and 0.5 ETH inclusive\");\r\n        _;\r\n    }\r\n\r\n    modifier firstContribution() {\r\n        require(!hasContributed[msg.sender], \"You can only contribute once\");\r\n        _;\r\n    }\r\n\r\n    function whitelistAddresses(address[] memory _addresses, bool _status) public onlyOwner {\r\n        for (uint i = 0; i < _addresses.length; i++) {\r\n            whitelistedAddresses[_addresses[i]] = _status;\r\n            emit Whitelisted(_addresses[i], _status);\r\n        }\r\n    }\r\n\r\n    function contribute() public payable onlyWhitelisted withinCap(msg.value) validContribution(msg.value) firstContribution {\r\n        contributions[msg.sender] += msg.value;\r\n        currentAmount += msg.value;\r\n        hasContributed[msg.sender] = true;\r\n        emit Contribution(msg.sender, msg.value);\r\n    }\r\n\r\n    function withdraw() public onlyOwner {\r\n        uint256 amount = address(this).balance;\r\n        payable(owner).transfer(amount);\r\n        emit Withdrawal(owner, amount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasContributed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"whitelistAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Presale", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://8b663bd5223b1201d701b17a23078eabe436ae169d569fdbc4d0ffbbc72e515a"}