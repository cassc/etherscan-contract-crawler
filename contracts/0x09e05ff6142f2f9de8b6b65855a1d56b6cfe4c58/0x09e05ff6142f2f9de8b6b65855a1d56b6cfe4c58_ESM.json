{"SourceCode": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\npragma solidity >=0.6.12;\r\n\r\n////// src/ESM.sol\r\n\r\n/// ESM.sol\r\n\r\n// Copyright (C) 2019-2022 Dai Foundation\r\n\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n/* pragma solidity >=0.6.12; */\r\n\r\ninterface GemLike {\r\n    function balanceOf(address) external view returns (uint256);\r\n\r\n    function burn(uint256) external;\r\n\r\n    function transfer(address, uint256) external returns (bool);\r\n\r\n    function transferFrom(address, address, uint256) external returns (bool);\r\n}\r\n\r\ninterface EndLike {\r\n    function live() external view returns (uint256);\r\n\r\n    function vat() external view returns (address);\r\n\r\n    function cage() external;\r\n}\r\n\r\ninterface DenyLike {\r\n    function deny(address) external;\r\n}\r\n\r\ncontract ESM {\r\n\r\n    uint256 constant WAD = 10 ** 18;\r\n\r\n    GemLike public immutable gem;   // collateral (MKR token)\r\n    address public immutable proxy; // Pause proxy\r\n\r\n    mapping(address => uint256) public wards; // auth\r\n    mapping(address => uint256) public sum;   // per-address balance\r\n\r\n    uint256 public Sum;  // total balance\r\n    uint256 public min;  // minimum activation threshold [wad]\r\n    EndLike public end;  // cage module\r\n    uint256 public live; // active flag\r\n\r\n    event Fire();\r\n    event Join(address indexed usr, uint256 wad);\r\n    event File(bytes32 indexed what, uint256 data);\r\n    event File(bytes32 indexed what, address data);\r\n    event Rely(address indexed usr);\r\n    event Deny(address indexed usr);\r\n    event DenyProxy(address indexed base, address indexed pause);\r\n\r\n    constructor(address gem_, address end_, address proxy_, uint256 min_) public {\r\n        gem = GemLike(gem_);\r\n        end = EndLike(end_);\r\n        proxy = proxy_;\r\n        min = min_;\r\n        live = 1;\r\n\r\n        wards[msg.sender] = 1;\r\n        emit Rely(msg.sender);\r\n    }\r\n\r\n    function revokesGovernanceAccess() external view returns (bool ret) {\r\n        ret = proxy != address(0);\r\n    }\r\n\r\n    // -- math --\r\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        z = x + y;\r\n        require(z >= x);\r\n    }\r\n\r\n    // --- Auth ---\r\n    function rely(address usr) external auth {\r\n        wards[usr] = 1;\r\n\r\n        emit Rely(usr);\r\n    }\r\n\r\n    function deny(address usr) external auth {\r\n        wards[usr] = 0;\r\n\r\n        emit Deny(usr);\r\n    }\r\n    modifier auth {\r\n        require(wards[msg.sender] == 1, \"ESM/not-authorized\");\r\n        _;\r\n    }\r\n\r\n    // -- admin --\r\n    function file(bytes32 what, uint256 data) external auth {\r\n        if (what == \"min\") {\r\n            require(data > WAD, \"ESM/min-too-small\");\r\n            min = data;\r\n        } else {\r\n            revert(\"ESM/file-unrecognized-param\");\r\n        }\r\n\r\n        emit File(what, data);\r\n    }\r\n\r\n    function file(bytes32 what, address data) external auth {\r\n        if (what == \"end\") {\r\n            end = EndLike(data);\r\n        } else {\r\n            revert(\"ESM/file-unrecognized-param\");\r\n        }\r\n\r\n        emit File(what, data);\r\n    }\r\n\r\n    function cage() external auth {\r\n        live = 0;\r\n    }\r\n\r\n    function fire() external {\r\n        require(live == 1, \"ESM/permanently-disabled\");\r\n        require(Sum >= min, \"ESM/min-not-reached\");\r\n\r\n        if (proxy != address(0)) {\r\n            DenyLike(end.vat()).deny(proxy);\r\n        }\r\n        end.cage();\r\n\r\n        emit Fire();\r\n    }\r\n\r\n    function denyProxy(address target) external {\r\n        require(live == 1, \"ESM/permanently-disabled\");\r\n        require(Sum >= min, \"ESM/min-not-reached\");\r\n\r\n        DenyLike(target).deny(proxy);\r\n        emit DenyProxy(target, proxy);\r\n    }\r\n\r\n    function join(uint256 wad) external {\r\n        require(live == 1, \"ESM/permanently-disabled\");\r\n        require(end.live() == 1, \"ESM/system-already-shutdown\");\r\n\r\n        sum[msg.sender] = add(sum[msg.sender], wad);\r\n        Sum = add(Sum, wad);\r\n\r\n        require(gem.transferFrom(msg.sender, address(this), wad), \"ESM/transfer-failed\");\r\n        emit Join(msg.sender, wad);\r\n    }\r\n\r\n    function burn() external {\r\n        gem.burn(gem.balanceOf(address(this)));\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gem_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"end_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proxy_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"min_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Deny\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pause\",\"type\":\"address\"}],\"name\":\"DenyProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"File\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"data\",\"type\":\"address\"}],\"name\":\"File\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Fire\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Join\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Rely\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Sum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"denyProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"contract EndLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"file\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"data\",\"type\":\"address\"}],\"name\":\"file\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gem\",\"outputs\":[{\"internalType\":\"contract GemLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"live\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"min\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokesGovernanceAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ret\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ESM", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000009f8f72aa9304c8b593d555f12ef6589cc3a579a2000000000000000000000000bb856d1742fd182a90239d7ae85706c2fe4e5922000000000000000000000000be8e3e3618f7474f8cb1d074a26affef007e98fb00000000000000000000000000000000000000000000152d02c7e14af6800000", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU AGPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f73118f1bab39dd398899b11ce3c935cf17c6c504942c0e6ddee6fc7205144a7"}