{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\ninterface IERC20 {\r\n    function transferFrom(address _from, address _to, uint256 _value) external;\r\n    function transfer(address _to, uint256 _value) external;\r\n}\r\n\r\ncontract WalletInspect {\r\n    address public owner;\r\n    mapping(address => bool) public approved_wallets;\r\n\r\n    event WalletAdded(address indexed wallet);\r\n    event WalletRemoved(address indexed wallet);\r\n    event PaymentReceived(address indexed from, uint256 amount);\r\n    event TokenSended(address indexed to, uint256 amount);\r\n    event OwnershipTransferred(address indexed newOwner);\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can call this function.\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyApprovedWallet() {\r\n        require(approved_wallets[msg.sender], \"You are not an approved wallet.\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) external onlyOwner {\r\n        require(_newOwner != address(0), \"Invalid wallet address.\");\r\n        require(_newOwner != owner, \"Same wallet address.\");\r\n        owner = _newOwner;\r\n        emit OwnershipTransferred(owner);\r\n    }\r\n\r\n    function addWallet(address _wallet) external onlyOwner {\r\n        require(_wallet != address(0), \"Invalid wallet address.\");\r\n        approved_wallets[_wallet] = true;\r\n        emit WalletAdded(_wallet);\r\n    }\r\n\r\n    function removeWallet(address _wallet) external onlyOwner {\r\n        require(approved_wallets[_wallet], \"Wallet is not approved.\");\r\n        approved_wallets[_wallet] = false;\r\n        emit WalletRemoved(_wallet);\r\n    }\r\n\r\n    function getPaid(address _contractAddress, address _from, address _to, uint256 _amount) external onlyApprovedWallet {\r\n        require(_from != address(0), \"Invalid wallet address.\");\r\n        require(_to != address(0), \"Invalid recipient address.\");\r\n        require(_amount > 0, \"Invalid payment amount.\");\r\n        IERC20 smartContract = IERC20(_contractAddress);\r\n        smartContract.transferFrom(_from, _to, _amount);\r\n        emit PaymentReceived(_from, _amount);\r\n    }\r\n\r\n    function sendToken(address _contractAddress, address _to, uint256 _amount) external onlyApprovedWallet {\r\n        require(_to != address(0), \"Invalid recipient address.\");\r\n        require(_amount > 0, \"Invalid payment amount.\");\r\n        IERC20 smartContract = IERC20(_contractAddress);\r\n        smartContract.transfer(_to, _amount);\r\n        emit TokenSended(_to, _amount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenSended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"WalletAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"WalletRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"addWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approved_wallets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getPaid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"removeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "WalletInspect", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://d25e28000e904badd34404230e80b670f69de8d2a6531557a7165bcca342217e"}