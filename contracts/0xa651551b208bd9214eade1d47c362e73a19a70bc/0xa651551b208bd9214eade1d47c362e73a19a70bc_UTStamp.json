{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/**\r\n * @title UTStamp\r\n */\r\ncontract UTStamp {\r\n    address public owner;\r\n\r\n    string public stamp;\r\n\r\n    event StampCommit(string indexed stampIndex, string stamp);\r\n\r\n    modifier isOwner() {\r\n        require(msg.sender == owner, \"Caller is not owner\");\r\n        _;\r\n    }\r\n\r\n    modifier validate(string memory newStamp) {\r\n        require(bytes(newStamp).length == 64, \"stamp length should be 64\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function commitStamp(string memory newStamp)\r\n        public\r\n        isOwner\r\n        validate(newStamp)\r\n    {\r\n        emit StampCommit(newStamp, newStamp);\r\n        stamp = newStamp;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"stampIndex\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stamp\",\"type\":\"string\"}],\"name\":\"StampCommit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newStamp\",\"type\":\"string\"}],\"name\":\"commitStamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stamp\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "UTStamp", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://23d73f8d2bb91b0faf6f0333225a49c097a140cdc8138ded9a38807aa3d09c9e"}