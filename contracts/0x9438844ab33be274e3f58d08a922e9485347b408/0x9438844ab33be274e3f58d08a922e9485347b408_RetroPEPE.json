{"SourceCode": "/**\r\n *Submitted for verification at Etherscan.io on 2023-10-19\r\n*/\r\n\r\n/**\r\n//..................................................................................................................................................................................\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//....R.RRRRRR.RRR.RRRRRRE..E...EEEE..EEEE.EE..TT...TTTTTT.TTTT.RRRRRRRRRR.R.RR..RRRROOOO.O.OOOOOOOOOOOOO.OOppp...p.p..pppp.pppeeeee..eeeee.eeeepppp..p.p.pppp.p.p.eeeeeeee.eeeeee..\r\n//..RRRRRRRRRRRRRRRRRR..REEEEEEEEEEEEEEEEEEEETTTTTTTTTTTTTTTTTTRRRRRRRRRRRRRRRRRR....OO.OOOOOOOOOOOOOOO..OOO..ppp..pppppppppp.peeeeeeee...ee.eeepp..p..pp.pppppp.pe.e..e.e..e.e.ee..\r\n//.R.RRRRRRRRRRRRRRRRR..REEEEEEEEEEEEEEEEEEEETTTTTTTTTTTTTTTTTT.RRRRRRRRRRRRRRRRRRRRROOO.OOOOOOOOOOOOOOO..O...pp..ppppp.ppp..ppe..eeee.eeee..e..p.ppppp.ppp..ppp.p.ee.e..ee.eeeeee..\r\n//.RRRRRRRRRRRRRRRRRRRRR..EEEEEEEEEEEEEEEEEEETTTTTTTTTTTTTTTTTT.RRRRRRRRRRRRRRRRRRRRRO.OOOOOOOOOOOOOOOOOOO.O..pp...ppp.pppp.p.p.eee.ee..e.eeee.epppp.pp...p..pppppee.e.e.eee.eeeee..\r\n//.R.RRRRRRRRRRRRRRRRRRRREEEEEEEEEEEEEEEEEEE.TTTTTTTTTTTTTTTTTTRRRRRRRRRRRRRRRRRRRRRROOOOOOOOOOOOOOOOOOOOOOOpp.p.pp..pp..p..pppe...eeeee.e.e..eep..p.ppp.....ppppp.eee.e.eee....e...\r\n//..RRRRRRRRRRRRRRRRRRRRREEEEEEEEEEEEEEEEEEEETTTTTTTTTTTTTTTTTT.RRRRRRRRRRRRRRRRRRR.ROOOOOOOOOO.O.OOOOOOOOO.pp.ppp.p.ppp.p..ppp.e.e.e....e.eeeeepppp.ppp.p.p.p.p.peeeeeeee..ee.eee..\r\n//.R.RRRRR.RRRRR.RRRRRRRR.EEEEEEE..E.EE..EEE.TT.TTTTTTTTT.TTT.TRRRRRRRRRR.R.RRRRRRRR.OOOOOOOOOO..O..OOOOOOOO.ppppppppppppp.pp.pee..eeeeeeeeeee.eppppp.ppppppp.p.ppee..eeeeeeee.eee..\r\n//...RRRRRRR.RRR..RRRRRRREEEEEEEE.EE.EEE.EEE..TTTTTTTTTTTTTTT.TRRRRRRR..RR.R.RRRRRRRROOOOOOOOO..OO.OOOOOOOOO.pppppppppppppp.p..e.eeeeeeeeeee.ee.pppppppppppppppp.pe.eeeeeeeeeee.e...\r\n//.RRRRRRR...R.RRRRRRRRR..EEEEEE.E.E.EE..EEEE..T.TTTTTTTT.T.T.TR.RRRRRR..RR.RRRRRRRRROOOOOOOOO...OO.OOOOOOO.pppppppppppppppppppeeeeeeeeeeeeeee.epppppppppppppppp...eeeeeeeeeeeeeee..\r\n//.RRRRRRRRRRRR..RRRRRRRR.EEEEEEEEEEEEEEEEEE.TT....TTTTTTTTTT...RRRRRR.RR.RRRRRRRRR.ROOOOOOOO.OO.O.O.OOOOOOOpppppppppppppppppppeeeeeeeeeeeeeeee.pppppppppppppppppp.eeeeeeeeeeeeeee..\r\n//.R.RRRRRRRRRRRRRRRRRRR.EEEEEEEEEEEEEEEEEE.ETTTTT.TTTTTTTT.TT.RRRRRRRRRRRRRRRRRRRR..OOOOOOOO.OO.OOO..OOOOOOppppppppppppppppp..eeeeeeeeeeeeeeee.ppppppppppppppppp.eeeeeeeeeeeeeee...\r\n//.RRRRRRRRRRRRRRRRRRRRR.EEEEEEEEEEEEEEEEEEEE.TT...TTTTTTTT.TTTRRRRRRRRRRRRRRRRRRRRRR.OOOOOO..OOO.OO.OOOOOOOppppppppp.pppppppp.eeeeee.e.eeeeeeeeppppppp...ppppppp.eeeeeeeeeeeeeeee..\r\n//..RRRRRRRRRRRRRRRRRR.RREEEEEEEEEEEEEEEEEE.ETTTT.TTTTTTT.TTT.T.RRRRRRRRRRRRRRRRRRR.ROOOOOOOOO.O.O.OO.OOOOOOpppppppp..p.pppppp.eeeeee.e.eeeeeee.ppppppppppppppppppeeeee....eeeeeee..\r\n//..RRRRRRRRRRRRRRRRRRR.REEEEEEEEEEEEEEEEEEEE.TTT.TTTTTTTT.TTTT.RRRRRRRRRRRRRRRRRR.RROOOOOOOOOO.OOOOOOOOOOOO.ppppppp..p.pppppppeeeeeeeeeeeeeeee.ppppppppppppppppppeeeeeeeeeeeeeeee..\r\n//.R.RRRRRRRRRRRRRRRRRRRR.EEEEEEE.EEEEE.E..EETTTTT.TTTTTTT..T..RRRRRRRRRRRRRRRRRRRRRROOOOOOOOOOO.O.OOOOOOOOO.ppppppp..pppppppppeeeeeeeeeeeeeeeeeppppppp..pppppppppeeeeeeeeeeeeeeee..\r\n//..RRRRRRRRRRRRRRRRRRRRREEEEEEEEEEE.EEE.EEEE..TTTTTTTTTTT..T.TR.RRRRRR.RRRRRRRRRRR..OOOOOOOOOOOO.OOOOOOOOOO.ppppppp.p.ppppppppeeeeeeeeeeeeeeee.ppppppp.ppppppppppeeeeeeeeeeeeeeee..\r\n//...RRRRRRR.R..RRRRRRRR..EEEEEEE.EEEE.EEE.EETTTTTTTTTTTTTTTTT.RRRRRRR.RR.R.RRRRRRRRROOOOOOOOOO.O.O.OOOOOOOOpppppppppppppppppppeeeeeeeeeeeeeeee.pppppp.pp..pppppppeeeeeeeeeeeeeeee..\r\n//.R.RRRRRR....RRRRRRRRRREEEEEEE.EEEEEEE.E.E.T..TTTTTTTTTT.....RRRRRRRRR.RRRRRRRRRRR..OOOOOOOOO....OOOOOOOOOpppppppp.p.ppppppp.eeeeee.ee.eeeeee.ppppppp..pppppppp.eeeeee.eeeeeeee...\r\n//.R.RRRRR.RRRRRRRRRRRR.R.EEEEEEEEEEEEEEEEEE.TT.T.TTTTTTTTTTTTTR.RRRRRRRR.R..RRRRRR.R..OOOOOOOO..OOOOOOOOOOOpppppppppppppppppp.eeeeeeee.eeeeeeeepppppppp.pppppppppeeeeeeeeeeeeeeee..\r\n//.RRRRRRRRR.R.RRRRRRRRRREEEEEEEEEEEEEEEEEEE.TTTTTTTTTTTT.TT..T.RRRRRRRRRR.R.RRRRRR.ROOOOOOOOOOOOOOOOOOOOO.Oppppppppppppppppp.peeeeeeeeeeeeeeeeeppppppppppppppppp.eeeeeeeeeeeeeee...\r\n//...RRRRR...RRR.RRRRRRRREEEEEEEEEEEEEEEEEEEE.TTTT.TTTTTTTTTTTTRRRRRRRRRR.RR.RRRRRRRRO.OOOOOOOOOOOOOOOOOO.OOppppppppppppppppp...eeeeeeeeeeeeee.epppppppppppppppp.peeeeeeeeeeeeeeee..\r\n//.RRRRRRRRR.R..RRRRRRRRREEEEEEEEEEEEEEEEEEE.TTTT.TTTTTTTT.TT.T..RRRRRR.RRRRRRRRRRRRROOO.OOOOOOOOOOOOOOOOOOO.ppppppppppppppppp.eeeeeeeeeeeeeeeeeppppppppppppppp.pp.eeeeeeeeeeeee.e..\r\n//.RRRRRRRRR....RRRRRRRR.EEEEEEEEEEEEEEEEEEEETTTTT.TTTTTTTTTTT.R.RRRRRRR..R..RRRRRRRR..O.OOOOOOOOOOOOOOOO..Opppppppppppppppppppeeeeeeeeeeeeee.eeppppppppppppppppppe.eeeeeeeeeeeeee..\r\n//...RRR..RR.R.RRRRRRRRRR.EE.E.EE.EEE.EEE.E.E.TTT.TTT.TTTTT.TTT.RRR.RR.RRRRRRRR.R.RRRO.OO..OOOOOOOOOOO.OOOOOppppppppppppp.pppppe..eeeeeeee.eeeeeppppppppppppppp..peeeeeeeeeee.e.e...\r\n//.RR.RR.R.RRRRRRRRRRRRRREEEEEEE.E..EEE.EEEEET.T..T.TTTT.TTTTTTR.RRRRRRRR..R.RRRRRRRRO...OOOOO.O.OOOO.OO.O.Oppppppppp.pppppp...eee.e....eeeee.eeppppppp.ppp.ppppppe..eeeeeeee.eeee..\r\n//.RR.RR.R.RRRRRRRRRRRRRREEEEEEE.E..EEE.EEEEET.T..T.TTTT.TTTTTTR.RRRRRRRR..R.RRRRRRRRO...OOOOO.O.OOOO.OO.O.Oppppppppp.pppppp...eee.e....eeeee.eeppppppp.ppp.ppppppe..eeeeeeee.eeee..\r\n//.RR.RR.R.RRRRRRRRRRRRRREEEEEEE.E..EEE.EEEEET.T..T.TTTT.TTTTTTR.RRRRRRRR..R.RRRRRRRRO...OOOOO.O.OOOO.OO.O.Oppppppppp.pppppp...eee.e....eeeee.eeppppppp.ppp.ppppppe..eeeeeeee.eeee..\r\n//.RR.RR.R.RRRRRRRRRRRRRREEEEEEE.E..EEE.EEEEET.T..T.TTTT.TTTTTTR.RRRRRRRR..R.RRRRRRRRO...OOOOO.O.OOOO.OO.O.Oppppppppp.pppppp...eee.e....eeeee.eeppppppp.ppp.ppppppe..eeeeeeee.eeee..\r\n//.RR.RR.R.RRRRRRRRRRRRRREEEEEEE.E..EEE.EEEEET.T..T.TTTT.TTTTTTR.RRRRRRRR..R.RRRRRRRRO...OOOOO.O.OOOO.OO.O.Oppppppppp.pppppp...eee.e....eeeee.eeppppppp.ppp.ppppppe..eeeeeeee.eeee..\r\n//.RRR.RRRRR..R.RRRRRRRRR..EEEEE.EEE.E.EE.E.ET.TTTTT.TTTTTTTTTTRRRRRRR.RR..RRR.RR.RRROOOOO..OOOO.OOOO.O.OOOO.ppppppp.pp..ppppppe.e.eee.eeeeee.eeppppppppppp.p..pp.ee.eeeeee.eeeee...\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//...R..RR....R.RRR.R.R..EEEEEEEE..E.EEEE.EE..TTTTT.TT.TTTT.T.TRRR...RRRRRRRRR.RR.R..OO.OO.O...OOOOOO...O.OOpppppppp..pppppppppeeeeeee.eeeeeee..pppp.pppp..pppppppee..eeeee....e....\r\n//..................................................................................................................................................................................\r\n\r\nWebsite: https://retropepe.club/\r\nTwitter: https://twitter.com/RetropepeErc20\r\nTG: https://t.me/retropepebsc\r\n\r\n\r\n**/\r\n// SPDX-License-Identifier: MIT\r\n\r\n\r\npragma solidity 0.8.20;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract RetroPEPE is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    mapping (address => bool) private _buyerMap;\r\n    mapping (address => bool) private bots;\r\n    mapping(address => uint256) private _holderLastTransferTimestamp;\r\n    bool public transferDelayEnabled = false;\r\n    address payable private _taxWallet;\r\n\r\n    uint256 private _initialBuyTax=15;\r\n    uint256 private _initialSellTax=15;\r\n    uint256 private _finalBuyTax=2;\r\n    uint256 private _finalSellTax=2;\r\n    uint256 private _reduceBuyTaxAt=7;\r\n    uint256 private _reduceSellTaxAt=7;\r\n    uint256 private _preventSwapBefore=10;\r\n    uint256 private _buyCount=0;\r\n\r\n    uint8 private constant _decimals = 8;\r\n    uint256 private constant _tTotal = 4000000 * 10**_decimals;\r\n    string private constant _name = unicode\"RetroPEPE\";\r\n    string private constant _symbol = unicode\"RETRO\";\r\n    uint256 public _maxTxAmount =   4000000 * 10**_decimals;\r\n    uint256 public _maxWalletSize = 4000000 * 10**_decimals;\r\n    uint256 public _taxSwapThreshold=40000 * 10**_decimals;\r\n    uint256 public _maxTaxSwap= 4000000 * 10**_decimals;\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address private uniswapV2Pair;\r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n\r\n    event MaxTxAmountUpdated(uint _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor () {\r\n        _taxWallet = payable(_msgSender());\r\n        _balances[_msgSender()] = _tTotal;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_taxWallet] = true;\r\n\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        uint256 taxAmount=0;\r\n        if (from != owner() && to != owner()) {\r\n            require(!bots[from] && !bots[to]);\r\n\r\n            if (transferDelayEnabled) {\r\n                if (to != address(uniswapV2Router) && to != address(uniswapV2Pair)) {\r\n                  require(_holderLastTransferTimestamp[tx.origin] < block.number,\"Only one transfer per block allowed.\");\r\n                  _holderLastTransferTimestamp[tx.origin] = block.number;\r\n                }\r\n            }\r\n\r\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\r\n                require(amount <= _maxTxAmount, \"Exceeds the _maxTxAmount.\");\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\r\n                if(_buyCount<_preventSwapBefore){\r\n                  require(!isContract(to));\r\n                }\r\n                _buyCount++;\r\n                _buyerMap[to]=true;\r\n            }\r\n\r\n\r\n            taxAmount = amount.mul((_buyCount>_reduceBuyTaxAt)?_finalBuyTax:_initialBuyTax).div(100);\r\n            if(to == uniswapV2Pair && from!= address(this) ){\r\n                require(amount <= _maxTxAmount, \"Exceeds the _maxTxAmount.\");\r\n                taxAmount = amount.mul((_buyCount>_reduceSellTaxAt)?_finalSellTax:_initialSellTax).div(100);\r\n                require(_buyCount>_preventSwapBefore || _buyerMap[from],\"Seller is not buyer\");\r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (!inSwap && to == uniswapV2Pair && swapEnabled && contractTokenBalance>_taxSwapThreshold && _buyCount>_preventSwapBefore) {\r\n                swapTokensForEth(min(amount,min(contractTokenBalance,_maxTaxSwap)));\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if(contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(taxAmount>0){\r\n          _balances[address(this)]=_balances[address(this)].add(taxAmount);\r\n          emit Transfer(from, address(this),taxAmount);\r\n        }\r\n        _balances[from]=_balances[from].sub(amount);\r\n        _balances[to]=_balances[to].add(amount.sub(taxAmount));\r\n        emit Transfer(from, to, amount.sub(taxAmount));\r\n    }\r\n\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256){\r\n      return (a>b)?b:a;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        if(tokenAmount==0){return;}\r\n        if(!tradingOpen){return;}\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }\r\n\r\n    function sendETHToFee(uint256 amount) private {\r\n        _taxWallet.transfer(amount);\r\n    }\r\n\r\n    function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }\r\n\r\n    function openTradingRetro() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function isContract(address account) private view returns (bool) {\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    \r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTradingRetro\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferDelayEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "RetroPEPE", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://8a78725a8dbf3a39f6133a63fe32083cea551ae87c84811b8884aba60e0f4730"}