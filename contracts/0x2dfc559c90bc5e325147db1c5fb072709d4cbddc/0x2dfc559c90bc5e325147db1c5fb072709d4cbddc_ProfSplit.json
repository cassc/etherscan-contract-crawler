{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.23;\r\n\r\nenum ProposalState {\r\n    Pending,\r\n    Active,\r\n    Canceled,\r\n    Defeated,\r\n    Succeeded,\r\n    Queued,\r\n    Expired,\r\n    Executed\r\n}\r\n\r\ninterface IGovernorAlpha {\r\n    function state(uint256 proposalId) external view returns (ProposalState);\r\n}\r\n\r\ncontract ProfSplit {\r\n    IGovernorAlpha governor = IGovernorAlpha(0x95129751769f99CC39824a0793eF4933DD8Bb74B);\r\n    address public refundAddress;\r\n    address public owner;\r\n    bool public init;\r\n    uint public constant EXPIRED = 1700820415; // approx Friday 24 November 2023 GMT\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /// (from NDX pool) 6k + 1.8k = 7.8k\r\n    /// (high slippage so half) ~($5000 NFT, $6000 OMG )* 0.5 = ~$5500\r\n    /// ~ $20k SUSHI,~$22k ZRX, ~$36k DAI \r\n    /// Total = $91300\r\n    function split() external payable { // split profit\r\n        require(!init, \"already paid\");\r\n        refundAddress = msg.sender;\r\n        init = true;\r\n    }\r\n\r\n    function collect() external {\r\n        require(governor.state(24) == ProposalState.Executed, 'Not executed');\r\n        payable(owner).transfer(address(this).balance);\r\n    }\r\n\r\n    function refund() external {\r\n        require(block.timestamp > EXPIRED, 'not expired'); // in case proposal failed\r\n        payable(refundAddress).transfer(address(this).balance);\r\n    }\r\n\r\n    receive() external payable {}\r\n}\r\n\r\n/**\r\n//Test File\r\nimport \"forge-std/Test.sol\";\r\nimport \"forge-std/console.sol\";\r\nimport \"../src/ProfSplit.sol\";\r\nimport \"forge-std/interfaces/IERC20.sol\";\r\n\r\ninterface IGovernorTest is IGovernorAlpha {\r\n    function queue(uint256 proposalId) external;\r\n    function execute(uint256 proposalId) external payable;\r\n}\r\n\r\ncontract ProfSplitTest is Test {\r\n    IGovernorTest governor = IGovernorTest(0x95129751769f99CC39824a0793eF4933DD8Bb74B);\r\n    IERC20 dai = IERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F);\r\n    address them = 0xdf0b30404Ecbf0Fd6905D7722f76B0a9D3DA6E14;\r\n    ProfSplit splitter;\r\n    function setUp() public {\r\n        vm.createSelectFork(vm.rpcUrl(\"mainnet\"));\r\n        splitter = new ProfSplit();\r\n    }\r\n\r\n    function testSplitProf() public {\r\n        _split();\r\n        vm.expectRevert();\r\n        splitter.refund();\r\n    }\r\n\r\n    function testGetSplitProf() public {\r\n        _split();\r\n        vm.roll(block.number + 17800);\r\n        governor.queue(24);\r\n        vm.warp(block.timestamp + 172801);\r\n        governor.execute(24);\r\n        console.log(\"Them DAI: %d\", dai.balanceOf(them));\r\n        splitter.collect();\r\n        console.log(\"My ETH: %d\", address(this).balance);\r\n    }\r\n\r\n    function testRefund() public {\r\n        _split();\r\n        vm.warp(block.timestamp + 604800);\r\n        splitter.refund();\r\n        console.log(\"Them ETH: %d\", them.balance);\r\n    }\r\n\r\n    function _split() internal {\r\n        vm.deal(them, 50 ether);\r\n        vm.prank(them);\r\n        splitter.split{value: 18.26 ether}();\r\n    }\r\n\r\n    receive() external payable {}\r\n}\r\n */", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EXPIRED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"split\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "ProfSplit", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://a0aaac02bb040876b059cea39e99ed228a0b0a752ecb834e839d19f301d84dc0"}