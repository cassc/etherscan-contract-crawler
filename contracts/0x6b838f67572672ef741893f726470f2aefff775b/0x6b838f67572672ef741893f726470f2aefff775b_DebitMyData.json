{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n/**\r\n@title Debit My Data Contract\r\n@dev This contract defines a basic ERC20 token with the addition of mining rewards.\r\n*/\r\ncontract DebitMyData {\r\n// Token information\r\nstring public name;\r\nstring public symbol;\r\nuint8 public decimals;\r\nuint256 public totalSupply;\r\n// Mining information\r\nuint256 public difficulty;\r\nuint256 public miningReward;\r\nuint256 public nonce;\r\n// Contract owner\r\naddress public owner;\r\n// Token balances\r\nmapping(address => uint256) public balanceOf;\r\n// Events\r\nevent Transfer(address indexed from, address indexed to, uint256 value);\r\nevent Mine(address indexed miner, uint256 reward);\r\nevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n/**\r\n@dev Contract constructor\r\n@param _name Token name\r\n@param _symbol Token symbol\r\n@param _decimals Token decimals\r\n@param _totalSupply Total token supply\r\n@param _difficulty Mining difficulty\r\n@param _miningReward Mining reward\r\n*/\r\nconstructor(string memory _name, string memory _symbol, uint8 _decimals, uint256 _totalSupply, uint256 _difficulty, uint256 _miningReward) {\r\nname = _name;\r\nsymbol = _symbol;\r\ndecimals = _decimals;\r\ntotalSupply = _totalSupply;\r\ndifficulty = _difficulty;\r\nminingReward = _miningReward;\r\nbalanceOf[msg.sender] = _totalSupply;\r\nowner = msg.sender;\r\nemit Transfer(address(0), msg.sender, _totalSupply);\r\n}\r\n/**\r\n@dev Transfer tokens to another address\r\n@param _to Recipient address\r\n@param _value Amount of tokens to transfer\r\n@return Returns true if transfer is successful\r\n*/\r\nfunction transfer(address _to, uint256 _value) public returns (bool) {\r\nrequire(_to != address(0), \"Invalid transfer recipient\");\r\nrequire(balanceOf[msg.sender] >= _value, \"Insufficient balance\");\r\nbalanceOf[msg.sender] -= _value;\r\nbalanceOf[_to] += _value;\r\nemit Transfer(msg.sender, _to, _value);\r\nreturn true;\r\n}\r\n/**\r\n@dev Mine tokens by providing nonce value\r\n@param _nonce Nonce value\r\n@return Returns true if mining is successful\r\n*/\r\nfunction mine(uint256 _nonce) public returns (bool) {\r\nbytes32 target = bytes32(uint256(2) ** (256 - difficulty));\r\nbytes32 hash = sha256(abi.encodePacked(nonce, _nonce));\r\nif (hash < target) {\r\nrequire(balanceOf[msg.sender] + miningReward >= balanceOf[msg.sender], \"Integer overflow detected\");\r\nbalanceOf[msg.sender] += miningReward;\r\ntotalSupply += miningReward;\r\nnonce += 1;\r\nemit Mine(msg.sender, miningReward);\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n/**\r\n@dev Transfer ownership of contract to another address\r\n@param newOwner New owner address\r\n*/\r\nfunction transferOwnership(address newOwner) public {\r\nrequire(msg.sender == owner, \"Only the contract owner can transfer ownership\");\r\nrequire(newOwner != address(0), \"Invalid new owner\");\r\nemit OwnershipTransferred(owner, newOwner);\r\nowner = newOwner;\r\n}\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_difficulty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_miningReward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Mine\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"difficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"mine\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DebitMyData", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000775f05a0740000000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000000000012a05f200000000000000000000000000000000000000000000000000000000000000000b44656269744d7944617461000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b44656269744d7944617461000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://69374729166002bf09a019419f13a454bb5b5f49d64cc7b230d0fa5918dd51ec"}