{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/factory/ContractFactory.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity 0.8.19;\\n\\n// External\\nimport {CREATE3} from \\\"solady/src/utils/CREATE3.sol\\\";\\n\\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28fe\u28ff\u28f7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u28ff\u28ff\u28f7\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28d7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u286f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28ff\u28ff\u28ff\u28ff\u28f7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28d7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u286f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f8\u28ff\u28ff\u28ff\u28bf\u28ff\u28ff\u28ff\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28d7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u286f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f0\u28ff\u28ff\u28ff\u285f\u2818\u28ff\u28ff\u28ff\u28f7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28d7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u286f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u28f4\u28fe\u28ff\u28ff\u28ff\u28ff\u28fe\u283b\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2846\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28ff\u28ff\u28ff\u287f\u2800\u2800\u2838\u28ff\u28ff\u28ff\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28d7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u286f\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28e0\u28f4\u28f4\u28f6\u28f6\u28f6\u28e6\u28e6\u28c0\u2840\u2800\u2800\u2800\u2800\u2800\u2800\\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f4\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2803\u2800\u2819\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28ff\u28ff\u28ff\u28ff\u2801\u2800\u2800\u2800\u28bb\u28ff\u28ff\u28ff\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28d7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u286f\u2800\u2800\u2800\u2800\u28e0\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f6\u2840\u2800\u2800\u2800\u2800\\n// \u2800\u2800\u2800\u2800\u2800\u2880\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2801\u2800\u2800\u2800\u2818\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28fe\u28ff\u28ff\u28ff\u2803\u2800\u2800\u2800\u2800\u2808\u28bf\u28ff\u28ff\u28ff\u28c6\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28d7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u286f\u2800\u2800\u2800\u28f0\u28ff\u28ff\u28ff\u287f\u280b\u2801\u2800\u2800\u2808\u2818\u2839\u28ff\u28ff\u28ff\u28ff\u28c6\u2800\u2800\u2800\\n// \u2800\u2800\u2800\u2800\u2880\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28bf\u28ff\u28ff\u28ff\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fe\u28ff\u28ff\u28ff\u280f\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28ff\u28ff\u28ff\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28d7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u286f\u2800\u2800\u28b0\u28ff\u28ff\u28ff\u28ff\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28ff\u28ff\u28ff\u28ff\u2840\u2800\u2800\\n// \u2800\u2800\u2800\u28a0\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u2800\u2840\u2880\u2800\u2840\u2880\u2800\u2840\u2888\u28bf\u285f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2844\u2800\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28d7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u286f\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28d7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u28ff\u28ff\u28ff\u2847\u2800\u2800\\n// \u2800\u2800\u28e0\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u280b\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28f6\u28c4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f8\u28ff\u28ff\u28ff\u287f\u28bf\u283f\u283f\u283f\u283f\u283f\u283f\u283f\u283f\u283f\u28bf\u28ff\u28ff\u28ff\u28f7\u2840\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28d7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u286f\u2800\u2800\u2838\u28ff\u28ff\u28ff\u28f7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28ff\u28ff\u28ff\u28ff\u2802\u2800\u2800\\n// \u2800\u2800\u2819\u281b\u283f\u283b\u283b\u281b\u2809\u2800\u2800\u2808\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f0\u28ff\u28ff\u28ff\u28ff\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28bf\u28ff\u28ff\u28ff\u28e7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28d7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u286f\u2800\u2800\u2800\u28bb\u28ff\u28ff\u28ff\u28f7\u28c0\u2880\u2800\u2800\u2800\u2840\u28f0\u28fe\u28ff\u28ff\u28ff\u280f\u2800\u2800\u2800\\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u281b\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b0\u28ff\u28ff\u28ff\u28ff\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28ff\u28ff\u28ff\u28ff\u28e7\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28d7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u286f\u2800\u2800\u2800\u2800\u2839\u28bf\u28ff\u28ff\u28ff\u28ff\u28fe\u28fe\u28f7\u28ff\u28ff\u28ff\u28ff\u287f\u280b\u2800\u2800\u2800\u2800\\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2819\u2819\u280b\u281b\u2819\u280b\u281b\u2819\u280b\u281b\u2819\u280b\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2820\u283f\u283b\u281f\u283f\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2838\u281f\u283f\u281f\u283f\u2806\u2800\u2838\u283f\u283f\u281f\u282f\u2800\u2800\u2800\u2838\u283f\u283f\u283f\u280f\u2800\u2800\u2800\u2800\u2800\u2808\u2809\u283b\u283b\u287f\u28ff\u28bf\u287f\u287f\u283f\u281b\u2801\u2800\u2800\u2800\u2800\u2800\u2800\\n//                    allo.gitcoin.co\\n\\n/// @title ContractFactory\\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\\n/// @dev ContractFactory is used internally to deploy our contracts using CREATE3\\ncontract ContractFactory {\\n    /// ======================\\n    /// ======= Errors =======\\n    /// ======================\\n\\n    /// @notice Thrown when the requested salt has already been used.\\n    error SALT_USED();\\n\\n    /// @notice Thrown when the caller is not authorized to deploy.\\n    error UNAUTHORIZED();\\n\\n    /// ======================\\n    /// ======= Events =======\\n    /// ======================\\n\\n    /// @notice Emitted when a contract is deployed.\\n    event Deployed(address indexed deployed, bytes32 indexed salt);\\n\\n    /// ======================\\n    /// ======= Storage ======\\n    /// ======================\\n\\n    /// @notice Collection of used salts.\\n    mapping(bytes32 => bool) public usedSalts;\\n\\n    /// @notice Collection of authorized deployers.\\n    mapping(address => bool) public isDeployer;\\n\\n    /// ======================\\n    /// ======= Modifiers ====\\n    /// ======================\\n\\n    /// @notice Modifier to ensure the caller is authorized to deploy and returns if not.\\n    modifier onlyDeployer() {\\n        _checkIsDeployer();\\n        _;\\n    }\\n\\n    /// ======================\\n    /// ===== Constructor ====\\n    /// ======================\\n\\n    /// @notice On deployment sets the 'msg.sender' to allowed deployer.\\n    constructor() {\\n        isDeployer[msg.sender] = true;\\n    }\\n\\n    /// ===============================\\n    /// ====== Internal Functions =====\\n    /// ===============================\\n\\n    /// @notice Checks if the caller is authorized to deploy.\\n    function _checkIsDeployer() internal view {\\n        if (!isDeployer[msg.sender]) revert UNAUTHORIZED();\\n    }\\n\\n    /// ===============================\\n    /// ====== External Functions =====\\n    /// ===============================\\n\\n    /// @notice Deploys a contract using CREATE3.\\n    /// @dev Used for our deployments.\\n    /// @param _contractName Name of the contract to deploy\\n    /// @param _version Version of the contract to deploy\\n    /// @param creationCode Creation code of the contract to deploy\\n    /// @return deployedContract Address of the deployed contract\\n    function deploy(string memory _contractName, string memory _version, bytes memory creationCode)\\n        external\\n        payable\\n        onlyDeployer\\n        returns (address deployedContract)\\n    {\\n        // hash salt with the contract name and version\\n        bytes32 salt = keccak256(abi.encodePacked(_contractName, _version));\\n\\n        // ensure salt has not been used\\n        if (usedSalts[salt]) revert SALT_USED();\\n\\n        usedSalts[salt] = true;\\n\\n        deployedContract = CREATE3.deploy(salt, creationCode, msg.value);\\n\\n        emit Deployed(deployedContract, salt);\\n    }\\n\\n    /// @notice Set the allowed deployer.\\n    /// @dev 'msg.sender' must be a deployer.\\n    /// @param _deployer Address of the deployer to set\\n    /// @param _allowedToDeploy Boolean to set the deployer to\\n    function setDeployer(address _deployer, bool _allowedToDeploy) external onlyDeployer {\\n        // Set the deployer to the allowedToDeploy mapping\\n        isDeployer[_deployer] = _allowedToDeploy;\\n    }\\n}\\n\"\r\n    },\r\n    \"solady/src/utils/CREATE3.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/// @notice Deploy to deterministic addresses without an initcode factor.\\n/// @author Solady (https://github.com/vectorized/solmady/blob/main/src/utils/CREATE3.sol)\\n/// @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/CREATE3.sol)\\n/// @author Modified from 0xSequence (https://github.com/0xSequence/create3/blob/master/contracts/Create3.sol)\\nlibrary CREATE3 {\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\n    /*                        CUSTOM ERRORS                       */\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\n\\n    /// @dev Unable to deploy the contract.\\n    error DeploymentFailed();\\n\\n    /// @dev Unable to initialize the contract.\\n    error InitializationFailed();\\n\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\n    /*                      BYTECODE CONSTANTS                    */\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\n\\n    /**\\n     * -------------------------------------------------------------------+\\n     * Opcode      | Mnemonic         | Stack        | Memory             |\\n     * -------------------------------------------------------------------|\\n     * 36          | CALLDATASIZE     | cds          |                    |\\n     * 3d          | RETURNDATASIZE   | 0 cds        |                    |\\n     * 3d          | RETURNDATASIZE   | 0 0 cds      |                    |\\n     * 37          | CALLDATACOPY     |              | [0..cds): calldata |\\n     * 36          | CALLDATASIZE     | cds          | [0..cds): calldata |\\n     * 3d          | RETURNDATASIZE   | 0 cds        | [0..cds): calldata |\\n     * 34          | CALLVALUE        | value 0 cds  | [0..cds): calldata |\\n     * f0          | CREATE           | newContract  | [0..cds): calldata |\\n     * -------------------------------------------------------------------|\\n     * Opcode      | Mnemonic         | Stack        | Memory             |\\n     * -------------------------------------------------------------------|\\n     * 67 bytecode | PUSH8 bytecode   | bytecode     |                    |\\n     * 3d          | RETURNDATASIZE   | 0 bytecode   |                    |\\n     * 52          | MSTORE           |              | [0..8): bytecode   |\\n     * 60 0x08     | PUSH1 0x08       | 0x08         | [0..8): bytecode   |\\n     * 60 0x18     | PUSH1 0x18       | 0x18 0x08    | [0..8): bytecode   |\\n     * f3          | RETURN           |              | [0..8): bytecode   |\\n     * -------------------------------------------------------------------+\\n     */\\n\\n    /// @dev The proxy bytecode.\\n    uint256 private constant _PROXY_BYTECODE = 0x67363d3d37363d34f03d5260086018f3;\\n\\n    /// @dev Hash of the `_PROXY_BYTECODE`.\\n    /// Equivalent to `keccak256(abi.encodePacked(hex\\\"67363d3d37363d34f03d5260086018f3\\\"))`.\\n    bytes32 private constant _PROXY_BYTECODE_HASH =\\n        0x21c35dbe1b344a2488cf3321d6ce542f8e9f305544ff09e4993a62319a497c1f;\\n\\n    /*\u00b4:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0\u2022.*\u2022\u00b4.*:\u02da.\u00b0*.\u02da\u2022\u00b4.\u00b0:\u00b0\u2022.\u00b0+.*\u2022\u00b4.*:*/\\n    /*                      CREATE3 OPERATIONS                    */\\n    /*.\u2022\u00b0:\u00b0.\u00b4+\u02da.*\u00b0.\u02da:*.\u00b4\u2022*.+\u00b0.\u2022\u00b0:\u00b4*.\u00b4\u2022*.\u2022\u00b0.\u2022\u00b0:\u00b0.\u00b4:\u2022\u02da\u00b0.*\u00b0.\u02da:*.\u00b4+\u00b0.\u2022*/\\n\\n    /// @dev Deploys `creationCode` deterministically with a `salt`.\\n    /// The deployed contract is funded with `value` (in wei) ETH.\\n    /// Returns the deterministic address of the deployed contract,\\n    /// which solely depends on `salt`.\\n    function deploy(bytes32 salt, bytes memory creationCode, uint256 value)\\n        internal\\n        returns (address deployed)\\n    {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Store the `_PROXY_BYTECODE` into scratch space.\\n            mstore(0x00, _PROXY_BYTECODE)\\n            // Deploy a new contract with our pre-made bytecode via CREATE2.\\n            let proxy := create2(0, 0x10, 0x10, salt)\\n\\n            // If the result of `create2` is the zero address, revert.\\n            if iszero(proxy) {\\n                // Store the function selector of `DeploymentFailed()`.\\n                mstore(0x00, 0x30116425)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n\\n            // Store the proxy's address.\\n            mstore(0x14, proxy)\\n            // 0xd6 = 0xc0 (short RLP prefix) + 0x16 (length of: 0x94 ++ proxy ++ 0x01).\\n            // 0x94 = 0x80 + 0x14 (0x14 = the length of an address, 20 bytes, in hex).\\n            mstore(0x00, 0xd694)\\n            // Nonce of the proxy contract (1).\\n            mstore8(0x34, 0x01)\\n\\n            deployed := keccak256(0x1e, 0x17)\\n\\n            // If the `call` fails, revert.\\n            if iszero(\\n                call(\\n                    gas(), // Gas remaining.\\n                    proxy, // Proxy's address.\\n                    value, // Ether value.\\n                    add(creationCode, 0x20), // Start of `creationCode`.\\n                    mload(creationCode), // Length of `creationCode`.\\n                    0x00, // Offset of output.\\n                    0x00 // Length of output.\\n                )\\n            ) {\\n                // Store the function selector of `InitializationFailed()`.\\n                mstore(0x00, 0x19b991a8)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n\\n            // If the code size of `deployed` is zero, revert.\\n            if iszero(extcodesize(deployed)) {\\n                // Store the function selector of `InitializationFailed()`.\\n                mstore(0x00, 0x19b991a8)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n        }\\n    }\\n\\n    /// @dev Returns the deterministic address for `salt`.\\n    function getDeployed(bytes32 salt) internal view returns (address deployed) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Cache the free memory pointer.\\n            let m := mload(0x40)\\n            // Store `address(this)`.\\n            mstore(0x00, address())\\n            // Store the prefix.\\n            mstore8(0x0b, 0xff)\\n            // Store the salt.\\n            mstore(0x20, salt)\\n            // Store the bytecode hash.\\n            mstore(0x40, _PROXY_BYTECODE_HASH)\\n\\n            // Store the proxy's address.\\n            mstore(0x14, keccak256(0x0b, 0x55))\\n            // Restore the free memory pointer.\\n            mstore(0x40, m)\\n            // 0xd6 = 0xc0 (short RLP prefix) + 0x16 (length of: 0x94 ++ proxy ++ 0x01).\\n            // 0x94 = 0x80 + 0x14 (0x14 = the length of an address, 20 bytes, in hex).\\n            mstore(0x00, 0xd694)\\n            // Nonce of the proxy contract (1).\\n            mstore8(0x34, 0x01)\\n\\n            deployed := keccak256(0x1e, 0x17)\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 400\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SALT_USED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_contractName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDeployer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowedToDeploy\",\"type\":\"bool\"}],\"name\":\"setDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedSalts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ContractFactory", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "400", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}