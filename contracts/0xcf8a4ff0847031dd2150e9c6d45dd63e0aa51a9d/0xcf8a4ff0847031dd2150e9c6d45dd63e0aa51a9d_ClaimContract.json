{"SourceCode": "//SPDX-License-Identifier: MIT Licensed\r\npragma solidity ^0.8.18;\r\n\r\ncontract ClaimContract {\r\n    address public owner;\r\n    uint256 public totalAddedReward;\r\n    uint256 public totalClaimedReward;\r\n    uint256 public totalUsersClaimed;\r\n    bool public enableClaim;\r\n    mapping(address => uint256) public userBalance;\r\n    mapping(address => uint256) public claimedBalance;\r\n    mapping(address => bool) public alreadyClaimed;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \" Not an owner\");\r\n        _;\r\n    }\r\n\r\n    receive() external payable {\r\n        totalAddedReward += msg.value;\r\n    }\r\n\r\n    constructor(address _owner) {\r\n        owner = _owner;\r\n    }\r\n\r\n    function addWalletsData(\r\n        address[] memory wallet,\r\n        uint256[] memory amount\r\n    ) public onlyOwner {\r\n        require(\r\n            wallet.length == amount.length,\r\n            \"wallet and amount length mismatch\"\r\n        );\r\n        for (uint256 i = 0; i < wallet.length; i++) {\r\n            userBalance[wallet[i]] += amount[i];\r\n        }\r\n    }\r\n\r\n    function claim() public {\r\n        require(enableClaim, \"wait for owner to start claim\");\r\n        uint256 availableBalance = userBalance[msg.sender] -\r\n            claimedBalance[msg.sender];\r\n        require(availableBalance > 0, \"already claimed\");\r\n        claimedBalance[msg.sender] += availableBalance;\r\n        totalClaimedReward += availableBalance;\r\n        if (!alreadyClaimed[msg.sender]) {\r\n            totalUsersClaimed++;\r\n            alreadyClaimed[msg.sender] = true;\r\n        }\r\n        payable(msg.sender).transfer(availableBalance);\r\n    }\r\n\r\n    function enableClaimState(bool _state) external onlyOwner {\r\n        enableClaim = _state;\r\n    }\r\n\r\n    // transfer ownership\r\n    function changeOwner(address payable _newOwner) external onlyOwner {\r\n        owner = _newOwner;\r\n    }\r\n\r\n    // to draw out tokens\r\n    function transferStuckFunds(\r\n        address _receiver,\r\n        uint256 _value\r\n    ) external onlyOwner {\r\n        payable(_receiver).transfer(_value);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"wallet\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"addWalletsData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"alreadyClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"enableClaimState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAddedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalClaimedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsersClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferStuckFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "ClaimContract", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000ecab3064b0fca52fdcc8422280a927ef8f51fe8d", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://85db4052da0e114590660366f6eb16334c62e694127806cac503aee4d478a105"}