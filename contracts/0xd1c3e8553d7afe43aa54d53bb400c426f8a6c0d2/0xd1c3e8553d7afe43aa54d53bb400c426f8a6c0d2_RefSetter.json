{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/RefSetter.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface IYieldManager {\\n    function getAffiliate(address client) external view returns (address);\\n    function setAffiliate(address client, address sponsor) external;\\n}\\n\\ncontract RefSetter {\\n    IYieldManager public yieldManager;\\n    address public owner;\\n\\n    event NewYieldManager(address yieldManager);\\n    event NewOwner(address owner);\\n    event AffiliateSet(address sponsor, address client);\\n\\n    // only owner modifier\\n    modifier onlyOwner {\\n        _onlyOwner();\\n        _;\\n    }\\n\\n    // only owner view\\n    function _onlyOwner() private view {\\n        require(msg.sender == owner, \\\"Only the contract owner may perform this action\\\");\\n    }\\n\\n    constructor(address _yieldManager) {\\n        owner = msg.sender;\\n        yieldManager = IYieldManager(_yieldManager);\\n    }\\n\\n    function setYieldManager(IYieldManager _yieldManager) public onlyOwner {\\n        yieldManager = _yieldManager;\\n        emit NewYieldManager(address(yieldManager));\\n    }\\n\\n    function getAffiliate(address client) public view returns (address) {\\n        return yieldManager.getAffiliate(client);\\n    }\\n\\n    function setAffiliate(address sponsor) external {\\n        require(yieldManager.getAffiliate(msg.sender) == address(0), \\\"sponsor already set\\\");\\n        require(sponsor != address(0), \\\"sponsor cant be zero address\\\");\\n\\n        yieldManager.setAffiliate(msg.sender, sponsor);\\n        emit AffiliateSet(sponsor, msg.sender);\\n    }\\n\\n    function newOwner(address newOwner_) external {\\n        require(msg.sender == owner, \\\"Only factory owner can set\\\");\\n        require(newOwner_ != address(0), \\\"No zero address for newOwner\\\");\\n\\n        owner = newOwner_;\\n        emit NewOwner(owner);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 10\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_yieldManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"}],\"name\":\"AffiliateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"yieldManager\",\"type\":\"address\"}],\"name\":\"NewYieldManager\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"}],\"name\":\"getAffiliate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"newOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"setAffiliate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IYieldManager\",\"name\":\"_yieldManager\",\"type\":\"address\"}],\"name\":\"setYieldManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldManager\",\"outputs\":[{\"internalType\":\"contract IYieldManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "RefSetter", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "10", "ConstructorArguments": "000000000000000000000000ccd05acd3cec7016e0ea2ef6f27a65b885344168", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}