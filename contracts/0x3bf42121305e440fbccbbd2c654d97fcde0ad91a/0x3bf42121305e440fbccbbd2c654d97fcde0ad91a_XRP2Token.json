{"SourceCode": "// SPDX-License-Identifier: MIT\r\n//$XRP 2.0 Was Born To Celebrate A Historic Moment In Blockchain\u2014The Victory Of XRP, Which Announced The Legitimacy Of Blockchain And Its Resistance To Suppression And Control By Centralized Powers.\r\n//https://xrp2.co\r\npragma solidity ^0.8.0;\r\n\r\ncontract XRP2Token {\r\n    string public name;\r\n    string public symbol;\r\n    uint256 public totalSupply;\r\n    uint8 public decimals;\r\n    uint256 private taxRate;\r\n    address private taxAddress;\r\n    address private contractOwner;\r\n\r\n    mapping(address => uint256) private balances;\r\n    mapping(address => mapping(address => uint256)) private allowed;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == contractOwner, \"Only the contract owner can call this function.\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        name = \"XRP2.0\";\r\n        symbol = \"XRP2.0\";\r\n        totalSupply = 1000000000 * 10 ** 18; // 1,000,000,000 tokens with 18 decimal places\r\n        decimals = 18;\r\n        taxRate = 100; // 0.1% tax rate\r\n        contractOwner = msg.sender;\r\n        balances[msg.sender] = totalSupply;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return balances[account];\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n        require(to != address(0), \"Invalid recipient address.\");\r\n        require(value <= balances[msg.sender], \"Insufficient balance.\");\r\n\r\n        uint256 taxAmount = calculateTax(value);\r\n        uint256 transferAmount = value - taxAmount;\r\n\r\n        balances[msg.sender] -= value;\r\n        balances[to] += transferAmount;\r\n        balances[taxAddress] += taxAmount;\r\n\r\n        emit Transfer(msg.sender, to, transferAmount);\r\n        emit Transfer(msg.sender, taxAddress, taxAmount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n        require(to != address(0), \"Invalid recipient address.\");\r\n        require(value <= balances[from], \"Insufficient balance.\");\r\n        require(value <= allowed[from][msg.sender], \"Insufficient allowance.\");\r\n\r\n        uint256 taxAmount = calculateTax(value);\r\n        uint256 transferAmount = value - taxAmount;\r\n\r\n        balances[from] -= value;\r\n        balances[to] += transferAmount;\r\n        balances[taxAddress] += taxAmount;\r\n        allowed[from][msg.sender] -= value;\r\n\r\n        emit Transfer(from, to, transferAmount);\r\n        emit Transfer(from, taxAddress, taxAmount);\r\n        emit Approval(from, msg.sender, allowed[from][msg.sender]);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        allowed[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address ownerAddress, address spender) public view returns (uint256) {\r\n        return allowed[ownerAddress][spender];\r\n    }\r\n\r\n    function setTaxAddress(address _taxAddress) public onlyOwner {\r\n        require(_taxAddress != address(0), \"Invalid tax address.\");\r\n        taxAddress = _taxAddress;\r\n    }\r\n\r\n    function setTaxRate(uint256 _taxRate) public onlyOwner {\r\n        require(_taxRate <= 1000, \"Invalid tax rate.\"); // Maximum tax rate is 10% (1000 basis points)\r\n        taxRate = _taxRate;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        contractOwner = address(0);\r\n    }\r\n\r\n    function calculateTax(uint256 value) private view returns (uint256) {\r\n        return (value * taxRate) / 10000;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taxAddress\",\"type\":\"address\"}],\"name\":\"setTaxAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taxRate\",\"type\":\"uint256\"}],\"name\":\"setTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "XRP2Token", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://002276c6a5ed7c752524015d5af914ae3433a66abf82f7a177d2da4f21a478cf"}