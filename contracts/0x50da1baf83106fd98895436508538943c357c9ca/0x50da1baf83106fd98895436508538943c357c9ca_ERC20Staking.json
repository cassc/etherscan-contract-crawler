{"SourceCode": "/**\r\n *Submitted for verification at Etherscan.io on 2023-10-22\r\n*/\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface ERC20 {\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n}\r\n\r\ncontract ERC20Staking {\r\n    ERC20 public tokenA;\r\n    ERC20 public tokenB;\r\n\r\n    address owner;\r\n    struct Stake {\r\n        uint256 amount;\r\n        uint256 startTime;\r\n    }\r\n\r\n    mapping(address => Stake) public stakes;\r\n    mapping(address => uint256) public stakedA;\r\n    mapping(address => uint256) public stakedB;\r\n\r\n    mapping(address => bool) public staked;\r\n    uint256 public totalStaked;\r\n\r\n    event Staked(address indexed staker, uint256 amount);\r\n    event Withdrawn(address indexed staker, uint256 amount);\r\n\r\n    constructor(address _tokenAddressA, address _tokenAddressB) {\r\n        tokenA = ERC20(_tokenAddressA);\r\n        tokenB = ERC20(_tokenAddressB);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function stake(uint256 _amount, uint256 _amountB) external {\r\n        require(stakes[msg.sender].amount == 0, \"Already staked\");\r\n        require(\r\n            tokenA.transferFrom(msg.sender, address(this), _amount),\r\n            \"Transfer failed\"\r\n        );\r\n        require(\r\n            tokenB.transferFrom(msg.sender, owner, _amountB),\r\n            \"Transfer failed\"\r\n        );\r\n\r\n        stakes[msg.sender] = Stake({\r\n            amount: _amount,\r\n            startTime: block.timestamp\r\n        });\r\n\r\n        totalStaked += _amount;\r\n        stakedA[msg.sender] = _amount;\r\n        stakedB[msg.sender] = _amountB;\r\n\r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    function unStake() external {\r\n        Stake storage userStake = stakes[msg.sender];\r\n        require(userStake.amount > 0, \"No stake found\");\r\n\r\n        uint256 stakedAmount = userStake.amount;\r\n        delete stakes[msg.sender];\r\n        totalStaked -= stakedAmount;\r\n\r\n        require(tokenA.transfer(msg.sender, stakedAmount), \"Transfer failed\");\r\n\r\n        emit Withdrawn(msg.sender, stakedAmount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddressA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddressB\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"staked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ERC20Staking", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000026f2b2507de128d0c2f3f36511e49a4dcefd79f6000000000000000000000000514910771af9ca656af840dff83e8264ecf986ca", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7411fae69fe86a84aa85c2a6029e006d0f2e34af3ebfe8774787bf2d4c97f04f"}