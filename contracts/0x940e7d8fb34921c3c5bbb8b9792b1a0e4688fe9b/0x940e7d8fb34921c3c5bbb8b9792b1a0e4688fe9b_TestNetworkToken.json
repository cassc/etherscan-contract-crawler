{"SourceCode": "pragma solidity ^0.4.4;\r\n\r\n\r\ncontract MockTestNetworkToken {\r\n\r\n    // Token metadata\r\n    string public constant name = \"Test Network Token\";\r\n    string public constant symbol = \"TNT\";\r\n    uint8 public constant decimals = 18;  // 18 decimal places, the same as ETH.\r\n\r\n    // The current total token supply\r\n    uint256 totalTokens;\r\n\r\n    // Balances are stored here\r\n    mapping (address => uint256) balances;\r\n\r\n    // Always false, corresponds to ongoing crowdfunding\r\n    bool transferable;\r\n\r\n\r\n    // ERC20 interface - Transfer event used to track token transfers\r\n    \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n    // ERC20 interface - minimal functional subset\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool) {\r\n        if (transferable && balances[msg.sender] >= _value && _value > 0) {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function totalSupply() external constant returns (uint256) {\r\n        return totalTokens;\r\n    }\r\n\r\n    function balanceOf(address _owner) external constant returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n\r\n}\r\n\r\ncontract TestNetworkToken is MockTestNetworkToken {\r\n\r\n    // Only this address is allowed to kill this contract\r\n    address owner;\r\n\r\n    uint256 public constant tokenCreationRate = 1000;\r\n\r\n    event Refund(address indexed _from, uint256 _value);\r\n\r\n    function TestNetworkToken() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // Public, external API exposed to all users interested in taking part in the crowdfunding\r\n\r\n    function create() payable external {\r\n        // Do not allow creating 0 tokens.\r\n        if (msg.value == 0) throw;\r\n\r\n        var numTokens = msg.value * tokenCreationRate;\r\n\r\n        totalTokens += numTokens;\r\n\r\n        // Assign new tokens to the sender\r\n        balances[msg.sender] += numTokens;\r\n\r\n        // Log token creation event\r\n        Transfer(0x0, msg.sender, numTokens);\r\n    }\r\n\r\n    function refund() external {\r\n        var tokenValue = balances[msg.sender];\r\n        if (tokenValue == 0) throw;\r\n        balances[msg.sender] = 0;\r\n        totalTokens -= tokenValue;\r\n\r\n        var ethValue = tokenValue / tokenCreationRate;\r\n        Refund(msg.sender, ethValue);\r\n        Transfer(msg.sender, 0x0, tokenValue);\r\n\r\n        if (!msg.sender.send(ethValue)) throw;\r\n    }\r\n\r\n    // This is a test contract, so kill can be used once it is not needed\r\n    \r\n    function kill() {\r\n        if (msg.sender != owner) throw;\r\n        if (totalTokens > 0) throw;\r\n\r\n        selfdestruct(msg.sender);\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreationRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"create\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "ContractName": "TestNetworkToken", "CompilerVersion": "v0.4.5-nightly.2016.11.4+commit.d97d267a", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}