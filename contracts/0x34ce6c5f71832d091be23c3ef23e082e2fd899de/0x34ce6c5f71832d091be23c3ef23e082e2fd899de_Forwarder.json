{"SourceCode": "// File: @uniswap/lib/contracts/libraries/TransferHelper.sol\r\n\r\n\r\n\r\npragma solidity >=0.6.0;\r\n\r\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            'TransferHelper::safeApprove: approve failed'\r\n        );\r\n    }\r\n\r\n    function safeTransfer(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            'TransferHelper::safeTransfer: transfer failed'\r\n        );\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            'TransferHelper::transferFrom: transferFrom failed'\r\n        );\r\n    }\r\n\r\n    function safeTransferETH(address to, uint256 value) internal {\r\n        (bool success, ) = to.call{value: value}(new bytes(0));\r\n        require(success, 'TransferHelper::safeTransferETH: ETH transfer failed');\r\n    }\r\n}\r\n\r\n// File: ManualForwarder/ERC20Interface.sol\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * Contract that exposes the needed erc20 token functions\r\n */\r\n\r\nabstract contract ERC20Interface {\r\n  // Send _value amount of tokens to address _to\r\n  function transfer(address _to, uint256 _value)\r\n    public\r\n    virtual\r\n    returns (bool success);\r\n\r\n  // Get the account balance of another account with address _owner\r\n  function balanceOf(address _owner)\r\n    public\r\n    virtual\r\n    view\r\n    returns (uint256 balance);\r\n}\r\n\r\n// File: ManualForwarder/Forwarder.sol\r\n\r\n\r\n\r\n pragma solidity ^0.8.19;\r\n\r\n\r\n\r\n contract Forwarder {\r\n    address private parentAddress;\r\n    address private owner;\r\n\r\n    event ForwarderDeposited(address from, uint256 value, bytes data);\r\n\r\n    function initialize(address _owner, address initAddress) public onlyUninitialized {\r\n        require(initAddress != address(0), \"Invalid parent address\");\r\n        require(_owner != address(0), \"Invalid owner address\");\r\n        owner = _owner;\r\n        parentAddress = initAddress;\r\n    }\r\n\r\n    modifier onlyUninitialized {\r\n        require(parentAddress == address(0x0), \"Already initialized\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"Only Owner\");\r\n        _;\r\n    }\r\n\r\n    function getParentAddress() public view onlyOwner returns (address) {\r\n        return parentAddress;\r\n    }\r\n\r\n    function getOwner() public view onlyOwner returns (address) {\r\n        return owner;\r\n    }\r\n\r\n    fallback() external payable {\r\n        flush();\r\n    }\r\n\r\n    receive() external payable {\r\n        flush();\r\n    }\r\n\r\n    function setParentAddress(address newAddress) public onlyOwner {\r\n        require(newAddress != address(0), \"Invalid parent address\");\r\n        parentAddress = newAddress;\r\n    }\r\n\r\n    function flush() private {\r\n        uint256 value = payable(address(this)).balance;\r\n\r\n        if (value == 0) {\r\n            return;\r\n        }\r\n\r\n        (bool success, ) = parentAddress.call{ value: value }(\"\");\r\n        require(success, \"Flush failed\");\r\n        emit ForwarderDeposited(msg.sender, value, msg.data);\r\n    }\r\n\r\n    function getERC20Balance(\r\n        address tokenContractAddress\r\n    ) public view returns (uint256) {\r\n        ERC20Interface instance = ERC20Interface(tokenContractAddress);\r\n        address forwarderAddress = address(this);\r\n        uint256 forwarderBalance = instance.balanceOf(forwarderAddress);\r\n        if (forwarderBalance == 0) {\r\n            return 0;\r\n        }\r\n        return forwarderBalance;\r\n    }\r\n\r\n    function flushTokens(address tokenContractAddress) external onlyOwner {\r\n        ERC20Interface instance = ERC20Interface(tokenContractAddress);\r\n        address forwarderAddress = address(this);\r\n        uint256 forwarderBalance = instance.balanceOf(forwarderAddress);\r\n        if (forwarderBalance == 0) {\r\n            return;\r\n        }\r\n\r\n        TransferHelper.safeTransfer(\r\n            tokenContractAddress,\r\n            parentAddress,\r\n            forwarderBalance\r\n        );\r\n    }\r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ForwarderDeposited\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContractAddress\",\"type\":\"address\"}],\"name\":\"flushTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContractAddress\",\"type\":\"address\"}],\"name\":\"getERC20Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setParentAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Forwarder", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://a4c6ce68727c95d3f4e5b601f91f0b1b4bf56162eb218cb6ed2a8ed28ba74782"}