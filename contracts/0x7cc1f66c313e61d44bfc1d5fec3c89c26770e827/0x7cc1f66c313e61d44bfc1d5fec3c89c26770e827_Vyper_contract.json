{"SourceCode": "interface DividendERC20:\r\n    def distributeDividends(_value: uint256): nonpayable\r\n\r\n\r\ninterface ERC20:\r\n    def approve(_spender : address, _value : uint256) -> bool: nonpayable\r\n    def transfer(_to : address, _value : uint256) -> bool: nonpayable\r\n    def balanceOf(_owner: address) -> uint256: view\r\n\r\nstruct FarmInfo:\r\n    yieldPerBlock: uint256\r\n    tokenContract: address\r\n    lastBlockUpdate: uint256\r\n    id: uint256\r\n    marketType: uint256\r\n\r\nevent NewFarm:\r\n    tokenContract: address\r\n    marketType: uint256\r\n\r\nevent UpdateFarm:\r\n    tokenContract: address\r\n    marketType: uint256\r\n\r\nevent DeleteFarm:\r\n    tokenContract: address\r\n    marketType: uint256\r\n\r\nevent Harvest:\r\n    tokenContract: address\r\n    marketType: uint256\r\n    yieldAmount: uint256\r\n\r\nifexTokenContract: public(address)\r\nowner: public(address)\r\n\r\nfarmId: public(uint256)\r\ntokenToFarmInfo: public(HashMap[address, FarmInfo])\r\nidToFarmTokenAddress: public(HashMap[uint256, address])\r\n\r\nisInitialized: public(bool)\r\n\r\n@internal\r\ndef ownable(account: address):\r\n    assert account == self.owner, \"Invalid permission\"\r\n\r\n@external\r\ndef initialize(_ifexTokenContract: address):\r\n    assert self.isInitialized == False, \"Already initialized\"\r\n    self.ifexTokenContract = _ifexTokenContract\r\n    self.owner = msg.sender\r\n    self.isInitialized = True\r\n\r\n@external\r\ndef addFarm(tokenContract: address, yieldPerBlock: uint256, marketType: uint256):\r\n    self.ownable(msg.sender)\r\n    self.farmId += 1\r\n\r\n    farmInfo: FarmInfo = empty(FarmInfo)\r\n    farmInfo.yieldPerBlock = yieldPerBlock\r\n    farmInfo.tokenContract = tokenContract\r\n    farmInfo.id = self.farmId\r\n    farmInfo.lastBlockUpdate = block.number\r\n    farmInfo.marketType = marketType\r\n\r\n    self.tokenToFarmInfo[tokenContract] = farmInfo\r\n    self.idToFarmTokenAddress[farmInfo.id] = farmInfo.tokenContract\r\n\r\n    ERC20(self.ifexTokenContract).approve(tokenContract, MAX_UINT256)\r\n    log NewFarm(tokenContract, marketType)\r\n\r\n@external\r\ndef deleteFarm(tokenContract: address):\r\n    self.ownable(msg.sender)\r\n    \r\n    farmToDelete: FarmInfo = self.tokenToFarmInfo[tokenContract]\r\n    self.tokenToFarmInfo[farmToDelete.tokenContract] = empty(FarmInfo)\r\n    self.idToFarmTokenAddress[farmToDelete.id] = ZERO_ADDRESS\r\n    log DeleteFarm(tokenContract, farmToDelete.marketType)\r\n\r\n@external\r\ndef updateFarm(tokenContract: address, yieldPerBlock: uint256):\r\n    self.ownable(msg.sender)\r\n\r\n    farmToUpdate: FarmInfo = self.tokenToFarmInfo[tokenContract]\r\n    farmToUpdate.yieldPerBlock = yieldPerBlock\r\n\r\n    self.tokenToFarmInfo[tokenContract] = farmToUpdate\r\n    self.idToFarmTokenAddress[farmToUpdate.id] = farmToUpdate.tokenContract\r\n    log UpdateFarm(tokenContract, farmToUpdate.marketType)\r\n\r\n@external\r\ndef harvest(tokenContract: address):\r\n    assert msg.sender == tx.origin\r\n    farmToHarvest: FarmInfo = self.tokenToFarmInfo[tokenContract]\r\n\r\n    blockDelta: uint256 = block.number - farmToHarvest.lastBlockUpdate\r\n    if blockDelta > 0 and farmToHarvest.tokenContract == tokenContract:\r\n        yieldAmount: uint256 = farmToHarvest.yieldPerBlock * blockDelta\r\n        DividendERC20(farmToHarvest.tokenContract).distributeDividends(yieldAmount)\r\n        farmToHarvest.lastBlockUpdate = block.number\r\n        self.tokenToFarmInfo[farmToHarvest.tokenContract] = farmToHarvest\r\n        log Harvest(tokenContract, farmToHarvest.marketType, yieldAmount)\r\n\r\n@external\r\ndef withdraw():\r\n    self.ownable(msg.sender)\r\n\r\n    ifexBalance: uint256 = ERC20(self.ifexTokenContract).balanceOf(self)\r\n    ERC20(self.ifexTokenContract).transfer(self.owner, ifexBalance)", "ABI": "[{\"name\":\"NewFarm\",\"inputs\":[{\"type\":\"address\",\"name\":\"tokenContract\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"marketType\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"UpdateFarm\",\"inputs\":[{\"type\":\"address\",\"name\":\"tokenContract\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"marketType\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"DeleteFarm\",\"inputs\":[{\"type\":\"address\",\"name\":\"tokenContract\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"marketType\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"Harvest\",\"inputs\":[{\"type\":\"address\",\"name\":\"tokenContract\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"marketType\",\"indexed\":false},{\"type\":\"uint256\",\"name\":\"yieldAmount\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"initialize\",\"outputs\":[],\"inputs\":[{\"type\":\"address\",\"name\":\"_ifexTokenContract\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":106286},{\"name\":\"addFarm\",\"outputs\":[],\"inputs\":[{\"type\":\"address\",\"name\":\"tokenContract\"},{\"type\":\"uint256\",\"name\":\"yieldPerBlock\"},{\"type\":\"uint256\",\"name\":\"marketType\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":252783},{\"name\":\"deleteFarm\",\"outputs\":[],\"inputs\":[{\"type\":\"address\",\"name\":\"tokenContract\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":128731},{\"name\":\"updateFarm\",\"outputs\":[],\"inputs\":[{\"type\":\"address\",\"name\":\"tokenContract\"},{\"type\":\"uint256\",\"name\":\"yieldPerBlock\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":218830},{\"name\":\"harvest\",\"outputs\":[],\"inputs\":[{\"type\":\"address\",\"name\":\"tokenContract\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":185238},{\"name\":\"withdraw\",\"outputs\":[],\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":5448},{\"name\":\"ifexTokenContract\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1271},{\"name\":\"owner\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1301},{\"name\":\"farmId\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1331},{\"name\":\"tokenToFarmInfo\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"yieldPerBlock\"},{\"type\":\"address\",\"name\":\"tokenContract\"},{\"type\":\"uint256\",\"name\":\"lastBlockUpdate\"},{\"type\":\"uint256\",\"name\":\"id\"},{\"type\":\"uint256\",\"name\":\"marketType\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"arg0\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":5756},{\"name\":\"idToFarmTokenAddress\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[{\"type\":\"uint256\",\"name\":\"arg0\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1506},{\"name\":\"isInitialized\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1421}]", "ContractName": "Vyper_contract", "CompilerVersion": "vyper:0.2.7", "OptimizationUsed": "0", "Runs": "0", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}