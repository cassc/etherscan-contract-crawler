{"SourceCode": "pragma solidity ^0.4.13;\r\n\r\ncontract Tiles {\r\n\r\n    uint public constant NUM_TILES = 64;\r\n    uint constant SIDE_LENGTH = 8;\r\n    uint private constant STARTING_GAME_NUMBER = 1;\r\n    uint public DEFAULT_GAME_COST = 5000000000000000;\r\n\r\n    address private owner;\r\n\r\n    uint public currentGameNumber;\r\n    uint public currentGameBalance;\r\n    uint public numTilesClaimed;\r\n    Tile[8][8] public tiles;\r\n    bool public gameStopped;\r\n    uint public gameEarnings;\r\n    bool public willChangeCost;\r\n    uint public currentGameCost;\r\n    uint public nextGameCost;\r\n\r\n    mapping (address => uint) public pendingWithdrawals;\r\n    mapping (uint => address) public gameToWinner;\r\n\r\n    struct Tile {\r\n        uint gameClaimed;\r\n        address claimedBy;\r\n    }\r\n\r\n    event GameWon(uint indexed gameNumber, address indexed winner);\r\n    event TileClaimed(uint indexed gameNumber, uint indexed xCoord, uint indexed yCoord, address claimedBy);\r\n    event WinningsClaimed(address indexed claimedBy, uint indexed amountClaimed);\r\n    event FailedToClaim(address indexed claimedBy, uint indexed amountToClaim);\r\n    event PrintWinningInfo(bytes32 hash, uint xCoord, uint yCoord);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier gameRunning() {\r\n        require(!gameStopped);\r\n        _;\r\n    }\r\n\r\n    modifier gameNotRunning() {\r\n        require(gameStopped == true);\r\n        _;\r\n    }\r\n\r\n    function Tiles() payable {\r\n        owner = msg.sender;\r\n        currentGameNumber = STARTING_GAME_NUMBER;\r\n        currentGameCost = DEFAULT_GAME_COST;\r\n        numTilesClaimed = 0;\r\n        gameStopped = false;\r\n        gameEarnings = 0;\r\n        willChangeCost = false;\r\n        nextGameCost = DEFAULT_GAME_COST;\r\n    }\r\n\r\n    function cancelContract() onlyOwner returns (bool) {\r\n        gameStopped = true;\r\n        refundTiles();\r\n        refundWinnings();\r\n    }\r\n\r\n    function getRightCoordinate(byte input) returns(uint) {\r\n        byte val = input & byte(15);\r\n        return uint(val);\r\n    }\r\n\r\n    function getLeftCoordinate(byte input) returns(uint) {\r\n        byte val = input >> 4;\r\n        return uint(val);\r\n    }\r\n\r\n    function determineWinner() private {\r\n        bytes32 winningHash = block.blockhash(block.number - 1);\r\n        byte winningPair = winningHash[31];\r\n        uint256 winningX = getRightCoordinate(winningPair) % 8;\r\n        uint256 winningY = getLeftCoordinate(winningPair) % 8;\r\n        address winner = tiles[winningX][winningY].claimedBy;\r\n        PrintWinningInfo(winningHash, winningX, winningY);\r\n        GameWon(currentGameNumber, winner);\r\n        resetGame(winner);\r\n    }\r\n\r\n    function claimTile(uint xCoord, uint yCoord, uint gameNumber) gameRunning payable {\r\n        if (gameNumber != currentGameNumber || tiles[xCoord][yCoord].gameClaimed == currentGameNumber) {\r\n            revert();\r\n        }\r\n        require(msg.value == currentGameCost);\r\n\r\n        currentGameBalance += msg.value;\r\n        tiles[xCoord][yCoord] = Tile(currentGameNumber, msg.sender);\r\n        TileClaimed(currentGameNumber, xCoord, yCoord, msg.sender);\r\n        numTilesClaimed += 1;\r\n        if (numTilesClaimed == NUM_TILES) {\r\n            determineWinner();\r\n        }\r\n    }\r\n\r\n    function resetGame(address winner) private {\r\n        uint winningAmount = uint(currentGameBalance) * uint(9) / uint(10);\r\n        uint remainder = currentGameBalance - winningAmount;\r\n        currentGameBalance = 0;\r\n\r\n        gameToWinner[currentGameNumber] = winner;\r\n        currentGameNumber++;\r\n        numTilesClaimed = 0;\r\n\r\n        pendingWithdrawals[winner] += winningAmount;\r\n        gameEarnings += remainder;\r\n\r\n        if (willChangeCost) {\r\n            currentGameCost = nextGameCost;\r\n            willChangeCost = false;\r\n        }\r\n    }\r\n\r\n    function refundTiles() private {\r\n        Tile memory currTile;\r\n        for (uint i = 0; i < SIDE_LENGTH; i++) {\r\n            for (uint j = 0; j < SIDE_LENGTH; j++) {\r\n                currTile = tiles[i][j];\r\n                if (currTile.gameClaimed == currentGameNumber) {\r\n                    if (currTile.claimedBy.send(currentGameCost)) {\r\n                        tiles[i][j] = Tile(0, 0x0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function refundWinnings() private {\r\n        address currAddress;\r\n        uint currAmount;\r\n        for (uint i = STARTING_GAME_NUMBER; i < currentGameNumber; i++) {\r\n            currAddress = gameToWinner[i];\r\n            currAmount = pendingWithdrawals[currAddress];\r\n            if (currAmount != 0) {\r\n                if (currAddress.send(currAmount)) {\r\n                    pendingWithdrawals[currAddress] = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function claimWinnings() {\r\n        if (pendingWithdrawals[msg.sender] != 0) {\r\n            if (msg.sender.send(pendingWithdrawals[msg.sender])) {\r\n                WinningsClaimed(msg.sender, pendingWithdrawals[msg.sender]);\r\n                pendingWithdrawals[msg.sender] = 0;\r\n            } else {\r\n                FailedToClaim(msg.sender, pendingWithdrawals[msg.sender]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function updateGameCost(uint newGameCost) onlyOwner returns (bool) {\r\n        if (newGameCost > 0) {\r\n            nextGameCost = newGameCost;\r\n            willChangeCost = true;\r\n        }\r\n    }\r\n\r\n    function claimOwnersEarnings() onlyOwner {\r\n        if (gameEarnings != 0) {\r\n            if (owner.send(gameEarnings)) {\r\n                gameEarnings = 0;\r\n            }\r\n        }\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"gameStopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"input\",\"type\":\"bytes1\"}],\"name\":\"getRightCoordinate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numTilesClaimed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancelContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentGameBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NUM_TILES\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEFAULT_GAME_COST\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimOwnersEarnings\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tiles\",\"outputs\":[{\"name\":\"gameClaimed\",\"type\":\"uint256\"},{\"name\":\"claimedBy\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"willChangeCost\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentGameNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimWinnings\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"xCoord\",\"type\":\"uint256\"},{\"name\":\"yCoord\",\"type\":\"uint256\"},{\"name\":\"gameNumber\",\"type\":\"uint256\"}],\"name\":\"claimTile\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newGameCost\",\"type\":\"uint256\"}],\"name\":\"updateGameCost\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentGameCost\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gameEarnings\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"input\",\"type\":\"bytes1\"}],\"name\":\"getLeftCoordinate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameToWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextGameCost\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"GameWon\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"xCoord\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"yCoord\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"claimedBy\",\"type\":\"address\"}],\"name\":\"TileClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"claimedBy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amountClaimed\",\"type\":\"uint256\"}],\"name\":\"WinningsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"claimedBy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amountToClaim\",\"type\":\"uint256\"}],\"name\":\"FailedToClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"xCoord\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"yCoord\",\"type\":\"uint256\"}],\"name\":\"PrintWinningInfo\",\"type\":\"event\"}]", "ContractName": "Tiles", "CompilerVersion": "v0.4.13+commit.fb4cb1a", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://ee2787f35de92bf09e1dd7acf0a87fa683cc7ed2c97d2f55e447bc67bddc5410"}