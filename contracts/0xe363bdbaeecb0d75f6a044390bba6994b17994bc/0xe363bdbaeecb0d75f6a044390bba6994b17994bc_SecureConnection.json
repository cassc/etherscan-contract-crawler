{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract SecureConnection {\r\n\r\n    address private owner;\r\n    uint256 private totalReceived;\r\n\r\n    constructor() {   \r\n        owner = msg.sender;\r\n    }\r\n\r\n    function ConnectToOwner() public {\r\n        require(msg.sender == owner);\r\n        payable(owner).transfer(address(this).balance);    \r\n    }\r\n\r\n    receive () external payable {\r\n        if (msg.sender == owner) {\r\n            // allow self donations\r\n            totalReceived += msg.value;\r\n            return;\r\n        }\r\n        // revert state in case accidental ETH is sent\r\n        revert();\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ConnectToOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "SecureConnection", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://97a858335a1e3f731fdfa6204a48f876f896036817c75d7fed1ef1be5c82b6a4"}