{"SourceCode": "pragma solidity 0.8.18;\r\n//SPDX-License-Identifier: MIT\r\n\r\ncontract FeeSplit {\r\n\r\n    address public admin;\r\n    address public wallet_1;\r\n    address public wallet_2;\r\n\r\n    error NotAuthorized();\r\n    error NoBalance();\r\n\r\n    modifier onlyAuth() {\r\n        if(msg.sender != wallet_1 && msg.sender != wallet_2 && msg.sender != admin){\r\n            revert NotAuthorized();\r\n        }\r\n        _;\r\n    }\r\n\r\n    constructor(address _wallet_1, address _wallet_2){\r\n        wallet_1 = _wallet_1;\r\n        wallet_2 = _wallet_2;\r\n        admin = msg.sender;\r\n    }\r\n    \r\n    receive() external payable{}\r\n\r\n    function claim() external onlyAuth{\r\n        uint256 nativeBalance = address(this).balance;\r\n        uint256 amount_1 = nativeBalance * 60 / 100;\r\n        uint256 amount_2 = nativeBalance - amount_1;\r\n        payable(wallet_1).call{value: amount_1}(\"\");\r\n        payable(wallet_2).call{value: amount_2}(\"\");\r\n    }\r\n\r\n    function claimErc20(address tokenAddr, uint256 amount) external onlyAuth{\r\n        uint256 amount_1 = amount * 60 / 100;\r\n        uint256 amount_2 = amount - amount_1;\r\n        tokenAddr.call(abi.encodeWithSignature(\"transfer(address,uint256)\", wallet_1, amount_1));\r\n        tokenAddr.call(abi.encodeWithSignature(\"transfer(address,uint256)\", wallet_2, amount_2));\r\n    }\r\n\r\n\r\n    function setWallet_1(address newWallet) external{\r\n        if(msg.sender != admin) revert NotAuthorized();\r\n        wallet_1 = newWallet;\r\n    }\r\n\r\n    function setWallet_2(address newWallet) external{\r\n        if(msg.sender != admin) revert NotAuthorized();\r\n        wallet_2 = newWallet;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet_1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wallet_2\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NoBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setWallet_1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setWallet_2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet_1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet_2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "FeeSplit", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000ceac60f42ebf5ae6b2d304e0ba35c333c7a49f43000000000000000000000000f1bdec459a40f8779a35fb8821e66b83695c5af4", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e38e4b96c9f9f5575c2ee9bb205d2c0cfa7b16ad998da48147ee686053bd762a"}