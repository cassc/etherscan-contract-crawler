{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/contracts/TreasuryRegistry.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n\\r\\ncontract TreasuryRegistry {\\r\\n\\r\\n    address public immutable owner;\\r\\n    address[] public registry;\\r\\n\\r\\n    constructor(address _owner) public {\\r\\n        owner = _owner;\\r\\n        registry.push(address(0x1389388d01708118b497f59521f6943Be2541bb7)); //main\\r\\n        registry.push(address(0xa25B17D7deEE59f9e326e45cC3C0C1B158E74316)); //cvxcrv\\r\\n        registry.push(address(0xeB8121b44a290eE16981D87B92fc16b2366dE6B3)); //cvxfxs\\r\\n        registry.push(address(0x858847c21B075e45727fcB0B544BD843CD750361)); //cvxfpis\\r\\n        registry.push(address(0x148e58bB8d9c5278b6505b40923e6152B5238Cf8)); //cvxfxn\\r\\n        registry.push(address(0xBb48c21E9101A85EE6D00B4F1A7B946dF1B09EA7)); //cvxprisma\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"!owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function addToRegistry(address _address) external onlyOwner{\\r\\n        registry.push(_address);\\r\\n    }\\r\\n\\r\\n    function removeFromRegistry(uint256 _index) external onlyOwner{\\r\\n        registry[_index] = registry[registry.length-1];\\r\\n        registry.pop();\\r\\n    }\\r\\n\\r\\n    function registryLength() external view returns(uint256){\\r\\n        return registry.length;\\r\\n    }\\r\\n\\r\\n    function getAddressAt(uint256 _index) external view returns(address){\\r\\n        return registry[_index];\\r\\n    }\\r\\n\\r\\n    function registryList() external view returns(address[] memory list){\\r\\n        list = new address[](registry.length);\\r\\n\\r\\n        for(uint256 i = 0; i < registry.length; i++){\\r\\n            list[i] = registry[i];\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addToRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getAddressAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"list\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"removeFromRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TreasuryRegistry", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000001389388d01708118b497f59521f6943be2541bb7", "EVMVersion": "istanbul", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}