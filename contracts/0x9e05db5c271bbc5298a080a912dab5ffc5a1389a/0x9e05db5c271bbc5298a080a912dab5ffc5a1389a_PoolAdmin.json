{"SourceCode": "// Verified using https://dapp.tools\n\n// hevm: flattened sources of src/lender/admin/pool.sol\n// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.7.6;\n\n////// src/lender/admin/pool.sol\n/* pragma solidity >=0.7.6; */\n\ninterface AssessorLike_3 {\n    function file(bytes32 name, uint256 value) external;\n}\n\ninterface LendingAdapterLike {\n    function raise(uint256 amount) external;\n    function sink(uint256 amount) external;\n    function heal() external;\n    function file(bytes32 what, uint value) external;\n}\n\ninterface FeedLike {\n    function overrideWriteOff(uint loan, uint writeOffGroupIndex_) external;\n    function file(bytes32 name, uint risk_, uint thresholdRatio_, uint ceilingRatio_, uint rate_, uint recoveryRatePD_) external;\n    function file(bytes32 name, uint rate_, uint writeOffPercentage_, uint overdueDays_) external;\n    function file(bytes32 name, uint value) external;\n    function file(bytes32 name, bytes32 nftID_, uint maturityDate_) external;\n    function update(bytes32 nftID_,  uint value) external;\n    function update(bytes32 nftID_, uint value, uint risk_) external;\n}\n\ninterface MemberlistLike_3 {\n    function updateMember(address usr, uint256 validUntil) external;\n    function updateMembers(address[] calldata users, uint256 validUntil) external;\n}\n\ninterface CoordinatorLike_2 {\n    function file(bytes32 name, uint value) external;\n    function file(bytes32 name, bool value) external;\n    function poolClosing() external view returns(bool);\n}\n\n// Wrapper contract for various pool management tasks.\ncontract PoolAdmin {\n  \n    AssessorLike_3        public assessor;\n    LendingAdapterLike  public lending;\n    FeedLike            public navFeed;\n    MemberlistLike_3      public seniorMemberlist;\n    MemberlistLike_3      public juniorMemberlist;\n    CoordinatorLike_2     public coordinator;\n\n    bool                public live = true;\n\n    mapping (address => uint256) public admin_level;\n\n    uint public constant LEVEL_1 = 1;\n    uint public constant LEVEL_2 = 2;\n    uint public constant LEVEL_3 = 3;\n\n    modifier level1     { require(admin_level[msg.sender] >= LEVEL_1 && live); _; }\n    modifier level2     { require(admin_level[msg.sender] >= LEVEL_2 && live); _; }\n    modifier level3     { require(admin_level[msg.sender] == LEVEL_3 && live); _; }\n\n    constructor() {\n        admin_level[msg.sender] = LEVEL_3;\n        emit SetAdminLevel(msg.sender, LEVEL_3);\n    }\n\n    // --- Liquidity Management, authorized by level 1 admins ---\n    event SetMaxReserve(uint256 value);\n    event RaiseCreditline(uint256 amount);\n    event SinkCreditline(uint256 amount);\n    event HealCreditline();\n    event UpdateSeniorMember(address indexed usr, uint256 validUntil);\n    event UpdateSeniorMembers(address[] indexed users, uint256 validUntil);\n    event UpdateJuniorMember(address indexed usr, uint256 validUntil);\n    event UpdateJuniorMembers(address[] indexed users, uint256 validUntil);\n\n    // Manage max reserve\n    function setMaxReserve(uint256 value) public level1 {\n        assessor.file(\"maxReserve\", value);\n        emit SetMaxReserve(value);\n    }\n\n    // Manage creditline\n    function raiseCreditline(uint256 amount) public level1 {\n        lending.raise(amount);\n        emit RaiseCreditline(amount);\n    }\n\n    function sinkCreditline(uint256 amount) public level1 {\n        lending.sink(amount);\n        emit SinkCreditline(amount);\n    }\n\n    function healCreditline() public level1 {\n        lending.heal();\n        emit HealCreditline();\n    }\n\n    function setMaxReserveAndRaiseCreditline(uint256 newMaxReserve, uint256 creditlineRaise) public level1 {\n        setMaxReserve(newMaxReserve);\n        raiseCreditline(creditlineRaise);\n    }\n\n    function setMaxReserveAndSinkCreditline(uint256 newMaxReserve, uint256 creditlineSink) public level1 {\n        setMaxReserve(newMaxReserve);\n        sinkCreditline(creditlineSink);\n    }\n\n    // Manage memberlists\n    function updateSeniorMember(address usr, uint256 validUntil) public level1 {\n        seniorMemberlist.updateMember(usr, validUntil);\n        emit UpdateSeniorMember(usr, validUntil);\n    }\n\n    function updateSeniorMembers(address[] memory users, uint256 validUntil) public level1 {\n        seniorMemberlist.updateMembers(users, validUntil);\n        emit UpdateSeniorMembers(users, validUntil);\n    }\n\n    function updateJuniorMember(address usr, uint256 validUntil) public level1 {\n        juniorMemberlist.updateMember(usr, validUntil);\n        emit UpdateJuniorMember(usr, validUntil);\n    }\n\n    function updateJuniorMembers(address[] memory users, uint256 validUntil) public level1 {\n        juniorMemberlist.updateMembers(users, validUntil);\n        emit UpdateJuniorMembers(users, validUntil);\n    }\n    \n    // --- Risk Management, authorized by level 2 admins ---\n    event OverrideWriteOff(uint loan, uint writeOffGroupIndex);\n    event AddRiskGroup(uint risk_, uint thresholdRatio_, uint ceilingRatio_, uint rate_, uint recoveryRatePD_);\n    event AddRiskGroups(uint[] risks_, uint[] thresholdRatios_, uint[] ceilingRatios_, uint[] rates_);\n    event AddWriteOffGroup(uint rate_, uint writeOffPercentage_, uint overdueDays_);\n    event SetMatBuffer(uint value);\n    event UpdateNFTValue(bytes32 nftID_, uint value);\n    event UpdateNFTValueRisk(bytes32 nftID_, uint value, uint risk_);\n    event UpdateNFTMaturityDate(bytes32 nftID_, uint maturityDate_);\n\n    function overrideWriteOff(uint loan, uint writeOffGroupIndex_) public level2 {\n        navFeed.overrideWriteOff(loan, writeOffGroupIndex_);\n        emit OverrideWriteOff(loan, writeOffGroupIndex_);\n    }\n\n    function addRiskGroup(uint risk_, uint thresholdRatio_, uint ceilingRatio_, uint rate_, uint recoveryRatePD_) public level2 {\n        navFeed.file(\"riskGroup\", risk_, thresholdRatio_, ceilingRatio_, rate_, recoveryRatePD_);\n        emit AddRiskGroup(risk_, thresholdRatio_, ceilingRatio_, rate_, recoveryRatePD_);\n    }\n\n    function addRiskGroups(uint[] memory risks_, uint[] memory thresholdRatios_, uint[] memory ceilingRatios_, uint[] memory rates_, uint[] memory recoveryRatePDs_) public level2 {\n        require(risks_.length == thresholdRatios_.length && thresholdRatios_.length == ceilingRatios_.length && ceilingRatios_.length == rates_.length && rates_.length == recoveryRatePDs_.length, \"non-matching-arguments\");\n        for (uint i = 0; i < risks_.length; i++) {\n            addRiskGroup(risks_[i], thresholdRatios_[i], ceilingRatios_[i], rates_[i], recoveryRatePDs_[i]);\n        }\n    }\n\n    function addWriteOffGroup(uint rate_, uint writeOffPercentage_, uint overdueDays_) public level2 {\n        navFeed.file(\"writeOffGroup\", rate_, writeOffPercentage_, overdueDays_);\n        emit AddWriteOffGroup(rate_, writeOffPercentage_, overdueDays_);\n    }\n\n    function addWriteOffGroups(uint[] memory rates_, uint[] memory writeOffPercentages_, uint[] memory overdueDays_) public level2 {\n        require(rates_.length == writeOffPercentages_.length && writeOffPercentages_.length == overdueDays_.length, \"non-matching-arguments\");\n        for (uint i = 0; i < rates_.length; i++) {\n            addWriteOffGroup(rates_[i], writeOffPercentages_[i], overdueDays_[i]);\n        }\n    }\n\n    function setMatBuffer(uint value) public level3 {\n        lending.file(\"buffer\", value);\n        emit SetMatBuffer(value);\n    }\n\n    function updateNFTValue(bytes32 nftID_, uint value) public level2 {\n        navFeed.update(nftID_, value);\n        emit UpdateNFTValue(nftID_, value);\n    }\n\n    function updateNFTValueRisk(bytes32 nftID_, uint value, uint risk_) public level2 {\n        navFeed.update(nftID_, value, risk_);\n        emit UpdateNFTValueRisk(nftID_, value, risk_);\n    }\n\n    function updateNFTMaturityDate(bytes32 nftID_, uint maturityDate_) public level2 {\n        navFeed.file(\"maturityDate\", nftID_, maturityDate_);\n        emit UpdateNFTMaturityDate(nftID_, maturityDate_);\n    }\n\n    // --- Pool Governance, authorized by level 3 admins ---\n    event File(bytes32 indexed what, bool indexed data);\n    event SetSeniorInterestRate(uint value);\n    event SetDiscountRate(uint value);\n    event SetMinimumEpochTime(uint value);\n    event SetChallengeTime(uint value);\n    event SetMinSeniorRatio(uint value);\n    event SetMaxSeniorRatio(uint value);\n    event SetEpochScoringWeights(uint weightSeniorRedeem, uint weightJuniorRedeem, uint weightJuniorSupply, uint weightSeniorSupply);\n    event ClosePool();\n    event UnclosePool();\n    event SetAdminLevel(address indexed usr, uint indexed level);\n    event Depend(bytes32 indexed contractname, address addr);\n\n    function setSeniorInterestRate(uint value) public level3 {\n        assessor.file(\"seniorInterestRate\", value);\n        emit SetSeniorInterestRate(value);\n    }\n\n    function setDiscountRate(uint value) public level3 {\n        navFeed.file(\"discountRate\", value);\n        emit SetDiscountRate(value);\n    }\n\n    function setMinimumEpochTime(uint value) public level3 {\n        coordinator.file(\"minimumEpochTime\", value);\n        emit SetMinimumEpochTime(value);\n    }\n\n    function setChallengeTime(uint value) public level3 {\n        coordinator.file(\"challengeTime\", value);\n        emit SetChallengeTime(value);\n    }\n\n    function setMinSeniorRatio(uint value) public level3 {\n        assessor.file(\"minSeniorRatio\", value);\n        emit SetMinSeniorRatio(value);\n    }\n\n    function setMaxSeniorRatio(uint value) public level3 {\n        assessor.file(\"maxSeniorRatio\", value);\n        emit SetMaxSeniorRatio(value);\n    }\n\n    function setEpochScoringWeights(uint weightSeniorRedeem, uint weightJuniorRedeem, uint weightJuniorSupply, uint weightSeniorSupply) public level3 {\n        coordinator.file(\"weightSeniorRedeem\", weightSeniorRedeem);\n        coordinator.file(\"weightJuniorRedeem\", weightJuniorRedeem);\n        coordinator.file(\"weightJuniorSupply\", weightJuniorSupply);\n        coordinator.file(\"weightSeniorSupply\", weightSeniorSupply);\n        emit SetEpochScoringWeights(weightSeniorRedeem, weightJuniorRedeem, weightJuniorSupply, weightSeniorSupply);\n    }\n\n    function closePool() public level3 {\n        require(coordinator.poolClosing() == false, \"already-closed\");\n        coordinator.file(\"poolClosing\", true);\n        emit ClosePool();\n    }\n\n    function unclosePool() public level3 {\n        require(coordinator.poolClosing() == true, \"not-yet-closed\");\n        coordinator.file(\"poolClosing\", false);\n        emit UnclosePool();\n    }\n\n    modifier canSetAdminlevel(uint level) {\n        require(level >= 0 && level <= LEVEL_3);\n        if (level == 0) require(admin_level[msg.sender] == LEVEL_3);\n        if (level == LEVEL_1) require(admin_level[msg.sender] >= LEVEL_2);\n        if (level == LEVEL_2 || level == LEVEL_3) require(admin_level[msg.sender] == LEVEL_3);\n        _;\n    }\n\n    function setAdminLevel(address usr, uint level) public canSetAdminlevel(level) {\n        admin_level[usr] = level;\n        emit SetAdminLevel(usr, level);\n    }\n\n    // Aliases so the root contract can use its relyContract/denyContract methods\n    function rely(address usr) public level3 {\n        setAdminLevel(usr, 3);\n    }\n\n    function deny(address usr) public level3 {\n        setAdminLevel(usr, 0);\n    }\n\n    function depend(bytes32 contractName, address addr) public level3 {\n        if (contractName == \"assessor\") {\n            assessor = AssessorLike_3(addr);\n        } else if (contractName == \"lending\") {\n            lending = LendingAdapterLike(addr);\n        } else if (contractName == \"seniorMemberlist\") {\n            seniorMemberlist = MemberlistLike_3(addr);\n        } else if (contractName == \"juniorMemberlist\") {\n            juniorMemberlist = MemberlistLike_3(addr);\n        } else if (contractName == \"navFeed\") {\n            navFeed = FeedLike(addr);\n        } else if (contractName == \"coordinator\") {\n            coordinator = CoordinatorLike_2(addr);\n        } else revert();\n        emit Depend(contractName, addr);\n    }\n\n    function file(bytes32 what, bool data) public level3 {\n        live = data;\n        emit File(what, data);\n    }\n\n}\n", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"risk_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"thresholdRatio_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ceilingRatio_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recoveryRatePD_\",\"type\":\"uint256\"}],\"name\":\"AddRiskGroup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"risks_\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"thresholdRatios_\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ceilingRatios_\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"rates_\",\"type\":\"uint256[]\"}],\"name\":\"AddRiskGroups\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"writeOffPercentage_\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"overdueDays_\",\"type\":\"uint256\"}],\"name\":\"AddWriteOffGroup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ClosePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"contractname\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Depend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"data\",\"type\":\"bool\"}],\"name\":\"File\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"HealCreditline\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loan\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"writeOffGroupIndex\",\"type\":\"uint256\"}],\"name\":\"OverrideWriteOff\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaiseCreditline\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"SetAdminLevel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetChallengeTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetDiscountRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weightSeniorRedeem\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weightJuniorRedeem\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weightJuniorSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weightSeniorSupply\",\"type\":\"uint256\"}],\"name\":\"SetEpochScoringWeights\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetMatBuffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetMaxReserve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetMaxSeniorRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetMinSeniorRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetMinimumEpochTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetSeniorInterestRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SinkCreditline\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"UnclosePool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"UpdateJuniorMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"UpdateJuniorMembers\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"nftID_\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityDate_\",\"type\":\"uint256\"}],\"name\":\"UpdateNFTMaturityDate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"nftID_\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"UpdateNFTValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"nftID_\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"risk_\",\"type\":\"uint256\"}],\"name\":\"UpdateNFTValueRisk\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"UpdateSeniorMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"UpdateSeniorMembers\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LEVEL_1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEVEL_2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LEVEL_3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"risk_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"thresholdRatio_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ceilingRatio_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recoveryRatePD_\",\"type\":\"uint256\"}],\"name\":\"addRiskGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"risks_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"thresholdRatios_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ceilingRatios_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"rates_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"recoveryRatePDs_\",\"type\":\"uint256[]\"}],\"name\":\"addRiskGroups\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"writeOffPercentage_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overdueDays_\",\"type\":\"uint256\"}],\"name\":\"addWriteOffGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"rates_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"writeOffPercentages_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"overdueDays_\",\"type\":\"uint256[]\"}],\"name\":\"addWriteOffGroups\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admin_level\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assessor\",\"outputs\":[{\"internalType\":\"contract AssessorLike_3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coordinator\",\"outputs\":[{\"internalType\":\"contract CoordinatorLike_2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"contractName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"depend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"data\",\"type\":\"bool\"}],\"name\":\"file\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"healCreditline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"juniorMemberlist\",\"outputs\":[{\"internalType\":\"contract MemberlistLike_3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lending\",\"outputs\":[{\"internalType\":\"contract LendingAdapterLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"live\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"navFeed\",\"outputs\":[{\"internalType\":\"contract FeedLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loan\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"writeOffGroupIndex_\",\"type\":\"uint256\"}],\"name\":\"overrideWriteOff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"raiseCreditline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seniorMemberlist\",\"outputs\":[{\"internalType\":\"contract MemberlistLike_3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"setAdminLevel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setChallengeTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setDiscountRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"weightSeniorRedeem\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weightJuniorRedeem\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weightJuniorSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weightSeniorSupply\",\"type\":\"uint256\"}],\"name\":\"setEpochScoringWeights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMatBuffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMaxReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditlineRaise\",\"type\":\"uint256\"}],\"name\":\"setMaxReserveAndRaiseCreditline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditlineSink\",\"type\":\"uint256\"}],\"name\":\"setMaxReserveAndSinkCreditline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMaxSeniorRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMinSeniorRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMinimumEpochTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setSeniorInterestRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sinkCreditline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unclosePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"updateJuniorMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"updateJuniorMembers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nftID_\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maturityDate_\",\"type\":\"uint256\"}],\"name\":\"updateNFTMaturityDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nftID_\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateNFTValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nftID_\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"risk_\",\"type\":\"uint256\"}],\"name\":\"updateNFTValueRisk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"updateSeniorMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"updateSeniorMembers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PoolAdmin", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}