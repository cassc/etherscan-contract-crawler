{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"DanielArshamErosionsProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\n/*\\r\\n\\r\\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2557   \u2588\u2588\u2557\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557\\r\\n    \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551\\r\\n    \u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2557 \u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2551\\r\\n    \u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2551\\r\\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551 \u255a\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\\r\\n    \u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u2550\u2550\u255d\u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\\r\\n\\r\\n  \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557  \u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557\\r\\n \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\\r\\n \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\\r\\n \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u255a\u2550\u2550\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\\r\\n \u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\\r\\n \u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d\\r\\n\\r\\n                       ______\\r\\n                      /     /\\\\\\r\\n                     /     /##\\\\\\r\\n                    /     /####\\\\\\r\\n                   /     /######\\\\\\r\\n                  /     /########\\\\\\r\\n                 /     /##########\\\\\\r\\n                /     /#####/\\\\#####\\\\\\r\\n               /     /#####/++\\\\#####\\\\\\r\\n              /     /#####/++++\\\\#####\\\\\\r\\n             /     /#####/\\\\+++++\\\\#####\\\\\\r\\n            /     /#####/  \\\\+++++\\\\#####\\\\\\r\\n           /     /#####/    \\\\+++++\\\\#####\\\\\\r\\n          /     /#####/      \\\\+++++\\\\#####\\\\\\r\\n         /     /#####/        \\\\+++++\\\\#####\\\\\\r\\n        /     /#####/__________\\\\+++++\\\\#####\\\\\\r\\n       /                        \\\\+++++\\\\#####\\\\\\r\\n      /__________________________\\\\+++++\\\\####/\\r\\n      \\\\+++++++++++++++++++++++++++++++++\\\\##/\\r\\n       \\\\+++++++++++++++++++++++++++++++++\\\\/\\r\\n        ``````````````````````````````````\\r\\n\\r\\n              \u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557  \u2588\u2588\u2557\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557\\r\\n             \u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u255a\u2588\u2588\u2557\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\\r\\n             \u2588\u2588\u2551      \u255a\u2588\u2588\u2588\u2554\u255d \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\\r\\n             \u2588\u2588\u2551      \u2588\u2588\u2554\u2588\u2588\u2557 \u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u255d\\r\\n             \u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2554\u255d \u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2551\\r\\n              \u255a\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d\u255a\u2550\u255d\\r\\n\\r\\n*/\\r\\n\\r\\nimport \\\"ICxipRegistry.sol\\\";\\r\\n\\r\\n// sha256(abi.encodePacked('eip1967.CxipRegistry.DanielArshamErosionsProxy')) == 0x34614b2160c4ad0a9004a062b1210e491f551c3b3eb86397949dc0279cf60c0d\\r\\ncontract DanielArshamErosionsProxy {\\r\\n    fallback() external payable {\\r\\n        // sha256(abi.encodePacked('eip1967.CxipRegistry.DanielArshamErosions')) == 0x748042799f1a8ea5aa2ae183edddb216f96c3c6ada37066aa2ce51a56438ede7\\r\\n        address _target = ICxipRegistry(0xC267d41f81308D7773ecB3BDd863a902ACC01Ade).getCustomSource(0x748042799f1a8ea5aa2ae183edddb216f96c3c6ada37066aa2ce51a56438ede7);\\r\\n        assembly {\\r\\n            calldatacopy(0, 0, calldatasize())\\r\\n            let result := delegatecall(gas(), _target, 0, calldatasize(), 0, 0)\\r\\n            returndatacopy(0, 0, returndatasize())\\r\\n            switch result\\r\\n            case 0 {\\r\\n                revert(0, returndatasize())\\r\\n            }\\r\\n            default {\\r\\n                return(0, returndatasize())\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\"\r\n    },\r\n    \"ICxipRegistry.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\n/*______/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\\\_______/\\\\\\\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\___\\r\\n _____/\\\\\\\\\\\\////////__\\\\///\\\\\\\\\\\\___/\\\\\\\\\\\\/__\\\\/////\\\\\\\\\\\\///__\\\\/\\\\\\\\\\\\/////////\\\\\\\\\\\\_\\r\\n  ___/\\\\\\\\\\\\/_____________\\\\///\\\\\\\\\\\\\\\\\\\\\\\\/________\\\\/\\\\\\\\\\\\_____\\\\/\\\\\\\\\\\\_______\\\\/\\\\\\\\\\\\_\\r\\n   __/\\\\\\\\\\\\_________________\\\\//\\\\\\\\\\\\\\\\__________\\\\/\\\\\\\\\\\\_____\\\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\/__\\r\\n    _\\\\/\\\\\\\\\\\\__________________\\\\/\\\\\\\\\\\\\\\\__________\\\\/\\\\\\\\\\\\_____\\\\/\\\\\\\\\\\\/////////____\\r\\n     _\\\\//\\\\\\\\\\\\_________________/\\\\\\\\\\\\\\\\\\\\\\\\_________\\\\/\\\\\\\\\\\\_____\\\\/\\\\\\\\\\\\_____________\\r\\n      __\\\\///\\\\\\\\\\\\_____________/\\\\\\\\\\\\////\\\\\\\\\\\\_______\\\\/\\\\\\\\\\\\_____\\\\/\\\\\\\\\\\\_____________\\r\\n       ____\\\\////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\\\/___\\\\///\\\\\\\\\\\\__/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\\\/\\\\\\\\\\\\_____________\\r\\n        _______\\\\/////////__\\\\///_______\\\\///__\\\\///////////__\\\\///____________*/\\r\\n\\r\\ninterface ICxipRegistry {\\r\\n    function getAsset() external view returns (address);\\r\\n\\r\\n    function getAssetSigner() external view returns (address);\\r\\n\\r\\n    function getAssetSource() external view returns (address);\\r\\n\\r\\n    function getCopyright() external view returns (address);\\r\\n\\r\\n    function getCopyrightSource() external view returns (address);\\r\\n\\r\\n    function getCustomSource(bytes32 name) external view returns (address);\\r\\n\\r\\n    function getCustomSourceFromString(string memory name) external view returns (address);\\r\\n\\r\\n    function getERC1155CollectionSource() external view returns (address);\\r\\n\\r\\n    function getERC721CollectionSource() external view returns (address);\\r\\n\\r\\n    function getIdentitySource() external view returns (address);\\r\\n\\r\\n    function getPA1D() external view returns (address);\\r\\n\\r\\n    function getPA1DSource() external view returns (address);\\r\\n\\r\\n    function getProvenance() external view returns (address);\\r\\n\\r\\n    function getProvenanceSource() external view returns (address);\\r\\n\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function setAsset(address proxy) external;\\r\\n\\r\\n    function setAssetSigner(address source) external;\\r\\n\\r\\n    function setAssetSource(address source) external;\\r\\n\\r\\n    function setCopyright(address proxy) external;\\r\\n\\r\\n    function setCopyrightSource(address source) external;\\r\\n\\r\\n    function setCustomSource(string memory name, address source) external;\\r\\n\\r\\n    function setERC1155CollectionSource(address source) external;\\r\\n\\r\\n    function setERC721CollectionSource(address source) external;\\r\\n\\r\\n    function setIdentitySource(address source) external;\\r\\n\\r\\n    function setPA1D(address proxy) external;\\r\\n\\r\\n    function setPA1DSource(address source) external;\\r\\n\\r\\n    function setProvenance(address proxy) external;\\r\\n\\r\\n    function setProvenanceSource(address source) external;\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 20000\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true,\r\n      \"bytecodeHash\": \"none\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "DanielArshamErosionsProxy", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "1", "Runs": "20000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "1", "Implementation": "0xa61f0c786e34778c8772162e4928cbd2024a8297", "SwarmSource": "none://none"}