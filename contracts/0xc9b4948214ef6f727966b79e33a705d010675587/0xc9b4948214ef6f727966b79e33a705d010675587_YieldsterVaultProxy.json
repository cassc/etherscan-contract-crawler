{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.1;\r\n\r\n/// @title IProxy - Helper interface to access masterCopy of the Proxy on-chain\r\n/// @author Richard Meissner - <richard@gnosis.io>\r\ninterface IProxy {\r\n    function masterCopy() external view returns (address);\r\n}\r\n\r\n/// @title YieldsterVaultProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\r\n/// @author Stefan George - <stefan@gnosis.io>\r\n/// @author Richard Meissner - <richard@gnosis.io>\r\ncontract YieldsterVaultProxy {\r\n    // masterCopy always needs to be first declared variable, to ensure that it is at the same location in the contracts to which calls are delegated.\r\n    // To reduce deployment costs this variable is internal and needs to be retrieved via `getStorageAt`\r\n    address internal masterCopy;\r\n\r\n    /// @dev Constructor function sets address of master copy contract.\r\n    /// @param _masterCopy Master copy address.\r\n    constructor(address _masterCopy)  {\r\n        require(\r\n            _masterCopy != address(0),\r\n            \"Invalid master copy address provided\"\r\n        );\r\n        masterCopy = _masterCopy;\r\n    }\r\n\r\n    /// @dev Fallback function forwards all transactions and returns all received return data.\r\n    fallback() external payable {\r\n        // solium-disable-next-line security/no-inline-assembly\r\n        assembly {\r\n            let _masterCopy := and(\r\n                sload(0),\r\n                0xffffffffffffffffffffffffffffffffffffffff\r\n            )\r\n            // 0xa619486e == keccak(\"masterCopy()\"). The value is right padded to 32-bytes with 0s\r\n            if eq(\r\n                calldataload(0),\r\n                0xa619486e00000000000000000000000000000000000000000000000000000000\r\n            ) {\r\n                mstore(0, _masterCopy)\r\n                return(0, 0x20)\r\n            }\r\n            calldatacopy(0, 0, calldatasize())\r\n            let success := delegatecall(\r\n                gas(),\r\n                _masterCopy,\r\n                0,\r\n                calldatasize(),\r\n                0,\r\n                0\r\n            )\r\n            returndatacopy(0, 0, returndatasize())\r\n            if eq(success, 0) {\r\n                revert(0, returndatasize())\r\n            }\r\n            return(0, returndatasize())\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_masterCopy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "YieldsterVaultProxy", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "100", "ConstructorArguments": "00000000000000000000000085f24c23ca59512387576bf246a57b245aa26571", "EVMVersion": "petersburg", "Library": "", "LicenseType": "Unlicense", "Proxy": "1", "Implementation": "0x33ea496a9b08de5366e9c6b650e718e1fe70ebe1", "SwarmSource": "ipfs://3b47fb19c43088d22b9a2ea227e6ef92d3ba52c14f352f06ff3b47a6283ffa90"}