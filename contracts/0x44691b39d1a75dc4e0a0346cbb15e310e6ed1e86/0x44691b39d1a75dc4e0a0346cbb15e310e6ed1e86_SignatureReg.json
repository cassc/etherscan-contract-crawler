{"SourceCode": "//! A decentralised registry of 4-bytes signatures => method mappings\r\n//! By Parity Team (Ethcore), 2016.\r\n//! Released under the Apache Licence 2.\r\n\r\npragma solidity ^0.4.1;\r\n\r\ncontract Owned {\r\n  modifier only_owner {\r\n    if (msg.sender != owner) return;\r\n    _;\r\n  }\r\n\r\n  event NewOwner(address indexed old, address indexed current);\r\n\r\n  function setOwner(address _new) only_owner { NewOwner(owner, _new); owner = _new; }\r\n\r\n  address public owner = msg.sender;\r\n}\r\n\r\ncontract SignatureReg is Owned {\r\n  // mapping of signatures to entries\r\n  mapping (bytes4 => string) public entries;\r\n\r\n  // the total count of registered signatures\r\n  uint public totalSignatures = 0;\r\n\r\n  // allow only new calls to go in\r\n  modifier when_unregistered(bytes4 _signature) {\r\n    if (bytes(entries[_signature]).length != 0) return;\r\n    _;\r\n  }\r\n\r\n  // dispatched when a new signature is registered\r\n  event Registered(address indexed creator, bytes4 indexed signature, string method);\r\n\r\n  // constructor with self-registration\r\n  function SignatureReg() {\r\n    register('register(string)');\r\n  }\r\n\r\n  // registers a method mapping\r\n  function register(string _method) returns (bool) {\r\n    return _register(bytes4(sha3(_method)), _method);\r\n  }\r\n\r\n  // internal register function, signature => method\r\n  function _register(bytes4 _signature, string _method) internal when_unregistered(_signature) returns (bool) {\r\n    entries[_signature] = _method;\r\n    totalSignatures = totalSignatures + 1;\r\n    Registered(msg.sender, _signature, _method);\r\n    return true;\r\n  }\r\n\r\n  // in the case of any extra funds\r\n  function drain() only_owner {\r\n    if (!msg.sender.send(this.balance)) {\r\n      throw;\r\n    }\r\n  }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSignatures\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drain\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"entries\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_method\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"signature\",\"type\":\"bytes4\"},{\"indexed\":false,\"name\":\"method\",\"type\":\"string\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"old\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"current\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"}]", "ContractName": "SignatureReg", "CompilerVersion": "v0.4.2+commit.af6afb04", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}