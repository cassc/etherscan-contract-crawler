{"SourceCode": "/**\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!!!!!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!!!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!!!~^^^~!!!!!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!!!!!~^^~!!!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!!7^.^?J?7~::~!7!!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!!77~^:^!??~.^!!!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!7!.:5BY?7JY5Y7^:^!77!!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!!7!^:~J55J7JPP~.~7!!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!!7~ 7#5^:::::^!J55?^:^!77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!!77~::?PP?~^~!77JBJ.^77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!77^ J#7^^^^~^^^^::~?557^:~77!!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!!77^.~YPJ!~~!7??J?77PP:.77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!77~ YB~^^~~7?J~^^^^^^^~?5Y!:^!77!!!!~~~~!!!!!!!!!!!!!!!!!!!!!!!!!!!!777^.!P57~~~!7?7?5Y7??7JG~ !7!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!77~ JB~^~~~!!!J57^^^^^^^^:^?5?::!777!!!!77777!!!!!!!!!!!!!!!!!!!!!7777^.!P5!~~~~7??7?PY777??7?G! !7!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!7! 7#!^~~~!!^~!?P?^^~~^^^^^^:!YJ^:!7!!~~^^::::....................:::.~P5~~!!~!7??7?GY?777???7?B~ !7!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!77.:#7^~~~~!~^^~7?GJ^~~~~~^^~!~:^JJ^..........:::::::::::::::::::::::~P5~^!!~~!????7G5J7777777?7?B^.77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!77~ 55^~~~^~~^^^^~7?GJ^~~~~~~^^~7~:^JY~.::::::::^^^^^^^^^^^^^^^^^^^:^YP!^!!~~~!????7PPJ?77777!!!7!JB.:77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~~~~~^^^::^^~~~~~~~~~~~~~~~~~~!!!77.^#~^^^^^~~^^^^^77?B7^~~~~~~~^~77~^75Y~^~!7??JYYYYYYYYYYYYYYJJ??7JBJ:!7~~~~!?????JBJJ777777!!!!!~PY ~77!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~~~~^:.         .:~~~~~~~~~~~~~~~!!77! YP:^^^^^~~^^^^^!77JG~~~~~~~~~~~!777?PB5YYJ?7!!~~^^^^^^^^~~~!!77?Y5YYY7!~~!?????7G5JJ777777!!!!!~!#^.77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~~~~^.               .:~~~~~~~~~~~~~!!7?^ B?:^^^::~^^^^~^~77755^~~~~~~~~~77???!~^^:::::^^^^^^^^^^^^^^^^^^^^^^~!777!7??????BJJJ7777777~~!~^:GJ !77!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~~~^:                    .~~~~~~~~~~~!!!7?:.#~:^^:..~^^^^^^~77?JG~~~~~~~~~~~~~~~~~^^^^^^^^^~~~~~~~~~~~~~~^^^^^^~~~!7???????JGYYY?777777!^^^^:5P ~?7!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~~~^.                       .~~~~~~~~~~!!!7?::#^ ..  :~^^^^^^~75Y?Y!~~~~~~~~~~~~~~^^^~~^^^^^^^^^~~~~~~~~~~~^^^^^~~!7??????????YJ?PJ7!!!7!7^^^^:PP ^7?7!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n~^.                          .~~~~~~~~~!!!7?:.#!     :~^^^^^^~7G7^~~~~~~~~~~~~^^^^~~^~~~^^^^^^^^^^^~~~~~~~~^^^~~!7??????????????7PY??????7^^^:!&7...:!77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n.                             ^~~~~~~~~!!!7?! P5     .~^~~~^~!7PG~~~~~~~~~~~^^^^~~~~~~~~~~~^^^^^^^~77777777~~~~!7????????????????PGYYYYJJ!^^:~#P^:.....~77!!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                              ^~~~~~~~!!!7??~ ~&7     :!77777?JB?~~~~~~~~~~^^^^^^^^^~~~~~~~~~~~~~~^~777777!~~~!??????????????????JJYJJ?7~^::?#5^^^^:..:..^77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                             .~~~~~~~!!!77!. :.7&J     ^!7?JYYJ!~~~~~~~~~^^^^^~^.  ...:^^~~~~~~~~~~~~?JJJ7~~~!???????7!~^::.:!?????????7!^!PB?^~~^^^^^:::..~77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                            .~~~~~~~!!!7!: .:..:!GG!    :^~~~~~~~~~~~~~~^^^^^^~^^:.      :~~~~~~~~~~~!JY?~~~!??????~.     .:~7??????????JGGY~^~~~~~^^^~^:::.:!7!!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                           :~~~~~~!!!77~..::.:^:::7PP7:^!!~~~~~~~~~~~~~^^~~^^~~^^^^^^:....^~~~~~~~~~~~!7~~~!??????!....^~!7??77??????7??YP^^^~~~~~~~~^^^~:.::.^77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                         :~~~~~~~!!!77: ::..^:::::::!YPPJ!~~~~~~~~~~~~^^^~~^^^^~7?JJJ7~~~~~~~~~~~~~~~~~~~~~7???????777???JY5PPYJ?7?????JPP^^^^^~~~~~~~~^^~^:::..!7!!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                       .^~~~~~~~!!!7!. ::.:^::::::::::^#?^7!~~~~~~~~~~~~~~^^^7P#######B5!~~~~~~~~~~~~~~~~~!????????????YG#Y7!7G#BY7?????PP::^^^^^^^^~~~~~^^~:::. ~77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                     .^~~~~~~~!!!!7!..::.:::::::::::^^^5BY?~~~~~~~~~~~~~~~^^J5~?B##BB##&B!~~~~~~~~~~~~~~~~7???????????5###P?7JG##&57????7YY^:::^^^^^^^^^~~^^~^::: ^77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                    :~~~~~~~~!!!77~ .^..^::^::::::^^^^^!#?^~~~~~~~~~~~~~~~^?P  :GPPYP5BB#G~~~~~~~~~~~~~~~!???????????Y#BBGPP5PPBBB&Y7????7Y5^:^^^^^^^^^^^^^^^~~::^ :77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                  .^~~~~~~~~!!!77~ .^..^::^::::^^^^^^^!B?^~~~~~~~~~~~~~~~~~G5~!PBP?YPYYPB&7~~~~~~~~~~~~~~!???????????PBGBGYJPPYYGB#P7?????7YP^^^^^^^^^^^^^^^^:~~::^ :77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                 .~~~~~~~~~~!!!7! .^..^::^:::^^^^^^^^~BY^~~~~~~~~~~~~~~~~^~BBGBBG5Y5P5Y5B#!~~~~~~~!!!!!!!!77?????????PBGGGYYPPYYGG#P7??????7Y5^^^^^^^^^^^^^^^^:~~::^ :77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                .~~~~~~~~~~!!!77..^:.:::^^:^^~~~~~~~^5B^~~~~~~~~~~~~~~~~~!?BBGGGGPPGGPPG#P!~~~~~~^:.. ...:::^^!7????J5#BGPPGGPPPGB#PYJ?????J7PJ^^^^^^^^^^^^^^~^:^^::^ :77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n               .~~~~~~~~~~!!!77: ^:.:::^^^^~~~~~~~~~!&?^~~~~~~~~~~~~~~~~!775GGGGGGGGGGBG5?!~~^:.   .!?J5PPGGG5?^^!7?Y55GGGGGGGGBBG5J?????????7B!^^^^^^^^^^^^~~~^:^^:^: ^77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n               ^~~~~~~~~~~!!77~ :^.:::^^^~~~~~~~~~^^J#^~~~~~~~~~~~~~~~~~~~~~?JY5PPP5YJ?!~~~:.     ^#&#&&&&&&&&@P::^~7?JY55PPPPP5YJ?????77!7??!YP^~^^^^^^^^^~~~~~::^::^. !77!!~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n              :~~~~~~~~~~!!!77..^:.::^^^~~~~~~~~^^::PP^~~~~~^^^^^^^^^^~~~~~~~~!!!!!~~~^:..        ^B&&&&&&&&&&B7:^^:^~~~!?JJJJ???????7!!!!7777!#!~~~~~~~~~~~~~~~~::^::^ .77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n              ^~~~~~~~~~!!!7?^ :^.:::^^~~~~~~~^^::::G5^~~^^::....::^^^^^^~~~~~~~~~~^:.             .7P#&&&&#P?^:^^:::::::^~7??????77!!!!!~~~~~^BJ~~~~~~~~~~~~~~~~^:^^:^: ~?7!!!~~~~~~~~~~~~~~~~~~~~~~~~~\r\n             .~~~~~~~~~~!!!77..^:.^:^^^~~~~~^^::::::PP^~^.          ..:^^^^~~~~~~~:       :.          .^!5~::::::~?!^^^^^^:^!77777777!!^^:~~~~^BY~~~~~~~~~~~~~~~~~:^^::~..77!!!~~~~~~~~~~~~~~~~~~~~~~~~~\r\n             .~~~~~~~~~~!!77~ :^.:::^^~~~~^^::^:::::J#^^.              ..:^^^^^^:.   ^77?JY:           .~5^:::::::!J5PJ!:^^::^~!777!~^:::^~!~~^#J^~~~~~~~~~~~~~~~~::^^:~: ~?7!!!~~~~~~~~~~~~~~~~~~~~~~~~\r\n             .~~~~~~~~~!!!7?: ^^.^:^^^~~~^^^^^^^^^^^~#?:                              :~5&Y7~:......::~?G#J~^^^^^~75P?^:^^^^^:::^^^^::^^:~!!!~!&!^^^^^^~~~~~~~~~~~^:^^:^^ .77!!!~~~~~~~~~~~~~~~~~~~~~~~~\r\n             .~~~~~~~~~!!!77..^:.^:^^^^^^^^^^^^^^^^^:J#^                                :B&#BPYJ????J5B&&&&BP5Y5PB&B!^:^^^^^^^^^^:^^^^^:^!!!!^5G:^^^^^^^^^^^~~~~~~~:^^:^~. !77!!~~~~~~~~~~~~~~~~~~~~~~~~\r\n              ^~~~~~~~~!!777 .~::^:^^^^^^^^^^^^^^^^^^^5B:                                !#&&&&#GPP555555PB&&&&&&&&J^:^^^^^^^^^^^^^^^^:^!!!!^7#^:^^^^^^^^^^^^^^^~~~:^^^:~. ~?7!!~~~~~~~~~~~~~~~~~~~~~~~~\r\n              :~~~~~~~~!!77! .~::^:^^^^^^^^^^^^^^^^^^^^PB^                               .7#&&BJ???????????G#####&Y~:^^^^^^^^^^^^^^^:^~!!!!^!#7.:^^^^^^^^^^^^^^^^~~:^^^:~: ^?7!!!~~~~~~~~~~~~~~~~~~~~~~~\r\n              .~~~~~~~~!!77! :~::^^^^^^^^^^^^^^^^^^^^~^^YB7                               .!G&G7777?????????B&#&#J~^^^^^^^^^^^^^^^:^^~!!!!^?B?..:^^^^^^^^^^^^^^^~~~:^^^:~: :?7!!!~~~~~~~~~~~~~~~~~~~~~~~\r\n               ~~~~~~~~!!77! .~::^^^^^^^^^^^^^^^^~~~~~~~^~PP^                               ^YG7^^^~!???????Y##P7~^^^^^^^^^^^^^:^^~~!!!!~~YG7^..^^^^^^^^^~~~~~~~~~~:^^^:~: :?7!!!~~~~~~~~~~~~~~~~~~~~~~~\r\n               ^~~~~~~~!!777 .~^.^^^^^^^^^^^^^~~~~~~~~~^^..7P5~.                             .~JJ7~^^^7???JY55?!^:^^::^^^:::^^^~~!!!!!~~?GY~~^..^^^~~~~~~~~~~~~~~~^:^^^^~: ^?7!!!~~~~~~~~~~~~~~~~~~~~~~~\r\n               :~~~~~~~!!777..~~.^^^~~~~~~^^~~~~~~~~~~~^^:..:?PP?^.                            .~7JJJ??JYYYJ?!^::::::::^^^^~~!!!!!!!~~JPY~^~~:.:^^~~~~~~~~~~~~~~~~^:~~^^~: ~?7!!!~~~~~~~~~~~~~~~~~~~~~~~\r\n               .~~~~~~~!!!7?^ ^~::^^~~~~~~~~~~~~~~~~~~~^^^:..:~75P57~:.                          .:^!7777!~^:..^~!777!~~!!!!!!!!!~~7Y5J~^^^~^..^^~~~~~~~~~~~~~~~~~:^~~^~~. !77!!~~~~~~~~~~~~~~~~~~~~~~~~\r\n                ~~~~~~~!!!7?! :~^:^^^~~~~~~~~~~~~~^^^^^^^^^...~~~~?YP5J!~^::..                        .....:^?5PP5P5PBGY7!!!!~~!7Y5Y7^^^^^^~..:^^^^^^^~~~~~~~~~~~~:~~~^~^ .?77!!~~~~~~~~~~~~~~~~~~~~~~~:\r\n                ^~~~~~~~!!77?: ^~:^^^~~~~~~~~~~^^^^^^^^^^^^:..:~~~^^^!BBP5J?!~~^^^^:::::........::::^^^~~~!JGP7: ...^!?PPJ?77YP5J7~^~~~~^^~:.:^^^^^^^^^^^~~~~~~~~:^~~^^~: ~?7!!!~~~~~~~~~~~~~~~~~~~~~~..\r\n                .~~~~~~~!!!7?! :~^:~^^~~~~~~~^^^^^^^^^^~~~~~^..:~^^^^^BPJY5PPP5YJ?7!!!!~~~~~~!!!!!!!!!!!!JGG7:.       :^GGYJJ5PYJ?!~~~~~~~:..^^^^^^^^^^^^^~~~~~~~:~~~^~~..777!!~~~~~~~~~~~~~~~~~~~~~~: .\r\n                .~~~~~~~~!!77?^ ^~^:~^~~~~~~^^^^^^^^~~~~~~~~~^..:^^^^!#J7???JJY55PPPP55YYJ???777777777?JGP7^^^^^:.    ^^Y#~~^. .^7J5Y7~~~:..^^^^~~~~^^^^^^^~~~~~:~~~^~~: ~?7!!!~~~~~~~~~~~~~~~~~~~~~^  .\r\n                 ^~~~~~~~!!!77?..~~:^~~~~~~~^^^^^^^~~~~~~~~~~~^:..^~~?#~^^~~~~~!!!777?JJYYY55555PP5PG##57^^~~~^^~~.  :^^GB7~.      ^J5P5!..^^~~~~~~~~~~~~~~~~~~:^~~~~~~ .?77!!!~~~~~~~~~~~~~~~~~~~~~.  .\r\n                 :~~~~~~~~!!!7?7 :~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~:..^~5P:^^^~~~^^^^~~~~~~~~~~~~~!~!?5PJ~^^~~~~~~~~: .:^^?&57~     .^!777J5PJ~^~~~~~~~~~~~~~~~~~:^~~~~~~. !?7!!!~~~~~~~~~~~~~~~~~~~~~.   .\r\n                  ~~~~~~~~~!!!7?! :~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~^..:B?^^^~~~~^^^^^^^^^~~~~~~~~!7J?!^^^~~~~~~~~~~:^^^^7&G?7!^. .!77777777?5G7^~~~~~~~~~~~~~~~:^~~~~~~: ~?77!!~~~~~~~~~~~~~~~~~~~~~:    .\r\n                  ^~~~~~~~~~!!77?! :~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:!#^^^^~~~~~^^^^^^^^^^^^^^~~~~^^^^~~~~~~~~~~~!^^^^7&BJY?!~~^.:~7777777?7?#7~~~~~~~~~~~~~~:^~~~~~~^ ^?77!!!~~~~~~~~~~~~~~~~~~~~:     .\r\n                  .~~~~~~~~~!!!77?! :~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~P5:^^^^~~~~~~^^^^^~~~~~^^^^^^^~~~~~~~~~~~~~!?7!~J&G?77PPJ7!~^^7777777?J7B5~~~~~~~~~~~~^:^~~~~~~^ :?77!!!~~~~~~~~~~~~~~~~~~~~:      .\r\n                   ^~~~~~~~~~!!!!7?!..~~~~~~~~~~~~~~~~~~~~~!7?JJYYYY#~^^^^~~~~~~~~~~~~^^~~^^^^^^^~~~~~~~~~~~~~!???75&GJ?7!JG5P5Y??J????????J&J~~~~~~~~~~~^:~~~~~~~^ ^?77!!!~~~~~~~~~~~~~~~~~~~~:       .\r\n                   :~~~~~~~~~~!!!!7?7:.~~~~~~~~~~~~~~~~~7JYYJ?7!!!~5P:^^^^~~~~7!~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!7??7P#GP#PJ7!PY?JYYYJJJJJJJ?J#P~~~~~~~~~~^:^~~~~~~~: ^?77!!!~~~~~~~~~~~~~~~~~~~~.        .\r\n                    ~~~~~~~~~~~~!!!7??^ ^~~~~~~~~~~~~7Y5Y7!~^~~~!!?#7^^^^^^~~!7?7!~~~~~~~~~~~~~~~~~~~~~~~~!!!7?7?BGJ7?BGJ7~75Y???JJJJ???J5B5~~~~~~~~~~^^~~~~~~~~. ~?77!!!~~~~~~~~~~~~~~~~~~~^.         .\r\n                    :~~~~~~~~~~~~!!!77?!.:~~~~~~~~~7PGJ!~^^^~~~!7?PB:^^^^^^~~~7JYJ7!!~~~~~~~~~~~~~~~~~~~!!!7??7YGBG7!YBJ7!!!7YYJ??JJJJYPG57~~~~~~~~~^^~~~~~~~~^ :7?7!!!!~~~~~~~~~~~~~~~~~~^.           .\r\n                     ~~~~~~~~~~~~~!!!77?7:.^~~~~~~5#Y~~~^^^~!!!?JY#Y~!!~~^^^~~~!?Y5Y??7!!~~~~~~~~~~~!!!!77??7?5P77JYYY7!!!!!!!?5BG55555Y?77?7???77~^~~~~~~~~^. ~??7!!!!~~~~~~~~~~~~~~~~~^:             .\r\n                     :~~~~~~~~~~~~~!!!!7??~..~~~~P#7~!^^^~~!!!?YY5&5???JJYJ!YYYY555GP5555Y7?JJJJ?7777?JJJJ7?YPJ7!~^^~^^~~~~~~!!7YBP??7!~~~~~~~~~!!7??!~~~~~: ^7?77!!!~~~~~~~~~~~~~~~~^:.               .\r\n                      ^~~~~~~~~~~~~~~!!!77??^.:^P&!~!~^^~!!!!?Y55G&!^~7!~!J##~^~G!^~~~~~!#PPJ!!7JPY?5PYJ?Y5GJY5JYY5JJY?!JYYY?!!7Y5J!~~~~~~~~~~~~~~~~!?J7^:.:7??7!!!!~~~~~~~~~~~~~^:..                  .\r\n                      .~~~~~~~~~~~~~~~~!!!7?J7 ~&J~!~^^~!!!!7YYPPB&7^7P?~!7&G:~7#5PY~!YP5&J^^7Y7^7#BJ^^~!^~JG#7^^5G^^~PBB~~7B??PJ!~~~^^^^^~~~~~^^^~~~~!J! ~J?77!!~~~~~^^^^:::..                        .\r\n                       :~~~~~~~~~~~~~~~~!!77?7 J&~!!~^~!!!!!?J5PPB&!^7!~!!P&5:!?#?GY^!G5YG:^?BYPY5&J:^JGP5~~Y&~^~GP:~~~GG:^!#JG?~~^^^^^~~~~~~~~^^^^^~~~~J7 ~!^^:...                                    .\r\n                        ^~~~~~~~~~~~~~~~!!!7?! 5B^!!~~~!!!!!?JYPGG#~~?BY!77#J^!JB7B?^!BYPY:~5G7555#~^!BY?#~^?B^^~BY:~~~!?^^7#GY~~~^^::::~~^~~~~^^~^^^~~~~5:.^:..                                       .\r\n                        .~~~~~~~~~~~~~~~~!!77! Y#~!!~~!!!!77?JJY5G#^~?!^~7Y&7^!YB7#!^7BJYG^!7P5J^!#?^!YPPJ:^GG^~!#7^~P!^~^~?#B7~^~^::^^^~~~~~~~^~~^^^^~~~J7 ^::..                                      .\r\n                         .~~~~~~~~~~~~~~~!!!77 ~&?!!!!!77????JJJJYGYY5555P5GY?JG57B7!JB?7P5?7!~~7PPG?!~!~^!5&5:~7#~^~B#7^~~JBB7~~~^^^^^^~~^~~~~^^^~^^^^~~?? ^::..                                      .\r\n                          .~~~~~~~~~~~~~~!!!7?~ 5B!7777????????JJJJYP!!!~~~~7??!:^PGGG5YYJJY5GGP5J?J555YY5PJJP??5#77?BYB7!!5GP5^~~^^^^~~~~~~~~~~^^~^^~~!^5:.^::..                                      .\r\n                           :~~~~~~~~~~~~~~!!!7?^ PP!7?????????????JJG7^^^~~~~~^. PJ~!PG!7JGYGJ?YB5JYPY?YG5Y5^.^^^^!?J7!7JYYJ?JGJ~~^^^^^^^~~~~~^^^^^^~~~~Y7 ^^:..                                       .\r\n                            :~~~~~~~~~~~~~!!!77?^ JG?7????????????JJGY!~^~~~~~: :B~~7B5:!!J&P:~7B^^~5G7P5^^Y5 .:^~~~~~~~~~~~!?JPY!^~~~^^^^^^^^^^^^~~~^!Y! :^:...                                       .\r\n                             .~~~~~~~~~~~~~!!!!7?!.^YY?77????????JJJ5B?7~~~~~^  ^B^!?#J^777YY:!JG^!7G57GY^!YG~!!!!!!!!!!!!!!!~?J5PY7~~~~~^^^^^~~~~~~7J7:.^^:...                                        .\r\n                              .^~~~~~~~~~~~~!!!!77?!.~JYJ?77???JJJJJJGP77!~~~:  7G:!?#7^?Y77!^7YG:!7#J7B7^!5P~!!!!!!!!!!!!!!~.^7?JY55Y?7!!!!!!!!77??!:.^^^:...                                         .\r\n                                :~~~~~~~~~~~~~!!!!7??!^^!JYYJJJJJJJJJY#Y7?!~~:  J5:7J#~~?#5!7775#^!7PPP5^~7B?~!!!!!!!!!!!!!~.  .^7??JY?BP77??77!~^:::^^::...                                           .\r\n                                 .^~~~~~~~~~~~~~!!!!77?7!^^~?JY5555555P#Y7?7!.  Y5~?5B^!J#PY~77P&Y!77!~^~?G5~!!!!!!!!!!!!!^       ^!7?!&! ^^::::^^^^^::...                                             .\r\n                                   :^~~~~~~~~~~~~~!!!!!77??7~^^^~!7?JYY5B57?7^. :J?JJJPY55^BP55P?J5YYJJY5P?~~!!!!!!!!!!!^. .^    ! .7~GP ^!~~^^::::....                                                .\r\n                                     :^~~~~~~~~~~~~~~!!!!!777???77!!~~~^.YGJ^^^:?7.::7J:JPP#GPPYJYY5PGGP5YYYYYYYYYYYYY5Y7~:?7   ~5~5#PJ.:~^::......                                                    .\r\n                                       .^~~~~~~~~~~~~~~~!!!!!!!7777????J!.~YYJ?5577?PGY5GJ~^~~~~~~~~^^^^^^^^^^^^^^^^^:^7Y55G555PB55Y7:.^^::...                                                         .\r\n                                          .^~~~~~~~~~~~~~~~~~!!!!!!!!777??!^^~7?7??77~^^::^~~~~~~^^^^^^~~~~~~~~~~~~~~~~^::::^^^^^::::^^::...                                                           .\r\n                                             .::^~~~~~~~~~~~~~~~~~!!!!!!~~~~~^::::^^^^^^^^^^:::::::::::::::::::::::::::^^^^^^^^^^^^^::....                                                             .\r\n                                                  ...:::^^^^^^^^::::.........:::::::::::...................................::::::......                                                                .\r\n                                                                            ............                                                                                                               .\r\n                                                                                                                                                                                                       .\r\n                                                                                                                                                                                                       .\r\n                                                                                                                                                                                                       .\r\n                                                                                                                                                                                                       .\r\n                                                                                                                                                                                                       .\r\n                                                                                                                                                                                                       .\r\n                                                                                                                                                                                                       .\r\n                                                                                                                                                                                                       \r\nhttps://btc-inu.com/\r\n\r\nhttps://t.me/BitcoinInuERC\r\n\r\nhttps://twitter.com/Bitcoin_Inu_\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.15;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    function _createInitialSupply(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\r\n            _totalSupply -= amount;\r\n        }\r\n\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() external virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ninterface IDexRouter {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 amountToken,\r\n            uint256 amountETH,\r\n            uint256 liquidity\r\n        );\r\n}\r\n\r\ninterface IDexFactory {\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n}\r\n\r\ncontract BitcoinInu is ERC20, Ownable {\r\n\r\n    uint256 public maxBuyAmount;\r\n    uint256 public maxSellAmount;\r\n    uint256 public maxWalletAmount;\r\n\r\n    IDexRouter public dexRouter;\r\n    address public lpPair;\r\n\r\n    bool private swapping;\r\n    uint256 public swapTokensAtAmount;\r\n\r\n    address operationsAddress;\r\n    address devAddress;\r\n\r\n    uint256 public tradingActiveBlock = 0; // 0 means trading is not active\r\n    uint256 public blockForPenaltyEnd;\r\n    mapping (address => bool) public boughtEarly;\r\n    uint256 public botsCaught;\r\n\r\n    bool public limitsInEffect = true;\r\n    bool public tradingActive = false;\r\n    bool public swapEnabled = false;\r\n\r\n     // Anti-bot and anti-whale mappings and variables\r\n    mapping(address => uint256) private _holderLastTransferTimestamp; // to hold last Transfers temporarily during launch\r\n    bool public transferDelayEnabled = true;\r\n\r\n    uint256 public buyTotalFees;\r\n    uint256 public buyOperationsFee;\r\n    uint256 public buyLiquidityFee;\r\n    uint256 public buyDevFee;\r\n    uint256 public buyBurnFee;\r\n\r\n    uint256 public sellTotalFees;\r\n    uint256 public sellOperationsFee;\r\n    uint256 public sellLiquidityFee;\r\n    uint256 public sellDevFee;\r\n    uint256 public sellBurnFee;\r\n\r\n    uint256 public tokensForOperations;\r\n    uint256 public tokensForLiquidity;\r\n    uint256 public tokensForDev;\r\n    uint256 public tokensForBurn;\r\n\r\n    /******************/\r\n\r\n    // exlcude from fees and max transaction amount\r\n    mapping (address => bool) private _isExcludedFromFees;\r\n    mapping (address => bool) public _isExcludedMaxTransactionAmount;\r\n\r\n    // store addresses that a automatic market maker pairs. Any transfer *to* these addresses\r\n    // could be subject to a maximum transfer amount\r\n    mapping (address => bool) public automatedMarketMakerPairs;\r\n\r\n    event SetAutomatedMarketMakerPair(address indexed pair, bool indexed value);\r\n\r\n    event EnabledTrading();\r\n\r\n    event RemovedLimits();\r\n\r\n    event ExcludeFromFees(address indexed account, bool isExcluded);\r\n\r\n    event UpdatedMaxBuyAmount(uint256 newAmount);\r\n\r\n    event UpdatedMaxSellAmount(uint256 newAmount);\r\n\r\n    event UpdatedMaxWalletAmount(uint256 newAmount);\r\n\r\n    event UpdatedOperationsAddress(address indexed newWallet);\r\n\r\n    event MaxTransactionExclusion(address _address, bool excluded);\r\n\r\n    event BuyBackTriggered(uint256 amount);\r\n\r\n    event OwnerForcedSwapBack(uint256 timestamp);\r\n \r\n    event CaughtEarlyBuyer(address sniper);\r\n\r\n    event SwapAndLiquify(\r\n        uint256 tokensSwapped,\r\n        uint256 ethReceived,\r\n        uint256 tokensIntoLiquidity\r\n    );\r\n\r\n    event TransferForeignToken(address token, uint256 amount);\r\n\r\n    constructor() ERC20(\"Bitcoin Inu\", \"BTCINU\") {\r\n\r\n        address newOwner = msg.sender; // can leave alone if owner is deployer.\r\n\r\n        IDexRouter _dexRouter = IDexRouter(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        dexRouter = _dexRouter;\r\n\r\n        // create pair\r\n        lpPair = IDexFactory(_dexRouter.factory()).createPair(address(this), _dexRouter.WETH());\r\n        _excludeFromMaxTransaction(address(lpPair), true);\r\n        _setAutomatedMarketMakerPair(address(lpPair), true);\r\n\r\n        uint256 totalSupply = 1 * 1e9 * 1e18;\r\n\r\n        maxBuyAmount = totalSupply * 1 / 100;\r\n        maxSellAmount = totalSupply * 1 / 100;\r\n        maxWalletAmount = totalSupply * 1 / 100;\r\n        swapTokensAtAmount = totalSupply * 5 / 10000;\r\n\r\n        buyOperationsFee = 8;\r\n        buyLiquidityFee = 0;\r\n        buyDevFee = 0;\r\n        buyBurnFee = 0;\r\n        buyTotalFees = buyOperationsFee + buyLiquidityFee + buyDevFee + buyBurnFee;\r\n\r\n        sellOperationsFee = 8;\r\n        sellLiquidityFee = 0;\r\n        sellDevFee = 0;\r\n        sellBurnFee = 0;\r\n        sellTotalFees = sellOperationsFee + sellLiquidityFee + sellDevFee + sellBurnFee;\r\n\r\n        _excludeFromMaxTransaction(newOwner, true);\r\n        _excludeFromMaxTransaction(address(this), true);\r\n        _excludeFromMaxTransaction(address(0xdead), true);\r\n\r\n        excludeFromFees(newOwner, true);\r\n        excludeFromFees(address(this), true);\r\n        excludeFromFees(address(0xdead), true);\r\n\r\n        operationsAddress = address(newOwner);\r\n        devAddress = address(newOwner);\r\n\r\n        _createInitialSupply(newOwner, totalSupply);\r\n        transferOwnership(newOwner);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    // only enable if no plan to airdrop\r\n\r\n    function enableTrading(uint256 deadBlocks) external onlyOwner {\r\n        require(!tradingActive, \"Cannot reenable trading\");\r\n        tradingActive = true;\r\n        swapEnabled = true;\r\n        tradingActiveBlock = block.number;\r\n        blockForPenaltyEnd = tradingActiveBlock + deadBlocks;\r\n        emit EnabledTrading();\r\n    }\r\n\r\n    // remove limits after token is stable\r\n    function removeLimits() external onlyOwner {\r\n        limitsInEffect = false;\r\n        transferDelayEnabled = false;\r\n        emit RemovedLimits();\r\n    }\r\n\r\n    function manageBoughtEarly(address wallet, bool flag) external onlyOwner {\r\n        boughtEarly[wallet] = flag;\r\n    }\r\n\r\n    function massManageBoughtEarly(address[] calldata wallets, bool flag) external onlyOwner {\r\n        for(uint256 i = 0; i < wallets.length; i++){\r\n            boughtEarly[wallets[i]] = flag;\r\n        }\r\n    }\r\n\r\n    // disable Transfer delay - cannot be reenabled\r\n    function disableTransferDelay() external onlyOwner {\r\n        transferDelayEnabled = false;\r\n    }\r\n\r\n    function updateMaxBuyAmount(uint256 newNum) external onlyOwner {\r\n        require(newNum >= (totalSupply() * 2 / 1000)/1e18, \"Cannot set max buy amount lower than 0.2%\");\r\n        maxBuyAmount = newNum * (10**18);\r\n        emit UpdatedMaxBuyAmount(maxBuyAmount);\r\n    }\r\n\r\n    function updateMaxSellAmount(uint256 newNum) external onlyOwner {\r\n        require(newNum >= (totalSupply() * 2 / 1000)/1e18, \"Cannot set max sell amount lower than 0.2%\");\r\n        maxSellAmount = newNum * (10**18);\r\n        emit UpdatedMaxSellAmount(maxSellAmount);\r\n    }\r\n\r\n    function updateMaxWalletAmount(uint256 newNum) external onlyOwner {\r\n        require(newNum >= (totalSupply() * 3 / 1000)/1e18, \"Cannot set max wallet amount lower than 0.3%\");\r\n        maxWalletAmount = newNum * (10**18);\r\n        emit UpdatedMaxWalletAmount(maxWalletAmount);\r\n    }\r\n\r\n    // change the minimum amount of tokens to sell from fees\r\n    function updateSwapTokensAtAmount(uint256 newAmount) external onlyOwner {\r\n  \t    require(newAmount >= totalSupply() * 1 / 100000, \"Swap amount cannot be lower than 0.001% total supply.\");\r\n  \t    require(newAmount <= totalSupply() * 1 / 1000, \"Swap amount cannot be higher than 0.1% total supply.\");\r\n  \t    swapTokensAtAmount = newAmount;\r\n  \t}\r\n\r\n    function _excludeFromMaxTransaction(address updAds, bool isExcluded) private {\r\n        _isExcludedMaxTransactionAmount[updAds] = isExcluded;\r\n        emit MaxTransactionExclusion(updAds, isExcluded);\r\n    }\r\n\r\n    function airdropToWallets(address[] memory wallets, uint256[] memory amountsInTokens) external onlyOwner {\r\n        require(wallets.length == amountsInTokens.length, \"arrays must be the same length\");\r\n        require(wallets.length < 600, \"Can only airdrop 600 wallets per txn due to gas limits\"); // allows for airdrop + launch at the same exact time, reducing delays and reducing sniper input.\r\n        for(uint256 i = 0; i < wallets.length; i++){\r\n            address wallet = wallets[i];\r\n            uint256 amount = amountsInTokens[i];\r\n            super._transfer(msg.sender, wallet, amount);\r\n        }\r\n    }\r\n\r\n    function excludeFromMaxTransaction(address updAds, bool isEx) external onlyOwner {\r\n        if(!isEx){\r\n            require(updAds != lpPair, \"Cannot remove uniswap pair from max txn\");\r\n        }\r\n        _isExcludedMaxTransactionAmount[updAds] = isEx;\r\n    }\r\n\r\n    function setAutomatedMarketMakerPair(address pair, bool value) external onlyOwner {\r\n        require(pair != lpPair, \"The pair cannot be removed from automatedMarketMakerPairs\");\r\n\r\n        _setAutomatedMarketMakerPair(pair, value);\r\n        emit SetAutomatedMarketMakerPair(pair, value);\r\n    }\r\n\r\n    function _setAutomatedMarketMakerPair(address pair, bool value) private {\r\n        automatedMarketMakerPairs[pair] = value;\r\n\r\n        _excludeFromMaxTransaction(pair, value);\r\n\r\n        emit SetAutomatedMarketMakerPair(pair, value);\r\n    }\r\n\r\n    function updateBuyFees(uint256 _operationsFee, uint256 _liquidityFee, uint256 _devFee, uint256 _burnFee) external onlyOwner {\r\n        buyOperationsFee = _operationsFee;\r\n        buyLiquidityFee = _liquidityFee;\r\n        buyDevFee = _devFee;\r\n        buyBurnFee = _burnFee;\r\n        buyTotalFees = buyOperationsFee + buyLiquidityFee + buyDevFee + buyBurnFee;\r\n        require(buyTotalFees <= 30, \"Must keep fees at 30% or less\");\r\n    }\r\n\r\n    function updateSellFees(uint256 _operationsFee, uint256 _liquidityFee, uint256 _devFee, uint256 _burnFee) external onlyOwner {\r\n        sellOperationsFee = _operationsFee;\r\n        sellLiquidityFee = _liquidityFee;\r\n        sellDevFee = _devFee;\r\n        sellBurnFee = _burnFee;\r\n        sellTotalFees = sellOperationsFee + sellLiquidityFee + sellDevFee + sellBurnFee;\r\n        require(sellTotalFees <= 30, \"Must keep fees at 30% or less\");\r\n    }\r\n\r\n    function returnToNormalTax() external onlyOwner {\r\n        sellOperationsFee = 0;\r\n        sellLiquidityFee = 0;\r\n        sellDevFee = 0;\r\n        sellBurnFee = 0;\r\n        sellTotalFees = sellOperationsFee + sellLiquidityFee + sellDevFee + sellBurnFee;\r\n        require(sellTotalFees <= 10, \"Must keep fees at 10% or less\");\r\n\r\n        buyOperationsFee = 0;\r\n        buyLiquidityFee = 0;\r\n        buyDevFee = 0;\r\n        buyBurnFee = 0;\r\n        buyTotalFees = buyOperationsFee + buyLiquidityFee + buyDevFee + buyBurnFee;\r\n        require(buyTotalFees <= 10, \"Must keep fees at 10% or less\");\r\n    }\r\n\r\n    function excludeFromFees(address account, bool excluded) public onlyOwner {\r\n        _isExcludedFromFees[account] = excluded;\r\n        emit ExcludeFromFees(account, excluded);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) internal override {\r\n\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"amount must be greater than 0\");\r\n\r\n        if(!tradingActive){\r\n            require(_isExcludedFromFees[from] || _isExcludedFromFees[to], \"Trading is not active.\");\r\n        }\r\n\r\n        if(blockForPenaltyEnd > 0){\r\n            require(!boughtEarly[from] || to == owner() || to == address(0xdead), \"Bots cannot transfer tokens in or out except to owner or dead address.\");\r\n        }\r\n\r\n        if(limitsInEffect){\r\n            if (from != owner() && to != owner() && to != address(0) && to != address(0xdead) && !_isExcludedFromFees[from] && !_isExcludedFromFees[to]){\r\n\r\n                // at launch if the transfer delay is enabled, ensure the block timestamps for purchasers is set -- during launch.\r\n                if (transferDelayEnabled){\r\n                    if (to != address(dexRouter) && to != address(lpPair)){\r\n                        require(_holderLastTransferTimestamp[tx.origin] < block.number - 2 && _holderLastTransferTimestamp[to] < block.number - 2, \"_transfer:: Transfer Delay enabled.  Try again later.\");\r\n                        _holderLastTransferTimestamp[tx.origin] = block.number;\r\n                        _holderLastTransferTimestamp[to] = block.number;\r\n                    }\r\n                }\r\n    \r\n                //when buy\r\n                if (automatedMarketMakerPairs[from] && !_isExcludedMaxTransactionAmount[to]) {\r\n                        require(amount <= maxBuyAmount, \"Buy transfer amount exceeds the max buy.\");\r\n                        require(amount + balanceOf(to) <= maxWalletAmount, \"Cannot Exceed max wallet\");\r\n                }\r\n                //when sell\r\n                else if (automatedMarketMakerPairs[to] && !_isExcludedMaxTransactionAmount[from]) {\r\n                        require(amount <= maxSellAmount, \"Sell transfer amount exceeds the max sell.\");\r\n                }\r\n                else if (!_isExcludedMaxTransactionAmount[to]){\r\n                    require(amount + balanceOf(to) <= maxWalletAmount, \"Cannot Exceed max wallet\");\r\n                }\r\n            }\r\n        }\r\n\r\n        uint256 contractTokenBalance = balanceOf(address(this));\r\n\r\n        bool canSwap = contractTokenBalance >= swapTokensAtAmount;\r\n\r\n        if(canSwap && swapEnabled && !swapping && !automatedMarketMakerPairs[from] && !_isExcludedFromFees[from] && !_isExcludedFromFees[to]) {\r\n            swapping = true;\r\n\r\n            swapBack();\r\n\r\n            swapping = false;\r\n        }\r\n\r\n        bool takeFee = true;\r\n        // if any account belongs to _isExcludedFromFee account then remove the fee\r\n        if(_isExcludedFromFees[from] || _isExcludedFromFees[to]) {\r\n            takeFee = false;\r\n        }\r\n\r\n        uint256 fees = 0;\r\n        // only take fees on buys/sells, do not take on wallet transfers\r\n        if(takeFee){\r\n            // bot/sniper penalty.\r\n            if(earlyBuyPenaltyInEffect() && automatedMarketMakerPairs[from] && !automatedMarketMakerPairs[to] && buyTotalFees > 0){\r\n\r\n                if(!boughtEarly[to]){\r\n                    boughtEarly[to] = true;\r\n                    botsCaught += 1;\r\n                    emit CaughtEarlyBuyer(to);\r\n                }\r\n\r\n                fees = amount * 99 / 100;\r\n        \t    tokensForLiquidity += fees * buyLiquidityFee / buyTotalFees;\r\n                tokensForOperations += fees * buyOperationsFee / buyTotalFees;\r\n                tokensForDev += fees * buyDevFee / buyTotalFees;\r\n                tokensForBurn += fees * buyBurnFee / buyTotalFees;\r\n            }\r\n\r\n            // on sell\r\n            else if (automatedMarketMakerPairs[to] && sellTotalFees > 0){\r\n                fees = amount * sellTotalFees / 100;\r\n                tokensForLiquidity += fees * sellLiquidityFee / sellTotalFees;\r\n                tokensForOperations += fees * sellOperationsFee / sellTotalFees;\r\n                tokensForDev += fees * sellDevFee / sellTotalFees;\r\n                tokensForBurn += fees * sellBurnFee / sellTotalFees;\r\n            }\r\n\r\n            // on buy\r\n            else if(automatedMarketMakerPairs[from] && buyTotalFees > 0) {\r\n        \t    fees = amount * buyTotalFees / 100;\r\n        \t    tokensForLiquidity += fees * buyLiquidityFee / buyTotalFees;\r\n                tokensForOperations += fees * buyOperationsFee / buyTotalFees;\r\n                tokensForDev += fees * buyDevFee / buyTotalFees;\r\n                tokensForBurn += fees * buyBurnFee / buyTotalFees;\r\n            }\r\n\r\n            if(fees > 0){\r\n                super._transfer(from, address(this), fees);\r\n            }\r\n\r\n        \tamount -= fees;\r\n        }\r\n\r\n        super._transfer(from, to, amount);\r\n    }\r\n\r\n    function earlyBuyPenaltyInEffect() public view returns (bool){\r\n        return block.number < blockForPenaltyEnd;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private {\r\n\r\n        // generate the uniswap pair path of token -> weth\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = dexRouter.WETH();\r\n\r\n        _approve(address(this), address(dexRouter), tokenAmount);\r\n\r\n        // make the swap\r\n        dexRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0, // accept any amount of ETH\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\r\n        // approve token transfer to cover all possible scenarios\r\n        _approve(address(this), address(dexRouter), tokenAmount);\r\n\r\n        // add the liquidity\r\n        dexRouter.addLiquidityETH{value: ethAmount}(\r\n            address(this),\r\n            tokenAmount,\r\n            0, // slippage is unavoidable\r\n            0, // slippage is unavoidable\r\n            address(0xdead),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function swapBack() private {\r\n\r\n        if(tokensForBurn > 0 && balanceOf(address(this)) >= tokensForBurn) {\r\n            _burn(address(this), tokensForBurn);\r\n        }\r\n        tokensForBurn = 0;\r\n\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        uint256 totalTokensToSwap = tokensForLiquidity + tokensForOperations + tokensForDev;\r\n\r\n        if(contractBalance == 0 || totalTokensToSwap == 0) {return;}\r\n\r\n        if(contractBalance > swapTokensAtAmount * 60){\r\n            contractBalance = swapTokensAtAmount * 60;\r\n        }\r\n\r\n        bool success;\r\n\r\n        // Halve the amount of liquidity tokens\r\n        uint256 liquidityTokens = contractBalance * tokensForLiquidity / totalTokensToSwap / 2;\r\n\r\n        swapTokensForEth(contractBalance - liquidityTokens);\r\n\r\n        uint256 ethBalance = address(this).balance;\r\n        uint256 ethForLiquidity = ethBalance;\r\n\r\n        uint256 ethForOperations = ethBalance * tokensForOperations / (totalTokensToSwap - (tokensForLiquidity/2));\r\n        uint256 ethForDev = ethBalance * tokensForDev / (totalTokensToSwap - (tokensForLiquidity/2));\r\n\r\n        ethForLiquidity -= ethForOperations + ethForDev;\r\n\r\n        tokensForLiquidity = 0;\r\n        tokensForOperations = 0;\r\n        tokensForDev = 0;\r\n        tokensForBurn = 0;\r\n\r\n        if(liquidityTokens > 0 && ethForLiquidity > 0){\r\n            addLiquidity(liquidityTokens, ethForLiquidity);\r\n        }\r\n\r\n        (success,) = address(devAddress).call{value: ethForDev}(\"\");\r\n\r\n        (success,) = address(operationsAddress).call{value: address(this).balance}(\"\");\r\n    }\r\n\r\n    function transferForeignToken(address _token, address _to) external onlyOwner returns (bool _sent) {\r\n        require(_token != address(0), \"_token address cannot be 0\");\r\n        require(_token != address(this), \"Can't withdraw native tokens\");\r\n        uint256 _contractBalance = IERC20(_token).balanceOf(address(this));\r\n        _sent = IERC20(_token).transfer(_to, _contractBalance);\r\n        emit TransferForeignToken(_token, _contractBalance);\r\n    }\r\n\r\n    // withdraw ETH if stuck or someone sends to the address\r\n    function withdrawStuckETH() external onlyOwner {\r\n        bool success;\r\n        (success,) = address(msg.sender).call{value: address(this).balance}(\"\");\r\n    }\r\n\r\n    function setOperationsAddress(address _operationsAddress) external onlyOwner {\r\n        require(_operationsAddress != address(0), \"_operationsAddress address cannot be 0\");\r\n        operationsAddress = payable(_operationsAddress);\r\n    }\r\n\r\n    function setDevAddress(address _devAddress) external onlyOwner {\r\n        require(_devAddress != address(0), \"_devAddress address cannot be 0\");\r\n        devAddress = payable(_devAddress);\r\n    }\r\n\r\n    // force Swap back if slippage issues.\r\n    function forceSwapBack() external onlyOwner {\r\n        require(balanceOf(address(this)) >= swapTokensAtAmount, \"Can only swap when token amount is at or higher than restriction\");\r\n        swapping = true;\r\n        swapBack();\r\n        swapping = false;\r\n        emit OwnerForcedSwapBack(block.timestamp);\r\n    }\r\n\r\n    // useful for buybacks or to reclaim any ETH on the contract in a way that helps holders.\r\n    function buyBackTokens(uint256 amountInWei) external onlyOwner {\r\n        require(amountInWei <= 10 ether, \"May not buy more than 10 ETH in a single buy to reduce sandwich attacks\");\r\n\r\n        address[] memory path = new address[](2);\r\n        path[0] = dexRouter.WETH();\r\n        path[1] = address(this);\r\n\r\n        // make the swap\r\n        dexRouter.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amountInWei}(\r\n            0, // accept any amount of Ethereum\r\n            path,\r\n            address(0xdead),\r\n            block.timestamp\r\n        );\r\n        emit BuyBackTriggered(amountInWei);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BuyBackTriggered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sniper\",\"type\":\"address\"}],\"name\":\"CaughtEarlyBuyer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EnabledTrading\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isExcluded\",\"type\":\"bool\"}],\"name\":\"ExcludeFromFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"MaxTransactionExclusion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OwnerForcedSwapBack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RemovedLimits\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"SetAutomatedMarketMakerPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiquidity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferForeignToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"UpdatedMaxBuyAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"UpdatedMaxSellAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"UpdatedMaxWalletAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"UpdatedOperationsAddress\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_isExcludedMaxTransactionAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsInTokens\",\"type\":\"uint256[]\"}],\"name\":\"airdropToWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"automatedMarketMakerPairs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockForPenaltyEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"botsCaught\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"boughtEarly\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInWei\",\"type\":\"uint256\"}],\"name\":\"buyBackTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBurnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyDevFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyLiquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyOperationsFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTotalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexRouter\",\"outputs\":[{\"internalType\":\"contract IDexRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTransferDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earlyBuyPenaltyInEffect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadBlocks\",\"type\":\"uint256\"}],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"updAds\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isEx\",\"type\":\"bool\"}],\"name\":\"excludeFromMaxTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forceSwapBack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitsInEffect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"manageBoughtEarly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"massManageBoughtEarly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBuyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSellAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWalletAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnToNormalTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellBurnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellDevFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellLiquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellOperationsFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTotalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setAutomatedMarketMakerPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devAddress\",\"type\":\"address\"}],\"name\":\"setDevAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operationsAddress\",\"type\":\"address\"}],\"name\":\"setOperationsAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTokensAtAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForDev\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingActiveBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferDelayEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferForeignToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_sent\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_operationsFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_devFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_burnFee\",\"type\":\"uint256\"}],\"name\":\"updateBuyFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNum\",\"type\":\"uint256\"}],\"name\":\"updateMaxBuyAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNum\",\"type\":\"uint256\"}],\"name\":\"updateMaxSellAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNum\",\"type\":\"uint256\"}],\"name\":\"updateMaxWalletAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_operationsFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_devFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_burnFee\",\"type\":\"uint256\"}],\"name\":\"updateSellFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"updateSwapTokensAtAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStuckETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "BitcoinInu", "CompilerVersion": "v0.8.15+commit.e14f2714", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://1a6e181c7c43e51b8c14f5bfcbe5c9d1d507a9cdd4d6e1d045da122bdbfff4b7"}