{"SourceCode": "/*\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2840\u2824\u2804\u2812\u2812\u2809\u2829\u28c9\u28c9\u2809\u2807\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2880\u28c0\u2814\u2802\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u2813\u2826\u28c0\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2840\u2800\u2800\u2800\u2840\u2800\u2800\u2800\u28e0\u281e\u2819\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u281b\u2884\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28fe\u2837\u28c4\u2874\u280b\u28e0\u2866\u28e0\u281e\u2801\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2839\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u28f6\u287e\u2803\u28e0\u289f\u28f7\u2876\u281b\u28ff\u280f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28c6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fe\u281f\u283f\u28e0\u28de\u28f5\u287f\u280b\u2800\u2880\u284f\u2800\u2800\u2800\u2800\u2800\u2824\u2816\u281a\u2809\u2809\u2809\u2809\u2813\u2800\u2800\u2800\u2800\u2800\u2880\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28c6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u28ff\u28ff\u28e0\u287e\u28ff\u287f\u2801\u2800\u2800\u2840\u28fc\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2844\u2800\u2809\u2800\u2809\u2809\u2812\u28a4\u2840\u2800\u2800\u2800\u2838\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28c0\u28e4\u28fd\u28ff\u28ff\u28ff\u285e\u281b\u2832\u28a6\u28c4\u2840\u28bb\u285f\u2800\u28b8\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2833\u2844\u2800\u2800\u28ff\u28e6\u2800\u2840\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u28e0\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u283f\u287f\u2837\u28c4\u2800\u2888\u2859\u28be\u28e7\u2800\u2838\u287d\u2800\u2800\u2800\u2880\u28c0\u28c0\u2800\u2800\u28a4\u28e4\u28c4\u2800\u2800\u28a0\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2801\u2800\u284f\u288f\u28b3\u2818\u2844\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2808\u28b9\u28ff\u28ff\u28ff\u28ef\u2849\u2821\u2802\u2800\u2800\u2810\u28e6\u28c0\u2809\u28bb\u28ff\u2844\u28b8\u2801\u2800\u28b8\u28ff\u28ff\u28ff\u28ff\u28e7\u28e4\u28ff\u28f7\u28f6\u2800\u2800\u285c\u2800\u28a0\u28e4\u28c0\u2840\u2800\u2800\u2800\u2800\u2844\u2800\u2800\u28f0\u2803\u2818\u2802\u28c7\u28b9\u2844\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28e6\u28ca\u2800\u2800\u2800\u2809\u283b\u28f7\u28f6\u28fb\u28e7\u284f\u2800\u2800\u2800\u2819\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2817\u2800\u28b0\u2807\u28a0\u28ff\u28ff\u28f7\u28c8\u28f7\u28e4\u28c4\u2840\u287f\u2800\u28f0\u28c7\u2800\u2800\u2800\u2809\u2800\u28b3\u2800\u28c0\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u28ff\u28ff\u28ff\u28ff\u2847\u2809\u2809\u2801\u2800\u2800\u2800\u2800\u2800\u2819\u28bf\u28ff\u28e7\u2800\u2800\u2800\u2840\u2814\u2809\u2808\u284b\u2809\u2879\u2801\u2800\u2800\u28d8\u2800\u2800\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2807\u2800\u284f\u28e1\u28a4\u28d6\u2802\u2800\u2800\u28b8\u287f\u2809\u2846\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u28f9\u28ff\u28ff\u28ff\u28ff\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28ff\u28e7\u28f6\u2849\u2800\u2880\u2854\u2801\u2800\u2854\u2801\u2800\u2820\u281e\u28fb\u28f7\u2840\u2808\u281b\u287b\u2809\u289b\u280b\u2809\u2801\u2827\u2840\u28c7\u28fd\u283f\u284b\u2800\u2800\u28e0\u281f\u2801\u2800\u2847\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u28a0\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28bf\u28b3\u2864\u28a3\u2864\u2824\u28de\u2801\u2800\u2800\u2800\u2800\u2800\u2808\u2800\u2800\u2870\u2801\u2800\u28b8\u2800\u2800\u2800\u2800\u28b1\u28ff\u2875\u280b\u2801\u2880\u281e\u2809\u2800\u2800\u2800\u2803\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ef\u28bb\u287f\u2846\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u2814\u28b3\u2840\u2819\u28fa\u2884\u28d9\u2812\u2826\u2824\u28c4\u28c0\u28c0\u28c0\u28c0\u28c7\u28c0\u28c0\u28ec\u2847\u2800\u2800\u2880\u28fe\u280b\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2840\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2808\u2839\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ee\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b7\u2874\u2803\u2800\u2808\u2819\u2812\u2824\u2824\u2824\u2824\u2824\u282c\u2865\u2812\u280b\u2801\u28b9\u2840\u28e0\u28fe\u2867\u283c\u281b\u2809\u2800\u2800\u2800\u2800\u2800\u2810\u2801\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u28f8\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f6\u28e6\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28f7\u28e4\u28c0\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2847\u2800\u28c0\u28e0\u28f4\u28ff\u28eb\u28e5\u2816\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u2806\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2899\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28f6\u283f\u2837\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28bb\u28ff\u287f\u28ff\u28ff\u28ff\u28ff\u28f6\u28f6\u28f6\u28f6\u28f6\u28ff\u28ff\u28ff\u281f\u2809\u28e0\u280f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28a0\u284f\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u28b0\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e6\u28c4\u28c8\u2833\u28a6\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28bf\u2847\u28f8\u284f\u2819\u281b\u28bb\u281f\u2809\u28fc\u28f5\u287f\u281b\u2801\u2880\u287c\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u287c\u289f\u28c4\u2800\u2800\u2800\u2800\r\n\u2880\u28f0\u28e0\u28c6\u2880\u28f4\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u280d\u2809\u283b\u28e6\u2840\u2800\u2800\u2800\u28a0\u287f\u28ff\u28e7\u287f\u2800\u2800\u2800\u2800\u2800\u28fc\u28ff\u289f\u2841\u2800\u2880\u285e\u2800\u2800\u2800\u2800\u2800\u2880\u28f4\u28f4\u28be\u280b\u2880\u28ff\u285e\u2800\u2800\u2800\u2800\r\n\u281e\u28f5\u28df\u28f5\u285f\u28e1\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f6\u28e6\u28e4\u28ec\u2819\u2826\u2837\u28f6\u280b\u28f9\u28ff\u28ba\u2847\u2800\u2800\u2800\u2880\u28f4\u28ff\u28ef\u285f\u2801\u2800\u280b\u2874\u2802\u28c0\u28e0\u28b4\u2856\u280b\u2809\u2880\u28cf\u28e4\u28fe\u281f\u2801\u2800\u2800\u2800\u2800\r\n\u28fe\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f6\u28e6\u28c4\u28c0\u2898\u28e7\u28ff\u280d\u281b\u283b\u2836\u28b6\u285e\u281b\u28ed\u28fd\u285f\u2800\u2800\u2800\u2880\u28f4\u281e\u2809\u28e0\u28fe\u2841\u2880\u28e4\u28ff\u28ff\u28ff\u284f\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f6\u28f9\u28ff\u28ff\u2803\u2800\u2800\u2800\u2812\u280b\u2800\u2800\u28bf\u28ff\u2801\u2880\u28e0\u28f6\u28ff\u28e5\u28f6\u28ff\u287f\u287f\u28ff\u287f\u281b\u28ff\u28ff\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u28ff\u28ff\u28ff\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u281b\u283f\u28ff\u28ff\u28ff\u283f\u280b\u283b\u281b\u2880\u2840\u2819\u2801\u2880\u28fe\u280b\u28bf\u28f7\u2846\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u28ff\u28ff\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28ff\u2847\u2800\u2808\u2800\u2801\u2808\u2880\u28ff\u2840\u2838\u2801\u2808\u2818\u28bf\u28fa\u2840\u2800\u2800\u2800\u2800\u2800\r\n\u28ff\u28df\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28e7\u28f6\u28e4\u28f4\u28e4\u285f\u28fc\u28ff\u28f7\u28b1\u2846\u2800\u2800\u28b8\u285f\u28f7\u2800\u2880\u2800\u2800\u2800\r\n\u28ff\u2857\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28ff\u28ff\u28ff\u28ff\u2803\u2846\u2800\u28a0\u28f7\u28f9\u28e4\u288f\u287e\u28e3\u2806\r\n\r\n\r\nTelegram: https://t.me/ERROR_404_ERC20\r\nTwitter: https://twitter.com/error_404_erc20\r\nWebsite: https://error404-erc20.com/\r\n\r\n*/\r\n// SPDX-License-Identifier:MIT\r\n\r\npragma solidity ^0.8.20;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\n// Dex Factory contract interface\r\ninterface IDexFactory {\r\n    function createPair(\r\n        address tokenA,\r\n        address tokenB\r\n    ) external returns (address pair);\r\n}\r\n\r\n// Dex Router contract interface\r\ninterface IDexRouter {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() {\r\n        _owner = _msgSender();\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = payable(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract ERROR404 is Context, IERC20, Ownable {\r\n    string private _name = \"ERROR 404\";\r\n    string private _symbol = \"404\";\r\n    uint8 private _decimals = 18;\r\n    uint256 private _totalSupply = 10_000_000_000 * 1e18;\r\n\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    mapping(address => bool) public isExcludedFromFee;\r\n    mapping(address => bool) public isExcludedFromMaxTxn;\r\n    mapping(address => bool) public isExcludedFromMaxHolding;\r\n\r\n    uint256 public minTokenToSwap = (_totalSupply * 5) / (700); // this amount will trigger swap and distribute\r\n    uint256 public maxHoldLimit = (_totalSupply * 2) / (100); // this is the max wallet holding limit\r\n    uint256 public maxTxnLimit = (_totalSupply * 2) / (100); // this is the max transaction limit\r\n    uint256 public percentDivider = 100;\r\n    uint256 public launchedAt;\r\n\r\n    bool public distributeAndLiquifyStatus; // should be true to turn on to liquidate the pool\r\n    bool public feesStatus; // enable by default\r\n    bool public trading; // once enable can't be disable afterwards\r\n\r\n    IDexRouter public dexRouter; // router declaration\r\n\r\n    address public dexPair; // pair address declaration\r\n    address public marketingWallet; // marketing address declaration\r\n    address private constant DEAD = address(0xdead);\r\n    address private constant ZERO = address(0);\r\n\r\n    uint256 public marketingFeeOnBuying = 17;\r\n\r\n    uint256 public marketingFeeOnSelling = 24;\r\n\r\n    event SwapAndLiquify(\r\n        uint256 tokensSwapped,\r\n        uint256 ethReceived,\r\n        uint256 tokensIntoLiqudity\r\n    );\r\n\r\n    constructor() {\r\n        _balances[owner()] = _totalSupply;\r\n        marketingWallet = address(0xEE894FAf5D04b978C7dAd38a27F8b0C240c844B8);\r\n\r\n        dexRouter = IDexRouter(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        isExcludedFromFee[address(dexRouter)] = true;\r\n        isExcludedFromMaxTxn[address(dexRouter)] = true;\r\n        isExcludedFromMaxHolding[address(dexRouter)] = true;\r\n\r\n        dexPair = IDexFactory(dexRouter.factory()).createPair(\r\n            address(this),\r\n            dexRouter.WETH()\r\n        );\r\n        isExcludedFromMaxHolding[dexPair] = true;\r\n\r\n        //exclude owner and this contract from fee\r\n        isExcludedFromFee[owner()] = true;\r\n        isExcludedFromFee[address(this)] = true;\r\n\r\n        //exclude owner and this contract from max Txn\r\n        isExcludedFromMaxTxn[owner()] = true;\r\n        isExcludedFromMaxTxn[address(this)] = true;\r\n\r\n        //exclude owner and this contract from max hold limit\r\n        isExcludedFromMaxHolding[owner()] = true;\r\n        isExcludedFromMaxHolding[address(this)] = true;\r\n        isExcludedFromMaxHolding[marketingWallet] = true;\r\n\r\n        emit Transfer(address(0), owner(), _totalSupply);\r\n    }\r\n\r\n    //to receive ETH from dexRouter when swapping\r\n    receive() external payable {}\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(\r\n        address spender,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            _msgSender(),\r\n            _allowances[sender][_msgSender()] - amount\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(\r\n        address spender,\r\n        uint256 addedValue\r\n    ) public virtual returns (bool) {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender] + (addedValue)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(\r\n        address spender,\r\n        uint256 subtractedValue\r\n    ) public virtual returns (bool) {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender] - subtractedValue\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function includeOrExcludeFromFee(\r\n        address account,\r\n        bool value\r\n    ) external onlyOwner {\r\n        isExcludedFromFee[account] = value;\r\n    }\r\n\r\n    function includeOrExcludeFromMaxTxn(\r\n        address account,\r\n        bool value\r\n    ) external onlyOwner {\r\n        isExcludedFromMaxTxn[account] = value;\r\n    }\r\n\r\n    function includeOrExcludeFromMaxHolding(\r\n        address account,\r\n        bool value\r\n    ) external onlyOwner {\r\n        isExcludedFromMaxHolding[account] = value;\r\n    }\r\n\r\n    function updateMinTokenToSwap(uint256 _amount) external onlyOwner {\r\n        minTokenToSwap = _amount * 1e18;\r\n    }\r\n\r\n    function updateMaxHoldLimit(uint256 _amount) external onlyOwner {\r\n        maxHoldLimit = _amount * 1e18;\r\n    }\r\n\r\n    function updateMaxTxnLimit(uint256 _amount) external onlyOwner {\r\n        maxTxnLimit = _amount * 1e18;\r\n    }\r\n\r\n    function BuyFeePercent(uint256 _marketingFee) external onlyOwner {\r\n        marketingFeeOnBuying = _marketingFee;\r\n    }\r\n\r\n    function SellFeePercent(uint256 _marketingFee) external onlyOwner {\r\n        marketingFeeOnSelling = _marketingFee;\r\n    }\r\n\r\n    function updateDistributionStatus(bool _value) public onlyOwner {\r\n        distributeAndLiquifyStatus = _value;\r\n    }\r\n\r\n    function DisableFees(bool _value) external onlyOwner {\r\n        feesStatus = _value;\r\n    }\r\n\r\n    function updateMarketingAddresses(address _marketingWallet) external onlyOwner {\r\n        marketingWallet = _marketingWallet;\r\n    }\r\n\r\n    function TradingON() external onlyOwner {\r\n        require(!trading, \": already enabled\");\r\n\r\n        trading = true;\r\n        feesStatus = true;\r\n        distributeAndLiquifyStatus = true;\r\n        launchedAt = block.timestamp;\r\n    }\r\n\r\n    function removeStuckedEth(address _receiver) public onlyOwner {\r\n        payable(_receiver).transfer(address(this).balance);\r\n    }\r\n\r\n    function totalBuyFeePerTx(uint256 amount) public view returns (uint256) {\r\n        uint256 fee = (amount * marketingFeeOnBuying) / (percentDivider);\r\n        return fee;\r\n    }\r\n\r\n    function totalSellFeePerTx(uint256 amount) public view returns (uint256) {\r\n        uint256 fee = (amount * marketingFeeOnSelling) / (percentDivider);\r\n        return fee;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \" approve from the zero address\");\r\n        require(spender != address(0), \"approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"transfer from the zero address\");\r\n        require(to != address(0), \"transfer to the zero address\");\r\n        require(amount > 0, \"Amount must be greater than zero\");\r\n        if (!isExcludedFromMaxTxn[from] && !isExcludedFromMaxTxn[to]) {\r\n            require(amount <= maxTxnLimit, \" max txn limit exceeds\");\r\n\r\n            // trading disable till launch\r\n            if (!trading) {\r\n                require(\r\n                    dexPair != from && dexPair != to,\r\n                    \": trading is disable\"\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!isExcludedFromMaxHolding[to]) {\r\n            require(\r\n                (balanceOf(to) + amount) <= maxHoldLimit,\r\n                \": max hold limit exceeds\"\r\n            );\r\n        }\r\n\r\n        // swap and liquify\r\n        distributeAndLiquify(from, to);\r\n\r\n        //indicates if fee should be deducted from transfer\r\n        bool takeFee = true;\r\n\r\n        //if any account belongs to isExcludedFromFee account then remove the fee\r\n        if (isExcludedFromFee[from] || isExcludedFromFee[to] || !feesStatus) {\r\n            takeFee = false;\r\n        }\r\n\r\n        //transfer amount, it will take tax, burn, liquidity fee\r\n        _tokenTransfer(from, to, amount, takeFee);\r\n    }\r\n\r\n    //this method is responsible for taking all fees, if takeFee is true\r\n    function _tokenTransfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount,\r\n        bool takeFee\r\n    ) private {\r\n        if (dexPair == sender && takeFee) {\r\n            uint256 allFee;\r\n            uint256 tTransferAmount;\r\n            allFee = totalBuyFeePerTx(amount);\r\n            tTransferAmount = amount - allFee;\r\n\r\n            _balances[sender] = _balances[sender] - amount;\r\n            _balances[recipient] = _balances[recipient] + tTransferAmount;\r\n            emit Transfer(sender, recipient, tTransferAmount);\r\n\r\n            takeTokenFee(sender, allFee);\r\n        } else if (dexPair == recipient && takeFee) {\r\n            uint256 allFee = totalSellFeePerTx(amount);\r\n            uint256 tTransferAmount = amount - allFee;\r\n            _balances[sender] = _balances[sender] - amount;\r\n            _balances[recipient] = _balances[recipient] + tTransferAmount;\r\n            emit Transfer(sender, recipient, tTransferAmount);\r\n\r\n            takeTokenFee(sender, allFee);\r\n        } else {\r\n            _balances[sender] = _balances[sender] - amount;\r\n            _balances[recipient] = _balances[recipient] + (amount);\r\n            emit Transfer(sender, recipient, amount);\r\n        }\r\n    }\r\n\r\n    function takeTokenFee(address sender, uint256 amount) private {\r\n        _balances[address(this)] = _balances[address(this)] + (amount);\r\n\r\n        emit Transfer(sender, address(this), amount);\r\n    }\r\n    \r\n\r\n    // to withdarw ETH from contract\r\n    function withdrawETH(uint256 _amount) external onlyOwner {\r\n        require(address(this).balance >= _amount, \"Invalid Amount\");\r\n        payable(msg.sender).transfer(_amount);\r\n    }\r\n\r\n    // to withdraw ERC20 tokens from contract\r\n    function withdrawStuckEth(IERC20 _token, uint256 _amount) external onlyOwner {\r\n        require(_token.balanceOf(address(this)) >= _amount, \"Invalid Amount\");\r\n        _token.transfer(msg.sender, _amount);\r\n    }\r\n\r\n    function distributeAndLiquify(address from, address to) private {\r\n        uint256 contractTokenBalance = balanceOf(address(this));\r\n\r\n        bool shouldSell = contractTokenBalance >= minTokenToSwap;\r\n\r\n        if (\r\n            shouldSell &&\r\n            from != dexPair &&\r\n            distributeAndLiquifyStatus &&\r\n            !(from == address(this) && to == dexPair) // swap 1 time\r\n        ) {\r\n            // approve contract\r\n            _approve(address(this), address(dexRouter), minTokenToSwap);\r\n\r\n            // now is to lock into liquidty pool\r\n            Utils.swapTokensForEth(address(dexRouter), minTokenToSwap);\r\n            uint256 ethForMarketing = address(this).balance;\r\n\r\n            // sending Eth to Marketing wallet\r\n            if (ethForMarketing > 0)\r\n                payable(marketingWallet).transfer(ethForMarketing);\r\n        }\r\n    }\r\n}\r\n\r\n// Library for swapping on Dex\r\nlibrary Utils {\r\n    function swapTokensForEth(\r\n        address routerAddress,\r\n        uint256 tokenAmount\r\n    ) internal {\r\n        IDexRouter dexRouter = IDexRouter(routerAddress);\r\n\r\n        // generate the Dex pair path of token -> weth\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = dexRouter.WETH();\r\n\r\n        // make the swap\r\n        dexRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0, // accept any amount of ETH\r\n            path,\r\n            address(this),\r\n            block.timestamp + 300\r\n        );\r\n    }\r\n\r\n    function addLiquidity(\r\n        address routerAddress,\r\n        address owner,\r\n        uint256 tokenAmount,\r\n        uint256 ethAmount\r\n    ) internal {\r\n        IDexRouter dexRouter = IDexRouter(routerAddress);\r\n\r\n        // add the liquidity\r\n        dexRouter.addLiquidityETH{value: ethAmount}(\r\n            address(this),\r\n            tokenAmount,\r\n            0, // slippage is unavoidable\r\n            0, // slippage is unavoidable\r\n            owner,\r\n            block.timestamp + 300\r\n        );\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiqudity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketingFee\",\"type\":\"uint256\"}],\"name\":\"BuyFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"DisableFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketingFee\",\"type\":\"uint256\"}],\"name\":\"SellFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TradingON\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexRouter\",\"outputs\":[{\"internalType\":\"contract IDexRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeAndLiquifyStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"includeOrExcludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"includeOrExcludeFromMaxHolding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"includeOrExcludeFromMaxTxn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromMaxHolding\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromMaxTxn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingFeeOnBuying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingFeeOnSelling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxHoldLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxnLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTokenToSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentDivider\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"removeStuckedEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"totalBuyFeePerTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"totalSellFeePerTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"updateDistributionStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketingWallet\",\"type\":\"address\"}],\"name\":\"updateMarketingAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updateMaxHoldLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updateMaxTxnLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updateMinTokenToSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawStuckEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "ERROR404", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://8c31426418b160ef0d86c7eca2a7a789f33d13550af94e5aaeca897e642e8771"}