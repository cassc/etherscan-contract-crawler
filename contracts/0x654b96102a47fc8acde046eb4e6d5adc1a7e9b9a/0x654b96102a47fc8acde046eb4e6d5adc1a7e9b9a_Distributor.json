{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\ninterface ERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract Distributor {\r\n    address public _owner;\r\n    \r\n    constructor() {\r\n        _owner = msg.sender;\r\n    }\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    \r\n    function transferCoin(address[] memory _recipients, uint256[] memory _amounts) public payable returns (bool success) {\r\n        uint length = _recipients.length;\r\n        for (uint i = 0; i < length; i++) {\r\n            (bool txSuccess,) = payable(_recipients[i]).call{value: _amounts[i]}(new bytes(0));\r\n            require(txSuccess, 'COIN_TRANSFER_FAILED');\r\n            emit Transfer(msg.sender, _recipients[i], _amounts[i]);\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n    function transferCoinFixedAmount(address[] memory _recipients, uint256 _amount) public payable returns (bool success) {\r\n        uint length = _recipients.length;\r\n        for (uint i = 0; i < length; i++) {\r\n            (bool txSuccess,) = payable(_recipients[i]).call{value: _amount}(new bytes(0));\r\n            require(txSuccess, 'COIN_TRANSFER_FAILED');\r\n            emit Transfer(msg.sender, _recipients[i], _amount);\r\n        }\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function transferTokenFrom(address _contractAddress, address[] memory _recipients, uint[] memory _amounts) public returns (bool success) {\r\n        ERC20 token = ERC20(_contractAddress);\r\n        uint length = _recipients.length;\r\n        for (uint i = 0; i < length; i++) {\r\n            token.transferFrom(msg.sender, _recipients[i], _amounts[i]);\r\n        }\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function transferTokenFromFixedAmount(address _contractAddress, address[] memory _recipients, uint256 _amount) public returns (bool success) {\r\n        ERC20 token = ERC20(_contractAddress);\r\n        uint length = _recipients.length;\r\n        for (uint i = 0; i < length; i++) {\r\n            token.transferFrom(msg.sender, _recipients[i], _amount);\r\n        }\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function clearFund() external {\r\n        uint256 amount = address(this).balance;\r\n        (bool success,) = payable(_owner).call{value: amount}(new bytes(0));\r\n        require(success, 'COIN_TRANSFER_FAILED');\r\n        emit Transfer(address(this), _owner, amount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferCoin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferCoinFixedAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferTokenFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferTokenFromFixedAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Distributor", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://fc7cc814c392b1b54d622777d4afcd28fa2850eedecdc6c10e18b9cb6aa239e8"}