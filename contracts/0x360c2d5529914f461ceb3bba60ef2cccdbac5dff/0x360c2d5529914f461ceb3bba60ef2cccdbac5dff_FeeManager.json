{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Context.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/feeManager.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.9;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract FeeManager is Ownable {\\n    uint256 private _transactionFeeWeekday;\\n    uint256 private _transactionFeeWeekend;\\n    uint256 private _firstDeposit;\\n    uint256 private _minDeposit;\\n    uint256 private _maxDeposit;\\n    uint256 private _minWithdraw;\\n    uint256 private _maxWithdraw;\\n    uint256 private _managementFeeRate;\\n    uint256 private _maxWeekendDepositPct;\\n    uint256 private _maxWeekendAggregatedDepositPct;\\n    uint256 private _minTxsFee = 25 * 10 ** 6;\\n\\n    event SetTransactionFeeWeekday(uint256 transactionFee);\\n    event SetTransactionFeeWeekend(uint256 transactionFee);\\n    event SetFirstDeposit(uint256 firstDeposit);\\n    event SetMinDeposit(uint256 minDeposit);\\n    event SetMaxDeposit(uint256 maxDeposit);\\n    event SetMinWithdraw(uint256 minWithdraw);\\n    event SetMaxWithdraw(uint256 maxWithdraw);\\n    event SetManagementFeeRate(uint256 feeRate);\\n    event SetMaxWeekendDeposit(uint256 percentage);\\n    event SetMaxWeekendAggregatedDeposit(uint256 percentage);\\n    event UpdateMinTxsFee(uint256 fee);\\n\\n    /**\\n     * @notice Initializes the FeeManager contract with initial values.\\n     * @dev Constructor for the FeeManager contract.\\n     * @param transactionFeeWeekday Fee for transactions on weekdays.\\n     * @param transactionFeeWeekend Fee for transactions on weekends.\\n     * @param maxWeekendDepositPct Max deposit percentage for weekends.\\n     * @param maxWeekendAggregatedDepositPct Max aggregated deposit percentage for weekends.\\n     * @param firstDeposit Initial deposit amount.\\n     * @param minDeposit Minimum deposit value.\\n     * @param maxDeposit Maximum deposit value.\\n     * @param minWithdraw Minimum withdrawal value.\\n     * @param maxWithdraw Maximum withdrawal value.\\n     * @param managementFeeRate Rate of the management fee.\\n     */\\n    constructor(\\n        uint256 transactionFeeWeekday,\\n        uint256 transactionFeeWeekend,\\n        uint256 maxWeekendDepositPct,\\n        uint256 maxWeekendAggregatedDepositPct,\\n        uint256 firstDeposit,\\n        uint256 minDeposit,\\n        uint256 maxDeposit,\\n        uint256 minWithdraw,\\n        uint256 maxWithdraw,\\n        uint256 managementFeeRate\\n    ) {\\n        _transactionFeeWeekday = transactionFeeWeekday;\\n        _transactionFeeWeekend = transactionFeeWeekend;\\n        _firstDeposit = firstDeposit;\\n        _managementFeeRate = managementFeeRate;\\n        _maxWeekendDepositPct = maxWeekendDepositPct;\\n        _maxWeekendAggregatedDepositPct = maxWeekendAggregatedDepositPct;\\n\\n        setMaxDeposit(maxDeposit);\\n        setMinDeposit(minDeposit);\\n        setMaxWithdraw(maxWithdraw);\\n        setMinWithdraw(minWithdraw);\\n    }\\n\\n    /**\\n     * @notice Sets the transaction fee for weekdays.\\n     * @dev Only callable by the contract owner.\\n     * @param txsFee The transaction fee for weekdays.\\n     */\\n    function setTransactionFeeWeekday(uint256 txsFee) external onlyOwner {\\n        _transactionFeeWeekday = txsFee;\\n        emit SetTransactionFeeWeekday(txsFee);\\n    }\\n\\n    /**\\n     * @notice Sets the transaction fee for weekends.\\n     * @dev Only callable by the contract owner.\\n     * @param txsFee The transaction fee for weekends.\\n     */\\n    function setTransactionFeeWeekend(uint256 txsFee) external onlyOwner {\\n        _transactionFeeWeekend = txsFee;\\n        emit SetTransactionFeeWeekend(txsFee);\\n    }\\n\\n    /**\\n     * @notice Sets the initial deposit amount.\\n     * @dev Only callable by the contract owner.\\n     * @param firstDeposit The initial deposit amount.\\n     */\\n    function setFirstDeposit(uint256 firstDeposit) external onlyOwner {\\n        _firstDeposit = firstDeposit;\\n        emit SetFirstDeposit(firstDeposit);\\n    }\\n\\n    /**\\n     * @notice Sets the management fee rate.\\n     * @dev Only callable by the contract owner.\\n     * @param feeRate The management fee rate.\\n     */\\n    function setManagementFeeRate(uint256 feeRate) external onlyOwner {\\n        _managementFeeRate = feeRate;\\n        emit SetManagementFeeRate(feeRate);\\n    }\\n\\n    /**\\n     * @notice Sets the maximum aggregated deposit percentage for weekends.\\n     * @dev Only callable by the contract owner.\\n     * @param percentage The maximum aggregated deposit percentage.\\n     */\\n    function setMaxWeekendAggregatedDepositPct(\\n        uint256 percentage\\n    ) external onlyOwner {\\n        _maxWeekendAggregatedDepositPct = percentage;\\n        emit SetMaxWeekendAggregatedDeposit(percentage);\\n    }\\n\\n    /**\\n     * @notice Sets the maximum deposit percentage for weekends.\\n     * @dev Only callable by the contract owner.\\n     * @param percentage The maximum deposit percentage for weekends.\\n     */\\n    function setMaxWeekendDepositPct(uint256 percentage) external onlyOwner {\\n        _maxWeekendDepositPct = percentage;\\n        emit SetMaxWeekendDeposit(percentage);\\n    }\\n\\n    /**\\n     * @notice Sets the minimum transaction fee.\\n     * @dev Only callable by the contract owner.\\n     * @param _fee The minimum transaction fee.\\n     */\\n    function setMinTxsFee(uint256 _fee) external onlyOwner {\\n        _minTxsFee = _fee;\\n        emit UpdateMinTxsFee(_fee);\\n    }\\n\\n    /**\\n     * @notice Gets the transaction fee for weekdays.\\n     * @dev View function to get the weekday transaction fee.\\n     * @return The weekday transaction fee.\\n     */\\n    function getTxFeeWeekday() external view returns (uint256) {\\n        return _transactionFeeWeekday;\\n    }\\n\\n    /**\\n     * @notice Gets the transaction fee for weekends.\\n     * @dev View function to get the weekend transaction fee.\\n     * @return The weekend transaction fee.\\n     */\\n    function getTxFeeWeekend() external view returns (uint256) {\\n        return _transactionFeeWeekend;\\n    }\\n\\n    /**\\n     * @notice Gets the minimum and maximum deposit values.\\n     * @dev View function to get deposit limits.\\n     * @return minDeposit The minimum deposit limit.\\n     * @return maxDeposit The maximum deposit limit.\\n     */\\n    function getMinMaxDeposit()\\n        external\\n        view\\n        returns (uint256 minDeposit, uint256 maxDeposit)\\n    {\\n        minDeposit = _minDeposit;\\n        maxDeposit = _maxDeposit;\\n    }\\n\\n    /**\\n     * @notice Gets the minimum and maximum withdrawal values.\\n     * @dev View function to get withdrawal limits.\\n     * @return minWithdraw The minimum withdrawal limit.\\n     * @return maxWithdraw The maximum withdrawal limit.\\n     */\\n    function getMinMaxWithdraw()\\n        external\\n        view\\n        returns (uint256 minWithdraw, uint256 maxWithdraw)\\n    {\\n        minWithdraw = _minWithdraw;\\n        maxWithdraw = _maxWithdraw;\\n    }\\n\\n    /**\\n     * @notice Gets the management fee rate.\\n     * @dev View function to retrieve the management fee rate.\\n     * @return feeRate The current management fee rate.\\n     */\\n    function getManagementFeeRate() external view returns (uint256 feeRate) {\\n        feeRate = _managementFeeRate;\\n    }\\n\\n    /**\\n     * @notice Gets the first deposit amount.\\n     * @dev View function to retrieve the first deposit value.\\n     * @return firstDeposit The value of the initial deposit.\\n     */\\n    function getFirstDeposit() external view returns (uint256 firstDeposit) {\\n        firstDeposit = _firstDeposit;\\n    }\\n\\n    /**\\n     * @notice Gets the maximum deposit percentages for weekends.\\n     * @dev View function to retrieve weekend deposit limits.\\n     * @return maxDepositPct The maximum single deposit percentage for weekends.\\n     * @return maxDepositAggregatedPct The maximum aggregated deposit percentage for weekends.\\n     */\\n    function getMaxWeekendDepositPct()\\n        external\\n        view\\n        returns (uint256 maxDepositPct, uint256 maxDepositAggregatedPct)\\n    {\\n        maxDepositPct = _maxWeekendDepositPct;\\n        maxDepositAggregatedPct = _maxWeekendAggregatedDepositPct;\\n    }\\n\\n    /**\\n     * @notice Gets the minimum transaction fee.\\n     * @dev View function to retrieve the minimum transaction fee.\\n     * @return The current minimum transaction fee.\\n     */\\n    function getMinTxsFee() external view returns (uint256) {\\n        return _minTxsFee;\\n    }\\n\\n    /**\\n     * @notice Sets the minimum deposit amount.\\n     * @dev Only callable by the contract owner.\\n     * @param minDeposit The new minimum deposit value.\\n     */\\n    function setMinDeposit(uint256 minDeposit) public onlyOwner {\\n        require(minDeposit < _maxDeposit, \\\"deposit min should lt max\\\");\\n        _minDeposit = minDeposit;\\n        emit SetMinDeposit(minDeposit);\\n    }\\n\\n    /**\\n     * @notice Sets the maximum deposit amount.\\n     * @dev Only callable by the contract owner.\\n     * @param maxDeposit The new maximum deposit value.\\n     */\\n    function setMaxDeposit(uint256 maxDeposit) public onlyOwner {\\n        require(_minDeposit < maxDeposit, \\\"deposit max should gt min\\\");\\n        _maxDeposit = maxDeposit;\\n        emit SetMaxDeposit(maxDeposit);\\n    }\\n\\n    /**\\n     * @notice Sets the minimum withdrawal amount.\\n     * @dev Only callable by the contract owner.\\n     * @param minWithdraw The new minimum withdrawal value.\\n     */\\n    function setMinWithdraw(uint256 minWithdraw) public onlyOwner {\\n        require(minWithdraw < _maxWithdraw, \\\"withdraw min should lt max\\\");\\n        _minWithdraw = minWithdraw;\\n        emit SetMinWithdraw(minWithdraw);\\n    }\\n\\n    /**\\n     * @notice Sets the maximum withdrawal amount.\\n     * @dev Only callable by the contract owner.\\n     * @param maxWithdraw The new maximum withdrawal value.\\n     */\\n    function setMaxWithdraw(uint256 maxWithdraw) public onlyOwner {\\n        require(_minWithdraw < maxWithdraw, \\\"withdraw max should gt min\\\");\\n        _maxWithdraw = maxWithdraw;\\n        emit SetMaxWithdraw(maxWithdraw);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"transactionFeeWeekday\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transactionFeeWeekend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeekendDepositPct\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeekendAggregatedDepositPct\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minWithdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWithdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managementFeeRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"firstDeposit\",\"type\":\"uint256\"}],\"name\":\"SetFirstDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeRate\",\"type\":\"uint256\"}],\"name\":\"SetManagementFeeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxDeposit\",\"type\":\"uint256\"}],\"name\":\"SetMaxDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"SetMaxWeekendAggregatedDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"SetMaxWeekendDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxWithdraw\",\"type\":\"uint256\"}],\"name\":\"SetMaxWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minDeposit\",\"type\":\"uint256\"}],\"name\":\"SetMinDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minWithdraw\",\"type\":\"uint256\"}],\"name\":\"SetMinWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transactionFee\",\"type\":\"uint256\"}],\"name\":\"SetTransactionFeeWeekday\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transactionFee\",\"type\":\"uint256\"}],\"name\":\"SetTransactionFeeWeekend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"UpdateMinTxsFee\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getFirstDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"firstDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getManagementFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxWeekendDepositPct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxDepositPct\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDepositAggregatedPct\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinMaxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinMaxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minWithdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWithdraw\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinTxsFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTxFeeWeekday\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTxFeeWeekend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"firstDeposit\",\"type\":\"uint256\"}],\"name\":\"setFirstDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeRate\",\"type\":\"uint256\"}],\"name\":\"setManagementFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxDeposit\",\"type\":\"uint256\"}],\"name\":\"setMaxDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"setMaxWeekendAggregatedDepositPct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"setMaxWeekendDepositPct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxWithdraw\",\"type\":\"uint256\"}],\"name\":\"setMaxWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minDeposit\",\"type\":\"uint256\"}],\"name\":\"setMinDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setMinTxsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minWithdraw\",\"type\":\"uint256\"}],\"name\":\"setMinWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txsFee\",\"type\":\"uint256\"}],\"name\":\"setTransactionFeeWeekday\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txsFee\",\"type\":\"uint256\"}],\"name\":\"setTransactionFeeWeekend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "FeeManager", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001f400000000000000000000000000000000000000000000000000000000000003e8000000000000000000000000000000000000000000000000000000174876e80000000000000000000000000000000000000000000000000000000002540be400000000000000000000000000000000000000000000000000000009184e72a0000000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000000009184e72a0000000000000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}