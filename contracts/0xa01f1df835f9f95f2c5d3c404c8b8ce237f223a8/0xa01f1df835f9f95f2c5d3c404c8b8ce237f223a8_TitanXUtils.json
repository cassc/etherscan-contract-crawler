{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.18;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n}\r\n\r\ncontract Base {\r\n    address owner;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"onlyOwner\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n}\r\n\r\ninterface ITiTanX is IERC20 {\r\n    function startMint(uint256 mintPower, uint256 numOfDays) external payable;\r\n\r\n    function distributeETH() external;\r\n\r\n    function claimMint(uint256 id) external;\r\n\r\n    function getCurrentMintCost() external view returns (uint256);\r\n}\r\n\r\ncontract TitanXUtils is Base {\r\n    address recipient;\r\n    ITiTanX titanx = ITiTanX(0xF19308F923582A6f7c465e5CE7a9Dc1BEC6665B1);\r\n\r\n    constructor() payable {}\r\n\r\n    function setNewOwner(address _owner) external onlyOwner {\r\n        owner = _owner;\r\n    }\r\n\r\n    function batchMint(\r\n        uint256 startDay,\r\n        uint256 endDay,\r\n        uint256 power\r\n    ) external payable {\r\n        uint256 p = getBatchMintCost(power, 1, titanx.getCurrentMintCost());\r\n        for (; startDay <= endDay; startDay++) {\r\n            titanx.startMint{value: p}(power, startDay);\r\n        }\r\n        titanx.distributeETH();\r\n        withdraw();\r\n    }\r\n\r\n    function claimMint(uint256 id) external onlyOwner {\r\n        titanx.claimMint(id);\r\n        titanx.transfer(msg.sender, titanx.balanceOf(address(this)));\r\n    }\r\n\r\n    function call(\r\n        address to,\r\n        bytes calldata data,\r\n        uint256 value\r\n    ) external payable onlyOwner {\r\n        (bool callResult, ) = address(to).call{value: value}(data);\r\n        if (!callResult) {\r\n            revert(\"no success\");\r\n        }\r\n    }\r\n\r\n    function calcMintPrice(\r\n        uint256 startDay,\r\n        uint256 endDay,\r\n        uint256 power\r\n    ) public view returns (uint256) {\r\n        uint256 sum = 0;\r\n        for (; startDay <= endDay; startDay++) {\r\n            sum = sum + getBatchMintCost(power, 1, titanx.getCurrentMintCost());\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    function withdraw() public payable onlyOwner {\r\n        if (address(this).balance > 0) {\r\n            (bool ownerResult, ) = msg.sender.call{\r\n                value: address(this).balance\r\n            }(new bytes(0));\r\n            require(ownerResult, \"call origin error\");\r\n        }\r\n    }\r\n\r\n    function getBatchMintCost(\r\n        uint256 mintPower,\r\n        uint256 count,\r\n        uint256 mintCost\r\n    ) public pure returns (uint256) {\r\n        return (mintCost * mintPower * count) / 100;\r\n    }\r\n\r\n    fallback() external payable {}\r\n\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"name\":\"calcMintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"call\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"claimMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintCost\",\"type\":\"uint256\"}],\"name\":\"getBatchMintCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "TitanXUtils", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://af5f32ac2228f54a964bbd0a6d421aeaea1675dc8a79ba8c1e420907a131fa07"}