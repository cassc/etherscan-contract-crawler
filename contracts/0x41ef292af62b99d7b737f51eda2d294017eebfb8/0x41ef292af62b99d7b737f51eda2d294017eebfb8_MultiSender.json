{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nerror MultiSender__NotOwner();\r\nerror MultiSender__InvalidNumberOfRecipients();\r\nerror MultiSender__NotEnoughBalance();\r\n\r\ncontract MultiSender {\r\n    address private owner;\r\n\r\n    uint public total_value_locked;\r\n\r\n    event OwnerChanged(address indexed newOwner, address indexed oldOwner);\r\n    event AccountRecharged(uint256 rechargeValue);\r\n\r\n    modifier isOwner() {\r\n        if (msg.sender != owner) {\r\n            revert MultiSender__NotOwner();\r\n        }\r\n        _;\r\n    }\r\n\r\n    constructor() payable {\r\n        owner = msg.sender;\r\n        total_value_locked = msg.value;\r\n    }\r\n\r\n    function changeOwner(address newOwner) public isOwner {\r\n        emit OwnerChanged(newOwner, owner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    function getOwner() public view returns (address) {\r\n        return owner;\r\n    }\r\n\r\n    function recharge() public payable isOwner {\r\n        total_value_locked += msg.value;\r\n        emit AccountRecharged(msg.value);\r\n    }\r\n\r\n    function sendToMany(\r\n        address payable[] memory recipients,\r\n        uint[] memory amounts\r\n    ) public payable isOwner {\r\n        total_value_locked += msg.value;\r\n\r\n        if (recipients.length != amounts.length) {\r\n            revert MultiSender__InvalidNumberOfRecipients();\r\n        }\r\n\r\n        uint totalAmountToSend = 0;\r\n        for (uint i = 0; i < amounts.length; i++) {\r\n            totalAmountToSend += amounts[i];\r\n        }\r\n\r\n        if (totalAmountToSend > total_value_locked) {\r\n            revert MultiSender__NotEnoughBalance();\r\n        }\r\n\r\n        // Now send to multiple recipients\r\n        for (uint i = 0; i < recipients.length; i++) {\r\n            total_value_locked -= amounts[i];\r\n            recipients[i].transfer(amounts[i]);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MultiSender__InvalidNumberOfRecipients\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MultiSender__NotEnoughBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MultiSender__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rechargeValue\",\"type\":\"uint256\"}],\"name\":\"AccountRecharged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recharge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"sendToMany\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total_value_locked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MultiSender", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://67fa551135d8332540e5899b2003f2a023c34b05593befe9b95d3114ca510b29"}