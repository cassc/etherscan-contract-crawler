{"SourceCode": "# @version 0.3.3\r\n\"\"\"\r\n@title Voting Escrow Delegation Proxy\r\n@author Angle Protocol\r\n@license MIT\r\n\"\"\"\r\n\r\n# Full fork from:\r\n# Curve Finance's veBoostProxy\r\n\r\nfrom vyper.interfaces import ERC20\r\n\r\ninterface VeDelegation:\r\n    def adjusted_balance_of(_account: address) -> uint256: view\r\n\r\n\r\nevent CommitAdmin:\r\n    admin: address\r\n\r\nevent ApplyAdmin:\r\n    admin: address\r\n\r\nevent DelegationSet:\r\n    delegation: address\r\n\r\n\r\nvoting_escrow: public(address)\r\n\r\n\r\ndelegation: public(address)\r\n\r\nadmin: public(address)\r\nfuture_admin: public(address)\r\n\r\n\r\n@external\r\ndef __init__(_voting_escrow: address, _delegation: address, _admin: address):\r\n\r\n    assert _voting_escrow != ZERO_ADDRESS\r\n    assert _admin != ZERO_ADDRESS\r\n\r\n    self.voting_escrow = _voting_escrow\r\n\r\n    self.delegation = _delegation\r\n\r\n    self.admin = _admin\r\n\r\n    log DelegationSet(_delegation)\r\n\r\n\r\n@view\r\n@external\r\ndef adjusted_balance_of(_account: address) -> uint256:\r\n    \"\"\"\r\n    @notice Get the adjusted veCRV balance from the active boost delegation contract\r\n    @param _account The account to query the adjusted veCRV balance of\r\n    @return veCRV balance\r\n    \"\"\"\r\n    _delegation: address = self.delegation\r\n    if _delegation == ZERO_ADDRESS:\r\n        return ERC20(self.voting_escrow).balanceOf(_account)\r\n    return VeDelegation(_delegation).adjusted_balance_of(_account)\r\n\r\n\r\n@external\r\ndef kill_delegation():\r\n    \"\"\"\r\n    @notice Set delegation contract to 0x00, disabling boost delegation\r\n    @dev Callable by the emergency admin in case of an issue with the delegation logic\r\n    \"\"\"\r\n    assert msg.sender == self.admin\r\n\r\n    self.delegation = ZERO_ADDRESS\r\n    log DelegationSet(ZERO_ADDRESS)\r\n\r\n\r\n@external\r\ndef set_delegation(_delegation: address):\r\n    \"\"\"\r\n    @notice Set the delegation contract\r\n    @dev Only callable by the ownership admin\r\n    @param _delegation `VotingEscrowDelegation` deployment address\r\n    \"\"\"\r\n    assert msg.sender == self.admin\r\n\r\n    # call `adjusted_balance_of` to make sure it works\r\n    VeDelegation(_delegation).adjusted_balance_of(msg.sender)\r\n\r\n    self.delegation = _delegation\r\n    log DelegationSet(_delegation)\r\n\r\n\r\n@external\r\ndef commit_admin(_admin: address):\r\n    \"\"\"\r\n    @notice Set admin to `_admin`\r\n    @param _admin Ownership admin\r\n    \"\"\"\r\n    assert msg.sender == self.admin, \"Access denied\"\r\n\r\n    self.future_admin = _admin\r\n\r\n    log CommitAdmin(_admin)\r\n\r\n\r\n@external\r\ndef accept_transfer_ownership():\r\n    \"\"\"\r\n    @notice Accept a pending ownership transfer\r\n    \"\"\"\r\n    _admin: address = self.future_admin\r\n    assert msg.sender == _admin  # dev: future admin only\r\n\r\n    self.admin = _admin\r\n\r\n    log ApplyAdmin(_admin)", "ABI": "[{\"name\":\"CommitAdmin\",\"inputs\":[{\"name\":\"admin\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"ApplyAdmin\",\"inputs\":[{\"name\":\"admin\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"DelegationSet\",\"inputs\":[{\"name\":\"delegation\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"_voting_escrow\",\"type\":\"address\"},{\"name\":\"_delegation\",\"type\":\"address\"},{\"name\":\"_admin\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"adjusted_balance_of\",\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"kill_delegation\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_delegation\",\"inputs\":[{\"name\":\"_delegation\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"commit_admin\",\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"accept_transfer_ownership\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"voting_escrow\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"delegation\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]}]", "ContractName": "Vyper_contract", "CompilerVersion": "vyper:0.3.3", "OptimizationUsed": "0", "Runs": "0", "ConstructorArguments": "0000000000000000000000003ac91a7a2d30fa25ada4616d337a28ea988988be00000000000000000000000000000000000000000000000000000000000000000000000000000000000000004210b1803f7cb057435ff1135f5dfdfbee086c27", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}