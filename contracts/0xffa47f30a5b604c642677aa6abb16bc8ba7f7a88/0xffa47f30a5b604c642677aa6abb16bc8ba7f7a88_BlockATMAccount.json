{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0 <=0.8.17;\r\n\r\ncontract BlockATMAccount {\r\n\r\n    mapping(address => uint256) private balanceOf;\r\n\r\n    address public settleAddress;\r\n\r\n    address public onwer;\r\n\r\n    uint256 public minBalance = 100000000;\r\n\r\n    struct FeeInfo{\r\n        address contractAddress;\r\n        uint256 amount;\r\n    }\r\n\r\n    constructor(address newSettleAddress) {\r\n        settleAddress = newSettleAddress;\r\n        onwer = msg.sender;\r\n    }\r\n\r\n    event BatchSettleBalance(FeeInfo[] feeInfoList);\r\n\r\n    event SettleBalance(address indexed contractAddress,uint256 balance);\r\n\r\n    event SetMinBalance(uint256 minBalance);\r\n\r\n    event SetSettleAddress(address settleAddress);\r\n\r\n\r\n    modifier onlyOwner() {\r\n        require(onwer == msg.sender, \"Not the owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlySettle() {\r\n        require(settleAddress == msg.sender, \"Not the settle address\");\r\n        _;\r\n    }\r\n\r\n    function batchSettleBalance(FeeInfo[] memory feeInfoList) public onlySettle returns (bool) {\r\n        require(feeInfoList.length > 0, \"Parameter error\");\r\n        for(uint16 i = 0; i < feeInfoList.length; i++ ){\r\n            FeeInfo memory feeInfo = feeInfoList[i];\r\n            balanceOf[feeInfo.contractAddress] = feeInfo.amount;\r\n        }\r\n        emit BatchSettleBalance(feeInfoList);\r\n        return true;\r\n    }\r\n\r\n    function settleBalance(address contractAddress,uint256 balance) public onlySettle returns (bool) {\r\n        balanceOf[contractAddress] = balance;\r\n        emit SettleBalance(contractAddress,balance);\r\n        return true;\r\n    }\r\n\r\n    function recharge(FeeInfo memory feeInfo) public onlySettle returns (bool) {\r\n        balanceOf[feeInfo.contractAddress] += feeInfo.amount;\r\n        return true;\r\n    }\r\n\r\n    function checkWithdraw() public view returns (bool)  {\r\n        uint256 balance = balanceOf[msg.sender];\r\n        require(balance >= minBalance, \"Insufficient business balance\");\r\n        return true;\r\n    }\r\n\r\n    \r\n    function setSettleAddress(address newSettleAddress) public onlyOwner {\r\n        settleAddress = newSettleAddress;\r\n        emit SetSettleAddress(newSettleAddress);\r\n    }\r\n\r\n    function setMinBalance(uint256 newMinBalance) public onlyOwner {\r\n        minBalance = newMinBalance;\r\n        emit SetMinBalance(newMinBalance);\r\n    }\r\n\r\n    function getBalanceOf(address newSettleAddress) public view returns (uint256) {\r\n        return balanceOf[newSettleAddress];\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSettleAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct BlockATMAccount.FeeInfo[]\",\"name\":\"feeInfoList\",\"type\":\"tuple[]\"}],\"name\":\"BatchSettleBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minBalance\",\"type\":\"uint256\"}],\"name\":\"SetMinBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"settleAddress\",\"type\":\"address\"}],\"name\":\"SetSettleAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"SettleBalance\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BlockATMAccount.FeeInfo[]\",\"name\":\"feeInfoList\",\"type\":\"tuple[]\"}],\"name\":\"batchSettleBalance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSettleAddress\",\"type\":\"address\"}],\"name\":\"getBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onwer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BlockATMAccount.FeeInfo\",\"name\":\"feeInfo\",\"type\":\"tuple\"}],\"name\":\"recharge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinBalance\",\"type\":\"uint256\"}],\"name\":\"setMinBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSettleAddress\",\"type\":\"address\"}],\"name\":\"setSettleAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"settleBalance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BlockATMAccount", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000004b958bd671cd5bd3001cc0072b17633b78e574ae", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0c0cd49b2e385296c9fc06013954b6986a4cebb1da14f21a5ddd50716a09e83a"}