{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity =0.8.9;\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract VirtualVersionsErc20Upgrader {\r\n    address public constant BLACK_HOLE_ADDRESS = 0x000000000000000000000000000000000000dEaD;\r\n\r\n    address public admin_;\r\n\r\n    address public oldToken_;\r\n    address public newToken_;\r\n\r\n    function version() external pure returns (string memory) { return \"VirtualVersionsErc20Upgrader v1\"; }\r\n\r\n    constructor(address _admin, address _oldToken, address _newToken) {\r\n        require(_admin != address(0), \"TA-5: zero admin address\");\r\n        admin_ = _admin;\r\n\r\n        require(_oldToken != address(0) && _newToken != address(0), \"TA-1: zero token address\");\r\n        oldToken_ = _oldToken;\r\n        newToken_ = _newToken;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin_, \"TA-4: auth failed\");\r\n        _;\r\n    }\r\n\r\n    function withdraw(address _token, address _recipient, uint256 _amount) external onlyAdmin {\r\n        require(IERC20(_token).transfer(_recipient, _amount), \"TA-6: transfer failed\");\r\n    }\r\n\r\n    function upgrade(address _recipient, uint256 _amount) external {\r\n        require(_amount != 0, \"TA-2: zero token amount\");\r\n        require(_recipient != address(0), \"TA-3: zero recipient address\");\r\n\r\n        require(IERC20(oldToken_).transferFrom(msg.sender, BLACK_HOLE_ADDRESS, _amount), \"TA-7: burn failed\");\r\n        require(IERC20(newToken_).transfer(_recipient, _amount), \"TA-8: transfer failed\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oldToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BLACK_HOLE_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newToken_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldToken_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "VirtualVersionsErc20Upgrader", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000005f9b6c6510bf3c3f2fdfbcb526f5458a08f3fccf0000000000000000000000005c39ef4bda89a9d7edb18a16e53c97d5d32245f60000000000000000000000001f7e7a030aef0a0f600de1350c23d30b73fc7270", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://75c8f356c70b78ec9c3e733eb486357d9a97b6d5a11d6a5a9886b000b1215d96"}