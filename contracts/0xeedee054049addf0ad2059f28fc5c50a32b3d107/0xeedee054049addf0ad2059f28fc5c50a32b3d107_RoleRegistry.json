{"SourceCode": "pragma solidity ^0.8.21;\r\n// SPDX-License-Identifier: GPL-3.0\r\n\r\ncontract RoleRegistry{\r\n    address owner;\r\n    address controller;\r\n    address rewardDistributor;\r\n    address router;\r\n    address operator;\r\n    address VRFv2DirectFundingConsumer;\r\n    address reserveAddress;\r\n    bool initialized;\r\n    function initialize(address ownerAddr, address controllerAddr, address distributorAddr, address routerAddr, address operatorAddr, address VRFv2DirectFundingConsumerAddress, address reserveAddr) external{\r\n        require(initialized == false, \"Contract is initialized already\");\r\n        _transferOwnerShip(ownerAddr);\r\n        _transferControllerRole(controllerAddr);\r\n        _transferRewardDistributorRole(distributorAddr);\r\n        _transferRouter(routerAddr);\r\n        _transferOperatorRole(operatorAddr);\r\n        _transferReserveAddr(reserveAddr);\r\n        _transferVRF(VRFv2DirectFundingConsumerAddress);\r\n        initialized = true;\r\n    }\r\n\r\n    \r\n    \r\n\r\n    modifier onlyOwner(){\r\n        require(msg.sender == owner, \"Invalid caller\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) external onlyOwner{\r\n        _transferOwnerShip(newOwner);\r\n    }\r\n    function _transferOwnerShip(address newOwner) internal{\r\n        owner = newOwner;\r\n    }\r\n\r\n    function transferReserveAddr(address reserveAddr) external onlyOwner{\r\n        _transferReserveAddr(reserveAddr);\r\n    }\r\n    function _transferReserveAddr(address reserveAddr) internal{\r\n        reserveAddress = reserveAddr;\r\n    }\r\n\r\n    function setController(address newController) external onlyOwner{\r\n        _transferControllerRole(newController);\r\n    }\r\n\r\n    function setrewardDistributor(address newDistributor) external onlyOwner{\r\n        _transferRewardDistributorRole(newDistributor);\r\n    }\r\n    function _transferRewardDistributorRole(address newDistributor) internal{\r\n        rewardDistributor = newDistributor;\r\n    }\r\n\r\n    function _transferControllerRole(address newController) internal{\r\n        controller = newController;\r\n    }\r\n\r\n    function setRouter(address newRouter) external onlyOwner{\r\n        _transferRouter(newRouter);\r\n    }\r\n\r\n    function _transferRouter(address newRouter) internal{\r\n        router = newRouter;\r\n    }\r\n\r\n    function setVRF(address newVRF) external onlyOwner{\r\n        _transferVRF(newVRF);\r\n    }\r\n\r\n    function _transferVRF(address newVRF) internal{\r\n        VRFv2DirectFundingConsumer = newVRF;\r\n    }\r\n\r\n    function _transferOperatorRole(address operatorAddr) internal{\r\n        operator = operatorAddr;\r\n    }\r\n\r\n    function setOperatorRole(address operatorAddr) external onlyOwner{\r\n        _transferOperatorRole(operatorAddr);\r\n    }\r\n\r\n    function getRouter() public view returns(address){\r\n        address result = router;\r\n        return result;\r\n    }\r\n    function getOwner() public view returns(address){\r\n        address result = owner;\r\n        return result;\r\n    }\r\n    function getController() public view returns(address){\r\n        address result = controller;\r\n        return result;\r\n    }\r\n    function getRewardDistributor() public view returns(address){\r\n        address result = rewardDistributor;\r\n        return result;\r\n    }\r\n    function getOperator() public view returns(address){\r\n        address result = operator;\r\n        return result;\r\n    }\r\n\r\n    function getVRF() public view returns(address){\r\n        address result = VRFv2DirectFundingConsumer;\r\n        return result;\r\n    }\r\n\r\n    function getReserveAddress() public view returns(address){\r\n        address result = reserveAddress;\r\n        return result;\r\n    }\r\n\r\n\r\n}", "ABI": "[{\"inputs\":[],\"name\":\"getController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserveAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardDistributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVRF\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controllerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributorAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"routerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operatorAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"VRFv2DirectFundingConsumerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveAddr\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operatorAddr\",\"type\":\"address\"}],\"name\":\"setOperatorRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRouter\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVRF\",\"type\":\"address\"}],\"name\":\"setVRF\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"setrewardDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserveAddr\",\"type\":\"address\"}],\"name\":\"transferReserveAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RoleRegistry", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4b451fe22b689d4a684deb94e792fe174f696bfc5922c1665caafa8601d15f1b"}