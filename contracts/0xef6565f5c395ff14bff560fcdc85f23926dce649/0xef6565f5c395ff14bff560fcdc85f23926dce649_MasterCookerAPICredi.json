{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract MasterCookerAPICredits {\r\n    address public owner;\r\n    uint256 public creditRate; // wei per credit\r\n    mapping(string => uint256) public credits;\r\n\r\n    // Events\r\n    event APICreditsPurchased(string indexed user, uint256 amount, uint256 creditsBought);\r\n    event Withdrawn(address indexed owner, uint256 amount);\r\n    event CreditRateChanged(uint256 newRate);\r\n\r\n    constructor(uint256 _creditRate) {\r\n        owner = msg.sender;\r\n        creditRate = _creditRate;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can call this function.\");\r\n        _;\r\n    }\r\n\r\n    // ethAmount is an argument to avoid possibility of the contract owner front-running the user to change the creditRate\r\n    function buyCredits(string memory user, uint256 ethAmount, uint256 creditsToBuy) external payable {\r\n        require(msg.value > 0, \"You must send ETH to buy credits.\");\r\n        require(msg.value == ethAmount, \"ETH amount sent does not match the specified amount.\");\r\n        require(creditRate == (ethAmount / creditsToBuy), \"ethAmount and creditsToBuy mismatch with rate\");\r\n\r\n        credits[user] += creditsToBuy;\r\n\r\n        emit APICreditsPurchased(user, ethAmount, creditsToBuy);\r\n\r\n    }\r\n\r\n    function withdraw() external onlyOwner {\r\n        uint256 amount = address(this).balance;\r\n        payable(owner).transfer(amount);\r\n\r\n        emit Withdrawn(owner, amount);\r\n    }\r\n\r\n    function setCreditRate(uint256 newRate) external onlyOwner {\r\n        creditRate = newRate;\r\n        emit CreditRateChanged(newRate);\r\n    }\r\n\r\n    function getCreditBalance(string memory user) external view returns (uint256) {\r\n        return credits[user];\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_creditRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"user\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditsBought\",\"type\":\"uint256\"}],\"name\":\"APICreditsPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"CreditRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"user\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditsToBuy\",\"type\":\"uint256\"}],\"name\":\"buyCredits\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creditRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"credits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"user\",\"type\":\"string\"}],\"name\":\"getCreditBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setCreditRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MasterCookerAPICredits", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000001c866a678174", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://96b9b8799cb3a2c27d00bd7350fee79e7b845cc158d67e8d47a21975ff590db2"}