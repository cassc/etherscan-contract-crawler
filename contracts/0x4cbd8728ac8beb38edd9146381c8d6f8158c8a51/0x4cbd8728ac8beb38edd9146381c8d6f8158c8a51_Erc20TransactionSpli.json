{"SourceCode": "// SPDX-License-Identifier: Apache-2.0\r\n\r\npragma solidity 0.8.18;\r\n\r\n/**\r\n * @title A helper smart to see how event are handled when 1 transaction is split in several transfers to some ERC-20 contract.\r\n */\r\ncontract Erc20TransactionSplitter {\r\n\r\n    function splitTransfer(address erc20_contract_address, uint num_transfers, address to, uint tokens) public payable {\r\n        require(num_transfers > 0, \"number of transfers must be positive\");\r\n        for (uint i=0; i < num_transfers; i++) \r\n        {\r\n            (bool success, ) = erc20_contract_address.call(abi.encodeWithSignature(\"transfer(address,uint256)\", to, tokens/num_transfers));\r\n            require(success);\r\n        }\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20_contract_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"num_transfers\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"splitTransfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "Erc20TransactionSplitter", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://099f6a6eb3b592b03fec0c521a39875fe916813f7ddcd1b737289f1c26c90a80"}