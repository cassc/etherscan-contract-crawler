{"SourceCode": "//SPDX-License-Identifier: MIT\r\n\r\n\r\n\r\n\r\npragma solidity 0.8.9;\r\n\r\n\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\n\r\ncontract P2EGameContractV1 {\r\n    address public TokenAdr = 0x74EBd915BA8b7C85aeB5dED74306cf255eA403D7;\r\n   \r\n   \r\n\r\n    address public ceoAddress = 0xd930F9AE8FB1616C372A9e875b0bc4e452f28F1B;\r\n    address public smartContractAddress;\r\n\r\n    mapping(address => uint256) public playerToken;\r\n    \r\n\r\n\r\n\r\n \r\n    constructor() {\r\n        smartContractAddress = address(this);\r\n      \r\n    }\r\n \r\n   \r\n\r\n   \r\n\r\n       function setToken(address _adr, uint256 amount) public {\r\n        require(msg.sender == ceoAddress, \"Error: Caller Must be Ownable!!\");\r\n        playerToken[_adr] = amount;\r\n    }\r\n   \r\n       \r\n\r\n    \r\nfunction depositToken(uint256 amount) public  {\r\n      \r\n        ERC20(TokenAdr).transferFrom(msg.sender, smartContractAddress, amount);\r\n    }\r\n\r\n\r\n\r\n\r\n    function changeSmartContract(address smartContract) public {\r\n        require(msg.sender == ceoAddress, \"Error: Caller Must be Ownable!!\");\r\n        smartContractAddress = smartContract;\r\n    }\r\n\r\n\r\n    \r\n    function withdrawToken(uint256 amount) public {\r\n        require(\r\n            playerToken[msg.sender] >= amount,\r\n            \"Cannot Withdraw more then your Balance!!\"\r\n        );\r\n\r\n        address account = msg.sender;\r\n\r\n      \r\n\r\n        \r\n\r\n        ERC20(TokenAdr).transfer(account, amount);\r\n\r\n        playerToken[msg.sender] = 0;\r\n    }\r\n    function changeCeo(address _adr) public {\r\n        require(msg.sender == ceoAddress, \"Error: Caller Must be Ownable!!\");\r\n\r\n        ceoAddress = _adr;\r\n    }\r\n\r\n function emergencyWithdraw() public {\r\n        require(msg.sender == ceoAddress, \"Error: Caller Must be Ownable!!\");\r\n        (bool os, ) = payable(msg.sender).call{value: address(this).balance}(\r\n            \"\"\r\n        );\r\n        require(os);\r\n    }\r\n     function emergencyWithdrawToken(address _adr) public {\r\n        require(msg.sender == ceoAddress, \"Error: Caller Must be Ownable!!\");\r\n        ERC20(_adr).transfer(ceoAddress, ERC20(_adr).balanceOf(address(this)));\r\n    } \r\n \r\n\r\n    \r\n}\r\ninterface ERC20 {\r\n    function balanceOf(address _owner) external view returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) external returns (bool success);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"TokenAdr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adr\",\"type\":\"address\"}],\"name\":\"changeCeo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartContract\",\"type\":\"address\"}],\"name\":\"changeSmartContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adr\",\"type\":\"address\"}],\"name\":\"emergencyWithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"smartContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "P2EGameContractV1", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2bd9aadb20420b79776a7033c0f15da04d69683f92e2a46245b492f064491dcb"}