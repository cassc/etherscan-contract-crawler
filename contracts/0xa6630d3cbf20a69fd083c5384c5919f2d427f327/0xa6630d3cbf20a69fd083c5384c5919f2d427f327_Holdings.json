{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.18;\r\ninterface IERC20 {\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n    function balanceOf(address owner) external view returns (uint);\r\n}\r\ncontract Holdings {\r\n     modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    address public owner;\r\n    constructor() payable {\r\n        owner = msg.sender;\r\n    }\r\n    function withdraw(address erc20, uint256 amount) public onlyOwner {\r\n        if (erc20 == address(0x0)) {\r\n            uint256 balance = address(this).balance;\r\n            require(balance > 0, \"No Ether to withdraw\");\r\n            payable(msg.sender).transfer(amount);\r\n        }\r\n        else {\r\n            uint256 balance = IERC20(erc20).balanceOf(address(this));\r\n            require(balance > 0, \"No erc to withdraw\");\r\n            IERC20(erc20).transfer(msg.sender, amount);\r\n        }\r\n    }\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Holdings", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://d74b202d8b9407f3bb376709944d3a30e4e60a781514df0d4475d6d584686aeb"}