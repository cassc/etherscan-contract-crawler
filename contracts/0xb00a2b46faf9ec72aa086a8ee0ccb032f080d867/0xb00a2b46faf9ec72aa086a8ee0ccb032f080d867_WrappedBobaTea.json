{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Wboba.sol\": {\r\n      \"content\": \"//  ______        _              _______\\n// (____  \\\\      | |            (_______)\\n//  ____)  ) ___ | | _   ____    _       ____ ____\\n// |  __  ( / _ \\\\| || \\\\ / _  |  | |     / _  ) _  |\\n// | |__)  ) |_| | |_) | ( | |  | |____( (/ ( ( | |\\n// |______/ \\\\___/|____/ \\\\_||_|   \\\\______)____)_||_|\\n\\n// https://t.me/bobateaxyz/\\n// https://www.bobatea.xyz/\\n\\npragma solidity ^0.8.19;\\n\\ninterface Callable {\\n  function tokenCallback(\\n    address _from,\\n    uint256 _tokens,\\n    bytes calldata _data\\n  ) external returns (bool);\\n}\\n\\ninterface IBobaTea {\\n  function balanceOf(address) external view returns (uint256);\\n  function allowance(address, address) external view returns (uint256);\\n  function isApprovedForAll(address, address) external view returns (bool);\\n  function transfer(address _to, uint256 _tokens) external returns (bool);\\n  function transferFrom(\\n    address _from,\\n    address _to,\\n    uint256 _tokens\\n  ) external returns (bool);\\n}\\n\\ncontract WrappedBobaTea {\\n  uint256 private constant UINT_MAX = type(uint256).max;\\n\\n  IBobaTea public constant bobaTea =\\n    IBobaTea(0xf57bf1E5eaE65AD7Bbd4196635fbAF0805c074DE); // need to change address\\n\\n  string public constant name = \\\"Wrapped Boba Tea\\\";\\n  string public constant symbol = \\\"wBOBA\\\";\\n  uint8 public constant decimals = 18;\\n\\n  struct User {\\n    uint256 balance;\\n    mapping(address => uint256) allowance;\\n  }\\n\\n  struct Info {\\n    mapping(address => User) users;\\n  }\\n  Info private info;\\n\\n  event Transfer(address indexed from, address indexed to, uint256 tokens);\\n  event Approval(\\n    address indexed owner,\\n    address indexed spender,\\n    uint256 tokens\\n  );\\n  event Wrap(address indexed owner, uint256 tokens);\\n  event Unwrap(address indexed owner, uint256 tokens);\\n\\n  function wrap(uint256 _tokensOrTokenId) external {\\n    uint256 _balanceBefore = bobaTea.balanceOf(address(this));\\n    bobaTea.transferFrom(msg.sender, address(this), _tokensOrTokenId);\\n    uint256 _wrapped = bobaTea.balanceOf(address(this)) - _balanceBefore;\\n    require(_wrapped > 0);\\n    info.users[msg.sender].balance += _wrapped * 1e18;\\n    emit Transfer(address(0x0), msg.sender, _wrapped * 1e18);\\n    emit Wrap(msg.sender, _wrapped);\\n  }\\n\\n  function unwrap(uint256 _tokens) external {\\n    require(_tokens > 0);\\n    require(balanceOf(msg.sender) >= _tokens * 1e18);\\n    info.users[msg.sender].balance -= _tokens * 1e18;\\n    bobaTea.transfer(msg.sender, _tokens);\\n    emit Transfer(msg.sender, address(0x0), _tokens * 1e18);\\n    emit Unwrap(msg.sender, _tokens);\\n  }\\n\\n  function transfer(address _to, uint256 _tokens) external returns (bool) {\\n    return _transfer(msg.sender, _to, _tokens);\\n  }\\n\\n  function approve(address _spender, uint256 _tokens) external returns (bool) {\\n    info.users[msg.sender].allowance[_spender] = _tokens;\\n    emit Approval(msg.sender, _spender, _tokens);\\n    return true;\\n  }\\n\\n  function transferFrom(\\n    address _from,\\n    address _to,\\n    uint256 _tokens\\n  ) external returns (bool) {\\n    uint256 _allowance = allowance(_from, msg.sender);\\n    require(_allowance >= _tokens);\\n    if (_allowance != UINT_MAX) {\\n      info.users[_from].allowance[msg.sender] -= _tokens;\\n    }\\n    return _transfer(_from, _to, _tokens);\\n  }\\n\\n  function transferAndCall(\\n    address _to,\\n    uint256 _tokens,\\n    bytes calldata _data\\n  ) external returns (bool) {\\n    _transfer(msg.sender, _to, _tokens);\\n    uint32 _size;\\n    assembly {\\n      _size := extcodesize(_to)\\n    }\\n    if (_size > 0) {\\n      require(Callable(_to).tokenCallback(msg.sender, _tokens, _data));\\n    }\\n    return true;\\n  }\\n\\n  function totalSupply() public view returns (uint256) {\\n    return bobaTea.balanceOf(address(this)) * 1e18;\\n  }\\n\\n  function balanceOf(address _user) public view returns (uint256) {\\n    return info.users[_user].balance;\\n  }\\n\\n  function allowance(\\n    address _user,\\n    address _spender\\n  ) public view returns (uint256) {\\n    return info.users[_user].allowance[_spender];\\n  }\\n\\n  function allInfoFor(\\n    address _user\\n  )\\n    external\\n    view\\n    returns (\\n      uint256 totalTokens,\\n      uint256 userBOBAs,\\n      uint256 userAllowance,\\n      bool userApprovedForAll,\\n      uint256 userBalance\\n    )\\n  {\\n    totalTokens = totalSupply();\\n    userBOBAs = bobaTea.balanceOf(_user);\\n    userAllowance = bobaTea.allowance(_user, address(this));\\n    userApprovedForAll = bobaTea.isApprovedForAll(_user, address(this));\\n    userBalance = balanceOf(_user);\\n  }\\n\\n  function _transfer(\\n    address _from,\\n    address _to,\\n    uint256 _tokens\\n  ) internal returns (bool) {\\n    unchecked {\\n      require(balanceOf(_from) >= _tokens);\\n      info.users[_from].balance -= _tokens;\\n      info.users[_to].balance += _tokens;\\n      emit Transfer(_from, _to, _tokens);\\n      return true;\\n    }\\n  }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Unwrap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Wrap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"allInfoFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBOBAs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userAllowance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"userApprovedForAll\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bobaTea\",\"outputs\":[{\"internalType\":\"contract IBobaTea\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensOrTokenId\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "WrappedBobaTea", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}