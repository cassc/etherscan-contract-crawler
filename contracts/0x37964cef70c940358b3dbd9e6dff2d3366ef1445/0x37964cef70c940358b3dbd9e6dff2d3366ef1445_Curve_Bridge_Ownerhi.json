{"SourceCode": "# @version 0.3.10\r\n\"\"\"\r\n@title Curve Bridge Ownerhip Proxy\r\n@license MIT\r\n@author Curve Finance\r\n\"\"\"\r\n\r\ninterface Bridge:\r\n    def set_delay(_delay: uint256): nonpayable\r\n    def set_limit(_limit: uint256): nonpayable\r\n    def set_killed(_is_killed: bool): nonpayable\r\n    def commit_transfer_ownership(addr: address): nonpayable\r\n    def accept_transfer_ownership(): nonpayable\r\n\r\n\r\nevent CommitAdmins:\r\n    ownership_admin: address\r\n    emergency_admin: address\r\n\r\nevent ApplyAdmins:\r\n    ownership_admin: address\r\n    emergency_admin: address\r\n\r\n\r\nownership_admin: public(address)\r\nemergency_admin: public(address)\r\n\r\nfuture_ownership_admin: public(address)\r\nfuture_emergency_admin: public(address)\r\n\r\n\r\n@external\r\ndef __init__(_ownership_admin: address, _emergency_admin: address):\r\n    self.ownership_admin = _ownership_admin\r\n    self.emergency_admin = _emergency_admin\r\n\r\n\r\n@external\r\n@nonreentrant('lock')\r\ndef set_killed(_bridge: address, _is_killed: bool):\r\n    assert msg.sender in [self.ownership_admin, self.emergency_admin], \"Access denied\"\r\n\r\n    Bridge(_bridge).set_killed(_is_killed)\r\n\r\n\r\n@external\r\n@nonreentrant('lock')\r\ndef set_limit(_bridge: address, _limit: uint256):\r\n    assert msg.sender in [self.ownership_admin], \"Access denied\"\r\n\r\n    Bridge(_bridge).set_limit(_limit)\r\n\r\n\r\n@external\r\n@nonreentrant('lock')\r\ndef set_delay(_bridge: address, _delay: uint256):\r\n    assert msg.sender in [self.ownership_admin], \"Access denied\"\r\n\r\n    Bridge(_bridge).set_delay(_delay)\r\n\r\n\r\n@external\r\ndef commit_set_admins(_o_admin: address, _e_admin: address):\r\n    \"\"\"\r\n    @notice Set ownership admin to `_o_admin` and emergency admin to `_e_admin`\r\n    @param _o_admin Ownership admin\r\n    @param _e_admin Emergency admin\r\n    \"\"\"\r\n    assert msg.sender == self.ownership_admin, \"Access denied\"\r\n\r\n    self.future_ownership_admin = _o_admin\r\n    self.future_emergency_admin = _e_admin\r\n\r\n    log CommitAdmins(_o_admin, _e_admin)\r\n\r\n\r\n@external\r\ndef accept_set_admins():\r\n    \"\"\"\r\n    @notice Apply the effects of `commit_set_admins`\r\n    @dev Only callable by the new owner admin\r\n    \"\"\"\r\n    assert msg.sender == self.future_ownership_admin, \"Access denied\"\r\n\r\n    e_admin: address = self.future_emergency_admin\r\n    self.ownership_admin = msg.sender\r\n    self.emergency_admin = e_admin\r\n\r\n    log ApplyAdmins(msg.sender, e_admin)\r\n\r\n\r\n@external\r\n@nonreentrant('lock')\r\ndef commit_transfer_ownership(_bridge: address, new_owner: address):\r\n    assert msg.sender == self.ownership_admin, \"Access denied\"\r\n    Bridge(_bridge).commit_transfer_ownership(new_owner)\r\n\r\n\r\n@external\r\n@nonreentrant('lock')\r\ndef accept_transfer_ownership(_bridge: address):\r\n    Bridge(_bridge).accept_transfer_ownership()", "ABI": "[{\"name\":\"CommitAdmins\",\"inputs\":[{\"name\":\"ownership_admin\",\"type\":\"address\",\"indexed\":false},{\"name\":\"emergency_admin\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"ApplyAdmins\",\"inputs\":[{\"name\":\"ownership_admin\",\"type\":\"address\",\"indexed\":false},{\"name\":\"emergency_admin\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"_ownership_admin\",\"type\":\"address\"},{\"name\":\"_emergency_admin\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_killed\",\"inputs\":[{\"name\":\"_bridge\",\"type\":\"address\"},{\"name\":\"_is_killed\",\"type\":\"bool\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_limit\",\"inputs\":[{\"name\":\"_bridge\",\"type\":\"address\"},{\"name\":\"_limit\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_delay\",\"inputs\":[{\"name\":\"_bridge\",\"type\":\"address\"},{\"name\":\"_delay\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"commit_set_admins\",\"inputs\":[{\"name\":\"_o_admin\",\"type\":\"address\"},{\"name\":\"_e_admin\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"accept_set_admins\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"commit_transfer_ownership\",\"inputs\":[{\"name\":\"_bridge\",\"type\":\"address\"},{\"name\":\"new_owner\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"accept_transfer_ownership\",\"inputs\":[{\"name\":\"_bridge\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"ownership_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"emergency_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_ownership_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_emergency_admin\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]}]", "ContractName": "Curve Bridge Ownerhip Proxy", "CompilerVersion": "vyper:0.3.10", "OptimizationUsed": "0", "Runs": "0", "ConstructorArguments": "00000000000000000000000040907540d8a6c65c637785e8f8b742ae6b0b9968000000000000000000000000467947ee34af926cf1dcac093870f613c96b1e0c", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": ""}