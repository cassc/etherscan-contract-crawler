{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.20;\r\n\r\ninterface IZ3 {\r\n    function setFeeExempt(address _addr, bool _value) external;\r\n\r\n    function setFeeReceivers(address _marketingReceiver, address _treasuryReceiver) external;\r\n\r\n    function setFees(uint256 _liquidityFee, uint256 _marketingFee, uint256 _treasuryFee) external;\r\n\r\n    function rescueToken(address tokenAddress, uint256 tokens, address destination) external returns (bool success);\r\n\r\n    function setNextRebase(uint256 _nextRebase) external;\r\n\r\n    function transferOwnership(address newOwner) external;\r\n\r\n    function manualRebase() external;\r\n\r\n    function nextRebase() external view returns (uint256);\r\n\r\n    function shouldRebase() external view returns (bool);\r\n\r\n    function rewardYield() external view returns (uint256);\r\n\r\n    function rewardYieldDenominator() external view returns (uint256);\r\n\r\n    function getSupplyDeltaOnNextRebase() external view returns (uint256);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipRenounced(address indexed previousOwner);\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == _owner, \"Not owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipRenounced(_owner);\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract Z3Owner is Ownable {\r\n    mapping (address => bool) public isAuthorized;\r\n    IZ3 public immutable z3Token;\r\n\r\n    constructor(address _z3Token){\r\n        isAuthorized[msg.sender] = true;\r\n        isAuthorized[0x14d064f5BceA5808660Dd39868172A7031B38442] = true;\r\n        z3Token = IZ3(_z3Token);\r\n    }\r\n\r\n    modifier onlyAuthorized() {\r\n        require(isAuthorized[msg.sender], \"Not Authorized\");\r\n        _;\r\n    }\r\n\r\n    function setAuthorized(address _addr, bool _authorized) external onlyOwner {\r\n        isAuthorized[_addr] = _authorized;\r\n    }\r\n\r\n    function setFeeExempt(address _addr, bool _value) external onlyOwner {\r\n        z3Token.setFeeExempt(_addr,_value);\r\n    }\r\n\r\n    function setFeeReceivers(address _marketingReceiver, address _treasuryReceiver) external onlyOwner {\r\n        z3Token.setFeeReceivers(_marketingReceiver, _treasuryReceiver);\r\n    }\r\n\r\n    function setFees(uint256 _liquidityFee, uint256 _marketingFee, uint256 _treasuryFee) external onlyOwner {\r\n        z3Token.setFees(_liquidityFee, _marketingFee, _treasuryFee);\r\n    }\r\n\r\n    function rescueToken(address tokenAddress, uint256 tokens, address destination) external onlyOwner returns (bool success) {\r\n        success = z3Token.rescueToken(tokenAddress, tokens, destination);\r\n    }\r\n\r\n    function setNextRebase(uint256 _nextRebase) external onlyAuthorized {\r\n        z3Token.setNextRebase(_nextRebase);\r\n    }\r\n\r\n    function manualRebase() external {\r\n        z3Token.manualRebase();\r\n    }\r\n\r\n    function transferZ3Ownership(address newOwner) external onlyOwner {\r\n        z3Token.transferOwnership(newOwner);\r\n    }\r\n\r\n    function nextRebase() external view returns (uint256){\r\n        return z3Token.nextRebase();\r\n    }\r\n\r\n    function rewardYieldDenominator() external view returns (uint256){\r\n        return z3Token.rewardYieldDenominator();\r\n    }\r\n\r\n    function rewardYield() external view returns (uint256){\r\n        return z3Token.rewardYield();\r\n    }\r\n\r\n    function shouldRebase() external view returns (bool){\r\n        return z3Token.shouldRebase();\r\n    }\r\n\r\n    function getSupplyDeltaOnNextRebase() external view returns (uint256){\r\n        return z3Token.getSupplyDeltaOnNextRebase();\r\n    }\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n        return z3Token.totalSupply();\r\n    }\r\n\r\n    function decimals() external view returns (uint8) {\r\n        return z3Token.decimals();\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_z3Token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupplyDeltaOnNextRebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualRebase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextRebase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"rescueToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardYieldDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_authorized\",\"type\":\"bool\"}],\"name\":\"setAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setFeeExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketingReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryReceiver\",\"type\":\"address\"}],\"name\":\"setFeeReceivers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_treasuryFee\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nextRebase\",\"type\":\"uint256\"}],\"name\":\"setNextRebase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldRebase\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferZ3Ownership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"z3Token\",\"outputs\":[{\"internalType\":\"contract IZ3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Z3Owner", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000050eec6d765792dcfb0913c8403ef2a12e1b861a6", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f65d488d8a294bcadc313bcbc76e8700776df7849fdd079aa25d29cea19690ff"}