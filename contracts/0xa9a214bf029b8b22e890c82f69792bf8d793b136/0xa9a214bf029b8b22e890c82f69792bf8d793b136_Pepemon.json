{"SourceCode": "/*\r\n\r\nWeb: https://pepemon.tech/\r\nTG: https://t.me/Pepemon_erc20\r\nX : https://twitter.com/PepemonERC20\r\n\r\n*/\r\n/**\r\n...................................................................................................................................:^^................\r\n................................................................................................................................^?5PPPPY!:............\r\n............................................................................................................................:7YGG5J7777J5P5?^.........\r\n.........................................................................................................................^?5GPJ7!!77777!!7?YP5J~......\r\n......................................................................................................................~JPG5?7!!777777!!!77??J5B&BG#?..\r\nPJ~:..............................................................................................................:!YPPY?7!!777!!!77?Y5GB#&@@@@@@@#5J7\r\n@@@#P?^........................................................................................................^75GPJ7!!7!!!77?Y5G#&@@@@@@@@@@@@@P~^~7\r\n@@@@@@&BY~..................................................................................................~?PG5J77!!!7?J5GB#@@@@@@@@@@@@@@@@@&J^^^^:\r\n@@@@@@@@@@BY~...........................................................................................^7YPPY?7!77?J5PGGPY?P@@@@@@@@@@@@@@@@@B7^^^^^^\r\n@@@@@@@@@@@@@BJ~....................................................................................:!JPP5J7!!7?YPGGPY?!^^::7@@@@@@@@@@@@@@@@P~:^^^^^^\r\n@@@@@@@@@@@@@@@@G?:..............................................................................^?5PPY?7!7?YPBBPJ!^:::^^^^^!&@@@@@@@@@@@@@#J^:^^^^^^^\r\n@@@@@@@@@@@@@@@@@@#Y~........................................................................:~JPP5?7!!7JPBBPJ!^::^^^^^^^^^^~&@@@@@@@@@@@@G!:^^^^^^^^^\r\n&@@@@@@@@@G?!7J5G#@@@P!......................................................................P#Y77!!7YGBG57^::^^^^^^^^^^^^^:!&@@@@@@@@@@#J^:^^^^^^^^^^\r\n5@@@@@@@@P!!^:::^~7YG&@B7....................................................................:YGJ7YGBGJ!^:^^^^^^^^^^^^^^^^^:J@@@@@@@@@&5~:^^^^^^^^^^^^\r\n^&@@@@@@G!!!^^^^^^::^~?G&B7....................................................................?&#GJ!^:^^^^^^^^^^^^^^^^^^^^^G@@@@@@@@G7::^^^^^^^^^^^^^\r\n.Y@@@@@&?!77~^^^^^^^^^::~Y#G!...............................................................:?GBY!^:^^^^^^^^^^^^^^^^^^^^^^:!&@@@@@@BJ~^^^^^^^^^^^^^^^^\r\n.:#@@@@P!777!^^^^^^^^^^^^:^?BP^...........................................................^YBG?^:^^^^^^^^^^^^^^^^^^^^^^^^^:P@@@@@#Y7!!!!!!~^^^^^^^^^^^\r\n..?@@@@Y!7777~^^^^^^^^^^^^^:^JBJ........................................................~PB5!^:^^^^^^^^^^^^^^^^^^^^^^^^^^^7&@@@#57!!7777777!!~~^^^^^^^\r\n...P@@@J!7777!^^^^^^^^^^^^^^^:~5G~....................................................!PBY~:^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^G@@&P7!!777777777777!!!~^^^^\r\n...^&@@Y!77777~^^^^^^^^^^^^^^^^:7B?.................................................~PBJ~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^5@&P?!!777777777777777777!!~^\r\n....7@@5!77777!^^^^^^^^^^^^^^^^^:~G5..............................................:YBY~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^!Y&P?!!7777777777777777777777!!\r\n.....J@B7777777!^^^^^^^^^^^^^^^^^:^PP:...........................................7BP!^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^!JPP?!!77777777777777777777??JJJJ\r\n......Y@Y!777777~^^^^^^^^^^^^^^^^^^^5G:........:^!7JY555P5555555555555YYJ?7!~^::5B?^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~!JPP?!777777777777777??JYYYYJ?7!~^:\r\n.......5&Y7777777~^^^^^^^^^^^^^^^^^^^PP..:~7JPGGGP5J?7!!~~^^^^^^^~~!77??JJYY55P#P!^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~7YP5?!777777777?JJYYYYJ?7!~^:........\r\n........Y&Y!77777!~^^^^^^^^^^^^^^^^^^^GP5GG5Y?!~^^^::^^^^^^^^^^^^^^^^^^~~!!77JBJ~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~?5PY7!77777777YB5?7!~::................\r\n.........7#P777777!^^^^^^^^^^^^^^^^^^^!BY!~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^~!Y?~^^^^^^^^^^^^^^^^^^^^^^^^^^^~7YG#BYJ77777777777PG7.....................\r\n..........^GB?77777!~^^^^^^^^^^^^^^^~!!?7!!!~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~^^^^^^^^^^^^^^^^^^^^^^^^^^!J5YP###BBGPYJ??77777!?GP^...................\r\n............?BP777777!^^^^^^^^^^^^^!!77!!~^^::^^^^^^^^^^^^^^^^^^^^^:::::::^^^^^^^^^^^^^^^^^^^^^^^^^^^^!J557:...~Y##BBBBGP5YJ??7775#~..................\r\n.............:YB577777!~^^^^^^^^^!77!!~~JPPGPJ~:^^^^^^^^^^^^^^^^^^^7YPP5J!:^^^^^^^^^^^^^^^^^^^^^^^^!?P#BGY??7~^.:##BBBBBBBBGGP5Y?YJ...................\r\n...............^5B5?7777!^^^^^^~!7!~^^7#@P:!@@#!:^^^^^^^^^^^^^^^^!B&?^?@@&5^^^^^^^^^^^^^^^^^^^^^~!7JG##BBGP5YY55P&##BBBBBBBBBBBGP?....................\r\n.................^JGGY?77!~^^~!7!~^^^:P@@#G#@@@7:^^^^~!^^^^^^^^^:J@@5YG@@@@!:^^^^^^^^^^^^^^^~!!!77JGB??5GB#BGPY?7?YG####BBBBBB#BP^....................\r\n....................Y&Y?777!!7!~^^^^^:~P#@@@#G7::::^^77^::::::^^^^5#@@@@&BJ^^^^^^^^^^^^^^^^^^~77JYY?J?!!!?JPB#BBPJ7?5GB#&##BBBBB##GY7^................\r\n.....................5G77777!~^^^^^^^~!77!!!^7J???JY555Y?7?7??J~^^:^!7JJ7^:^^^^^^^^^^^^^^^^^^^^!77!!!7777!!!7JPB##BY77JPB#&&#BBBBBB###GJ!:............\r\n.....................^#??J7!~^^^^^^^~J5Y?^:^^^~~YP?7777?YPY!!~^^^^^^:!YYY?^^^^^^^^^^^^^^^^^^^^^^~!7777777777!!!7JPGB?!!!?5B#&&##BBBBBB##&#~...........\r\n......................PB5!~~^^^^^^^^^~!~^^^^^^^^^7JJJJJ?!^::^^^^^^^^^~7??!^^^^^^^^^^^^^^^^^^^^^^^^~!77777777777!!!777777!!75B##G##BBBBBB&5............\r\n.....................:BP~^~^^^^^^^^^^^^^^^^^::^^^:^^^^^^^^^:::::^^^^^^:^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~!77777777777777777777!!7YGY7P##BBB&P.............\r\n....................^B5^^~~^^^^^^^^^^^:^^~!7?JY5PPGGGGGGGPP5YJ?7!~^^^::^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^!777777777777777777777!!!!!!?G&BB&5:............\r\n...................^#5^^^~~^^^^^^^^:^~?YPBB###BBBBBBBBBBB#@###&&&#BP5J?!~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~!7777777777777777777777777!!5##B#B?...........\r\n..................:#P^^^^~^^^^^^:^!YG&&&##BBBBBBBBBBBGGBB#@###BBBBBBB###BG5J!~^^^^^^^^^^^^^^^^^^^^^^^^^^^~7777777777777777777777777!!?B&BB&B^.........\r\n..................PB^^^^^~^^^^^!YB##GP55YYYYYYYYY5PPG#&#&#G555YYYYY555PPGBB##G5?~^^^^^^^^^^^^^^^^^^^^^^^^^~!7777777777777777777777777!7G&B&5:.........\r\n.................7@!:^^^^~^^^7P##G5JJJJJJJJJJJJJJJJJJ5&B5JJJJJJJJJJJJJJY5PGGGB##BP?~^^^^^^^^^^^^^^^^^^^^^^^~!7777777777777777777777777!7P@J...........\r\n.................#P:^^^^~~^!P#B5YJJJJJJJJJJJJJJJJJJJ5#PJJJJJJJJJJJJJJJJJJYY5PGGGBB#B57^^^^^^^^^^^^^^^^^^^^^^~77777777777777777777777777!7PP...........\r\n................7&!^^^^^^^?#B5YYYJJJJJJYYYJJJJJJJJJP#YJJJJJJJYYYYYYYYYYYYYYYY5PGGGGB##GJ~^^^^^^^^^^^^^^^^^^^^!7777777777777777777777777777G5..........\r\n................PG^^^^^7Y5GBPPPPPPP5PGBGGP5YJJJJJJY&5JJJY5PP5PPPGGBBBGGGGPPPGGGGBBBBBGB#BY~^^^^^^^^^^^^^^^^^^~!77777777777777777777777777!7#J.........\r\n................BJ:^^^Y#GPPPPPPPPPPPGPPPPPP5YJJJJJGBJJJYPPPPP555PPPPPPPPPPPPPPPGGPPGB##BB#B?^^^^^^^^^^^^^^^^^^!777777777777777777777777777!?#~........\r\n...............^#7^^^~B##G5YYYYYYYYYY5PGGP5YJJJJJBBYJJ5GPYY5PGGGPP5YYYYYYYYYYYYYY5PGGPPB###&P!^^^^^^^^^^^^^^^^~!777777777777777777777777777!5G........\r\n...............~#!^^^B#GPP5555555P&&&&##&@@BPPP5J&PJJPGYYPP5555Y5YP&@@&&&&@&#55PPPPPP55PB&BB#B?^^^^^^^^^^^^^^^~!77777777777777777777777777777#!.......\r\n...............?B~^^^7GBY^.     ^B&GB@@@GG@BJGGGG#GJYPJPP7.      ^B&GP#@@#5&@5   :!5#GGGBBGGG##J^^^^^^^^^^^^^^^!!777777777777777777777777777!5G.......\r\n...............PBJ^^^^7&G?:     Y@Y .B@@JJ@@^.JGP##JJJBY.        J@P  7@@B7B@@!!YPPYJJJY5PGGGG#&J^^^^^^^^:^~~!777!!7777777777777777777777777!?#^......\r\n..............:#PPP~^^J&Y5PY7~^:^G@BB@@@&&@#~^~Y#GBPPBB7~^.      :P&BB&@@@#&#BP5YJJ5PJJJJYPGGGG##?^^^^^:^?5PPPPPP57!!7777777777777777777777777#!......\r\n..............~#5YP5^~!5BPYY55PP55GBBGGGGGPP55P5GGB#5YY55P55YYJJJJJG#BBGP5YYJJYY5PGPYJJJJJY5GGGG##7^^^:7GP55YYYY5PGJ!777777777777777777777777!GJ......\r\n..............!#YYYG!~!!7YB#PPP55YJJJJJY55PPPGBP5YYPPGPGGPPPPPPPPPPPP555PPPPPGGP5YJJJJJJJJJY5GGGB&P~^:JB5YYYYYYYYY5B?!777777777777777777777777GY......\r\n..............^#5YYG?~!77!J&B5YJJJJJJJJJJJYPGPYJJJJJJJJYB#PYY555555555555YYYYJJJJJJJJJJJJJJJY5GGGB&?^7B5YYYYYYYYYYYGP!777777777777777777777777BJ......\r\n...............GPYYPJ~!775G55PGPP55YJJJJ5GG5YJJJJJJJJJJJJ5GG5YJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJY5GGG&P~GPYYYYYYYYYYYY5B7777777777777777777777777#5......\r\n...............7#5YG?~!?BPJJJJJYYYYJJJYGPYJJJJJJJJJJJJJJJJJYPPGPP55YYJJJJJJJJJJJJJJJJJJJY555YJYPGG#B?#5YYYYYYYYYYYY5B7!7777777777777777777777J&GJ.....\r\n................5#YJ^^!BPJJJJJJJJJJJJJYYJJJJJJJJJJJJJJJJJJJJJJJYY55PPP5YJJJJJJJJJJJJJJJJYPPPP5YYPGB#5#YYYYYYYYYYYYYGP!!7777777777777777777777BG7G?....\r\n.................GY:^!P##JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJYYY5PP5YY5GY5PG#PBYYYYYYYYYYYY5B?!77777777777777777777775&J?JB~...\r\n.................:GJ~BPJGB5JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJYY5PPGGPPPPPPGBY5JYY5G&YGPYYYYYYYYYY5BY!7777777777777777777777J&5?J?YP...\r\n................:75BYPG5YYGGPYYJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJYYY555PPPPGGPP55YYJYY55JJY&PGYJY5G&J!GP555YYYY5PGJ!7777777777777777777777Y&PJJ?77B!..\r\n..............^J5J!7P5?YPPYY5PPGGPP5555YYYYYYYYYYYYYYYYY555PPPGGPPPPP55YYYYYYYY55PPPPP5YYPGPYYJJJYB&7:~JPPPPPPPPJ7!!7777777777777777777775#5?J?777P5..\r\n............!YY!^^^^!YP?~G#P5YYYYYY5555PPPPPPPPPPPPPPPPP555YYYYJJJJYYY55PPPPPP55YYYYY5PGG5YJJYP5Y5#B~^^^^!7???7!!7?JJ777777777777!?7777JBBYJJ?7777YG..\r\n..........!YJ~^^^^^^^~75GBYY5PPPPPPP55555YYYYYYYYYYYYYYYY555PPPPPPPPP55YYYJJJYY5PPGGPP5YJJJY5GGGGB&J^^^^~~!!!777?J??777777777777!7J77?P#PJJJ?77777JB..\r\n........~J?~:^^^^^^^^^~!YBPYJJJJJYYY555555PPPPPPPPPPPPPP5555YYYYJJJJJJJYY5PPGGP55YYJJJJJJY5PGGGGG&B~^^~~!!777???7777!!!~~~~!7777!5JYPB#Y?JJ?777777JB..\r\n.....^7J?~:^^^^^^^^^^^^~!?5BGP5YYYYJJJJJJJJJJJJJJJJJJJJJJJJJJYYY555PPGGPP55YYJJJJJJJJJJY5PGGGGGG##7^^~!!77????7777!~~^^^^^^^!77!J#PJ~.7G5?77777777?B..\r\n...!5YY5J^^^^::^^^^^^^^^^~!?5#&BPPPGGGGGGGGGGGGGGGGGGGGGGGGGGPPPPP55YYJJJJJJJJJJJJJYY5PGGGGGGGG##?~~~!7?J??77777!~^^^^^^^^^^!777#?.....:YP777?7?5Y5B..\r\n...~^!5?~~~^~7Y?^^^^^^^^^^^~!7YBB5JJJJYYYYYYYYYYYYYYYYYYYYYJJJJJJJJJJJJJJJJJJJJJY5PGGGGGGGGGGB#B?~~7?JJ?77777!!~^^^^^^^^^^^~777GG........?PJYYYP!.:^..\r\n...^JY??YYY5PPBY^^^^^^^^^^^^~!77Y##PYJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJYYY5PGGGGGGGGGGGGB##577?JJ?777777!~~^^^^^^^^^^^^^!775#^.........7?..~J......\r\n..7Y?7!~?BBG5Y5J!!~~~~~^~~~~~!!7775###P5JJJJJJJJJJJJJJJJJJJJJJJJJJJYYY55PPGGGGGGGGGGGGGGGB##PJJYJ?7777777!~~^^^^^^^^^^^^^^!77Y#~......................\r\n..........!YPGP5J?77!!!!!!!!!!77?JYPYYGBBGPYJJJJJJJJJYYYYYY5555PPPPGGGGGGGGGGGGGGGGGGGB###G5P#?7777777!!~^^^^^^^^^^^^^^^^!775#~.......................\r\n.............^!?Y555YYJJJJJJYYY5Y?~....:^7YGGGGPPPPPPGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBB###GY7^.YG77777!!~~^^^^^^^^^^^^^^^^^!77PB^........................\r\n..................:~!7?JJJJ?7!^:............^75G##BBBGGGGGGGGGGGGGGGGGGGGGGGGGBB##B5?!:.....BY777!~^^^^^^^^^^^^^^^^^^^~!77GG:.........................\r\n*/\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.20;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval (address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract Pepemon is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    mapping (address => bool) private bots;\r\n    address payable private _taxWallet;\r\n    uint256 firstBlock;\r\n\r\n    uint256 private _initialBuyTax=25;\r\n    uint256 private _initialSellTax=25;\r\n    uint256 private _finalBuyTax=3;\r\n    uint256 private _finalSellTax=3;\r\n    uint256 private _reduceBuyTaxAt=20;\r\n    uint256 private _reduceSellTaxAt=20;\r\n    uint256 private _preventSwapBefore=20;\r\n    uint256 private _buyCount=0;\r\n\r\n    uint8 private constant _decimals = 9;\r\n    uint256 private constant _tTotal = 4269000000 * 10**_decimals;\r\n    string private constant _name = unicode\"Pepe Pokemon\";\r\n    string private constant _symbol = unicode\"Pepemon\";\r\n    uint256 public _maxTxAmount = 85380000 * 10**_decimals;\r\n    uint256 public _maxWalletSize = 85380000 * 10**_decimals;\r\n    uint256 public _taxSwapThreshold= 42690000 * 10**_decimals;\r\n    uint256 public _maxTaxSwap= 85380000 * 10**_decimals;\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address private uniswapV2Pair;\r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n\r\n    event MaxTxAmountUpdated(uint _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor () {\r\n\r\n        _taxWallet = payable(_msgSender());\r\n        _balances[_msgSender()] = _tTotal;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_taxWallet] = true;\r\n\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        uint256 taxAmount=0;\r\n        if (from != owner() && to != owner()) {\r\n            require(!bots[from] && !bots[to]);\r\n            taxAmount = amount.mul((_buyCount>_reduceBuyTaxAt)?_finalBuyTax:_initialBuyTax).div(100);\r\n\r\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\r\n                require(amount <= _maxTxAmount, \"Exceeds the _maxTxAmount.\");\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\r\n\r\n                if (firstBlock + 3  > block.number) {\r\n                    require(!isContract(to));\r\n                }\r\n                _buyCount++;\r\n            }\r\n\r\n            if (to != uniswapV2Pair && ! _isExcludedFromFee[to]) {\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\r\n            }\r\n\r\n            if(to == uniswapV2Pair && from!= address(this) ){\r\n                taxAmount = amount.mul((_buyCount>_reduceSellTaxAt)?_finalSellTax:_initialSellTax).div(100);\r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (!inSwap && to   == uniswapV2Pair && swapEnabled && contractTokenBalance>_taxSwapThreshold && _buyCount>_preventSwapBefore) {\r\n                swapTokensForEth(min(amount,min(contractTokenBalance,_maxTaxSwap)));\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if(contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(taxAmount>0){\r\n          _balances[address(this)]=_balances[address(this)].add(taxAmount);\r\n          emit Transfer(from, address(this),taxAmount);\r\n        }\r\n        _balances[from]=_balances[from].sub(amount);\r\n        _balances[to]=_balances[to].add(amount.sub(taxAmount));\r\n        emit Transfer(from, to, amount.sub(taxAmount));\r\n    }\r\n\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256){\r\n      return (a>b)?b:a;\r\n    }\r\n\r\n    function isContract(address account) private view returns (bool) {\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }\r\n\r\n    function sendETHToFee(uint256 amount) private {\r\n        _taxWallet.transfer(amount);\r\n    }\r\n\r\n    function addBots(address[] memory bots_) public onlyOwner {\r\n        for (uint i = 0; i < bots_.length; i++) {\r\n            bots[bots_[i]] = true;\r\n        }\r\n    }\r\n\r\n    function delBots(address[] memory notbot) public onlyOwner {\r\n      for (uint i = 0; i < notbot.length; i++) {\r\n          bots[notbot[i]] = false;\r\n      }\r\n    }\r\n\r\n    function isBot(address a) public view returns (bool){\r\n      return bots[a];\r\n    }\r\n\r\n    function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n        firstBlock = block.number;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"bots_\",\"type\":\"address[]\"}],\"name\":\"addBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"notbot\",\"type\":\"address[]\"}],\"name\":\"delBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Pepemon", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2dea6fc4736f1ddada5a8f56a1244abc1fe4e732ea23cc8d318c1431d387e656"}