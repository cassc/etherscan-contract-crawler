{"SourceCode": "// SPDX-License-Identifier: MIT\r\n/*                                                    \r\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\r\n#    ,\u2584\u2593\u2584, \u2552\u2584\u2584\u2584\u2584  \u2584\u2584     \u2584\u2584   _\u2584\u2584\u2584, \u2552\u2584\u2584 \u2584\u2584***++++++++++++++++++++++*****************************#######################\r\n#    \u2588\u2588\"\u2588\u2588L\u2590\u2588\u258c\u2559\u2588\u2588 \u2588\u2588\u2310   \u250c\u2588\u2588\u258c  \u2588\u2588\"\u2588\u2588L\u2590\u2588\u258c\u2588\u2588+++++++++++++++++++++++++++++****************************#####**#############\r\n#    \u2559\u2580\u2588\u2588\u2584 \u2590\u2588\u2588\u2588\u2588\u258c \u2588\u2588\u2310   \u2588\u2588\u2588\u2588  \u2588\u2588    \u2590\u2588\u2588\u2588++++++++++++++==--:.:-:--=+++++********+++*****************#****#############\r\n#    \u2584\u2593_\u255f\u2588\u258c\u2590\u2588\u258c_\u2588\u2588 \u2588\u2588\u2592__ \u2588\u2588\u2588\u2588\u258c \u2588\u2588 \u2590\u2593\u2584\u2590\u2588\u258c\u2588\u2588++++++++==+==-=**=*+##+-=-:--=+++++++++++++++++***************###############\r\n#    \u2559\u2580\u2588\u2588\u2580 \u2559\u2580\u2580\u2580\u2580\" \u255a\u2580\u2580\u2580\u2580\u255d\u2580\"\u2514\u2580\u2580 \u2559\u2580\u2588\u2588\u2580 \u2559\u2580\u2580 \u2580\u2580++++++*#%%%%%%@%%%%%*#%#*===+=--++++++++++++++++***************#*############\r\n#####**#**************+++++++++++++++++++++=++*%%%%%%%%%%@%@@@@%%%*%**+=+=-=++++++++++++++++***************############\r\n####*##*************++++++++++++++++++++++++=#%%%%%%%###%%%%@@@@@@@@%#***%+=:=+++++++++++++++++++++++*******###*#######\r\n#####********+****+++++++++++++++++=========#%@%*-:......:::--=+*#@@@@@@@%++=:=++++++++++++++++++++++++*****###########\r\n####*************++++++++++++=============+#%%+:::...    ..::---=+*##*+@@@@#*-:=+====+++++++++++++++++++++******#*#####\r\n###********+++++++++++++==================#%#-:::.         ..:--=+**+.  *%@%#+-:=============+++++++++++++******#######\r\n##********++++++++++++===================#%*-:::.            .:--=**#*=  +%%%*=:-===========++++++++++++++********#####\r\n##********+++++++++==+==============---=*#*=::.               .:-=+*###=..:**+-.:===-======+++++++++++++++++*****##*###\r\n**********+++++++++==============-------##+:..                .:-=+*#####*=+*+.: =========+++++++++++++++++++*******###\r\n*********+++++++================-------=%+:                    :-=+***###%%%#=.: -=================+++++++++++*****##*#\r\n*********++++++=============-----------=*:..                    .-=+****#%@@#*=- :=================+++++++++++********#\r\n*********++++===+=========--------------+-:.                    .-=+##*##%@@#+++::=================++++++++++++++*****#\r\n*****++++++++==========-----------------=--:::.::+**-        .=#%%%%%%%%%%%@%=-+:-==================++++++++++++******#\r\n******++++++++=========-----------------=-::::     .-=-   =+*#-   :-*%@@@@@@%+-.:=====----===========++++++++++++******\r\n******++++++===========---------------:-:-::-++**-%###+   -##== ==#@%@@@@@@@#=- *+ --------=========++++++++++++++****#\r\n******++++++==========---------------:---=: -:.    .=     :##     ==*@@@@%%@*--@@%-===---==================+++++++*****\r\n*****+++++++========-=-------------::---:=.     :-: .     -##*. =+#%%%%@%#%*+=%@%%--======-================+++++++*****\r\n***++++++++==========---------------:---:=:               :#%#=.:--=+###*#%-++@@#+=========================+++++++****#\r\n***++++++==========----------------::::::=-.              -#%%*  ..:-=+*#%@+==@@*-=========================++++++++****\r\n***+++++=========--------------::::::::::=-:.             :####.   .:=*#%@@#==%%-=-=======-============++++++++++++****\r\n**+++++++========---------------:::::::::===-        :%..-#%%#%+    :=*%@@@#+-%:-----------------=======+++++++++++****\r\n*+++++++========---------::-----:::::::::==--:           =*#**#+=: .-*%@@@@#*=#--------------------=======+++++++++****\r\n*++++++++======---------::::::--:::::::::==::--            =+------=#@@@@@@#*:----------------------======+++++++++****\r\n*+++++++======---------::::---::::::...:.==:   .    : ==   +##**++=+%@@@@@@%#:-----::---------------========++++++++***\r\n*+++++++======----------::----:::::::...::+-:   =** .+**+*%%%%%%@@@#%#%%@@@@*:-:::::-------------------======+++++++***\r\n*++++++======----------:::::-:::::::::.:::-+=:  -#-:-.      -*@@@@##=#@@@@@@=---::::----------------=========+++++++***\r\n+++++++=====------------::-:::::::::::.::::-+=+=    .-::::=+#%@%###+#@@@@@@*-*:-::::::::-----------=========++++++++***\r\n++++++=======-----------:::::::::::::::::::::+--=:   ..=*#%%@%%%@@#@@@@@@@#%+%::-::::::--:::-------===========++++++***\r\n++++++=======-----------:-:::::::::::::::::..:+-:.       =*#*+#%#*%@@@@@@@@@%%*=:-:::::-:::::::----==========+++++++***\r\n+++++======---------::::::::::::.::::::......=%.:*=   :---=+*####%@@@@@@@@@@@@%%+.:::-:::--::::----==========+++++++***\r\n++++=======---------:::::::::.....::::::.....*%*  =%%##%**##%%@%@@@@@@@@@@@@@@%@@%+:::-:::::::::---==========++++++****\r\n++++======--------:::::::::..::::::::::..-#%#%#%:   +%%@@@@%@@@%@@@@@@@@@@@@@@@@@@@%@%*-..--------==========++++++++***\r\n+++=======-----------::::::.::::::..:-*%%####%###=    :-+*#%@@@@@@@@@@@@@@@@@@@@@@@@@@%#+-:   ----==========++++++++***\r\n+++======-----------:::::::::..:-+##%#######%%###*#+:.-+*%@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%**=-.   .-=========+++++++****\r\n++++=====----------:::::::::=#%%%%%#####*##%@#*****#@@@%%%%%%@@@@@@@@@@@@@@@@@@@@%%@%%%%%%%#*+=-.    -======+++++++****\r\n+++======----------::::-*%%%%%%%####****#%%@@###*#*---:=+%%%%%%@@@@@@@@@@@@@@@%@%%%%%#%%%%%%%##*+=-:.    ==+++++++*****\r\n++++====--------===+#%%%%%%%%#####****##%%%@%###%#+--=+#@@%%%%%@@@@@@@@@@@@@%%%%%%%%####%##%%%%%##**++=--..  .=++******\r\n++++====------*%%%%%%%%%%%%####******#%%#%@@###@@%=-+%@@@@@%%%%%@@%%%@@@@@@%%%%%%#%%#########%%%%%%%####**++=-:::==+++*\r\n######*******#%%%%%%%%%%%%%%%######%%%%%%%%%%%%@%%*#%%%%@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%%%%%%%\r\n\r\n                    WEB: https://www.blackelon.com\r\n                    TG: https://t.me/elonblacketh\r\n                    X: https://twitter.com/BlackElon_Eth\r\n*/\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20Metadata is IERC20 {\r\n    function name() external view returns (string memory);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this;\r\n        return msg.data;\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    uint256 private _totalSupply;\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(\r\n            currentAllowance >= amount,\r\n            \"ERC20: transfer amount exceeds allowance\"\r\n        );\r\n        _approve(sender, _msgSender(), currentAllowance - amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender] + addedValue\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(\r\n            currentAllowance >= subtractedValue,\r\n            \"ERC20: decreased allowance below zero\"\r\n        );\r\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n\r\n        return true;\r\n    }\r\n\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(\r\n            senderBalance >= amount,\r\n            \"ERC20: transfer amount exceeds balance\"\r\n        );\r\n        _balances[sender] = senderBalance - amount;\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        _balances[account] = accountBalance - amount;\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract BlackElon is ERC20 {\r\n    uint8 private immutable _decimals = 18;\r\n    uint256 private _totalSupply = 3141592653  * 10**18;\r\n\r\n    constructor() ERC20(\"Black Elon\", \"BLACK\") {\r\n        _mint(_msgSender(), _totalSupply);\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BlackElon", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://abe572e2e60e084e464bc6326889f9f6d90a75690151991f135d9c740c70516c"}