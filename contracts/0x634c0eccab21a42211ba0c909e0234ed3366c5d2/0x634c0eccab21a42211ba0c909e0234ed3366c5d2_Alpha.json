{"SourceCode": "/**\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u2876\u2836\u28e6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28fe\u280b\u28a0\u2800\u2819\u28f7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u28fe\u283f\u28e6\u2840\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u287f\u2801\u2800\u28ff\u2800\u2880\u2808\u28f7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f4\u281f\u2801\u2800\u2818\u28c7\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u287f\u2800\u2800\u2800\u28ff\u28c6\u2838\u28e6\u2808\u28bf\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28fe\u280f\u2880\u2854\u2840\u2800\u28b9\u2846\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u287f\u2800\u2800\u2800\u28f8\u28ff\u2839\u28c0\u28bf\u28c6\u2800\u283f\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u287e\u2803\u28a0\u285e\u28f0\u2847\u2840\u2838\u28c7\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u2801\u28a0\u2800\u2800\u28ff\u283b\u2844\u2809\u2818\u28ff\u2844\u2800\u2819\u28a6\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28f4\u281f\u2801\u2800\u287e\u28a0\u2807\u28f7\u2847\u2800\u28bf\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u2803\u2800\u28ff\u2800\u28b8\u28ff\u2840\u28bb\u2840\u2800\u2838\u28f7\u2800\u2800\u2800\u2819\u2836\u28e4\u28c0\u28c0\u28c0\u28c0\u28e0\u28f6\u281f\u2801\u2800\u2800\u28f8\u2807\u2800\u28a0\u28ef\u2847\u2800\u28b8\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28ff\u2800\u2800\u28ff\u28f4\u283e\u287f\u28f7\u2800\u2801\u2800\u2800\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2809\u2849\u2809\u2809\u2800\u2800\u2800\u2800\u28a0\u285f\u2800\u2800\u281a\u28f8\u28c1\u2800\u28b8\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f8\u2847\u2800\u2800\u283b\u28ff\u28c6\u28f7\u2808\u2837\u2800\u2800\u28b0\u280f\u2800\u28e4\u2800\u2800\u2800\u2800\u2800\u2800\u2839\u2844\u2800\u2800\u2800\u2800\u2830\u28fe\u2847\u2800\u2800\u28f8\u28bf\u2847\u2800\u28f8\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28ff\u28f7\u2800\u2800\u2800\u2839\u288d\u285b\u2800\u2880\u28c0\u28e4\u28cf\u2834\u281e\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fb\u2844\u2800\u2800\u2800\u2800\u2839\u28f7\u2840\u2808\u28e1\u28df\u28e0\u28fe\u28ff\u2844\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28cd\u2837\u2800\u2800\u2880\u28f4\u28d6\u286f\u282d\u2809\u2809\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2836\u28bf\u28ff\u28f6\u2800\u2800\u2800\u2800\u2808\u2819\u28b7\u28ff\u28db\u2849\u281e\u28b9\u28c7\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28f7\u28dd\u2836\u28e4\u28f4\u283f\u281f\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b6\u2824\u28c0\u28c0\u2800\u2800\u2800\u2800\u2800\u2819\u28e7\u2800\u2800\u2800\u2800\u2880\u28e0\u28b6\u2859\u28af\u2841\u2870\u28fe\u2847\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2874\u281f\u2801\u2809\u28f3\u28ff\u2837\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u2846\u2800\u2819\u2833\u2844\u2800\u2800\u2800\u2800\u28bb\u2800\u2800\u2800\u28b0\u281f\u2801\u28b8\u28c7\u2839\u28ff\u28ff\u28ef\u2824\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28e0\u28e4\u2836\u281b\u2889\u28c0\u28f4\u28f6\u28ef\u28cd\u28c1\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u28f8\u28e7\u2800\u2800\u2800\u2839\u28e6\u2840\u2800\u2800\u2808\u2847\u2800\u2880\u28b8\u2800\u2800\u28b8\u28ff\u28c4\u2858\u2837\u28c4\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u28c0\u2874\u289e\u28cb\u287d\u281e\u2800\u2800\u2889\u28fd\u283f\u289b\u286d\u2801\u2800\u2800\u28c0\u28c0\u28c0\u2840\u2800\u2800\u2800\u2880\u28e9\u283f\u283f\u282f\u2833\u2800\u2800\u2800\u28ff\u28f7\u28c4\u2800\u2800\u28ff\u2800\u28ff\u28ff\u2800\u2810\u2809\u281b\u2819\u28e7\u28d0\u28ae\u28f7\u2844\u2800\u2800\r\n\u2800\u2800\u28f4\u28ff\u2876\u281f\u2809\u2800\u2800\u2800\u28f0\u288f\u28e5\u281e\u280b\u2800\u2800\u2800\u2880\u28c0\u28ed\u287f\u282f\u28d7\u2836\u2806\u280b\u2834\u28e4\u28e4\u28e4\u28e4\u28e4\u28c0\u2800\u2801\u28f8\u28bf\u2844\u2800\u28b9\u2844\u28b9\u28fd\u28e4\u28fe\u28fb\u28ff\u2816\u283f\u28ff\u28ff\u287f\u28ff\u2844\u2800\r\n\u2800\u28b8\u28ff\u288f\u28e0\u2816\u2800\u2800\u2800\u2800\u28f1\u285f\u2881\u2860\u2826\u2800\u28e0\u28f6\u28eb\u283d\u2802\u2800\u2800\u2800\u2800\u2800\u28c0\u2800\u2808\u283b\u28ff\u2859\u28fe\u28ff\u28f7\u2846\u2800\u28f8\u2807\u2800\u2898\u28ff\u2800\u2819\u28ff\u28ff\u28ff\u2807\u28b0\u2800\u2809\u2839\u28f7\u28bd\u2847\u2800\r\n\u2880\u28ff\u28e7\u285e\u2881\u2800\u2800\u2800\u2800\u28b0\u285f\u28f4\u285f\u2801\u2800\u2870\u28ff\u289f\u28e1\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u28a6\u2840\u2800\u2808\u281b\u283e\u283f\u28ff\u28ff\u2800\u2801\u2800\u2884\u28fe\u28ff\u28f7\u28e4\u28fd\u280f\u2801\u28e4\u284e\u2800\u2800\u2800\u28ff\u28ff\u2847\u2800\r\n\u28b8\u28ff\u284f\u28f0\u2803\u2800\u2800\u2800\u2800\u28fe\u28ff\u28df\u2844\u2800\u2800\u28f0\u28ff\u281f\u28b1\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28b7\u28c4\u2840\u2800\u2800\u2800\u2800\u2809\u28a0\u2840\u2832\u28ff\u28ff\u285f\u280b\u2809\u2819\u2833\u28cc\u2819\u2817\u2810\u2800\u28a0\u28e7\u28ff\u2800\u2800\r\n\u28b8\u28ff\u28b1\u2803\u28b0\u2846\u2800\u2800\u2800\u2819\u28ff\u285f\u2880\u2874\u2800\u28bf\u28ff\u28f4\u280f\u2800\u2800\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u283b\u28ff\u28f6\u28b6\u2806\u2800\u2800\u28b8\u28ff\u2840\u2818\u28ff\u2841\u2800\u2800\u2800\u2800\u2808\u283b\u28e6\u2840\u2800\u28b8\u28ff\u2807\u2800\u2800\r\n\u28b8\u28ff\u284f\u2880\u28fe\u2800\u2800\u2800\u2800\u28b0\u28ff\u28c7\u28ff\u2800\u2800\u2838\u28ff\u28ff\u28c0\u2876\u28a0\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u281b\u2826\u2800\u2800\u2800\u2800\u28bf\u28f7\u2840\u28b9\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u283b\u28e4\u28ff\u280f\u2800\u2800\u2800\r\n\u2808\u28ff\u2847\u28b8\u2847\u2800\u2800\u2840\u2800\u2818\u28ff\u28ff\u284f\u28fc\u2800\u2800\u2808\u28ff\u28ff\u28e0\u287c\u2837\u2836\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u28b7\u2840\u283b\u28c6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u28a7\u2840\u2800\u2800\u2800\r\n\u2800\u2839\u28c7\u28ff\u28c7\u2800\u28b0\u2847\u2800\u2800\u2808\u28ff\u28e7\u28ff\u2847\u2800\u2800\u283b\u28ff\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u283b\u28e6\u2848\u2833\u2804\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2839\u28c6\u2800\u2800\r\n\u2800\u2800\u2838\u28cf\u28bf\u28c6\u28b8\u2847\u2800\u2800\u2800\u2818\u283b\u28ff\u28ff\u2800\u2880\u28f4\u280b\u2880\u28c0\u28c0\u28e0\u28c4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2819\u2826\u2844\u2800\u2880\u28e0\u2836\u2836\u2836\u2836\u2836\u28be\u28e7\u2840\r\n\u2800\u2800\u2800\u2808\u2818\u28bf\u28fe\u2847\u28b0\u2844\u2800\u2800\u2800\u2819\u28bb\u28e7\u287f\u28f1\u281e\u2809\u2801\u2800\u2800\u2800\u2800\u2809\u2832\u28c4\u2840\u2800\u2820\u28c4\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b0\u28ff\u2841\u2800\u2800\u2800\u2800\u2800\u2800\u28f8\u2847\r\n\u2800\u2800\u2800\u2800\u2800\u2808\u28bf\u28f7\u28f8\u2800\u2846\u2800\u2800\u2800\u2808\u28ff\u285f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u283f\u28c4\u28c0\u2808\u2809\u2833\u28b6\u28e4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u283b\u28ff\u28f6\u28fe\u28ff\u28ff\u28ff\u28ff\u287f\u2801\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u287f\u28ff\u2846\u28f7\u2840\u2800\u2800\u2800\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2809\u2819\u2832\u2826\u2800\u2809\u283b\u28f6\u28c4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u28c9\u28ff\u28bf\u28fb\u281f\u2801\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2839\u28f7\u28ff\u2847\u28ff\u28f6\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2819\u283f\u2836\u2826\u2824\u2824\u2834\u2836\u2836\u2812\u289a\u2857\u2809\u2809\u2801\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28bf\u28f7\u28ff\u2808\u28bf\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2810\u2836\u28a4\u28e4\u28c4\u28c0\u28c0\u28e0\u2864\u283e\u2807\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u283f\u2804\u2808\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2810\u28ce\u2809\u2809\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u28c4\u2818\u28e6\u287b\u28c6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2800\u2800\u28ff\u2807\u2800\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28ff\u28e6\u2848\u28bf\u28fe\u28f7\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f4\u28cf\u28c0\u2880\u28ff\u2800\u28fc\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2876\u2800\u2800\u2800\u2800\u28b9\u28ff\u285f\u28a6\u28fd\u28ee\u2849\u2841\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2810\u283f\u287f\u2885\u28fe\u28e3\u28fe\u2803\u2800\u2800\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2800\u2800\u2800\u2800\u2800\u28fc\u2803\u2800\u2800\u28f0\u2882\u28fe\u2808\u287f\u2800\u2808\u2809\u2819\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u283e\u28fb\u285f\u2801\u2800\u2880\u287c\u2801\u2800\u2800\u2800\u2800\u28c0\u2876\u2801\u2800\u2800\u2880\u28e0\u283e\u2801\u2800\u28e0\u287e\u28a1\u287e\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28e0\u28f4\u28eb\u28b6\u28c3\u2874\u280b\u2800\u2800\u2800\u28c0\u2864\u281e\u2809\u28c0\u28c0\u2824\u28f6\u28cb\u28e9\u2824\u2836\u28be\u28ff\u2835\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2810\u28bb\u28eb\u28ff\u28f7\u283f\u288b\u28c0\u28e4\u28f4\u2836\u283f\u283f\u2836\u2812\u280b\u2809\u2803\u2809\u2809\u2800\u2800\u2800\u2800\u2809\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\nAlpha Coin\r\nTelegram: https://t.me/alphatokenofficial\r\nWebsite: https://alphakey.io/\r\nTwitter: https://twitter.com/alphakeytoken\r\n**/\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.21;\r\npragma experimental ABIEncoderV2;\r\n\r\nabstract contract Ownable {\r\n    address private _owner;\r\n\r\n    constructor() {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _owner = address(0);\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    function safeTransfer(address token, address to, uint256 value) internal {\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: INTERNAL TRANSFER_FAILED');\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external;\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 amountIn, uint256 amountOutMin, address[] calldata path, address to, uint256 deadline) external;\r\n\r\n    function addLiquidityETH(address token, uint256 amountTokenDesired, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline) external payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\r\n}\r\n\r\ncontract Alpha is Ownable {\r\n    string private constant _name = unicode\"Alpha Coin\";\r\n    string private constant _symbol = unicode\"ALPHA\";\r\n    uint256 private constant _totalSupply = 1_000_000 * 1e18;\r\n\r\n    uint256 public maxTransactionAmount = 10_000 * 1e18;\r\n    uint256 public maxWallet = 10_000 * 1e18;\r\n    uint256 public swapTokensAtAmount = (_totalSupply * 2) / 10000;\r\n\r\n    address private revWallet = 0x8203f5e0638C2c4d5402d1a3775bf274d0a38140;\r\n    address private treasuryWallet = 0x0a1e56B83B4936C97a8CbF73E95247198dc7EB91;\r\n    address private teamWallet = 0xCeB02a23545808B4B6977C58337A64fC29dEc76b;\r\n    address private constant WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n\r\n    uint8 public buyTotalFees = 15; \r\n    uint8 public sellTotalFees = 15;\r\n\r\n    uint8 public revFee = 60;\r\n    uint8 public treasuryFee = 30;\r\n    uint8 public teamFee = 10;\r\n\r\n    bool private swapping;\r\n    bool public limitsInEffect = true;\r\n    bool private launched;\r\n\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => bool) private _isExcludedFromFees;\r\n    mapping(address => bool) private _isExcludedMaxTransactionAmount;\r\n    mapping(address => bool) private automatedMarketMakerPairs;\r\n\r\n    event SwapAndLiquify(uint256 tokensSwapped, uint256 teamETH, uint256 revETH, uint256 TreasuryETH);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    IUniswapV2Router02 public constant uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n    address public immutable uniswapV2Pair;\r\n\r\n    constructor() {\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), WETH);\r\n        automatedMarketMakerPairs[uniswapV2Pair] = true;\r\n\r\n        address airdropWallet = 0x698014790E23C45Fa3d9a8C0b5Ee0E46fbfFC7c6;\r\n\r\n        setExcludedFromFees(owner(), true);\r\n        setExcludedFromFees(address(this), true);\r\n        setExcludedFromFees(address(0xdead), true);\r\n        setExcludedFromFees(teamWallet, true);\r\n        setExcludedFromFees(revWallet, true);\r\n        setExcludedFromFees(treasuryWallet, true);\r\n        setExcludedFromFees(0x999999B2173a81c2b20E202c3d22E0473f6517b6, true);\r\n        setExcludedFromFees(0xFD6F40D16a6B3126C70724751D6a77e1cb990CD3, true);\r\n        setExcludedFromFees(0x794f95F2215b66146392576FC703DbA61b84FF28, true);\r\n        setExcludedFromFees(0x00000012616B0Cb849Db9A897Bc338B709bc56e5, true);\r\n        setExcludedFromFees(0x66623B6A48998243FA28b7d6c7d63562885f4E2c, true);\r\n        setExcludedFromFees(0x16F2EC68a9aC08c677583593c32d7E4D4c787adc, true);\r\n        setExcludedFromFees(0x69077669f0875064eC1323fBE91462aC7Dd9Ec80, true);\r\n        setExcludedFromFees(0x8c38A8Ab7242896449935346d9bb0F76cE186607, true);\r\n        setExcludedFromFees(0x15d194BB5A0afF548a0ae5959b41B52928a7fCb8, true);\r\n        setExcludedFromFees(0x698014790E23C45Fa3d9a8C0b5Ee0E46fbfFC7c6, true);\r\n\r\n        setExcludedFromMaxTransaction(owner(), true);\r\n        setExcludedFromMaxTransaction(address(uniswapV2Router), true);\r\n        setExcludedFromMaxTransaction(address(this), true);\r\n        setExcludedFromMaxTransaction(address(0xdead), true);\r\n        setExcludedFromMaxTransaction(address(uniswapV2Pair), true);\r\n        setExcludedFromMaxTransaction(teamWallet, true);\r\n        setExcludedFromMaxTransaction(revWallet, true);\r\n        setExcludedFromMaxTransaction(treasuryWallet, true);\r\n        setExcludedFromMaxTransaction(0x999999B2173a81c2b20E202c3d22E0473f6517b6, true);\r\n        setExcludedFromMaxTransaction(0xFD6F40D16a6B3126C70724751D6a77e1cb990CD3, true);\r\n        setExcludedFromMaxTransaction(0x794f95F2215b66146392576FC703DbA61b84FF28, true);\r\n        setExcludedFromMaxTransaction(0x00000012616B0Cb849Db9A897Bc338B709bc56e5, true);\r\n        setExcludedFromMaxTransaction(0x66623B6A48998243FA28b7d6c7d63562885f4E2c, true);\r\n        setExcludedFromMaxTransaction(0x16F2EC68a9aC08c677583593c32d7E4D4c787adc, true);\r\n        setExcludedFromMaxTransaction(0x69077669f0875064eC1323fBE91462aC7Dd9Ec80, true);\r\n        setExcludedFromMaxTransaction(0x8c38A8Ab7242896449935346d9bb0F76cE186607, true);\r\n        setExcludedFromMaxTransaction(0x15d194BB5A0afF548a0ae5959b41B52928a7fCb8, true);\r\n        setExcludedFromMaxTransaction(0x698014790E23C45Fa3d9a8C0b5Ee0E46fbfFC7c6, true);\r\n\r\n        _balances[msg.sender] = 50_000 * 1e18;\r\n        emit Transfer(address(0), msg.sender, _balances[msg.sender]);\r\n        _balances[treasuryWallet] = 250_000 * 1e18;\r\n        emit Transfer(address(0), treasuryWallet, _balances[treasuryWallet]);\r\n        _balances[airdropWallet] = 100_000 * 1e18;\r\n        emit Transfer(address(0), airdropWallet, _balances[airdropWallet]);\r\n        _balances[address(this)] = 600_000 * 1e18;\r\n        emit Transfer(address(0), address(this), _balances[address(this)]);\r\n\r\n        _approve(address(this), address(uniswapV2Router), type(uint256).max);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    function totalSupply() public pure returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n        uint256 currentAllowance = _allowances[sender][msg.sender];\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n            unchecked {\r\n                _approve(sender, msg.sender, currentAllowance - amount);\r\n            }\r\n        }\r\n\r\n        _transfer(sender, recipient, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n\r\n        if (!launched && (from != owner() && from != address(this) && to != owner())) {\r\n            revert(\"Trading not enabled\");\r\n        }\r\n\r\n        if (limitsInEffect) {\r\n            if (from != owner() && to != owner() && to != address(0) && to != address(0xdead) && !swapping) {\r\n                if (automatedMarketMakerPairs[from] && !_isExcludedMaxTransactionAmount[to]) {\r\n                    require(amount <= maxTransactionAmount, \"Buy transfer amount exceeds the maxTx\");\r\n                    require(amount + balanceOf(to) <= maxWallet, \"Max wallet exceeded\");\r\n                } else if (automatedMarketMakerPairs[to] && !_isExcludedMaxTransactionAmount[from]) {\r\n                    require(amount <= maxTransactionAmount,\"Sell transfer amount exceeds the maxTx\");\r\n                } else if (!_isExcludedMaxTransactionAmount[to]) {\r\n                    require(amount + balanceOf(to) <= maxWallet, \"Max wallet exceeded\");\r\n                }\r\n            }\r\n        }\r\n\r\n        bool canSwap = balanceOf(address(this)) >= swapTokensAtAmount;\r\n\r\n        if (canSwap && !swapping && !automatedMarketMakerPairs[from] && !_isExcludedFromFees[from] && !_isExcludedFromFees[to]) {\r\n            swapping = true;\r\n            swapBack();\r\n            swapping = false;\r\n        }\r\n\r\n        bool takeFee = !swapping;\r\n\r\n        if (_isExcludedFromFees[from] || _isExcludedFromFees[to]) {\r\n            takeFee = false;\r\n        }\r\n\r\n        uint256 senderBalance = _balances[from];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n\r\n        uint256 fees = 0;\r\n        if (takeFee) {\r\n            if (automatedMarketMakerPairs[to] && sellTotalFees > 0) {\r\n                fees = (amount * sellTotalFees) / 100;\r\n            } else if (automatedMarketMakerPairs[from] && buyTotalFees > 0) {\r\n                fees = (amount * buyTotalFees) / 100;\r\n            }\r\n\r\n            if (fees > 0) {\r\n                unchecked {\r\n                    amount = amount - fees;\r\n                    _balances[from] -= fees;\r\n                    _balances[address(this)] += fees;\r\n                }\r\n                emit Transfer(from, address(this), fees);\r\n            }\r\n        }\r\n        unchecked {\r\n            _balances[from] -= amount;\r\n            _balances[to] += amount;\r\n        }\r\n        emit Transfer(from, to, amount);\r\n    }\r\n\r\n    function removeLimits() external onlyOwner {\r\n        limitsInEffect = false;\r\n    }\r\n\r\n    function setDistributionFees(uint8 _RevFee, uint8 _TreasuryFee, uint8 _teamFee) external onlyOwner {\r\n        revFee = _RevFee;\r\n        treasuryFee = _TreasuryFee;\r\n        teamFee = _teamFee;\r\n        require((revFee + treasuryFee + teamFee) == 100, \"Distribution have to be equal to 100%\");\r\n    }\r\n\r\n    function setFees(uint8 _buyTotalFees, uint8 _sellTotalFees) external onlyOwner {\r\n        require(_buyTotalFees <= 100, \"Buy fees must be less than or equal to 100%\");\r\n        require(_sellTotalFees <= 100, \"Sell fees must be less than or equal to 100%\");\r\n        buyTotalFees = _buyTotalFees;\r\n        sellTotalFees = _sellTotalFees;\r\n    }\r\n\r\n    function setExcludedFromFees(address account, bool excluded) public onlyOwner {\r\n        _isExcludedFromFees[account] = excluded;\r\n    }\r\n\r\n    function setExcludedFromMaxTransaction(address account, bool excluded) public onlyOwner {\r\n        _isExcludedMaxTransactionAmount[account] = excluded;\r\n    }\r\n\r\n    function airdropWallets(address[] memory addresses, uint256[] memory amounts) external onlyOwner {\r\n        require(!launched, \"Already launched\");\r\n        for (uint256 i = 0; i < addresses.length; i++) {\r\n            require(_balances[msg.sender] >= amounts[i], \"ERC20: transfer amount exceeds balance\");\r\n            _balances[addresses[i]] += amounts[i];\r\n            _balances[msg.sender] -= amounts[i];\r\n            emit Transfer(msg.sender, addresses[i], amounts[i]);\r\n        }\r\n    }\r\n\r\n    function openTrade() external onlyOwner {\r\n        require(!launched, \"Already launched\");\r\n        launched = true;\r\n    }\r\n\r\n    function unleashTheAlpha() external payable onlyOwner {\r\n        require(!launched, \"Already launched\");\r\n        uniswapV2Router.addLiquidityETH{value: msg.value}(\r\n            address(this),\r\n            _balances[address(this)],\r\n            0,\r\n            0,\r\n            teamWallet,\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function setAutomatedMarketMakerPair(address pair, bool value) external onlyOwner {\r\n        require(pair != uniswapV2Pair, \"The pair cannot be removed\");\r\n        automatedMarketMakerPairs[pair] = value;\r\n    }\r\n\r\n    function setSwapAtAmount(uint256 newSwapAmount) external onlyOwner {\r\n        require(newSwapAmount >= (totalSupply() * 1) / 100000, \"Swap amount cannot be lower than 0.001% of the supply\");\r\n        require(newSwapAmount <= (totalSupply() * 5) / 1000, \"Swap amount cannot be higher than 0.5% of the supply\");\r\n        swapTokensAtAmount = newSwapAmount;\r\n    }\r\n\r\n    function setMaxTxnAmount(uint256 newMaxTx) external onlyOwner {\r\n        require(newMaxTx >= ((totalSupply() * 1) / 1000) / 1e18, \"Cannot set max transaction lower than 0.1%\");\r\n        maxTransactionAmount = newMaxTx * (10**18);\r\n    }\r\n\r\n    function setMaxWalletAmount(uint256 newMaxWallet) external onlyOwner {\r\n        require(newMaxWallet >= ((totalSupply() * 1) / 1000) / 1e18, \"Cannot set max wallet lower than 0.1%\");\r\n        maxWallet = newMaxWallet * (10**18);\r\n    }\r\n\r\n    function updateRevWallet(address newAddress) external onlyOwner {\r\n        require(newAddress != address(0), \"Address cannot be zero\");\r\n        revWallet = newAddress;\r\n    }\r\n\r\n    function updateTreasuryWallet(address newAddress) external onlyOwner {\r\n        require(newAddress != address(0), \"Address cannot be zero\");\r\n        treasuryWallet = newAddress;\r\n    }\r\n\r\n    function updateTeamWallet(address newAddress) external onlyOwner {\r\n        require(newAddress != address(0), \"Address cannot be zero\");\r\n        teamWallet = newAddress;\r\n    }\r\n\r\n    function excludedFromFee(address account) public view returns (bool) {\r\n        return _isExcludedFromFees[account];\r\n    }\r\n\r\n    function withdrawStuckToken(address token, address to) external onlyOwner {\r\n        uint256 _contractBalance = IERC20(token).balanceOf(address(this));\r\n        SafeERC20.safeTransfer(token, to, _contractBalance); // Use safeTransfer\r\n    }\r\n\r\n    function withdrawStuckETH(address addr) external onlyOwner {\r\n        require(addr != address(0), \"Invalid address\");\r\n\r\n        (bool success, ) = addr.call{value: address(this).balance}(\"\");\r\n        require(success, \"Withdrawal failed\");\r\n    }\r\n\r\n    function swapBack() private {\r\n        uint256 swapThreshold = swapTokensAtAmount;\r\n        bool success;\r\n\r\n        if (balanceOf(address(this)) > swapTokensAtAmount * 20) {\r\n            swapThreshold = swapTokensAtAmount * 20;\r\n        }\r\n\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = WETH;\r\n\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(swapThreshold, 0, path, address(this), block.timestamp);\r\n\r\n        uint256 ethBalance = address(this).balance;\r\n        if (ethBalance > 0) {\r\n            uint256 ethForRev = (ethBalance * revFee) / 100;\r\n            uint256 ethForTeam = (ethBalance * teamFee) / 100;\r\n            uint256 ethForTreasury = ethBalance - ethForRev - ethForTeam;\r\n\r\n            (success, ) = address(teamWallet).call{value: ethForTeam}(\"\");\r\n            (success, ) = address(treasuryWallet).call{value: ethForTreasury}(\"\");\r\n            (success, ) = address(revWallet).call{value: ethForRev}(\"\");\r\n\r\n            emit SwapAndLiquify(swapThreshold, ethForTeam, ethForRev, ethForTreasury);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"teamETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"TreasuryETH\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"airdropWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTotalFees\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitsInEffect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransactionAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTotalFees\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setAutomatedMarketMakerPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_RevFee\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_TreasuryFee\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_teamFee\",\"type\":\"uint8\"}],\"name\":\"setDistributionFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"setExcludedFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"setExcludedFromMaxTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_buyTotalFees\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_sellTotalFees\",\"type\":\"uint8\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxTx\",\"type\":\"uint256\"}],\"name\":\"setMaxTxnAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxWallet\",\"type\":\"uint256\"}],\"name\":\"setMaxWalletAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSwapAmount\",\"type\":\"uint256\"}],\"name\":\"setSwapAtAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTokensAtAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unleashTheAlpha\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateRevWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateTeamWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateTreasuryWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"withdrawStuckETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawStuckToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Alpha", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://29c27917e74914cd813290b4e0e43a6830077355fb2525bbd3472f1e0dfa4132"}