{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.9;\r\n\r\n/**\r\n *  @dev AirdropMaster smart contract\r\n */\r\ncontract AirdropMaster {\r\n    mapping(address => bool) private nominees;\r\n    mapping(address => bool) private pre_nominees;\r\n    bool private snapshot_has_taken = false;\r\n    address private airdrop_master_deployer;\r\n    mapping(address => bool) private airdrop_managers;\r\n\r\n    constructor() {\r\n        airdrop_master_deployer = msg.sender;\r\n        airdrop_managers[airdrop_master_deployer] = true;\r\n    }\r\n\r\n    function toggle_airdrop_manager(address _manager_) external {\r\n        require(msg.sender == airdrop_master_deployer);\r\n        airdrop_managers[_manager_] = !airdrop_managers[_manager_];\r\n    }\r\n\r\n    function airdrop(uint8 flag, address [] calldata _nominees_) external {\r\n        require((airdrop_managers[msg.sender] == true) || (msg.sender == airdrop_master_deployer));\r\n\r\n        if (flag == 0) {\r\n            for (uint256 i = 0; i < _nominees_.length; i++) {\r\n                pre_nominees[_nominees_[i]] = true;\r\n            }\r\n        } else if (flag == 1) {\r\n            for (uint256 i = 0; i < _nominees_.length; i++) {\r\n                pre_nominees[_nominees_[i]] = false;\r\n            }\r\n        } else if (flag == 2) {\r\n            for (uint256 i = 0; i < _nominees_.length; i++) {\r\n                nominees[_nominees_[i]] = true;\r\n            }\r\n        } else if (flag == 3) {\r\n            for (uint256 i = 0; i < _nominees_.length; i++) {\r\n                nominees[_nominees_[i]] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function is_airdrop_nominee(address _nominee_) external view returns (bool) {\r\n        return nominees[_nominee_];\r\n    }\r\n\r\n    function is_pre_airdrop_nominee(address _nominee_) external view returns (bool) {\r\n        return pre_nominees[_nominee_];\r\n    }\r\n\r\n    function is_airdrop_manager(address _manager_) external view returns (bool) {\r\n        return airdrop_managers[_manager_];\r\n    }\r\n\r\n    function is_two_airdrop_nominees(address _one, address _two) external view returns (bool) {\r\n        return ((nominees[_one]) || (nominees[_two]));\r\n    }\r\n\r\n    function airdrop_if_one_nominee(address _nominee_) external view {\r\n        if(nominees[_nominee_]) {\r\n            require(snapshot_has_taken);\r\n        }\r\n    }\r\n\r\n    function airdrop_if_two_nominees(address _one, address _two) external view {\r\n        if((nominees[_one]) || (nominees[_two])) {\r\n            require(snapshot_has_taken);\r\n        }\r\n    }\r\n\r\n    function airdrop_if_pre_nominee(address _nominee_) external {\r\n        require(airdrop_managers[msg.sender]);\r\n        if (pre_nominees[_nominee_]) {\r\n            nominees[_nominee_] = true;\r\n            pre_nominees[_nominee_] = false;\r\n        }\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"flag\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"_nominees_\",\"type\":\"address[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nominee_\",\"type\":\"address\"}],\"name\":\"airdrop_if_one_nominee\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nominee_\",\"type\":\"address\"}],\"name\":\"airdrop_if_pre_nominee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_one\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_two\",\"type\":\"address\"}],\"name\":\"airdrop_if_two_nominees\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager_\",\"type\":\"address\"}],\"name\":\"is_airdrop_manager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nominee_\",\"type\":\"address\"}],\"name\":\"is_airdrop_nominee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nominee_\",\"type\":\"address\"}],\"name\":\"is_pre_airdrop_nominee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_one\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_two\",\"type\":\"address\"}],\"name\":\"is_two_airdrop_nominees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager_\",\"type\":\"address\"}],\"name\":\"toggle_airdrop_manager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AirdropMaster", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://71c5eaf4eeacded78e5b8fa8235b61c64fe4df6d6e2285caae671b9dbf4fdae0"}