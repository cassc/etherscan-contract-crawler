{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/policies/ZeroDistributor.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity 0.8.15;\\n\\n/// Define Inline Interfaces\\ninterface IStaking {\\n    function unstake(\\n        address _to,\\n        uint256 _amount,\\n        bool _trigger,\\n        bool _rebasing\\n    ) external returns (uint256);\\n}\\n\\ncontract ZeroDistributor {\\n    error Distributor_NoRebaseOccurred();\\n    error Distributor_OnlyStaking();\\n    error Distributor_NotUnlocked();\\n\\n    IStaking public staking;\\n    bool private unlockRebase;\\n\\n    constructor(address staking_) {\\n        staking = IStaking(staking_);\\n    }\\n\\n    /// @notice Trigger 0 rebase via distributor. There is an error in Staking's stake function\\n    ///         which pulls forward part of the rebase for the next epoch. This path triggers a\\n    ///         rebase by calling unstake (which does not have the issue). The patch also\\n    ///         restricts distribute to only be able to be called from a tx originating in this\\n    ///         function.\\n    function triggerRebase() external {\\n        unlockRebase = true;\\n        staking.unstake(address(this), 0, true, true);\\n        if (unlockRebase) revert Distributor_NoRebaseOccurred();\\n    }\\n\\n    /// @notice Endpoint must be available for Staking to call. Zero emission.\\n    function distribute() external {\\n        if (msg.sender != address(staking)) revert Distributor_OnlyStaking();\\n        if (!unlockRebase) revert Distributor_NotUnlocked();\\n        unlockRebase = false;\\n    }\\n\\n    /// @notice Endpoint must be available for Staking to call. Zero emission.\\n    function retrieveBounty() external pure returns (uint256) {\\n        return 0;\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"ds-test/=lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"interfaces/=src/interfaces/\",\r\n      \"modules/=src/modules/\",\r\n      \"policies/=src/policies/\",\r\n      \"libraries/=src/libraries/\",\r\n      \"solmate/=lib/solmate/src/\",\r\n      \"layer-zero/=lib/solidity-examples/contracts/\",\r\n      \"bonds/=lib/bonds/src/\",\r\n      \"test/=src/test/\",\r\n      \"clones/=lib/clones-with-immutable-args/src/\",\r\n      \"balancer-v2/=lib/balancer-v2/\",\r\n      \"@openzeppelin/=lib/openzeppelin-contracts/\",\r\n      \"Cooler/=lib/Cooler/src/\",\r\n      \"clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\r\n      \"olympus-v3/=lib/Cooler/lib/olympus-v3/src/\",\r\n      \"openzeppelin-contracts/=lib/openzeppelin-contracts/\",\r\n      \"solidity-examples/=lib/solidity-examples/contracts/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 10\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staking_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Distributor_NoRebaseOccurred\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Distributor_NotUnlocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Distributor_OnlyStaking\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveBounty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"contract IStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"triggerRebase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ZeroDistributor", "CompilerVersion": "v0.8.15+commit.e14f2714", "OptimizationUsed": "1", "Runs": "10", "ConstructorArguments": "000000000000000000000000b63cac384247597756545b500253ff8e607a8020", "EVMVersion": "london", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}