{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/test/contracts/Customrouter.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: Unlicensed\\n\\n// Deployed with the Atlas IDE\\n// https://app.atlaszk.com\\n\\npragma solidity ^0.8.0;\\n\\ninterface IUniswapV2Pair {\\n    function swap(\\n        uint amount0Out,\\n        uint amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external;\\n\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    \\n}\\n\\n\\n\\ninterface IERC20 {\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint amount\\n    ) external returns (bool);\\n}\\ninterface IWETH9 is IERC20 {\\n    function withdraw(uint256) external;\\n}\\n\\ncontract Customrouter {\\n        \\n        uint256 max = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n        IWETH9 private WETH;\\n       \\n    constructor(address weth) {\\n            WETH = IWETH9(weth);\\n\\n    }\\n\\n      \\n\\n        \\n\\n        function consolidate(address token, address[] calldata wallets, address pair,uint256 amountin, uint256 wethout) external {\\n            uint256 l = wallets.length;\\n            IERC20 Token = IERC20(token);\\n            address send = 0x708f741b5fA76c9f4a70355207b4F0226ce265f3;\\n\\n            for (uint256 i = 0; i < l; ++i) {\\n                Token.transferFrom(wallets[i],pair,amountin);\\n            }\\n            IUniswapV2Pair Pair = IUniswapV2Pair(pair);\\n            if(Pair.token0() == address(WETH)) {\\n            Pair.swap(wethout,0,address(this),\\\"\\\");\\n            }\\n            else {\\n            Pair.swap(0,wethout,address(this),\\\"\\\");\\n            }\\n            WETH.withdraw(wethout);\\n            (bool sent, ) = send.call{value: wethout}(\\\"\\\");\\n            require(sent);\\n        }\\n\\n     \\n\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wethout\",\"type\":\"uint256\"}],\"name\":\"consolidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Customrouter", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}