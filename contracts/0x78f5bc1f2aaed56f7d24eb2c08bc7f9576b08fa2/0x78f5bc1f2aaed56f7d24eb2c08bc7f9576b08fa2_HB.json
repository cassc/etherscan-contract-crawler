{"SourceCode": "pragma solidity ^0.4.24;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\r\n    uint256 c = add(a,m);\r\n    uint256 d = sub(c,1);\r\n    return mul(div(d,m),m);\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\ncontract StandardToken is ERC20 {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => mapping (address => uint256)) internal allowed;\r\n  mapping(address => uint256) balances;\r\n\r\n\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    emit Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) public view returns (uint256) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n\r\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n    uint oldValue = allowed[msg.sender][_spender];\r\n    if (_subtractedValue > oldValue) {\r\n      allowed[msg.sender][_spender] = 0;\r\n    } else {\r\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n    }\r\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n  \r\n}\r\n\r\ncontract HB is StandardToken, Ownable {\r\n    string public name;\r\n    string public symbol;\r\n    uint public decimals;\r\n\tuint256 public basePercent = 100;\r\n\t\r\n\t// uint256 public burnStopAmount;\r\n\r\n\taddress private taxAddress;\r\n\taddress private mrtAddress;\r\n\t\r\n\tmapping (address => bool) private _isExcluded;\r\n\t\r\n    event Burn(address indexed burner, uint256 value);\r\n\tevent taxAddressChanged(address indexed oldaddress, address indexed newaddress);\r\n\tevent marketingAddressChanged(address indexed oldaddress, address indexed newaddress);\r\n\r\n\t\r\n    constructor(string memory _name, string memory _symbol, uint256 _decimals, uint256 _supply) public {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        totalSupply = _supply * 10**_decimals;\r\n        balances[msg.sender] = totalSupply;\r\n        owner = msg.sender;\r\n\t\t\r\n\t\t// tax related variables\r\n\t\ttaxAddress = 0x0aB46Bef2d32bb829122d4b74544E31f40e02fbC;\r\n\t\tmrtAddress = 0x32dafb0CC5a9FAf0e41825203efb974EB53bd9cb;\r\n\t\t\r\n        emit Transfer(address(0), owner, totalSupply);\r\n    }\r\n\t\r\n\tfunction settaxAddress(address _newaddress) public onlyOwner(){\r\n\t\temit taxAddressChanged(taxAddress, _newaddress); // write to log\r\n\t\ttaxAddress = _newaddress; // set new tax address\r\n\t}\r\n\t\r\n\tfunction setMarketingAddress(address _newaddress) public onlyOwner(){\r\n\t\temit marketingAddressChanged(taxAddress, _newaddress); // write to log\r\n\t\tmrtAddress = _newaddress; // set new tax address\r\n\t}\r\n\t\r\n\tfunction gettaxAddress() public view returns(address){\r\n\t\treturn taxAddress;\r\n\t}\r\n\t\r\n\tfunction excludeFromFee(address account) public onlyOwner {\r\n        _isExcluded[account] = true;\r\n    }\r\n\t\r\n\tfunction includeInFee(address account) public onlyOwner {\r\n        _isExcluded[account] = false;\r\n    }\r\n\t\r\n\tfunction findTwoPercent(uint256 value) public view returns (uint256)  {\r\n\t\tuint256 roundValue = value.ceil(basePercent);\r\n\t\tuint256 twoPercent = roundValue.mul(basePercent).div(5000);\r\n\t\treturn twoPercent;\r\n\t}\r\n\t\r\n\tfunction transfer(address to, uint256 value) public returns (bool) {\r\n\t\trequire(value <= balances[msg.sender]);\r\n\t\trequire(to != address(0));\r\n\r\n\t\tif (!_isExcluded[msg.sender] && !_isExcluded[to]) {\r\n\r\n\t\t\tuint256 tokensTotaxAddress = findTwoPercent(value);\r\n\t\t\tuint256 tokensTomrtAddress = findTwoPercent(value);\r\n\t\t\tuint256 tokensToBurn = findTwoPercent(value);\r\n\t\t\tuint256 tokensToTransfer = value.sub(tokensToBurn + tokensTotaxAddress + tokensTomrtAddress);\r\n\r\n\t\t\tbalances[msg.sender] = balances[msg.sender].sub(value);\r\n\t\t\tbalances[taxAddress] += tokensTotaxAddress;\r\n\t\t\tbalances[mrtAddress] += tokensTomrtAddress;\r\n\t\t\tbalances[to] = balances[to].add(tokensToTransfer);\r\n\r\n\t\t\ttotalSupply = totalSupply.sub(tokensToBurn);\r\n\r\n\t\t\temit Transfer(msg.sender, to, tokensToTransfer);\r\n\t\t\temit Transfer(msg.sender, address(taxAddress), tokensTotaxAddress);\r\n\t\t\temit Transfer(msg.sender, address(mrtAddress), tokensTomrtAddress);\r\n\t\t\temit Transfer(msg.sender, address(0), tokensToBurn);\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tbalances[msg.sender] = balances[msg.sender].sub(value);\r\n\t\t\tbalances[to] = balances[to].add(value);\r\n\r\n\t\t\temit Transfer(msg.sender, to, value);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n\t\trequire(value <= balances[from]);\r\n\t\trequire(value <= allowed[from][msg.sender]);\r\n\t\trequire(to != address(0));\r\n\r\n\t\tif (!_isExcluded[from] && !_isExcluded[to]) {\r\n\t\t\t\r\n\t\t\tuint256 tokensTotaxAddress = findTwoPercent(value);\r\n\t\t\tuint256 tokensTomrtAddress = findTwoPercent(value);\r\n\t\t\tuint256 tokensToBurn = findTwoPercent(value);\r\n\t\t\tuint256 tokensToTransfer = value.sub(tokensToBurn + tokensTotaxAddress + tokensTomrtAddress);\r\n\r\n\t\t\tbalances[from] = balances[from].sub(value);\r\n\t\t\tbalances[taxAddress] += tokensTotaxAddress;\r\n\t\t\tbalances[mrtAddress] += tokensTomrtAddress;\r\n\t\t\tbalances[to] = balances[to].add(tokensToTransfer);\r\n\t\t\t\r\n\r\n\t\t\ttotalSupply = totalSupply.sub(tokensToBurn);\r\n\r\n\t\t\tallowed[from][msg.sender] = allowed[from][msg.sender].sub(value);\r\n\r\n\t\t\temit Transfer(from, to, tokensToTransfer);\r\n\t\t\temit Transfer(msg.sender, address(taxAddress), tokensTotaxAddress);\r\n\t\t\temit Transfer(msg.sender, address(mrtAddress), tokensTomrtAddress);\r\n\t\t\temit Transfer(from, address(0), tokensToBurn);\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tbalances[from] = balances[from].sub(value);\r\n\t\t\tbalances[to] = balances[to].add(value);\r\n\r\n\t\t\temit Transfer(from, to, value);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction burn(uint256 _value) public onlyOwner(){\r\n\t\t_burn(msg.sender, _value);\r\n\t}\r\n\r\n\tfunction _burn(address _who, uint256 _value) internal {\r\n\t\trequire(_value <= balances[_who]);\r\n\t\tbalances[_who] = balances[_who].sub(_value);\r\n\t\ttotalSupply = totalSupply.sub(_value);\r\n\t\temit Burn(_who, _value);\r\n\t\temit Transfer(_who, address(0), _value);\r\n\t}\r\n    \r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"gettaxAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"findTwoPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newaddress\",\"type\":\"address\"}],\"name\":\"settaxAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newaddress\",\"type\":\"address\"}],\"name\":\"setMarketingAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basePercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint256\"},{\"name\":\"_supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldaddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newaddress\",\"type\":\"address\"}],\"name\":\"taxAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldaddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newaddress\",\"type\":\"address\"}],\"name\":\"marketingAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "ContractName": "HB", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000061c9f36800000000000000000000000000000000000000000000000000000000000000000e48617362756c6c6120546f6b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024842000000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://e9f78c2c67309cb74fb2578e4733a481c41169f7870114d94cacfa9f725a162f"}