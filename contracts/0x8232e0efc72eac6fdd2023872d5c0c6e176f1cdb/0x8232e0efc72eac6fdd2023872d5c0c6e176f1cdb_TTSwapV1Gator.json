{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"Contracts/TTSwapV1Gator.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\nimport \\\"./libraries/base/LGate.sol\\\";\\nimport \\\"./interfaces/Marketor/IMarketorV1State.sol\\\";\\nimport \\\"./TTSwapV1Marketor.sol\\\";\\nimport \\\"./interfaces/ITTSwapV1Gator.sol\\\";\\n\\ncontract TTSwapV1Gator is ITTSwapV1Gator {\\n    //\u95e8\u6237\u4fe1\u606f\\n    //Gateaddress=>GateInfo\\n    mapping(address => LGate.Info) public gateList;\\n    //Gateaddress=>GateInfo\\n    mapping(address => LGate.DetailInfo) public gateDetailList;\\n    //\u8bb0\u5f55\u95e8\u6237\u7f16\u53f7\\n    //GateNo=>Gateaddess\\n    mapping(uint128 => address) public gateNumbers;\\n    //\u8bb0\u5f55\u5e02\u573a\u4e2d\u95e8\u6237\u65b0\u589e\u95e8\u6237\u7684\u7f16\u53f7\\n    uint128 public maxGateNumbers;\\n\\n    //\u8bb0\u5f55\u7ba1\u7406\u5458\u5408\u7ea6\u5730\u5740\\n    address public override marketorContractAddress;\\n    //\u8bb0\u5f55\u5e02\u573a\u521b\u5efa\u8005\u5730\u5740\\n    address public marketCreator;\\n\\n    //\u6784\u5efa\u65f6\\n    constructor(address _marketorContractAddress, address _marketCreator) {\\n        marketorContractAddress = _marketorContractAddress;\\n        marketCreator = _marketCreator;\\n        maxGateNumbers = 1;\\n    }\\n\\n    /// @notice \u53ea\u80fd\u662f\u901a\u8fc7\u5e02\u573a\u7ba1\u7406\u5458\u8ba4\u8bc1\u7684\u95e8\u6237\u53ef\u4ee5\u8c03\u7528\\n    /// @dev \u53ea\u80fd\u662f\u901a\u8fc7\u5e02\u573a\u7ba1\u7406\u5458\u8ba4\u8bc1\u7684\u95e8\u6237\u624d\u53ef\u4ee5\u8c03\u7528\\n    modifier onlyGator() {\\n        require(\\n            gateList[msg.sender].marketunlock == true,\\n            \\\"the caller must be valid gater\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @notice \u53ea\u80fd\u662f\u5e02\u573a\u521b\u5efa\u8005\u53ef\u4ee5\u8c03\u7528\\n    /// @dev \u53ea\u80fd\u662f\u5e02\u573a\u521b\u5efa\u8005\u53ef\u4ee5\u8c03\u7528\\n    modifier onlyMarketCreator() {\\n        require(\\n            marketCreator == msg.sender,\\n            \\\"the caller must be valid market creator\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @notice \u53ea\u80fd\u662f\u901a\u8fc7\u5e02\u573a\u8ba4\u8bc1\u7684\u5e02\u573a\u7ba1\u7406\u5458\u6237\u53ef\u4ee5\u8c03\u7528\\n    /// @dev \u53ea\u80fd\u662f\u901a\u8fc7\u5e02\u573a\u8ba4\u8bc1\u7684\u5e02\u573a\u7ba1\u7406\u5458\u6237\u53ef\u4ee5\u8c03\u7528\\n    modifier onlyMarketor() {\\n        require(\\n            IMarketorV1State(marketorContractAddress).isValidMarketor(\\n                msg.sender\\n            ),\\n            \\\"the caller must be valid market manager\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @notice \u8bbe\u7f6e\u95e8\u6237\u5408\u7ea6\u7684\u7ba1\u7406\u5458\u5408\u7ea6\\n    /// @dev \u8bbe\u7f6e\u95e8\u6237\u5408\u7ea6\u7684\u7ba1\u7406\u5458\u5408\u7ea6\\n    function setGaterEnv(\\n        address _marketorContractAddress,\\n        address _marketCreator\\n    ) external override onlyMarketCreator {\\n        marketorContractAddress = _marketorContractAddress;\\n        marketCreator = _marketCreator;\\n    }\\n\\n    /////////////////////////\u95e8\u6237\u7ba1\u7406-\u5e02\u573a////////////////////////////\\n    ///////////////////////// Gate Manage///////////////////////////\\n    /// @notice \u5e02\u573a\u7ba1\u7406\u5458\u51bb\u7ed3\u95e8\u6237\\n    /// @dev \u5e02\u573a\u7ba1\u7406\u5458\u51bb\u7ed3\u95e8\u6237\\n    function lockGatebyMarketor(\\n        address _gatoraddress\\n    ) external override onlyMarketor {\\n        require(\\n            gateList[_gatoraddress].isUsed == true,\\n            \\\"the gator isnot exist\\\"\\n        );\\n        gateList[_gatoraddress].marketunlock = false;\\n        emit e_lockGatebyMarketor(_gatoraddress, msg.sender);\\n    }\\n\\n    /// @notice \u5e02\u573a\u7ba1\u7406\u5458\u89e3\u51bb\u95e8\u6237\\n    /// @dev \u5e02\u573a\u7ba1\u7406\u5458\u89e3\u51bb\u95e8\u6237\\n    function unlockGatebyMarketor(\\n        address _gatoraddress\\n    ) external override onlyMarketor {\\n        require(\\n            gateList[_gatoraddress].isUsed == true,\\n            \\\"the gator isnot exist\\\"\\n        );\\n        gateList[_gatoraddress].marketunlock = true;\\n        emit e_unlockGatebyMarketor(_gatoraddress, msg.sender);\\n    }\\n\\n    /// @notice \u5e02\u573a\u7ba1\u7406\u5458\u66f4\u65b0\u95e8\u6237\\n    /// @dev \u5e02\u573a\u7ba1\u7406\u5458\u66f4\u65b0\u95e8\u6237\\n    function updateGatebyMarketor(\\n        LGate.Info memory _gator\\n    ) external override onlyMarketor {\\n        require(\\n            gateList[_gator.gateAddress].isUsed == true,\\n            \\\"the gator is exister\\\"\\n        );\\n        _gator.marketunlock = gateList[_gator.gateAddress].marketunlock;\\n        _gator.gateunlock = gateList[_gator.gateAddress].gateunlock;\\n        gateList[_gator.gateAddress] = _gator;\\n        emit e_updateGatebyMarketor(\\n            _gator.gateAddress,\\n            _gator.name,\\n            msg.sender\\n        );\\n    }\\n\\n    /// @notice \u5e02\u573a\u7ba1\u7406\u5458\u5220\u9664\u95e8\u6237\\n    /// @dev \u5e02\u573a\u7ba1\u7406\u5458\u5220\u9664\u95e8\u6237\\n    function delGatebyMarketor(address _gator) external override onlyMarketor {\\n        require(gateList[_gator].isUsed == true, \\\"the gator is exister\\\");\\n\\n        delete gateList[_gator];\\n        emit e_delGatebyMarketor(_gator, msg.sender);\\n    }\\n\\n    ///////////////////////// \u95e8\u6237\u7ba1\u7406-\u95e8\u6237////////////////////////////\\n    ///////////////////////// Gate Manage///////////////////////////\\n    /// @notice \u5e02\u573a\u8ba4\u8bc1\u540e\u7684\u95e8\u6237\u4e34\u65f6\u51bb\u7ed3\u81ea\u5df1\\n    /// @dev \u5e02\u573a\u8ba4\u8bc1\u540e\u7684\u95e8\u6237\u4e34\u65f6\u51bb\u7ed3\u81ea\u5df1\\n    function lockGatebyGater() external override onlyGator {\\n        require(\\n            gateList[msg.sender].isUsed == true &&\\n                gateList[msg.sender].gateAddress == msg.sender,\\n            \\\"the gator isnot exist\\\"\\n        );\\n        gateList[msg.sender].gateunlock = false;\\n\\n        emit e_lockGatebyGater(msg.sender);\\n    }\\n\\n    /// @notice \u5e02\u573a\u8ba4\u8bc1\u540e\u7684\u95e8\u6237\u4e34\u65f6\u89e3\u51bb\u81ea\u5df1\\n    /// @dev \u5e02\u573a\u8ba4\u8bc1\u540e\u7684\u95e8\u6237\u4e34\u65f6\u89e3\u51bb\u81ea\u5df1\\n    function unlockGatebyGater() external override onlyGator {\\n        require(\\n            gateList[msg.sender].isUsed == true &&\\n                gateList[msg.sender].gateAddress == msg.sender,\\n            \\\"the gator isnot exist\\\"\\n        );\\n        gateList[msg.sender].gateunlock = true;\\n        emit e_unlockGatebyGater(msg.sender);\\n    }\\n\\n    /// @notice \u5e02\u573a\u8ba4\u8bc1\u540e\u7684\u95e8\u6237\u4e34\u65f6\u66f4\u65b0\u81ea\u5df1\\n    /// @dev \u5e02\u573a\u8ba4\u8bc1\u540e\u7684\u95e8\u6237\u4e34\u65f6\u66f4\u65b0\u81ea\u5df1\\n    function updateGatebyGator(bytes32 _name) external override onlyGator {\\n        gateList[msg.sender].name = _name;\\n        emit e_updateGatebyGator(msg.sender, _name);\\n    }\\n\\n    /// @notice \u7533\u8bf7\u6210\u4e3a\u95e8\u6237\\n    /// @dev \u7533\u8bf7\u6210\u4e3a\u95e8\u6237\\n    function addGater(LGate.Info memory _gator) external override {\\n        require(\\n            gateList[_gator.gateAddress].isUsed != true,\\n            \\\"the gator is exister\\\"\\n        );\\n        require(_gator.gateAddress == msg.sender, \\\"the gator is your\\\");\\n        _gator.marketunlock = false; //\u9ed8\u8ba4\u662f\u88ab\u51bb\u7ed3\u72b6\u6001\\n        _gator.gateunlock = false; //\u9ed8\u8ba4\u662f\u88ab\u51bb\u7ed3\u72b6\u6001\\n        _gator.gateNo = maxGateNumbers; //\u95e8\u6237\u7f16\u53f7\\n        _gator.createtimestamp = block.timestamp; //\u521b\u5efa\u65f6\u95f4\\n        _gator.isUsed = true;\\n        require(maxGateNumbers + 1 > maxGateNumbers, \\\"the gator is your\\\");\\n        gateList[_gator.gateAddress] = _gator; //\u6dfb\u52a0\u95e8\u6237\u4fe1\u606f\u5230\u95e8\u6237\u5217\u8868\\n        gateNumbers[maxGateNumbers] = _gator.gateAddress;\\n        maxGateNumbers += 1;\\n        emit e_addGater(_gator.gateAddress, _gator.name);\\n    }\\n\\n    /// @notice \u95e8\u6237\u6dfb\u52a0\u95e8\u6237\u8be6\u60c5\u4fe1\u606f\\n    /// @dev \u95e8\u6237\u6dfb\u52a0\u95e8\u6237\u8be6\u60c5\u4fe1\u606f\\n    function addGaterDetailInfo(\\n        LGate.DetailInfo memory _gatorDatailinfo\\n    ) external override {\\n        require(gateList[msg.sender].isUsed == true, \\\"the gator is not exist\\\");\\n        gateDetailList[msg.sender] = _gatorDatailinfo;\\n        emit e_addGaterDetail(msg.sender);\\n    }\\n\\n    /// @notice \u4e00\u6b21\u6027\u6dfb\u52a0\u95e8\u6237\u4fe1\u606f\\n    /// @dev \u4e00\u6b21\u6027\u6dfb\u52a0\u95e8\u6237\u4fe1\u606f\\n    function addfullGater(\\n        LGate.Info memory _gator,\\n        LGate.DetailInfo memory _gatorDatailinfo\\n    ) external override {\\n        require(\\n            gateList[_gator.gateAddress].isUsed != true,\\n            \\\"the gator is exister\\\"\\n        );\\n        require(_gator.gateAddress == msg.sender, \\\"the gator is your\\\");\\n\\n        _gator.marketunlock = false; //\u9ed8\u8ba4\u662f\u88ab\u51bb\u7ed3\u72b6\u6001\\n        _gator.gateunlock = false; //\u9ed8\u8ba4\u662f\u88ab\u51bb\u7ed3\u72b6\u6001\\n        _gator.gateNo = maxGateNumbers; //\u95e8\u6237\u7f16\u53f7\\n        _gator.createtimestamp = block.timestamp; //\u521b\u5efa\u65f6\u95f4\\n        _gator.isUsed = true; //\u521b\u5efa\u65f6\u95f4\\n        require(maxGateNumbers + 1 > maxGateNumbers, \\\"the gator is your\\\");\\n        gateList[_gator.gateAddress] = _gator; //\u6dfb\u52a0\u95e8\u6237\u4fe1\u606f\u5230\u95e8\u6237\u5217\u8868\\n        gateNumbers[maxGateNumbers] = _gator.gateAddress;\\n        maxGateNumbers += 1;\\n        emit e_addGater(_gator.gateAddress, _gator.name);\\n\\n        require(gateList[msg.sender].isUsed == true, \\\"the gator is not exist\\\");\\n        gateDetailList[msg.sender] = _gatorDatailinfo;\\n        emit e_addGaterDetail(msg.sender);\\n    }\\n\\n    /// @notice \u4e00\u6b21\u6027\u66f4\u65b0\u95e8\u6237\u4fe1\u606f\\n    /// @dev \u4e00\u6b21\u6027\u66f4\u65b0\u95e8\u6237\u4fe1\u606f\\n    function updatefullGater(\\n        LGate.Info memory _gator,\\n        LGate.DetailInfo memory _gatorDatailinfo\\n    ) external override {\\n        require(\\n            gateList[_gator.gateAddress].isUsed == true,\\n            \\\"the gator is not exist\\\"\\n        );\\n        require(_gator.gateAddress == msg.sender, \\\"the gator is your\\\");\\n        gateList[msg.sender].name = _gator.name; //\u6dfb\u52a0\u95e8\u6237\u4fe1\u606f\u5230\u95e8\u6237\u5217\u8868\\n        emit e_updateGater(_gator.gateAddress, _gator.name);\\n        gateDetailList[msg.sender] = _gatorDatailinfo;\\n        emit e_updateGaterDetail(msg.sender);\\n    }\\n\\n    /// @notice \u5224\u65ad\u8c03\u7528\u8005\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    /// @dev \u5224\u65ad\u8c03\u7528\u8005\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    function isValidGator() external view override returns (bool) {\\n        return gateList[msg.sender].marketunlock;\\n    }\\n\\n    /// @notice \u5224\u65ad\u8c03\u7528\u8005\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    /// @dev \u5224\u65ad\u8c03\u7528\u8005\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    function isValidGator(\\n        address caller\\n    ) external view override returns (bool) {\\n        return gateList[caller].marketunlock;\\n    }\\n\\n    /// @notice \u8c03\u7528\u8005\u5224\u65ad\u4f20\u5165\u5730\u5740\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    /// @dev \u8c03\u7528\u8005\u5224\u65ad\u4f20\u5165\u5730\u5740\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    function isValidGatorFromAddress(\\n        address vgaddress\\n    ) external view override returns (bool) {\\n        return gateList[vgaddress].marketunlock;\\n    }\\n\\n    /// @notice \u8c03\u7528\u8005\u5224\u65ad\u4f20\u5165\u5730\u5740\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    /// @dev \u8c03\u7528\u8005\u5224\u65ad\u4f20\u5165\u5730\u5740\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    function isValidGatorWebFromAddress(\\n        address vgaddress,\\n        bytes32 webaddress\\n    ) external view override returns (bool) {\\n        require(\\n            webaddress == gateDetailList[vgaddress].OfficalIp,\\n            \\\"address does not match the website\\\"\\n        );\\n        return gateList[vgaddress].marketunlock;\\n    }\\n\\n    /// @notice \u83b7\u53d6\u95e8\u6237\u8c03\u7528\u8005\u7684\u95e8\u6237\u7f16\u53f7\\n    /// @dev \u83b7\u53d6\u95e8\u6237\u8c03\u7528\u8005\u7684\u95e8\u6237\u7f16\u53f7\\n    function getGaterNo() external view override returns (uint128) {\\n        return gateList[msg.sender].gateNo;\\n    }\\n\\n    /// @notice \u8c03\u7528\u8005\u83b7\u53d6\u4f20\u5165\u5730\u5740\u5bf9\u5e94\u7684\u95e8\u6237\u7f16\u53f7\\n    /// @dev \u8c03\u7528\u8005\u83b7\u53d6\u4f20\u5165\u5730\u5740\u5bf9\u5e94\u7684\u95e8\u6237\u7f16\u53f7\\n    function getGaterNoFromAddress(\\n        address _gateAddress\\n    ) external view override returns (uint128) {\\n        return gateList[_gateAddress].gateNo;\\n    }\\n\\n    /// @notice \u8c03\u7528\u8005\u83b7\u53d6\u95e8\u6237\u7f16\u53f7\u5bf9\u5e94\u7684\u95e8\u6237\u4fe1\u606f\\n    /// @dev \u8c03\u7528\u8005\u83b7\u53d6\u95e8\u6237\u7f16\u53f7\u5bf9\u5e94\u7684\u95e8\u6237\u4fe1\u606f\\n    function getGaterInfo(\\n        uint8 _gateNumber\\n    ) external view override returns (LGate.Info memory) {\\n        return gateList[gateNumbers[_gateNumber]];\\n    }\\n\\n    /// @notice \u8c03\u7528\u8005\u83b7\u53d6\u95e8\u6237\u5730\u5740\u5bf9\u5e94\u7684\u95e8\u6237\u4fe1\u606f\\n    /// @dev \u8c03\u7528\u8005\u83b7\u53d6\u95e8\u6237\u5730\u5740\u5bf9\u5e94\u7684\u95e8\u6237\u4fe1\u606f\\n    function getGaterInfo(\\n        address _gateaddress\\n    ) external view override returns (LGate.Info memory) {\\n        return gateList[_gateaddress];\\n    }\\n\\n    /// @notice \u901a\u8fc7\u95e8\u6237\u5730\u5740\u83b7\u53d6\u95e8\u6237\u8be6\u60c5\\n    /// @dev \u901a\u8fc7\u95e8\u6237\u5730\u5740\u83b7\u53d6\u95e8\u6237\u8be6\u60c5\\n    function getGaterDetailInfo(\\n        address _gateaddress\\n    ) external view override returns (LGate.DetailInfo memory) {\\n        return gateDetailList[_gateaddress];\\n    }\\n\\n    /// @notice \u901a\u8fc7\u95e8\u6237\u7f16\u53f7\u83b7\u53d6\u95e8\u6237\u8be6\u60c5\\n    /// @dev \u901a\u8fc7\u95e8\u6237\u7f16\u53f7\u83b7\u53d6\u95e8\u6237\u8be6\u60c5\\n    function getGaterDetailInfo(\\n        uint8 _gateNumber\\n    ) external view override returns (LGate.DetailInfo memory) {\\n        return gateDetailList[gateNumbers[_gateNumber]];\\n    }\\n\\n    /// @notice \u8c03\u7528\u8005\u83b7\u53d6\u5e02\u573a\u6700\u5927\u95e8\u6237\u7f16\u53f7\u3001\u6216\u8005\u662f\u4e0b\u4e00\u4e2a\u95e8\u6237\u7533\u8bf7\u8005\u7684\u7f16\u53f7\\n    /// @dev \u8c03\u7528\u8005\u83b7\u53d6\u5e02\u573a\u6700\u5927\u95e8\u6237\u7f16\u53f7\u3001\u6216\u8005\u662f\u4e0b\u4e00\u4e2a\u95e8\u6237\u7533\u8bf7\u8005\u7684\u7f16\u53f7\\n    function getMaxGateNumber() external view override returns (uint128) {\\n        return maxGateNumbers;\\n    }\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/ITTSwapV1Gator.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Gator/IGatorV1CustomerActions.sol\\\";\\nimport \\\"./Gator/IGatorV1Events.sol\\\";\\nimport \\\"./Gator/IGatorV1GatorActions.sol\\\";\\nimport \\\"./Gator/IGatorV1Immutables.sol\\\";\\nimport \\\"./Gator/IGatorV1MarketorActions.sol\\\";\\nimport \\\"./Gator/IGatorV1State.sol\\\";\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface ITTSwapV1Gator is\\n    IGatorV1CustomerActions,\\n    IGatorV1Events,\\n    IGatorV1GatorActions,\\n    IGatorV1Immutables,\\n    IGatorV1MarketorActions,\\n    IGatorV1State\\n{\\n\\n}\\n\"\r\n    },\r\n    \"Contracts/TTSwapV1Marketor.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/ITTSwapV1Marketor.sol\\\";\\n\\ncontract TTSwapV1Marketor is ITTSwapV1Marketor {\\n    //\u5e02\u573a\u7ba1\u7406\u5458\\n    mapping(uint128 => address) public Marketors;\\n    //\u8bb0\u5f55\u7ba1\u7406\u53f7\u7f16\u53f7\\n    //Marketoraddress=>MarketorNo\\n    mapping(address => uint128) public MarketorsNo;\\n    //\u8bb0\u5f55\u5e02\u573a\u7ba1\u7406\u5458\u4eba\u6570(\u5305\u542b\u5df2\u52a0\u4eba\u5458)\\n    uint128 public maxMarketorNo;\\n    //\u8bb0\u5f55\u5e02\u573a\u521b\u5efa\u8005\\n    address public marketCreator;\\n\\n    //\u521d\u59cb\u5316\u65f6\\n    constructor(address _marketCreator) {\\n        marketCreator = _marketCreator;\\n        maxMarketorNo = 1;\\n    }\\n\\n    //\u53ea\u80fd\u5e02\u573a\u521b\u5efa\u8005\u8fd0\u884c\\n    modifier onlyMarketCreator() {\\n        require(msg.sender == marketCreator);\\n        _;\\n    }\\n\\n    //\u589e\u52a0\u5e02\u573a\u7ba1\u7406\u5458\\n    function setMarketorByMarketCreator(\\n        address _owner\\n    ) external override onlyMarketCreator {\\n        require(\\n            maxMarketorNo + 1 >= maxMarketorNo,\\n            \\\"maxMarketorNo connot increase\\\"\\n        );\\n        maxMarketorNo += 1;\\n        MarketorsNo[_owner] = maxMarketorNo;\\n        Marketors[maxMarketorNo] = _owner;\\n        emit e_setMarketorByMarketCreator(_owner);\\n    }\\n\\n    //\u5220\u9664\u5e02\u573a\u7ba1\u7406\u5458\\n    function delMarketorByMarketCreator(\\n        address _owner\\n    ) external override onlyMarketCreator {\\n        delete Marketors[MarketorsNo[_owner]];\\n        delete MarketorsNo[_owner];\\n        emit e_delMarketorByMarketCreator(_owner);\\n    }\\n\\n    //\u5224\u5b9a\u6267\u884c\u8005\u662f\u5426\u662f\u7ba1\u7406\u5458\\n    function isValidMarketor() external view override returns (bool) {\\n        return MarketorsNo[msg.sender] > 0 ? true : false;\\n    }\\n\\n    //\u5224\u5b9a\u7279\u5b9a\u5730\u5740\u662f\u5426\u662f\u7ba1\u7406\u5458\\n    function isValidMarketor(\\n        address mkaddress\\n    ) external view override returns (bool) {\\n        return MarketorsNo[mkaddress] > 0 ? true : false;\\n    }\\n\\n    //\u83b7\u53d6\u8c03\u7528\u8005\u7684\u7ba1\u7406\u5458\u7f16\u53f7\\n    function getMarketorNo() external view returns (uint128) {\\n        return MarketorsNo[msg.sender];\\n    }\\n\\n    //\u83b7\u53d6\u7279\u5b9a\u5730\u5740\u7684\u7ba1\u7406\u5458\u7f16\u53f7\\n    function getMarketorNo(\\n        address _marketorAddress\\n    ) external view returns (uint128) {\\n        return MarketorsNo[_marketorAddress];\\n    }\\n\\n    //\u83b7\u53d6\u5f53\u524d\u6700\u5927\u7f16\u53f7\\n    function getMaxMarketorNo() external view returns (uint128) {\\n        return maxMarketorNo;\\n    }\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Marketor/IMarketorV1State.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IMarketorV1State {\\n    function isValidMarketor() external view returns (bool);\\n\\n    function isValidMarketor(address) external view returns (bool);\\n}\\n\"\r\n    },\r\n    \"Contracts/libraries/base/LGate.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\nlibrary LGate {\\n    struct Info {\\n        // the address of the Market\\n        // \u8bb0\u5f55market\u5730\u5740\\n        //Gate\u7f16\u53f7\\n        uint128 gateNo;\\n        // \u95e8\u6237\u5730\u5740\\n        address gateAddress;\\n        // \u95e8\u6237\u7b80\u79f0\\n        bytes32 name;\\n        //\u521b\u5efa\u65f6\u95f4\\n        uint256 createtimestamp;\\n        // \u5982\u679c\u95e8\u6237\u8fdd\u53cd\u884c\u4e3a\u51c6\u5219,\u8fdb\u884c\u51bb\u7ed3\u9650\u5236\\n        bool marketunlock; //true \u8868\u793a\u5df2\u89e3\u51bb false\u8868\u793a\u5df2\u51bb\u7ed3\\n        // config by the gater\\n        bool gateunlock; //true \u8868\u793a\u5df2\u89e3\u51bb false\u8868\u793a\u5df2\u51bb\u7ed3\\n        bool isUsed;\\n    }\\n\\n    //\u76f8\u5e94\u63a5\u53e3\\n    struct DetailInfo {\\n        bytes32 full_name; //\u5168\u79f0\\n        bytes32 country; //\u56fd\u5bb6\\n        bytes32 OfficalWebsite; //\u5b98\u7f51\\n        bytes32 OfficalIp; //Ip\\n        bytes32 twriterUrl; //\u63a8\u7279\\n        bytes32 bbsUrl; //bbs\u8bba\u575b\u5730\u5740\\n    }\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Gator/IGatorV1State.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../libraries/base/LGate.sol\\\";\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IGatorV1State {\\n    /// @notice \u5224\u65ad\u8c03\u7528\u8005\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    /// @dev \u5224\u65ad\u8c03\u7528\u8005\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    function isValidGator() external view returns (bool);\\n\\n    function isValidGator(address caller) external view returns (bool);\\n\\n    /// @notice \u8c03\u7528\u8005\u5224\u65ad\u4f20\u5165\u5730\u5740\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    /// @dev \u8c03\u7528\u8005\u5224\u65ad\u4f20\u5165\u5730\u5740\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    function isValidGatorFromAddress(\\n        address vgaddress\\n    ) external view returns (bool);\\n\\n    /// @notice \u8c03\u7528\u8005\u5224\u65ad\u4f20\u5165\u5730\u5740\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    /// @dev \u8c03\u7528\u8005\u5224\u65ad\u4f20\u5165\u5730\u5740\u662f\u5426\u662f\u5e02\u573a\u5df2\u7ecf\u8ba4\u8bc1\u95e8\u6237\\n    function isValidGatorWebFromAddress(\\n        address vgaddress,\\n        bytes32 webaddress\\n    ) external view returns (bool);\\n\\n    /// @notice \u83b7\u53d6\u95e8\u6237\u8c03\u7528\u8005\u7684\u95e8\u6237\u7f16\u53f7\\n    /// @dev \u83b7\u53d6\u95e8\u6237\u8c03\u7528\u8005\u7684\u95e8\u6237\u7f16\u53f7\\n    function getGaterNo() external view returns (uint128);\\n\\n    /// @notice \u8c03\u7528\u8005\u83b7\u53d6\u4f20\u5165\u5730\u5740\u5bf9\u5e94\u7684\u95e8\u6237\u7f16\u53f7\\n    /// @dev \u8c03\u7528\u8005\u83b7\u53d6\u4f20\u5165\u5730\u5740\u5bf9\u5e94\u7684\u95e8\u6237\u7f16\u53f7\\n    function getGaterNoFromAddress(\\n        address _gateAddress\\n    ) external view returns (uint128);\\n\\n    /// @notice \u8c03\u7528\u8005\u83b7\u53d6\u95e8\u6237\u7f16\u53f7\u5bf9\u5e94\u7684\u95e8\u6237\u4fe1\u606f\\n    /// @dev \u8c03\u7528\u8005\u83b7\u53d6\u95e8\u6237\u7f16\u53f7\u5bf9\u5e94\u7684\u95e8\u6237\u4fe1\u606f\\n    function getGaterInfo(\\n        uint8 _gateNumber\\n    ) external view returns (LGate.Info memory);\\n\\n    /// @notice \u8c03\u7528\u8005\u83b7\u53d6\u95e8\u6237\u5730\u5740\u5bf9\u5e94\u7684\u95e8\u6237\u4fe1\u606f\\n    /// @dev \u8c03\u7528\u8005\u83b7\u53d6\u95e8\u6237\u5730\u5740\u5bf9\u5e94\u7684\u95e8\u6237\u4fe1\u606f\\n    function getGaterInfo(\\n        address _gateaddress\\n    ) external view returns (LGate.Info memory);\\n\\n    /// @notice \u901a\u8fc7\u95e8\u6237\u5730\u5740\u83b7\u53d6\u95e8\u6237\u8be6\u60c5\\n    /// @dev \u901a\u8fc7\u95e8\u6237\u5730\u5740\u83b7\u53d6\u95e8\u6237\u8be6\u60c5\\n    function getGaterDetailInfo(\\n        address _gateaddress\\n    ) external view returns (LGate.DetailInfo memory);\\n\\n    /// @notice \u901a\u8fc7\u95e8\u6237\u7f16\u53f7\u83b7\u53d6\u95e8\u6237\u8be6\u60c5\\n    /// @dev \u901a\u8fc7\u95e8\u6237\u7f16\u53f7\u83b7\u53d6\u95e8\u6237\u8be6\u60c5\\n    function getGaterDetailInfo(\\n        uint8 _gateNumber\\n    ) external view returns (LGate.DetailInfo memory);\\n\\n    /// @notice \u8c03\u7528\u8005\u83b7\u53d6\u5e02\u573a\u6700\u5927\u95e8\u6237\u7f16\u53f7\u3001\u6216\u8005\u662f\u4e0b\u4e00\u4e2a\u95e8\u6237\u7533\u8bf7\u8005\u7684\u7f16\u53f7\\n    /// @dev \u8c03\u7528\u8005\u83b7\u53d6\u5e02\u573a\u6700\u5927\u95e8\u6237\u7f16\u53f7\u3001\u6216\u8005\u662f\u4e0b\u4e00\u4e2a\u95e8\u6237\u7533\u8bf7\u8005\u7684\u7f16\u53f7\\n    function getMaxGateNumber() external view returns (uint128);\\n\\n    function marketorContractAddress() external view returns (address);\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Gator/IGatorV1MarketorActions.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\nimport \\\"../../libraries/base/LGate.sol\\\";\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IGatorV1MarketorActions {\\n    /// @notice \u5e02\u573a\u7ba1\u7406\u5458\u51bb\u7ed3\u95e8\u6237\\n    /// @dev \u5e02\u573a\u7ba1\u7406\u5458\u51bb\u7ed3\u95e8\u6237\\n    function lockGatebyMarketor(address _gatoraddress) external;\\n\\n    /// @notice \u5e02\u573a\u7ba1\u7406\u5458\u89e3\u51bb\u95e8\u6237\\n    /// @dev \u5e02\u573a\u7ba1\u7406\u5458\u89e3\u51bb\u95e8\u6237\\n    function unlockGatebyMarketor(address _gatoraddress) external;\\n\\n    /// @notice \u5e02\u573a\u7ba1\u7406\u5458\u66f4\u65b0\u95e8\u6237\\n    /// @dev \u5e02\u573a\u7ba1\u7406\u5458\u66f4\u65b0\u95e8\u6237\\n    function updateGatebyMarketor(LGate.Info memory _gator) external;\\n\\n    /// @notice \u5e02\u573a\u7ba1\u7406\u5458\u5220\u9664\u95e8\u6237\\n    /// @dev \u5e02\u573a\u7ba1\u7406\u5458\u5220\u9664\u95e8\u6237\\n    function delGatebyMarketor(address _gator) external;\\n\\n    /// @notice \u8bbe\u7f6e\u95e8\u6237\u5408\u7ea6\u7684\u7ba1\u7406\u5458\u5408\u7ea6\\n    /// @dev \u8bbe\u7f6e\u95e8\u6237\u5408\u7ea6\u7684\u7ba1\u7406\u5458\u5408\u7ea6\\n    function setGaterEnv(\\n        address _marketorContractAddress,\\n        address _marketCreator\\n    ) external;\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Gator/IGatorV1Immutables.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IGatorV1Immutables {\\n\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Gator/IGatorV1GatorActions.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\nimport \\\"../../libraries/base/LGate.sol\\\";\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IGatorV1GatorActions {\\n    /// @notice \u5e02\u573a\u8ba4\u8bc1\u540e\u7684\u95e8\u6237\u4e34\u65f6\u51bb\u7ed3\u81ea\u5df1\\n    /// @dev \u5e02\u573a\u8ba4\u8bc1\u540e\u7684\u95e8\u6237\u4e34\u65f6\u51bb\u7ed3\u81ea\u5df1\\n    function lockGatebyGater() external;\\n\\n    /// @notice \u5e02\u573a\u8ba4\u8bc1\u540e\u7684\u95e8\u6237\u4e34\u65f6\u89e3\u51bb\u81ea\u5df1\\n    /// @dev \u5e02\u573a\u8ba4\u8bc1\u540e\u7684\u95e8\u6237\u4e34\u65f6\u89e3\u51bb\u81ea\u5df1\\n    function unlockGatebyGater() external;\\n\\n    /// @notice \u5e02\u573a\u8ba4\u8bc1\u540e\u7684\u95e8\u6237\u4e34\u65f6\u66f4\u65b0\u81ea\u5df1\\n    /// @dev \u5e02\u573a\u8ba4\u8bc1\u540e\u7684\u95e8\u6237\u4e34\u65f6\u66f4\u65b0\u81ea\u5df1\\n    function updateGatebyGator(bytes32 _name) external;\\n\\n    function updatefullGater(\\n        LGate.Info memory _gator,\\n        LGate.DetailInfo memory _gatorDatailinfo\\n    ) external;\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Gator/IGatorV1Events.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IGatorV1Events {\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param gateAddress The address that minted the liquidity\\n    /// @param name The owner of the position and recipient of any minted liquidity\\n    event e_addGater(address gateAddress, bytes32 name);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param gateAddress The address that minted the liquidity\\n    /// @param name The owner of the position and recipient of any minted liquidity\\n    event e_updateGatebyGator(address gateAddress, bytes32 name);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param gateAddress The address that minted the liquidity\\n\\n    event e_unlockGatebyGater(address gateAddress);\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param gateAddress The address that minted the liquidity\\n\\n    event e_lockGatebyGater(address gateAddress);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param gateAddress The address that minted the liquidity\\n    /// @param marketoraddress The owner of the position and recipient of any minted liquidity\\n    event e_delGatebyMarketor(address gateAddress, address marketoraddress);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param gateAddress The address that minted the liquidity\\n    /// @param name The owner of the position and recipient of any minted liquidity\\n    /// @param marketoraddress The owner of the position and recipient of any minted liquidity\\n    event e_updateGatebyMarketor(\\n        address gateAddress,\\n        bytes32 name,\\n        address marketoraddress\\n    );\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param gateAddress The address that minted the liquidity\\n    /// @param marketoraddress The address that minted the liquidity\\n\\n    event e_unlockGatebyMarketor(address gateAddress, address marketoraddress);\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param gateAddress The address that minted the liquidity\\n    /// @param marketoraddress The address that minted the liquidity\\n\\n    event e_lockGatebyMarketor(address gateAddress, address marketoraddress);\\n\\n    event e_addGaterDetail(address gateaddress);\\n\\n    event e_updateGater(address, bytes32);\\n\\n    event e_updateGaterDetail(address);\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Gator/IGatorV1CustomerActions.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\nimport \\\"../../libraries/base/LGate.sol\\\";\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IGatorV1CustomerActions {\\n    /// @notice \u7533\u8bf7\u6210\u4e3a\u95e8\u6237\\n    /// @dev \u7533\u8bf7\u6210\u4e3a\u95e8\u6237\\n    function addGater(LGate.Info memory _gator) external;\\n\\n    /// @notice \u95e8\u6237\u6dfb\u52a0\u95e8\u6237\u8be6\u60c5\u4fe1\u606f(\u9700\u8981\u662f\u7533\u8bf7\u6210\u4e3a\u7684\u95e8\u6237\u7684\u5730\u5740\u624d\u80fd\u8c03\u7528)\\n    /// @dev \u95e8\u6237\u6dfb\u52a0\u95e8\u6237\u8be6\u60c5\u4fe1\u606f(\u9700\u8981\u662f\u7533\u8bf7\u6210\u4e3a\u7684\u95e8\u6237\u7684\u5730\u5740\u624d\u80fd\u8c03\u7528)\\n    function addGaterDetailInfo(LGate.DetailInfo memory) external;\\n\\n    function addfullGater(\\n        LGate.Info memory _gator,\\n        LGate.DetailInfo memory _gatorDatailinfo\\n    ) external;\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/ITTSwapV1Marketor.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Marketor/IMarketorV1Events.sol\\\";\\nimport \\\"./Marketor/IMarketorV1Immutables.sol\\\";\\nimport \\\"./Marketor/IMarketorV1MarketCreatorActions.sol\\\";\\nimport \\\"./Marketor/IMarketorV1State.sol\\\";\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface ITTSwapV1Marketor is\\n    IMarketorV1Events,\\n    IMarketorV1Immutables,\\n    IMarketorV1MarketCreatorActions,\\n    IMarketorV1State\\n{\\n\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Marketor/IMarketorV1MarketCreatorActions.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IMarketorV1MarketCreatorActions {\\n    function setMarketorByMarketCreator(address _owner) external;\\n\\n    /// @notice Explain to an end user what this does\\n    /// @dev Explain to a developer any extra details\\n    function delMarketorByMarketCreator(address _owner) external;\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Marketor/IMarketorV1Immutables.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IMarketorV1Immutables {\\n\\n}\\n\"\r\n    },\r\n    \"Contracts/interfaces/Marketor/IMarketorV1Events.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IMarketorV1Events {\\n    event e_setMarketorByMarketCreator(address);\\n    event e_delMarketorByMarketCreator(address);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketorContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketCreator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"e_addGater\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gateaddress\",\"type\":\"address\"}],\"name\":\"e_addGaterDetail\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"marketoraddress\",\"type\":\"address\"}],\"name\":\"e_delGatebyMarketor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"}],\"name\":\"e_lockGatebyGater\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"marketoraddress\",\"type\":\"address\"}],\"name\":\"e_lockGatebyMarketor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"}],\"name\":\"e_unlockGatebyGater\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"marketoraddress\",\"type\":\"address\"}],\"name\":\"e_unlockGatebyMarketor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"e_updateGatebyGator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"marketoraddress\",\"type\":\"address\"}],\"name\":\"e_updateGatebyMarketor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"e_updateGater\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"e_updateGaterDetail\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"gateNo\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"createtimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"_gator\",\"type\":\"tuple\"}],\"name\":\"addGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"full_name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"country\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalIp\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"twriterUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bbsUrl\",\"type\":\"bytes32\"}],\"internalType\":\"struct LGate.DetailInfo\",\"name\":\"_gatorDatailinfo\",\"type\":\"tuple\"}],\"name\":\"addGaterDetailInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"gateNo\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"createtimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"_gator\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"full_name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"country\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalIp\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"twriterUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bbsUrl\",\"type\":\"bytes32\"}],\"internalType\":\"struct LGate.DetailInfo\",\"name\":\"_gatorDatailinfo\",\"type\":\"tuple\"}],\"name\":\"addfullGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gator\",\"type\":\"address\"}],\"name\":\"delGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gateDetailList\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"full_name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"country\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalIp\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"twriterUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bbsUrl\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gateList\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"gateNo\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"createtimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"gateNumbers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_gateNumber\",\"type\":\"uint8\"}],\"name\":\"getGaterDetailInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"full_name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"country\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalIp\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"twriterUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bbsUrl\",\"type\":\"bytes32\"}],\"internalType\":\"struct LGate.DetailInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"getGaterDetailInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"full_name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"country\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalIp\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"twriterUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bbsUrl\",\"type\":\"bytes32\"}],\"internalType\":\"struct LGate.DetailInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateaddress\",\"type\":\"address\"}],\"name\":\"getGaterInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"gateNo\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"createtimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_gateNumber\",\"type\":\"uint8\"}],\"name\":\"getGaterInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"gateNo\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"createtimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGaterNo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateAddress\",\"type\":\"address\"}],\"name\":\"getGaterNoFromAddress\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxGateNumber\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isValidGator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"isValidGator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vgaddress\",\"type\":\"address\"}],\"name\":\"isValidGatorFromAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vgaddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"webaddress\",\"type\":\"bytes32\"}],\"name\":\"isValidGatorWebFromAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockGatebyGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gatoraddress\",\"type\":\"address\"}],\"name\":\"lockGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketorContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxGateNumbers\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketorContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketCreator\",\"type\":\"address\"}],\"name\":\"setGaterEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockGatebyGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gatoraddress\",\"type\":\"address\"}],\"name\":\"unlockGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"updateGatebyGator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"gateNo\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"createtimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"_gator\",\"type\":\"tuple\"}],\"name\":\"updateGatebyMarketor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"gateNo\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"gateAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"createtimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"marketunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"gateunlock\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isUsed\",\"type\":\"bool\"}],\"internalType\":\"struct LGate.Info\",\"name\":\"_gator\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"full_name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"country\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalWebsite\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"OfficalIp\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"twriterUrl\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bbsUrl\",\"type\":\"bytes32\"}],\"internalType\":\"struct LGate.DetailInfo\",\"name\":\"_gatorDatailinfo\",\"type\":\"tuple\"}],\"name\":\"updatefullGater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TTSwapV1Gator", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000003987f9d79909468ce4eaf960df1818c91289959b000000000000000000000000ac09dacf87ed845eb4ce5e9967304d4e84dadf65", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}