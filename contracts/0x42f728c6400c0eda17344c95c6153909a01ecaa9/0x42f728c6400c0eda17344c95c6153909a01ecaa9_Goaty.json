{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function decimals() external view returns (uint8);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function name() external view returns (string memory);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    function allowance(\r\n        address _owner,\r\n        address spender\r\n    ) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\ninterface IDEXRouter {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n\r\ninterface IDEXFactory {\r\n    function createPair(\r\n        address tokenA,\r\n        address tokenB\r\n    ) external returns (address pair);\r\n}\r\n\r\ncontract Goaty is IERC20 {\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private constant _decimals = 18;\r\n    uint256 private _totalSupply;\r\n    \r\n    uint256 public sellTaxPercent = 5; // Initial value of 5%. This means a 5% tax on selling.\r\n    mapping(address => bool) public isExcludedFromFees;\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    // Add a mapping to track if an address has bought\r\n    mapping(address => bool) public hasBought;\r\n\r\n    // Counter to keep track of the number of unique buyers\r\n    uint256 public buyerCount = 0;\r\n\r\n    \r\n    address public owner;\r\n    address public constant feeWallet =\r\n        0x1e316b28Bd973B50A266e879D079F18331429227;\r\n    address public constant marketingWallet =\r\n        0x1e316b28Bd973B50A266e879D079F18331429227;\r\n    address public constant liquidityWallet = \r\n        0x22291C80E9Cd65befcb26422d5076671263cC37b;\r\n    address public constant pinkSaleWallet = \r\n        0xB803b0E5E7457B135085E896FD7A3398b266cd43;\r\n \r\n    address public immutable pair;\r\n    address public immutable router;\r\n    address public immutable WETH;\r\n\r\n    bool private isSwapping;\r\n\r\n    modifier onlyDeployer() {\r\n        require(msg.sender == owner, \"Only the owner can do that\");\r\n        _;\r\n    }\r\n\r\n   \r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n        _name = \"Goaty\";\r\n        _symbol = \"GOATY\";\r\n\r\n        _totalSupply = 34_063_405_752_664 * (10 ** _decimals);\r\n        router = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D; // Uniswap V2 router\r\n\r\n        WETH = IDEXRouter(router).WETH();\r\n\r\n        pair = IDEXFactory(IDEXRouter(router).factory()).createPair(\r\n            address(this),\r\n            WETH\r\n        );\r\n\r\n        isExcludedFromFees[owner] = true;\r\n        isExcludedFromFees[marketingWallet] = true;\r\n        isExcludedFromFees[pinkSaleWallet] = true;\r\n        isExcludedFromFees[liquidityWallet] = true;\r\n  \r\n\r\n        _balances[owner] = _totalSupply;\r\n        emit Transfer(address(0), owner, _totalSupply);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function name() public view override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function decimals() public pure override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function symbol() public view override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function rescueEth(uint256 amount) external onlyDeployer {\r\n        (bool success, ) = address(owner).call{value: amount}(\"\");\r\n        success = true;\r\n    }\r\n\r\n    function setSellTaxPercent(uint256 newSellTax) external onlyDeployer {\r\n    require(newSellTax <= 100, \"Tax cannot be more than 100%\");\r\n    sellTaxPercent = newSellTax;\r\n}\r\n\r\n    function swapAllContractTokensForEth() internal {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = WETH;\r\n\r\n        uint256 tokenAmount = _balances[address(this)];\r\n\r\n        if (tokenAmount > 0) {\r\n            _allowances[address(this)][router] += tokenAmount;\r\n            // Swap all the GOATY balance to ETH\r\n            IDEXRouter(router)\r\n                .swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                    tokenAmount,\r\n                    0,\r\n                    path,\r\n                    feeWallet,\r\n                    block.timestamp\r\n                );\r\n        }\r\n    }\r\n\r\n    function rescueToken(address token, uint256 amount) external onlyDeployer {\r\n        IERC20(token).transfer(owner, amount);\r\n    }\r\n\r\n    function allowance(\r\n        address holder,\r\n        address spender\r\n    ) public view override returns (uint256) {\r\n        return _allowances[holder][spender];\r\n    }\r\n\r\n    function transfer(\r\n        address recipient,\r\n        uint256 amount\r\n    ) external override returns (bool) {\r\n        return _transferFrom(msg.sender, recipient, amount);\r\n    }\r\n\r\n    function approveMax(address spender) public returns (bool) {\r\n        return approve(spender, type(uint256).max);\r\n    }\r\n\r\n    function approve(\r\n        address spender,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        require(spender != address(0), \"NO_ZERO\");\r\n        _allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(\r\n        address spender,\r\n        uint256 addedValue\r\n    ) public returns (bool) {\r\n        require(spender != address(0), \"NO_ZERO\");\r\n        _allowances[msg.sender][spender] =\r\n            allowance(msg.sender, spender) +\r\n            addedValue;\r\n        emit Approval(msg.sender, spender, _allowances[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(\r\n        address spender,\r\n        uint256 subtractedValue\r\n    ) public returns (bool) {\r\n        require(spender != address(0), \"NO_ZERO\");\r\n        require(\r\n            allowance(msg.sender, spender) >= subtractedValue,\r\n            \"INSUFF_ALLOWANCE\"\r\n        );\r\n        _allowances[msg.sender][spender] =\r\n            allowance(msg.sender, spender) -\r\n            subtractedValue;\r\n        emit Approval(msg.sender, spender, _allowances[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external override returns (bool) {\r\n        if (_allowances[sender][msg.sender] != type(uint256).max) {\r\n            require(\r\n                _allowances[sender][msg.sender] >= amount,\r\n                \"INSUFF_ALLOWANCE\"\r\n            );\r\n            _allowances[sender][msg.sender] -= amount;\r\n            emit Approval(sender, msg.sender, _allowances[sender][msg.sender]);\r\n        }\r\n        return _transferFrom(sender, recipient, amount);\r\n    }\r\n\r\n  function _transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n) internal returns (bool) {\r\n   \r\n    // If it's a buy, check if should automatically blacklist the buyer\r\n    if (sender == pair) {\r\n        // Check if the buyer has bought before\r\n        if(!hasBought[recipient]){\r\n            hasBought[recipient] = true;\r\n            buyerCount += 1;\r\n        }\r\n    }\r\n\r\n    // If not tax-free\r\n    if (!checkTaxFree(sender, recipient)) {\r\n        // 20% tax on sells for the first 10 buyers\r\n        if (hasBought[sender] && buyerCount <= 10 && recipient == pair) {\r\n            _lowGasTransfer(sender, address(this), amount * 20 / 100);\r\n            amount = (amount * 80) / 100;\r\n        }\r\n        // Default sell tax\r\n        else if (recipient == pair) { // Additional condition to ensure it's a sell\r\n            _lowGasTransfer(sender, address(this), amount * sellTaxPercent / 100);\r\n            amount = (amount * (100 - sellTaxPercent)) / 100;\r\n        }\r\n    }\r\n\r\n    if (!isSwapping && sender != pair) {\r\n        isSwapping = true;\r\n        swapAllContractTokensForEth();\r\n        isSwapping = false;\r\n    }\r\n\r\n    return _lowGasTransfer(sender, recipient, amount);\r\n}\r\n\r\n    function checkTaxFree(\r\n        address sender,\r\n        address recipient\r\n    ) internal view returns (bool) {\r\n        if (isSwapping) return true;\r\n        if (isExcludedFromFees[sender] || isExcludedFromFees[recipient])\r\n            return true;\r\n        if (sender == pair || recipient == pair) return false;\r\n        return true;\r\n    }\r\n\r\n    function _lowGasTransfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal returns (bool) {\r\n        require(sender != address(0), \"Can't use zero addresses here\");\r\n        require(\r\n            amount <= _balances[sender],\r\n            \"Can't transfer more than you own\"\r\n        );\r\n        if (amount == 0) return true;\r\n        _balances[sender] -= amount;\r\n        _balances[recipient] += amount;\r\n        emit Transfer(sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function excludeFromFees(\r\n        address excludedWallet,\r\n        bool status\r\n    ) external onlyDeployer {\r\n        isExcludedFromFees[excludedWallet] = status;\r\n    }\r\n\r\n    function renounceOwnership() external onlyDeployer {\r\n        owner = address(0);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"approveMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"excludedWallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"excludeFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasBought\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pinkSaleWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTaxPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSellTax\",\"type\":\"uint256\"}],\"name\":\"setSellTaxPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Goaty", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7b86b576036c0ca993e8e313ddef26492fa78edbc91d668626635b1e070f8809"}