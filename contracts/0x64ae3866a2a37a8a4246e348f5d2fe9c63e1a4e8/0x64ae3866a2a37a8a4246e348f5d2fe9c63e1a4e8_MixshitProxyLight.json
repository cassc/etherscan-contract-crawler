{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface IMixshitInstance {\r\n  function token() external view returns (address);\r\n\r\n  function denomination() external view returns (uint256);\r\n\r\n  function deposit(bytes32 commitment) external payable;\r\n\r\n  function withdraw(\r\n    bytes calldata proof,\r\n    bytes32 root,\r\n    bytes32 nullifierHash,\r\n    address payable recipient,\r\n    address payable relayer,\r\n    uint256 fee,\r\n    uint256 refund\r\n  ) external payable;\r\n}\r\n\r\n\r\ncontract MixshitProxyLight {\r\n  event EncryptedNote(address indexed sender, bytes encryptedNote);\r\n\r\n  function deposit(\r\n    IMixshitInstance _mixshit,\r\n    bytes32 _commitment,\r\n    bytes calldata _encryptedNote\r\n  ) external payable {\r\n    _mixshit.deposit{ value: msg.value }(_commitment);\r\n    emit EncryptedNote(msg.sender, _encryptedNote);\r\n  }\r\n\r\n  function withdraw(\r\n    IMixshitInstance _mixshit,\r\n    bytes calldata _proof,\r\n    bytes32 _root,\r\n    bytes32 _nullifierHash,\r\n    address payable _recipient,\r\n    address payable _relayer,\r\n    uint256 _fee,\r\n    uint256 _refund\r\n  ) external payable {\r\n    _mixshit.withdraw{ value: msg.value }(_proof, _root, _nullifierHash, _recipient, _relayer, _fee, _refund);\r\n  }\r\n\r\n  function backupNotes(bytes[] calldata _encryptedNotes) external {\r\n    for (uint256 i = 0; i < _encryptedNotes.length; i++) {\r\n      emit EncryptedNote(msg.sender, _encryptedNotes[i]);\r\n    }\r\n  }\r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedNote\",\"type\":\"bytes\"}],\"name\":\"EncryptedNote\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_encryptedNotes\",\"type\":\"bytes[]\"}],\"name\":\"backupNotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMixshitInstance\",\"name\":\"_mixshit\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_encryptedNote\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMixshitInstance\",\"name\":\"_mixshit\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "MixshitProxyLight", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://a2bc7700f622149df8574ab4f906112fae908f9dbd0769591cd104667a44997b"}