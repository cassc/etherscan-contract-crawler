{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/vaults/PermissionsFacet.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IPermissionsFacet.sol\\\";\\n\\ncontract PermissionsFacet is IPermissionsFacet {\\n    error Forbidden();\\n    error InvalidState();\\n    error Initialized();\\n\\n    uint256 public constant ADMIN_ROLE_MASK = 1 << 255;\\n    bytes32 public constant STORAGE_POSITION = keccak256(\\\"mellow.contracts.permissions.storage\\\");\\n\\n    function _contractStorage() internal pure returns (IPermissionsFacet.Storage storage ds) {\\n        bytes32 position = STORAGE_POSITION;\\n\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    function initializePermissionsFacet(address admin) external override {\\n        if (permissionsInitialized()) revert Initialized();\\n        IPermissionsFacet.Storage storage ds = _contractStorage();\\n        ds.initialized = true;\\n        ds.userRoles[admin] = ADMIN_ROLE_MASK;\\n    }\\n\\n    modifier authorized() {\\n        requirePermission(msg.sender, address(this), msg.sig);\\n        _;\\n    }\\n\\n    function hasPermission(\\n        address user,\\n        address contractAddress,\\n        bytes4 signature\\n    ) public view override returns (bool) {\\n        IPermissionsFacet.Storage storage ds = _contractStorage();\\n        uint256 roleSet = ds.userRoles[user] | ds.publicRoles;\\n        if ((roleSet & ADMIN_ROLE_MASK) > 0) return true;\\n        if ((roleSet & ds.allowAllSignaturesRoles[contractAddress]) > 0) return true;\\n        if ((roleSet & ds.allowSignatureRoles[contractAddress][signature]) > 0) return true;\\n        return false;\\n    }\\n\\n    function requirePermission(address user, address contractAddress, bytes4 signature) public view override {\\n        if (!hasPermission(user, contractAddress, signature)) {\\n            revert Forbidden();\\n        }\\n    }\\n\\n    function grantPublicRole(uint8 role) external override authorized {\\n        IPermissionsFacet.Storage storage ds = _contractStorage();\\n        ds.publicRoles |= 1 << role;\\n    }\\n\\n    function revokePublicRole(uint8 role) external override authorized {\\n        IPermissionsFacet.Storage storage ds = _contractStorage();\\n        ds.publicRoles &= ~(1 << role);\\n    }\\n\\n    function grantRole(address user, uint8 role) external override authorized {\\n        IPermissionsFacet.Storage storage ds = _contractStorage();\\n        ds.userRoles[user] |= 1 << role;\\n    }\\n\\n    function revokeRole(address user, uint8 role) external override authorized {\\n        IPermissionsFacet.Storage storage ds = _contractStorage();\\n        ds.userRoles[user] &= ~(1 << role);\\n    }\\n\\n    function grantContractRole(address contractAddress, uint8 role) external override authorized {\\n        IPermissionsFacet.Storage storage ds = _contractStorage();\\n        ds.allowAllSignaturesRoles[contractAddress] |= 1 << role;\\n    }\\n\\n    function revokeContractRole(address contractAddress, uint8 role) external override authorized {\\n        IPermissionsFacet.Storage storage ds = _contractStorage();\\n        ds.allowAllSignaturesRoles[contractAddress] &= ~(1 << role);\\n    }\\n\\n    function grantContractSignatureRole(\\n        address contractAddress,\\n        bytes4 signature,\\n        uint8 role\\n    ) external override authorized {\\n        IPermissionsFacet.Storage storage ds = _contractStorage();\\n        ds.allowSignatureRoles[contractAddress][signature] |= 1 << role;\\n    }\\n\\n    function revokeContractSignatureRole(\\n        address contractAddress,\\n        bytes4 signature,\\n        uint8 role\\n    ) external override authorized {\\n        IPermissionsFacet.Storage storage ds = _contractStorage();\\n        ds.allowSignatureRoles[contractAddress][signature] &= ~(1 << role);\\n    }\\n\\n    function userRoles(address user) external view override returns (uint256) {\\n        return _contractStorage().userRoles[user];\\n    }\\n\\n    function publicRoles() external view override returns (uint256) {\\n        return _contractStorage().publicRoles;\\n    }\\n\\n    function allowAllSignaturesRoles(address contractAddress) external view override returns (uint256) {\\n        return _contractStorage().allowAllSignaturesRoles[contractAddress];\\n    }\\n\\n    function allowSignatureRoles(address contractAddress, bytes4 selector) external view override returns (uint256) {\\n        return _contractStorage().allowSignatureRoles[contractAddress][selector];\\n    }\\n\\n    function permissionsInitialized() public view override returns (bool) {\\n        return _contractStorage().initialized;\\n    }\\n\\n    function permissionsSelectors() external pure override returns (bytes4[] memory selectors_) {\\n        selectors_ = new bytes4[](17);\\n        selectors_[0] = IPermissionsFacet.permissionsInitialized.selector;\\n        selectors_[1] = IPermissionsFacet.permissionsSelectors.selector;\\n        selectors_[2] = IPermissionsFacet.initializePermissionsFacet.selector;\\n        selectors_[3] = IPermissionsFacet.hasPermission.selector;\\n        selectors_[4] = IPermissionsFacet.grantPublicRole.selector;\\n        selectors_[5] = IPermissionsFacet.revokePublicRole.selector;\\n        selectors_[6] = IPermissionsFacet.grantContractSignatureRole.selector;\\n        selectors_[7] = IPermissionsFacet.revokeContractSignatureRole.selector;\\n        selectors_[8] = IPermissionsFacet.grantRole.selector;\\n        selectors_[9] = IPermissionsFacet.revokeRole.selector;\\n        selectors_[10] = IPermissionsFacet.userRoles.selector;\\n        selectors_[11] = IPermissionsFacet.publicRoles.selector;\\n        selectors_[12] = IPermissionsFacet.allowAllSignaturesRoles.selector;\\n        selectors_[13] = IPermissionsFacet.allowSignatureRoles.selector;\\n        selectors_[14] = IPermissionsFacet.requirePermission.selector;\\n        selectors_[15] = IPermissionsFacet.grantContractRole.selector;\\n        selectors_[16] = IPermissionsFacet.revokeContractRole.selector;\\n    }\\n}\\n\"\r\n    },\r\n    \"src/vaults/interfaces/IPermissionsFacet.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\ninterface IPermissionsFacet {\\n    struct Storage {\\n        bool initialized;\\n        mapping(address => uint256) userRoles;\\n        uint256 publicRoles;\\n        mapping(address => uint256) allowAllSignaturesRoles;\\n        mapping(address => mapping(bytes4 => uint256)) allowSignatureRoles;\\n    }\\n\\n    function initializePermissionsFacet(address admin) external;\\n\\n    function hasPermission(address user, address contractAddress, bytes4 signature) external view returns (bool);\\n\\n    function requirePermission(address user, address contractAddress, bytes4 signature) external;\\n\\n    function grantPublicRole(uint8 role) external;\\n\\n    function revokePublicRole(uint8 role) external;\\n\\n    function grantContractRole(address contractAddress, uint8 role) external;\\n\\n    function revokeContractRole(address contractAddress, uint8 role) external;\\n\\n    function grantContractSignatureRole(address contractAddress, bytes4 signature, uint8 role) external;\\n\\n    function revokeContractSignatureRole(address contractAddress, bytes4 signature, uint8 role) external;\\n\\n    function grantRole(address user, uint8 role) external;\\n\\n    function revokeRole(address user, uint8 role) external;\\n\\n    function userRoles(address user) external view returns (uint256);\\n\\n    function publicRoles() external view returns (uint256);\\n\\n    function allowAllSignaturesRoles(address contractAddress) external view returns (uint256);\\n\\n    function allowSignatureRoles(address contractAddress, bytes4 selector) external view returns (uint256);\\n\\n    function permissionsInitialized() external view returns (bool);\\n\\n    function permissionsSelectors() external view returns (bytes4[] memory selectors_);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\r\n      \"ds-test/=lib/forge-std/lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"@diamond-3-hardhat/=lib/diamond-3-hardhat/contracts/\",\r\n      \"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\r\n      \"@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\r\n      \"@solmate/=lib/solmate/\",\r\n      \"@zodiac/=lib/zodiac/contracts/\",\r\n      \"@mellow-vaults/=lib/mellow-vaults/\",\r\n      \"@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\r\n      \"diamond-3-hardhat/=lib/diamond-3-hardhat/contracts/\",\r\n      \"erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\r\n      \"openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\r\n      \"openzeppelin-contracts/=lib/openzeppelin-contracts/\",\r\n      \"openzeppelin/=lib/openzeppelin-contracts/contracts/\",\r\n      \"safe-contracts/=lib/safe-contracts/\",\r\n      \"solmate/=lib/solmate/src/\",\r\n      \"zodiac/=lib/zodiac/contracts/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200,\r\n      \"details\": {\r\n        \"yul\": true,\r\n        \"yulDetails\": {\r\n          \"stackAllocation\": true\r\n        }\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"paris\",\r\n    \"libraries\": {\r\n      \"src/helpers/OracleHelperLibrary.sol\": {\r\n        \"OracleHelperLibrary\": \"0xd0bcb86dc6382e580c02d096f4342e17432b9175\"\r\n      },\r\n      \"src/libraries/UniswapCalculations.sol\": {\r\n        \"UniswapCalculations\": \"0x7de2de9afa84304fac0133e974a76787d89ae946\"\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"Forbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE_MASK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STORAGE_POSITION\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"allowAllSignaturesRoles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"allowSignatureRoles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"grantContractRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"signature\",\"type\":\"bytes4\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"grantContractSignatureRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"grantPublicRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"signature\",\"type\":\"bytes4\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"initializePermissionsFacet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionsInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionsSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"selectors_\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicRoles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"signature\",\"type\":\"bytes4\"}],\"name\":\"requirePermission\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"revokeContractRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"signature\",\"type\":\"bytes4\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"revokeContractSignatureRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"revokePublicRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userRoles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "PermissionsFacet", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "paris", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}