{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"SuperBowlBet.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\n/**\\nBet on the outcome of Superbowl 58!\\nNo KYC\\nNo age verification\\nBet at least 0.01 ether\\nBet by 7:30 PM EST (1 hour after start of Super Bowl)\\nWinner will be published as soon as game ends\\n\\nPlace a bet on either the 49ers or the Chiefs with a 0.5% creator fee.\\n\\nWin a proportional share of the prize pool.\\nClaim amount = PrizePool * (yourr bet.amount/WinnerTotal)\\n\\n49ers = Team 1\\nChiefs = Team 2\\n*/\\ncontract SuperBowl58Bet {\\n    event BetPlaced(address user, uint248 amount, uint8 winner);\\n    event BetClaimed(address user, uint256 amount);\\n    event WinnerPublished(string team, uint8 winner);\\n\\n    struct Bet {\\n        uint248 amount;\\n        uint8 team;\\n    }\\n\\n    uint256 public FortyNinersTotal = 0;\\n    uint256 public ChiefsTotal = 0;\\n    uint256 public PrizePool = 0;\\n\\n    uint248 private ownerFees = 0;\\n    uint8 private winner = 0;\\n    mapping(address => Bet) private bets;\\n\\n    function placeBet(uint8 _winner) external payable {\\n        require(_winner == 1 || _winner == 2, \\\"Not in superbowl\\\");\\n        require(block.timestamp <= 1707697800, \\\"Too late\\\"); // 7:30 PM EST in Unix timestamp format (1 hour after start)\\n\\n        require(msg.value >= 0.01 ether, \\\"Bet more\\\");\\n        require(bets[msg.sender].amount == 0, \\\"1 bet per person\\\");\\n\\n        unchecked {\\n            uint256 betFee = (msg.value * 0.5e4) / 1e6; // 5/1000th of bet goes to creator\\n            uint256 betTotal = uint248(msg.value - betFee);\\n            ownerFees += uint248(betFee);\\n\\n            if (_winner == 1) {\\n                FortyNinersTotal += betTotal;\\n            } else {\\n                ChiefsTotal += betTotal;\\n            }\\n            PrizePool += betTotal;\\n            Bet memory bet = Bet({amount: uint248(betTotal), team: _winner});\\n            bets[msg.sender] = bet;\\n\\n            emit BetPlaced(msg.sender, uint248(betTotal), _winner);\\n        }\\n    }\\n\\n    function claimBet() external {\\n        require(winner != 0, \\\"Winner undecided\\\");\\n\\n        Bet memory bet = bets[msg.sender];\\n        require(bet.amount > 0, \\\"Did not bet\\\");\\n        require(winner == bet.team, \\\"Did not win\\\");\\n\\n        unchecked {\\n            delete bets[msg.sender];\\n\\n            uint256 share = (PrizePool * bet.amount);\\n            if (winner == 1) {\\n                share /= FortyNinersTotal;\\n            } else {\\n                share /= ChiefsTotal;\\n            }\\n\\n            (bool success, ) = msg.sender.call{value: share}(\\\"\\\");\\n            require(success, \\\"Call failed\\\");\\n            emit BetClaimed(msg.sender, share);\\n        }\\n    }\\n\\n    function publishResults(uint8 _winner) external {\\n        require(msg.sender == 0x577C46cD6388E2F5DadDE371B1a28b23182314B3);\\n        require(_winner == 1 || _winner == 2, \\\"Not in superbowl\\\");\\n        require(winner == 0, \\\"Winner already decided\\\");\\n        winner = _winner;\\n        emit WinnerPublished(_winner == 1 ? \\\"49ers\\\" : \\\"chiefs\\\", _winner);\\n    }\\n\\n    function claimFees() public {\\n        require(msg.sender == 0x577C46cD6388E2F5DadDE371B1a28b23182314B3);\\n        uint256 _ownerFees = ownerFees;\\n        ownerFees = 0;\\n        (bool success, ) = msg.sender.call{value: _ownerFees}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function stop() public {\\n        require(msg.sender == 0x577C46cD6388E2F5DadDE371B1a28b23182314B3);\\n        require(block.timestamp >= 1708299000); // 1 week after start of Super Bowl\\n\\n        selfdestruct(payable(msg.sender));\\n    }\\n\\n    constructor() payable {\\n        PrizePool += msg.value;\\n    }\\n\\n    receive() external payable {\\n        PrizePool += msg.value;\\n    }\\n\\n    fallback() external payable {\\n        PrizePool += msg.value;\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BetClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint248\",\"name\":\"amount\",\"type\":\"uint248\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"winner\",\"type\":\"uint8\"}],\"name\":\"BetPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"team\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"winner\",\"type\":\"uint8\"}],\"name\":\"WinnerPublished\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"ChiefsTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FortyNinersTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PrizePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimBet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_winner\",\"type\":\"uint8\"}],\"name\":\"placeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_winner\",\"type\":\"uint8\"}],\"name\":\"publishResults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "SuperBowl58Bet", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}