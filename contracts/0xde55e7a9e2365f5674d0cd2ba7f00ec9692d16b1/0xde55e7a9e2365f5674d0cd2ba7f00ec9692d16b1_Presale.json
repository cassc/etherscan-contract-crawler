{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.18;\r\n\r\n\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface IERC20_USDT {\r\n    function transferFrom(address from, address to, uint value) external;\r\n}\r\n\r\ncontract Presale {\r\n\r\n    address public tokenAddress;\r\n    address public usdtAddress;\r\n    address public admin;\r\n    address public operator;\r\n    bool public isOpen;\r\n    uint256 public startTimestamp;\r\n    uint256 public endTimestamp;\r\n    uint256 public stageEndTimeStamp;\r\n    uint256 public timeUnit;\r\n    uint256 public tokensPerUsdt;\r\n    \r\n    constructor() {\r\n\r\n        tokenAddress = 0x898C66702D4B60C0F7B83bBf6E1De900e8CbD0A0;\r\n        usdtAddress  = 0xdAC17F958D2ee523a2206206994597C13D831ec7;\r\n        admin        =  0xe9c831280D96dBFa20B8c01E5C49993BBbb74a0e; \r\n        operator     = msg.sender;\r\n        tokensPerUsdt = 1000; // 0.001 USDT\r\n        timeUnit = 7 days;\r\n    }\r\n\r\n    event StartedPresale(uint256 startTimestamp);\r\n    event UpdatedEndTime(uint256 endTimestamp);\r\n    event UpdatedStage(uint256 tokensPerUsdt, uint256 stageEndTimeStamp);\r\n    event UpdateAdmin(address newAdmin);\r\n\r\n    function contribute(uint256 usdtAmount) external {\r\n        uint256 _allowance = IERC20(usdtAddress).allowance(msg.sender, address(this));\r\n        require(_allowance >= usdtAmount, \"No enough allowance available\");\r\n        require(usdtAmount > 0, \"Contribution amount must be greater than 0\");\r\n        require(isOpen, \"Not opened\");\r\n        require(block.timestamp <= endTimestamp, \"Presale Time is over\");\r\n        IERC20_USDT(usdtAddress).transferFrom(msg.sender, admin, usdtAmount);\r\n        uint256 tokensAmount = tokensPerUsdt*usdtAmount*(10**12);\r\n        IERC20(tokenAddress).transfer(msg.sender, tokensAmount);\r\n    }\r\n\r\n    function getState(address user) public view returns(uint256, uint256, uint256, uint256) {\r\n        uint256 usdtBal = IERC20(usdtAddress).balanceOf(user);\r\n        uint256 tokenBal = IERC20(tokenAddress).balanceOf(user);\r\n        uint256 stage = getStage();\r\n        return(usdtBal, tokenBal, stage, endTimestamp);\r\n    }\r\n\r\n    function startPresale() external {\r\n        require(msg.sender==operator, \"Only operator is Authorize\");\r\n        require(!isOpen, \"already opened\");\r\n        isOpen = true;\r\n        uint256 _periodInSeconds = 60 days;\r\n        startTimestamp = block.timestamp;\r\n        endTimestamp = block.timestamp+(_periodInSeconds);\r\n        stageEndTimeStamp = block.timestamp+timeUnit;\r\n        emit StartedPresale(block.timestamp);\r\n    }\r\n\r\n    function getStage() public view returns(uint256) {\r\n        uint256 span = block.timestamp-startTimestamp;\r\n        uint fac = span/(timeUnit);\r\n        if(fac>8) { fac = 8; }\r\n        return fac;\r\n    }\r\n\r\n    function updateStage(uint256 _tokensPerUsdt, uint256 _stageEndTimeStamp) external {\r\n        require(msg.sender == operator, \"Only operator is Authorize\");\r\n        tokensPerUsdt = _tokensPerUsdt;\r\n        stageEndTimeStamp = _stageEndTimeStamp;\r\n        emit UpdatedStage(tokensPerUsdt, stageEndTimeStamp);\r\n    }\r\n\r\n    function updateEndTime(uint256 _endTimestamp) external {\r\n        require(msg.sender == operator, \"Only operator is Authorize\");\r\n        require(block.timestamp <= _endTimestamp, \"wrong timestamp\");\r\n        endTimestamp = _endTimestamp;\r\n        emit UpdatedEndTime(endTimestamp);   \r\n    }\r\n\r\n    function pause() external {\r\n        require(msg.sender == operator, \"Only operator is Authorize\");\r\n        isOpen = !isOpen;\r\n    }\r\n\r\n    function getRestTokens(address to) external {\r\n        require(msg.sender == operator, \"Only operator is Authorize\");\r\n        require(block.timestamp > endTimestamp, \"Not ended\");\r\n        IERC20(tokenAddress).transfer(to, IERC20(tokenAddress).balanceOf(address(this)));\r\n    }\r\n\r\n    function updateAdminAddress(address _admin) external {\r\n        require(msg.sender == operator, \"Only operator is Authorize\");\r\n        require(admin != _admin, \"Same address\");\r\n        admin = _admin;\r\n        emit UpdateAdmin(admin);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"name\":\"StartedPresale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"UpdateAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"}],\"name\":\"UpdatedEndTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensPerUsdt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stageEndTimeStamp\",\"type\":\"uint256\"}],\"name\":\"UpdatedStage\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"}],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"getRestTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stageEndTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerUsdt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"updateAdminAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endTimestamp\",\"type\":\"uint256\"}],\"name\":\"updateEndTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensPerUsdt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stageEndTimeStamp\",\"type\":\"uint256\"}],\"name\":\"updateStage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Presale", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4577fdaf1186007106610caa75feba8f60adb2b8c4cf67fa9816ad4ccbc8c5e0"}