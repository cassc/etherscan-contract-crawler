{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/Darknet.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BUSL-1.1\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n//An oracle that provides prices for different LSDs\\r\\n//NOTE: This is the rate quoted by the LSDs contracts, no pricing of market impact and liquidity risk is calculated\\r\\n\\r\\ninterface IsfrxETH {\\r\\n    function pricePerShare() external view returns (uint256);\\r\\n}\\r\\n\\r\\ninterface IrETH {\\r\\n    function getExchangeRate() external view returns (uint256);\\r\\n}\\r\\n\\r\\ninterface IWStETH {\\r\\n    function stEthPerToken() external view returns (uint256);\\r\\n}\\r\\n\\r\\ninterface IcbETH {\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n}\\r\\n\\r\\ninterface IankrETH {\\r\\n    function sharesToBonds(uint256) external view returns (uint256);\\r\\n}\\r\\n\\r\\ninterface IswETH {\\r\\n    function swETHToETHRate() external view returns (uint256);\\r\\n}\\r\\n\\r\\ninterface IethxOracle {\\r\\n    function exchangeRate() external view returns (uint256 reportingBlockNumber, uint256 totalETHBalance, uint256 totalETHXSupply);\\r\\n}\\r\\n\\r\\ncontract Darknet {\\r\\n    address public constant sfrxETHAddress = 0xac3E018457B222d93114458476f3E3416Abbe38F;\\r\\n    address public constant rETHAddress = 0xae78736Cd615f374D3085123A210448E74Fc6393;\\r\\n    address public constant wstETHAddress = 0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0;\\r\\n    address public constant cbETHAddress = 0xBe9895146f7AF43049ca1c1AE358B0541Ea49704;\\r\\n    address public constant wethAddress = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\r\\n    address public constant ankrETHAddress = 0xE95A203B1a91a908F9B9CE46459d101078c2c3cb;\\r\\n    address public constant swETHAddress = 0xf951E335afb289353dc249e82926178EaC7DEd78;\\r\\n    address public constant ethxAddress = 0xA35b1B31Ce002FBF2058D22F30f95D405200A15b;\\r\\n    address public constant ethxOracleAddress = 0xF64bAe65f6f2a5277571143A24FaaFDFC0C2a737;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    function checkPrice(address lsd) public view returns (uint256) {\\r\\n        if (lsd == wethAddress) return 1e18;\\r\\n        if (lsd == wstETHAddress) return IWStETH(wstETHAddress).stEthPerToken();\\r\\n        if (lsd == sfrxETHAddress) return IsfrxETH(sfrxETHAddress).pricePerShare();\\r\\n        if (lsd == rETHAddress) return IrETH(rETHAddress).getExchangeRate();\\r\\n        if (lsd == cbETHAddress) return IcbETH(cbETHAddress).exchangeRate();\\r\\n        if (lsd == ankrETHAddress) return IankrETH(ankrETHAddress).sharesToBonds(1e18);\\r\\n        if (lsd == swETHAddress) return IswETH(swETHAddress).swETHToETHRate();\\r\\n        if (lsd == ethxAddress) {\\r\\n            (, uint256 totalETHBalance, uint256 totalETHXSupply) = IethxOracle(ethxOracleAddress).exchangeRate();\\r\\n            return (totalETHBalance * 1e18) / totalETHXSupply;\\r\\n        }\\r\\n        else revert();\\r\\n    }\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"@ensdomains/=node_modules/@ensdomains/\",\r\n      \"@ethereum-waffle/=node_modules/@ethereum-waffle/\",\r\n      \"@openzeppelin/=node_modules/@openzeppelin/\",\r\n      \"@pancakeswap/=node_modules/@pancakeswap/\",\r\n      \"@prb/math/=lib/prb-math/src/\",\r\n      \"@prb/test/=lib/prb-test/src/\",\r\n      \"@uniswap/=node_modules/@uniswap/\",\r\n      \"Common/=lib/Common/\",\r\n      \"ERC20/=lib/ERC20/\",\r\n      \"Governance/=lib/Governance/\",\r\n      \"Math/=lib/Math/\",\r\n      \"Staking/=lib/Staking/\",\r\n      \"Utils/=lib/Utils/\",\r\n      \"base64-sol/=node_modules/base64-sol/\",\r\n      \"communal/=lib/communal/\",\r\n      \"ds-test/=lib/forge-std/lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"hardhat/=node_modules/hardhat/\",\r\n      \"layerzerolabs/=lib/solidity-examples/\",\r\n      \"local/=src/\",\r\n      \"openzeppelin-contracts/=lib/openzeppelin-contracts/\",\r\n      \"openzeppelin/=lib/openzeppelin/\",\r\n      \"prb-math/=lib/prb-math/src/\",\r\n      \"prb-test/=lib/prb-math/lib/prb-test/src/\",\r\n      \"solidity-examples/=lib/solidity-examples/contracts/\",\r\n      \"solmate/=lib/solmate/src/\",\r\n      \"src/=lib/prb-math/src/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 9999\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"viaIR\": true,\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ankrETHAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cbETHAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lsd\",\"type\":\"address\"}],\"name\":\"checkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethxAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethxOracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rETHAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sfrxETHAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swETHAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wethAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wstETHAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Darknet", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "9999", "ConstructorArguments": "", "EVMVersion": "london", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}