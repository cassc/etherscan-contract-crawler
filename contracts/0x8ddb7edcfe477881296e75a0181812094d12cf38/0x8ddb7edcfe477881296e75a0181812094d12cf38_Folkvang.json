{"SourceCode": "pragma solidity ^0.4.25;\r\n\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\n\r\ncontract Folkvang {\r\n    function withdrawEther(address[] recipients, uint256[] values) external payable {\r\n        for (uint256 i = 0; i < recipients.length; i++)\r\n            recipients[i].transfer(values[i]);\r\n        uint256 balance = address(this).balance;\r\n        if (balance > 0)\r\n            msg.sender.transfer(balance);\r\n    }\r\n\r\n    function withdrawToken(IERC20 token, address[] recipients, uint256[] values) external {\r\n        uint256 total = 0;\r\n        for (uint256 i = 0; i < recipients.length; i++)\r\n            total += values[i];\r\n        require(token.transferFrom(msg.sender, address(this), total));\r\n        for (i = 0; i < recipients.length; i++)\r\n            require(token.transfer(recipients[i], values[i]));\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Folkvang", "CompilerVersion": "v0.4.25+commit.59dbf8f1", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://d8b33143736ea17b66c35145946cd15159ca745ff5b1a3acaa2e1efe6673d073"}