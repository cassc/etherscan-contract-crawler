{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"contracts/Ownership.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\nimport \\\"./interfaces/pool/IOwnership.sol\\\";\\r\\n\\r\\ncontract Ownership is IOwnership {\\r\\n    address private _owner;\\r\\n    address private _futureOwner;\\r\\n\\r\\n    event CommitNewOwnership(address indexed futureOwner);\\r\\n    event AcceptNewOwnership(address indexed owner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        _owner = msg.sender;\\r\\n        emit AcceptNewOwnership(msg.sender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() external view override returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    function futureOwner() external view override returns (address) {\\r\\n        return _futureOwner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == msg.sender, \\\"Caller is not allowed to operate\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyFutureOwner() {\\r\\n        require(_futureOwner == msg.sender, \\\"Caller is not allowed to operate\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /***\\r\\n     *@notice Transfer ownership of GaugeController to `newOwner`\\r\\n     *@param newOwner Address to have ownership transferred to\\r\\n     */\\r\\n    function commitTransferOwnership(address newOwner)\\r\\n        external\\r\\n        override\\r\\n        onlyOwner\\r\\n    {\\r\\n        _futureOwner = newOwner;\\r\\n        emit CommitNewOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /***\\r\\n     *@notice Accept a transfer of ownership\\r\\n     */\\r\\n    function acceptTransferOwnership() external override onlyFutureOwner {\\r\\n        _owner = msg.sender;\\r\\n        _futureOwner = address(0);\\r\\n        emit AcceptNewOwnership(msg.sender);\\r\\n    }\\r\\n}\\r\\n\"\r\n    },\r\n    \"contracts/interfaces/pool/IOwnership.sol\": {\r\n      \"content\": \"pragma solidity 0.8.10;\\r\\n\\r\\n//SPDX-License-Identifier: MIT\\r\\n\\r\\ninterface IOwnership {\\r\\n    function owner() external view returns (address);\\r\\n\\r\\n    function futureOwner() external view returns (address);\\r\\n\\r\\n    function commitTransferOwnership(address newOwner) external;\\r\\n\\r\\n    function acceptTransferOwnership() external;\\r\\n}\\r\\n\"\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AcceptNewOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"futureOwner\",\"type\":\"address\"}],\"name\":\"CommitNewOwnership\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptTransferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"commitTransferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futureOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Ownership", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}