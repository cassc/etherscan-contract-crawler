{"SourceCode": "pragma solidity >=0.4.22 < 0.7.0;\r\n\r\ncontract ProofOfExistence {\r\n\r\n    address public owner;\r\n\r\n    mapping (bytes32 => uint256) public documents;\r\n\r\n    modifier requireOwner() {\r\n        require(msg.sender == owner, \"Owner is required.\");\r\n        _;\r\n    }\r\n\r\n    modifier requireNoHashExists(bytes32 hashedDocument) {\r\n        require(documents[hashedDocument] == 0, \"Hash value already exists.\");\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function addDocument(bytes32 hashedDocument)\r\n        external requireOwner requireNoHashExists(hashedDocument) returns (bytes32) {\r\n\r\n        documents[hashedDocument] = block.number;\r\n\r\n        return hashedDocument;\r\n    }\r\n\r\n    function doesHashExist(bytes32 documentHash) public view returns (bool) {\r\n        return documents[documentHash] != 0;\r\n    }\r\n\r\n    function getBlockNumber(bytes32 documentHash) public view returns (uint256) {\r\n        return documents[documentHash];\r\n    }\r\n\r\n    function () external {\r\n        revert(\"Invalid data sent to contract.\");\r\n    }\r\n\r\n    function selfDestroy() public requireOwner {\r\n        selfdestruct(msg.sender);\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"documentHash\",\"type\":\"bytes32\"}],\"name\":\"doesHashExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"documents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"documentHash\",\"type\":\"bytes32\"}],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashedDocument\",\"type\":\"bytes32\"}],\"name\":\"addDocument\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"selfDestroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"}]", "ContractName": "ProofOfExistence", "CompilerVersion": "v0.5.11+commit.c082d0b4", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://3035743320e1f066d05f73242d8b84e986f28df6acf95b0793cea456aa7026d2"}