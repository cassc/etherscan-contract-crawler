{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.1;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract LiquidityLock {\r\n  address public owner;            // owner\r\n  address public lptoken;          // uniswap lp token address\r\n  uint256 public timelock;              \r\n  uint256 public numerator = 7 ether;\r\n\r\n  modifier restricted() {\r\n    require( msg.sender == owner, \"this function is restricted to the contract's owner\" );\r\n    _;\r\n  }\r\n  \r\n  constructor(address _lptoken) {\r\n    require(_lptoken != address(0x0),\"can't construct with 0x0 address\");\r\n    owner = msg.sender;\r\n    lptoken = _lptoken;\r\n\ttimelock = block.timestamp + 6 days + 23 hours;\r\n  }  \r\n\r\n  function remove() public restricted {\r\n      require(block.timestamp > timelock, \"removal call too soon\" );\r\n      timelock = block.timestamp + 6 days + 23 hours;\r\n      IERC20(lptoken).transfer(msg.sender,  numerator * IERC20(lptoken).balanceOf(address(this)) / 100 ether);\r\n  }\r\n  \r\n  function setNumerator(uint256 _numerator) public restricted {\r\n      require(_numerator <= 10 ether,\"numerator too large\");\r\n      numerator = _numerator;\r\n  }\r\n  \r\n  function setOwner(address _owner) public restricted {\r\n      require(_owner != address(0x0), \"owner can't be 0x0 address\");\r\n      owner = _owner;\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lptoken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"lptoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numerator\",\"type\":\"uint256\"}],\"name\":\"setNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "LiquidityLock", "CompilerVersion": "v0.7.4+commit.3f05b770", "OptimizationUsed": "1", "Runs": "999999", "ConstructorArguments": "000000000000000000000000b2c87aec3288db3b619ccfe49235c768c8bfee2c", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://438b5164d656c442e27e48d677af63f9f7b59e1d0dc6bd8a23c8eba661bfc2e7"}