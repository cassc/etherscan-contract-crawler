{"SourceCode": "# @version 0.3.10\r\n\"\"\"\r\n@title VestSplitter\r\n@author Curve Finance\r\n@license MIT\r\n@notice Split VestingEscrow for a distribution of users, and accepts donations and top-ups.\r\n        Made originally to compensate victims of Vyper hack, but can be used for other purposes.\r\n\"\"\"\r\n\r\nfrom vyper.interfaces import ERC20\r\n\r\n\r\ninterface VestingEscrow:\r\n    def claim(): nonpayable\r\n    def balanceOf(user: address) -> uint256: view\r\n\r\n\r\nevent Claim:\r\n    recipient: indexed(address)\r\n    claimed: uint256\r\n\r\n\r\nTOKEN: public(immutable(ERC20))\r\nvest: public(VestingEscrow)\r\nADMIN: public(immutable(address))\r\n\r\nfractions: public(HashMap[address, uint256])\r\ntotal_fraction: public(uint256)\r\nfinalized: public(bool)\r\n\r\nlast_balance: public(uint256)\r\ntotal_granted: public(uint256)\r\nclaimed: public(HashMap[address, uint256])\r\n\r\n\r\n@external\r\ndef __init__(token: ERC20):\r\n    TOKEN = token\r\n    ADMIN = msg.sender  # Only needed before the distribution is finalized\r\n\r\n\r\n@external\r\ndef set_vest(vest: VestingEscrow):\r\n    assert msg.sender == ADMIN, \"Access\"\r\n    assert self.vest == empty(VestingEscrow), \"Vest already set\"\r\n    self.vest = vest\r\n\r\n\r\n@external\r\ndef save_distribution(users: DynArray[address, 200], fractions: DynArray[uint256, 200]):\r\n    assert msg.sender == ADMIN, \"Access\"\r\n    assert not self.finalized, \"Distribution is finalized already\"\r\n\r\n    for i in range(200):\r\n        if i >= len(users):\r\n            break\r\n        user: address = users[i]\r\n        f_old: uint256 = self.fractions[user]\r\n        f: uint256 = fractions[i]\r\n\r\n        self.fractions[user] = f\r\n        self.total_fraction = self.total_fraction + f - f_old\r\n\r\n\r\n@external\r\ndef finalize_distribution():\r\n    assert msg.sender == ADMIN, \"Access\"\r\n    self.finalized = True\r\n\r\n\r\n@external\r\n@nonreentrant('lock')\r\ndef claim(user: address = msg.sender, use_vest: bool = True):\r\n    vest: VestingEscrow = self.vest\r\n    if use_vest and vest != empty(VestingEscrow) and vest != VestingEscrow(self):\r\n        vest.claim()\r\n    total_granted: uint256 = self.total_granted + (TOKEN.balanceOf(self) - self.last_balance)\r\n    self.total_granted = total_granted\r\n\r\n    total_for_user: uint256 = total_granted * self.fractions[user] / self.total_fraction\r\n    to_send: uint256 = total_for_user - self.claimed[user]\r\n    self.claimed[user] = total_for_user\r\n    TOKEN.transfer(user, to_send)\r\n\r\n    self.last_balance = TOKEN.balanceOf(self)\r\n\r\n    log Claim(user, to_send)\r\n\r\n\r\n@external\r\n@view\r\ndef balanceOf(user: address, use_vest: bool = True) -> uint256:\r\n    total_granted: uint256 = self.total_granted\r\n    vest: VestingEscrow = self.vest\r\n    if use_vest and vest != empty(VestingEscrow) and vest != VestingEscrow(self):\r\n        total_granted += vest.balanceOf(self)\r\n    total_granted = total_granted + TOKEN.balanceOf(self) - self.last_balance\r\n    total_for_user: uint256 = total_granted * self.fractions[user] / self.total_fraction\r\n    return total_for_user - self.claimed[user]", "ABI": "[{\"name\":\"Claim\",\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\",\"indexed\":true},{\"name\":\"claimed\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_vest\",\"inputs\":[{\"name\":\"vest\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"save_distribution\",\"inputs\":[{\"name\":\"users\",\"type\":\"address[]\"},{\"name\":\"fractions\",\"type\":\"uint256[]\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"finalize_distribution\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"claim\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"claim\",\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"claim\",\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"use_vest\",\"type\":\"bool\"}],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"balanceOf\",\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"balanceOf\",\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"use_vest\",\"type\":\"bool\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"TOKEN\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"vest\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"ADMIN\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"fractions\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"total_fraction\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"finalized\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"last_balance\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"total_granted\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"claimed\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]}]", "ContractName": "VestSplitter", "CompilerVersion": "vyper:0.3.10", "OptimizationUsed": "0", "Runs": "0", "ConstructorArguments": "0000000000000000000000000100546f2cd4c9d97f798ffc9755e47865ff7ee6", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}