{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\ncontract reLock {\r\n    uint256 public totalSupply = 10**15;\r\n    uint256 public decimals = 6;\r\n    string public name = \"Anonymous Agent ReLock Token\";\r\n    string public symbol = \"reLockANA\";\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    event Transfer(address indexed from, address indexed to, uint256 amount);\r\n    event Approval(address indexed owner,address indexed spender,uint256 amount);\r\n\r\n    function transfer(address recipent, uint256 amount) external returns (bool) {\r\n        require(1 > 2, \"forbiden\");\r\n        return false;\r\n    }\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n        require(1 > 2, \"forbiden\");\r\n        return false;\r\n    }\r\n    function transferFrom(address sender, address recipent, uint256 amount) external returns (bool) {\r\n        require(1 > 2, \"forbiden\");\r\n        return false;\r\n    }\r\n\r\n    address public anaAddress;\r\n    address public ownerAddress;\r\n    uint256 public highPrice10000;\r\n    mapping(uint256 => uint256) public TotalAirdrop;\r\n    mapping(address => mapping(uint256 => uint256)) public airdropMap;\r\n    event Airdrop2(uint256 blockNumber, uint256 amount, address addr);\r\n\r\n    constructor(address addr) {\r\n        anaAddress = addr;\r\n    }\r\n    function scyncData() public {\r\n        (bool success, bytes memory data) = anaAddress.call(abi.encodeWithSignature(\"ownerAddress()\"));\r\n        require(success, \"syncData failed 1\");\r\n        ownerAddress = abi.decode(data, (address));\r\n        ( success, data) = anaAddress.call(abi.encodeWithSignature(\"highPrice10000()\"));\r\n        require(success, \"syncData failed 2\");\r\n        highPrice10000 = abi.decode(data, (uint256));\r\n    }\r\n    function claimANA() public{\r\n        (bool success, ) = anaAddress.call(abi.encodeWithSignature(\"claim()\"));\r\n        require(success, \"claim failed\");\r\n    }\r\n\r\n    function airdrop(uint256 param, uint256 amount, address addr) public {\r\n        require(msg.sender == ownerAddress, \"not owner\");\r\n        require(param <= 17 && param >=1, \"param wrong\");\r\n        require(amount <= 20*10**10, \"amount wrong\");\r\n        require(TotalAirdrop[param] + amount <= 5*10**13, \"TotalAirdrop wrong\");\r\n        airdropMap[addr][param] += amount;\r\n        TotalAirdrop[param] += amount;\r\n        balanceOf[addr] += amount;\r\n        emit Airdrop2(block.number, amount, addr);\r\n    }\r\n    function claim() public {\r\n        uint256 amount;\r\n        uint256 paramMax = highPrice10000 < 10000 ? 0 : (highPrice10000 - 6000)/4000;\r\n        for(uint256 param = 1; param <= paramMax; param++){\r\n            amount += airdropMap[msg.sender][param];\r\n            airdropMap[msg.sender][param] = 0;\r\n        }\r\n        (bool success, bytes memory data) = anaAddress.call(abi.encodeWithSignature(\"transfer(address,uint256)\", msg.sender, amount));\r\n        require(success && abi.decode(data, (bool)), \"transfer failed\");\r\n        require(balanceOf[msg.sender] >= amount, \"balance not enough\");\r\n        balanceOf[msg.sender] -= amount;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Airdrop2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"TotalAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"param\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"airdropMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"anaAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimANA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highPrice10000\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scyncData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "reLock", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000dd5c345e098259426bfd44e9f2fd69c7c811b1f6", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU LGPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://23b0ede1b38629be632b57648733f8e7e90f0ed808400b7f4981d0663271c761"}