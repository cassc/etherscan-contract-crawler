{"SourceCode": "// SPDX-License-Identifier: NONE\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ncontract DepositContract {\r\n    address public owner;\r\n    address public usdtToken;\r\n    address public nominatedWallet;\r\n    uint256 public fee; \r\n    event Deposit(address indexed user, uint256 amount, string id);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _usdtToken, address _nominatedWallet, uint256 _fee) {\r\n        owner = msg.sender;\r\n        usdtToken = _usdtToken;\r\n        nominatedWallet = _nominatedWallet;\r\n        fee = _fee;\r\n    }\r\n\r\n    function deposit(uint256 amount, string memory id) external {\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n        require(IERC20(usdtToken).balanceOf(msg.sender) >= amount, \"Insufficient USDT balance\");\r\n        require(IERC20(usdtToken).allowance(msg.sender, address(this)) >= amount, \"Not enough USDT allowance\");\r\n\r\n        uint256 feeAmount = amount * fee / 100;\r\n        uint256 depositAmount = amount - feeAmount;\r\n\r\n        require(IERC20(usdtToken).transferFrom(msg.sender, nominatedWallet, feeAmount), \"Fee transfer failed\");\r\n        require(IERC20(usdtToken).transferFrom(msg.sender, address(this), depositAmount), \"Deposit transfer failed\");\r\n\r\n        emit Deposit(msg.sender, depositAmount, id);\r\n    }\r\n\r\n    function withdrawFunds(address to, uint256 amount) external onlyOwner {\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n        require(IERC20(usdtToken).transfer(to, amount), \"Withdrawal transfer failed\");\r\n    }\r\n\r\n    function changeFee(uint256 newFee) external onlyOwner {\r\n        fee = newFee;\r\n    }\r\n\r\n    function transferTokensTo(address recipient, uint256 amount) external onlyOwner {\r\n        require(recipient != address(0), \"Invalid recipient address\");\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n\r\n\r\n        uint8 decimals = IERC20(usdtToken).decimals();\r\n\r\n        uint256 amountInSmallestUnit = amount * (10 ** decimals);\r\n\r\n        uint256 contractBalance = IERC20(usdtToken).balanceOf(address(this));\r\n        require(contractBalance >= amountInSmallestUnit, \"Insufficient token balance\");\r\n        require(IERC20(usdtToken).transfer(recipient, amountInSmallestUnit), \"Token transfer failed\");\r\n    }\r\n       function withdrawEther(address payable recipient) external onlyOwner {\r\n        require(recipient != address(0), \"Invalid recipient address\");\r\n        uint256 contractBalance = address(this).balance;\r\n        require(contractBalance > 0, \"No Ether to withdraw\");\r\n        recipient.transfer(contractBalance);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nominatedWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nominatedWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTokensTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DepositContract", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000aa8d2cbf8fda2d36710b944d6033f9b10ff165f10000000000000000000000000000000000000000000000000000000000000019", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://3bab346c2e23b885fe92d22a0d6188c7f519866ae5f223410de122626c9748ef"}