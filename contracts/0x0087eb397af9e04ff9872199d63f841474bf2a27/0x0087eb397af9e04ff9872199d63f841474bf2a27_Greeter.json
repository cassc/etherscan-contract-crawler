{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Greeter.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\n\\n\\n/// @title A contract for boilerplating\\n/// @author Hardhat (and DeFi Wonderland)\\n/// @notice You can use this contract for only the most basic tests\\n/// @dev This is just a try out\\n/// @custom:experimental This is an experimental contract.\\n\\ncontract Greeter {\\n  event GreetingSet(string _greeting);\\n\\n  string public greeting;\\n\\n  constructor(string memory _greeting) {\\n\\n    greeting = _greeting;\\n  }\\n\\n  function greet() public view returns (string memory) {\\n    return greeting;\\n  }\\n\\n  /// @notice Sets greeting that will be used during greet\\n  /// @dev Some explanation only defined for devs\\n  /// @param _greeting The greeting to be used\\n  /// @return _changedGreet Was greeting changed or nah\\n  function setGreeting(string memory _greeting) public returns (bool _changedGreet) {\\n    require(bytes(_greeting).length > 0, 'Greeter: empty greeting');\\n\\n    greeting = _greeting;\\n    _changedGreet = true;\\n    emit GreetingSet(_greeting);\\n  }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"GreetingSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"greet\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"greeting\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"setGreeting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_changedGreet\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Greeter", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000b48616c6c6f2057656c7421000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}