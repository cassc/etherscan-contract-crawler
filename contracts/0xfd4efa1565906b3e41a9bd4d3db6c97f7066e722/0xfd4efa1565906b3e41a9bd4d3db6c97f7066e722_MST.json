{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/MST.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @title: Mista's 1/1\\n/// @author: manifold.xyz\\n\\nimport \\\"./manifold/ERC721Creator.sol\\\";\\n\\n/////////////////////////////////////////////////////////////////////////////\\n//                                                                         //\\n//                                                                         //\\n//    \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e8\u28dd\u28d9\u28ff\u28ff\u28ff\u281f\u28af\u28f9\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u2884\u28c4\u2800\u2800\u2800\u2800\u2800\u2800    //\\n//    \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2880\u2882\u28ec\u28f4\u28ff\u28bf\u28fb\u281f\u28eb\u28f4\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fe\u28d7\u28d7\u2800\u2800\u2800\u2800\u2800    //\\n//    \u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28c0\u2804\u28fc\u283f\u28eb\u289e\u28ef\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28bb\u28fd\u28fe\u28df\u28f7\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u284d\u28cf\u28ae\u2844\u2802\u2840\u2800    //\\n//    \u2800\u2800\u2800\u2800\u2800\u28b0\u28fd\u2815\u28ca\u28b5\u28fa\u28fd\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28bf\u28d9\u28fe\u28ff\u287f\u28cf\u28fe\u287f\u28af\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287e\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fd\u28ff\u2878\u28ff\u28cc\u28b9\u28ee\u28c1\u2802    //\\n//    \u2800\u2800\u2800\u2800\u2800\u2840\u28e0\u28ee\u28b6\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28ff\u28ab\u28dd\u28f7\u28df\u287f\u28ef\u28db\u28be\u285d\u2875\u28af\u28f3\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28bf\u28ff\u28ff\u28ff\u283f\u28af\u28de\u28fd\u28cb\u2811    //\\n//    \u2800\u2800\u2800\u2880\u28f2\u2875\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28ff\u28eb\u281f\u28e5\u287f\u28db\u28fe\u28eb\u287f\u28d5\u286f\u2873\u289e\u28ed\u28f7\u28ff\u28ff\u28ff\u28df\u28be\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f5\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28ff\u28bb\u28f6\u285f\u28f9    //\\n//    \u2800\u2800\u2810\u280b\u2800\u2880\u28fe\u28ff\u28ff\u28ff\u287f\u28f9\u28fd\u281e\u28e5\u287f\u28cb\u28be\u28fd\u287e\u28ab\u28b5\u286f\u28de\u28fd\u28fe\u28ff\u28ff\u28ff\u28ff\u28fb\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28fe\u28f3\u28cf\u282e    //\\n//    \u2800\u2800\u2800\u2800\u28a0\u28df\u28fe\u281f\u28b9\u284f\u28f5\u281f\u28e1\u287e\u288b\u28f6\u287d\u289f\u28f1\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28f7\u287f\u28af\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28bd\u28de\u28ff\u28ff\u28ff\u28ff\u28fe\u28ff\u28fe\u28f7    //\\n//    \u2800\u2800\u2800\u2860\u289f\u287c\u2803\u2880\u28ff\u287c\u2883\u28fc\u281b\u28e0\u287f\u28c3\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u285f\u28ff\u28df\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fd\u28bb\u28ff\u28ff\u28fe\u28ff\u28ff\u28ff    //\\n//    \u2800\u2800\u28e0\u287d\u280b\u2800\u28f0\u287f\u28a3\u281e\u28eb\u28f4\u28bb\u28cf\u28ff\u28fd\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28fd\u28a3\u28ff\u288b\u28fe\u28ff\u28ff\u28ff\u28ff\u28f3\u28ff\u28fd\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28de\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fd\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f    //\\n//    \u2800\u2830\u280b\u2800\u2880\u287c\u288b\u289c\u28e5\u28de\u28ef\u28fe\u28f7\u28ff\u28ff\u28ff\u28ff\u28bf\u28fb\u28ff\u28ff\u285f\u28f5\u28ab\u28df\u28f6\u28ff\u28ff\u28ff\u28ff\u287f\u28f7\u28ff\u28f3\u28ff\u28ff\u28ff\u28ff\u28ff\u288b\u28ff\u28ff\u28ff\u28ff\u28b3\u28ff\u28ff\u28ff\u287e\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28ff\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28cf    //\\n//    \u2800\u2800\u2800\u2864\u288b\u28f4\u28bf\u28ef\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u288f\u28fc\u28ff\u28ff\u2833\u28fc\u2877\u28fb\u28fe\u28ff\u28ff\u28ff\u28ff\u28df\u28bf\u28ff\u287e\u28ff\u28ff\u28ff\u28ff\u28ff\u28e3\u28f3\u28fc\u28ff\u28ff\u28ff\u2839\u28fe\u28ff\u28ff\u28ff\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff    //\\n//    \u2800\u2820\u2800\u28ec\u28ab\u28be\u28ff\u28df\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u288b\u28fc\u28ff\u283f\u28e1\u28ff\u28ff\u28fe\u28ff\u28bf\u28cf\u28ff\u28ff\u285f\u28fe\u28ff\u285f\u28f4\u28ff\u28ff\u28ff\u28ff\u287f\u28bf\u285b\u28cf\u28ff\u28ff\u28a7\u285b\u28d6\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u285f\u28ff\u28ff\u28ff\u28ff    //\\n//    \u2800\u2820\u280b\u2810\u2801\u28b8\u2877\u28fe\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u2883\u28fe\u283f\u28e9\u28fe\u283f\u28ff\u28ef\u285f\u28fd\u285f\u28fe\u28ff\u28f7\u28ff\u28ff\u285f\u28dc\u28fe\u28ff\u28ff\u287f\u28a7\u28db\u28e7\u28bb\u2834\u28ff\u28ff\u28a3\u285d\u28ec\u289b\u28ff\u28ff\u28ff\u28ff\u28ff\u28bc\u28ff\u28e7\u28be\u28ff\u28ff\u28fe\u28ff\u287e\u28ff\u28ff\u28ff\u28ff    //\\n//    \u2800\u2800\u2800\u2800\u2800\u28ff\u28f5\u28a3\u28db\u28ff\u28ff\u28ff\u287f\u28a1\u28fe\u28cb\u28fe\u287f\u28ad\u28fe\u28ff\u28e7\u28bb\u287c\u28fd\u285f\u28ff\u28ff\u28ff\u281f\u2878\u28bc\u28ff\u28ff\u28bf\u2879\u28cf\u28f7\u28fe\u28af\u287f\u28ff\u28df\u28a7\u285e\u28fc\u28d9\u28be\u28ff\u28ff\u28ff\u28ff\u28ff\u28bc\u28ff\u28e7\u28ff\u28ff\u28ff\u28ff\u28bf\u286f\u281c\u28f6\u2800    //\\n//    \u2800\u2800\u2800\u2800\u28b8\u28ff\u2823\u2857\u28fc\u28ff\u28ff\u287f\u28e1\u28ff\u28f7\u281f\u28fc\u28fc\u28ff\u28f7\u28f6\u28ff\u28fd\u28ff\u28ef\u28bc\u28ff\u28ff\u280f\u2810\u282d\u28ff\u28ff\u28af\u28b3\u28ff\u28ff\u28ff\u287f\u28ff\u28ff\u287f\u28ff\u28ff\u28ff\u28cf\u28ae\u288f\u28ff\u28ff\u28ff\u28ff\u28ff\u28fb\u28ff\u28ff\u28ef\u28bf\u28ff\u28f7\u286f\u28ff\u28f7\u2828\u2800    //\\n//    \u2800\u2800\u2800\u2800\u28f8\u2887\u287b\u28fc\u281f\u28ff\u28ff\u2871\u28fd\u28ff\u28ff\u2818\u280b\u2800\u2820\u280c\u2808\u2800\u28ff\u280b\u2819\u28ff\u28ff\u280f\u2800\u2808\u28f8\u28ff\u288f\u2827\u2883\u280b\u2851\u28a3\u2819\u2854\u28a3\u280e\u285d\u28ac\u288b\u285f\u286c\u288f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fd\u28ff\u287f\u28df\u2877\u28df\u28ff\u28fd\u28ff\u287e\u2800    //\\n//    \u2800\u2808\u2800\u2820\u288f\u28f2\u28fd\u280b\u2800\u28ff\u2877\u28fd\u28ff\u28b9\u28ff\u2843\u2800\u2800\u2802\u2800\u2800\u2800\u2801\u2800\u2800\u28ff\u285f\u2800\u2800\u2800\u287e\u2889\u280e\u2858\u2820\u2800\u2800\u2821\u2818\u2820\u2803\u281c\u2858\u2826\u2869\u28dc\u2871\u288f\u287e\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u287d\u28af\u28f3\u28ff\u28ff\u28ff\u28fe\u28fd\u28bf    //\\n//    \u2800\u288c\u2840\u281e\u28f0\u281f\u2801\u2820\u2890\u28ff\u28fd\u287f\u28ff\u2808\u28ff\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u281f\u2800\u2800\u2800\u2808\u2801\u288c\u2822\u28c1\u2806\u2841\u2800\u2800\u2800\u2800\u2801\u2802\u2881\u2812\u2871\u28a2\u285d\u28f9\u289e\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u2867\u28ff\u285f\u28af\u28d3\u28ae\u2879\u28bf\u28ff    //\\n//    \u2858\u2826\u2880\u2823\u280b\u28c0\u280a\u2805\u2828\u28f7\u28ff\u2800\u28ef\u2800\u28b9\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2810\u28a8\u2851\u2886\u2852\u2804\u2800\u2800\u2800\u2800\u2800\u2880\u2802\u2825\u28d1\u28a3\u285d\u28ae\u28be\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fe\u28ff\u28ff\u28dd\u2873\u285c\u2876\u28f9\u28cd\u283f    //\\n//    \u2808\u2816\u2848\u2881\u2802\u2820\u2808\u2804\u2810\u28ff\u285f\u2800\u2884\u2820\u2840\u28ff\u2846\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2830\u2858\u28a6\u2871\u2800\u2804\u2800\u2800\u2800\u2800\u2804\u288a\u2834\u28a1\u2853\u28de\u2879\u28de\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28af\u2877\u28df\u2877\u28f3\u288e\u285b    //\\n//    \u2848\u2814\u2820\u28a1\u2808\u2882\u2821\u2882\u2810\u28ff\u2807\u2878\u28a0\u2883\u2856\u2878\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28f0\u28e3\u28fd\u281a\u2844\u28a3\u2818\u2860\u2880\u2840\u2810\u2848\u2886\u284d\u28b6\u2879\u28ac\u2873\u28dd\u28fb\u28ff\u28ff\u28ff\u28f7\u28fe\u28ff\u28ff\u28ff\u28af\u28fb\u287c\u2871\u2887\u286f\u28dc    //\\n//    \u285c\u28c8\u2841\u28a6\u284c\u288e\u2846\u28a7\u2852\u28bc\u2878\u28a5\u2853\u28ce\u28b6\u2871\u28ff\u28ff\u28c6\u2800\u2800\u2800\u2800\u2800\u2880\u2840\u2800\u2800\u2808\u2819\u283b\u281b\u2801\u2821\u2888\u28e4\u28f1\u28fe\u287f\u2817\u28e2\u2819\u2854\u28ce\u28a7\u28dd\u28e3\u289f\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28f6\u28ed\u28db\u28af\u28de\u2875    //\\n//    \u2873\u28a5\u285b\u28a6\u28db\u285e\u28dc\u28e3\u287d\u28f2\u287d\u28a7\u28df\u28ee\u28b7\u28fb\u28fd\u28ff\u28ff\u28e7\u2840\u2800\u2800\u2800\u2808\u2819\u28bb\u2849\u2812\u2812\u2812\u2812\u281a\u281b\u281b\u28e9\u287d\u288f\u2871\u288a\u2834\u28d9\u283c\u28dc\u28de\u2872\u28dd\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fe\u28fd    //\\n//    \u285f\u28e7\u28bb\u28b3\u28ef\u285f\u28fe\u28f5\u28ef\u28f7\u28bb\u28ff\u28fe\u28fd\u28ff\u28bb\u28ef\u28ff\u285f\u28ff\u28ff\u28e6\u2800\u2800\u2800\u2800\u2800\u2808\u2813\u2812\u28f6\u28b2\u2856\u281b\u2809\u28b1\u28fc\u280a\u28f4\u28a9\u285e\u28e5\u28bb\u285c\u28f6\u28fd\u28ff\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff    //\\n//    \u28ff\u285c\u28ef\u28db\u28fe\u28ff\u287f\u28f7\u28bf\u28fb\u28df\u28ef\u28b7\u28cf\u286f\u28df\u28be\u28f9\u285f\u28ff\u287f\u28cf\u28f7\u28c4\u2800\u2800\u2800\u2800\u2800\u2824\u28a4\u28a4\u28f4\u2876\u283f\u28cb\u2807\u285e\u28e5\u28ab\u28b6\u2879\u28ce\u28f7\u287f\u28ef\u28b7\u28ef\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff    //\\n//    \u28ff\u28fd\u28f7\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ef\u28bf\u28de\u28ef\u28be\u28f5\u28fb\u28be\u28f7\u287f\u28ab\u28f4\u28ff\u28ff\u28ff\u28f7\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2810\u2820\u288e\u2875\u28ae\u285d\u28ee\u28b7\u28df\u28ef\u28b7\u28af\u2877\u28ef\u28df\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff    //\\n//    \u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28f7\u28eb\u28f7\u28bf\u28de\u287f\u288b\u28f4\u28ff\u28ff\u28fd\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28e4\u2840\u2800\u2800\u2800\u2800\u2820\u284c\u28dd\u28ae\u2875\u28ef\u28be\u287d\u28db\u28fe\u28ba\u28fd\u28eb\u28b7\u28fb\u28be\u287d\u28ff\u28ff\u28ff\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff    //\\n//    \u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28ef\u28df\u28ef\u281f\u2880\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2856\u2800\u2824\u28a2\u2833\u281d\u28ae\u287b\u287c\u28cf\u28b7\u287b\u287d\u28de\u28fb\u287c\u28af\u28fb\u287d\u28be\u287d\u28fb\u28ff\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff    //\\n//    \u28ff\u28ff\u28ff\u28ff\u28ff\u28fb\u28af\u287d\u28f1\u28ae\u28f9\u2883\u2854\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28db\u28ff\u2800\u2800\u2800\u2800\u2808\u2804\u2871\u2819\u285c\u28a3\u289f\u287d\u28de\u28a7\u28df\u28af\u28b7\u2879\u28a7\u28ff\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff    //\\n//    \u280b\u28cd\u28a9\u280e\u28e1\u288e\u2853\u2850\u2813\u28bb\u28e3\u28de\u28a6\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28ff\u28db\u287f\u2801\u2800\u2800\u2800\u2800\u2808\u2810\u2800\u2801\u2808\u2820\u2849\u289e\u2839\u285a\u28dc\u28ab\u28fe\u287f\u28ff\u287f\u28f7\u28bb\u28ed\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff    //\\n//    \u28db\u286c\u2883\u28de\u28e5\u28ab\u2817\u2853\u2826\u2858\u28ff\u288e\u2877\u28fa\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u280b\u2800\u28fc\u28df\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2810\u2801\u2882\u28e5\u28fd\u28ff\u287f\u2837\u281f\u28dd\u2832\u28cf\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff    //\\n//    \u285b\u2837\u28df\u28ee\u2816\u280b\u2884\u280d\u28a6\u2858\u28ef\u289e\u2875\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u280f\u2800\u2800\u2800\u28f9\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u2884\u28f4\u28df\u2867\u281e\u288b\u28c0\u2809\u289c\u28e0\u28ed\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28bf\u28fb\u28fd\u28fb\u28be    //\\n//                                                                         //\\n//                                                                         //\\n/////////////////////////////////////////////////////////////////////////////\\n\\n\\ncontract MST is ERC721Creator {\\n    constructor() ERC721Creator(\\\"Mista's 1/1\\\", \\\"MST\\\") {}\\n}\\n\"\r\n    },\r\n    \"contracts/manifold/ERC721Creator.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/// @author: manifold.xyz\\n\\nimport \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\ncontract ERC721Creator is Proxy {\\n    \\n    constructor(string memory name, string memory symbol) {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6;\\n        (bool success, ) = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6.delegatecall(abi.encodeWithSignature(\\\"initialize(string,string)\\\", name, symbol));\\n        require(success, \\\"Initialization failed\\\");\\n    }\\n        \\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n     function implementation() public view returns (address) {\\n        return _implementation();\\n    }\\n\\n    function _implementation() internal override view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }    \\n\\n}\\n\"\r\n    },\r\n    \"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"node_modules/@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"@openzeppelin/=node_modules/@openzeppelin/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MST", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "300", "ConstructorArguments": "", "EVMVersion": "london", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0x5133522ea5a0494ecb83f26311a095ddd7a9d4b6", "SwarmSource": ""}