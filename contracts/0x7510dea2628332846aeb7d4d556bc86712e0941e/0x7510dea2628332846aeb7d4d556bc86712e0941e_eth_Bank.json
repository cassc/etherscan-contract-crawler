{"SourceCode": "contract eth_Bank {\r\n    function Deposit(uint _unlockTime) public payable {\r\n        Holder storage acc = Accounts[msg.sender];\r\n        acc.balance += msg.value;\r\n        acc.unlockTime = _unlockTime > block.timestamp ? _unlockTime : block.timestamp;\r\n        LogFile.AddMessage(msg.sender, msg.value, \"Put\");\r\n    }\r\n\r\n    function Collect(uint _am) public payable {\r\n        Holder storage acc = Accounts[msg.sender];\r\n        if (acc.balance > MinSum && acc.balance >= _am && block.timestamp > acc.unlockTime) {   \r\n            (bool success, ) = msg.sender.call{value: _am}(\"\");\r\n            if (success) {\r\n                acc.balance -= _am;\r\n                LogFile.AddMessage(msg.sender, _am, \"Collect\");\r\n            }\r\n        }\r\n    }\r\n\r\n    struct Holder {\r\n        uint unlockTime;\r\n        uint balance;\r\n    }\r\n\r\n    mapping(address => Holder) public Accounts;\r\n\r\n    Log LogFile;\r\n\r\n    uint public MinSum = 1 ether;\r\n\r\n    constructor(address log) {\r\n        LogFile = Log(log);\r\n    }\r\n\r\n    fallback() external payable {\r\n        Deposit(0);\r\n    }\r\n\r\n    receive() external payable {\r\n        Deposit(0);\r\n    }\r\n}\r\n\r\ncontract Log {\r\n    event Message(address indexed Sender, string Data, uint Val, uint Time);\r\n\r\n    function AddMessage(address _adr, uint _val, string memory _data) external {\r\n        emit Message(_adr, _data, _val, block.timestamp);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"log\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Accounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_am\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MinSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "eth_Bank", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000b49166cb508b42eb7f273c652ded01e9c2f29428", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://47c5f9f0ae7711753045adcb0b9171ea8ef3b85b893786e9146d2838e745fe0c"}