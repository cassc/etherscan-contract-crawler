{"SourceCode": "/*                                                                                                           \r\n                                        ,@                                                                              \r\n                                       @@@      @%    @@                                                                \r\n                                     @@@@@@   &@@@@  @@@@,                                  @                           \r\n                                @@  *@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@%.                       @@@                         \r\n                               @*#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#              @@  @@                        \r\n                              ,@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**&@    ,**        @                        \r\n                               (@&    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&***@@              @&                        \r\n                                  ,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&*@***@@@        &@@(                          \r\n                                          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&**@@@%*****@,                                  \r\n                                      @@&@@/&&&@@@@@@@@@@@@@@&&&@@&&&&&*****|@@@@@@@@@@@%,                              \r\n                            %     @@@///@@****%&&&&&&&&&&&&&&&&&&&&&***********@@@@@@@@@@@@@@@@@@                       \r\n                             @%(/////(%@&***&&@@&@&&********&&&@@@&&&&******%%****@@@@@@@@@@@@@@@@@@@                   \r\n                             .@@%%%%%%@@******@*@@************@ #@@*********%%%%*******@@@@@@@@@@@@@                    \r\n                                @@@@@@@********@@*************@@@@********#%%%@*%%%#*****%%@@@@@@@@@@@@                 \r\n                                  @@@@@@@@@@%/*****************************(@@@@@@%%%%%%%@@@@@@@@@@@@@@@@               \r\n                             @@@@@@@@@@@@#**************@@@@@@@@@@@************&@@@@@@@@@@@@@@@@@@@@@@@@@@@             \r\n                           @@(((/((((((//(((@%%%%%%%@&(/(/((((((//((@@********|&&&@@@@@@@@@@@@@@@@@@@@@@@@@@       @,   \r\n            @@@@@         .@((/(@@@(((((/(((((((/(((((((/(@@@##(/(((/&@#******&&&&@@@@@@@@@@@@@@@@@@@@  .@@@@     @@@   \r\n       @@@@@@****@@        @/(((#@@@@(((((((((((/(((((((@@@@##((/((((&@@******&&&@@@@@@@@@@@@@@@@@@@@@         &@@@@@*  \r\n    /@@&****|@&&&&&@       @@(((/(&@/(((/(((/(((/(((/((((@@#/(((/((/&&@/*****&&&@@@@@@@@@@@@@@@@@@@@@@     @@@@@@@@@@   \r\n %@%****@@&&&&@%&&@@@    @@@@@&(/((((((/&&&&&&&&&&&(((((((((((((/&&&&@%****&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   \r\n/@**#@*&&&@&&&@@@***|@  @@@@@@@@@&&&&&&&&&&&&&&@@@@@@&&&&&&&&&&&&&&@@****%@@@@@@@@@@@@@@@@@#*****************@@@@@@@    \r\n@@**@@&&&&@@@@*******@%@@@@@@@@@@@@@@@@@@@@(*********#@@@@@@@@@@@@****@@@@@@@@@@@@@@@@@@@**********************@@@      \r\n @&***&@@@@@@@@@*****@ @@@@@@@@@@@@@@@@@************************#%%@@@@@@@@@@@@@@@@@@@@***********%&@#**********@@      \r\n  @@******&&&@%%%%%&@. @@@*@@@@@@@@@@@@@@@@*******%%%%%%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@********&&&&&@@&************@.    \r\n    @@*****%&&&&****@@@@***@@@@@@@@@@@@@@@@@@@@@@%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%****%&&&&&&&&@@@&&************@@   \r\n     &@&**************(@@**&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*%&&&&&&&&@@@&   @@&&%***********@@  \r\n       @&&**************@@*%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&@@@@@***@    @@&&&&**********@% \r\n        @@%&&************@**&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&%@@&@@    @****@@    @&&&&**********@ \r\n          ,@@&&&&&**********&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@@@*&&&&&&&&@@     @@***@@    @&&&&*********@@\r\n             %@@&&&&&&&&&&&&&&&@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@****@/*********&&&&@      @@****@@ (@@&&&**********@\r\n                 %@@@@%&&&%@@@(       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@*****************&&&@*       @@***@@&&&&&***********@\r\n                                        @@@@@@@@@@@@@@@@@@@@@@@@@@/*****************&&&@@        @@**@&&&&@%**********&@\r\n                                            @@@@@@@@@@@@@@@@@@@@@@******************&&&@@         @**@@&&&@&&/*&&&&&&&@@\r\n                                              @@*|@@@@@@@@@@@@@@@@******************&&&@@        @@***@@@@&&&&%@&%@&&@@ \r\n                                               @@**********************************|&&&@/     @@@****@@  ,@@@@@@@@/     \r\n                                                @@*********************************&&&%@#@@@@*******@@                  \r\n                                            .@@@@@@@@@@@@@@@@@@@@@@@@@&(*********(&&&&@@*********%@@                    \r\n                                         @@@************************************&&&&&@@*******@@@                       \r\n                                      @@(************************************&&&&&&@@%@@@@@@/                           \r\n                                  &@@************************************&&&&&&&@@@@##///@@@                            \r\n                             ,(@@&*************&&&&&&&&&&&%%##%&&&&&&&&&&&&@@@@&&&&&&&##////@@                          \r\n               @@@@(////////////@@***********&&&&&&&@@@@@@&&%%%&&@@@@@@@@&&&@@&&&&&&&&&##/////@@                        \r\n              @@/%@@@@@###/////////#***|&&&&&&&&&@@@          @@*********#&&&&&&&&&&&@@#########@                       \r\n               @@####@##&@@##(////###@&&&&&&@@@@               .@@********&&&&&&&&&@@@#####@@@@@@                       \r\n                *@@########@@####//##@@@@@*                       @@(******&&&&@@@       &@@@@.                         \r\n                   @@%######@@#####%@@                               (@@@@@@@@                                          \r\n                      @@@####@##@@@   \r\n\r\nThe Bull\r\nhttps://the-bull.fund\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.18;\r\n\r\ninterface IERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function decimals() external view returns (uint8);\r\n  function symbol() external view returns (string memory);\r\n  function name() external view returns (string memory);\r\n    function balanceOf(address account) external view returns (uint256);\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface IUniswapFactory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapRouter {\r\n   \r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n}\r\n\r\nabstract contract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () {\r\n        address msgSender = msg.sender;\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\npragma solidity ^0.8.18;\r\ncontract TheBull is IERC20, Ownable\r\n{\r\n  \r\n    mapping (address => uint) public balanceOf;\r\n    mapping (address => mapping (address => uint)) public allowance;\r\n    mapping(address => bool)  _excludedFromFees;\r\n    \r\n    string public constant name = 'The Bull';\r\n    string public constant symbol = 'BULL';\r\n    uint8 public constant decimals = 18;\r\n    uint public constant totalSupply= 1000000000 * 10**decimals;\r\n\r\n    address private constant UniswapRouter=0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D ;\r\n\r\n\r\n    address private _UniswapPairAddress; \r\n    IUniswapRouter private  _UniswapRouter;\r\n    \r\n    \r\n    address public marketingWallet;\r\n    //Only marketingWallet can change marketingWallet\r\n    function ChangeMarketingWallet(address newWallet) public{\r\n        require(msg.sender==marketingWallet);\r\n        marketingWallet=newWallet;\r\n    }\r\n\r\n\r\n    function taxLadder() public view returns(uint buy, uint sell){\r\n        uint timeSinceLaunch=block.timestamp-LaunchTimestamp;\r\n        if(timeSinceLaunch>14 minutes) return (3,3);\r\n        else if(timeSinceLaunch<3 minutes) return (40,60);\r\n        else if(timeSinceLaunch<5 minutes) return (20,60);\r\n        else if(timeSinceLaunch<6 minutes) return (10,60);\r\n        else if(timeSinceLaunch<7 minutes) return (3,60);\r\n        else if(timeSinceLaunch<9 minutes) return (3,30);\r\n        else return (3,15);\r\n    }\r\n\r\n    constructor () {\r\n        balanceOf[msg.sender] = totalSupply;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n        _UniswapRouter = IUniswapRouter(UniswapRouter);\r\n        _UniswapPairAddress = IUniswapFactory(_UniswapRouter.factory()).createPair(address(this), _UniswapRouter.WETH());\r\n        marketingWallet=msg.sender;\r\n        _excludedFromFees[msg.sender]=true;\r\n        _excludedFromFees[UniswapRouter]=true;\r\n        _excludedFromFees[address(this)]=true;\r\n    }\r\n  \r\n    function _transfer(address sender, address recipient, uint amount) private{\r\n        if(_excludedFromFees[sender] || _excludedFromFees[recipient])\r\n            _feelessTransfer(sender, recipient, amount);\r\n        else{ \r\n            require(block.timestamp>=LaunchTimestamp,\"trading not yet enabled\");\r\n            _taxedTransfer(sender,recipient,amount);                  \r\n        }\r\n    }\r\n    function _taxedTransfer(address sender, address recipient, uint amount) private{\r\n        uint senderBalance = balanceOf[sender];\r\n        require(senderBalance >= amount, \"Transfer exceeds balance\");\r\n        (uint buy, uint sell)=taxLadder();\r\n        bool isBuy=_UniswapPairAddress==sender;\r\n        bool isSell=_UniswapPairAddress==recipient;\r\n        uint tax;\r\n        if(isSell)\r\n                tax=sell;\r\n        else if(isBuy){\r\n            require((balanceOf[recipient]+amount)<=(totalSupply*2/100),\"Max Wallet\");\r\n            tax=buy;\r\n        }\r\n        if((sender!=_UniswapPairAddress)&&(!_isSwappingContractModifier))\r\n            _swapContractToken();\r\n\r\n        unchecked{\r\n            uint contractToken= amount*tax/100;\r\n            uint taxedAmount=amount-contractToken;\r\n            balanceOf[sender]-=amount;\r\n            balanceOf[address(this)] += contractToken;\r\n            balanceOf[recipient]+=taxedAmount;\r\n        }\r\n        emit Transfer(sender,recipient,amount);\r\n    }\r\n\r\n    function _feelessTransfer(address sender, address recipient, uint amount) private{\r\n        uint senderBalance = balanceOf[sender];\r\n        require(senderBalance >= amount, \"Transfer exceeds balance\");\r\n        unchecked\r\n        {\r\n            balanceOf[sender]-=amount;\r\n            balanceOf[recipient]+=amount; \r\n        }\r\n        emit Transfer(sender,recipient,amount);\r\n    }\r\n\r\n    bool private _isSwappingContractModifier;\r\n    modifier lockTheSwap {\r\n        _isSwappingContractModifier = true;\r\n        _;\r\n        _isSwappingContractModifier = false;\r\n    }\r\n\r\n\r\n\r\n    function Swapback() external onlyOwner{\r\n        _swapContractToken(); \r\n    }\r\n    function _swapContractToken() private lockTheSwap{\r\n        uint contractBalance=balanceOf[address(this)];\r\n        if(contractBalance<totalSupply/10000) return;\r\n        _swapTokenForETH(contractBalance);\r\n    }\r\n    //swaps tokens on the contract for ETH\r\n    function _swapTokenForETH(uint amount) private {\r\n        _approve(address(this), address(_UniswapRouter), amount);\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = _UniswapRouter.WETH();\r\n\r\n        _UniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            amount,\r\n            0,\r\n            path,\r\n            marketingWallet,\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n\r\n\r\n    uint public LaunchTimestamp=type(uint).max;\r\n    function EnableTrading() public onlyOwner{\r\n        require(block.timestamp<LaunchTimestamp,\"AlreadyLaunched\");\r\n        LaunchTimestamp=block.timestamp;\r\n    }\r\n    function SetLaunchTimestamp(uint Timestamp) public onlyOwner{\r\n        require(block.timestamp<LaunchTimestamp,\"AlreadyLaunched\");\r\n        LaunchTimestamp=Timestamp;\r\n    }\r\n    receive() external payable {}\r\n\r\n\r\n    function transfer(address recipient, uint amount) external override returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint amount) external override returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n    function _approve(address owner, address spender, uint amount) private {\r\n        require(owner != address(0), \"Approve from zero\");\r\n        require(spender != address(0), \"Approve to zero\");\r\n\r\n        allowance[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint amount) external override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint currentAllowance = allowance[sender][msg.sender];\r\n        require(currentAllowance >= amount, \"Transfer > allowance\");\r\n\r\n        _approve(sender, msg.sender, currentAllowance - amount);\r\n        return true;\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"ChangeMarketingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EnableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LaunchTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Timestamp\",\"type\":\"uint256\"}],\"name\":\"SetLaunchTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Swapback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxLadder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"buy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sell\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "TheBull", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://345c02a83e89bbe435adcfddbd0af65196dc46e2723096b675fe8974e8c71d5b"}