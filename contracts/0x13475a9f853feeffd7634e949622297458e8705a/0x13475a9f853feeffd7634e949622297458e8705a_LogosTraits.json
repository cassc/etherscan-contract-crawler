{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Context.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/LogosTraits.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { LogosTypes as L } from \\\"./LogosTypes.sol\\\";\\n\\ncontract LogosTraits is Ownable {\\n    \\n    mapping (uint8 => L.CharacterInfo) private _charactersByID;\\n    mapping (uint8 => L.ShapeInfo) private _shapesPrimaryByID;\\n    mapping (uint8 => L.ShapeInfo) private _shapesSecondaryByID;\\n    mapping (uint16 => L.ColorPalette) private _colorPalettesByID;\\n\\n    event CharacterInfoAdded(uint8 id, L.CharacterInfo info);\\n    event PrimaryShapeInfoAdded(uint8 id, L.ShapeInfo info);\\n    event SecondaryShapeInfoAdded(uint8 id, L.ShapeInfo info);\\n    event ColorPaletteAdded(uint16 id, L.ColorPalette info);\\n    event CharactersEnabled(uint8 startID, uint8 endID);\\n    event PrimaryShapesEnabled(uint8 startID, uint8 endID);\\n    event SecondaryShapesEnabled(uint8 startID, uint8 endID);\\n    event ColorPalettesEnabled(uint16 startID, uint16 endID);\\n    event CharacterInfoRemoved(uint8 id);\\n    event PrimaryShapeInfoRemoved(uint8 id);\\n    event SecondaryShapeInfoRemoved(uint8 id);\\n    event ColorPaletteRemoved(uint16 id);\\n    \\n    constructor() Ownable() {\\n        \\n    }\\n\\n    function charactersByID(uint8 id) external view returns (L.CharacterInfo memory) {\\n        return _charactersByID[id];\\n    }\\n\\n    function shapesPrimaryByID(uint8 id) external view returns (L.ShapeInfo memory) {\\n        return _shapesPrimaryByID[id];\\n    }\\n\\n    function shapesSecondaryByID(uint8 id) external view returns (L.ShapeInfo memory) {\\n        return _shapesSecondaryByID[id];\\n    }\\n\\n    function colorPalettesByID(uint16 id) external view returns (L.ColorPalette memory) {\\n        return _colorPalettesByID[id];\\n    }\\n\\n    function addCharacterInfo(uint8 id, L.CharacterInfo calldata info) external onlyOwner {\\n        _charactersByID[id] = info;\\n        emit CharacterInfoAdded(id, info);\\n    }\\n    \\n    function addPrimaryShapeInfo(uint8 id, L.ShapeInfo memory info) external onlyOwner {\\n        _shapesPrimaryByID[id] = info;\\n        emit PrimaryShapeInfoAdded(id, info);\\n    }\\n\\n    function addSecondaryShapeInfo(uint8 id, L.ShapeInfo memory info) external onlyOwner {\\n        _shapesSecondaryByID[id] = info;\\n        emit SecondaryShapeInfoAdded(id, info);\\n    }\\n\\n    function addColorPalette(uint16 id, L.ColorPalette memory info) external onlyOwner {\\n        _colorPalettesByID[id] = info;\\n        emit ColorPaletteAdded(id, info);\\n    }\\n\\n    function enableCharacters(uint8 startID, uint8 endID) external onlyOwner {\\n        for (uint8 i = startID; i <= endID; i++) {\\n            _charactersByID[i].enabled = true;\\n        }\\n        emit CharactersEnabled(startID, endID);\\n    }\\n\\n    function enablePrimaryShapes(uint8 startID, uint8 endID) external onlyOwner {\\n        for (uint8 i = startID; i <= endID; i++) {\\n            _shapesPrimaryByID[i].enabled = true;\\n        }\\n        emit PrimaryShapesEnabled(startID, endID);\\n    }\\n\\n    function enableSecondaryShapes(uint8 startID, uint8 endID) external onlyOwner {\\n        for (uint8 i = startID; i <= endID; i++) {\\n            _shapesSecondaryByID[i].enabled = true;\\n        }\\n        emit SecondaryShapesEnabled(startID, endID);\\n    }\\n\\n    function enableColorPalettes(uint16 startID, uint16 endID) external onlyOwner {\\n        for (uint16 i = startID; i <= endID; i++) {\\n            _colorPalettesByID[i].enabled = true;\\n        }\\n        emit ColorPalettesEnabled(startID, endID);\\n    }\\n\\n    function removeCharacterInfo(uint8 id) external onlyOwner {\\n        delete _charactersByID[id];\\n        emit CharacterInfoRemoved(id);\\n    }\\n\\n    function removePrimaryShapeInfo(uint8 id) external onlyOwner {\\n        delete _shapesPrimaryByID[id];\\n        emit PrimaryShapeInfoRemoved(id);\\n    }\\n\\n    function removeSecondaryShapeInfo(uint8 id) external onlyOwner {\\n        delete _shapesSecondaryByID[id];\\n        emit SecondaryShapeInfoRemoved(id);\\n    }\\n\\n    function removeColorPalette(uint16 id) external onlyOwner {\\n        delete _colorPalettesByID[id];\\n        emit ColorPaletteRemoved(id);\\n    }\\n}\"\r\n    },\r\n    \"contracts/LogosTypes.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity ^0.8.20;\\n\\nlibrary LogosTypes {\\n    struct TraitChoice {\\n        string name;\\n        bool isBonus;\\n    }\\n\\n    struct CharacterInfo {\\n        string name;\\n        TraitChoice[] bodies;\\n        TraitChoice[] heads;\\n        string[] slotNames;\\n        uint8[] slotOffsets;\\n        TraitChoice[] slotOptions;\\n        bool enabled;\\n    }\\n\\n    struct ShapeInfo {\\n        string name;\\n        string companyName;\\n        uint8 numVariants; // number of ADDITIONAL variants, not including the base\\n        bool enabled;\\n    }\\n\\n    struct ColorPalette {\\n        string name;\\n        bool isBonus;\\n        string colorA;\\n        string colorB;\\n        bool enabled;\\n    }\\n\\n    struct CharacterSelections {\\n        uint8 characterID;\\n        uint8 body;\\n        uint8 head;\\n        uint8[] slotSelections;\\n    }\\n\\n    struct ShapeSelections {\\n        uint8 primaryShape;\\n        uint8 primaryShapeVariant;\\n        uint8 secondaryShape;\\n        uint8 secondaryShapeVariant;\\n    }\\n\\n    struct Logo {\\n        bool enabled;\\n        CharacterSelections characterSelections;\\n        ShapeSelections shapeSelections;\\n        uint16 colorPalette;\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 20\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isBonus\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.TraitChoice[]\",\"name\":\"bodies\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isBonus\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.TraitChoice[]\",\"name\":\"heads\",\"type\":\"tuple[]\"},{\"internalType\":\"string[]\",\"name\":\"slotNames\",\"type\":\"string[]\"},{\"internalType\":\"uint8[]\",\"name\":\"slotOffsets\",\"type\":\"uint8[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isBonus\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.TraitChoice[]\",\"name\":\"slotOptions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct LogosTypes.CharacterInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"CharacterInfoAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"CharacterInfoRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"startID\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"endID\",\"type\":\"uint8\"}],\"name\":\"CharactersEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isBonus\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"colorA\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"colorB\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct LogosTypes.ColorPalette\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"ColorPaletteAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"ColorPaletteRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"startID\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"endID\",\"type\":\"uint16\"}],\"name\":\"ColorPalettesEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"numVariants\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct LogosTypes.ShapeInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"PrimaryShapeInfoAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"PrimaryShapeInfoRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"startID\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"endID\",\"type\":\"uint8\"}],\"name\":\"PrimaryShapesEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"numVariants\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct LogosTypes.ShapeInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"SecondaryShapeInfoAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"SecondaryShapeInfoRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"startID\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"endID\",\"type\":\"uint8\"}],\"name\":\"SecondaryShapesEnabled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isBonus\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.TraitChoice[]\",\"name\":\"bodies\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isBonus\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.TraitChoice[]\",\"name\":\"heads\",\"type\":\"tuple[]\"},{\"internalType\":\"string[]\",\"name\":\"slotNames\",\"type\":\"string[]\"},{\"internalType\":\"uint8[]\",\"name\":\"slotOffsets\",\"type\":\"uint8[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isBonus\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.TraitChoice[]\",\"name\":\"slotOptions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.CharacterInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"addCharacterInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isBonus\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"colorA\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"colorB\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.ColorPalette\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"addColorPalette\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"numVariants\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.ShapeInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"addPrimaryShapeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"numVariants\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.ShapeInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"addSecondaryShapeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"charactersByID\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isBonus\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.TraitChoice[]\",\"name\":\"bodies\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isBonus\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.TraitChoice[]\",\"name\":\"heads\",\"type\":\"tuple[]\"},{\"internalType\":\"string[]\",\"name\":\"slotNames\",\"type\":\"string[]\"},{\"internalType\":\"uint8[]\",\"name\":\"slotOffsets\",\"type\":\"uint8[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isBonus\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.TraitChoice[]\",\"name\":\"slotOptions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.CharacterInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"colorPalettesByID\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isBonus\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"colorA\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"colorB\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.ColorPalette\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"startID\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"endID\",\"type\":\"uint8\"}],\"name\":\"enableCharacters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"startID\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"endID\",\"type\":\"uint16\"}],\"name\":\"enableColorPalettes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"startID\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"endID\",\"type\":\"uint8\"}],\"name\":\"enablePrimaryShapes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"startID\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"endID\",\"type\":\"uint8\"}],\"name\":\"enableSecondaryShapes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"removeCharacterInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"removeColorPalette\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"removePrimaryShapeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"removeSecondaryShapeInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"shapesPrimaryByID\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"numVariants\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.ShapeInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"shapesSecondaryByID\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"numVariants\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"internalType\":\"struct LogosTypes.ShapeInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LogosTraits", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "1", "Runs": "20", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}