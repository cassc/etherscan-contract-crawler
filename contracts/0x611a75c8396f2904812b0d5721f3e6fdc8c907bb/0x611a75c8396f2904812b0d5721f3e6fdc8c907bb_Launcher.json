{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 10000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"viaIR\": true,\r\n    \"remappings\": []\r\n  },\r\n  \"sources\": {\r\n    \"contracts/Launcher.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.16;\\n\\ninterface IGenerator {\\n    struct Info {\\n        address owner;\\n        uint16 burnFee;\\n        address burnToken;\\n        uint16 teamFee;\\n        address teamAddress;\\n        uint16 lpFee;\\n        address referrer;\\n        uint16 referFee;\\n        uint16 labFee;\\n    }\\n    function factoryInfo(address) external view returns (Info memory);\\n    function createFactory(address owner, address referrer, uint16 referFee) external payable returns (address created);\\n    function CREATION_FEE() external view returns (uint256);\\n    function REFER_FEE() external view returns (uint16);\\n}\\n\\ncontract Launcher {\\n    IGenerator public generator;\\n    address public delegated;\\n    mapping (address => uint16) public referFees;\\n    constructor(address _generator) {\\n        generator = IGenerator(_generator);\\n        delegated = o();\\n    }\\n    \\n    function o() internal view returns (address) {\\n        return generator.factoryInfo(address(generator)).owner;\\n    }\\n\\n    function setDelegated(address _delegated) external {\\n        assert(msg.sender == o());\\n        delegated = _delegated;\\n    }\\n\\n    function setReferFee(address referrer, uint16 fee) external {\\n        assert(msg.sender == o() || msg.sender == delegated);\\n        referFees[referrer] = fee;\\n    }\\n\\n    function createFactory(address owner, address referrer, uint16 referFee) external payable returns (address created) {\\n        uint16 r = referFees[referrer];\\n        uint fee = generator.CREATION_FEE();\\n        uint v = msg.value;\\n        if (v < fee) revert();\\n        if (v > fee) {\\n            uint a = v - fee;\\n            safeTransferETH(owner, a);\\n            v -= a;\\n            assert(v == fee);\\n        }\\n        created = generator.createFactory{value: v}(owner, referrer, r == 0 ? generator.REFER_FEE() : r);\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value:value}(\\\"\\\");\\n        require(success, \\\"Transfer failed.\\\");\\n    }\\n}\"\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_generator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referFee\",\"type\":\"uint16\"}],\"name\":\"createFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"created\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegated\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"generator\",\"outputs\":[{\"internalType\":\"contract IGenerator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referFees\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegated\",\"type\":\"address\"}],\"name\":\"setDelegated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"}],\"name\":\"setReferFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Launcher", "CompilerVersion": "v0.8.16+commit.07a7930e", "OptimizationUsed": "1", "Runs": "10000", "ConstructorArguments": "00000000000000000000000073cd6389d14522ea15224cd11556c52130b0985a", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://603fce8e6c8c2986fdc39f79a8241e8a05912c65f275c0c84f1e1721fb90567d"}