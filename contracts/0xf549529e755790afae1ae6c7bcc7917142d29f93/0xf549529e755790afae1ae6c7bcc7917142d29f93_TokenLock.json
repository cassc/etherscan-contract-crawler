{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.10;\r\n\r\ninterface IERC20 {\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\ncontract TokenLock {\r\n\r\n  // ERC20 basic token contract being held\r\n  IERC20 private _token;\r\n\r\n  // beneficiary of tokens after they are released\r\n  address private _beneficiary;\r\n\r\n  // timestamp when token release is enabled\r\n  uint256 private _releaseTime;\r\n\r\n  // generator of the tokenLock\r\n  address private _owner;\r\n\r\n  event UnLock(address _receiver, uint256 _amount);\r\n  event Retrieve(address _receiver, uint256 _amount);\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == _owner);\r\n    _;\r\n  }\r\n\r\n  constructor(IERC20 token, address beneficiary, address owner, uint256 releaseTime) {\r\n    _owner = owner;\r\n    _token = token;\r\n    _beneficiary = beneficiary;\r\n    _releaseTime = releaseTime;\r\n  }\r\n\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @return the token being held.\r\n   */\r\n  function token() public view returns (IERC20) {\r\n    return _token;\r\n  }\r\n\r\n  /**\r\n   * @return the beneficiary of the tokens.\r\n   */\r\n  function beneficiary() public view returns (address) {\r\n    return _beneficiary;\r\n  }\r\n\r\n  /**\r\n   * @return the time when the tokens are released.\r\n   */\r\n  function releaseTime() public view returns (uint256) {\r\n    return _releaseTime;\r\n  }\r\n\r\n  /**\r\n   * @notice Transfers tokens held by timelock to beneficiary.\r\n   */\r\n  function release() public {\r\n    require(block.timestamp >= _releaseTime);\r\n\r\n    uint256 amount = _token.balanceOf(address(this));\r\n    require(amount > 0);\r\n\r\n    require(_token.transfer(_beneficiary, amount), \"Token transfer failed\");\r\n    emit UnLock(_beneficiary, amount);\r\n  }\r\n\r\n  /**\r\n   * @notice Retrieve tokens held by timelock to generator(owner).\r\n   */\r\n  function retrieve() onlyOwner public {\r\n    uint256 amount = _token.balanceOf(address(this));\r\n    require(amount > 0);\r\n\r\n    require(_token.transfer(_owner, amount), \"Token transfer failed\");\r\n    emit Retrieve(_owner, amount);\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Retrieve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"UnLock\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "TokenLock", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000bddc20ed7978b7d59ef190962f441cd18c14e19f0000000000000000000000005bacb1d4fcefb11da92c05c60d1ddcded221588300000000000000000000000088bba561a97b25bdc967daf6d342f0685e979c5c00000000000000000000000000000000000000000000000000000000674a08c3", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e1604427895a551dd053477b89cffe251ab169c6460751b90c4cd934eff4ad4e"}