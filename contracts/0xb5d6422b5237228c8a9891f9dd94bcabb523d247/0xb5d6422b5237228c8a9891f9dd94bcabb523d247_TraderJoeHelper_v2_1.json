{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/interfaces/ILBPair.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\ninterface ILBPair {\\n\\tfunction getNextNonEmptyBin(bool _swapForY, uint24 _id) external view returns (uint24 nextId);\\n    function getBin(uint24 _id) external view returns (uint128 binReserveX, uint128 binReserveY);\\n}\\n\"\r\n    },\r\n    \"contracts/TraderJoeHelper_v2_1.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"./interfaces/ILBPair.sol\\\";\\n\\n/// @title TraderJoeHelper v2.1\\n/// @dev Helper contract for interacting with TraderJoe pair contracts.\\n// solhint-disable-next-line contract-name-camelcase\\ncontract TraderJoeHelper_v2_1 {\\n    /// @dev Represents data about a bin in a Trader Joe pair.\\n    struct BinData {\\n        uint256 id;\\n        uint256 reserveX;\\n        uint256 reserveY;\\n    }\\n\\n    /**\\n     * @notice Fetches data about a range of bins in a given Trader Joe pair.\\n     * @param pair The Trader Joe pair to fetch bin data from.\\n     * @param offset The ID of the first bin to fetch data from.\\n     * @param size The maximum number of bins to fetch data for.\\n     * @return data An array of BinData structs containing data about each bin.\\n     * @return i The bin id where data collection stopped. It is reset to 0 if end of bins was reached before collecting size bins.\\n     */\\n    function getBins(\\n        ILBPair pair,\\n        uint24 offset,\\n        uint24 size\\n    ) external view returns (BinData[] memory data, uint24 i) {\\n        uint24 lastBin = pair.getNextNonEmptyBin(true, type(uint24).max);\\n        if (lastBin == type(uint24).max) {\\n            return (data, 0);\\n        }\\n        uint256 counter = 0;\\n        data = new BinData[](size);\\n        for (\\n            i = offset;\\n            i < lastBin && counter < size;\\n            i = pair.getNextNonEmptyBin(false, i)\\n        ) {\\n            (uint256 x, uint256 y) = pair.getBin(i);\\n            if (x > 0 || y > 0) {\\n                (data[counter].reserveX, data[counter].reserveY) = (x, y);\\n                data[counter].id = i;\\n                unchecked {\\n                    ++counter;\\n                }\\n            }\\n        }\\n        if (i == lastBin && counter < size) {\\n            (data[counter].reserveX, data[counter].reserveY) = pair.getBin(i);\\n            data[counter].id = i;\\n            unchecked {\\n                ++counter;\\n            }\\n            i = 0;\\n        }\\n\\n        // cut array size down\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly (\\\"memory-safe\\\") {\\n            mstore(data, counter)\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 1000000\r\n    },\r\n    \"viaIR\": true,\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract ILBPair\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"offset\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"size\",\"type\":\"uint24\"}],\"name\":\"getBins\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveY\",\"type\":\"uint256\"}],\"internalType\":\"struct TraderJoeHelper_v2_1.BinData[]\",\"name\":\"data\",\"type\":\"tuple[]\"},{\"internalType\":\"uint24\",\"name\":\"i\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "TraderJoeHelper_v2_1", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "1000000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}