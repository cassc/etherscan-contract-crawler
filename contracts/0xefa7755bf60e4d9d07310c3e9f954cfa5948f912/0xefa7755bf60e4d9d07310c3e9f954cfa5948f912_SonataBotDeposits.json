{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"SonataBotDeposits.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.13;\\n\\ninterface IERC20 {\\n  function transferFrom(address from, address to, uint256 amount) external;\\n  function transfer(address to, uint256 amount) external;\\n  function balanceOf(address user) external view returns (uint256);\\n}\\n\\ncontract SonataBotDeposits {\\n  address public owner;\\n\\n  event Deposit(uint256 user, uint256 amount);\\n  event Withdraw(uint256 user, address receiver, uint256 amount);\\n  event WithdrawFeees(address receiver, uint256 amount);\\n  event FeeChanged(uint256 feeOnDeposit, uint256 feeOnWithdraw);\\n\\n  IERC20 public immutable SONATA;\\n  uint256 public constant feeBase = 10000;\\n  uint256 public feeOnDeposit = 100;\\n  uint256 public feeOnWithdraw = 100;\\n  uint256 public userBalances = 0;\\n\\n  constructor(address sonata, address newOwner){\\n    SONATA = IERC20(sonata);\\n    owner = newOwner;\\n    emit FeeChanged(feeOnDeposit, feeOnWithdraw);\\n  }\\n\\n  modifier onlyOwner(){\\n    require(msg.sender == owner);\\n    _;\\n  }\\n\\n  function transferOwnership(address _new) external onlyOwner {\\n    owner = _new;\\n  }\\n\\n  function deposit(uint256 user, uint256 amount) external {\\n    uint256 balanceBefore = SONATA.balanceOf(address(this));\\n    SONATA.transferFrom(msg.sender, address(this), amount);\\n    // check actual deposit, which can vary from amount due to fee on transfer\\n    uint256 deposited = SONATA.balanceOf(address(this)) - balanceBefore;\\n\\n    // deduct fees, amount added to user balance is received sonata minus fees\\n    if (feeOnDeposit > 0) {\\n      uint256 fee = deposited * feeOnDeposit / feeBase;\\n      deposited = deposited - fee;\\n    }\\n\\n    userBalances += deposited;\\n\\n    emit Deposit(user, deposited);\\n  }\\n\\n  function withdraw(uint256 user, address receiver, uint256 amount) external onlyOwner {\\n    // deduct fees, amount to withdraw from user balance is amount minus fees. Received amount will depend on transfer tax.\\n    uint256 withdrawAmount = amount;\\n    if (feeOnWithdraw > 0) {\\n      uint256 fee = amount * feeOnWithdraw / feeBase;\\n      withdrawAmount = withdrawAmount - fee;\\n    }\\n\\n    SONATA.transfer(receiver, withdrawAmount);\\n\\n    userBalances -= withdrawAmount;\\n\\n    emit Withdraw(user, receiver, amount);\\n  }\\n\\n  function recover(address token, address to, uint256 amount) external onlyOwner {\\n    IERC20(token).transfer(to, amount);\\n  }\\n\\n  function changeFees(uint256 _feeOnDeposit, uint256 _feeOnWithdraw) external onlyOwner {\\n    feeOnDeposit = _feeOnDeposit;\\n    feeOnWithdraw = _feeOnWithdraw;\\n    emit FeeChanged(_feeOnDeposit, _feeOnWithdraw);\\n  }\\n\\n  function withdrawFeeAndReflection(address receiver) external onlyOwner {\\n    uint256 feesAndReflection = SONATA.balanceOf(address(this)) - userBalances;\\n    SONATA.transfer(receiver, feesAndReflection);\\n    emit WithdrawFeees(receiver, feesAndReflection);\\n  }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"evmVersion\": \"istanbul\",\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"libraries\": {\r\n      \"SonataBotDeposits.sol\": {}\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sonata\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"user\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeOnDeposit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeOnWithdraw\",\"type\":\"uint256\"}],\"name\":\"FeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"user\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawFeees\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SONATA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeOnDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeOnWithdraw\",\"type\":\"uint256\"}],\"name\":\"changeFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"user\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeOnDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeOnWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"user\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdrawFeeAndReflection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SonataBotDeposits", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000cefde37817da4fc51ddc24e3820ad316784ee04b000000000000000000000000b43fe948f5d57b75be12bdde8bb4f34a3a1cd161", "EVMVersion": "istanbul", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": ""}