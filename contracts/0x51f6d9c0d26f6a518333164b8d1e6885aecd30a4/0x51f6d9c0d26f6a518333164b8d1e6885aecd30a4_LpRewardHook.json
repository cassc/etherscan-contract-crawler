{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/contracts/LpRewardHook.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.10;\\r\\n\\r\\nimport \\\"./interfaces/IVoterProxy.sol\\\";\\r\\nimport \\\"./interfaces/IBooster.sol\\\";\\r\\n\\r\\n\\r\\n//hook that claims fees\\r\\ncontract LpRewardHook{\\r\\n\\r\\n    address public constant voteproxy = address(0xd11a4Ee017cA0BECA8FA45fF2abFe9C6267b7881);\\r\\n    address public constant hookManager = address(0x723f9Aa67FDD9B0e375eF8553eB2AFC28eCD4a96);\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    function getReward(address) external{\\r\\n        require(msg.sender == hookManager,\\\"!auth\\\");\\r\\n\\r\\n        //ask the current operator to claim fees\\r\\n        IBooster(IVoterProxy(voteproxy).operator()).claimFees();\\r\\n    }\\r\\n\\r\\n}\"\r\n    },\r\n    \"/contracts/interfaces/IVoterProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.10;\\r\\n\\r\\ninterface IVoterProxy{\\r\\n    function operator() external view returns(address);\\r\\n}\"\r\n    },\r\n    \"/contracts/interfaces/IBooster.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.10;\\r\\n\\r\\ninterface IBooster {\\r\\n   function addPool(address _implementation, address _stakingAddress, address _stakingToken) external;\\r\\n   function deactivatePool(uint256 _pid) external;\\r\\n   function voteGaugeWeight(address _controller, address _gauge, uint256 _weight) external;\\r\\n   function setDelegate(address _delegateContract, address _delegate, bytes32 _space) external;\\r\\n   function owner() external returns(address);\\r\\n   function rewardManager() external returns(address);\\r\\n   function isShutdown() external returns(bool);\\r\\n   function claimFees() external;\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hookManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteproxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "LpRewardHook", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "london", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}