{"SourceCode": "// compiled using solidity 0.8.19\r\n\r\npragma solidity 0.8.19;\r\n\r\ncontract DIAOracleV2 {\r\n    mapping (string => uint256) public values;\r\n    address oracleUpdater;\r\n    \r\n    event OracleUpdate(string key, uint128 value, uint128 timestamp);\r\n    event UpdaterAddressChange(address newUpdater);\r\n    \r\n    constructor() {\r\n        oracleUpdater = msg.sender;\r\n    }\r\n    \r\n    function setValue(string memory key, uint128 value, uint128 timestamp) public {\r\n        require(msg.sender == oracleUpdater);\r\n        uint256 cValue = (((uint256)(value)) << 128) + timestamp;\r\n        values[key] = cValue;\r\n        emit OracleUpdate(key, value, timestamp);\r\n    }\r\n\r\n    function setMultipleValues(string[] memory keys, uint256[] memory compressedValues) public {\r\n        require(msg.sender == oracleUpdater);\r\n        require(keys.length == compressedValues.length);\r\n        \r\n        for (uint128 i = 0; i < keys.length; i++) {\r\n            string memory currentKey = keys[i];\r\n            uint256 currentCvalue = compressedValues[i];\r\n            uint128 value = (uint128)(currentCvalue >> 128);\r\n            uint128 timestamp = (uint128)(currentCvalue % 2**128);\r\n\r\n            values[currentKey] = currentCvalue;\r\n            emit OracleUpdate(currentKey, value, timestamp);\r\n        }\r\n    }\r\n    \r\n    function getValue(string memory key) external view returns (uint128, uint128) {\r\n        uint256 cValue = values[key];\r\n        uint128 timestamp = (uint128)(cValue % 2**128);\r\n        uint128 value = (uint128)(cValue >> 128);\r\n        return (value, timestamp);\r\n    }\r\n    \r\n    function updateOracleUpdaterAddress(address newOracleUpdaterAddress) public {\r\n        require(msg.sender == oracleUpdater);\r\n        oracleUpdater = newOracleUpdaterAddress;\r\n        emit UpdaterAddressChange(newOracleUpdaterAddress);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"value\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"timestamp\",\"type\":\"uint128\"}],\"name\":\"OracleUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newUpdater\",\"type\":\"address\"}],\"name\":\"UpdaterAddressChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"compressedValues\",\"type\":\"uint256[]\"}],\"name\":\"setMultipleValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint128\",\"name\":\"value\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"timestamp\",\"type\":\"uint128\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOracleUpdaterAddress\",\"type\":\"address\"}],\"name\":\"updateOracleUpdaterAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"values\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DIAOracleV2", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://96e5eb13f0172bb20b069f03fe9ffde7076e5202691b7e7d22386add3a6144ba"}