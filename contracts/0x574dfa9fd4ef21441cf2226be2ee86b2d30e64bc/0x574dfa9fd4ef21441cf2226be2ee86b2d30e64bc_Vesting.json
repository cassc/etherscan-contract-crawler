{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.9;\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    function balanceOf(address user) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n}\r\n\r\ncontract Vesting {\r\n    uint256 public lock;\r\n    address public owner;\r\n\r\n    struct Vest {\r\n        address token;\r\n        uint256 amount;\r\n        address owner;\r\n        address receiver;\r\n        uint256 startTime;\r\n        uint256 endTime;\r\n        uint256 claimed;\r\n    }\r\n\r\n    mapping(uint256 => Vest) public vesting;\r\n\r\n    event LockCreated(\r\n        uint256 indexed _id,\r\n        address indexed _token,\r\n        uint256 _amount,\r\n        address indexed _owner,\r\n        address _receiver,\r\n        uint256 _startTime,\r\n        uint256 _endTime\r\n    );\r\n\r\n    event TokensClaimed(\r\n        uint256 indexed _id,\r\n        address indexed _token,\r\n        address indexed _receiver,\r\n        uint256 _claimedAmount\r\n    );\r\n\r\n    event ReceiverUpdated(\r\n        address prevValue,\r\n        address newValue,\r\n        uint256 timestamp\r\n    );\r\n\r\n    constructor(address _owner) {\r\n        require(_owner != address(0), \"Zero address\");\r\n        owner = _owner;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) external onlyOwner {\r\n        require(_newOwner != address(0), \"Zero address\");\r\n        owner = _newOwner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not the owner\");\r\n        _;\r\n    }\r\n\r\n    function createLock(\r\n        address _token,\r\n        uint256 _amount,\r\n        address _receiver,\r\n        uint256 _startTime,\r\n        uint256 _endTime\r\n    ) external onlyOwner returns (bool) {\r\n        require(\r\n            _token != address(0) && _receiver != address(0),\r\n            \"Zero address\"\r\n        );\r\n        require(_amount > 0, \"Zero amount\");\r\n        require(\r\n            _startTime > block.timestamp && _endTime > _startTime,\r\n            \"Invalid time\"\r\n        );\r\n        IERC20 ERC20Interface = IERC20(_token);\r\n        lock++;\r\n        vesting[lock] = Vest(\r\n            _token,\r\n            _amount,\r\n            msg.sender,\r\n            _receiver,\r\n            _startTime,\r\n            _endTime,\r\n            0\r\n        );\r\n\r\n        require(\r\n            ERC20Interface.transferFrom(msg.sender, address(this), _amount),\r\n            \"Token transfer failed\"\r\n        );\r\n\r\n        emit LockCreated(\r\n            lock,\r\n            _token,\r\n            _amount,\r\n            msg.sender,\r\n            _receiver,\r\n            _startTime,\r\n            _endTime\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function getClaimableAmount(uint256 _lock) public view returns (uint256) {\r\n        require(_lock > 0 && _lock <= lock, \"Invalid lock id\");\r\n        Vest memory _vest = vesting[_lock];\r\n        if (_vest.amount == _vest.claimed) return 0;\r\n\r\n        if (block.timestamp <= _vest.startTime) return 0;\r\n\r\n        if (block.timestamp >= _vest.endTime)\r\n            return _vest.amount - _vest.claimed;\r\n\r\n        uint256 timePassedRatio = ((block.timestamp - _vest.startTime) *\r\n            10**18) / (_vest.endTime - _vest.startTime);\r\n\r\n        uint256 claimableAmount = (_vest.amount * timePassedRatio) / (10**18);\r\n\r\n        return claimableAmount - _vest.claimed;\r\n    }\r\n\r\n    function claim(uint256 _lock) external onlyOwner returns (bool) {\r\n        uint256 claimableAmount = getClaimableAmount(_lock);\r\n        require(claimableAmount > 0, \"Zero claimable amount\");\r\n\r\n        vesting[_lock].claimed += claimableAmount;\r\n        require(\r\n            IERC20(vesting[_lock].token).transfer(\r\n                vesting[_lock].receiver,\r\n                claimableAmount\r\n            )\r\n        );\r\n        emit TokensClaimed(\r\n            _lock,\r\n            vesting[_lock].token,\r\n            vesting[_lock].receiver,\r\n            claimableAmount\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function changeReceiver(uint256 _lock, address user)\r\n        external\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        require(_lock > 0 && _lock <= lock, \"Invalid lock id\");\r\n        require(user != address(0), \"Zero receiver address\");\r\n        address prevValue = vesting[_lock].receiver;\r\n        vesting[_lock].receiver = user;\r\n        emit ReceiverUpdated(prevValue, user, block.timestamp);\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"LockCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ReceiverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_claimedAmount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"changeReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lock\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"createLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lock\",\"type\":\"uint256\"}],\"name\":\"getClaimableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vesting\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Vesting", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000b2aec2180211c53a938c116ef4cdb99ec2ba9153", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://aaa85bb931db01703ccdee2c902491c0e32b8ca1b364bf29cbcd612b39264315"}