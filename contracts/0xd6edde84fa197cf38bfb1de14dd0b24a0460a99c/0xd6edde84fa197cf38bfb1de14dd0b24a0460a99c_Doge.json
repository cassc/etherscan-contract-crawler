{"SourceCode": "// SPDX-License-Identifier: MIT\r\n/**\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u28f4\u281e\u285f\u28d9\u2836\u28a4\u2840\u2800\u2880\u28c0\u28e0\u28e4\u2864\u28e4\u28a4\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u287e\u288b\u2814\u2852\u280c\u2854\u28a1\u2803\u285d\u28fb\u28ed\u2811\u28e1\u2812\u2870\u2850\u28aa\u2829\u28bf\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u287f\u28d8\u28c4\u28db\u28fc\u28e4\u28e7\u28fc\u28e4\u28c0\u28ff\u28dc\u28e0\u28e7\u28e7\u28fc\u28e4\u28e7\u283f\u28ff\u28a4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28c0\u28c0\u28c0\u28c0\u28c0\u2840\u2800\u2800\u2800\u28c0\u287c\u285f\u28bb\u283b\u2864\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u28e0\u283f\u2836\u28fc\u28fd\u28cd\u28e6\u28f4\u28c4\u28c6\u28de\u28fc\u28ed\u283f\u28e6\u28d4\u28e2\u28e6\u28f6\u28f6\u28f7\u28f7\u28ff\u28fb\u28c6\u2800\u2800\u2800\u2800\u2880\u28f6\u281b\u284d\u28a9\u2858\u2824\u2849\u289c\u28cb\u2875\u285e\u2825\u2851\u288c\u2861\u281a\u2824\u2849\u28b7\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u28a4\u28fe\u280f\u2858\u282c\u287f\u28df\u28a6\u28c0\u28fe\u28ef\u28ff\u287f\u28f7\u2800\u2800\u2838\u2819\u281a\u28fa\u28fb\u28ff\u28c4\u2800\u2800\u2800\u2808\u2847\u2800\u28c0\u28f4\u28be\u28b3\u285a\u2816\u2877\u283e\u2876\u2837\u28ec\u28ee\u28e5\u283e\u2836\u2837\u28b2\u2836\u286d\u28d6\u2865\u28b8\u28fb\u2804\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u28b0\u28ff\u2812\u284c\u28f1\u2818\u2854\u28fa\u28ff\u28ff\u28cf\u28d3\u283b\u2837\u283f\u28e4\u28f4\u2867\u28c4\u28fe\u28ff\u28ff\u28e5\u285f\u2800\u28c0\u28e0\u2876\u2803\u2874\u281b\u281b\u281b\u282f\u283d\u28f7\u28f6\u28f7\u28fe\u28f6\u281b\u281b\u2892\u28fe\u28e5\u287f\u28d6\u2813\u2812\u28fb\u28f7\u2837\u28d8\u2833\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u28a0\u28df\u2871\u28b0\u2821\u28da\u2850\u28bb\u28f7\u28bf\u28db\u287f\u28b7\u28fe\u28f6\u28ef\u28f5\u28f4\u28e6\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2857\u2818\u28c6\u2800\u2800\u2800\u28b0\u287f\u28ef\u28ff\u28e6\u2800\u2838\u2840\u2800\u28bf\u28db\u28ff\u28fe\u28ff\u28a7\u28fe\u28ff\u28f7\u285f\u28a1\u2803\u288e\u28f7\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2818\u28f7\u28cc\u2843\u28a7\u2850\u28a1\u288a\u288e\u2859\u283b\u283f\u28af\u28fd\u28ff\u28fd\u28ff\u28f6\u28ef\u283f\u283f\u285b\u28db\u287f\u281b\u2809\u2800\u2800\u2800\u2819\u28f7\u28e6\u28e4\u28ec\u28ff\u28ff\u28ff\u28ff\u2814\u286a\u281f\u287f\u28fe\u28ed\u28ed\u28f7\u28f6\u28ff\u287f\u28f7\u281f\u2861\u2883\u281e\u2860\u28be\u2847\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u28a0\u28fe\u28c7\u289c\u28a2\u28a8\u28e1\u28ca\u2854\u288c\u2851\u281a\u2824\u28c1\u28c6\u2866\u28d0\u2806\u285c\u28e0\u2883\u2874\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u281b\u281b\u283f\u28bf\u28ff\u28ff\u28df\u28ef\u28ff\u28bf\u28bf\u283f\u287f\u28ed\u28ef\u28ef\u28f7\u286f\u289e\u284b\u288e\u2871\u28c9\u2806\u28d1\u2802\u28c7\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2880\u28ff\u28ff\u28ff\u28ff\u28f6\u28e5\u2883\u282c\u2859\u282b\u288d\u281b\u284d\u28e1\u280a\u2854\u28e1\u28da\u28f4\u28f4\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2833\u28f4\u2848\u284d\u28d9\u28ab\u2899\u285b\u2899\u2829\u288d\u2849\u2886\u2823\u2830\u288c\u2883\u2832\u28a4\u2829\u2884\u28fd\u28ff\u28c6\u2800\u2800\u2800\u2800\r\n\u2800\u28f8\u28ff\u28ff\u28de\u28ff\u28fb\u28ff\u28ff\u28f6\u28f7\u28e7\u28ee\u28fe\u28f6\u28f7\u28fe\u28ff\u28ff\u28bf\u28ff\u28fb\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2813\u28bc\u28e0\u2803\u285c\u289b\u281b\u2873\u2816\u285e\u2856\u285b\u2837\u28da\u281b\u28cb\u28e4\u28f7\u28fe\u28ff\u28df\u28ff\u2846\u2800\u2800\u2800\r\n\u2800\u28ff\u28ff\u28af\u28ff\u28bf\u28fb\u28ef\u28ff\u28bf\u28df\u28ff\u28ff\u28bf\u28ff\u28fb\u28ff\u28fb\u28fd\u28fe\u28df\u28ff\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28ff\u28f6\u28f7\u28ec\u28e6\u28c3\u28d4\u28e1\u28c3\u28a7\u28d0\u28cd\u28f6\u28ff\u28ff\u28ff\u287f\u28ff\u28fd\u28ff\u28f7\u2800\u2800\u2800\r\n\u28a0\u28ff\u28ff\u28bf\u28fb\u28ff\u28bf\u28fd\u28fe\u28ff\u28fb\u28fd\u28fe\u28bf\u28ef\u28ff\u28b7\u28ff\u28ef\u28f7\u28ff\u28fb\u28fe\u28ff\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b0\u28ff\u28df\u28ff\u28fb\u28ff\u28bf\u28ff\u28ff\u287f\u28ff\u28ff\u287f\u28ff\u28ef\u28ff\u287e\u28df\u28ff\u28f7\u28ef\u28ff\u2847\u2800\u2800\r\n\u28b8\u28ff\u28fb\u28ff\u287f\u28fd\u28ff\u28ef\u28ff\u28be\u287f\u28fd\u28fe\u28ff\u28fb\u28fe\u287f\u28f7\u28ff\u28f3\u28ff\u28af\u28f7\u28ff\u28f7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fe\u28ff\u28fb\u28fd\u28ff\u28be\u28ff\u28fb\u28fe\u28bf\u28df\u28fe\u287f\u28df\u28f7\u28ff\u28fb\u28ff\u28df\u28fe\u2877\u28ff\u28ff\u2800\u2800\r\n\u28b8\u28ff\u28bf\u28f3\u28ff\u28bf\u28f7\u28df\u28ef\u28ff\u28bf\u28fb\u28f7\u28bf\u28ef\u28f7\u28ff\u28bf\u28fe\u28bf\u28fd\u28ff\u28fb\u28fe\u28bf\u28c7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u28df\u28ff\u28fd\u28fe\u287f\u28ef\u28ff\u28fd\u28ff\u28fb\u28fd\u28ff\u28df\u28ff\u287e\u28df\u28f7\u28ff\u28af\u28ff\u2877\u28ff\u2846\u2800\r\n\u2838\u28ff\u287f\u28df\u28ff\u28fb\u28fd\u28fe\u28bf\u28ef\u28ff\u28bf\u28fd\u287f\u28ef\u28f7\u287f\u28ff\u28af\u28ff\u28df\u28fe\u287f\u28fd\u28ff\u28fb\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fe\u28ff\u28af\u28ff\u28fd\u28fe\u28bf\u28ff\u28fd\u28fe\u28bf\u28fd\u287f\u28f7\u287f\u28ef\u28ff\u28bf\u28fb\u28fe\u287f\u28ef\u28ff\u287f\u28e7\u2800\r\n\u2808\u28bf\u28ff\u28ff\u28fb\u28fd\u287f\u28fe\u28ff\u28fb\u28fe\u287f\u28ef\u28ff\u28bf\u28fd\u28ff\u28fb\u28ff\u28af\u28ff\u28ef\u28ff\u28df\u28f7\u28ff\u28f7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28ff\u287f\u28df\u28ef\u28ff\u28fe\u28bf\u28fb\u28fe\u28df\u28ff\u28af\u28ff\u2877\u28ff\u287f\u28fd\u28ff\u28bf\u28ef\u28ff\u28df\u28f7\u28ff\u28ff\u2800\r\n\u2800\u2808\u28bb\u28ff\u28ff\u28f7\u28ff\u28ff\u287f\u283f\u283e\u283f\u283f\u287d\u287f\u287f\u283e\u28ff\u287d\u283f\u28f7\u281b\u2873\u28db\u289b\u283b\u285f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u287f\u28ff\u28df\u28ef\u28f7\u28ff\u28fb\u28ff\u28f3\u287f\u28ef\u28ff\u28b7\u28ff\u287f\u28fd\u28ff\u28fd\u28ff\u28df\u28fe\u28ff\u28f7\u28ff\u283f\u2802\r\n\u2800\u2800\u28b8\u281f\u28bf\u28fe\u28f7\u28ff\u28f7\u2889\u285c\u28e1\u2813\u2874\u2811\u28fc\u285f\u28e9\u2891\u28fe\u289b\u281b\u285d\u285b\u2896\u283b\u2867\u28c4\u28c0\u28f4\u281e\u2876\u28a6\u28c0\u28e4\u2864\u28a4\u2864\u287f\u2834\u286c\u28ad\u283f\u283f\u28af\u284d\u287b\u283f\u28dd\u281b\u284f\u28bf\u28ff\u28ff\u28fd\u28fe\u28ff\u2869\u28c9\u2835\u28a8\u28f8\u2800\u2800\r\n\u2800\u2800\u2818\u28ff\u28a0\u280b\u284d\u28ec\u2811\u28aa\u28b0\u28a1\u280b\u28f4\u28a9\u2854\u28a9\u2813\u28fe\u28a1\u280a\u28b1\u284c\u28a9\u284c\u28b1\u28b0\u2808\u284d\u28ff\u28f7\u28fe\u284f\u285d\u28a0\u281a\u28e4\u28a2\u2811\u28e6\u2811\u28aa\u2810\u28a1\u280a\u28ff\u2854\u28f7\u285e\u28a1\u281a\u28fd\u28ff\u28fd\u28fe\u28f7\u285f\u28b1\u284c\u28aa\u2845\u28fe\u2800\u2800\r\n\u2800\u2800\u2800\u28b7\u28ce\u2812\u286d\u28b0\u2849\u288e\u2826\u28a9\u281c\u2864\u2883\u2836\u2821\u289e\u28ff\u287e\u283c\u2836\u283e\u28b6\u289b\u28f6\u28f6\u28e7\u28a7\u28f1\u28c1\u28c6\u2879\u2837\u28cc\u28d2\u28cc\u28e2\u28d1\u2860\u288d\u2842\u2813\u28cc\u28f2\u28fd\u28b7\u2870\u288c\u2823\u288e\u2870\u2899\u282f\u287f\u283f\u2858\u28a2\u2851\u282a\u28bc\u284f\u2800\u2800\r\n\u2800\u2800\u2800\u2808\u28af\u2853\u28cc\u2823\u285c\u28ac\u2858\u28e1\u281a\u2834\u28c9\u2832\u28c9\u2806\u28fc\u2823\u285c\u28e9\u2831\u288c\u28a6\u287f\u2818\u282f\u28dd\u28f3\u287f\u28fb\u28d6\u28fe\u281f\u2801\u2800\u2808\u2839\u28cf\u2839\u28d9\u282b\u288d\u2869\u28f9\u2846\u285c\u28a2\u2859\u2826\u2871\u28c9\u2826\u2861\u2883\u284d\u2826\u2831\u28e9\u287f\u2801\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2808\u28f7\u2820\u2853\u285c\u2870\u2858\u28a4\u2859\u28a6\u28a1\u2813\u286c\u28b8\u2867\u2871\u2858\u28a4\u2813\u284c\u28fe\u2847\u2800\u2800\u2800\u2809\u280b\u2809\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u28e7\u2813\u286c\u2851\u280e\u2854\u28a1\u28f7\u280c\u2871\u288c\u28a3\u2851\u2886\u28a3\u2851\u28a3\u281c\u284c\u28a3\u287f\u2801\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2818\u28e7\u2831\u288c\u2871\u2889\u2826\u2858\u2886\u28a3\u2849\u2886\u28ff\u2830\u28e1\u2819\u2886\u2879\u2830\u28fd\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b9\u280e\u2834\u28c9\u289a\u2858\u2824\u28f9\u284e\u2834\u2849\u2886\u282d\u2858\u28a2\u2849\u2886\u2833\u28cc\u28ff\u2803\u2800\u2800\u2800\u2800\r\n\r\n\r\nhttps://eper69i.com/\r\nhttps://twitter.com/eper69i\r\nhttps://t.me/eper69i\r\n\r\nElonPepeEldenRing69Inu (DOGE)\r\n\r\n**/\r\npragma solidity 0.8.19;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract Doge is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    mapping(address => uint256) private _holderLastTransferTimestamp;\r\n    bool public transferDelayEnabled = true;\r\n    address payable private _taxWallet;\r\n\r\n    uint256 private _initialBuyTax=20;\r\n    uint256 private _initialSellTax=20;\r\n    uint256 private _finalTax=1;\r\n    uint256 private _burnTax=0;\r\n    uint256 private _reduceBuyTaxAt=10;\r\n    uint256 private _reduceSellTaxAt=20;\r\n    uint256 private _preventSwapBefore=20;\r\n    uint256 private _buyCount=0;\r\n\r\n    uint8 private constant _decimals = 8;\r\n    uint256 private constant _tTotal = 1000000000 * 10**_decimals;\r\n    string private constant _name = unicode\"ElonPepeEldenRing69Inu\";\r\n    string private constant _symbol = unicode\"DOGE\";\r\n    uint256 public _maxTxAmount = 20000000 * 10**_decimals;\r\n    uint256 public _maxWalletSize = 20000000 * 10**_decimals;\r\n    uint256 public _taxSwapThreshold= 10000000 * 10**_decimals;\r\n    uint256 public _maxTaxSwap= 10000000 * 10**_decimals;\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address private uniswapV2Pair;\r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n\r\n    event MaxTxAmountUpdated(uint _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor () {\r\n        _taxWallet = payable(_msgSender());\r\n        _balances[_msgSender()] = _tTotal;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_taxWallet] = true;\r\n\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        uint256 taxAmount=0;\r\n        uint256 burnAmount=amount.mul(_burnTax).div(100);\r\n        if (from != owner() && to != owner()) {\r\n            taxAmount = amount.mul((_buyCount>_reduceBuyTaxAt)?_finalTax:_initialBuyTax).div(100);\r\n\r\n            if (transferDelayEnabled) {\r\n                  if (to != address(uniswapV2Router) && to != address(uniswapV2Pair)) {\r\n                      require(\r\n                          _holderLastTransferTimestamp[tx.origin] <\r\n                              block.number,\r\n                          \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\"\r\n                      );\r\n                      _holderLastTransferTimestamp[tx.origin] = block.number;\r\n                  }\r\n              }\r\n\r\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\r\n                require(amount <= _maxTxAmount, \"Exceeds the _maxTxAmount.\");\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\r\n                _buyCount++;\r\n            }\r\n\r\n            if(to == uniswapV2Pair && from!= address(this) ){\r\n                taxAmount = amount.mul((_buyCount>_reduceSellTaxAt)?_finalTax:_initialSellTax).div(100);\r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (!inSwap && to   == uniswapV2Pair && swapEnabled && contractTokenBalance>_taxSwapThreshold && _buyCount>_preventSwapBefore) {\r\n                swapTokensForEth(min(amount,min(contractTokenBalance,_maxTaxSwap)));\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if(contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n        }\r\n\r\n        _balances[from]=_balances[from].sub(amount);\r\n        _balances[to]=_balances[to].add(amount.sub(taxAmount).sub(burnAmount));\r\n        emit Transfer(from, to, amount.sub(taxAmount).sub(burnAmount));\r\n        if(taxAmount>0){\r\n          _balances[address(this)]=_balances[address(this)].add(taxAmount);\r\n          emit Transfer(from, address(this),taxAmount);\r\n        }\r\n        if(burnAmount>0){\r\n          _balances[address(0x0)]=_balances[address(0x0)].add(burnAmount);\r\n          emit Transfer(from, address(0x0),burnAmount);\r\n        }\r\n    }\r\n\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256){\r\n      return (a>b)?b:a;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }\r\n\r\n    function sendETHToFee(uint256 amount) private {\r\n        _taxWallet.transfer(amount);\r\n    }\r\n\r\n    function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n    }\r\n\r\n    \r\n    function reduceFee(uint256 _newFee) external{\r\n      require(_msgSender()==_taxWallet);\r\n      require(_newFee<=_finalTax);\r\n      _finalTax=_newFee;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function manualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"reduceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferDelayEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Doge", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://57efa3a3515c72c14ae7d88b60d2829d11d5e63febb2edd193aa53ab4f1c5c88"}