{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.7;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IUSDT {\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address to, uint256 amount) external;\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external;\r\n}\r\n\r\ninterface IUSDC {\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\n\r\ncontract GINPreSale {\r\n    address public owner;\r\n    uint256 public min;\r\n    address public token;\r\n    address public usdt;\r\n    address public usdc;\r\n    uint256 public initEth;\r\n    uint256 public initUsd;\r\n    bool public pause = false;\r\n    uint8 public decimals;\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier notPaused {\r\n        require(pause == false);\r\n        _;\r\n    }\r\n\r\n    event Buy(address indexed user, uint8 method, uint256 payed, uint256 tokens, uint256 timestamp);\r\n\r\n    constructor(uint256 _min, uint256 _initEth, uint256 _initUsd) {\r\n        owner = msg.sender;\r\n        min = _min;\r\n        initEth = _initEth;\r\n        initUsd = _initUsd;\r\n        token = 0x03d788269Cd58830C124Cb683bE4FB45BaB3042E;\r\n        usdt = 0xdAC17F958D2ee523a2206206994597C13D831ec7;\r\n        usdc = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\r\n        decimals = 18;\r\n    }\r\n\r\n    function buy() notPaused public payable {\r\n        uint256 amount = msg.value / initEth;\r\n        \r\n        require(amount >= min);\r\n\r\n        IERC20 itoken = IERC20(token);\r\n        itoken.transfer(msg.sender, amount * 10**decimals);\r\n\r\n        emit Buy(msg.sender, 0, msg.value, amount, block.timestamp);\r\n    }\r\n    \r\n    function buyUsd(uint8 method, uint256 amount) notPaused public {\r\n        uint256 tokens = amount / initUsd;\r\n\r\n        require(tokens >= min);\r\n\r\n        require(method == 1 || method == 2);\r\n\r\n        if(method == 1) {\r\n            IUSDT iusdt = IUSDT(usdt);\r\n            iusdt.transferFrom(msg.sender, address(this), amount);\r\n        }\r\n        if(method == 2) {\r\n            IUSDC iusdc = IUSDC(usdc);\r\n            iusdc.transferFrom(msg.sender, address(this), amount);\r\n        }\r\n        \r\n        IERC20 itoken = IERC20(token);\r\n        itoken.transfer(msg.sender, tokens * 10**decimals);\r\n\r\n        emit Buy(msg.sender, method, amount, tokens, block.timestamp);\r\n    }\r\n\r\n    function withdrawEthers() onlyOwner external {\r\n        address payable owner_temp = payable(owner);\r\n        address this_contract = address(this);\r\n        owner_temp.transfer(this_contract.balance);\r\n    }\r\n\r\n    function withdrawUsd(uint8 method) onlyOwner external {\r\n        if(method == 1) {\r\n            IUSDT iusdt = IUSDT(usdt);\r\n            iusdt.transfer(owner, iusdt.balanceOf(address(this)));\r\n        }\r\n        if(method == 2) {\r\n            IUSDC iusdc = IUSDC(usdt);\r\n            iusdc.transfer(owner, iusdc.balanceOf(address(this)));\r\n        }\r\n    }\r\n\r\n    function withdrawTokens() onlyOwner external {\r\n        IERC20 itoken = IERC20(token);\r\n        itoken.transfer(owner, itoken.balanceOf(address(this)));\r\n    }\r\n\r\n    function changeParams(uint256 _min, uint256 _initEth, uint256 _initUsd, address _token, address _usdt, address _usdc, uint8 _decimals) onlyOwner external {\r\n        min = _min;\r\n        initEth = _initEth;\r\n        initUsd = _initUsd;\r\n        token = _token;\r\n        usdt = _usdt;\r\n        usdc = _usdc;\r\n        decimals = _decimals;\r\n    }\r\n\r\n    function transferOwnership(address _owner) onlyOwner external {\r\n        owner = _owner;\r\n    }\r\n\r\n    function setPause(bool _pause) onlyOwner external {\r\n        pause = _pause;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initEth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initUsd\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"method\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"method\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyUsd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initEth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initUsd\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"name\":\"changeParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"min\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEthers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"method\",\"type\":\"uint8\"}],\"name\":\"withdrawUsd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "GINPreSale", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000008a8e4b1a3d80000000000000000000000000000000000000000000000000000000000003938700", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0b1b4cff184d9ee3fcf2b9257bba4d01dd744ff02427079cfd86fc685eb2f22b"}