{"SourceCode": "/**\r\n\r\nWEB: http://spacegens.xyz/\r\n\r\nTwitter: https://twitter.com/SpaceGens\r\n\r\nTelegram: https://t.me/+LrqzYSGcK49lZDcx\r\n\r\n*/\r\n\r\n\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.21;\r\n\r\ncontract SpaceGens {\r\n    string public name = \"SpaceGens\";\r\n    string public symbol = \"Space\";\r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply = 69_000_000_000_000 * 10**uint256(decimals);\r\n\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    mapping(address => bool) private _isBlacklisted;\r\n    mapping(address => uint256) private _transactionCount;\r\n    mapping(address => uint256) private _lastSellTimestamp;\r\n    mapping(address => uint256) private _totalHolding;\r\n    address[] private _tokenHolders;\r\n    uint256 private _tokenHoldersCount;\r\n\r\n    uint8 public buyTaxRate = 19;\r\n    uint8 public sellTaxRate = 23;\r\n    uint8 public burnRateOnSell = 0;\r\n    uint8 public distributionRateOnSell = 0;\r\n\r\n    address public creator;\r\n    bool public isOwnershipRenounced;\r\n    uint256 public maxTransactionsPerWallet = 1000;\r\n    bool public isPaused;\r\n    bool public isTradingOpen = true;\r\n\r\n    uint256 public currentSnapshotId = 0;\r\n    mapping(uint256 => mapping(address => uint256)) public snapshotBalances;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event OwnershipRenounced(address indexed previousOwner);\r\n    event TokensBurned(address indexed burner, uint256 amount);\r\n    event TokensDistributed(address indexed distributor, uint256 amount);\r\n    event TradingStatusChanged(bool newStatus);\r\n    event SnapshotTaken(uint256 snapshotId);\r\n    event TokensAirdropped(address indexed from, address[] recipients, uint256[] amounts);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == creator, \"Only the owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    modifier notBlacklisted(address _from, address _to) {\r\n        require(!_isBlacklisted[_from], \"Sender is blacklisted\");\r\n        require(!_isBlacklisted[_to], \"Receiver is blacklisted\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyCreator() {\r\n        require(msg.sender == creator, \"Only the creator can call this function\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        balanceOf[msg.sender] = totalSupply;\r\n        creator = msg.sender;\r\n\r\n        _tokenHolders.push(creator);\r\n        _tokenHoldersCount = 1;\r\n        _totalHolding[creator] = totalSupply;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) external notBlacklisted(msg.sender, _to) returns (bool) {\r\n        require(_to != address(0), \"Invalid address\");\r\n        require(balanceOf[msg.sender] >= _value, \"Insufficient balance\");\r\n        require(_transactionCount[msg.sender] < maxTransactionsPerWallet, \"Exceeded maximum transactions\");\r\n        require(!isPaused, \"Transfers are paused\");\r\n        require(isTradingOpen, \"Trading is closed\");\r\n\r\n        uint256 taxAmount = 0;\r\n        if (msg.sender != creator) {\r\n            taxAmount = (_value * sellTaxRate) / 100;\r\n            balanceOf[creator] += taxAmount;\r\n            emit Transfer(msg.sender, creator, taxAmount);\r\n        }\r\n\r\n        balanceOf[msg.sender] -= (_value + taxAmount);\r\n        balanceOf[_to] += _value;\r\n        _transactionCount[msg.sender]++;\r\n\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) external returns (bool) {\r\n        require(spender != address(0), \"Invalid address\");\r\n\r\n        allowance[msg.sender][spender] = value;\r\n\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) external notBlacklisted(_from, _to) returns (bool success) {\r\n        require(_from != address(0), \"Invalid address\");\r\n        require(_to != address(0), \"Invalid address\");\r\n        require(balanceOf[_from] >= _value, \"Insufficient balance\");\r\n        require(allowance[_from][msg.sender] >= _value, \"Allowance exceeded\");\r\n        require(_transactionCount[_from] < maxTransactionsPerWallet, \"Exceeded maximum transactions\");\r\n        require(!isPaused, \"Transfers are paused\");\r\n        require(isTradingOpen, \"Trading is closed\");\r\n\r\n        uint256 taxAmount = 0;\r\n        if (_from != creator && msg.sender != creator) {\r\n            taxAmount = (_value * buyTaxRate) / 100;\r\n            balanceOf[creator] += taxAmount;\r\n            emit Transfer(_from, creator, taxAmount);\r\n        }\r\n\r\n        balanceOf[_from] -= (_value + taxAmount);\r\n        balanceOf[_to] += _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        _transactionCount[_from]++;\r\n        success = true;\r\n\r\n        emit Transfer(_from, _to, _value);\r\n    }\r\n\r\n    function setTaxRates(uint8 _buyTaxRate, uint8 _sellTaxRate) external onlyOwner {\r\n        require(_buyTaxRate <= 100 && _sellTaxRate <= 100, \"Invalid tax rate\");\r\n        buyTaxRate = _buyTaxRate;\r\n        sellTaxRate = _sellTaxRate;\r\n    }\r\n\r\n    function addToBlacklist(address wallet) external onlyOwner {\r\n        require(wallet != address(0), \"Invalid address\");\r\n        require(!_isBlacklisted[wallet], \"Address is already blacklisted\");\r\n        _isBlacklisted[wallet] = true;\r\n        emit Transfer(wallet, address(0), balanceOf[wallet]);\r\n        balanceOf[wallet] = 0;\r\n    }\r\n\r\n    function removeFromBlacklist(address wallet) external onlyOwner {\r\n        require(_isBlacklisted[wallet], \"Address is not blacklisted\");\r\n        _isBlacklisted[wallet] = false;\r\n    }\r\n\r\n    function renounceOwnership() external onlyOwner {\r\n        require(!isOwnershipRenounced, \"Ownership already renounced\");\r\n        creator = address(0);\r\n        isOwnershipRenounced = true;\r\n        emit OwnershipRenounced(msg.sender);\r\n    }\r\n\r\n    function setMaxTransactionsPerWallet(uint256 _maxTransactions) external onlyOwner {\r\n        maxTransactionsPerWallet = _maxTransactions;\r\n    }\r\n\r\n    function pauseTransfers() external onlyOwner {\r\n        isPaused = true;\r\n    }\r\n\r\n    function unpauseTransfers() external onlyOwner {\r\n        isPaused = false;\r\n    }\r\n\r\n    // Function to open or close trading (onlyOwner)\r\n    function setTradingStatus(bool status) external onlyOwner {\r\n        isTradingOpen = status;\r\n        emit TradingStatusChanged(status);\r\n    }\r\n\r\n    // Function to take a snapshot of token balances (onlyOwner)\r\n    function takeSnapshot() external onlyOwner {\r\n        currentSnapshotId++;\r\n        uint256 snapshotId = currentSnapshotId;\r\n\r\n        for (uint256 i = 0; i < _tokenHoldersCount; i++) {\r\n            address holderAddress = _tokenHolders[i];\r\n            snapshotBalances[snapshotId][holderAddress] = balanceOf[holderAddress];\r\n        }\r\n\r\n        emit SnapshotTaken(snapshotId);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"SnapshotTaken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TokensAirdropped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newStatus\",\"type\":\"bool\"}],\"name\":\"TradingStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"addToBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnRateOnSell\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTaxRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSnapshotId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributionRateOnSell\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwnershipRenounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTradingOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransactionsPerWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTransfers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTaxRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTransactions\",\"type\":\"uint256\"}],\"name\":\"setMaxTransactionsPerWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_buyTaxRate\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_sellTaxRate\",\"type\":\"uint8\"}],\"name\":\"setTaxRates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setTradingStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"snapshotBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeSnapshot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseTransfers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SpaceGens", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://43d9219c7adcf6b584801e1f5ad09acf9619bfb4ba793f01baf76e7e60b52697"}