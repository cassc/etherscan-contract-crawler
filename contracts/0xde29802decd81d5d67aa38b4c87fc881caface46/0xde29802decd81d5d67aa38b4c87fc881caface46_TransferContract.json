{"SourceCode": "pragma solidity ^0.6.0;\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\ncontract TransferContract {\r\n\r\n\r\n    function transfer(\r\n        address[] memory _tokenContracts,\r\n        address[] memory _fromAddresses,\r\n        address[] memory _toAddresses\r\n    ) external  {\r\n\r\n\r\n        if (_tokenContracts.length != _fromAddresses.length || _tokenContracts.length != _toAddresses.length) {\r\n            revert(\"Error: array length mismatch.\");\r\n        }\r\n\r\n\r\n        for (uint i = 0; i < _tokenContracts.length; i++) {\r\n\r\n            IERC20 tokenContract = IERC20(_tokenContracts[i]);\r\n\r\n            tokenContract.transferFrom(_fromAddresses[i], _toAddresses[i], 0);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokenContracts\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_fromAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_toAddresses\",\"type\":\"address[]\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TransferContract", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2d87b16b07c22ab96476d6f84406a1a273115e194cb83af0e06e67564acea0a4"}