{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/LAMBO.SOL\": {\r\n      \"content\": \"\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\n// L.A.M.B.O. = Legends Always Moon Before Others\\r\\n\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function _renounceOwnership() internal virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner can not be the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract ERC20 is Ownable {\\r\\n\\r\\n    string public constant name = \\\"LegendsAlwaysMoonBeforeOthers\\\";\\r\\n    string public constant symbol = \\\"LAMBO\\\";\\r\\n    uint8 public constant decimals = 18;  \\r\\n    uint256 public constant totalSupply = 34643662287895000000000000; // 34,643,662.287895 * (10**decimals)\\r\\n    uint256 public maxTXamount = totalSupply;\\r\\n    uint256 public maxTXamountLaunch = 150000 * (10**decimals);\\r\\n\\r\\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\\r\\n    event Transfer(address indexed from, address indexed to, uint tokens);\\r\\n\\r\\n\\r\\n    mapping(address => uint256) balances;\\r\\n\\r\\n    mapping(address => mapping (address => uint256)) allowed;\\r\\n    \\r\\n   constructor() {  \\r\\n\\t    maxTXamount = maxTXamountLaunch;\\r\\n        address newOwner = _msgSender();\\r\\n        balances[newOwner] = totalSupply;\\r\\n        transferOwnership(newOwner);\\r\\n    }  \\r\\n \\r\\n    function balanceOf(address tokenOwner) external view returns (uint) {\\r\\n        return balances[tokenOwner];\\r\\n    }\\r\\n     function tokenRemaning(address token) external view returns (uint) {\\r\\n        return balances[token];\\r\\n}\\r\\n    function transfer(address receiver, uint numTokens) public returns (bool) {\\r\\n       uint OwnerBalance=balances[msg.sender];\\r\\n        require(numTokens <= OwnerBalance ,\\\"Don't have enough Tokens...\\\");\\r\\n        require(numTokens <=maxTXamount ,\\\"Current Max number of tokens limit per single transaction exceeded\\\");\\r\\n\\r\\n        balances[msg.sender] = OwnerBalance-numTokens;\\r\\n        balances[receiver]+=numTokens;\\r\\n        emit Transfer(msg.sender, receiver, numTokens);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function approve(address delegate, uint numTokens) external returns (bool) {\\r\\n        allowed[msg.sender][delegate] = numTokens;\\r\\n        emit Approval(msg.sender, delegate, numTokens);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address delegate) external view returns (uint) {\\r\\n        return allowed[owner][delegate];\\r\\n    }\\r\\n\\r\\n    function transferFrom(address owner, address buyer, uint numTokens) public returns (bool) {\\r\\n       uint OwnerBalance=balances[owner];\\r\\n       uint AlowedOwner=allowed[owner][msg.sender];\\r\\n\\r\\n        require(numTokens <= OwnerBalance,\\\"Don't have enough Tokens...\\\");    \\r\\n        require(numTokens <= AlowedOwner);\\r\\n    \\r\\n        balances[owner] = OwnerBalance-numTokens;\\r\\n        allowed[owner][msg.sender] =AlowedOwner-numTokens;\\r\\n        balances[buyer] +=numTokens;\\r\\n        emit Transfer(owner, buyer, numTokens);\\r\\n        return true;\\r\\n    }\\r\\n    \\r\\n    function updateMaxTXamount(uint256 newMaxTXAmount) external onlyOwner returns (bool){\\r\\n        maxTXamount = newMaxTXAmount * (10**decimals);\\r\\n        return true;\\r\\n      }\\r\\n\\r\\n    function renounceOwnership() external virtual onlyOwner {\\r\\n        // Make sure to remove any swap limits by setting to total supply before calling standard renounce function\\r\\n        maxTXamount = totalSupply;\\r\\n        _renounceOwnership(); \\r\\n    }\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTXamount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTXamountLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenRemaning\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxTXAmount\",\"type\":\"uint256\"}],\"name\":\"updateMaxTXamount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ERC20", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}