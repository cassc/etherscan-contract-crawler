{"SourceCode": "/*\r\n\r\nTwitter: https://twitter.com/CavachonEth\r\n\r\nTelegram: https://t.me/CavachonCoin\r\n\r\nMedium: https://medium.com/@dev_72199/cavachon-6730e21a7470\r\n\r\nWeb: https://www.cavachon.io\r\n\r\nWeb REDIR\thttp://www.cavachon.biz\r\nWeb REDIR\thttp://www.cavachon.club\r\nWeb REDIR\thttp://www.cavachon.info\r\nWeb REDIR\thttp://www.cavachon.live\r\nWeb REDIR\thttp://www.cavachon.online\r\nWeb REDIR\thttp://www.cavachon.pro\r\nWeb REDIR\thttp://www.cavachon.site\r\nWeb REDIR\thttp://www.cavachon.space\r\nWeb REDIR\thttp://www.cavachon.tech\r\nWeb REDIR\thttp://www.cavachon.vip\r\nWeb REDIR\thttp://www.cavachon.xyz\r\nWeb REDIR\thttp://www.cavachon.art\r\nWeb REDIR\thttp://www.cavachon.store\r\nWeb REDIR\thttp://www.cavachon.ink\r\nWeb REDIR\thttp://www.cavachon.cloud\r\nWeb REDIR\thttp://www.cavachon.cc\r\n\r\n\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@&BGP5YJ???7777???JY5PGB&@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@&#G5J?7!!!!!!!!!!!!!!!!!!!!!!7?J5G#&@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@#PY?!!!!!!!!!!!!!!!!!!!777777!!!!!!!!!?YP#@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@#5?!!!!!!!!!!!!!!!!!!!!7?77!7JY?777!!!7!!!!!!?5B@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@&P?!!!!!!!!!!!!!!!!!!77?J??~^!?J?7!!!!7?J?!!!!!!!!!?P&@@@@@@@@@@@@@\r\n@@@@@@@@@@@#57!!!!!!!!!!!!!!!!???77?J?~^^~~^^^^~!!7?JJ7!!!!!!!!!!!7Y#@@@@@@@@@@@\r\n@@@@@@@@@&Y7!!!!!!!!!!!!!!J77775~^~^::::^^^^~!7J?^::.^!7?J?777!!!!!!!Y#@@@@@@@@@\r\n@@@@@@@@P7!!!!!!!!!77777??JJ7^!^::~?~::^~~~~~!!~^::::^^~!777?J7?!!!!!!75@@@@@@@@\r\n@@@@@@#J!!!!!!!!7?????JJYJJ7::^::::^^::^:::::::.::::::^^^^^^~~???7!!!!!!?#@@@@@@\r\n@@@@@G7!!!!!!!7??777??????JJ~:.:::.:~~^^......::::::^^~!7?!~~^:::7?!!!!!!7G@@@@@\r\n@@@@P!!!!!!!!7J?7??????JYYYYJ~^:::~!:::::::^^^::::^~~~!Y7:.:^~~^:.JY?!!!!!!P@@@@\r\n@@@P!!!!!!!!7Y?????????JYJYY5?!^:7~:^~^~~~!7??7!^^!!~!7!^~!7!!~77:~5JJ7!!!!!P@@@\r\n@@B!!!!!!!!!5Y??J????????JYY5?!~?7~!^:~~!JJYYJJ?7^:::^~JYYYY?77:^?!Y?JY7!!!!!G@@\r\n@&7!!!!!!!!Y5?7YY??J?????YY5J!!?57~:.7?7Y5GGBPY55~.::.YGGBPPP?J^.~YY?75Y!!!!!7&@\r\n@5!!!!!!!?55J?YY??YY?7J??Y5Y?!!77~:::7Y55B#&&P?J5!^:::P#&&YJY5J^~~JYY!7P?!!!!!5@\r\n&7!!!!!!75YJYYJ??YYJ77J?JY5Y?!!!?~.::~~?YGPB#BP75?!^:.7PGGG?75?!??Y5Y?7YJ!!!!!7#\r\nG!!!!!!?5JJYJ??J????7?J?YYPJ?!!77^^::.:!?YY77!~~~^^::::::^~^?JJ?7?5PYY5Y57!!!!!P\r\nY!!!!!75Y??77??J??JY??Y7YYP7!7??!~::^^~~^::......:::.........:!??755YYYJ5Y7!!!!Y\r\nJ!!!!!?5Y??7J??5??5Y5YY7YPY77YY!7JJ?7~::::.:::::::::^?Y557^^::..:!55Y5?J57!!!!!?\r\nJ!!!!!YP???JY7YYJ?5YYY5?YG?7!~^~JJ!^:.^~~^^^^:.::::^B&&&&#~J^:::..:!5Y?5Y!!!!!!?\r\nY!!!!7YJ??JYJ5Y?Y?Y5Y???Y?7?:.~5!:..:7?7!!?7~:.:::::P&&##&5Y::::^~~^^J5P7!!!!!!Y\r\nG!!!!!??Y?J??J?YY??5Y???Y7J?:.7!::::??~:.!~:^~~::::.~JPB#B5~:::^:!77^:J5!!!!!!!P\r\n&7!!!!?YPJ??!??5???Y?7?YY!~:.!7^:::^^...^~!JJ7~^^^^^^^!JY~:..^7?^^!Y7~~Y!!!!!!7#\r\n@5!!!!7JP5?Y7??J????7?P5!::~JY?~7~::.:::~?YPJ?7???JJJJJ?YJ7!7JPJ!^.~:!JY!!!!!!5@\r\n@&7!!!!!Y5Y5?7JJ??YYJP5?JJ7!JY?J!:::!7!~:^!Y5J~^:::......^!JY????^..75J7!!!!!7&@\r\n@@B!!!!!!?55Y?5Y7JPGPYJYY7::YY5~.::::::::.:!JYJ!^::...::::^?Y?7Y?::YY7!!!!!!!G@@\r\n@@@P!!!!!!7J555PJPGGG5?7~^^:J57:!~...^:::.:^:^!7777777!!~^::~J?5Y7Y5?!!!!!!!P@@@\r\n@@@@P!!!!!!!!7?JJY5GGGPPP5YJ?Y?J7.:^?~.:^~!!:!::!~^:::...:!?JJP5YJ7!!!!!!!!P@@@@\r\n@@@@@G7!!!!!!!!!!!!?YGGGGGGGGPGJ~7YGY~YYJJJ?J?75P?^:~^:~~5GPPGBJ!!!!!!!!!7G@@@@@\r\n@@@@@@#?!!!!!!!!!!!!!7YPGGGGPGBPGGGGPGGGGGGGGPGG5?7??~J5GGGPPPP?!!!!!!!!?#@@@@@@\r\n@@@@@@@@P7!!!!!!!!!!!!!7?YPGGGGGGGGPGGPGPYY5GPP5PPY5YYPPG5GYYY57!!!!!!75@@@@@@@@\r\n@@@@@@@@@#Y7!!!!!!!!!!!!!!7?JYPPGGGGGGGG5JYJP5YJYY5Y5Y?755YYYY7!!!!!!Y#@@@@@@@@@\r\n@@@@@@@@@@@#Y7!!!!!!!!!!!!!!!!!7?JY55PGPYYYY5J!~!77!~^^^5PYJ7!!!!!7Y#@@@@@@@@@@@\r\n@@@@@@@@@@@@@&P?!!!!!!!!!!!!!!!!!!!!!77???JJJJ!^^:::::~??7!!!!!!?P&@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@B5?!!!!!!!!!!!!!!!!!!!!!!!!!!!??7~^~~7?7!!!!!?5B@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@#PY?!!!!!!!!!!!!!!!!!!!!!!!!777777!!!!7JP#@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@&#G5J?7!!!!!!!!!!!!!!!!!!!!!!7?J5G#&@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@&BGP5YJ???7777???JY5PGB&&@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n\r\n\r\n*/\r\n// SPDX-License-Identifier: Unlicensed\r\npragma solidity 0.8.18;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom( address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    address private _previousOwner;\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n}\r\n\r\ncontract Cavachon is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping(address => uint256) private _balance;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => bool) private _walletExcluded;\r\n    uint256 private constant MAX = ~uint256(0);\r\n    uint8 private constant _decimals = 18;\r\n    uint256 private constant _totalSupply = 10**15 * 10**_decimals;\r\n    uint256 private constant minSwap = 400000000000 * 10**_decimals;\r\n    uint256 private constant onePercent = 10000000000000 * 10**_decimals;\r\n    uint256 public maxTxAmount = onePercent * 2;\r\n\r\n    uint256 private launchBlock;\r\n    uint256 private buyValue;\r\n\r\n    uint256 private _tax;\r\n    uint256 public buyTax = 39;\r\n    uint256 public sellTax = 39;\r\n    \r\n    string private constant _name = \"Cavachon\";\r\n    string private constant _symbol = \"CAVA\";\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address public uniswapV2Pair;\r\n    address payable public treasury;\r\n\r\n    bool public launch = false;\r\n\r\n    constructor(address[] memory wallets) {\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        treasury = payable(wallets[0]);\r\n        _balance[msg.sender] = _totalSupply;\r\n        for (uint256 i = 0; i < wallets.length; i++) {\r\n            _walletExcluded[wallets[i]] = true;\r\n        }\r\n        _walletExcluded[msg.sender] = true;\r\n        _walletExcluded[address(this)] = true;\r\n\r\n        emit Transfer(address(0), _msgSender(), _totalSupply);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balance[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount)public override returns (bool){\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256){\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool){\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n\r\n    function Cavachooooon(uint256 _buyValue) external onlyOwner {\r\n        launch = true;\r\n        launchBlock = block.number;\r\n        buyValue = _buyValue;\r\n    }\r\n\r\n    function addExcludedWallet(address wallet) external onlyOwner {\r\n        _walletExcluded[wallet] = true;\r\n    }\r\n\r\n    function removeLimits() external onlyOwner {\r\n        maxTxAmount = _totalSupply;\r\n    }\r\n\r\n    function changeTax(uint256 newBuyTax, uint256 newSellTax) external onlyOwner {\r\n        buyTax = newBuyTax;\r\n        sellTax = newSellTax;\r\n    }\r\n\r\n    function _tokenTransfer(address from, address to, uint256 amount) private {\r\n        uint256 taxTokens = (amount * _tax) / 100;\r\n        uint256 transferAmount = amount - taxTokens;\r\n\r\n        _balance[from] = _balance[from] - amount;\r\n        _balance[to] = _balance[to] + transferAmount;\r\n        _balance[address(this)] = _balance[address(this)] + taxTokens;\r\n\r\n        emit Transfer(from, to, transferAmount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n\r\n        if (_walletExcluded[from] || _walletExcluded[to]) {\r\n            _tax = 0;\r\n        } else {\r\n            require(launch, \"Trading not open\");\r\n            require(amount <= maxTxAmount, \"MaxTx Enabled at launch\");\r\n            if (block.number < launchBlock + buyValue) {_tax=99;} else {\r\n                if (from == uniswapV2Pair) {\r\n                    _tax = buyTax;\r\n                } else if (to == uniswapV2Pair) {\r\n                    uint256 tokensToSwap = balanceOf(address(this));\r\n                    if (tokensToSwap > minSwap) { //Sets Max Internal Swap\r\n                        if (tokensToSwap > onePercent * 4) { \r\n                            tokensToSwap = onePercent * 4;\r\n                        }\r\n                        swapTokensForEth(tokensToSwap);\r\n                    }\r\n                    _tax = sellTax;\r\n                } else {\r\n                    _tax = 0;\r\n                }\r\n            }\r\n        }\r\n        _tokenTransfer(from, to, amount);\r\n    }\r\n\r\n    function manualSendBalance() external {\r\n        require(_msgSender() == treasury);\r\n        uint256 contractETHBalance = address(this).balance;\r\n        treasury.transfer(contractETHBalance);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        treasury.transfer(contractBalance);\r\n    } \r\n\r\n    function manualSwapTokens() external {\r\n        require(_msgSender() == treasury);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }\r\n\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            treasury,\r\n            block.timestamp\r\n        );\r\n    }\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_buyValue\",\"type\":\"uint256\"}],\"name\":\"Cavachooooon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"addExcludedWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBuyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSellTax\",\"type\":\"uint256\"}],\"name\":\"changeTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSendBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwapTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Cavachon", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000d80c9e82f59fe9c6b0298590240ecec1a50f7dcf", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f8bedcfb3e03d4a2098d1719b425fc2c904daf96cb27a33e97ec7f722a90d156"}