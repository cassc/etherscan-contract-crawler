{"SourceCode": "// SPDX-License-Identifier:MIT\r\n// File: @chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface AggregatorV3Interface {\r\n  function decimals() external view returns (uint8);\r\n\r\n  function description() external view returns (string memory);\r\n\r\n  function version() external view returns (uint256);\r\n\r\n  function getRoundData(\r\n    uint80 _roundId\r\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\r\n\r\n  function latestRoundData()\r\n    external\r\n    view\r\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\r\n}\r\n\r\n// File: contracts/ETHtoUSDT.sol\r\n\r\n\r\n\r\npragma solidity ^0.8.2;\r\n\r\n\r\n/// @title ETH/USD to ETH/USDT Chainlink Price Converter\r\n/// @notice Deploys a contract that converts ETH/USD Chainlink price feed to ETH/USDT\r\ncontract ETHtoUSDT {\r\n\r\n    address public immutable ETH_USD_PRICEFEED = 0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419;\r\n    address public immutable USDT_USD_PRICEFEED = 0x3E7d1eAB13ad0104d2750B8863b489D65364e32D;\r\n    uint8 public immutable DECIMALS = 8;\r\n\r\n    function getDerivedPrice() external view returns (int256) {\r\n        // Retrieves Decimals and Price from ETH/USD price feed\r\n        int256 decimals = int256(10 ** uint256(DECIMALS));\r\n        (, int256 ethusdPrice, , , ) = AggregatorV3Interface(ETH_USD_PRICEFEED).latestRoundData();\r\n        uint8 ethusdDecimals = AggregatorV3Interface(ETH_USD_PRICEFEED).decimals();\r\n        ethusdPrice = scalePrice(ethusdPrice, ethusdDecimals, DECIMALS);\r\n\r\n        // Retrieves Decimals and Price from USDT/USD price feed\r\n        (, int256 usdtusdPrice, , , ) = AggregatorV3Interface(USDT_USD_PRICEFEED).latestRoundData();\r\n        uint8 usdtusdDecimals = AggregatorV3Interface(USDT_USD_PRICEFEED).decimals();\r\n        usdtusdPrice = scalePrice(usdtusdPrice, usdtusdDecimals, DECIMALS);\r\n\r\n        return (ethusdPrice * decimals) / usdtusdPrice;\r\n    }\r\n\r\n    function scalePrice(int256 _price, uint8 _priceDecimals, uint8 _decimals) internal pure returns (int256) {\r\n        if (_priceDecimals < _decimals) {\r\n            return _price * int256(10 ** uint256(_decimals - _priceDecimals));\r\n        } else if (_priceDecimals > _decimals) {\r\n            return _price / int256(10 ** uint256(_priceDecimals - _decimals));\r\n        }\r\n        return _price;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ETH_USD_PRICEFEED\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT_USD_PRICEFEED\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDerivedPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ETHtoUSDT", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c52eec6bd92fa1c6d450551f46892efe805d602396a94f132766ec95763976df"}