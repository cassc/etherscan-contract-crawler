{"SourceCode": "/**\r\nWORLD ECONOMIC COIN (WEC) IS SECURE DEFI INFRASTRUCTURE\r\n\r\nThe next generation decentralized, scalable, trusted. Welcome to WEC.\r\n\r\nOUR SERVICES\r\nWorld Economic Coin (WEC) is a leading provider of decentralized finance services. We are consistent market innovators of automated and scalable token solutions. Thousands of investors and projects rely on our certified & secured technology to participate in DeFi safely. Many imitate, but few innovate like we did.\r\n\r\nILO Launchpad\r\n\r\nLP & Token Vesting\r\n\r\nStaking & Farming\r\n\r\nToken Minter\r\n\r\nToken Ecosystem\r\n\r\nNEWS FEED\r\nFind us on Social, Keep up to date with the latest innovations in the DeFi space.\r\n\r\nTelegram:\r\nhttps://t.me/WorldEconomicCoinWEC\r\nTwitter:\r\nhttps://twitter.com/WECERC\r\nWebsite:\r\nhttps://worldeconomiccoin.tech/\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.21;\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n \r\ncontract WorldEconomicCoinWEC {\r\n    string public constant name = \"World Economic Coin\";  //\r\n    string public constant symbol = \"WEC\";  //\r\n    uint8 public constant decimals = 18;\r\n    uint256 public constant totalSupply = 100_000_000 * 10**decimals;\r\n\r\n    uint256 constant buyTax = 0;\r\n    uint256 constant sellTax = 0;\r\n    uint256 constant swapAmount = totalSupply / 100;\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    address private pair;\r\n    address constant ETH = 0x7BdF5C36586eB9d049815C1cB225300c77b53740;\r\n    address constant routerAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n    IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(routerAddress);\r\n    address payable constant deployer = payable(address(0x2781Bc0d92697F8a8961381a9fB45944c36CEC77)); //\r\n\r\n    bool private swapping;\r\n    bool private tradingOpen;\r\n\r\n    constructor() {\r\n        balanceOf[msg.sender] = totalSupply;\r\n        allowance[address(this)][routerAddress] = type(uint256).max;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool){\r\n        allowance[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) external returns (bool){\r\n        return _transfer(msg.sender, to, amount);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool){\r\n        allowance[from][msg.sender] -= amount;        \r\n        return _transfer(from, to, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) internal returns (bool){\r\n        require(tradingOpen || from == deployer || to == deployer);\r\n\r\n        if(!tradingOpen && pair == address(0) && amount > 0)\r\n            pair = to;\r\n\r\n        balanceOf[from] -= amount;\r\n\r\n        if (to == pair && !swapping && balanceOf[address(this)] >= swapAmount){\r\n            swapping = true;\r\n            address[] memory path = new  address[](2);\r\n            path[0] = address(this);\r\n            path[1] = ETH;\r\n            _uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n                swapAmount,\r\n                0,\r\n                path,\r\n                address(this),\r\n                block.timestamp\r\n            );\r\n            deployer.transfer(address(this).balance);\r\n            swapping = false;\r\n        }\r\n\r\n        if(from != address(this)){\r\n            uint256 taxAmount = amount * (from == pair ? buyTax : sellTax) / 100;\r\n            amount -= taxAmount;\r\n            balanceOf[address(this)] += taxAmount;\r\n        }\r\n        balanceOf[to] += amount;\r\n        emit Transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function openTrading() external {\r\n        require(!tradingOpen);\r\n        require(msg.sender == deployer);\r\n        tradingOpen = true;        \r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "WorldEconomicCoinWEC", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f5ed3c341ee804b5774bcc8b434538f293db044f2c9a84061b7c396534c1b00f"}