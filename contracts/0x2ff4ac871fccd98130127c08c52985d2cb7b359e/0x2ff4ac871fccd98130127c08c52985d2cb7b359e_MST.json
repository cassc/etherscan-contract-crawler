{"SourceCode": "pragma solidity ^0.4.0;\r\n\r\ncontract IMST {\r\n    uint256 public totalSupply;\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    }\r\n\r\n    library SafeMath {\r\n\r\n        function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\r\n            if (a == 0) {\r\n\r\n                return 0;\r\n\r\n            }\r\n\r\n            uint256 c = a * b;\r\n\r\n            require(c / a == b);\r\n\r\n            return c;\r\n\r\n        }\r\n\r\n        function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\r\n            require(b > 0);\r\n\r\n            uint256 c = a / b;\r\n\r\n            return c;\r\n\r\n        }\r\n\r\n        function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\r\n            require(b <= a);\r\n\r\n            uint256 c = a - b;\r\n\r\n            return c;\r\n\r\n        }\r\n\r\n        function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\r\n            uint256 c = a + b;\r\n\r\n            require(c >= a);\r\n\r\n            return c;\r\n\r\n        }\r\n\r\n        function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\r\n            require(b != 0);\r\n\r\n            return a % b;\r\n\r\n        }\r\n\r\n    }\r\n    contract MST is IMST {\r\n        using SafeMath for uint256;\r\n\r\n        mapping (address => uint256) public balances;\r\n        mapping (address => mapping (address => uint256)) public allowed;\r\n\r\n        string public name;\r\n        uint8 public decimals;\r\n        string public symbol;\r\n        address public owner;\r\n\r\n        modifier onlyOwner() {\r\n            require(msg.sender == owner, \"Only owner can call this function\");\r\n            _;\r\n        }\r\n\r\n        function MST(uint256 _initialAmount, string _tokenName, uint8 _decimalUnits, string _tokenSymbol) public {\r\n            balances[msg.sender] = _initialAmount;\r\n            totalSupply = _initialAmount;\r\n            name = _tokenName;\r\n            decimals = _decimalUnits;\r\n            symbol = _tokenSymbol;\r\n            owner = msg.sender;\r\n        }\r\n\r\n        function transferTokens(address _to, uint256 _value) public onlyOwner returns (bool success) {\r\n            require(_to != address(0), \"Invalid address\");\r\n            require(balances[this] >= _value, \"Insufficient balance\");\r\n\r\n            balances[this] = balances[this].sub(_value);\r\n            balances[_to] = balances[_to].add(_value);\r\n\r\n            emit Transfer(this, _to, _value);\r\n            return true;\r\n        }\r\n\r\n        function transfer(address _to, uint256 _value) public returns (bool success) {\r\n\r\n            require(_to != address(0));\r\n\r\n            require(balances[msg.sender] >= _value);\r\n\r\n            balances[msg.sender] = balances[msg.sender].sub(_value);\r\n\r\n            balances[_to] = balances[_to].add(_value);\r\n\r\n            emit Transfer(msg.sender, _to, _value);\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n        function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n\r\n            uint256 allowance = allowed[_from][msg.sender];\r\n\r\n            require(balances[_from] >= _value && allowance >= _value);\r\n\r\n            require(_to != address(0));\r\n\r\n            balances[_to] = balances[_to].add(_value);\r\n\r\n            balances[_from] = balances[_from].sub(_value);\r\n\r\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\r\n            emit Transfer(_from, _to, _value);\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n        function balanceOf(address _owner) public view returns (uint256 balance) {\r\n\r\n            return balances[_owner];\r\n\r\n        }\r\n\r\n        function approve(address _spender, uint256 _value) public returns (bool success) {\r\n\r\n            require(_spender != address(0));\r\n\r\n            allowed[msg.sender][_spender] = _value;\r\n\r\n            emit Approval(msg.sender, _spender, _value);\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n        function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n\r\n            require(_spender != address(0));\r\n\r\n            return allowed[_owner][_spender];\r\n\r\n        }\r\n        \r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "MST", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000130ee8e71790444000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000a6d6574617374726565740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034d53540000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://57bc8de35a92a97307b024bde08d331561caf1cc6cd15c18b90e5d9ba9e5702e"}