{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.18;\r\n\r\ncontract Lottery {\r\n    address public manager;\r\n    address[] public players;\r\n\r\n    uint256 public winnerStake = 90;\r\n    uint256 public teamStake = 100 - winnerStake;\r\n\r\n    uint256 public ticketPrice = 0.01 ether;\r\n\r\n    constructor() {\r\n        manager = msg.sender;\r\n    }\r\n\r\n    function enter(uint256 n) public payable {\r\n        require(n > 0, \"Minimum 1 ticket is required.\");\r\n        require(msg.value == n * ticketPrice, \"Amount is invalid.\");\r\n        for (uint256 i = 0; i < n; i++) {\r\n            players.push(msg.sender);\r\n        }\r\n    }\r\n\r\n    function random() private view returns (uint256) {\r\n        return uint256(keccak256(abi.encode(block.timestamp, players)));\r\n    }\r\n\r\n    function pickWinner() public restricted {\r\n        uint256 winnerAmount = (address(this).balance * winnerStake) / 100;\r\n        uint256 feesAmount = (address(this).balance * teamStake) / 100;\r\n        uint256 index = random() % players.length;\r\n        payable(players[index]).transfer(winnerAmount);\r\n        payable(manager).transfer(feesAmount);\r\n        players = new address[](0);\r\n    }\r\n\r\n    modifier restricted() {\r\n        require(msg.sender == manager);\r\n        _;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pickWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Lottery", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://530bc49ec94ae24d79de4e55be8ee0236cc948054fe891f5a1314edd2d571c8a"}