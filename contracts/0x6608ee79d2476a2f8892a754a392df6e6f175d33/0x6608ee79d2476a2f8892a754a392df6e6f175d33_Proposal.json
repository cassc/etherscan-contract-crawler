{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/interfaces/RelayerRegistry.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\n\\ninterface IRelayerRegistry {\\n    function unregisterRelayer(address relayer) external;\\n\\n    function registerRelayerAdmin(address relayer, string calldata ensName, uint256 stake) external;\\n\\n    function setOperator(address newOperator) external;\\n\\n    function getRelayerBalance(address relayer) external view returns (uint256);\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/RelayerRegistryProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\n\\ninterface IRelayerRegistryProxy {\\n    function upgradeTo(address newImplementation) external;\\n}\"\r\n    },\r\n    \"contracts/Proposal.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\npragma experimental ABIEncoderV2;\\n\\nimport { IRelayerRegistryProxy } from \\\"./interfaces/RelayerRegistryProxy.sol\\\";\\nimport { IRelayerRegistry } from \\\"./interfaces/RelayerRegistry.sol\\\";\\n\\ncontract Proposal {\\n    address public immutable newRelayerRegistry;\\n    address public constant relayerRegistryProxyAddr = 0x58E8dCC13BE9780fC42E8723D8EaD4CF46943dF2;\\n\\n    constructor(address _newRelayerRegistry) public {\\n        newRelayerRegistry = _newRelayerRegistry;\\n    }\\n\\n    function getNullifiedTotal(address payable[15] memory relayers) public view returns (uint256) {\\n        uint256 nullifiedTotal;\\n\\n        for (uint8 i = 0; i < relayers.length; i++) {\\n            nullifiedTotal += IRelayerRegistry(relayerRegistryProxyAddr).getRelayerBalance(relayers[i]);\\n        }\\n\\n        return nullifiedTotal;\\n    }\\n\\n    function executeProposal() public {\\n        IRelayerRegistryProxy relayerRegistryProxy = IRelayerRegistryProxy(relayerRegistryProxyAddr);\\n        relayerRegistryProxy.upgradeTo(newRelayerRegistry);\\n\\n        address payable[15] memory cheatingRelayers = [\\n            0x853281B7676DFB66B87e2f26c9cB9D10Ce883F37, // available-reliable-relayer.eth,\\n            0x0000208a6cC0299dA631C08fE8c2EDe435Ea83B8, // 0xtornadocash.eth,\\n            0xaaaaD0b504B4CD22348C4Db1071736646Aa314C6, // tornrelayers.eth\\n            0x36DD7b862746fdD3eDd3577c8411f1B76FDC2Af5, // tornado-crypto-bot-exchange.eth\\n            0x5007565e69E5c23C278c2e976beff38eF4D27B3d, // official-tornado.eth\\n            0xa42303EE9B2eC1DB7E2a86Ed6C24AF7E49E9e8B9, // relayer-tornado.eth\\n            0x18F516dD6D5F46b2875Fd822B994081274be2a8b, // torn69.eth\\n            0x2ffAc4D796261ba8964d859867592B952b9FC158, // safe-tornado.eth\\n            0x12D92FeD171F16B3a05ACB1542B40648E7CEd384, // torn-relayers.eth\\n            0x996ad81FD83eD7A87FD3D03694115dff19db0B3b, // secure-tornado.eth\\n            0x7853E027F37830790685622cdd8685fF0c8255A2, // tornado-secure.eth\\n            0xf0D9b969925116074eF43e7887Bcf035Ff1e7B19, // lowfee-relayer.eth\\n            0xEFa22d23de9f293B11e0c4aC865d7b440647587a, // tornado-relayer.eth\\n            0x14812AE927e2BA5aA0c0f3C0eA016b3039574242, // pls-im-poor.eth\\n            0x87BeDf6AD81A2907633Ab68D02c44f0415bc68C1 // tornrelayer.eth\\n        ];\\n\\n        IRelayerRegistry relayerRegistry = IRelayerRegistry(relayerRegistryProxyAddr);\\n\\n        uint256 nullifiedTotal = getNullifiedTotal(cheatingRelayers);\\n        uint256 compensation = nullifiedTotal / 3;\\n\\n        for (uint i = 0; i < cheatingRelayers.length; i++) {\\n            relayerRegistry.unregisterRelayer(cheatingRelayers[i]);\\n        }\\n\\n        relayerRegistry.registerRelayerAdmin(\\n            0x4750BCfcC340AA4B31be7e71fa072716d28c29C5,\\n            \\\"reltor.eth\\\",\\n            19612626855788464787775 + compensation\\n        );\\n        relayerRegistry.registerRelayerAdmin(\\n            0xa0109274F53609f6Be97ec5f3052C659AB80f012,\\n            \\\"relayer007.eth\\\",\\n            15242825423346070140850 + compensation\\n        );\\n        relayerRegistry.registerRelayerAdmin(\\n            0xC49415493eB3Ec64a0F13D8AA5056f1CfC4ce35c,\\n            \\\"k-relayer.eth\\\",\\n            11850064862377598277981 + compensation\\n        );\\n\\n        relayerRegistry.setOperator(address(0));\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRelayerRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[15]\",\"name\":\"relayers\",\"type\":\"address[15]\"}],\"name\":\"getNullifiedTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newRelayerRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayerRegistryProxyAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Proposal", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000004383de3a2f3e4dac2a7d1fd72592d0d76282d9", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}