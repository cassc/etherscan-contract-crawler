{"SourceCode": "/*\r\n\r\nTelegram: https://t.me/everythingisfine_eth\r\n\r\n\u2885\u288c\u2894\u2814\u2854\u286a\u288a\u2886\u28a3\u2892\u2895\u28b1\u2891\u28a1\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c6\u2811\u286a\r\n\u2815\u2855\u2895\u2815\u2871\u2861\u2843\u2847\u2895\u281c\u2870\u2871\u2880\u28ff\u28ff\u28ff\u28ff\u287f\u283f\u283f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28bf\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28bf\u28ff\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u2808\u286a\r\n\u2863\u2863\u2863\u2883\u2863\u284a\u2862\u2883\u2895\u28a1\u282a\u2870\u28a8\u28ff\u28ff\u28ff\u28ff\u28ff\u2857\u28bc\u28de\u2838\u2803\u28df\u28b9\u28ef\u2850\u2836\u28ff\u28ff\u28ff\u28ff\u28ff\u28b8\u28c5\u2852\u283f\u28ff\u28ff\u28ff\u28d7\u2830\u28b6\u28fe\u28b9\u2847\u28bb\u2829\u280f\u2814\u28c2\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff \u286a\r\n\u288c\u288c\u282a\u282a\u2870\u2891\u2885\u2807\u2846\u2863\u2831\u2831 \u28ff\u28ff\u28ff\u28ff\u28ff\u28ef\u28fd\u28f7\u28f8\u28e5\u28ff\u28b8\u28ff\u28cd\u28e5\u28ff\u28ff\u28ff\u28ff\u28f7\u28f8\u28ef\u28e9\u28f5\u28ff\u28ff\u28ff\u28d7\u28fc\u28ff\u28df\u28f8\u28c7\u28f7\u28fc\u28cc\u285b\u28db\u28ff\u28f9\u28ff\u28ff\u28ff\u28ff\u2857\u2820\u2863\r\n\u2895\u289c\u289c\u2894\u2814\u2870\u2860\u2840\u2844\u2854\u2894\u2894\u2895\u2848\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2820\u2845\u28c1\r\n\u286a\u286a\u286a\u284e\u284f\u286e\u287a\u2871\u285d\u28dc\u285c\u2854\u2845\u2863\u2862\u2849\u283f\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u281b\u2870\u287d\u289c\u2814\r\n\u2815\u280f\u281e\u280e\u2807\u2817\u2819\u28c1\u28cd\u2848\u281a\u2813\u2811\u2823\u2863\u28e3\u28d2\u2886\u288d\u28c9\u281b\u281f\u283f\u283f\u28bf\u28bf\u28bf\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u287f\u281f\u281b\u288b\u28a1\u2884\u281e\u281d\u2875\u28f1\u28ab\r\n\u287f\u28fe\u28f3\u28f7\u28ef\u28ff\u287f\u28ef\u2803\u28d4\u288f\u28cf\u286f\u28d2\u2886\u2861\u28ac\u28e1\u28e1\u28e1\u28e9\u28e4\u28a6\u28fe\u28f4\u2876\u28f4\u28f4\u28e4\u28e4\u28e4\u28e4\u2820\u28ff\u28ff\u285f\u28e9\u28e9\u28e9\u28c9\u28cd\u28e9\u28c9\u28c9\u2821\u2825\u28e5\u28a4\u2862\u2846\u2867\u286b\u2863\u2873\u2871\u2811\u2802\u2864\u28c4\u28c5\r\n\u28ff\u28bf\u28fd\u2877\u28ff\u28be\u28df\u2807\u28bc\u2895\u286f\u28ea\u28fa\u2895\u286f\u28f2\u2869\u28b7\u281f\u281e\u28bf\u287e\u28ff\u28b7\u28ef\u28ff\u28fb\u28fe\u28fb\u28ef\u28ff\u287d\u2890\u28ff\u28ff\u2842\u28fd\u287f\u28fd\u28ef\u287f\u28ef\u28ff\u28fb\u28bf\u28f6\u28a6\u28e5\u28e1\u28c9\u28cc\u28e8\u28a4\u28e4\u28f4\u287f\u28fd\u28fb\u2807\u2859\r\n\u285f\u28bb\u28ef\u28ff\u28fb\u28ff\u28ff\u2848\u28a7\u2873\u286b\u281a\u2818\u2808\u2880 \u2880\u28b4\u289d\u2875\u28ca\u28bd\u28df\u28ff\u2877\u28ff\u28fb\u28ef\u28ff\u287e\u28f7\u284f\u28b8\u28ff\u287f\u2890\u28ff\u28df\u287f\u28fe\u28df\u287f\u28fe\u28fb\u28bf\u28fd\u28bf\u28fd\u287f\u28ef\u287f\u28ef\u28df\u28ff\u28ef\u287f\u28ef\u285f\u28e8\u28b7\r\n\u2842\u28fd\u2877\u28ff\u28fb\u28fe\u283b\u2843\u2841\u2841  \u2810 \u2880\u2874\u2879\u28d5\u28af\u288e\u2847\u28f8\u28ff\u28fd\u28ff\u28bf\u28ef\u287f\u28fe\u28df\u28ff\u2843\u28fd\u28ff\u2883\u28ff\u28fb\u28fd\u28ff\u28bf\u28fd\u287f\u28ef\u28ff\u28bf\u28fd\u287f\u28f7\u28bf\u28ef\u287f\u28ef\u28ff\u28be\u2877\u28df\u285f\u28e0\u28df\u28fd\r\n\u2850\u28fd\u28ff\u288f\u2834\u28a1\u28ba\u28ea\u2897\u287d\u28f1\u28e3\u2896\u285e\u28d5\u28cf\u28af\u288e\u2857\u281d\u28e0\u2895\u2859\u2837\u28ff\u28df\u28ff\u287f\u28ff\u28fd\u28ff\u2820\u287f\u2883\u28fe\u28ff\u28fd\u2877\u28ff\u28fb\u28f7\u28ff\u28bf\u28fd\u28ff\u284b\u28bf\u28fb\u287f\u28ef\u28ff\u28bf\u28fd\u28fb\u287b\u2883\u28bc\u28fa\u28fa\u28fa\r\n\u2820\u2877\u284f\u28fc\u28a8\u2858\u28b5\u2895\u28d5\u28a9\u289a\u2838\u2811\u282b\u289a\u2898\u28e1\u28a5\u28b4\u289d\u2875\u28dd\u28bc\u28a2\u2851\u28bb\u28ff\u28fb\u28df\u28ff\u285d\u285c\u28a5\u28ff\u2877\u28ff\u28fd\u28bf\u28ef\u287f\u28fe\u28fb\u287f\u28f7\u289f\u28b0\u2869\u28df\u28ff\u28bf\u28fd\u28ff\u282f\u2893\u287c\u28fd\u28bd\u28fa\u287a\u28de\r\n\u2846\u289f\u28a8\u28d7\u2847\u28df\u28f6\u28e5\u2881\u289e\u2875\u28eb\u288f\u28af\u287a\u2855\u2867\u28f3\u28eb\u289e\u285e\u286e\u286b\u28c3\u28cf\u28e4\u28cb\u285b\u28bf\u28bf\u28e4\u28fe\u287f\u28f7\u28ff\u28ef\u287f\u28ff\u28fd\u28bf\u28ef\u28ff\u28bf\u287d\u2862\u28df\u2846\u28df\u28ff\u28df\u2897\u28a3\u28ae\u28f3\u28ef\u2893\u28b1\u28fb\u28fd\u28b1\r\n\u28b7\u2848\u28fc\u28aa\u2897\u2875\u285b\u2802\u2838\u2855\u286f\u28fa\u2839\u28d8\u28e8\u28cc\u28cd\u28cc\u285a\u2835\u28eb\u289a\u28fc\u28ff\u281f\u2809\u2808\u2809\u2882\u283b\u28ff\u287e\u28ff\u287f\u28fe\u28fb\u28ff\u28ef\u28ff\u28fb\u28ff\u28fd\u289b\u2874\u286f\u28d7\u2847\u28bd\u285e\u28a5\u28be\u28bd\u28bd\u28fa\u286a\u28ce\u28ae\u2857\u2867\u28df\r\n\u28af\u28df\u28b5\u28eb\u285e\u2808  \u2829\u28eb\u28ae\u28a3\u28fe\u28ff\u28ff\u281b\u281b\u281b\u28bf\u28e6\u2811\u28fd\u28ff\u2807\u2802\u2808 \u2802 \u2808\u28ff\u28bf\u28ef\u28ff\u28fb\u287f\u28fe\u283b\u282b\u281f\u283d\u28b7\u28fb\u28df\u283d\u287d\u28d5\u2801\u28ee\u28bf\u28bd\u28af\u281f\u28f4\u28bd\u2886\u28af\u287a\u28ef\u28b7\r\n\u289f\u28fa\u28fd\u280a \u2880\u2808 \u2808\u28ae\u2843\u28ff\u28ff\u287f\u2801\u2880 \u2802 \u2839\u28c7\u28bd\u28ff\u2841\u2820 \u2802\u2808\u2840\u2828\u28ff\u287b\u283f\u281d\u281f\u2801\u2820 \u2804 \u2880 \u2831\u28f3\u284f\u28fd\u28b5\u28eb\u28b7\u28fb\u285b\u28e5\u286f\u28d7\u28ff\u28b5\u28eb\u286f\u28d7\u28df\r\n\u2867\u28d7\u2801 \u2804 \u2804 \u2808\u2827\u2843\u28ff\u28ff\u28d7 \u2840\u2820\u2808\u2880 \u2817\u2838\u28ff\u28e7\u2840\u2804\u2810\u2880\u2884\u28a8\u2862\u28d6\u28d5\u2803  \u2820 \u2840\u2810 \u2840 \u2877\u2877\u2871\u28ef\u28bf\u285d\u28e2\u28ef\u2877\u286f\u28d7\u28ff\u28bd\u28fa\u28af\u2897\u28df\r\n\u28df  \u2802 \u2802 \u2804 \u28ad\u2887\u2879\u28ff\u28f7\u28c4 \u2820 \u2880\u2820\u2821\u2867\u28e9\u28c9\u285b\u2853\u289b\u2861\u28dc\u28ae\u286b\u28de   \u2802 \u2880 \u2804  \u286e\u28df\u28ef\u28e7\u282b\u285f\u28ac\u28f7\u28ef\u28af\u286f\u28d7\u28ff\u28bd\u28fa\u28fb\u28bd\u287a\r\n\u2805 \u2810 \u2801 \u2802  \u28b8\u2895\u28d6\u288d\u283b\u2837\u286e\u2864\u2824\u2810\u28e8\u28fa\u2895\u2897\u28d5\u2897\u287d\u28d5\u28bd\u286a\u2857\u28dd\u286e\u2842\u2820 \u2820   \u2880\u28a4\u28a8\u28af\u28d7\u2877\u28ef\u28b7\u28e1\u28bf\u28fa\u28de\u28df\u28fe\u28f3\u28fb\u28bd\u287a\u28fa\u28fb\u28bc\r\n \u2808 \u2848 \u2810 \u2802 \u2895\u2897\u2875\u286b\u28f3\u2895\u2856\u28d6\u28b5\u28bb\u289c\u289c\u289d\u28b5\u2895\u28af\u28aa\u28fa\u2871\u28eb\u288f\u286e\u28fa\u2895\u2866\u28c4\u2884\u2884\u28d4\u28bc\u28ea\u2803\u28fe\u28bd\u28fa\u28fb\u286f\u28df\u28fd\u28fd\u28fa\u28be\u28fb\u287e\u28fd\u28fa\u286f\u286f\u28d7\u2867\u28df\r\n\u284c \u2804 \u2808 \u2804 \u2828\u28eb\u28a7\u28ab\u286b\u28fa\u2895\u28bd\u289c\u2855\u2899\u28ac\u28e4\u2851\u282b\u283a\u2855\u28d7\u28b5\u2879\u28dc\u28b5\u289d\u287c\u28f1\u2863\u2857\u286f\u2867\u2813\u284b\u2864\u28de\u28ff\u28bd\u28fa\u28ef\u28af\u28d7\u28f7\u28bf\u287d\u28ef\u28b7\u28fb\u28f7\u28bd\u28fa\u286f\u28d7\u28ef\u28b7\r\n\u2837\u2802 \u2808 \u2802 \u28a4\u289d\u288e\u289e\u2895\u285d\u28dc\u2895\u286f\u28ea\u2894\u2821\u2852\u284d\u28cb\u2802\u28b6\u28a6\u280c\u28c8\u280a\u2883\u288b\u2883\u288b\u28d8\u2848\u2865\u2864\u2846\u28f7\u28fb\u28fd\u28f3\u286f\u28ef\u28ba\u28fa\u28fb\u28be\u287d\u28fd\u287d\u28fd\u287d\u28de\u28de\u28df\u28be\u28eb\u28d7\u28ff\u28bd\r\n\u2852\u28ac\u28ba\u2834\u2864\u2842\u2895\u2867\u286b\u286e\u28e3\u2873\u28f9\u289c\u28b5\u2895\u28a7\u28ab\u2863\u2846\u2861\u2823\u2802  \u2840\u2801\u289c\u28aa\u287f\u28ff\u28bf\u284f\u28bc\u287d\u284f\u28fe\u28f3\u28df\u28de\u28b7\u28fb\u28dd\u28be\u28eb\u28ef\u28ef\u286f\u28d7\u289b\u2833\u2859\u2893\u288b\u288b\u28cb\u28da\u28ca\u28da\u28b9\r\n\u2810\u2875\u2871\u28f9\u281c\u2890\u2887\u288f\u281e\u284e\u285e\u285c\u28ce\u289e\u2895\u2895\u288f\u288e\u285e\u2875\u2895\u2855\u2866\u2861\u2860\u2860\u28ea\u280f\u28a6\u2859\u28bf\u284f\u28bc\u28bd\u287a\u28f1\u28fd\u28fa\u2877\u286f\u28df\u28fe\u28a3\u28df\u289e\u28fe\u287a\u28ef\u2887\u28a2\u28cd\u2848\u2849\u2809\u2809\u2888\u2801\u2889\u28e8\u2810\r\n\u2838\u28d5\u28bd\u2878\u2880\u2887\u2887\u2847\u2815\u2855\u2845\u28aa\u28aa\u28aa\u28aa\u28a3\u28ab\u28aa\u286a\u287a\u2871\u28f9\u289c\u288d\u28ca\u28a5\u2894\u2838\u286f\u28d7\u288d\u2822\u286f\u28df\u2895\u28fd\u28fa\u28f3\u28af\u28df\u2877\u28cf\u28fe\u2873\u28bd\u28fa\u28fd\u28af\u2847\u289d\u28f7\u287f\u287e\u287e\u28de\u28fe\u287e\u28ff\u28bd\u2842\r\n\u2838\u2875\u28fb\u284a\u2824\u286b\u286e\u284a\u28aa\u28aa\u2842\u2895\u2895\u2895\u2895\u2895\u28b5\u28b1\u2895\u289d\u285c\u284e\u286e\u2863\u28e3\u2887\u2857\u2845\u28ab\u2873\u28f3\u28ea\u287f\u287d\u28f8\u28ae\u28d7\u28bf\u287d\u287e\u28dd\u28de\u28de\u28bc\u28fb\u287a\u28de\u28ff\u288e\u2838\u28f7\u28fb\u28df\u28ff\u28fb\u28fe\u287d\u28ef\u28bf\u2840\r\n\u28b8\u287d\u28fa\u2842\u28b9\u2879\u28ea\u2843\u28b9\u289c\u2846\u281c\u28dc\u289c\u289c\u2895\u2895\u2895\u2895\u2887\u2887\u288f\u288e\u289e\u289c\u285c\u28dc\u2895\u2828\u28de\u2855\u28df\u28de\u2863\u28df\u28fd\u28fa\u286f\u286f\u286f\u28d7\u286f\u286e\u28df\u28fc\u28af\u28b7\u28af\u28d7\u2838\u28fb\u28de\u28f7\u28fb\u28de\u28f7\u28fb\u28ef\u28bf\u2820\r\n\u2838\u28fa\u2895\u2847\u2838\u28ea\u28a7\u2843\u2825\u28f3\u28a3\u2818\u286e\u287a\u28f8\u289c\u289c\u289c\u289c\u289c\u289c\u289c\u289c\u285c\u285c\u285c\u285c\u28dc \u2877\u28dd\u28ce\u2896\u287d\u28d5\u28d7\u28f7\u28bd\u28eb\u286f\u28d7\u28ef\u286b\u28de\u2837\u281b\u288b\u28cb\u28ac\u28c8\u2899\u281a\u281e\u2833\u281d\u281e\u2817\u282f\u2813\u28b8\r\n\u2878\u28d5\u2897\u2887\u2818\u2875\u2855\u28d7\u2808\u285e\u28d5\u2842\u288f\u289e\u28ae\u28ba\u2871\u286b\u28fa\u28b1\u2863\u28f3\u2895\u28b5\u28b1\u2895\u28b5\u2851\u28a8\u28fd\u28ae\u2897\u28df\u286e\u28d7\u28d7\u28d7\u289f\u287e\u28fd\u28b5\u2813\u2821\u2824\u286a\u285d\u2875\u2871\u28eb\u28ba\u2879\u285d\u28dd\u289e\u2875\u2873\u2855\u28d7\u28bd\u28b1\r\n\r\nThis is fine.\r\n                                                                                          \r\n*/\r\n\r\n//SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity 0.8.7;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    address private _previousOwner;\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 amountToken,\r\n            uint256 amountETH,\r\n            uint256 liquidity\r\n        );\r\n}\r\n\r\ncontract ThisIsFine is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping(address => uint256) private _rOwned;\r\n    mapping(address => uint256) private _tOwned;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => bool) private _isExcludedFromFee;\r\n    mapping(address => bool) private _forceFee;\r\n    mapping(address => bool) private bots;\r\n    mapping(address => uint256) private cooldown;\r\n    uint256 private constant MAX = ~uint256(0);\r\n    uint256 private constant _tTotal = 1000000000000 * 10**9;\r\n    address private constant UNISWAP_ROUTER_ADDRESS =\r\n        0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n    address private constant DEAD_ADDRESS =\r\n        0x000000000000000000000000000000000000dEaD;\r\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\r\n    uint256 private _tFeeTotal;\r\n    string private constant _name = \"FINE\";\r\n    string private constant _symbol = unicode\"FINE\";\r\n    uint8 private constant _decimals = 9;\r\n    uint256 private _taxFee;\r\n    uint256 private _teamFee;\r\n    uint256 private _previousTaxFee = _taxFee;\r\n    uint256 private _previousteamFee = _teamFee;\r\n    address payable private _FeeAddress;\r\n    address payable private _marketingWalletAddress;\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address public uniswapV2Pair;\r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n    bool private cooldownEnabled = false;\r\n    uint256 private _maxTxAmount = _tTotal;\r\n    event MaxTxAmountUpdated(uint256 _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor(\r\n        address payable FeeAddress,\r\n        address payable marketingWalletAddress\r\n    ) {\r\n        _FeeAddress = FeeAddress;\r\n        _marketingWalletAddress = marketingWalletAddress;\r\n        _rOwned[_msgSender()] = _rTotal;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[FeeAddress] = true;\r\n        _isExcludedFromFee[marketingWalletAddress] = true;\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n        _forceFee[UNISWAP_ROUTER_ADDRESS] = true;\r\n        _forceFee[DEAD_ADDRESS] = true;\r\n        uniswapV2Router = IUniswapV2Router02(UNISWAP_ROUTER_ADDRESS);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(\r\n            address(this),\r\n            uniswapV2Router.WETH()\r\n        );\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            _msgSender(),\r\n            _allowances[sender][_msgSender()].sub(\r\n                amount,\r\n                \"ERC20: transfer amount exceeds allowance\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function setCooldownEnabled(bool onoff) external onlyOwner() {\r\n        cooldownEnabled = onoff;\r\n    }\r\n\r\n    function tokenFromReflection(uint256 rAmount)\r\n        private\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(\r\n            rAmount <= _rTotal,\r\n            \"Amount must be less than total reflections\"\r\n        );\r\n        uint256 currentRate = _getRate();\r\n        return rAmount.div(currentRate);\r\n    }\r\n\r\n    function removeAllFee() private {\r\n        if (_taxFee == 0 && _teamFee == 0) return;\r\n        _previousTaxFee = _taxFee;\r\n        _previousteamFee = _teamFee;\r\n        _taxFee = 0;\r\n        _teamFee = 0;\r\n    }\r\n\r\n    function restoreAllFee() private {\r\n        _taxFee = _previousTaxFee;\r\n        _teamFee = _previousteamFee;\r\n    }\r\n\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n\r\n        _taxFee = 1;\r\n        _teamFee = 7;\r\n        bool isBuyOrSell = false;\r\n        if (from != owner() && to != owner()) {\r\n            require(!bots[from] && !bots[to]);\r\n            // check if buy\r\n            if (\r\n                from == uniswapV2Pair &&\r\n                to != address(uniswapV2Router) &&\r\n                !_isExcludedFromFee[to] &&\r\n                cooldownEnabled\r\n            ) {\r\n                require(amount <= _maxTxAmount);\r\n                require(cooldown[to] < block.timestamp);\r\n                cooldown[to] = block.timestamp + (60 seconds);\r\n                // user is buying\r\n                isBuyOrSell = true;\r\n            }\r\n            // check if sell\r\n            if (\r\n                to == uniswapV2Pair &&\r\n                from != address(uniswapV2Router) &&\r\n                !_isExcludedFromFee[from]\r\n            ) {\r\n                _taxFee = 1;\r\n                _teamFee = 7;\r\n                // user is selling\r\n                isBuyOrSell = true;\r\n            }\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (\r\n                !inSwap &&\r\n                from != uniswapV2Pair &&\r\n                swapEnabled &&\r\n                contractTokenBalance > 0\r\n            ) {\r\n                swapTokensForEth(contractTokenBalance);\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if (contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n        }\r\n        bool takeFee = _forceFee[to] || isBuyOrSell;\r\n        if (isBuyOrSell) {\r\n            require(tradingOpen, \"trading is not open\");\r\n        }\r\n        _tokenTransfer(from, to, amount, takeFee);\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function sendETHToFee(uint256 amount) private {\r\n        _FeeAddress.transfer(amount.div(2));\r\n        _marketingWalletAddress.transfer(amount.div(2));\r\n    }\r\n\r\n    function prepareTrading() external onlyOwner() {\r\n        require(!tradingOpen, \"trading is already open\");\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(\r\n            address(this),\r\n            balanceOf(address(this)),\r\n            0,\r\n            0,\r\n            owner(),\r\n            block.timestamp\r\n        );\r\n        swapEnabled = true;\r\n        cooldownEnabled = true;\r\n        setMaxTxPercent(4);\r\n        IERC20(uniswapV2Pair).approve(\r\n            address(uniswapV2Router),\r\n            type(uint256).max\r\n        );\r\n    }\r\n\r\n    function openTrading() external onlyOwner() {\r\n        tradingOpen = true;\r\n    }\r\n\r\n    function setBots(address[] memory bots_) public onlyOwner {\r\n        for (uint256 i = 0; i < bots_.length; i++) {\r\n            bots[bots_[i]] = true;\r\n        }\r\n    }\r\n\r\n    function delBot(address notbot) public onlyOwner {\r\n        bots[notbot] = false;\r\n    }\r\n\r\n    function _tokenTransfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount,\r\n        bool takeFee\r\n    ) private {\r\n        if (!takeFee) removeAllFee();\r\n        _transferStandard(sender, recipient, amount);\r\n        if (!takeFee) restoreAllFee();\r\n    }\r\n\r\n    function _transferStandard(\r\n        address sender,\r\n        address recipient,\r\n        uint256 tAmount\r\n    ) private {\r\n        (\r\n            uint256 rAmount,\r\n            uint256 rTransferAmount,\r\n            uint256 rFee,\r\n            uint256 tTransferAmount,\r\n            uint256 tFee,\r\n            uint256 tTeam\r\n        ) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\r\n        _takeTeam(tTeam);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _takeTeam(uint256 tTeam) private {\r\n        uint256 currentRate = _getRate();\r\n        uint256 rTeam = tTeam.mul(currentRate);\r\n        _rOwned[address(this)] = _rOwned[address(this)].add(rTeam);\r\n    }\r\n\r\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\r\n        _rTotal = _rTotal.sub(rFee);\r\n        _tFeeTotal = _tFeeTotal.add(tFee);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function manualswap() external {\r\n        require(_msgSender() == _FeeAddress);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }\r\n\r\n    function manualsend() external {\r\n        require(_msgSender() == _FeeAddress);\r\n        uint256 contractETHBalance = address(this).balance;\r\n        sendETHToFee(contractETHBalance);\r\n    }\r\n\r\n    function _getValues(uint256 tAmount)\r\n        private\r\n        view\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        )\r\n    {\r\n        (uint256 tTransferAmount, uint256 tFee, uint256 tTeam) = _getTValues(\r\n            tAmount,\r\n            _taxFee,\r\n            _teamFee\r\n        );\r\n        uint256 currentRate = _getRate();\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\r\n            tAmount,\r\n            tFee,\r\n            tTeam,\r\n            currentRate\r\n        );\r\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tTeam);\r\n    }\r\n\r\n    function _getTValues(\r\n        uint256 tAmount,\r\n        uint256 taxFee,\r\n        uint256 TeamFee\r\n    )\r\n        private\r\n        pure\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        )\r\n    {\r\n        uint256 tFee = tAmount.mul(taxFee).div(100);\r\n        uint256 tTeam = tAmount.mul(TeamFee).div(100);\r\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tTeam);\r\n        return (tTransferAmount, tFee, tTeam);\r\n    }\r\n\r\n    function _getRValues(\r\n        uint256 tAmount,\r\n        uint256 tFee,\r\n        uint256 tTeam,\r\n        uint256 currentRate\r\n    )\r\n        private\r\n        pure\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        )\r\n    {\r\n        uint256 rAmount = tAmount.mul(currentRate);\r\n        uint256 rFee = tFee.mul(currentRate);\r\n        uint256 rTeam = tTeam.mul(currentRate);\r\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rTeam);\r\n        return (rAmount, rTransferAmount, rFee);\r\n    }\r\n\r\n    function _getRate() private view returns (uint256) {\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n        return rSupply.div(tSupply);\r\n    }\r\n\r\n    function _getCurrentSupply() private view returns (uint256, uint256) {\r\n        uint256 rSupply = _rTotal;\r\n        uint256 tSupply = _tTotal;\r\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\r\n        return (rSupply, tSupply);\r\n    }\r\n\r\n    function setMaxTxPercent(uint256 maxTxPercent) public onlyOwner() {\r\n        require(maxTxPercent > 0, \"Amount must be greater than 0\");\r\n        _maxTxAmount = _tTotal.mul(maxTxPercent).div(10**2);\r\n        emit MaxTxAmountUpdated(_maxTxAmount);\r\n    }\r\n\r\n    function setTradingOpen(bool tradingOpen_) public onlyOwner() {\r\n        tradingOpen = tradingOpen_;\r\n    }\r\n\r\n    function withdraw() external onlyOwner {\r\n        address payable recipient = payable(owner());\r\n        recipient.transfer(address(this).balance);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"FeeAddress\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"marketingWalletAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"notbot\",\"type\":\"address\"}],\"name\":\"delBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualsend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualswap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prepareTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"bots_\",\"type\":\"address[]\"}],\"name\":\"setBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"onoff\",\"type\":\"bool\"}],\"name\":\"setCooldownEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTxPercent\",\"type\":\"uint256\"}],\"name\":\"setMaxTxPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"tradingOpen_\",\"type\":\"bool\"}],\"name\":\"setTradingOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "ThisIsFine", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000009468fc6a73d0e64717d6c1921d69a102cd8d7a5d0000000000000000000000002075718689d781d446648ab3e83a9a0b797817b0", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://d9198cf30861519fb90bf84f7cc50c9d4a27bd72f5dd71c3a6c2e4fee0f6da37"}