{"SourceCode": "pragma solidity ^0.4.16;\r\n\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner()  {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n\r\n}\r\n\r\ncontract SafeMath {\r\n    function safeSub(uint a, uint b) pure internal returns (uint) {\r\n        sAssert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function safeAdd(uint a, uint b) pure internal returns (uint) {\r\n        uint c = a + b;\r\n        sAssert(c>=a && c>=b);\r\n        return c;\r\n    }\r\n\r\n    function sAssert(bool assertion) internal pure {\r\n        if (!assertion) {\r\n            revert();\r\n        }\r\n    }\r\n}\r\n\r\ncontract ERC20 {\r\n    uint public totalSupply;\r\n    function balanceOf(address who) public constant returns (uint);\r\n    function allowance(address owner, address spender) public constant returns (uint);\r\n\r\n    function transfer(address toAcct, uint value) public returns (bool ok);\r\n    function transferFrom(address fromAcct, address toAcct, uint value) public returns (bool ok);\r\n    function approve(address spender, uint value) public returns (bool ok);\r\n    event Transfer(address indexed fromAcct, address indexed toAcct, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract StandardToken is ERC20, SafeMath {\r\n\r\n    mapping(address => uint) balances;\r\n    mapping (address => mapping (address => uint)) allowed;\r\n\r\n    function transfer(address _toAcct, uint _value) public returns (bool success) {\r\n        balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n        balances[_toAcct] = safeAdd(balances[_toAcct], _value);\r\n        Transfer(msg.sender, _toAcct, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _fromAcct, address _toAcct, uint _value) public returns (bool success) {\r\n        var _allowance = allowed[_fromAcct][msg.sender];\r\n        balances[_toAcct] = safeAdd(balances[_toAcct], _value);\r\n        balances[_fromAcct] = safeSub(balances[_fromAcct], _value);\r\n        allowed[_fromAcct][msg.sender] = safeSub(_allowance, _value);\r\n        Transfer(_fromAcct, _toAcct, _value);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant returns (uint balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint _value) public  returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n}\r\n\r\ncontract BcbCoin is Ownable, StandardToken {\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint public decimals;                  \r\n    uint public totalSupply;  \r\n\r\n\r\n    /// @notice Initializes the contract and allocates all initial tokens to the owner and agreement account\r\n    function BcbCoin() public {\r\n        totalSupply = 2000 * (10**6) * (10**18); \r\n        balances[msg.sender] = totalSupply;\r\n        name = \"BCB\";\r\n        symbol = \"BCB\";\r\n        decimals = 18;  \r\n    }\r\n\r\n    function () payable public{\r\n    }\r\n\r\n    /// @notice To transfer token contract ownership\r\n    /// @param _newOwner The address of the new owner of this contract\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        balances[_newOwner] = safeAdd(balances[owner], balances[_newOwner]);\r\n        balances[owner] = 0;\r\n        Ownable.transferOwnership(_newOwner);\r\n    }\r\n\r\n    // Owner can transfer out any ERC20 tokens sent in by mistake\r\n    function transferAnyERC20Token(address tokenAddress, uint amount) public onlyOwner returns (bool success)\r\n    {\r\n        return ERC20(tokenAddress).transfer(owner, amount);\r\n    }\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fromAcct\",\"type\":\"address\"},{\"name\":\"_toAcct\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_toAcct\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"fromAcct\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"toAcct\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "BcbCoin", "CompilerVersion": "v0.4.20-nightly.2018.1.6+commit.2548228b", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://170da1c11614e487dd6ddae418194808edeba76e63b5c3eb68bbdd62d493a36f"}