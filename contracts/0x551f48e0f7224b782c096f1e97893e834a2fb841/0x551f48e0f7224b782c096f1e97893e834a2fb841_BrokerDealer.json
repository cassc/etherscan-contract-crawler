{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\n\r\npragma solidity ^0.8.23;\r\n\r\ninterface IETF {\r\n  function create(uint256, address) external payable;\r\n  function redeem(uint256, address, uint256) external;\r\n  function transferFrom(address, address, uint256) external returns (bool);\r\n}\r\n\r\ninterface IAuthorizedParticipants {\r\n  function safeTransferFrom(address, address, uint256) external;\r\n}\r\n\r\ninterface IKYC {\r\n  function getId(string memory, string memory) external view returns (uint256);\r\n  function getAddr(uint256) external view returns (address);\r\n  function ownerOf(uint256) external view returns (address);\r\n}\r\n\r\ncontract BrokerDealer  {\r\n  IKYC public kyc;\r\n  IETF public etf;\r\n  IAuthorizedParticipants public ap;\r\n\r\n  mapping(uint256 => uint256) public kycCreated;\r\n  mapping(uint256 => uint256) public kycRedeemed;\r\n  mapping(uint256 => uint256) _kycLimit;\r\n\r\n  uint256 public stakedTokenId;\r\n  address public stakedAddr;\r\n\r\n  bool public redeemEnabled = true;\r\n  bool public createEnabled = true;\r\n\r\n\r\n  constructor(address _etf, address _ap, address _kyc) {\r\n    etf = IETF(_etf);\r\n    ap = IAuthorizedParticipants(_ap);\r\n    kyc = IKYC(_kyc);\r\n  }\r\n\r\n  function kycLimit(uint256 tokenId) public view returns (uint256) {\r\n    return (_kycLimit[tokenId] > 0) ? _kycLimit[tokenId] : 10000 ether;\r\n  }\r\n\r\n\r\n  function create(string memory firstName, string memory lastName) external payable {\r\n    require(createEnabled, 'Share creation disabled');\r\n    uint256 kycTokenId = kyc.getId(firstName, lastName);\r\n\r\n    require(\r\n      kyc.ownerOf(kycTokenId) == msg.sender\r\n      && kyc.getAddr(kycTokenId) == msg.sender,\r\n      'Invalid KYC Token'\r\n    );\r\n\r\n    uint256 tokensToCreate = msg.value * 10000;\r\n    require(kycCreated[kycTokenId] + tokensToCreate <= kycLimit(kycTokenId), 'Cannot provide > 1ETH in liquidity');\r\n\r\n    kycCreated[kycTokenId] += tokensToCreate;\r\n\r\n    etf.create{value: msg.value}(stakedTokenId, msg.sender);\r\n  }\r\n\r\n  function redeem(string memory firstName, string memory lastName, uint256 etfAmount) external payable {\r\n    require(redeemEnabled, 'Share redeemption disabled');\r\n    uint256 kycTokenId = kyc.getId(firstName, lastName);\r\n\r\n    require(\r\n      kyc.ownerOf(kycTokenId) == msg.sender\r\n      && kyc.getAddr(kycTokenId) == msg.sender,\r\n      'Invalid KYC Token'\r\n    );\r\n\r\n    require(kycRedeemed[kycTokenId] + etfAmount <= kycLimit(kycTokenId), 'Cannot remove > 1ETH in liquidity');\r\n\r\n    kycRedeemed[kycTokenId] += etfAmount;\r\n\r\n\r\n    etf.transferFrom(msg.sender, address(this), etfAmount);\r\n    etf.redeem(stakedTokenId, msg.sender, etfAmount);\r\n  }\r\n\r\n\r\n  // deposit\r\n  function onERC721Received(\r\n    address,\r\n    address from,\r\n    uint256 tokenId,\r\n    bytes calldata\r\n  ) external returns (bytes4) {\r\n    require(msg.sender == address(ap), 'Not an AP token');\r\n    require(stakedTokenId == 0, 'Cannot stake multiple AP tokens');\r\n    require(tokenId != 0, 'Cannot stake the Time Lord');\r\n\r\n    stakedAddr = from;\r\n    stakedTokenId = tokenId;\r\n\r\n    return this.onERC721Received.selector;\r\n  }\r\n\r\n  function withdraw() external {\r\n    require(stakedAddr == msg.sender, 'Not owner of AP token');\r\n    stakedAddr = address(0);\r\n\r\n    ap.safeTransferFrom(address(this), msg.sender, stakedTokenId);\r\n    stakedTokenId = 0;\r\n  }\r\n\r\n\r\n  function setCreateEnabled(bool value) external {\r\n    require(stakedAddr == msg.sender, 'Not owner of AP token');\r\n    createEnabled = value;\r\n  }\r\n\r\n  function setRedeemEnabled(bool value) external {\r\n    require(stakedAddr == msg.sender, 'Not owner of AP token');\r\n    redeemEnabled = value;\r\n  }\r\n\r\n  function setKYCLimit(uint256 tokenId, uint256 value) external {\r\n    require(stakedAddr == msg.sender, 'Not owner of AP token');\r\n    _kycLimit[tokenId] = value;\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_etf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_kyc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ap\",\"outputs\":[{\"internalType\":\"contract IAuthorizedParticipants\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"etf\",\"outputs\":[{\"internalType\":\"contract IETF\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kyc\",\"outputs\":[{\"internalType\":\"contract IKYC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"kycCreated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"kycLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"kycRedeemed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"etfAmount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setCreateEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setKYCLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setRedeemEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BrokerDealer", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000007102653225d537e2fe703723ad83edfeb606396e000000000000000000000000e58f2758e6cfae2a74c7177e4f73451e32cf900e0000000000000000000000000bb72ce0cfe446dd89129b4335e29c0fbbe0c93c", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ffab1fa8d9f3d93b7c7592b0341cca25c6e471b697eff003d02d7549aafea789"}