{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/misc/BatchOperationHelper.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity >=0.6.10 <0.8.0;\\n\\nimport \\\"../interfaces/IVotingEscrow.sol\\\";\\n\\ninterface IClaimRewards {\\n    function claimRewards(address account) external;\\n\\n    function claimRewardsAndUnwrap(address account) external;\\n}\\n\\ncontract BatchOperationHelper {\\n    string public constant VERSION = \\\"2.0.0\\\";\\n\\n    function batchClaimRewards(address[] calldata contracts, address account) public {\\n        uint256 count = contracts.length;\\n        for (uint256 i = 0; i < count; i++) {\\n            IClaimRewards(contracts[i]).claimRewards(account);\\n        }\\n    }\\n\\n    function batchClaimRewardsAndUnwrap(\\n        address[] calldata contracts,\\n        address[] calldata wrappedContracts,\\n        address account\\n    ) external {\\n        batchClaimRewards(contracts, account);\\n        uint256 count = wrappedContracts.length;\\n        for (uint256 i = 0; i < count; i++) {\\n            IClaimRewards(wrappedContracts[i]).claimRewardsAndUnwrap(account);\\n        }\\n    }\\n\\n    function batchSyncWithVotingEscrow(address[] calldata contracts, address account) external {\\n        uint256 count = contracts.length;\\n        for (uint256 i = 0; i < count; i++) {\\n            IVotingEscrowCallback(contracts[i]).syncWithVotingEscrow(account);\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IVotingEscrow.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity >=0.6.10 <0.8.0;\\npragma experimental ABIEncoderV2;\\n\\ninterface IAddressWhitelist {\\n    function check(address account) external view returns (bool);\\n}\\n\\ninterface IVotingEscrowCallback {\\n    function syncWithVotingEscrow(address account) external;\\n}\\n\\ninterface IVotingEscrow {\\n    struct LockedBalance {\\n        uint256 amount;\\n        uint256 unlockTime;\\n    }\\n\\n    function token() external view returns (address);\\n\\n    function maxTime() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOfAtTimestamp(address account, uint256 timestamp)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getTimestampDropBelow(address account, uint256 threshold)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getLockedBalance(address account) external view returns (LockedBalance memory);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"contracts\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"batchClaimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"contracts\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"wrappedContracts\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"batchClaimRewardsAndUnwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"contracts\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"batchSyncWithVotingEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BatchOperationHelper", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}