{"SourceCode": "pragma solidity 0.5.15;\r\n\r\ncontract Lock {\r\n    // address owner; slot #0\r\n    // address unlockTime; slot #1\r\n    constructor (address owner, uint256 unlockTime) public payable {\r\n        assembly {\r\n            sstore(0x00, owner)\r\n            sstore(0x01, unlockTime)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @dev        Withdraw function once timestamp has passed unlock time\r\n    */\r\n    function () external payable {\r\n        assembly {\r\n            switch gt(timestamp, sload(0x01))\r\n            case 0 { revert(0, 0) }\r\n            case 1 {\r\n                switch call(gas, sload(0x00), balance(address), 0, 0, 0, 0)\r\n                case 0 { revert(0, 0) }\r\n            }\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "Lock", "CompilerVersion": "v0.5.15+commit.6a57276f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000007f0d238412e75e45cb69b3cacd4b59f220da2442000000000000000000000000000000000000000000000000000000005ef2fda6", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://13876a131fb612745be13765f49451cc6f0f1d0f7b13e21ac2cf9c7d3aeca189"}