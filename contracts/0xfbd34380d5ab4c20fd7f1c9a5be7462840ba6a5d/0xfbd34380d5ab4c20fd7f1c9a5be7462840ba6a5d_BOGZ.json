{"SourceCode": "/** https://www.bogzcoin.com/ https://www.bogzcoin.com/ https://www.bogzcoin.com/ https://www.bogzcoin.com/\r\n** https://www.bogzcoin.com/ https://www.bogzcoin.com/ https://www.bogzcoin.com/ https://www.bogzcoin.com/\r\n** https://www.bogzcoin.com/ https://www.bogzcoin.com/ https://www.bogzcoin.com/ https://www.bogzcoin.com/\r\n ** https://t.me/bogzcoin https://t.me/bogzcoin https://t.me/bogzcoin https://t.me/bogzcoin https://t.me/bogzcoin\r\n ** https://t.me/bogzcoin https://t.me/bogzcoin https://t.me/bogzcoin https://t.me/bogzcoin https://t.me/bogzcoin\r\n * \r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&######BBBBGGGGGGGGPPPPPPPPPP5PPPPPPPPPPPPPPPGGGGGBBBBBB#####&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&####BBBGBGGGGPPP55555YYYYJJJJJJJJJJJ??JJJJJJJYYYYYYY5555PPPGGGGBBBB#####&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&####BBBGGGGPPPP5YYYJJJJ???JJJYYY555PPPPPPPPPPPPPPP55YYYJJJJ????JJYYY55PPGGGGBBB#####&#&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&#####BBGPPP555YYJJ???JY55PGBBB#########BBBBBBBBBBBBB##########BBGGP5YYJJ???JJY555PPGGBBB#####&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&######BBGGPP55YJJ???JY5PGB#####BBBBGGGGGGGGGGGGGGGGGGGGBBGGGGGGGGGBBBBBBB#####BGP5YJ??JJJ555PGGBBBB###&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&#&###BBBGGPP5YYJJ?JYYPGB###BBBGGGGGGGGGGGGGGGGGGGGGGGGGGG##BGBBBBBB###BBGGGGGGGGBBBBB###BGPYJJ??JY55PPGGBB#####&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&#####BBGGPP5YJJ??J5PB###BBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBPB#B##BGGPP55555555555555PPPGGGGGBBB###BPYJ??JY55PPGGBB####&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&###BBGGP55YJ??J5GB##BBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBP5B&#BP555YJJJJJJJJJJJJJYY55555Y5PGBGGGGGBB##BP5J??JY55PGGBB###&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&####BBGP55YY??J5GB##BGGGGGGGGGGGGGGGGBBBBGP5PGBBBGGGGGGGGGGB5PB#BPYJJYY55YJJJJJJJJJJJJJJJJYY55YJ5PBBGGGGGGBB##BPYJ?JYY5PPGBB####&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&####BBGPP5YJ??JPB##BGGGGGGGGGGGGGGGGBBBGP5YY5PPP555GBBBBGGGB5GGGGBPYJJY555YJJJJJJJJJJJJJJJJJJJJJJYYJJYPB#BGGGGGGGBB##G5J??J55PGBBBB##&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&###BBGGP5YJ??JPB##BGGGGGGGGGGGGGGGGBBBGGPPPPPYYY5GBGYJY5PGBB#PYBP5G5JJJPGP55555YJJJJJJJJJJJJJJJJJJJJY55YJYP##BGGGGGGGGGB##B5J?JY5PPPGBB##&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&##BGGP55J??JPB##BGGGGGGGGGGGGGGGGGB#BP5PPPPPP55YJJY5GB5YJJYPB#YYYYG5JJ5GPPGPPP5Y5YJJJJY55555YJJJJJY5JJJY5PYJYB##BGGGGGGGGGGB##B5J?JY55PGBB###&&&&&@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@&&&&&###BBGP5YJ??5B##BGGGGGGGGGGGGGGGGGGG##GGGP55YYY555YJJJJJP#GPYJJGBJJJ55JJ5GGGPYJJYJJJJJJJJJYY555555YJJJ5G5JJJYPPJPBB#BGGGGGGGGGGGGB##GY??JY5PPGB##&&&&&&@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@&&&&&##BBGG55Y??JG##BGGGGGGGGGGGGGGGGGGGGG#&B########BGP55JJJJJJYGPP5J5#YJY5JJ5GGGYJJJYJJJJJJJYY55555PPP5YYJJJYPPJJYYPGYG#BBBGGGGGGGGGGGGGGB##PJ?JY5PGBB###&&&&&@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@&&&&&###BGPP5J??YB#BGGGGGGGGGGGGGGGGGGGGGGGG&##BBBBBBBB##B5YJJJJYYJYGPYJYG5J5YJYG5PJJJYYJJJJY5PGB##&&##BPGGPYYJJJJ5GPPPG&BG##GBBGGGGGGGGGGGGGGGB##GY?JYYPGBB####&&&@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@&&&&##BBGP55Y??5B#BGGGGGGGGGGGGGGGGGGGGGGGGGB&#BGGGGGBBBGGGGGG5YJYPG5YPPJJ5YY5JJP5JJJJJYJJJJPGPGG#&&&@@@@&#GGGYJJJJJYP5YB#B&&#GBBGGGGGGGGGGGGGGGGGGB#BY??Y5PGBB####&&&@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@&&&&###BGPP5Y??5##BGGGGGGGGGGGGGGGGGGGGGGGGGGGB&GGGGGGGGGBB##G55GBGPPG#G5P5JYYJ5JYPJJJJJYJJJJPG5GP#@@@@@@@@@@&GPB5YYYJJJ5B#GB##BGGGGGGGGGGGGGGGGGGGGGGGB#BY??Y5PPGB##&&&&&@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@&&&&&##BGGP5YJ?5##BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB#GGGGGGGGGGGB#&&GYPBBBGBBP55YYJJYYYYYYYY5P555P#GBB#&&&&&&&&&&&&&#G#GPPPPPB#B#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGB#BJ?JY5PGBB##&&&&@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@&&&&###GGP5YJ7YB#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB&&BY5GB#B&BGPPPPPPPPPPP555555YYYYYYYYYYYJJJJYY55PBB####&&&##BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB#GJ?J5PPGB###&&&&@@@@@@@@@@@@\r\n@@@@@@@@@@@&&&###BGP5YJ?JG&BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB&&@&###BBGPP55YYYJJJJJJJJ????J?JJJJJJJJJJJJJJJJ????JJYYPB&&#&BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG##P??Y5PGBB##&&&&@@@@@@@@@@@\r\n@@@@@@@@@&&&&##BBGP5Y?75##GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB&&#BP5YYJJJ???JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJPB#B#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG##Y?JY5PGB##&&&&@@@@@@@@@@\r\n@@@@@@@@&&&#&#BGPP5J7?B#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&#G5YJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ5GG#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB&P??J5PPBB###&&&@@@@@@@@\r\n@@@@@@@&&&###BGP5YJ75#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG##GYYJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ55BB#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG##J7JY5PGB##&&&&@@@@@@@\r\n@@@@@&&&&&#BBGP5Y??G&BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#BPJ5JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJY5BG&BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB&5?JY5PGBB#&&&&@@@@@@\r\n@@@@@&&&##BBGPYJ?J##GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG##5J5JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ55BG&#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&G??Y5PGBB##&&&@@@@@\r\n@@@&&&&##BGGPYJ?Y#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB&5J5YJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ?Y5BB&#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#B??Y5PGBB##&&&@@@@\r\n@@@&&&##BBG5YJ7Y&BGGGGGGGGGGGGGGGGGPPPPPPPPPPPPPPPGGGGGGGGGGBBBGPPPGGBBGGB&BJY5YJJJJJJJJJJJJJJJYYYYYYYYYYYYYYYYYYYYY555555555555555555PG#&@&BBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG##J?J55GBB###&&@@@\r\n@@&&&##BGGPYJ75&BGGGGGGGGGGGGGGGGGPPPPPPPPPPPPPPPPGGGGGGGBB5?!^:...:^!Y##&&&BBBBBGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPP55555555YYYYYYYYYYYYYYY55PGB&@@#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB#J?JYPGBB##&&&@@\r\n@&&&##BGGP5J75&GGGGGGGGGGGGGGGGGGGPPPPPPPPPPPPPPPPGGGGGB#J^.    ..    7@@#GPP555555555PPPPPPPPGGGGGGBBBBBBBBBGGGPPPPPPPPPPPPPPPPPPPP55555PPG#@@&GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB#J7J5PGG##&&&&@\r\n&&&&##GPP5J?Y&GGGGGGGGGGGGGGGGGGGGPPPPPPGGGGPPPPPPGGGG#G~  .~?5PPPPY7^.!G####BGGGGGBBBBBBBBBBGGPP5YYYYYYYY5PPGB###&####BBBBBBBBBBBBBBB#####BGJJBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB#??J5PGB###&&&\r\n&&&##BGP5J?J&BGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGPPPPPPGGG#5: :7PPJ!~^~75B#GYJ^^7G&G5555YYJ?7!~^::...            ...:^~7??7!~~~^^^^^^^^^^^~!JP&@P^  :JBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG##??Y5PGBB#&&&\r\n&##BBG55Y??#BGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGPPPPPPGBB7 :JPY~.     .^?J5GPYJBP~.            .    ....::....   .. ^~     .         .      .~P&GY7: ^GBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#G7JY5PBB##&&\r\n###BGP5YJ7B#GGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGPPPPPPBG^.?GJ:  ......:!????YB@B^ ...........   ^7J5GBB###BBBGPY7:.^P! :...7: ..^!?5GBGPY?~:. :G&?YGY::GBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&57?Y5GGB##&\r\n##BGG5YJ75&GGGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGPPPPPGP: YB^ .......:^7JYYYY5B@J............^?JYPB#&&##BGGGGGGGBBY?J~ ~P...^J^.JPGGGPPPGBBB5:. 7@! :Y#7^#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&J7J5PGB##&\r\n##BGP5Y??&BGGGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGPPPPPP^ ^#^ ......:^75GBBGPPB&B~........... .~!JPGBGPP5555GG#BPY?!~^~JB#7.  :??7JJJJJJJJJ?!... ~&7 . ?&!7#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#B??J5PGB##\r\n#BGP5YJ7G#GGGGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGPPPPGJ: ?5 .::^^^^75GBBGPPPP#&J:...........^JG#BPJ?JYYPGB5:.7@@@#&#GPJ^~5P5Y5GBPY5555GB#BP55::!5&! ...BG.GBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&5?JYPPB##\r\nBBGP5J?J&GGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPPPPPPPPPP?:.5?.^?YYYY5PP5PPPPPG#G7:...........~P#P!75~^:.~BB&B: .G&BP55Y?77?YG@@&57~^?J.JP#&@G!GJ.:G&~ .^.GG.PBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB#??Y5PGB#\r\nBGPPYJ7G#GGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPPPPPPPPPG?. J?:75PP5555PPPPPPPB?. ............7Y7^ JP^::::^!7!!!!GB:^!7?JY55PP5BB~^^:^J^75BB&Y !P..B#:..~!&!:BBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&57J5PGB#\r\nBGP5J??&GGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPPPPPPGGGBG: ^Y:75P5J!!YPPPPPPGJ:..............~Y?^!!?55PPPP55PG#B#Y.^~!77??JYYPB@BPY??JYJYPGY^~J^ ^&G...7G7 Y#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG##7JY5PGB\r\nGG5YJ7P&GGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPPGGGGGGGG#5. 7?75P5J^.^PGPPPPP?:...............75~.!?JJJYYYY555PB#JJ!^:^^~~~^!?YP5!JYJ7~~!!!7??^. 7@? :?5^.J#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#@J?Y5PGB\r\nGP5YJ7##GGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPPGGGGGGGGG#Y. !J5P5Y!^^~YPPPPG5:................:J?~^77777777?5#&P7.~YYJ???Y5P5Y?!:^7JY5PGGP5J!...?5.^7~ ~P#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#@P7JYPGB\r\nGP5J?J@#GGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGGGGGGGG#P^:?5PP5555555PPP5PY..................:~7???JJYP#@#Y~ .YG!.    .:::::::..^!??!^..  ..~J....~5#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#@#7?Y5PG\r\nPP5J7Y@#GGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGGGGGGGGGBBJ?5PP55YYYYYYYJ7^5Y..................   .^75GBGY^:~?5B: . :~~.  . ^7... ^!~7?!^::...^7.~5G5YGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#@&??Y5PG\r\nGPYJ7P@#GGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGGGGGGGGGGGBP5P5J!^^^^^^::...?7................ .^JB&#PYJ7!J5?~^:..^Y#@@BJ:.?&&B#B?.~J7::^:Y~ . ?P#P?7?GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#@@Y?J5PG\r\nP5YJ7G@#GGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGGGGGGGGGGGGGPPPY~.         . .................!P#B5??J7~J57::::. ~B?!?G&@P.5@Y~!##: .!5?..P! . J&GGY7?GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#@@57J5PG\r\nPPJ??B@#GGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGGGGGGGGGGGGPPPPGGPYJ7!!!~!!. ...:^~~~~~~~~~~~755JJJ?~.~PJ^^~~^...:7.  .^~^.:?:  J!... .?P57...?#GGGY7?5YJJYPGGGPYYYYJ5PGGG5YY5YY5YYPJJ555JJYGGGGGGG#@@57J5PP\r\nP5Y?7#@#GGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPGGGGGGGGGGGGGGGGPPPPPGGBBBBBBBB#5: .:7Y5555555555555Y?~: .?G!^~^:...... ....   .  ...  ....  ^GJ.:5BGGGGY7?PPPY775GY7?PGPY7?5GY7?PG5775YJYPG5?7JPGGGGGGG#@@5?J5PP\r\nP5YJ7#@#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGGGGGGGBB?.^JPPPP5YYYYY5PP57::.:55~~^:................::^^^^^^^^^^^^^~GGG#GGGGGY7?GGGG?7JG77YGGGP77JG57?PPY7?GGGGGY775GGGGGGGGG#@@57J5PG\r\nG5YJ?B@#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGGGGGGGGG#P?JPPP57^::^!J5P5J7^~GY~~:...........:^~!!77??????JJJ?JJJJJ?JB&#GGGGGY7?PGGP7?PGY7?PGG5775GPJJ55Y5GGGGP?7?PGPYYGGGGGG#@@57JYPG\r\nG5YJ7G@#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGGGGGGGGGBBPPPP57:...~J5P57:!BY~~:......:^!!7??JJJJJJJJJJJJJJYY?????J?JG##GGGGYJJY5YY5PGGG5JJYYJYPGG57?JJJJJ5GPJ?J55YJJPGGGGGG#@@5?JYPG\r\nGPYJ7P@#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPPPPPPPPPPPGPPPPPP57:...~J5PY!?#Y!~:..:^!7??JJJJ?????????JJJJJJJBG?JJJJJJJJG&#GGGGGGGGGGGGGGGGGGGGGGGGPYJY5555?7YGGGGGGGGGGGGGGGG#@@J?YYPG\r\nGP5J?Y@#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPPPPPPPPPPPPPPPPP57:...~J5PY5&57!~~!7?JJJ????????????JJJJJJJJJJGJ????JJJJJYG&BGGGGGGGGGGGGGGGGGGGGGGG57?PPPPPY?5GGGGGGGGGGGGGGGG#@&??Y5PG\r\nGP5J??&#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPPPPPPPPPPPPPPGP7....~J5PPBP777??J?????????JJJJJJ???????JJJJYYJJJJJJJJJJJY#&GGGGGGGGGGGGGGGGGGGGGGGGP5Y55555GGGGGGGGGGGGGGGGGGB@B7JY5PB\r\nGP5Y?7B#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB&Y.....~J5PPBJ???????????JJJJ????JJYY5PGGGBBBBBGBGB#####BGP5B&#BBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB@P7J55GB\r\nBGPYJ75&GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&G:.....~JPPGPJ???JJJ????J???5Y5PGBBBGP5YJJ??77???5GPPPPPPGGBB##GGBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#@J?Y5PGB\r\nBGP5Y??&GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB&! .....~5PPGPJ??J5JJJJJ??JYPB#BG5YJ????????????JJPBGPPPPPP5555555PPGB####BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#B7JY5PGB\r\nBGP5YJ7P#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#B:......~B5YBP????YY?J?J5GBBP5Y55YJJ??????????JJ?J?JYPGBB#BP#&&BBGPP5G&&##&&#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&Y?J5PGBB\r\n#BGP5J??&GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG@5 ..... ~&J:BBJ??JJJJYPBBPYJ?JJYYYJJ????????J?YBJ????JJJJJY5B&#GGGBBBB#&&BGB###BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGPBB7?Y5PGB#\r\n#BBG5YJ7P&PGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#@J ..... :#G.J&YJJ?J5B#GY??????JJJJJJJJJJJJJJJJJGBJJJ?JJJJJYP&#BGGGGGGGGGB##GGGGBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&J?JYPGBB#\r\n##BGP5YJ?#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBGB5 ..  :^:?&?.GG?JP##GY?????JJJ?JJJJJJJJJJJJJJJJJB5?JJJJJJYP&&BGGGGGGGGGGGGGBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGP#G7JY5PGB##\r\n&##BGP5J7Y&GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#J?#:..^JGBBB&&YJ#5J5YJ??????JJJJJJJJJJJJJJJJJJJJJ?JJ??JJY5PB##GGPPPGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB#??J5PGB##&\r\n&##BBG5YJ7P&GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#J.B5..^^:::!PBBGB#GP5YYYJJJJJJJJY555YJJJJJJJJJJJJYY55PGGBBGGPPPPPPPPGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&Y7JYPGG###&\r\n&&##BGP5Y?7B#PGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#P ^&5:  ... .?5BBPPGB#&&&&##BBBGPPPPGGGBGGGGGGGGGGGGGGGGPPPPPPPPPPPPGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&P7?YPPBB##&&\r\n&&&##BGP5J??#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBB: !&#J^.  ..:~JPB&#BB#&&&@@#GP55PP55YJJJJJJJJJJJJJJYPGPPPPPPPGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGP#G7JY5PGB###&&\r\n&&&##BGGPYJ?J&BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&!..7#@#G?~::^^~JG&@@##&@&#B&@#GPPPP5YJJJJJJJJJYYPG#&BPPPPPGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGP#B??J5PGB###&&&\r\n@&&&##BBPP5Y?J#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#5 .:!YB&@@#BGB&@@#PY5GBPJ77?5##GPPPBB#BBBBBBB#&&@@&BPPPPPPGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGP#B??Y5PGB##&&&&@\r\n@@@&&##BBGPYJ?J#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&? ...:~JPB####BG5Y55Y?!!!!77!?5PPPPB&&@&&&&###&&&BGPPPPPPPGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGP#B7?Y5PGBB#&&&&@@\r\n@@@&&&###BGPYJ?J#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB#7.......:^!77????7!~~^^^^::^!77?YPP5G#&#BGGGGGGB#B#GGPPPPPGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#B7?Y5PGB##&&&&@@@\r\n@@@@&&&&##BGP5Y??B#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#G~ ..........:::::............:~7?YPP5YP##GGGGGGGG#PBBGPPPPPPGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG#G7?Y5PGB##&&&&@@@@\r\n@@@@@&&&&##BGP5YJ?G#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB#Y: ............................:^7J5PP5YBGGGGGGGGGGBBY#BPPPPPPPGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG&57JY5PGB##&&&&@@@@@\r\n@@@@@@&&&###BGP5YJ75#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB#?...............................:~7?YPP5GBGGGGGGGGGGG#YP&GPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGGGGGGGGGGGGGGB#Y?JYPPGB##&&&@@@@@@@\r\n@@@@@@@&&&&#BBGPPYJ?JB#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBB##?................................^!7?JYYY#GGGGGGGGGGGG#GJ#BGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGGGGGGGGGGGG#G??JY5GBB##&&&&@@@@@@@\r\n@@@@@@@@&&&&##BGGP5J??P#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBB##&&&&#~ ...............................^!77777~J&GGGGGGGGGGGGB#JP&GGGGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGGGGGGGGGB#57JY5PGBB##&&&@@@@@@@@@\r\n@@@@@@@@@@&&&&##BGP5YJ7YB#GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBGY?G@@@@@@#J^ .............................^!77777~.5&BGGGGGGGGGGGG#YJ#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGGGGG#G??JYPGBBB#&&&@@@@@@@@@@@\r\n@@@@@@@@@@@&&&&##BBGP5Y??5#BGGGGGGGGGGGGGGGGGGGGGGGGGGBB5?~.  ~#@&@@@&P57:. .........................^!77777!:^G@&&#BGGGGGGGGG#5JG&GGGGGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPGGGGGG#BY?JY5PGBB##&&&&@@@@@@@@@@@\r\n@@@@@@@@@@@@&&&&##BBGP5YJ??P#BGGGGGGGGGGGGGGGGGGGGGBG57:    .:~5@@&#@@@#BPJ!^.    ..................^!7777?JJP&@@@@&##BGGGGGGG#PJ5#GPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGGGGB#5??Y5PGBB###&&&&@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@&&&&###BGP5YJ?JG#BGGGGGGGGGGGGGGGGGGY!:..^~7YPB&@@&B5~7G&@@@&#BPY?!^::...    . ....::~?Y5PGB#&@@@@@&PJ~~YGBGGGGG#GJ5GPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGGGB#P??JY5PGB###&&&&@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@&&&###BGGP5YJ?JG#BGGGGGGGGGGGB##B5Y5GB&&@@&BPY?~^. . .^75B&@@@@@@&##BGPP555555PGGB#&&&@@@@@@@@&P?^     :!5GBGG#GYYBGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGB#PJ?JY5PGBB##&&&&@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@&&&&###BBGP5YJ?JG#BGGGGGGGB##&@&##BGPY?!~:.       ..:^~!JG&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&@@@&#BGP5YJ7!!7YGB#BJY#BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGB#P??JY5PGGB###&&&&@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@&&&&###BBGP5YJ?JPBBGGGBBY~:~JPJ:.     .:^~!7JY5PB#&@@@@@&&##BGGGGGGGGGGGGGPPP55YJJ?7!~^^~!7?Y5PB##&&@@@&&&@@&GP&BGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBB5??JY5PGBB####&&&@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@&&&###BBGGP5YJ??5B##G~.    .!7~!7J5GB#&@@@@&&&BPYJ?7!~^::..                                  ..::^^~~!77??JP#&BGGGGGGGGGGGGGGGGGGGGGGGGGGGBBGY?JY55PGGB##&&&&&@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@&&&####BBGPPYJ??JPGBPJ7~:. ~?YPG#@&#GY??77!^.   ..::^^~~!!!777777777777!!!!~~~^^::::......                P#GBGGGGGGGGGGGGGGGGGGGGGGGBBB5J??Y5PGGBB##&&&&&@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@&&&###BBGGP5YJ??YB&@@#G5YY??P#PYJ??JJJJY5PGBB##&&@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&##BBBGGGPPP5555YYYYJJ?7#BPPBGGGGGGGGGGGGGGGGGGGBBBPJ??J55GGGBB###&&&&&@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&####BBGGP5YJ??YG#&##B5?B&&###&@&&##BGGP5YYJ??77!!!!~~~~~~~~~~~!!!!!777??JJYY55PPPGGGGGBBBBB####&@&J:^YP#GGGGGGGGGGGGGGGBBBPY??JY5PGGBB###&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&####BGGP55Y???Y5P5#@B?~^:~!~^:..  ...               .......:................................:Y&?..^5B&BGGGGGGGGGGBBBPJ??JY5PPGBB###&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&##BBGGP55YJ?JJ5GP7^.    .:^!?JJJ!^~~!77?JY55PGGBB####&&&&&&&&###########BBBBBBBGGGPP5Y?7~^?YPG#@@&#GGGGGGBBBP5J??JY5PGGBB####&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&#####BBGPP5YYJ?JY55YJ5GB#&@@&&&&&@@@@@@@@@&&##BBBGGGGPPPPPPPPPPPPPPPPGGGGGGGGGGGGBB#&&&&##@@B5?~7#GBBBBP5J??JJY5PGGBBB###&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&####BBGGP55YJJ?JY5G#&@@&BGGP5YYJ?7!~^^::....                                   :~7JG@&#?:.^~?BG5YJ??JJ555PGGBB###&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&###BBBGGPP5YJJJ?JJY55P5YYYJ7!....:::^^^~~~~~~~~~~!!!!!!!!!!!!!!!!!!!!!!777777!!G@#YJY55YJ???JYY5PPGGBBB###&#&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&#####BBBGPP55YYJJ??JY5PGGBGBB##&&&&&@@&#B#&&&@@@@@@@@&&&&&&&&&&&&&@@@@@@@&#GP5YJJJ?JJY55PPGGGBB######&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&####BBGGGPP555YYJJJJJJJY5PPGBB###BY7?JJJJJ?7777?????JJJY55PPPGPP5YYJJ???JYYY55PPGGGBBB#####&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&#####BBBGGGGPP555YYJ?JJ????J?JJYJJYYYYYYYYYYYYYYJJJJJJJ??JJJJJYYY555PPPGGGBBB#####&#&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&#####BBBBBBGGGPPP5PP555YYYYYYYJJYJYJJJJJJJYYJYYY5555PPPPPPGGGGBBBB######&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&######BBBBBBBGGGGGGGGGGPPPPPPPPPPPPPPPGGGGGGGGGBBBBB#######&##&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n\r\n\r\n*/ \r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity =0.8.10 >=0.8.10 >=0.8.0 <0.9.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface IERC20Metadata is IERC20 {\r\n\r\n    function name() external view returns (string memory);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n\r\n        _afterTokenTransfer(sender, recipient, amount);\r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    event PairCreated(\r\n        address indexed token0,\r\n        address indexed token1,\r\n        address pair,\r\n        uint256\r\n    );\r\n\r\n    function feeTo() external view returns (address);\r\n\r\n    function feeToSetter() external view returns (address);\r\n\r\n    function getPair(address tokenA, address tokenB)\r\n        external\r\n        view\r\n        returns (address pair);\r\n\r\n    function allPairs(uint256) external view returns (address pair);\r\n\r\n    function allPairsLength() external view returns (uint256);\r\n\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n\r\n    function setFeeTo(address) external;\r\n\r\n    function setFeeToSetter(address) external;\r\n}\r\n\r\ninterface IUniswapV2Pair {\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    function name() external pure returns (string memory);\r\n\r\n    function symbol() external pure returns (string memory);\r\n\r\n    function decimals() external pure returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\r\n    event Burn(\r\n        address indexed sender,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        address indexed to\r\n    );\r\n    event Swap(\r\n        address indexed sender,\r\n        uint256 amount0In,\r\n        uint256 amount1In,\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\r\n\r\n    function factory() external view returns (address);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function getReserves()\r\n        external\r\n        view\r\n        returns (\r\n            uint112 reserve0,\r\n            uint112 reserve1,\r\n            uint32 blockTimestampLast\r\n        );\r\n\r\n    function price0CumulativeLast() external view returns (uint256);\r\n\r\n    function price1CumulativeLast() external view returns (uint256);\r\n\r\n    function kLast() external view returns (uint256);\r\n\r\n    function mint(address to) external returns (uint256 liquidity);\r\n\r\n    function burn(address to)\r\n        external\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    function swap(\r\n        uint256 amount0Out,\r\n        uint256 amount1Out,\r\n        address to,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    function skim(address to) external;\r\n\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        returns (\r\n            uint256 amountA,\r\n            uint256 amountB,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 amountToken,\r\n            uint256 amountETH,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable;\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n}\r\n\r\ncontract BOGZ is ERC20, Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    IUniswapV2Router02 public immutable uniswapV2Router;\r\n    address public immutable uniswapV2Pair;\r\n    address public constant deadAddress = address(0xdead);\r\n    address public routerCA = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D; // 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D uniswap\r\n\r\n    bool private swapping;\r\n\r\n    address public BOREDWallet;\r\n    address public BIDENWallet;\r\n    address public liqWallet;\r\n    address public BOGZWallet;\r\n\r\n    uint256 public maxTransactionAmount;\r\n    uint256 public swapTokensAtAmount;\r\n    uint256 public maxWallet;\r\n\r\n    bool public limitsInEffect = true;\r\n    bool public tradingActive = false;\r\n    bool public swapEnabled = false;\r\n\r\n    // Anti-bot and anti-whale mappings and variables\r\n    mapping(address => uint256) private _holderLastTransferTimestamp;\r\n    bool public transferDelayEnabled = true;\r\n    uint256 private launchBlock;\r\n    uint256 private deadBlocks;\r\n    mapping(address => bool) public blocked;\r\n\r\n    uint256 public buyTotalFees;\r\n    uint256 public buyBORED;\r\n    uint256 public buyLiquidityFee;\r\n    uint256 public buyBIDENFee;\r\n    uint256 public buyBOGZFee;\r\n\r\n    uint256 public sellTotalFees;\r\n    uint256 public sellBORED;\r\n    uint256 public sellLiquidityFee;\r\n    uint256 public sellBIDENFee;\r\n    uint256 public sellBOGZFee;\r\n\r\n    uint256 public tokensForBORED;\r\n    uint256 public tokensForLiquidity;\r\n    uint256 public tokensForBIDEN;\r\n    uint256 public tokensForBOGZ;\r\n\r\n    mapping(address => bool) private _isExcludedFromFees;\r\n    mapping(address => bool) public _isExcludedMaxTransactionAmount;\r\n\r\n    mapping(address => bool) public automatedMarketMakerPairs;\r\n\r\n    event UpdateUniswapV2Router(\r\n        address indexed newAddress,\r\n        address indexed oldAddress\r\n    );\r\n\r\n    event ExcludeFromFees(address indexed account, bool isExcluded);\r\n\r\n    event SetAutomatedMarketMakerPair(address indexed pair, bool indexed value);\r\n\r\n    event BOREDWalletUpdated(\r\n        address indexed newWallet,\r\n        address indexed oldWallet\r\n    );\r\n\r\n    event BIDENWalletUpdated(\r\n        address indexed newWallet,\r\n        address indexed oldWallet\r\n    );\r\n\r\n    event liqWalletUpdated(\r\n        address indexed newWallet,\r\n        address indexed oldWallet\r\n    );\r\n\r\n    event BOGZWalletUpdated(\r\n        address indexed newWallet,\r\n        address indexed oldWallet\r\n    );\r\n\r\n    event SwapAndLiquify(\r\n        uint256 tokensSwapped,\r\n        uint256 ethReceived,\r\n        uint256 tokensIntoLiquidity\r\n    );\r\n\r\n    constructor() ERC20(\"BOREDMILADY18FURIEBIDEN\", \"BOGZ\") {\r\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(routerCA); \r\n\r\n        excludeFromMaxTransaction(address(_uniswapV2Router), true);\r\n        uniswapV2Router = _uniswapV2Router;\r\n\r\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\r\n            .createPair(address(this), _uniswapV2Router.WETH());\r\n        excludeFromMaxTransaction(address(uniswapV2Pair), true);\r\n        _setAutomatedMarketMakerPair(address(uniswapV2Pair), true);\r\n\r\n        // launch buy fees\r\n        uint256 _buyBORED = 0;\r\n        uint256 _buyLiquidityFee = 0;\r\n        uint256 _buyBIDENFee = 5;\r\n        uint256 _buyBOGZFee = 0;\r\n        \r\n        // launch sell fees\r\n        uint256 _sellBORED = 0;\r\n        uint256 _sellLiquidityFee = 30;\r\n        uint256 _sellBIDENFee = 0;\r\n        uint256 _sellBOGZFee = 0;\r\n\r\n        uint256 totalSupply = 5_000_000 * 1e18;\r\n\r\n        maxTransactionAmount = 50_000 * 1e18; // 1% max txn\r\n        maxWallet = 50_000 * 1e18; // 1% max wallet\r\n        swapTokensAtAmount = (totalSupply * 5) / 50000; // 0.05% swap wallet\r\n\r\n        buyBORED = _buyBORED;\r\n        buyLiquidityFee = _buyLiquidityFee;\r\n        buyBIDENFee = _buyBIDENFee;\r\n        buyBOGZFee = _buyBOGZFee;\r\n        buyTotalFees = buyBORED + buyLiquidityFee + buyBIDENFee + buyBOGZFee;\r\n\r\n        sellBORED = _sellBORED;\r\n        sellLiquidityFee = _sellLiquidityFee;\r\n        sellBIDENFee = _sellBIDENFee;\r\n        sellBOGZFee = _sellBOGZFee;\r\n        sellTotalFees = sellBORED + sellLiquidityFee + sellBIDENFee + sellBOGZFee;\r\n\r\n        BOREDWallet = address(0x512E5F50dBe3930ff7dde885c2783Da28feD782d); \r\n        BIDENWallet = address(0x512E5F50dBe3930ff7dde885c2783Da28feD782d); \r\n        liqWallet = address(0x512E5F50dBe3930ff7dde885c2783Da28feD782d); \r\n        BOGZWallet = address(0x512E5F50dBe3930ff7dde885c2783Da28feD782d);\r\n\r\n        // exclude from paying fees or having max transaction amount\r\n        excludeFromFees(owner(), true);\r\n        excludeFromFees(address(this), true);\r\n        excludeFromFees(address(0xdead), true);\r\n\r\n        excludeFromMaxTransaction(owner(), true);\r\n        excludeFromMaxTransaction(address(this), true);\r\n        excludeFromMaxTransaction(address(0xdead), true);\r\n\r\n        _mint(msg.sender, totalSupply);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function Furiewentweet(uint256 _deadBlocks) external onlyOwner {\r\n        require(!tradingActive, \"Token launched\");\r\n        tradingActive = true;\r\n        launchBlock = block.number;\r\n        swapEnabled = true;\r\n        deadBlocks = _deadBlocks;\r\n    }\r\n\r\n    // remove limits after token is stable\r\n    function removeLimits() external onlyOwner returns (bool) {\r\n        limitsInEffect = false;\r\n        return true;\r\n    }\r\n\r\n    // disable Transfer delay - cannot be reenabled\r\n    function disableTransferDelay() external onlyOwner returns (bool) {\r\n        transferDelayEnabled = false;\r\n        return true;\r\n    }\r\n\r\n    // change the minimum amount of tokens to sell from fees\r\n    function updateSwapTokensAtAmount(uint256 newAmount)\r\n        external\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        require(\r\n            newAmount >= (totalSupply() * 1) / 100000,\r\n            \"Swap amount cannot be lower than 0.001% total supply.\"\r\n        );\r\n        require(\r\n            newAmount <= (totalSupply() * 5) / 1000,\r\n            \"Swap amount cannot be higher than 0.5% total supply.\"\r\n        );\r\n        swapTokensAtAmount = newAmount;\r\n        return true;\r\n    }\r\n\r\n    function updateMaxTxnAmount(uint256 newNum) external onlyOwner {\r\n        require(\r\n            newNum >= ((totalSupply() * 1) / 1000) / 1e18,\r\n            \"Cannot set maxTransactionAmount lower than 0.1%\"\r\n        );\r\n        maxTransactionAmount = newNum * (10**18);\r\n    }\r\n\r\n    function updateMaxWalletAmount(uint256 newNum) external onlyOwner {\r\n        require(\r\n            newNum >= ((totalSupply() * 5) / 1000) / 1e18,\r\n            \"Cannot set maxWallet lower than 0.5%\"\r\n        );\r\n        maxWallet = newNum * (10**18);\r\n    }\r\n\r\n    function excludeFromMaxTransaction(address updAds, bool isEx)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _isExcludedMaxTransactionAmount[updAds] = isEx;\r\n    }\r\n\r\n    // only use to disable contract sales if absolutely necessary (emergency use only)\r\n    function updateSwapEnabled(bool enabled) external onlyOwner {\r\n        swapEnabled = enabled;\r\n    }\r\n\r\n    function updateBuyFees(\r\n        uint256 _BORED,\r\n        uint256 _liquidityFee,\r\n        uint256 _BIDENFee,\r\n        uint256 _BOGZFee\r\n    ) external onlyOwner {\r\n        buyBORED = _BORED;\r\n        buyLiquidityFee = _liquidityFee;\r\n        buyBIDENFee = _BIDENFee;\r\n        buyBOGZFee = _BOGZFee;\r\n        buyTotalFees = buyBORED + buyLiquidityFee + buyBIDENFee + buyBOGZFee;\r\n        require(buyTotalFees <= 99);\r\n    }\r\n\r\n    function updateSellFees(\r\n        uint256 _BORED,\r\n        uint256 _liquidityFee,\r\n        uint256 _BIDENFee,\r\n        uint256 _BOGZFee\r\n    ) external onlyOwner {\r\n        sellBORED = _BORED;\r\n        sellLiquidityFee = _liquidityFee;\r\n        sellBIDENFee = _BIDENFee;\r\n        sellBOGZFee = _BOGZFee;\r\n        sellTotalFees = sellBORED + sellLiquidityFee + sellBIDENFee + sellBOGZFee;\r\n        require(sellTotalFees <= 99); \r\n    }\r\n\r\n    function excludeFromFees(address account, bool excluded) public onlyOwner {\r\n        _isExcludedFromFees[account] = excluded;\r\n        emit ExcludeFromFees(account, excluded);\r\n    }\r\n\r\n    function setAutomatedMarketMakerPair(address pair, bool value)\r\n        public\r\n        onlyOwner\r\n    {\r\n        require(\r\n            pair != uniswapV2Pair,\r\n            \"The pair cannot be removed from automatedMarketMakerPairs\"\r\n        );\r\n\r\n        _setAutomatedMarketMakerPair(pair, value);\r\n    }\r\n\r\n    function _setAutomatedMarketMakerPair(address pair, bool value) private {\r\n        automatedMarketMakerPairs[pair] = value;\r\n\r\n        emit SetAutomatedMarketMakerPair(pair, value);\r\n    }\r\n\r\n    function updateBOREDWallet(address newBOREDWallet) external onlyOwner {\r\n        emit BOREDWalletUpdated(newBOREDWallet, BOREDWallet);\r\n        BOREDWallet = newBOREDWallet;\r\n    }\r\n\r\n    function updateBIDENWallet(address newWallet) external onlyOwner {\r\n        emit BIDENWalletUpdated(newWallet, BIDENWallet);\r\n        BIDENWallet = newWallet;\r\n    }\r\n\r\n    function updateBOGZWallet(address newWallet) external onlyOwner{\r\n        emit BOGZWalletUpdated(newWallet, BOGZWallet);\r\n        BOGZWallet = newWallet;\r\n    }\r\n\r\n    function updateLiqWallet(address newLiqWallet) external onlyOwner {\r\n        emit liqWalletUpdated(newLiqWallet, liqWallet);\r\n        liqWallet = newLiqWallet;\r\n    }\r\n\r\n    function isExcludedFromFees(address account) public view returns (bool) {\r\n        return _isExcludedFromFees[account];\r\n    }\r\n\r\n    event BoughtEarly(address indexed sniper);\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal override {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(!blocked[from], \"Sniper blocked\");\r\n\r\n        if (amount == 0) {\r\n            super._transfer(from, to, 0);\r\n            return;\r\n        }\r\n\r\n        if (limitsInEffect) {\r\n            if (\r\n                from != owner() &&\r\n                to != owner() &&\r\n                to != address(0) &&\r\n                to != address(0xdead) &&\r\n                !swapping\r\n            ) {\r\n                if (!tradingActive) {\r\n                    require(\r\n                        _isExcludedFromFees[from] || _isExcludedFromFees[to],\r\n                        \"Trading is not active.\"\r\n                    );\r\n                }\r\n\r\n                if(block.number <= launchBlock + deadBlocks && from == address(uniswapV2Pair) &&  \r\n                to != routerCA && to != address(this) && to != address(uniswapV2Pair)){\r\n                    blocked[to] = true;\r\n                    emit BoughtEarly(to);\r\n                }\r\n\r\n                // at launch if the transfer delay is enabled, ensure the block timestamps for purchasers is set -- during launch.\r\n                if (transferDelayEnabled) {\r\n                    if (\r\n                        to != owner() &&\r\n                        to != address(uniswapV2Router) &&\r\n                        to != address(uniswapV2Pair)\r\n                    ) {\r\n                        require(\r\n                            _holderLastTransferTimestamp[tx.origin] <\r\n                                block.number,\r\n                            \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\"\r\n                        );\r\n                        _holderLastTransferTimestamp[tx.origin] = block.number;\r\n                    }\r\n                }\r\n\r\n                //when buy\r\n                if (\r\n                    automatedMarketMakerPairs[from] &&\r\n                    !_isExcludedMaxTransactionAmount[to]\r\n                ) {\r\n                    require(\r\n                        amount <= maxTransactionAmount,\r\n                        \"Buy transfer amount exceeds the maxTransactionAmount.\"\r\n                    );\r\n                    require(\r\n                        amount + balanceOf(to) <= maxWallet,\r\n                        \"Max wallet exceeded\"\r\n                    );\r\n                }\r\n                //when sell\r\n                else if (\r\n                    automatedMarketMakerPairs[to] &&\r\n                    !_isExcludedMaxTransactionAmount[from]\r\n                ) {\r\n                    require(\r\n                        amount <= maxTransactionAmount,\r\n                        \"Sell transfer amount exceeds the maxTransactionAmount.\"\r\n                    );\r\n                } else if (!_isExcludedMaxTransactionAmount[to]) {\r\n                    require(\r\n                        amount + balanceOf(to) <= maxWallet,\r\n                        \"Max wallet exceeded\"\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        uint256 contractTokenBalance = balanceOf(address(this));\r\n\r\n        bool canSwap = contractTokenBalance >= swapTokensAtAmount;\r\n\r\n        if (\r\n            canSwap &&\r\n            swapEnabled &&\r\n            !swapping &&\r\n            !automatedMarketMakerPairs[from] &&\r\n            !_isExcludedFromFees[from] &&\r\n            !_isExcludedFromFees[to]\r\n        ) {\r\n            swapping = true;\r\n\r\n            swapBack();\r\n\r\n            swapping = false;\r\n        }\r\n\r\n        bool takeFee = !swapping;\r\n\r\n        // if any account belongs to _isExcludedFromFee account then remove the fee\r\n        if (_isExcludedFromFees[from] || _isExcludedFromFees[to]) {\r\n            takeFee = false;\r\n        }\r\n\r\n        uint256 fees = 0;\r\n        // only take fees on buys/sells, do not take on wallet transfers\r\n        if (takeFee) {\r\n            // on sell\r\n            if (automatedMarketMakerPairs[to] && sellTotalFees > 0) {\r\n                fees = amount.mul(sellTotalFees).div(100);\r\n                tokensForLiquidity += (fees * sellLiquidityFee) / sellTotalFees;\r\n                tokensForBIDEN += (fees * sellBIDENFee) / sellTotalFees;\r\n                tokensForBORED += (fees * sellBORED) / sellTotalFees;\r\n                tokensForBOGZ += (fees * sellBOGZFee) / sellTotalFees;\r\n            }\r\n            // on buy\r\n            else if (automatedMarketMakerPairs[from] && buyTotalFees > 0) {\r\n                fees = amount.mul(buyTotalFees).div(100);\r\n                tokensForLiquidity += (fees * buyLiquidityFee) / buyTotalFees;\r\n                tokensForBIDEN += (fees * buyBIDENFee) / buyTotalFees;\r\n                tokensForBORED += (fees * buyBORED) / buyTotalFees;\r\n                tokensForBOGZ += (fees * buyBOGZFee) / buyTotalFees;\r\n            }\r\n\r\n            if (fees > 0) {\r\n                super._transfer(from, address(this), fees);\r\n            }\r\n\r\n            amount -= fees;\r\n        }\r\n\r\n        super._transfer(from, to, amount);\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private {\r\n        // generate the uniswap pair path of token -> weth\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n\r\n        // make the swap\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0, // accept any amount of ETH\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function multiBlock(address[] calldata blockees, bool shouldBlock) external onlyOwner {\r\n        for(uint256 i = 0;i<blockees.length;i++){\r\n            address blockee = blockees[i];\r\n            if(blockee != address(this) && \r\n               blockee != routerCA && \r\n               blockee != address(uniswapV2Pair))\r\n                blocked[blockee] = shouldBlock;\r\n        }\r\n    }\r\n\r\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\r\n        // approve token transfer to cover all possible scenarios\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n\r\n        // add the liquidity\r\n        uniswapV2Router.addLiquidityETH{value: ethAmount}(\r\n            address(this),\r\n            tokenAmount,\r\n            0, // slippage is unavoidable\r\n            0, // slippage is unavoidable\r\n            liqWallet,\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function swapBack() private {\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        uint256 totalTokensToSwap = tokensForLiquidity +\r\n            tokensForBORED +\r\n            tokensForBIDEN +\r\n            tokensForBOGZ;\r\n        bool success;\r\n\r\n        if (contractBalance == 0 || totalTokensToSwap == 0) {\r\n            return;\r\n        }\r\n\r\n        if (contractBalance > swapTokensAtAmount * 20) {\r\n            contractBalance = swapTokensAtAmount * 20;\r\n        }\r\n\r\n        // Halve the amount of liquidity tokens\r\n        uint256 liquidityTokens = (contractBalance * tokensForLiquidity) / totalTokensToSwap / 2;\r\n        uint256 amountToSwapForETH = contractBalance.sub(liquidityTokens);\r\n\r\n        uint256 initialETHBalance = address(this).balance;\r\n\r\n        swapTokensForEth(amountToSwapForETH);\r\n\r\n        uint256 ethBalance = address(this).balance.sub(initialETHBalance);\r\n\r\n        uint256 ethForBORED = ethBalance.mul(tokensForBORED).div(totalTokensToSwap);\r\n        uint256 ethForBIDEN = ethBalance.mul(tokensForBIDEN).div(totalTokensToSwap);\r\n        uint256 ethForBOGZ = ethBalance.mul(tokensForBOGZ).div(totalTokensToSwap);\r\n\r\n        uint256 ethForLiquidity = ethBalance - ethForBORED - ethForBIDEN - ethForBOGZ;\r\n\r\n        tokensForLiquidity = 0;\r\n        tokensForBORED = 0;\r\n        tokensForBIDEN = 0;\r\n        tokensForBOGZ = 0;\r\n\r\n        (success, ) = address(BIDENWallet).call{value: ethForBIDEN}(\"\");\r\n\r\n        if (liquidityTokens > 0 && ethForLiquidity > 0) {\r\n            addLiquidity(liquidityTokens, ethForLiquidity);\r\n            emit SwapAndLiquify(\r\n                amountToSwapForETH,\r\n                ethForLiquidity,\r\n                tokensForLiquidity\r\n            );\r\n        }\r\n        (success, ) = address(BOGZWallet).call{value: ethForBOGZ}(\"\");\r\n        (success, ) = address(BOREDWallet).call{value: address(this).balance}(\"\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldWallet\",\"type\":\"address\"}],\"name\":\"BIDENWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldWallet\",\"type\":\"address\"}],\"name\":\"BOGZWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldWallet\",\"type\":\"address\"}],\"name\":\"BOREDWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sniper\",\"type\":\"address\"}],\"name\":\"BoughtEarly\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isExcluded\",\"type\":\"bool\"}],\"name\":\"ExcludeFromFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"SetAutomatedMarketMakerPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiquidity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"UpdateUniswapV2Router\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldWallet\",\"type\":\"address\"}],\"name\":\"liqWalletUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BIDENWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BOGZWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BOREDWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deadBlocks\",\"type\":\"uint256\"}],\"name\":\"Furiewentweet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_isExcludedMaxTransactionAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"automatedMarketMakerPairs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBIDENFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBOGZFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBORED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyLiquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTotalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTransferDelay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"updAds\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isEx\",\"type\":\"bool\"}],\"name\":\"excludeFromMaxTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitsInEffect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liqWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransactionAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"blockees\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"shouldBlock\",\"type\":\"bool\"}],\"name\":\"multiBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"routerCA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellBIDENFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellBOGZFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellBORED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellLiquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTotalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setAutomatedMarketMakerPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTokensAtAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForBIDEN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForBOGZ\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForBORED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensForLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferDelayEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"updateBIDENWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"updateBOGZWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBOREDWallet\",\"type\":\"address\"}],\"name\":\"updateBOREDWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BORED\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_BIDENFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_BOGZFee\",\"type\":\"uint256\"}],\"name\":\"updateBuyFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newLiqWallet\",\"type\":\"address\"}],\"name\":\"updateLiqWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNum\",\"type\":\"uint256\"}],\"name\":\"updateMaxTxnAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newNum\",\"type\":\"uint256\"}],\"name\":\"updateMaxWalletAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BORED\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_BIDENFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_BOGZFee\",\"type\":\"uint256\"}],\"name\":\"updateSellFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"updateSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"updateSwapTokensAtAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "BOGZ", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c4febedfd47b4216728f2418591c1b18f92c1b2a6ece108b78866a507cc8c16a"}