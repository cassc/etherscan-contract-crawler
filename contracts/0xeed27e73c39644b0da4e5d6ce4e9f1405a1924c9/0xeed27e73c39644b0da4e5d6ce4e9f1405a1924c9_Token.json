{"SourceCode": "// The MIT License (MIT)\r\n// Copyright (c) 2016-2019 zOS Global Limited\r\n// Copyright (c) 2019-2021 ABC Hosting Ltd.\r\n\r\npragma solidity ^0.4.18;\r\n\r\ncontract EternalStorage {\r\n    mapping(bytes32 => uint256) internal uintStorage;\r\n    mapping(bytes32 => string) internal stringStorage;\r\n    mapping(bytes32 => address) internal addressStorage;\r\n    mapping(bytes32 => bytes) internal bytesStorage;\r\n    mapping(bytes32 => bool) internal boolStorage;\r\n    mapping(bytes32 => int256) internal intStorage;\r\n}\r\n\r\ncontract UpgradeabilityStorage {\r\n    string internal _version;\r\n    address internal _implementation;\r\n\r\n    function version() public view returns (string) {\r\n        return _version;\r\n    }\r\n\r\n    function implementation() public view returns (address) {\r\n        return _implementation;\r\n    }\r\n}\r\n\r\ncontract TokenImplAddress is EternalStorage, UpgradeabilityStorage {}\r\n\r\ncontract Proxy {\r\n    TokenImplAddress implAddress;\r\n\r\n    function getImplementation() public view returns (address) {\r\n        return implAddress.implementation();\r\n    }\r\n\r\n    function () payable public {\r\n        address _impl = getImplementation();\r\n        require(_impl != address(0));\r\n\r\n        assembly {\r\n            let ptr := mload(0x40)\r\n            calldatacopy(ptr, 0, calldatasize)\r\n            let result := delegatecall(gas, _impl, ptr, calldatasize, 0, 0)\r\n            let size := returndatasize\r\n            returndatacopy(ptr, 0, size)\r\n\r\n            switch result\r\n            case 0 { revert(ptr, size) }\r\n            default { return(ptr, size) }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeMath {}\r\n\r\ncontract Token is EternalStorage, Proxy {\r\n    using SafeMath for uint256;\r\n\r\n    function Token(address impl) public {\r\n        implAddress = TokenImplAddress(impl);\r\n        addressStorage[keccak256(\"owner\")] = msg.sender;\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"getImplementation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"impl\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "Token", "CompilerVersion": "v0.4.18+commit.9cf6e910", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000a2f4325200e252c3d0c3a592ed75794176c4e4e5", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://ff62879c7f3d145ded5228c935b3c5df9cc3dbd39561a07ea0db0d6dd95d3aa0"}