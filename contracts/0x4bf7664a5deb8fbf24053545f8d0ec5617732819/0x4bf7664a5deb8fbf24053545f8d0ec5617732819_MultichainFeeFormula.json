{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/contracts/token/MultichainFeeFormula.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8;\\n\\nimport \\\"./IFeesFormula.sol\\\";\\n\\n/**\\n * This fee formula protects transfering any G$s locked in the now disfunctional multichain bridge\\n * by taxing them 100%. also preventing sending funds to the bridge.\\n */\\ncontract MultichainFeeFormula is IFeesFormula {\\n\\t/**\\n\\t * take any transfered funds from multichain bridge as fee\\n\\t * for other txs fee will stay 0\\n\\t */\\n\\tfunction getTxFees(\\n\\t\\tuint256 value,\\n\\t\\taddress sender,\\n\\t\\taddress recipient\\n\\t) public view returns (uint256 fee, bool senderPays) {\\n\\t\\tsenderPays = false;\\n\\n\\t\\tif (sender == address(0xD17652350Cfd2A37bA2f947C910987a3B1A1c60d))\\n\\t\\t\\tfee = value;\\n\\t\\tif (recipient == address(0xD17652350Cfd2A37bA2f947C910987a3B1A1c60d))\\n\\t\\t\\trevert(\\\"multichain hack\\\");\\n\\t}\\n\\n\\t/**\\n\\t * required by old GoodDollar on ethereum\\n\\t */\\n\\tfunction isRegistered() public pure returns (bool) {\\n\\t\\treturn true;\\n\\t}\\n}\\n\"\r\n    },\r\n    \"/contracts/token/IFeesFormula.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8;\\n\\ninterface IFeesFormula {\\n\\tfunction getTxFees(\\n\\t\\tuint256 value,\\n\\t\\taddress sender,\\n\\t\\taddress recipient\\n\\t) external view returns (uint256 fee, bool senderPays);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 0\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"getTxFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"senderPays\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "MultichainFeeFormula", "CompilerVersion": "v0.8.16+commit.07a7930e", "OptimizationUsed": "1", "Runs": "0", "ConstructorArguments": "", "EVMVersion": "london", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}