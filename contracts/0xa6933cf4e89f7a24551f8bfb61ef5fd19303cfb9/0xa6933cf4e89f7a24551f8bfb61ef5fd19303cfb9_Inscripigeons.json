{"SourceCode": "// SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity ^0.8.20;\r\n\r\ncontract Inscripigeons {\r\n\r\n    error MaxSupplyReached();\r\n    error InvalidValue();\r\n    error RequestingTooMany();\r\n    error TransferFailed();\r\n    error OnlyOwner();\r\n    error AlreadyClaimed();\r\n    error InvalidSnapshotProof();\r\n\r\n    event Mint(address indexed minter, uint256 indexed amount, uint256 startID);\r\n\r\n    uint256 public TOTAL_SUPPLY = 0;\r\n    uint256 public PRICE = 0.003 * 1 ether;\r\n    uint256 public immutable MAX_SUPPLY = 4900;\r\n\r\n    address OWNER;\r\n\r\n    modifier onlyOwner() {\r\n        if (msg.sender != OWNER) {\r\n            revert OnlyOwner();\r\n        }\r\n        _;\r\n    }\r\n\r\n    constructor () {\r\n        OWNER = msg.sender;\r\n    }\r\n\r\n    function setPrice(uint256 _PRICE) external onlyOwner {\r\n        PRICE = _PRICE;\r\n    }\r\n\r\n    function mint(uint256 amount) external payable {\r\n        if (TOTAL_SUPPLY == MAX_SUPPLY) { revert MaxSupplyReached(); }\r\n        if ((TOTAL_SUPPLY + amount) > MAX_SUPPLY) { revert RequestingTooMany(); }\r\n        if ((PRICE * amount) != msg.value) { revert InvalidValue(); }\r\n        \r\n\r\n        (bool success,) = address(OWNER).call{value: msg.value}(\"\");\r\n        if (!success) {\r\n            revert TransferFailed();\r\n        }\r\n\r\n        emit Mint(msg.sender, amount, TOTAL_SUPPLY);\r\n        \r\n        unchecked {\r\n            TOTAL_SUPPLY += amount;\r\n        }\r\n    }\r\n\r\n    function withdraw() external onlyOwner {\r\n        (bool success,) = address(OWNER).call{value: address(this).balance}(\"\");\r\n        if (!success) {\r\n            revert TransferFailed();\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSnapshotProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSupplyReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RequestingTooMany\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startID\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_PRICE\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Inscripigeons", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c09c9028370a057b53f1b28412d7d60671134b431800f63d3d326cf34e8d88de"}