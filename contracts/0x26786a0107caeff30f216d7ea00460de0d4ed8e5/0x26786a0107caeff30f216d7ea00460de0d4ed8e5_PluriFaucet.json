{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"zmain_pluriFaucet.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.22;\\r\\n\\r\\n/// @title Interface for the PluriStaking contract.\\r\\ninterface IPluriStaking {\\r\\n    /// @notice Called to trigger the auto minting of rewards in the PluriStaking contract.\\r\\n    /// @param minter Address which will receive the minted tokens.\\r\\n    /// @return True if auto minting is successful.\\r\\n    function autoMint(address minter) external returns (bool);\\r\\n}\\r\\n\\r\\n/// @title PluriFaucet\\r\\n/// @notice Manages the cooldown period for reward distribution in the Pluri token ecosystem.\\r\\ncontract PluriFaucet {\\r\\n    // Interface to interact with the PluriStaking contract.\\r\\n    IPluriStaking private pluriStaking;\\r\\n\\r\\n    // Address of the PluriStaking contract.\\r\\n    address public pluriStakingAddress;\\r\\n\\r\\n    // Mapping to track the last time an address called the autoMint function.\\r\\n    mapping(address => uint256) public lastAccessTime;\\r\\n\\r\\n    // Cooldown period for calling autoMint. Set to 1 day.\\r\\n    uint256 public constant COOLDOWN_PERIOD = 1 days;\\r\\n\\r\\n    /// @notice Constructs the PluriFaucet contract.\\r\\n    /// @param _pluriStakingAddress Address of the PluriStaking contract.\\r\\n    constructor(address _pluriStakingAddress) {\\r\\n        pluriStakingAddress = _pluriStakingAddress;\\r\\n        pluriStaking = IPluriStaking(_pluriStakingAddress);\\r\\n    }\\r\\n\\r\\n    /// @notice Allows an address to call the autoMint function, subject to a cooldown period.\\r\\n    /// @dev Ensures that each address can only trigger autoMint once every cooldown period.\\r\\n    /// @param addressToMint Address which will receive the minted tokens.\\r\\n    function callAutoMint(address addressToMint) external returns (bool) {\\r\\n        require(addressToMint != address(0), \\\"Pluri Error: Address cannot be 0\\\");\\r\\n        require(block.timestamp >= lastAccessTime[msg.sender] + COOLDOWN_PERIOD, \\\"Pluri Error: 24 Hour cooldown period not yet elapsed\\\");\\r\\n        require(pluriStaking.autoMint(addressToMint), \\\"Pluri Error: Auto minting failed\\\");\\r\\n        lastAccessTime[msg.sender] = block.timestamp;\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pluriStakingAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"COOLDOWN_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToMint\",\"type\":\"address\"}],\"name\":\"callAutoMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastAccessTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pluriStakingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "PluriFaucet", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000bf18519faeb23fc71b9671fcd0c2800d62e8b22b", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}