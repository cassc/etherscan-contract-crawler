{"SourceCode": "pragma solidity ^0.4.9;\r\n\r\n// ----------------------------------------------------------------------------------------------\r\n// The new RARE token contract\r\n//\r\n// https://github.com/bokkypoobah/RAREPeperiumToken\r\n//\r\n// Enjoy. (c) BokkyPooBah / Bok Consulting Pty Ltd 2017 for Michael C. The MIT Licence.\r\n// ----------------------------------------------------------------------------------------------\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    function Owned() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        if (msg.sender != owner) throw;\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() {\r\n        if (msg.sender == newOwner) {\r\n            OwnershipTransferred(owner, newOwner);\r\n            owner = newOwner;\r\n        }\r\n    }\r\n}\r\n\r\n\r\ncontract ERC20Token is Owned {\r\n    string public symbol;\r\n    string public name;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Balances for each account\r\n    // ------------------------------------------------------------------------\r\n    mapping (address => uint256) balances;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Owner of account approves the transfer of an amount to another account\r\n    // ------------------------------------------------------------------------\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Events\r\n    // ------------------------------------------------------------------------\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Constructor\r\n    // ------------------------------------------------------------------------\r\n    function ERC20Token(string _symbol, string _name, uint8 _decimals, uint256 _totalSupply) {\r\n        symbol = _symbol;\r\n        name = _name;\r\n        decimals = _decimals;\r\n        totalSupply = _totalSupply;\r\n        balances[msg.sender] = _totalSupply;\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Get the account balance of another account with address _owner\r\n    // ------------------------------------------------------------------------\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Transfer the balance from owner's account to another account\r\n    // ------------------------------------------------------------------------\r\n    function transfer(address _to, uint256 _amount) returns (bool success) {\r\n        if (balances[msg.sender] >= _amount             // User has balance\r\n            && _amount > 0                              // Non-zero transfer\r\n            && balances[_to] + _amount > balances[_to]  // Overflow check\r\n        ) {\r\n            balances[msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(msg.sender, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Allow _spender to withdraw from your account, multiple times, up to the\r\n    // _value amount. If this function is called again it overwrites the\r\n    // current allowance with _value.\r\n    // ------------------------------------------------------------------------\r\n    function approve(address _spender, uint256 _amount) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Spender of tokens transfer an amount of tokens from the token owner's\r\n    // balance to another account. The owner of the tokens must already\r\n    // have approve(...)-d this transfer\r\n    // ------------------------------------------------------------------------\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) returns (bool success) {\r\n        if (balances[_from] >= _amount                  // From a/c has balance\r\n            && allowed[_from][msg.sender] >= _amount    // Transfer approved\r\n            && _amount > 0                              // Non-zero transfer\r\n            && balances[_to] + _amount > balances[_to]  // Overflow check\r\n        ) {\r\n            balances[_from] -= _amount;\r\n            allowed[_from][msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(_from, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Returns the amount of tokens approved by the owner that can be\r\n    // transferred to the spender's account\r\n    // ------------------------------------------------------------------------\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Don't accept ethers\r\n    // ------------------------------------------------------------------------\r\n    function () {\r\n        throw;\r\n    }\r\n}\r\n\r\n\r\ncontract RareToken is ERC20Token {\r\n    // ------------------------------------------------------------------------\r\n    // 100,000,000 tokens that will be populated by the fill, 8 decimal places\r\n    // ------------------------------------------------------------------------\r\n    function RareToken() ERC20Token (\"RARE\", \"RARE\", 8, 0) {\r\n    }\r\n\r\n    function burnTokens(uint256 value) onlyOwner {\r\n        if (balances[owner] < value) throw;\r\n        balances[owner] -= value;\r\n        totalSupply -= value;\r\n        Transfer(owner, 0, value);\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Fill - to populate tokens from the old token contract\r\n    // ------------------------------------------------------------------------\r\n    // From https://github.com/BitySA/whetcwithdraw/tree/master/daobalance\r\n    bool public sealed;\r\n    // The compiler will warn that this constant does not match the address checksum\r\n    uint256 constant D160 = 0x010000000000000000000000000000000000000000;\r\n    // The 160 LSB is the address of the balance\r\n    // The 96 MSB is the balance of that address.\r\n    function fill(uint256[] data) onlyOwner {\r\n        if (sealed) throw;\r\n        for (uint256 i = 0; i < data.length; i++) {\r\n            address account = address(data[i] & (D160-1));\r\n            uint256 amount = data[i] / D160;\r\n            // Prevent duplicates\r\n            if (balances[account] == 0) {\r\n                balances[account] = amount;\r\n                totalSupply += amount;\r\n                Transfer(0x0, account, amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // After sealing, no more filling is possible\r\n    // ------------------------------------------------------------------------\r\n    function seal() onlyOwner {\r\n        if (sealed) throw;\r\n        sealed = true;\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"seal\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data\",\"type\":\"uint256[]\"}],\"name\":\"fill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sealed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":false,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]", "ContractName": "RareToken", "CompilerVersion": "v0.4.11+commit.68ef5810", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://c45ef2478142f2f1ed956ae9aae5ebcbd87e38a80f348f9483e2076642c4d9fb"}