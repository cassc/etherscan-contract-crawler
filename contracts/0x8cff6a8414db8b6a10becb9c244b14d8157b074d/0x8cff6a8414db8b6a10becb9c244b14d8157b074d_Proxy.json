{"SourceCode": "// Copyright (C) 2018  Argent Labs Ltd. <https://argent.xyz>\r\n\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity ^0.8.3;\r\n\r\n/**\r\n * @title Proxy\r\n * @notice Basic proxy that delegates all calls to a fixed implementing contract.\r\n * The implementing contract cannot be upgraded.\r\n * @author Julien Niset - <julien@argent.xyz>\r\n */\r\ncontract Proxy {\r\n\r\n    address immutable public implementation;\r\n\r\n    event Received(uint indexed value, address indexed sender, bytes data);\r\n\r\n    constructor(address _implementation) {\r\n        implementation = _implementation;\r\n    }\r\n\r\n    fallback() external payable {\r\n        address target = implementation;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            calldatacopy(0, 0, calldatasize())\r\n            let result := delegatecall(gas(), target, 0, calldatasize(), 0, 0)\r\n            returndatacopy(0, 0, returndatasize())\r\n            switch result\r\n            case 0 {revert(0, returndatasize())}\r\n            default {return (0, returndatasize())}\r\n        }\r\n    }\r\n\r\n    receive() external payable {\r\n        emit Received(msg.value, msg.sender, \"\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Received\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Proxy", "CompilerVersion": "v0.8.3+commit.8d00100c", "OptimizationUsed": "1", "Runs": "999", "ConstructorArguments": "000000000000000000000000Ab00eA153c43575184ff11Dd5e713c96bE005573", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://b88a14f52e9d465328c9b3ab476e4b7fa40ed3615fd5409a6afc9885366e03a9"}