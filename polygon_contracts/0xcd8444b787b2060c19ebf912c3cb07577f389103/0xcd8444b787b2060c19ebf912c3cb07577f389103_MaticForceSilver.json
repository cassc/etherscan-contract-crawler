{"SourceCode": "pragma solidity  ^0.5.12;\r\n\r\ncontract MaticForceSilver {\r\n  address public creator;\r\n  uint MAX_LEVEL = 9;\r\n  uint REFERRALS_LIMIT = 2;\r\n  uint LEVEL_EXPIRE_TIME = 3650 days;\r\n  mapping (address => User) public users;\r\n  mapping (uint => address) public userAddresses;\r\n  uint public last_uid;\r\n  mapping (uint => uint) public levelPrice;\r\n  mapping (uint => uint) public uplinesToRcvEth;\r\n  mapping (address => ProfitsRcvd) public rcvdProfits;\r\n  mapping (address => ProfitsGiven) public givenProfits;\r\n  mapping (address => LostProfits) public lostProfits;\r\n  \r\n  struct User {\r\n    uint id;\r\n    uint referrerID;\r\n    address[] referrals;\r\n    mapping (uint => uint) levelExpiresAt;\r\n  }\r\n  \r\n  struct ProfitsRcvd {\r\n    uint uid;\r\n    uint[] fromId;\r\n    address[] fromAddr;\r\n    uint[] amount;\r\n  }\r\n  \r\n  struct LostProfits {\r\n    uint uid;\r\n    uint[] toId;\r\n    address[] toAddr;\r\n    uint[] amount;\r\n    uint[] level;\r\n  }\r\n  \r\n  struct ProfitsGiven {\r\n    uint uid;\r\n    uint[] toId;\r\n    address[] toAddr;\r\n    uint[] amount;\r\n    uint[] level;\r\n    uint[] line;\r\n  }\r\n\r\n  modifier validLevelAmount(uint _level) {\r\n    require(msg.value == levelPrice[_level], 'Invalid level amount sent');\r\n    _;\r\n  }\r\n  modifier userRegistered() {\r\n    require(users[msg.sender].id != 0, 'User does not exist');\r\n    _;\r\n  }\r\n  modifier validReferrerID(uint _referrerID) {\r\n    require(_referrerID > 0 && _referrerID <= last_uid, 'Invalid referrer ID');\r\n    _;\r\n  }\r\n  modifier userNotRegistered() {\r\n    require(users[msg.sender].id == 0, 'User is already registered');\r\n    _;\r\n  }\r\n  modifier validLevel(uint _level) {\r\n    require(_level > 0 && _level <= MAX_LEVEL, 'Invalid level entered');\r\n    _;\r\n  }\r\n  event RegisterUserEvent(address indexed user, address indexed referrer, uint time);\r\n  event BuyLevelEvent(address indexed user, uint indexed level, uint time);\r\n  event GetLevelProfitEvent(address indexed user, address indexed referral, uint indexed level, uint time);\r\n  event LostLevelProfitEvent(address indexed user, address indexed referral, uint indexed level, uint time);\r\n\r\n  constructor() public {\r\n    last_uid++;\r\n    creator = msg.sender;\r\n    levelPrice[1] =5 ether;\r\n    levelPrice[2] =5 ether;\r\n    levelPrice[3] =5 ether;\r\n    levelPrice[4] =5 ether;\r\n    levelPrice[5] =5 ether;\r\n    levelPrice[6] =5 ether;\r\n    levelPrice[7] =5 ether;\r\n    levelPrice[8] =5 ether;\r\n    levelPrice[9] =5 ether;\r\n    uplinesToRcvEth[1] = 1;\r\n    uplinesToRcvEth[2] = 2;\r\n    uplinesToRcvEth[3] = 10;\r\n    uplinesToRcvEth[4] = 1;\r\n    uplinesToRcvEth[5] = 2;\r\n    uplinesToRcvEth[6] = 10;\r\n    uplinesToRcvEth[7] = 1;\r\n    uplinesToRcvEth[8] = 2;\r\n    uplinesToRcvEth[9] = 10;\r\n \r\n   \r\n\r\n    users[creator] = User({\r\n      id: last_uid,\r\n      referrerID: 0,\r\n      referrals: new address[](0)\r\n    });\r\n    userAddresses[last_uid] = creator;\r\n    // enter all levels expiry for creator\r\n    for (uint i = 1; i <= MAX_LEVEL; i++) {\r\n      users[creator].levelExpiresAt[i] = 1 << 37;\r\n    }\r\n  }\r\n\r\n\r\n  function registerUser(uint _referrerID)\r\n    public\r\n    payable\r\n    userNotRegistered()\r\n    validReferrerID(_referrerID)\r\n    validLevelAmount(1)\r\n  {\r\n    if (users[userAddresses[_referrerID]].referrals.length >= REFERRALS_LIMIT) {\r\n      _referrerID = users[findReferrer(userAddresses[_referrerID])].id;\r\n    }\r\n    last_uid++;\r\n    users[msg.sender] = User({\r\n      id: last_uid,\r\n      referrerID: _referrerID,\r\n      referrals: new address[](0)\r\n    });\r\n    userAddresses[last_uid] = msg.sender;\r\n    users[msg.sender].levelExpiresAt[1] = now + LEVEL_EXPIRE_TIME;\r\n    users[userAddresses[_referrerID]].referrals.push(msg.sender);\r\n\r\n    transferLevelPayment(1, msg.sender);\r\n    emit RegisterUserEvent(msg.sender, userAddresses[_referrerID], now);\r\n  }\r\n\r\n  function buyLevel(uint _level)\r\n    public\r\n    payable\r\n    userRegistered()\r\n    validLevel(_level)\r\n    validLevelAmount(_level)\r\n  {\r\n    for (uint l = _level - 1; l > 0; l--) {\r\n      require(getUserLevelExpiresAt(msg.sender, l) >= now, 'Buy previous level first');\r\n    }\r\n    if (getUserLevelExpiresAt(msg.sender, _level) == 0) {\r\n      users[msg.sender].levelExpiresAt[_level] = now + LEVEL_EXPIRE_TIME;\r\n    } else {\r\n      users[msg.sender].levelExpiresAt[_level] += LEVEL_EXPIRE_TIME;\r\n    }\r\n\r\n    transferLevelPayment(_level, msg.sender);\r\n    emit BuyLevelEvent(msg.sender, _level, now);\r\n  }\r\n\r\n  function findReferrer(address _user)\r\n    public\r\n    view\r\n    returns (address)\r\n  {\r\n    if (users[_user].referrals.length < REFERRALS_LIMIT) {\r\n      return _user;\r\n    }\r\n\r\n    address[1632] memory referrals;\r\n    referrals[0] = users[_user].referrals[0];\r\n    referrals[1] = users[_user].referrals[1];\r\n\r\n    address referrer;\r\n\r\n    for (uint i = 0; i < 16382; i++) {\r\n      if (users[referrals[i]].referrals.length < REFERRALS_LIMIT) {\r\n        referrer = referrals[i];\r\n        break;\r\n      }\r\n\r\n      if (i >= 8191) {\r\n        continue;\r\n      }\r\n\r\n      referrals[(i+1)*2] = users[referrals[i]].referrals[0];\r\n      referrals[(i+1)*2+1] = users[referrals[i]].referrals[1];\r\n    }\r\n\r\n    require(referrer != address(0), 'Referrer not found');\r\n    return referrer;\r\n  }\r\n\r\n  function transferLevelPayment(uint _level, address _user) internal {\r\n    uint height = _level;\r\n    address referrer = getUserUpline(_user, height);\r\n\r\n    if (referrer == address(0)) { referrer = creator; }\r\n   \r\n    uint uplines = uplinesToRcvEth[_level];\r\n    bool chkLostProfit = false;\r\n    address lostAddr;\r\n    for (uint i = 1; i <= uplines; i++) {\r\n      referrer = getUserUpline(_user, i);\r\n      \r\n      if(chkLostProfit){\r\n        lostProfits[lostAddr].uid = users[referrer].id;\r\n        lostProfits[lostAddr].toId.push(users[referrer].id);\r\n        lostProfits[lostAddr].toAddr.push(referrer);\r\n        lostProfits[lostAddr].amount.push(levelPrice[_level] / uplinesToRcvEth[_level]);\r\n        lostProfits[lostAddr].level.push(getUserLevel(referrer));\r\n        chkLostProfit = false;\r\n        \r\n        emit LostLevelProfitEvent(referrer, msg.sender, _level, 0);\r\n      }\r\n      \r\n      if (referrer != address(0) && (users[_user].levelExpiresAt[_level] == 0 || getUserLevelExpiresAt(referrer, _level) < now)) {\r\n        chkLostProfit = true;\r\n        uplines++;\r\n        lostAddr = referrer;\r\n        continue;\r\n      }\r\n      else {chkLostProfit = false;}\r\n      \r\n      //add msg.value / uplinesToRcvEth[_level] in user's earned\r\n      \r\n      if (referrer == address(0)) { referrer = creator; }\r\n      if (address(uint160(referrer)).send( msg.value / uplinesToRcvEth[_level] )) {\r\n        rcvdProfits[referrer].uid = users[referrer].id;\r\n        rcvdProfits[referrer].fromId.push(users[msg.sender].id);\r\n        rcvdProfits[referrer].fromAddr.push(msg.sender);\r\n        rcvdProfits[referrer].amount.push(levelPrice[_level] / uplinesToRcvEth[_level]);\r\n        \r\n        givenProfits[msg.sender].uid = users[msg.sender].id;\r\n        givenProfits[msg.sender].toId.push(users[referrer].id);\r\n        givenProfits[msg.sender].toAddr.push(referrer);\r\n        givenProfits[msg.sender].amount.push(levelPrice[_level] / uplinesToRcvEth[_level]);\r\n        givenProfits[msg.sender].level.push(getUserLevel(referrer));\r\n        givenProfits[msg.sender].line.push(i);\r\n        \r\n        emit GetLevelProfitEvent(referrer, msg.sender, _level, now);\r\n      }\r\n    }\r\n  }\r\n\r\n  function getUserUpline(address _user, uint height)\r\n    public\r\n    view\r\n    returns (address)\r\n  {\r\n    if (height <= 0 || _user == address(0)) {\r\n      return _user;\r\n    }\r\n\r\n    return this.getUserUpline(userAddresses[users[_user].referrerID], height - 1);\r\n  }\r\n\r\n  function getUserReferrals(address _user)\r\n    public\r\n    view\r\n    returns (address[] memory)\r\n  {\r\n    return users[_user].referrals;\r\n  }\r\n  \r\n  \r\n  function getUserProfitsFromId(address _user)\r\n    public\r\n    view\r\n    returns (uint[] memory)\r\n  {\r\n      return rcvdProfits[_user].fromId;\r\n  }\r\n  \r\n  function getUserProfitsFromAddr(address _user)\r\n    public\r\n    view\r\n    returns (address[] memory)\r\n  {\r\n      return rcvdProfits[_user].fromAddr;\r\n  }\r\n  \r\n  function getUserProfitsAmount(address _user)\r\n    public\r\n    view\r\n    returns (uint256[] memory)\r\n  {\r\n      return rcvdProfits[_user].amount;\r\n  }\r\n  \r\n  \r\n  \r\n  function getUserProfitsGivenToId(address _user)\r\n    public\r\n    view\r\n    returns (uint[] memory)\r\n  {\r\n      return givenProfits[_user].toId;\r\n  }\r\n  \r\n  function getUserProfitsGivenToAddr(address _user)\r\n    public\r\n    view\r\n    returns (address[] memory)\r\n  {\r\n      return givenProfits[_user].toAddr;\r\n  }\r\n  \r\n  function getUserProfitsGivenToAmount(address _user)\r\n    public\r\n    view\r\n    returns (uint[] memory)\r\n  {\r\n      return givenProfits[_user].amount;\r\n  }\r\n  \r\n  function getUserProfitsGivenToLevel(address _user)\r\n    public\r\n    view\r\n    returns (uint[] memory)\r\n  {\r\n      return givenProfits[_user].level;\r\n  }\r\n  \r\n  function getUserProfitsGivenToLine(address _user)\r\n    public\r\n    view\r\n    returns (uint[] memory)\r\n  {\r\n      return givenProfits[_user].line;\r\n  }\r\n  \r\n  \r\n  function getUserLostsToId(address _user)\r\n    public\r\n    view\r\n    returns (uint[] memory)\r\n  {\r\n    return (lostProfits[_user].toId);\r\n  }\r\n  \r\n  function getUserLostsToAddr(address _user)\r\n    public\r\n    view\r\n    returns (address[] memory)\r\n  {\r\n    return (lostProfits[_user].toAddr);\r\n  }\r\n  \r\n  function getUserLostsAmount(address _user)\r\n    public\r\n    view\r\n    returns (uint[] memory)\r\n  {\r\n    return (lostProfits[_user].amount);\r\n  }\r\n  \r\n  function getUserLostsLevel(address _user)\r\n    public\r\n    view\r\n    returns (uint[] memory)\r\n  {\r\n    return (lostProfits[_user].level);\r\n  }\r\n  \r\n\r\n  function getUserLevelExpiresAt(address _user, uint _level)\r\n    public\r\n    view\r\n    returns (uint)\r\n  {\r\n    return users[_user].levelExpiresAt[_level];\r\n  }\r\n\r\n  \r\n\r\n  function () external payable {\r\n    revert();\r\n  }\r\n  \r\n  \r\n  function getUserLevel (address _user) public view returns (uint) {\r\n      if (getUserLevelExpiresAt(_user, 1) < now) {\r\n          return (0);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 2) < now) {\r\n          return (1);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 3) < now) {\r\n          return (2);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 4) < now) {\r\n          return (3);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 5) < now) {\r\n          return (4);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 6) < now) {\r\n          return (5);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 7) < now) {\r\n          return (6);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 8) < now) {\r\n          return (7);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 9) < now) {\r\n          return (8);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 10) < now) {\r\n          return (9);\r\n      }\r\n  }\r\n  \r\n  function getUserDetails (address _user) public view returns (uint, uint) {\r\n      if (getUserLevelExpiresAt(_user, 1) < now) {\r\n          return (1, users[_user].id);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 2) < now) {\r\n          return (2, users[_user].id);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 3) < now) {\r\n          return (3, users[_user].id);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 4) < now) {\r\n          return (4, users[_user].id);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 5) < now) {\r\n          return (5, users[_user].id);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 6) < now) {\r\n          return (6, users[_user].id);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 7) < now) {\r\n          return (7, users[_user].id);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 8) < now) {\r\n          return (8, users[_user].id);\r\n      }\r\n      else if (getUserLevelExpiresAt(_user, 9) < now) {\r\n          return (9, users[_user].id);\r\n      }\r\n  }\r\n      }", "ABI": "[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"BuyLevelEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"GetLevelProfitEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"LostLevelProfitEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"RegisterUserEvent\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"buyLevel\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"findReferrer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"getUserLevelExpiresAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLostsAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLostsLevel\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLostsToAddr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLostsToId\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsFromAddr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsFromId\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsGivenToAddr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsGivenToAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsGivenToId\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsGivenToLevel\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsGivenToLine\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserReferrals\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"name\":\"getUserUpline\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"givenProfits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last_uid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levelPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lostProfits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rcvdProfits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_referrerID\",\"type\":\"uint256\"}],\"name\":\"registerUser\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uplinesToRcvEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referrerID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MaticForceSilver", "CompilerVersion": "v0.5.12+commit.7709ece9", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://f1594100c4fb81a1e0c4f4093d8633c9223b989e1de16436af6a86296864df90"}