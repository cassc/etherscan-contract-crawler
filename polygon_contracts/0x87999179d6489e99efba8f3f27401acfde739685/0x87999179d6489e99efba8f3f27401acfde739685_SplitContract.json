{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract SplitContract {\r\n    address public wallet1;\r\n    address public wallet2;\r\n    uint256 public percentage1;\r\n    uint256 public percentage2;\r\n\r\n    modifier onlyAuthorized() {\r\n        require(msg.sender == wallet1 || msg.sender == wallet2, \"Only authorized wallets can call this function\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _wallet1, address _wallet2, uint256 _percentage1, uint256 _percentage2) {\r\n        require(_percentage1 + _percentage2 == 100, \"Percentages must add up to 100\");\r\n        wallet1 = _wallet1;\r\n        wallet2 = _wallet2;\r\n        percentage1 = _percentage1;\r\n        percentage2 = _percentage2;\r\n    }\r\n\r\n    function distribute() external onlyAuthorized {\r\n        uint256 balance = address(this).balance;\r\n        require(balance > 0, \"No balance to distribute\");\r\n\r\n        uint256 amount1 = (balance * percentage1) / 100;\r\n        uint256 amount2 = balance - amount1;\r\n\r\n        (bool success1, ) = payable(wallet1).call{value: amount1}(\"\");\r\n        require(success1, \"Transfer to wallet1 failed\");\r\n\r\n        (bool success2, ) = payable(wallet2).call{value: amount2}(\"\");\r\n        require(success2, \"Transfer to wallet2 failed\");\r\n    }\r\n\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wallet2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_percentage1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_percentage2\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentage1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentage2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "SplitContract", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000001fffb66a62c0457c699d2a284c3296063e6a5e7400000000000000000000000029b48b2359c514d9cee9fe966cb342864e083385000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000005a", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://5b4e0f96140172c1e49a40f8223fc02c116a192da89322e1fab624bceaf52ac1"}