{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IImplementationAuthority {\r\n    function getImplementation() external view returns (address);\r\n}\r\n\r\ncontract TokenProxy {\r\n    address public implementationAuthority;\r\n\r\n    constructor(\r\n        address _implementationAuthority,\r\n        address _identityRegistry,\r\n        address _compliance,\r\n        string memory _name,\r\n        string memory _symbol,\r\n        uint8 _decimals,\r\n        address _onchainID\r\n    ) {\r\n        implementationAuthority = _implementationAuthority;\r\n\r\n        address logic = IImplementationAuthority(implementationAuthority).getImplementation();\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, ) =\r\n            logic.delegatecall(\r\n                abi.encodeWithSignature(\r\n                    'init(address,address,string,string,uint8,address)',\r\n                    _identityRegistry,\r\n                    _compliance,\r\n                    _name,\r\n                    _symbol,\r\n                    _decimals,\r\n                    _onchainID\r\n                )\r\n            );\r\n        require(success, 'Initialization failed.');\r\n    }\r\n\r\n    fallback() external payable {\r\n        address logic = IImplementationAuthority(implementationAuthority).getImplementation();\r\n\r\n        assembly {\r\n            // solium-disable-line\r\n            calldatacopy(0x0, 0x0, calldatasize())\r\n            let success := delegatecall(sub(gas(), 10000), logic, 0x0, calldatasize(), 0, 0)\r\n            let retSz := returndatasize()\r\n            returndatacopy(0, 0, retSz)\r\n            switch success\r\n                case 0 {\r\n                    revert(0, retSz)\r\n                }\r\n                default {\r\n                    return(0, retSz)\r\n                }\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementationAuthority\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementationAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "TokenProxy", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000006e72090fd9a0ec389945955b26144924950ce407000000000000000000000000dab7938fafdce9a7050b4521f40d9713d7cd4d7b000000000000000000000000ecfc1a174aad1c859e737af0d6ba31d946da817b00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000006000000000000000000000000fe1bd11cd131c02f31a8b213651a8358fa1ab7a80000000000000000000000000000000000000000000000000000000000000006454e45475241000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034547580000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "1", "Implementation": "0x57f76ae68d35a29580f05948e937b93acda25109", "SwarmSource": "ipfs://368fa0b7b195beecf9ad278ea9630c30fc9e154851afd3564b4549da4d038fd0"}