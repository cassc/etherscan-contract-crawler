{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract Club125DistributionType2 {\r\n    address public owner;\r\n    address public tokenAddress;\r\n    address public offsetWallet;\r\n    address public deductionWallet;\r\n\r\n    event TokensDistributed(\r\n        address[] to,\r\n        uint256[] amounts,\r\n        uint256 date,\r\n        bool deduction,\r\n        uint256 minAmount,\r\n        uint256 distributionType\r\n    );\r\n\r\n    event OwnerChanged(address indexed newOwner);\r\n    event TokenAddressChanged(address indexed newTokenAddress);\r\n    event OffsetWalletChanged(address indexed newOffsetWallet);\r\n    event DeductionWalletChanged(address indexed newDeductionWallet);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _tokenAddress, address _offsetWallet, address _deductionWallet) {\r\n        owner = msg.sender;\r\n        tokenAddress = _tokenAddress;\r\n        offsetWallet = _offsetWallet;\r\n        deductionWallet = _deductionWallet;\r\n    }\r\n\r\n    function distributeTokens(\r\n        address[] memory wallets,\r\n        uint256[] memory amounts,\r\n        uint256 minAmount,\r\n        bool deduction,\r\n        uint256 distributionType\r\n    ) public onlyOwner {\r\n        require(wallets.length == amounts.length, \"Wallet and amount array length must be the same\");\r\n\r\n        IERC20 token = IERC20(tokenAddress);\r\n        uint256 contractBalance = token.balanceOf(address(this));\r\n\r\n        for (uint i = 0; i < wallets.length; i++) {\r\n            uint256 amount = amounts[i];\r\n\r\n            require(contractBalance >= amount, \"Insufficient contract balance\");\r\n\r\n\r\n            if (deduction) {\r\n                if (amount < minAmount) {\r\n                    require(token.transfer(offsetWallet, amount), \"Transfer to offset wallet failed\");\r\n                    contractBalance -= amount;\r\n                    continue;\r\n                }else{\r\n                    uint256 deductionAmount = amount / 10;\r\n                    amount = amount - deductionAmount;\r\n                    require(token.transfer(deductionWallet, deductionAmount), \"Transfer to deduction wallet failed\");\r\n                    contractBalance -= deductionAmount;\r\n                }\r\n            }\r\n\r\n            require(token.transfer(wallets[i], amount), \"Transfer to wallet failed\");\r\n            contractBalance -= amount;\r\n        }\r\n\r\n        emit TokensDistributed(wallets, amounts, block.timestamp, deduction, minAmount, distributionType);\r\n    }\r\n\r\n    function withdrawTokens(uint256 amount) public onlyOwner {\r\n        IERC20 token = IERC20(tokenAddress);\r\n        require(token.transfer(owner, amount), \"Withdrawal failed\");\r\n    }\r\n\r\n    function changeOwner(address newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n        emit OwnerChanged(newOwner);\r\n    }\r\n\r\n    function changeTokenAddress(address newTokenAddress) public onlyOwner {\r\n        tokenAddress = newTokenAddress;\r\n        emit TokenAddressChanged(newTokenAddress);\r\n    }\r\n\r\n    function changeOffsetWallet(address newOffsetWallet) public onlyOwner {\r\n        offsetWallet = newOffsetWallet;\r\n        emit OffsetWalletChanged(newOffsetWallet);\r\n    }\r\n\r\n    function changeDeductionWallet(address newDeductionWallet) public onlyOwner {\r\n        deductionWallet = newDeductionWallet;\r\n        emit DeductionWalletChanged(newDeductionWallet);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_offsetWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_deductionWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDeductionWallet\",\"type\":\"address\"}],\"name\":\"DeductionWalletChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOffsetWallet\",\"type\":\"address\"}],\"name\":\"OffsetWalletChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTokenAddress\",\"type\":\"address\"}],\"name\":\"TokenAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"deduction\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"distributionType\",\"type\":\"uint256\"}],\"name\":\"TokensDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDeductionWallet\",\"type\":\"address\"}],\"name\":\"changeDeductionWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOffsetWallet\",\"type\":\"address\"}],\"name\":\"changeOffsetWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTokenAddress\",\"type\":\"address\"}],\"name\":\"changeTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deductionWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deduction\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"distributionType\",\"type\":\"uint256\"}],\"name\":\"distributeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offsetWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Club125DistributionType2", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000bc2659ead8d2d13a157a75bfc5acc156e1ea06df0000000000000000000000003f7aa54d2f9ef9018a77d57204c34e8e8e29da46000000000000000000000000573368139efc09f2efca0fc8b6932167886813d2", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://5fbcf22e85bcfebb0529b06f635d4e7e11fa39f73493cc795392a96256175d8c"}