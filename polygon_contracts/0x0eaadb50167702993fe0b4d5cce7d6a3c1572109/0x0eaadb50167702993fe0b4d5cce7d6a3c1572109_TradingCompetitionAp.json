{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/tradingcomp/TradingCompetitionApplication.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.7.0 <0.9.0;\\n\\ncontract TradingCompetitionApplication {\\n  address public admin;\\n  mapping(address => bool) public applicants; // not a struct to support guild custom query capabilities\\n  mapping(address => string) public referrer;\\n\\n  modifier onlyAdmin() {\\n    require(msg.sender == admin, \\\"not admin\\\");\\n    _;\\n  }\\n\\n  constructor() {\\n    admin = msg.sender;\\n  }\\n\\n  /**\\n   * @dev applyToTrade set application for address to referrer\\n   * @dev referrer - the referrer that brought the candidate to the games\\n   */\\n  function applyToTrade(string memory referrerParam) external {\\n    applicants[msg.sender] = true;\\n    referrer[msg.sender] = referrerParam;\\n  }\\n\\n  /**\\n   * @dev applyToTradeMultiForRefferer set applications for address true\\n   * @dev manualApplicants list of applicants to manually add\\n   * @dev referrer - single referrer to platform\\n   */\\n  function applyToTradeMultiForRefferer(address[] calldata manualApplicants, string memory referrerParam) external onlyAdmin {\\n    for (uint256 i = 0; i < manualApplicants.length; i++) {\\n      applicants[manualApplicants[i]] = true;\\n      referrer[manualApplicants[i]] = referrerParam;\\n    }\\n  }\\n\\n  /**\\n   * @dev set admin set application for address true\\n   * @dev newAdmin\\n   */\\n  function setAdmin(address newAdmin) external onlyAdmin {\\n    admin = newAdmin;\\n  }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\r\n      \"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\r\n      \"@prb/math/contracts/=lib/prb-math/contracts/\",\r\n      \"ds-test/=lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\r\n      \"openzeppelin-contracts/=lib/openzeppelin-contracts/\",\r\n      \"prb-math/=lib/prb-math/contracts/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"applicants\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"referrerParam\",\"type\":\"string\"}],\"name\":\"applyToTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"manualApplicants\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"referrerParam\",\"type\":\"string\"}],\"name\":\"applyToTradeMultiForRefferer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrer\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TradingCompetitionApplication", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}