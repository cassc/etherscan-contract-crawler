{"SourceCode": "// File: contracts\\interfaces\\TokenInterfaceV5.sol\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.7;\r\n\r\ninterface TokenInterfaceV5{\r\n    function burn(address, uint256) external;\r\n    function mint(address, uint256) external;\r\n    function transfer(address, uint256) external returns (bool);\r\n    function transferFrom(address, address, uint256) external returns(bool);\r\n    function balanceOf(address) external view returns(uint256);\r\n    function hasRole(bytes32, address) external view returns (bool);\r\n    function approve(address, uint256) external returns (bool);\r\n    function allowance(address, address) external view returns (uint256);\r\n}\r\n\r\n// File: contracts\\interfaces\\AggregatorInterfaceV5.sol\r\n\r\npragma solidity 0.8.7;\r\n\r\ninterface AggregatorInterfaceV5{\r\n    enum OrderType { MARKET_OPEN, MARKET_CLOSE, LIMIT_OPEN, LIMIT_CLOSE }\r\n    function getPrice(uint,OrderType,uint) external returns(uint);\r\n    function tokenPriceDai() external view returns(uint);\r\n    function pairMinOpenLimitSlippageP(uint) external view returns(uint);\r\n    function closeFeeP(uint) external view returns(uint);\r\n    function linkFee(uint,uint) external view returns(uint);\r\n    function openFeeP(uint) external view returns(uint);\r\n    function pairMinLeverage(uint) external view returns(uint);\r\n    function pairMaxLeverage(uint) external view returns(uint);\r\n    function pairsCount() external view returns(uint);\r\n    function tokenDaiReservesLp() external view returns(uint, uint);\r\n    function referralP(uint) external view returns(uint);\r\n    function nftLimitOrderFeeP(uint) external view returns(uint);\r\n}\r\n\r\n// File: contracts\\interfaces\\PoolInterfaceV5.sol\r\n\r\npragma solidity 0.8.7;\r\n\r\ninterface PoolInterfaceV5{\r\n    function increaseAccTokensPerLp(uint) external;\r\n}\r\n\r\n// File: contracts\\interfaces\\NftInterfaceV5.sol\r\n\r\npragma solidity 0.8.7;\r\n\r\ninterface NftInterfaceV5{\r\n    function balanceOf(address) external view returns (uint);\r\n    function ownerOf(uint) external view returns (address);\r\n    function transferFrom(address, address, uint) external;\r\n    function tokenOfOwnerByIndex(address, uint) external view returns(uint);\r\n}\r\n\r\n// File: contracts\\interfaces\\PausableInterfaceV5.sol\r\n\r\npragma solidity 0.8.7;\r\n\r\ninterface PausableInterfaceV5{\r\n    function isPaused() external view returns (bool);\r\n}\r\n\r\n// File: contracts\\GFarmTradingStorageV5.sol\r\n\r\n\r\n\r\n\r\n\r\n\r\npragma solidity 0.8.7;\r\n\r\ncontract GFarmTradingStorageV5 {\r\n\r\n    // Constants\r\n    uint public constant PRECISION = 1e10;\r\n    bytes32 public constant MINTER_ROLE = 0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6;\r\n    TokenInterfaceV5 public constant dai = TokenInterfaceV5(0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063);\r\n    TokenInterfaceV5 public constant linkErc677 = TokenInterfaceV5(0xb0897686c545045aFc77CF20eC7A532E3120E0F1);\r\n\r\n    // Contracts (updatable)\r\n    AggregatorInterfaceV5 public priceAggregator;\r\n    PoolInterfaceV5 public pool;\r\n    PausableInterfaceV5 public trading;\r\n    PausableInterfaceV5 public callbacks;\r\n    TokenInterfaceV5 public token = TokenInterfaceV5(0x7075cAB6bCCA06613e2d071bd918D1a0241379E2);\r\n    NftInterfaceV5[5] public nfts = [\r\n        NftInterfaceV5(0xF9A4c522E327935BD1F5a338c121E14e4cc1f898),\r\n        NftInterfaceV5(0x77cd42B925e1A82f41d852D6BE727CFc88fddBbC),\r\n        NftInterfaceV5(0x3378AD81D09DE23725Ee9B9270635c97Ed601921),\r\n        NftInterfaceV5(0x02e2c5825C1a3b69C0417706DbE1327C2Af3e6C2),\r\n        NftInterfaceV5(0x2D266A94469d05C9e06D52A4D0d9C23b157767c2)\r\n    ];\r\n    address public vault;\r\n    address public tokenDaiRouter;\r\n\r\n    // Trading variables\r\n    uint public maxTradesPerPair = 3;\r\n    uint public maxTradesPerBlock = 5;\r\n    uint public maxPendingMarketOrders = 5;\r\n    uint public maxGainP = 900;                          // %\r\n    uint public maxSlP = 80;                             // %\r\n    uint public defaultLeverageUnlocked = 50;            // x\r\n    uint public nftSuccessTimelock = 50;                 // 50 blocks\r\n    uint[5] public spreadReductionsP = [15,20,25,30,35]; // %\r\n\r\n    // Gov & dev addresses (updatable)\r\n    address public gov = 0xC66FbE50Dd33c9AAdd65707F7088D597C86fE00F;\r\n    address public dev = 0xd39A38bD2D2d552f3908ff698a5530aa397fb92d;\r\n\r\n    // Gov & dev fees\r\n    uint public devFeesToken;   // 1e18\r\n    uint public devFeesDai;     // 1e18\r\n    uint public govFeesToken;   // 1e18\r\n    uint public govFeesDai;     // 1e18\r\n\r\n    // Stats\r\n    uint public tokensBurned;   // 1e18\r\n    uint public tokensMinted;   // 1e18\r\n    uint public nftRewards;     // 1e18\r\n\r\n    // Enums\r\n    enum LimitOrder { TP, SL, LIQ, OPEN }\r\n\r\n    // Structs\r\n    struct Trader{\r\n        uint leverageUnlocked;\r\n        address referral;\r\n        uint referralRewardsTotal;  // 1e18\r\n    }\r\n    struct Trade{\r\n        address trader;\r\n        uint pairIndex;\r\n        uint index;\r\n        uint initialPosToken;       // 1e18\r\n        uint positionSizeDai;       // 1e18\r\n        uint openPrice;             // PRECISION\r\n        bool buy;\r\n        uint leverage;\r\n        uint tp;                    // PRECISION\r\n        uint sl;                    // PRECISION\r\n    }\r\n    struct TradeInfo{\r\n        uint tokenId;\r\n        uint tokenPriceDai;         // PRECISION\r\n        uint openInterestDai;       // 1e18\r\n        uint tpLastUpdated;\r\n        uint slLastUpdated;\r\n        bool beingMarketClosed;\r\n    }\r\n    struct OpenLimitOrder{\r\n        address trader;\r\n        uint pairIndex;\r\n        uint index;\r\n        uint positionSize;          // 1e18 (DAI or GFARM2)\r\n        uint spreadReductionP;\r\n        bool buy;\r\n        uint leverage;\r\n        uint tp;                    // PRECISION (%)\r\n        uint sl;                    // PRECISION (%)\r\n        uint minPrice;              // PRECISION\r\n        uint maxPrice;              // PRECISION\r\n        uint block;\r\n        uint tokenId;               // index in supportedTokens\r\n    }\r\n    struct PendingMarketOrder{\r\n        Trade trade;\r\n        uint block;\r\n        uint wantedPrice;           // PRECISION\r\n        uint slippageP;             // PRECISION (%)\r\n        uint spreadReductionP;\r\n        uint tokenId;               // index in supportedTokens\r\n    }\r\n    struct PendingNftOrder{\r\n        address nftHolder;\r\n        uint nftId;\r\n        address trader;\r\n        uint pairIndex;\r\n        uint index;\r\n        LimitOrder orderType;\r\n    }\r\n\r\n    // Supported tokens to open trades with\r\n    address[] public supportedTokens;\r\n\r\n    // User info mapping\r\n    mapping(address => Trader) public traders;\r\n\r\n    // Trades mappings\r\n    mapping(address => mapping(uint => mapping(uint => Trade))) public openTrades;\r\n    mapping(address => mapping(uint => mapping(uint => TradeInfo))) public openTradesInfo;\r\n    mapping(address => mapping(uint => uint)) public openTradesCount;\r\n\r\n    // Limit orders mappings\r\n    mapping(address => mapping(uint => mapping(uint => uint))) public openLimitOrderIds;\r\n    mapping(address => mapping(uint => uint)) public openLimitOrdersCount;\r\n    OpenLimitOrder[] public openLimitOrders;\r\n\r\n    // Pending orders mappings\r\n    mapping(uint => PendingMarketOrder) public reqID_pendingMarketOrder;\r\n    mapping(uint => PendingNftOrder) public reqID_pendingNftOrder;\r\n    mapping(address => uint[]) public pendingOrderIds;\r\n    mapping(address => mapping(uint => uint)) public pendingMarketOpenCount;\r\n    mapping(address => mapping(uint => uint)) public pendingMarketCloseCount;\r\n\r\n    // List of open trades & limit orders\r\n    mapping(uint => address[]) public pairTraders;\r\n    mapping(address => mapping(uint => uint)) public pairTradersId;\r\n\r\n    // Current and max open interests for each pair\r\n    mapping(uint => uint[3]) public openInterestDai; // 1e18 [long,short,max]\r\n\r\n    // Restrictions & Timelocks\r\n    mapping(uint => uint) public tradesPerBlock;\r\n    mapping(uint => uint) public nftLastSuccess;\r\n\r\n    // List of allowed contracts => can update storage + mint/burn tokens\r\n    mapping(address => bool) public isTradingContract;\r\n\r\n    // Events\r\n    event SupportedTokenAdded(address a);\r\n    event TradingContractAdded(address a);\r\n    event TradingContractRemoved(address a);\r\n    event AddressUpdated(string name, address a);\r\n    event NftsUpdated(NftInterfaceV5[5] nfts);\r\n    event NumberUpdated(string name,uint value);\r\n    event NumberUpdatedPair(string name,uint pairIndex,uint value);\r\n    event SpreadReductionsUpdated(uint[5]);\r\n\r\n    constructor() { }\r\n\r\n    // Modifiers\r\n    modifier onlyGov(){ require(msg.sender == gov); _; }\r\n    modifier onlyTrading(){ require(isTradingContract[msg.sender] && token.hasRole(MINTER_ROLE, msg.sender)); _; }\r\n\r\n    // Manage addresses\r\n    function setGov(address _gov) external onlyGov{\r\n        require(_gov != address(0));\r\n        gov = _gov;\r\n        emit AddressUpdated(\"gov\", _gov);\r\n    }\r\n    function setDev(address _dev) external onlyGov{\r\n        require(_dev != address(0));\r\n        dev = _dev;\r\n        emit AddressUpdated(\"dev\", _dev);\r\n    }\r\n    function updateToken(TokenInterfaceV5 _newToken) external onlyGov{\r\n        require(trading.isPaused() && callbacks.isPaused(), \"NOT_PAUSED\");\r\n        require(address(_newToken) != address(0));\r\n        token = _newToken;\r\n        emit AddressUpdated(\"token\", address(_newToken));\r\n    }\r\n    function updateNfts(NftInterfaceV5[5] memory _nfts) external onlyGov{\r\n        require(address(_nfts[0]) != address(0));\r\n        nfts = _nfts;\r\n        emit NftsUpdated(_nfts);\r\n    }\r\n    // Trading + callbacks contracts\r\n    function addTradingContract(address _trading) external onlyGov{\r\n        require(token.hasRole(MINTER_ROLE, _trading), \"NOT_MINTER\");\r\n        require(_trading != address(0));\r\n        isTradingContract[_trading] = true;\r\n        emit TradingContractAdded(_trading);\r\n    }\r\n    function removeTradingContract(address _trading) external onlyGov{\r\n        require(_trading != address(0));\r\n        isTradingContract[_trading] = false;\r\n        emit TradingContractRemoved(_trading);\r\n    }\r\n    function addSupportedToken(address _token) external onlyGov{\r\n        require(_token != address(0));\r\n        supportedTokens.push(_token);\r\n        emit SupportedTokenAdded(_token);\r\n    }\r\n    function setPriceAggregator(address _aggregator) external onlyGov{\r\n        require(_aggregator != address(0));\r\n        priceAggregator = AggregatorInterfaceV5(_aggregator);\r\n        emit AddressUpdated(\"priceAggregator\", _aggregator);\r\n    }\r\n    function setPool(address _pool) external onlyGov{\r\n        require(_pool != address(0));\r\n        pool = PoolInterfaceV5(_pool);\r\n        emit AddressUpdated(\"pool\", _pool);\r\n    }\r\n    function setVault(address _vault) external onlyGov{\r\n        require(_vault != address(0));\r\n        vault = _vault;\r\n        emit AddressUpdated(\"vault\", _vault);\r\n    }\r\n    function setTrading(address _trading) external onlyGov{\r\n        require(_trading != address(0));\r\n        trading = PausableInterfaceV5(_trading);\r\n        emit AddressUpdated(\"trading\", _trading);\r\n    }\r\n    function setCallbacks(address _callbacks) external onlyGov{\r\n        require(_callbacks != address(0));\r\n        callbacks = PausableInterfaceV5(_callbacks);\r\n        emit AddressUpdated(\"callbacks\", _callbacks);\r\n    }\r\n    function setTokenDaiRouter(address _tokenDaiRouter) external onlyGov{\r\n        require(_tokenDaiRouter != address(0));\r\n        tokenDaiRouter = _tokenDaiRouter;\r\n        emit AddressUpdated(\"tokenDaiRouter\", _tokenDaiRouter);\r\n    }\r\n\r\n    // Manage trading variables\r\n    function setMaxTradesPerBlock(uint _maxTradesPerBlock) external onlyGov{\r\n        require(_maxTradesPerBlock > 0);\r\n        maxTradesPerBlock = _maxTradesPerBlock;\r\n        emit NumberUpdated(\"maxTradesPerBlock\", _maxTradesPerBlock);\r\n    }\r\n    function setMaxTradesPerPair(uint _maxTradesPerPair) external onlyGov{\r\n        require(_maxTradesPerPair > 0);\r\n        maxTradesPerPair = _maxTradesPerPair;\r\n        emit NumberUpdated(\"maxTradesPerPair\", _maxTradesPerPair);\r\n    }\r\n    function setMaxPendingMarketOrders(uint _maxPendingMarketOrders) external onlyGov{\r\n        require(_maxPendingMarketOrders > 0);\r\n        maxPendingMarketOrders = _maxPendingMarketOrders;\r\n        emit NumberUpdated(\"maxPendingMarketOrders\", _maxPendingMarketOrders);\r\n    }\r\n    function setMaxGainP(uint _max) external onlyGov{\r\n        require(_max >= 300);\r\n        maxGainP = _max;\r\n        emit NumberUpdated(\"maxGainP\", _max);\r\n    }\r\n    function setDefaultLeverageUnlocked(uint _lev) external onlyGov{\r\n        require(_lev > 0);\r\n        defaultLeverageUnlocked = _lev;\r\n        emit NumberUpdated(\"defaultLeverageUnlocked\", _lev);\r\n    }\r\n    function setMaxSlP(uint _max) external onlyGov{\r\n        require(_max >= 50);\r\n        maxSlP = _max;\r\n        emit NumberUpdated(\"maxSlP\", _max);\r\n    }\r\n    function setNftSuccessTimelock(uint _blocks) external onlyGov{\r\n        nftSuccessTimelock = _blocks;\r\n        emit NumberUpdated(\"nftSuccessTimelock\", _blocks);\r\n    }\r\n    function setSpreadReductionsP(uint[5] calldata _r) external onlyGov{\r\n        require(_r[0] > 0 && _r[1] > _r[0] && _r[2] > _r[1] && _r[3] > _r[2] && _r[4] > _r[3]);\r\n        spreadReductionsP = _r;\r\n        emit SpreadReductionsUpdated(_r);\r\n    }\r\n    function setMaxOpenInterestDai(uint _pairIndex, uint _newMaxOpenInterest) external onlyGov{\r\n        // Can set max open interest to 0 to pause trading on this pair only\r\n        openInterestDai[_pairIndex][2] = _newMaxOpenInterest;\r\n        emit NumberUpdatedPair(\"maxOpenInterestDai\", _pairIndex, _newMaxOpenInterest);\r\n    }\r\n\r\n    // Manage stored trades\r\n    function storeTrade(Trade memory _trade, TradeInfo memory _tradeInfo) external onlyTrading{\r\n        _trade.index = firstEmptyTradeIndex(_trade.trader, _trade.pairIndex);\r\n        openTrades[_trade.trader][_trade.pairIndex][_trade.index] = _trade;\r\n\r\n        openTradesCount[_trade.trader][_trade.pairIndex]++;\r\n        tradesPerBlock[block.number]++;\r\n\r\n        if(openTradesCount[_trade.trader][_trade.pairIndex] == 1){\r\n            pairTradersId[_trade.trader][_trade.pairIndex] = pairTraders[_trade.pairIndex].length;\r\n            pairTraders[_trade.pairIndex].push(_trade.trader); \r\n        }\r\n\r\n        _tradeInfo.beingMarketClosed = false;\r\n        openTradesInfo[_trade.trader][_trade.pairIndex][_trade.index] = _tradeInfo;\r\n\r\n        updateOpenInterestDai(_trade.pairIndex, _tradeInfo.openInterestDai, true, _trade.buy);\r\n    }\r\n    function unregisterTrade(address trader, uint pairIndex, uint index) external onlyTrading{\r\n        Trade storage t = openTrades[trader][pairIndex][index];\r\n        TradeInfo storage i = openTradesInfo[trader][pairIndex][index];\r\n        if(t.leverage == 0){ return; }\r\n\r\n        updateOpenInterestDai(pairIndex, i.openInterestDai, false, t.buy);\r\n\r\n        if(openTradesCount[trader][pairIndex] == 1){\r\n            uint _pairTradersId = pairTradersId[trader][pairIndex];\r\n            address[] storage p = pairTraders[pairIndex];\r\n\r\n            p[_pairTradersId] = p[p.length-1];\r\n            pairTradersId[p[_pairTradersId]][pairIndex] = _pairTradersId;\r\n            \r\n            delete pairTradersId[trader][pairIndex];\r\n            p.pop();\r\n        }\r\n\r\n        delete openTrades[trader][pairIndex][index];\r\n        delete openTradesInfo[trader][pairIndex][index];\r\n\r\n        openTradesCount[trader][pairIndex]--;\r\n        tradesPerBlock[block.number]++;\r\n    }\r\n\r\n    // Manage pending market orders\r\n    function storePendingMarketOrder(PendingMarketOrder memory _order, uint _id, bool _open) external onlyTrading{\r\n        pendingOrderIds[_order.trade.trader].push(_id);\r\n\r\n        reqID_pendingMarketOrder[_id] = _order;\r\n        reqID_pendingMarketOrder[_id].block = block.number;\r\n        \r\n        if(_open){\r\n            pendingMarketOpenCount[_order.trade.trader][_order.trade.pairIndex]++;\r\n        }else{\r\n            pendingMarketCloseCount[_order.trade.trader][_order.trade.pairIndex]++;\r\n            openTradesInfo[_order.trade.trader][_order.trade.pairIndex][_order.trade.index].beingMarketClosed = true;\r\n        }\r\n    }\r\n    function unregisterPendingMarketOrder(uint _id, bool _open) external onlyTrading{\r\n        PendingMarketOrder memory _order = reqID_pendingMarketOrder[_id];\r\n        uint[] storage orderIds = pendingOrderIds[_order.trade.trader];\r\n\r\n        for(uint i = 0; i < orderIds.length; i++){\r\n            if(orderIds[i] == _id){\r\n                if(_open){ \r\n                    pendingMarketOpenCount[_order.trade.trader][_order.trade.pairIndex]--;\r\n                }else{\r\n                    pendingMarketCloseCount[_order.trade.trader][_order.trade.pairIndex]--;\r\n                    openTradesInfo[_order.trade.trader][_order.trade.pairIndex][_order.trade.index].beingMarketClosed = false;\r\n                }\r\n\r\n                orderIds[i] = orderIds[orderIds.length-1];\r\n                orderIds.pop();\r\n\r\n                delete reqID_pendingMarketOrder[_id];\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Manage open interest\r\n    function updateOpenInterestDai(uint _pairIndex, uint _leveragedPosDai, bool _open, bool _long) private{\r\n        uint index = _long ? 0 : 1;\r\n        uint[3] storage o = openInterestDai[_pairIndex];\r\n        o[index] = _open ? o[index] + _leveragedPosDai : o[index] - _leveragedPosDai;\r\n    }\r\n\r\n    // Manage open limit orders\r\n    function storeOpenLimitOrder(OpenLimitOrder memory o) external onlyTrading{\r\n        o.index = firstEmptyOpenLimitIndex(o.trader, o.pairIndex);\r\n        o.block = block.number;\r\n        openLimitOrders.push(o);\r\n        openLimitOrderIds[o.trader][o.pairIndex][o.index] = openLimitOrders.length-1;\r\n        openLimitOrdersCount[o.trader][o.pairIndex]++;\r\n    }\r\n    function updateOpenLimitOrder(OpenLimitOrder calldata _o) external onlyTrading{\r\n        if(!hasOpenLimitOrder(_o.trader, _o.pairIndex, _o.index)){ return; }\r\n        OpenLimitOrder storage o = openLimitOrders[openLimitOrderIds[_o.trader][_o.pairIndex][_o.index]];\r\n        o.positionSize = _o.positionSize;\r\n        o.buy = _o.buy;\r\n        o.leverage = _o.leverage;\r\n        o.tp = _o.tp;\r\n        o.sl = _o.sl;\r\n        o.minPrice = _o.minPrice;\r\n        o.maxPrice = _o.maxPrice;\r\n        o.block = block.number;\r\n    }\r\n    function unregisterOpenLimitOrder(address _trader, uint _pairIndex, uint _index) external onlyTrading{\r\n        if(!hasOpenLimitOrder(_trader, _pairIndex, _index)){ return; }\r\n\r\n        // Copy last order to deleted order => update id of this limit order\r\n        uint id = openLimitOrderIds[_trader][_pairIndex][_index];\r\n        openLimitOrders[id] = openLimitOrders[openLimitOrders.length-1];\r\n        openLimitOrderIds[openLimitOrders[id].trader][openLimitOrders[id].pairIndex][openLimitOrders[id].index] = id;\r\n\r\n        // Remove\r\n        delete openLimitOrderIds[_trader][_pairIndex][_index];\r\n        openLimitOrders.pop();\r\n\r\n        openLimitOrdersCount[_trader][_pairIndex]--;\r\n    }\r\n\r\n    // Manage NFT orders\r\n    function storePendingNftOrder(PendingNftOrder memory _nftOrder, uint _orderId) external onlyTrading{\r\n        reqID_pendingNftOrder[_orderId] = _nftOrder;\r\n    }\r\n    function unregisterPendingNftOrder(uint _order) external onlyTrading{\r\n        delete reqID_pendingNftOrder[_order];\r\n    }\r\n\r\n    // Manage open trade\r\n    function updateSl(address _trader, uint _pairIndex, uint _index, uint _newSl) external onlyTrading{\r\n        Trade storage t = openTrades[_trader][_pairIndex][_index];\r\n        TradeInfo storage i = openTradesInfo[_trader][_pairIndex][_index];\r\n        if(t.leverage == 0){ return; }\r\n        t.sl = _newSl;\r\n        i.slLastUpdated = block.number;\r\n    }\r\n    function updateTp(address _trader, uint _pairIndex, uint _index, uint _newTp) external onlyTrading{\r\n        Trade storage t = openTrades[_trader][_pairIndex][_index];\r\n        TradeInfo storage i = openTradesInfo[_trader][_pairIndex][_index];\r\n        if(t.leverage == 0){ return; }\r\n        t.tp = _newTp;\r\n        i.tpLastUpdated = block.number;\r\n    }\r\n    function updateTrade(Trade memory _t) external onlyTrading{ // useful when partial adding/closing\r\n        Trade storage t = openTrades[_t.trader][_t.pairIndex][_t.index];\r\n        if(t.leverage == 0){ return; }\r\n        t.initialPosToken = _t.initialPosToken;\r\n        t.positionSizeDai = _t.positionSizeDai;\r\n        t.openPrice = _t.openPrice;\r\n        t.leverage = _t.leverage;\r\n    }\r\n\r\n    // Manage referrals\r\n    function storeReferral(address _trader, address _referral) external onlyTrading{\r\n        Trader storage trader = traders[_trader];\r\n        trader.referral = _referral != address(0) && trader.referral == address(0) && _referral != _trader \r\n                        ? _referral : trader.referral;\r\n    }\r\n    function increaseReferralRewards(address _referral, uint _amount) external onlyTrading{ \r\n        traders[_referral].referralRewardsTotal += _amount; \r\n    }\r\n\r\n    // Manage rewards\r\n    function distributeLpRewards(uint _amount) external onlyTrading{ pool.increaseAccTokensPerLp(_amount); }\r\n    function increaseNftRewards(uint _nftId, uint _amount) external onlyTrading{\r\n        nftLastSuccess[_nftId] = block.number; \r\n        nftRewards += _amount; \r\n    }\r\n\r\n    // Unlock next leverage\r\n    function setLeverageUnlocked(address _trader, uint _newLeverage) external onlyTrading{\r\n        traders[_trader].leverageUnlocked = _newLeverage;\r\n    }\r\n\r\n    // Manage dev & gov fees\r\n    function handleDevGovFees(uint _pairIndex, uint _leveragedPositionSize, bool _dai, bool _fullFee) external onlyTrading returns(uint fee){\r\n        fee = _leveragedPositionSize * priceAggregator.openFeeP(_pairIndex) / PRECISION / 100;\r\n        if(!_fullFee){ fee /= 2; }\r\n\r\n        if(_dai){\r\n            govFeesDai += fee;\r\n            devFeesDai += fee;\r\n        }else{\r\n            govFeesToken += fee;\r\n            devFeesToken += fee;\r\n        }\r\n\r\n        fee *= 2;\r\n    }\r\n    function claimFees() external onlyGov{\r\n        token.mint(dev, devFeesToken);\r\n        token.mint(gov, govFeesToken);\r\n\r\n        tokensMinted += devFeesToken + govFeesToken;\r\n\r\n        dai.transfer(gov, govFeesDai);\r\n        dai.transfer(dev, devFeesDai);\r\n\r\n        devFeesToken = 0;\r\n        govFeesToken = 0;\r\n        devFeesDai = 0;\r\n        govFeesDai = 0;\r\n    }\r\n\r\n    // Manage tokens\r\n    function handleTokens(address _a, uint _amount, bool _mint) external onlyTrading{ \r\n        if(_mint){ token.mint(_a, _amount); tokensMinted += _amount; } \r\n        else { token.burn(_a, _amount); tokensBurned += _amount; } \r\n    }\r\n    function transferDai(address _from, address _to, uint _amount) external onlyTrading{ \r\n        if(_from == address(this)){\r\n            dai.transfer(_to, _amount); \r\n        }else{\r\n            dai.transferFrom(_from, _to, _amount); \r\n        }\r\n    }\r\n    function transferLinkToAggregator(address _from, uint _pairIndex, uint _leveragedPosDai) external onlyTrading{ \r\n        linkErc677.transferFrom(_from, address(priceAggregator), priceAggregator.linkFee(_pairIndex, _leveragedPosDai)); \r\n    }\r\n\r\n    // View utils functions\r\n    function firstEmptyTradeIndex(address trader, uint pairIndex) public view returns(uint index){\r\n        for(uint i = 0; i < maxTradesPerPair; i++){\r\n            if(openTrades[trader][pairIndex][i].leverage == 0){ index = i; break; }\r\n        }\r\n    }\r\n    function firstEmptyOpenLimitIndex(address trader, uint pairIndex) public view returns(uint index){\r\n        for(uint i = 0; i < maxTradesPerPair; i++){\r\n            if(!hasOpenLimitOrder(trader, pairIndex, i)){ index = i; break; }\r\n        }\r\n    }\r\n    function hasOpenLimitOrder(address trader, uint pairIndex, uint index) public view returns(bool){\r\n        if(openLimitOrders.length == 0){ return false; }\r\n        OpenLimitOrder storage o = openLimitOrders[openLimitOrderIds[trader][pairIndex][index]];\r\n        return o.trader == trader && o.pairIndex == pairIndex && o.index == index;\r\n    }\r\n\r\n    // Additional getters\r\n    function getReferral(address _trader) external view returns(address){ \r\n        return traders[_trader].referral; \r\n    }\r\n    function getLeverageUnlocked(address _trader) external view returns(uint){ \r\n        return traders[_trader].leverageUnlocked; \r\n    }\r\n    function pairTradersArray(uint _pairIndex) external view returns(address[] memory){ \r\n        return pairTraders[_pairIndex]; \r\n    }\r\n    function getPendingOrderIds(address _trader) external view returns(uint[] memory){ \r\n        return pendingOrderIds[_trader]; \r\n    }\r\n    function pendingOrderIdsCount(address _trader) external view returns(uint){ \r\n        return pendingOrderIds[_trader].length; \r\n    }\r\n    function getOpenLimitOrder(\r\n        address _trader, \r\n        uint _pairIndex,\r\n        uint _index\r\n    ) external view returns(OpenLimitOrder memory){ \r\n        require(hasOpenLimitOrder(_trader, _pairIndex, _index));\r\n        return openLimitOrders[openLimitOrderIds[_trader][_pairIndex][_index]]; \r\n    }\r\n    function getOpenLimitOrders() external view returns(OpenLimitOrder[] memory){ \r\n        return openLimitOrders; \r\n    }\r\n    function getSupportedTokens() external view returns(address[] memory){ \r\n        return supportedTokens; \r\n    }\r\n    function getSpreadReductionsArray() external view returns(uint[5] memory){\r\n        return spreadReductionsP;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"AddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract NftInterfaceV5[5]\",\"name\":\"nfts\",\"type\":\"address[5]\"}],\"name\":\"NftsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NumberUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NumberUpdatedPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"name\":\"SpreadReductionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"SupportedTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"TradingContractAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"TradingContractRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trading\",\"type\":\"address\"}],\"name\":\"addTradingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callbacks\",\"outputs\":[{\"internalType\":\"contract PausableInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract TokenInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLeverageUnlocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devFeesDai\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devFeesToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"distributeLpRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"firstEmptyOpenLimitIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"firstEmptyTradeIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"getLeverageUnlocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getOpenLimitOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct GFarmTradingStorageV5.OpenLimitOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOpenLimitOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct GFarmTradingStorageV5.OpenLimitOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"getPendingOrderIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"getReferral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSpreadReductionsArray\",\"outputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govFeesDai\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govFeesToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_leveragedPositionSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_dai\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_fullFee\",\"type\":\"bool\"}],\"name\":\"handleDevGovFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_mint\",\"type\":\"bool\"}],\"name\":\"handleTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"hasOpenLimitOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseNftRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseReferralRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTradingContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkErc677\",\"outputs\":[{\"internalType\":\"contract TokenInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxGainP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPendingMarketOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSlP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTradesPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTradesPerPair\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftLastSuccess\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftSuccessTimelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"contract NftInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openInterestDai\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openLimitOrderIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openLimitOrders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openLimitOrdersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openTrades\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openTradesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openTradesInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openInterestDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"beingMarketClosed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairTraders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairTradersArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairTradersId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingMarketCloseCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingMarketOpenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingOrderIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"}],\"name\":\"pendingOrderIdsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract PoolInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceAggregator\",\"outputs\":[{\"internalType\":\"contract AggregatorInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trading\",\"type\":\"address\"}],\"name\":\"removeTradingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reqID_pendingMarketOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct GFarmTradingStorageV5.Trade\",\"name\":\"trade\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wantedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reqID_pendingNftOrder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"enum GFarmTradingStorageV5.LimitOrder\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_callbacks\",\"type\":\"address\"}],\"name\":\"setCallbacks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lev\",\"type\":\"uint256\"}],\"name\":\"setDefaultLeverageUnlocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dev\",\"type\":\"address\"}],\"name\":\"setDev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newLeverage\",\"type\":\"uint256\"}],\"name\":\"setLeverageUnlocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setMaxGainP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newMaxOpenInterest\",\"type\":\"uint256\"}],\"name\":\"setMaxOpenInterestDai\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxPendingMarketOrders\",\"type\":\"uint256\"}],\"name\":\"setMaxPendingMarketOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setMaxSlP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTradesPerBlock\",\"type\":\"uint256\"}],\"name\":\"setMaxTradesPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTradesPerPair\",\"type\":\"uint256\"}],\"name\":\"setMaxTradesPerPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blocks\",\"type\":\"uint256\"}],\"name\":\"setNftSuccessTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aggregator\",\"type\":\"address\"}],\"name\":\"setPriceAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"_r\",\"type\":\"uint256[5]\"}],\"name\":\"setSpreadReductionsP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenDaiRouter\",\"type\":\"address\"}],\"name\":\"setTokenDaiRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trading\",\"type\":\"address\"}],\"name\":\"setTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"spreadReductionsP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct GFarmTradingStorageV5.OpenLimitOrder\",\"name\":\"o\",\"type\":\"tuple\"}],\"name\":\"storeOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct GFarmTradingStorageV5.Trade\",\"name\":\"trade\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wantedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct GFarmTradingStorageV5.PendingMarketOrder\",\"name\":\"_order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_open\",\"type\":\"bool\"}],\"name\":\"storePendingMarketOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"enum GFarmTradingStorageV5.LimitOrder\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"internalType\":\"struct GFarmTradingStorageV5.PendingNftOrder\",\"name\":\"_nftOrder\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"storePendingNftOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"}],\"name\":\"storeReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct GFarmTradingStorageV5.Trade\",\"name\":\"_trade\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openInterestDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tpLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slLastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"beingMarketClosed\",\"type\":\"bool\"}],\"internalType\":\"struct GFarmTradingStorageV5.TradeInfo\",\"name\":\"_tradeInfo\",\"type\":\"tuple\"}],\"name\":\"storeTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract TokenInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenDaiRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"traders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"leverageUnlocked\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referralRewardsTotal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradesPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trading\",\"outputs\":[{\"internalType\":\"contract PausableInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferDai\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_leveragedPosDai\",\"type\":\"uint256\"}],\"name\":\"transferLinkToAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"unregisterOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_open\",\"type\":\"bool\"}],\"name\":\"unregisterPendingMarketOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_order\",\"type\":\"uint256\"}],\"name\":\"unregisterPendingNftOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"unregisterTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract NftInterfaceV5[5]\",\"name\":\"_nfts\",\"type\":\"address[5]\"}],\"name\":\"updateNfts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spreadReductionP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct GFarmTradingStorageV5.OpenLimitOrder\",\"name\":\"_o\",\"type\":\"tuple\"}],\"name\":\"updateOpenLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newSl\",\"type\":\"uint256\"}],\"name\":\"updateSl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract TokenInterfaceV5\",\"name\":\"_newToken\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newTp\",\"type\":\"uint256\"}],\"name\":\"updateTp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPosToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionSizeDai\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buy\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sl\",\"type\":\"uint256\"}],\"internalType\":\"struct GFarmTradingStorageV5.Trade\",\"name\":\"_t\",\"type\":\"tuple\"}],\"name\":\"updateTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "GFarmTradingStorageV5", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "999", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://80136f00e3bf01f7f59f1ff4ab44ef6febae106cb1618df120e029a5f92817fb"}