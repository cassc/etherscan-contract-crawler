{"SourceCode": "// This License is not an Open Source license. Copyright 2022. Ozys Co. Ltd. All rights reserved.\r\npragma solidity 0.5.6;\r\n\r\ninterface ISinglePoolFactory {\r\n    function singlePoolImpl() external view returns (address);\r\n}\r\n\r\ncontract SinglePool {\r\n\r\n    bytes32 private constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n    bytes32 private constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\r\n\r\n    event OwnerChanged(address previousOwner, address newOwner);\r\n    event Upgraded(address implementation);\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == _owner());\r\n        _;\r\n    }\r\n    \r\n    constructor(address _owner, bytes memory _data) public {\r\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1));\r\n        _setOwner(_owner);\r\n        \r\n        address impl = ISinglePoolFactory(msg.sender).singlePoolImpl();\r\n        if (_data.length > 0) {\r\n            // solhint-disable-next-line avoid-low-level-calls\r\n            (bool success,) = impl.delegatecall(_data);\r\n            require(success);\r\n        }\r\n    }\r\n\r\n\r\n    function Owner() external view onlyOwner returns (address) {\r\n        return _owner();\r\n    }\r\n\r\n    function _owner() internal view returns (address adm) {\r\n        bytes32 slot = _ADMIN_SLOT;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            adm := sload(slot)\r\n        }\r\n    }\r\n\r\n    function _setOwner(address newOwner) private {\r\n        bytes32 slot = _ADMIN_SLOT;\r\n\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            sstore(slot, newOwner)\r\n        }\r\n    }\r\n\r\n    function changeOwner(address newOwner) external onlyOwner {\r\n        require(newOwner != address(0), \"Proxy: new Owner is the zero address\");\r\n        emit OwnerChanged(_owner(), newOwner);\r\n        _setOwner(newOwner);\r\n    }\r\n\r\n    function () payable external { \r\n        address impl = ISinglePoolFactory(_owner()).singlePoolImpl();\r\n        require(impl != address(0));\r\n        assembly {\r\n            let ptr := mload(0x40)\r\n            calldatacopy(ptr, 0, calldatasize)\r\n            let result := delegatecall(gas, impl, ptr, calldatasize, 0, 0)\r\n            let size := returndatasize\r\n            returndatacopy(ptr, 0, size)\r\n\r\n            switch result\r\n            case 0 { revert(ptr, size) }\r\n            default { return(ptr, size) }\r\n        }\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}]", "ContractName": "SinglePool", "CompilerVersion": "v0.5.6+commit.b259423e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000504722a6eabb3d1573bada9abd585ae177d52e7a00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000064ed897be5000000000000000000000000504722a6eabb3d1573bada9abd585ae177d52e7a0000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa841740000000000000000000000001f42fed9cfff2177131f9823654d69b4573b69dc00000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "1", "Implementation": "0x9e84610370729a05931da5f6807c59ef82f10b39", "SwarmSource": "bzzr://52e3108d48da0d8fe0f5b7b5c0b0f8b762ef5f4226b12411545631cda64f70c8"}