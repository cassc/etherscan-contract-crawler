{"SourceCode": "pragma solidity ^0.8.18;\r\n\r\n// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\ncontract freeTalk  {\r\n\r\n\r\n/* Copyright Secret Beach Solutions 2023 */\r\n/* John Rigler john.rigler@protonmail.com */\r\n\r\naddress public owner;\r\n\r\nmapping(string => string) public map;\r\n\r\nconstructor() {\r\n    owner = msg.sender;\r\n   }\r\n\r\nfunction tell(\r\n\r\n    string memory message1,\r\n    string memory message2,\r\n    address[] memory index\r\n\r\n) public payable \r\n    {\r\n\r\n    require(msg.value >= index.length,\"You must include at least one wei for each index\");\r\n\r\n    for(uint i = 0; i< index.length; i++)\r\n         payable(index[i]).transfer(1); \r\n}\r\n\r\n\r\nfunction mapArtifact (\r\n    string memory artifact,\r\n    string memory body\r\n)  public \r\n     { \r\n         require(msg.sender == owner,\"Only the contract owner can run this\");\r\n           map[artifact] = body;\r\n}\r\n\r\nfunction cashout ( uint256 amount ) public\r\n    {\r\n    address payable Payment = payable(owner);\r\n       if(msg.sender == owner)\r\n            Payment.transfer(amount);\r\n    }\r\n   fallback () external payable {}\r\n   receive () external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"cashout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"map\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"body\",\"type\":\"string\"}],\"name\":\"mapArtifact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message2\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"index\",\"type\":\"address[]\"}],\"name\":\"tell\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "freeTalk", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU LGPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://203ccb4992f2c183a31c71940a6c468de031cedde35011d2b60baedda3b3405b"}