{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/deposit.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\ninterface IERC20 {\\n    function transfer(address to, uint value) external returns (bool);\\n\\n    function balanceOf(address owner) external view returns (uint);\\n}\\n\\ncontract Store {\\n    function sendTokens(address tokenAddress) external {\\n        uint balance = IERC20(tokenAddress).balanceOf(address(this));\\n        IERC20(tokenAddress).transfer(\\n            0x4B43D1D96Cc8472c8A3b975F4CB532Fd893e7Da0,\\n            balance\\n        );\\n    }\\n\\n    function getBalance(address tokenAddress) external view returns (uint) {\\n        return IERC20(tokenAddress).balanceOf(address(this));\\n    }\\n}\\n\\ncontract Deposit {\\n    address public owner;\\n    mapping(string => address) public stores;\\n\\n    modifier onlyOwner() {\\n        require(owner == msg.sender, \\\"!Auth\\\");\\n        _;\\n    }\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    function createStore(string memory userId) external onlyOwner {\\n        Store newStore = new Store();\\n        stores[userId] = address(newStore);\\n    }\\n\\n    function sendTokensToAddress(\\n        string memory userId,\\n        address tokenAddress\\n    ) external {\\n        Store store = Store(stores[userId]);\\n        store.sendTokens(tokenAddress);\\n    }\\n\\n    function getStoreBalance(\\n        string memory userId,\\n        address tokenAddress\\n    ) external view returns (uint256) {\\n        Store store = Store(stores[userId]);\\n        return store.getBalance(tokenAddress);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 50\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"}],\"name\":\"createStore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getStoreBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"sendTokensToAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"stores\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Deposit", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "50", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}