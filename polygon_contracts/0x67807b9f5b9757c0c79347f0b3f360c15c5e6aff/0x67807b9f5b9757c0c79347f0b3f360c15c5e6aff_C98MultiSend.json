{"SourceCode": "pragma solidity ^0.4.23;\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 {\r\n    uint public _totalSupply;\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address who) public view returns (uint);\r\n    function transfer(address to, uint value) public;\r\n    function allowance(address owner, address spender) public view returns (uint);\r\n    function transferFrom(address from, address to, uint value) public;\r\n    function approve(address spender, uint value) public;\r\n}\r\n\r\ncontract C98MultiSend {\r\n    address eth_address = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n\r\n    event transfer(address from, address to, uint amount,address tokenAddress);\r\n    \r\n    // Transfer multi main network coin\r\n    // Example ETH, BSC, HT\r\n    function transferMulti(address[] receivers, uint256[] amounts) public payable {\r\n        require(msg.value != 0 && msg.value == getTotalSendingAmount(amounts));\r\n        for (uint256 i = 0; i < amounts.length; i++) {\r\n            receivers[i].transfer(amounts[i]);\r\n            emit transfer(msg.sender, receivers[i], amounts[i], eth_address);\r\n        }\r\n    }\r\n    \r\n    // Transfer multi token ERC20\r\n    function transferMultiToken(address tokenAddress, address[] receivers, uint256[] amounts) public {\r\n        require(receivers.length == amounts.length && receivers.length != 0);\r\n        ERC20 token = ERC20(tokenAddress);\r\n\r\n        for (uint i = 0; i < receivers.length; i++) {\r\n            require(amounts[i] > 0 && receivers[i] != 0x0);\r\n            token.transferFrom(msg.sender,receivers[i], amounts[i]);\r\n        \r\n            emit transfer(msg.sender, receivers[i], amounts[i], tokenAddress);\r\n        }\r\n    }\r\n    \r\n    function getTotalSendingAmount(uint256[] _amounts) private pure returns (uint totalSendingAmount) {\r\n        for (uint i = 0; i < _amounts.length; i++) {\r\n            require(_amounts[i] > 0);\r\n            totalSendingAmount += _amounts[i];\r\n        }\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"receivers\",\"type\":\"address[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferMulti\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"receivers\",\"type\":\"address[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferMultiToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"transfer\",\"type\":\"event\"}]", "ContractName": "C98MultiSend", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://38db7328d7e15eb458ab2c4e2765de6d7fddeb4d3403c9e92e367bb5a8004a49"}