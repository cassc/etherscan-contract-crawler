{"SourceCode": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\n\r\ncontract Caller {\r\n    address[] public allowedAddresses;\r\n    address public address1 = 0x3e7118CC227e8f25f89004507458a5FB3d9c918A; // L\r\n    address public address2 = 0x55b7A33A0412012Fc14fD41670C89c916C0A0D54; // P\r\n\r\n    address public contractOwner;\r\n\r\n    IContract2 public contract2;\r\n    address public contract2Address;\r\n\r\n    constructor() {\r\n        contractOwner = msg.sender; \r\n        allowedAddresses.push(msg.sender); \r\n        allowedAddresses.push(address1);   // Add your first additional address\r\n        allowedAddresses.push(address2);   // Add your second additional address\r\n    }\r\n\r\n    function setContract2Address(address _newContract2Address) public onlyOwner {\r\n        contract2Address = _newContract2Address;\r\n        contract2 = IContract2(_newContract2Address);\r\n    }\r\n\r\n    function callContract2Function(uint256 amount) external onlyAllowed {\r\n        contract2.get123(amount);\r\n    }\r\n\r\n\r\n   \r\n    modifier onlyAllowed() {\r\n        require(\r\n            msg.sender == contractOwner || isAllowedAddress(msg.sender),\r\n            \"Caller is not an allowed address\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function isAllowedAddress(address _address) internal view returns (bool) {\r\n        for (uint256 i = 0; i < allowedAddresses.length; i++) {\r\n            if (allowedAddresses[i] == _address) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function addAddress(address newAddress) public onlyOwner {\r\n        allowedAddresses.push(newAddress);\r\n    }\r\n\r\n    function removeAddress(address addressToRemove) public onlyOwner {\r\n        for (uint256 i = 0; i < allowedAddresses.length; i++) {\r\n            if (allowedAddresses[i] == addressToRemove) {\r\n                delete allowedAddresses[i];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == contractOwner, \"Only the contract owner can call this function\");\r\n        _;\r\n    }\r\n}\r\n\r\ninterface IContract2 {\r\n    function get123(uint256 amount) external;\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"addAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"address1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"address2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"callContract2Function\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contract2\",\"outputs\":[{\"internalType\":\"contract IContract2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contract2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToRemove\",\"type\":\"address\"}],\"name\":\"removeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newContract2Address\",\"type\":\"address\"}],\"name\":\"setContract2Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Caller", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://97057074fd2f5ab5819d3b031a544029d91f5eaeeb58f86c1139ccfe4fa042e5"}