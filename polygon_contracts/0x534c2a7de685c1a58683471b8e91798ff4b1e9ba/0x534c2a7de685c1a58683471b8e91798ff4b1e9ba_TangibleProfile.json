{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/TangibleProfile.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\nimport \\\"./interfaces/ITangibleProfile.sol\\\";\\n\\ncontract TangibleProfile is ITangibleProfile {\\n    mapping(address => Profile) public userProfiles;\\n\\n    function update(Profile memory profile) external override {\\n        address owner = msg.sender;\\n        userProfiles[owner] = profile;\\n    }\\n\\n    function remove() external override {\\n        delete userProfiles[msg.sender];\\n    }\\n\\n    function namesOf(address[] calldata owners)\\n        external\\n        view\\n        override\\n        returns (string[] memory names)\\n    {\\n        uint256 length = owners.length;\\n        names = new string[](length);\\n        for (uint256 i = 0; i < length; i++) {\\n            names[i] = userProfiles[owners[i]].userName;\\n        }\\n        return names;\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/ITangibleProfile.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\ninterface ITangibleProfile {\\n    struct Profile {\\n        string userName;\\n        string imageURL;\\n    }\\n\\n    event ProfileUpdated(Profile oldProfile, Profile newProfile);\\n\\n    /// @dev The function updates the user profile.\\n    function update(Profile memory profile) external;\\n\\n    /// @dev The function removes the user profile.\\n    function remove() external;\\n\\n    /// @dev The function returns name(s) of user(s).\\n    function namesOf(address[] calldata owners)\\n        external\\n        view\\n        returns (string[] memory);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURL\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct ITangibleProfile.Profile\",\"name\":\"oldProfile\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURL\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct ITangibleProfile.Profile\",\"name\":\"newProfile\",\"type\":\"tuple\"}],\"name\":\"ProfileUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"}],\"name\":\"namesOf\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURL\",\"type\":\"string\"}],\"internalType\":\"struct ITangibleProfile.Profile\",\"name\":\"profile\",\"type\":\"tuple\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userProfiles\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURL\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "TangibleProfile", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}