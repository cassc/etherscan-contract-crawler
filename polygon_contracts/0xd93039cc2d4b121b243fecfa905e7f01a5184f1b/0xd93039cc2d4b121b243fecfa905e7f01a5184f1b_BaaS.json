{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\n// Copyright (C) 2023 TrackGenesis Pvt. Ltd.\r\n\r\npragma solidity ^0.8.18;\r\n\r\ncontract BaaS {\r\n    address admin;\r\n\r\n    constructor(address _admin) {\r\n        admin = _admin;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"Unauthorized\");\r\n        _;\r\n    }\r\n\r\n    event AdminUpdated(address newAdmin);\r\n\r\n    function updateAdmin(address newAdmin) public onlyAdmin {\r\n        admin = newAdmin;\r\n        emit AdminUpdated(newAdmin);\r\n    }\r\n\r\n     struct Product {\r\n        string batchId;\r\n        mapping(string => string) metaData;\r\n    }\r\n\r\n    mapping(string => Product) private products;\r\n    mapping(string => string[]) private metaDataKeys;\r\n\r\n     struct KeyValuePair {\r\n        string key;\r\n        string value;\r\n    }\r\n\r\n    function addProduct(\r\n        string memory _uniqueId,\r\n        string memory _batchId,\r\n        KeyValuePair[] memory _metaData\r\n    ) public onlyAdmin {\r\n        // Validate input data\r\n        require(bytes(_uniqueId).length > 0 &&  bytes(_batchId).length > 0, \"Required fields are missing\");\r\n\r\n       \r\n         Product storage newProduct = products[_uniqueId];\r\n         newProduct.batchId=_batchId;\r\n\r\n         uint256 metaDataLength = _metaData.length;\r\n            for (uint256 i = 0; i < metaDataLength; i++) {\r\n                 newProduct.metaData[_metaData[i].key] = _metaData[i].value;\r\n                metaDataKeys[_uniqueId].push(_metaData[i].key);\r\n            }\r\n    }  \r\n\r\n    function getProductDetails(string memory _uniqueId)\r\n        public\r\n        view\r\n        returns (\r\n            string memory,\r\n            string memory,\r\n            KeyValuePair[] memory\r\n        )\r\n        {\r\n      \r\n        Product storage product = products[_uniqueId];\r\n        uint256 metaDataLength = metaDataKeys[_uniqueId].length;\r\n        KeyValuePair[] memory metaData = new KeyValuePair[](\r\n            metaDataLength\r\n        );\r\n\r\n        for (uint256 i = 0; i < metaDataLength; i++) {\r\n            string memory key = metaDataKeys[_uniqueId][i];\r\n            metaData[i] = KeyValuePair({\r\n                key: key,\r\n                value: product.metaData[key]\r\n            });\r\n        }\r\n              \r\n        return (_uniqueId,product.batchId, metaData);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uniqueId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_batchId\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"internalType\":\"struct BaaS.KeyValuePair[]\",\"name\":\"_metaData\",\"type\":\"tuple[]\"}],\"name\":\"addProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uniqueId\",\"type\":\"string\"}],\"name\":\"getProductDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"internalType\":\"struct BaaS.KeyValuePair[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"updateAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BaaS", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000024fa2d10fb59102628374d94cf22312f8abd9b69", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://85a976de4f894ff2ab9d29490465ac4d8f84f12bd40bde61a9847920336f5d5a"}