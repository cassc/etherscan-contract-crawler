{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.11;\r\n\r\n\r\ninterface POOL_CONTRACT{\r\n    function viewUserReferral(address _user) external  view returns (address);\r\n\r\n    function checkUserExist(address _user) external  view returns (bool);\r\n}\r\n\r\ncontract AIMaticpoolROI {\r\n    address public ownerWallet;\r\n    address public devWallet;\r\n    address public poolContract;\r\n    uint256 public currUserID = 0;\r\n   \r\n   \r\n    struct Deposit {\r\n        uint256 amount;\r\n        uint40 time;\r\n    }\r\n\r\n    struct RoiUser {\r\n        uint256 dividends;\r\n        uint256 match_bonus;\r\n        uint40 last_payout;\r\n        uint256 total_invested;\r\n        uint256 total_withdrawn;\r\n        uint256 total_match_bonus;\r\n        Deposit[] deposits;\r\n        uint256[5] structure;\r\n    }\r\n\r\n\r\n    mapping(address => RoiUser) public roiUsers;\r\n    mapping(uint256 => address) public userList;\r\n\r\n\r\n\r\n  \r\n    mapping(uint256 => uint256) public Payment_Received_List_Pool;\r\n\r\n    uint256 public invested;\r\n    uint256 public withdrawn;\r\n    uint256 public match_bonus;\r\n\r\n    uint8 constant BONUS_LINES_COUNT = 5;\r\n    uint16 constant PERCENT_DIVIDER = 1000;\r\n    uint8[BONUS_LINES_COUNT] public ref_bonuses = [50, 30, 30, 20, 20];\r\n    uint40 constant total_days = 200;\r\n    uint40 constant total_returns = 350;\r\n    uint40 public TIME_STEP = 86400;\r\n\r\n    event regLevelEvent(\r\n        address indexed _user,\r\n        address indexed _referrer,\r\n        uint256 _time\r\n    );\r\n    \r\n    event NewDeposit(address indexed addr, uint256 amount);\r\n    event MatchPayout(\r\n        address indexed addr,\r\n        address indexed from,\r\n        uint256 amount\r\n    );\r\n    event Withdraw(address indexed addr, uint256 amount);\r\n    event getMoneyForPoolLevelEventReinvest(\r\n        address indexed _user,\r\n        address indexed _referral,\r\n        uint256 _level,\r\n        uint256 _time,\r\n        uint256 poolid,\r\n        uint256 poolno\r\n    );\r\n\r\n    receive() external payable{}\r\n\r\n    constructor(address _ownerWallet, address _devWallet,address _poolContract) {\r\n        ownerWallet = _ownerWallet;\r\n        devWallet = _devWallet;\r\n        poolContract = _poolContract;\r\n    }\r\n\r\n    function depositByPoolPayment(address user,uint256 amount) external\r\n    {\r\n        require(msg.sender==poolContract,\"Invalid user\");\r\n        _deposit(user, amount);\r\n    }\r\n\r\n    function deposit() external payable {\r\n        uint256 amount = msg.value;\r\n        require(amount >= 5 ether, \"Minimum deposit amount is 5 MATIC\");\r\n        require(checkUserExist(msg.sender),\"Please register first\");\r\n        _deposit(msg.sender, amount);\r\n    }\r\n\r\n    function _deposit(address _user, uint256 amount) internal {\r\n        RoiUser storage player = roiUsers[_user];\r\n\r\n\r\n        player.deposits.push(\r\n            Deposit({amount: amount, time: uint40(block.timestamp)})\r\n        );\r\n\r\n        player.total_invested += amount;\r\n        invested += amount;\r\n\r\n        _refPayout(_user, amount);\r\n\r\n        payable(devWallet).transfer((amount * 50) / 1000);\r\n        payable (ownerWallet).transfer((amount * 50) / 1000);\r\n        emit NewDeposit(_user, amount);\r\n    }\r\n\r\n    function _payout(address _addr) private {\r\n        uint256 payout = this.payoutOf(_addr);\r\n\r\n        if (payout > 0) {\r\n            roiUsers[_addr].last_payout = uint40(block.timestamp);\r\n            roiUsers[_addr].dividends += payout;\r\n        }\r\n    }\r\n\r\n    function withdraw() external {\r\n        RoiUser storage player = roiUsers[msg.sender];\r\n\r\n        _payout(msg.sender);\r\n\r\n        require(player.dividends > 0 || player.match_bonus > 0, \"Zero amount\");\r\n\r\n        uint256 amount = player.dividends + player.match_bonus;\r\n\r\n        player.dividends = 0;\r\n        player.match_bonus = 0;\r\n        player.total_withdrawn += amount;\r\n        withdrawn += amount;\r\n\r\n        payable(msg.sender).transfer(amount);\r\n\r\n        emit Withdraw(msg.sender, amount);\r\n    }\r\n\r\n    function payoutOf(address _addr) external view returns (uint256 value) {\r\n        RoiUser storage player = roiUsers[_addr];\r\n\r\n        for (uint256 i = 0; i < player.deposits.length; i++) {\r\n            Deposit storage dep = player.deposits[i];\r\n\r\n            uint40 time_end = dep.time + total_days * TIME_STEP;\r\n            uint40 from = player.last_payout > dep.time\r\n                ? player.last_payout\r\n                : dep.time;\r\n            uint40 to = block.timestamp > time_end\r\n                ? time_end\r\n                : uint40(block.timestamp);\r\n\r\n            if (from < to) {\r\n                value +=\r\n                    (dep.amount * (to - from) * total_returns) /\r\n                    total_days /\r\n                    (TIME_STEP*100);\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    function _refPayout(address _addr, uint256 _amount) private {\r\n        address up = getUpline(_addr);\r\n\r\n        for (uint8 i = 0; i < ref_bonuses.length; i++) {\r\n            if (up == address(0)) break;\r\n\r\n            uint256 bonus = (_amount * ref_bonuses[i]) / PERCENT_DIVIDER;\r\n\r\n            roiUsers[up].match_bonus += bonus;\r\n            roiUsers[up].total_match_bonus += bonus;\r\n\r\n            match_bonus += bonus;\r\n\r\n            emit MatchPayout(up, _addr, bonus);\r\n            if(up==ownerWallet){\r\n                break;\r\n            }\r\n            up = getUpline(up);\r\n        }\r\n    }\r\n\r\n    function userInfo(address _addr)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 for_withdraw,\r\n            uint256 total_invested,\r\n            uint256 total_withdrawn,\r\n            uint256 total_match_bonus,\r\n            uint256[BONUS_LINES_COUNT] memory structure\r\n        )\r\n    {\r\n        RoiUser storage player = roiUsers[_addr];\r\n\r\n        uint256 payout = this.payoutOf(_addr);\r\n\r\n        for (uint8 i = 0; i < ref_bonuses.length; i++) {\r\n            structure[i] = player.structure[i];\r\n        }\r\n\r\n        return (\r\n            payout + player.dividends + player.match_bonus,\r\n            player.total_invested,\r\n            player.total_withdrawn,\r\n            player.total_match_bonus,\r\n            structure\r\n        );\r\n    }\r\n\r\n    function contractInfo()\r\n        external\r\n        view\r\n        returns (\r\n            uint256 _invested,\r\n            uint256 _withdrawn,\r\n            uint256 _match_bonus\r\n        )\r\n    {\r\n        return (invested, withdrawn, match_bonus);\r\n    }\r\n\r\n    function getUpline(address _user) public view returns (address) {\r\n        return POOL_CONTRACT(poolContract).viewUserReferral(_user);\r\n    }\r\n\r\n    function checkUserExist(address _user) public view returns (bool) {\r\n        return POOL_CONTRACT(poolContract).checkUserExist(_user);\r\n    }\r\n\r\n    function getDepositeList(address _user) external view returns(Deposit[] memory deposits)\r\n    {\r\n        return roiUsers[_user].deposits;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MatchPayout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NewDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolno\",\"type\":\"uint256\"}],\"name\":\"getMoneyForPoolLevelEventReinvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"regLevelEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Payment_Received_List_Pool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"checkUserExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_invested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_match_bonus\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currUserID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositByPoolPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getDepositeList\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"time\",\"type\":\"uint40\"}],\"internalType\":\"struct AIMaticpoolROI.Deposit[]\",\"name\":\"deposits\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUpline\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"match_bonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"payoutOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ref_bonuses\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"roiUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dividends\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"match_bonus\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"last_payout\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"total_invested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total_withdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total_match_bonus\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"for_withdraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total_invested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total_withdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total_match_bonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256[5]\",\"name\":\"structure\",\"type\":\"uint256[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "AIMaticpoolROI", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000549c4ebb68e8113d53e4e161157ff22f0fe6c60000000000000000000000000aba79c6a6f1fbcb512324ea93359af850b83dd8700000000000000000000000066cd28f3f2ca6ff216190d8d2d2fa24c9c2899e4", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c01448e8104f473e84232c4cbcdf4421d404fcae1397fb65763b2aabd6d92596"}