{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0;\r\n\r\nstruct UserInfo { \r\n        address    owner;\r\n        address    recommend;\r\n        address[]  under;\r\n        bool       white;\r\n        uint256    amount;\r\n        uint256[3] team;\r\n        uint256    hasten;\r\n        uint256    releaseAmount;\r\n        uint256    released;\r\n        uint256[2] reward;\r\n        uint256    releasFinish;\r\n        uint256    lastTime;\r\n        uint256    ethAmount;\r\n        uint256    vip;\r\n        uint256[4][]  depositList;\r\n        uint256[2][]  withdrawList;\r\n        uint256[3][]  ethList;\r\n        uint256[3][]  neuList;\r\n        RecommendInfo[]  recommendList;\r\n    }\r\n    struct RecommendInfo { \r\n        address    recommend;\r\n        uint256    amount;\r\n        uint256    what;\r\n        uint256    time;\r\n    }\r\ninterface Neudonate{\r\n    function userDayTotal(address,uint) external view returns(uint);\r\n    function withdraw(address asses, uint256 amount, address ust) external;\r\n    function setRecommend(address usr,address recommender) external;\r\n    function getUsers() external view returns(address[] memory _users,uint length);\r\n    function getUserInfo(address usr) external view returns(UserInfo memory user);\r\n}\r\n\r\ncontract USERINFO  {\r\n\r\n    mapping (address => uint) public wards;\r\n    function rely(address usr) external  auth { wards[usr] = 1; }\r\n    function deny(address usr) external  auth { wards[usr] = 0; }\r\n    modifier auth {\r\n        require(wards[msg.sender] == 1, \"USERINFO/not-authorized\");\r\n        _;\r\n    }\r\n    Neudonate                                         public  neudonate = Neudonate(0x150c0560321b1d463c4D9Af8f6CA3965E7c76d94);\r\n    uint                                              public  len = 100;\r\n    constructor() {\r\n        wards[msg.sender] = 1;\r\n    }\r\n    function global(uint256 what, address usr,uint data) external auth {\r\n        if (what == 1) neudonate = Neudonate(usr);                           \r\n        else if (what == 2) len = data; \r\n        else revert(\"USERINFO/setdata-unrecognized-param\");\r\n    }\r\n    function getUserInfo(address usr) public view returns(UserInfo memory user){\r\n        user = neudonate.getUserInfo(usr);\r\n        user.owner = usr;\r\n        uint length = user.recommendList.length;\r\n        if(length >len) {\r\n            length = len;\r\n            RecommendInfo[]  memory List = new RecommendInfo[](length);\r\n            uint j=1;\r\n            for(uint i=length;i>0;i--) {\r\n                RecommendInfo memory list;\r\n                        list.recommend = user.recommendList[length-j].recommend;\r\n                        list.amount = user.recommendList[length-j].amount;\r\n                        list.what = user.recommendList[length-j].what;\r\n                        list.time = user.recommendList[length-j].time;\r\n                List[i-1] = list;\r\n                j++;\r\n            }\r\n            user.recommendList = List;\r\n        }\r\n    }\r\n    function getUsersForBatch(uint start,uint people) public view returns(UserInfo[] memory user){\r\n       (address[] memory users, uint length) = neudonate.getUsers();\r\n        if(start >= length) start = length -1;\r\n        user = new UserInfo[](people);\r\n        for(uint i =0;i<people;i++){\r\n           address usr = users[start-i];\r\n           user[i] = getUserInfo(usr);\r\n           if(start - i ==0) break;\r\n        }\r\n    }\r\n    function getUnderInfo(address usr) public view returns(UserInfo[] memory users,uint people,uint amounts,uint ethAmounts){\r\n        UserInfo memory user = getUserInfo(usr);\r\n        uint length = user.under.length;\r\n        people = length;\r\n        users = new UserInfo[](length);\r\n        for(uint i=0;i<length;++i) {\r\n            address under = user.under[i];\r\n            users[i] = getUserInfo(under);\r\n            amounts += users[i].amount;\r\n            ethAmounts += users[i].ethAmount;\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"getUnderInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recommend\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"under\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"white\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"team\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint256\",\"name\":\"hasten\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"released\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"reward\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"releasFinish\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vip\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4][]\",\"name\":\"depositList\",\"type\":\"uint256[4][]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"withdrawList\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256[3][]\",\"name\":\"ethList\",\"type\":\"uint256[3][]\"},{\"internalType\":\"uint256[3][]\",\"name\":\"neuList\",\"type\":\"uint256[3][]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recommend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"what\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct RecommendInfo[]\",\"name\":\"recommendList\",\"type\":\"tuple[]\"}],\"internalType\":\"struct UserInfo[]\",\"name\":\"users\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"people\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmounts\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recommend\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"under\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"white\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"team\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint256\",\"name\":\"hasten\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"released\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"reward\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"releasFinish\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vip\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4][]\",\"name\":\"depositList\",\"type\":\"uint256[4][]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"withdrawList\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256[3][]\",\"name\":\"ethList\",\"type\":\"uint256[3][]\"},{\"internalType\":\"uint256[3][]\",\"name\":\"neuList\",\"type\":\"uint256[3][]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recommend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"what\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct RecommendInfo[]\",\"name\":\"recommendList\",\"type\":\"tuple[]\"}],\"internalType\":\"struct UserInfo\",\"name\":\"user\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"people\",\"type\":\"uint256\"}],\"name\":\"getUsersForBatch\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recommend\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"under\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"white\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"team\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint256\",\"name\":\"hasten\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"released\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"reward\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"releasFinish\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vip\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4][]\",\"name\":\"depositList\",\"type\":\"uint256[4][]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"withdrawList\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256[3][]\",\"name\":\"ethList\",\"type\":\"uint256[3][]\"},{\"internalType\":\"uint256[3][]\",\"name\":\"neuList\",\"type\":\"uint256[3][]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recommend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"what\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct RecommendInfo[]\",\"name\":\"recommendList\",\"type\":\"tuple[]\"}],\"internalType\":\"struct UserInfo[]\",\"name\":\"user\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"what\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"global\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"len\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"neudonate\",\"outputs\":[{\"internalType\":\"contract Neudonate\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "USERINFO", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://604364132c9a50a8a5b80f31fa5ed23724c751a65e6fc840c59556ff54913505"}