{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 9999\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"contracts/Account.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0\\n\\npragma solidity ^0.8.10;\\n\\ncontract Account {  \\n\\n\\n  // mapping of player wallet => name of player (in bytes32, may show up as hexidecimal in javascript)\\n  mapping(address => bytes32) public name;\\n\\n  // error for when the user already has a name\\n  error NameAlreadyExists();\\n\\n\\n  /////////////////////////////////////////////////////////////////////////////////\\n  //                                USER INTERFACE                               //\\n  /////////////////////////////////////////////////////////////////////////////////\\n\\n\\n  // assign a bytes32 username to the players wallet. Can only be called once. Names are immutable.\\n  function register(bytes32 name_) external {\\n    \\n    // if the player already has a name, throw an error\\n    if ( name[msg.sender] != bytes32(0) ) { revert NameAlreadyExists(); }\\n\\n    // register the player's name in the name map\\n    name[msg.sender] = name_;\\n  }\\n}\"\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"NameAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Account", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "9999", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv2", "Proxy": "0", "Implementation": "", "SwarmSource": ""}