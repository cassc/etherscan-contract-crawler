{"SourceCode": "// SPDX-License-Identifier: LGPL-3.0-only\r\npragma solidity ^0.8.12;\r\n\r\n/**\r\n * A wrapper factory contract to deploy SmartAccount as an Account-Abstraction wallet contract.\r\n */\r\ninterface ISmartAccountProxy {\r\n    function masterCopy() external view returns (address);\r\n}\r\n\r\n/// @title SmartAccountProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\r\ncontract SmartAccountProxy is ISmartAccountProxy {\r\n    // singleton always needs to be first declared variable, to ensure that it is at the same location in the contracts to which calls are delegated.\r\n    // To reduce deployment costs this variable is internal and needs to be retrieved via `getStorageAt`\r\n    address internal singleton;\r\n\r\n    /// @dev Constructor function sets address of singleton contract.\r\n    /// @param _singleton Singleton address.\r\n    function initialize(address _singleton, bytes memory _initdata) external {\r\n        require(singleton == address(0), \"Initialized already\");\r\n        require(_singleton != address(0), \"Invalid singleton address provided\");\r\n        singleton = _singleton;\r\n\r\n        (bool success,) = _singleton.delegatecall(_initdata);\r\n        require(success, \"init failed\");\r\n    }\r\n\r\n    function masterCopy() external view returns (address) {\r\n        return singleton;\r\n    }\r\n\r\n    /// @dev Fallback function forwards all transactions and returns all received return data.\r\n    fallback() external payable {\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            let _singleton := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\r\n            calldatacopy(0, 0, calldatasize())\r\n            let success := delegatecall(gas(), _singleton, 0, calldatasize(), 0, 0)\r\n            returndatacopy(0, 0, returndatasize())\r\n            if eq(success, 0) { revert(0, returndatasize()) }\r\n            return(0, returndatasize())\r\n        }\r\n    }\r\n}", "ABI": "[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_initdata\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterCopy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SmartAccountProxy", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU LGPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4562a53397a5ec95ae3a45e3c739fc82314f87e701a71907f89ebfd3656322ef"}