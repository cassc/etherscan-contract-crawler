{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/SimpleFaucet.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.3;\\n\\ncontract SimpleFaucet {\\n    event DonationReceived(address sender, uint256 amount);\\n    event LockPeriodSet(uint256 amount);\\n    event DistributionAmountSet(uint256 amount);\\n    event AmountAllowedSet(uint256 amount);\\n    event TokensDistributed(address receiver, uint256 amount);\\n\\n    address internal owner;\\n    uint256 internal distributionAmount = 20000000000000000; //0.02\\n    uint256 internal lockPeriod = 86400; // 24 hours\\n\\n    mapping(address => uint256) internal unlockTime;\\n    mapping(address => bool) internal approvedCallers;\\n\\n    constructor() payable {\\n        owner = msg.sender;\\n        approvedCallers[msg.sender] = true;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"SF:E-001\\\");\\n        _;\\n    }\\n\\n    modifier onlyApprovedCallers() {\\n        require(approvedCallers[msg.sender], \\\"SF:E-002\\\");\\n        _;\\n    }\\n\\n    function setOwner(address newOwner) external onlyOwner {\\n        owner = newOwner;\\n    }\\n\\n    function setApprovedCallers(address newApprovedCaller) external onlyOwner {\\n        approvedCallers[newApprovedCaller] = true;\\n    }\\n\\n    function setDistributionAmount(uint256 newDistributionAmount)\\n        external\\n        onlyOwner\\n    {\\n        distributionAmount = newDistributionAmount;\\n        emit DistributionAmountSet(newDistributionAmount);\\n    }\\n\\n    function setLockPeriod(uint256 newLockPeriod) external onlyOwner {\\n        lockPeriod = newLockPeriod;\\n        emit LockPeriodSet(newLockPeriod);\\n    }\\n\\n    function distributeTokens(address[] memory receivers)\\n        public\\n        payable\\n        onlyApprovedCallers\\n    {\\n        require(receivers.length <= 100, \\\"SF:E-003\\\");\\n        for (uint256 i = 0; i < receivers.length; ) {\\n            require(block.timestamp > unlockTime[receivers[i]], \\\"SF:E-004\\\");\\n            require(address(this).balance >= distributionAmount, \\\"SF:E-005\\\");\\n            unlockTime[receivers[i]] = block.timestamp + lockPeriod;\\n            payable(receivers[i]).transfer(distributionAmount);\\n\\n            unchecked {\\n                i++;\\n            }\\n        }\\n    }\\n\\n    function getOwner() external view returns (address) {\\n        return owner;\\n    }\\n\\n    function getApprovedCaller(address caller) external view returns (bool) {\\n        return approvedCallers[caller];\\n    }\\n\\n    function getDistributionAmount() external view returns (uint256) {\\n        return distributionAmount;\\n    }\\n\\n    function getLockPeriod() external view returns (uint256) {\\n        return lockPeriod;\\n    }\\n\\n    function getUnlockTime(address account) external view returns (uint256) {\\n        return unlockTime[account];\\n    }\\n\\n    receive() external payable {\\n        emit DonationReceived(msg.sender, msg.value);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AmountAllowedSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DistributionAmountSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DonationReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LockPeriodSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"}],\"name\":\"distributeTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"getApprovedCaller\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDistributionAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getUnlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newApprovedCaller\",\"type\":\"address\"}],\"name\":\"setApprovedCallers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDistributionAmount\",\"type\":\"uint256\"}],\"name\":\"setDistributionAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLockPeriod\",\"type\":\"uint256\"}],\"name\":\"setLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "SimpleFaucet", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}