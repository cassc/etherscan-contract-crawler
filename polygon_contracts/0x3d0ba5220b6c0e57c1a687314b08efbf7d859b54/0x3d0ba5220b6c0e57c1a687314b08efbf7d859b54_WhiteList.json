{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/apps/saft/contracts/WhiteList.sol\": {\r\n      \"content\": \"/*\\n * SPDX-License-Identitifer:    GPL-3.0-or-later\\n */\\npragma experimental ABIEncoderV2;\\npragma solidity 0.4.24;\\n\\nimport \\\"../../../lib/ArrayUtils2.sol\\\";\\n\\ncontract WhiteList  {\\n    using ArrayUtils2 for address[];\\n    address owner;\\n    mapping(address => bool) public whiteListAdded; \\n    address[] internal whiteList; \\n\\n    event ParticipantAdded(address _participant);\\n    event ParticipantRemoved(address _participant);\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"NOT_THE_OWNER\\\");\\n        _;\\n    }\\n    constructor(){\\n        owner = msg.sender;\\n    }\\n    function addParticipants(address[] _participant) onlyOwner public  {\\n        for (uint256 i = 0; i < _participant.length; i++) {\\n            _addParticipant(_participant[i]);\\n        }\\n    }\\n\\n    function _addParticipant(address _participant) internal {\\n        require(whiteList.length < 20, \\\"LIST FULL\\\");\\n        require(!whiteListAdded[_participant], \\\"ALREADY ADDED\\\");\\n\\n        whiteListAdded[_participant] = true;\\n        whiteList.push(_participant);\\n        emit ParticipantAdded(_participant);\\n    }\\n\\n    function addParticipant(address _participant) onlyOwner public {\\n        _addParticipant(_participant);\\n    }\\n    \\n    function fromWhiteList(address _participant) view public returns(bool){\\n        return whiteListAdded[_participant];\\n    }\\n\\n    function removeParticipant(address _participant) onlyOwner external {\\n        require(whiteListAdded[_participant], \\\"ERROR_TOKEN_NOT_ADDED\\\");\\n        whiteListAdded[_participant] = false;\\n        whiteList.deleteItem(_participant);\\n        emit ParticipantRemoved(_participant);\\n    }\\n\\n\\n}\\n\"\r\n    },\r\n    \"contracts/lib/ArrayUtils2.sol\": {\r\n      \"content\": \"pragma solidity ^0.4.24;\\n\\nlibrary ArrayUtils2 {\\n    function deleteItem(address[] storage self, address item)\\n        internal\\n        returns (bool)\\n    {\\n        uint256 length = self.length;\\n        for (uint256 i = 0; i < length; i++) {\\n            if (self[i] == item) {\\n                uint256 newLength = self.length - 1;\\n                if (i != newLength) {\\n                    self[i] = self[newLength];\\n                }\\n\\n                delete self[newLength];\\n                self.length = newLength;\\n\\n                return true;\\n            }\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 10\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteListAdded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address[]\"}],\"name\":\"addParticipants\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"removeParticipant\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"fromWhiteList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"addParticipant\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"ParticipantAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"ParticipantRemoved\",\"type\":\"event\"}]", "ContractName": "WhiteList", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "1", "Runs": "10", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}