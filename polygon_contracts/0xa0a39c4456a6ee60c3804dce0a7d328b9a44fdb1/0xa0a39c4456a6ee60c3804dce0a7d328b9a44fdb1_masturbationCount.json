{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13;\r\n\r\nerror  Does_Not_Record_Your_Masturbation_Count();\r\n\r\ncontract masturbationCount{\r\n\r\n    address owner ;\r\n    uint times;\r\n    uint dateOfStartOfCountDown;\r\n\r\n    constructor(){\r\n        owner = msg.sender;\r\n        times = 0;\r\n        dateOfStartOfCountDown = block.timestamp;\r\n    }\r\n\r\n     modifier onlyOwner() {\r\n        if (msg.sender != owner) {\r\n            revert Does_Not_Record_Your_Masturbation_Count();\r\n        }\r\n        _;\r\n    }\r\n\r\n    function increment()external onlyOwner{\r\n        times++;\r\n    }\r\n\r\n    function getTimes()external  view  returns(uint){\r\n        return times;\r\n    }\r\n    \r\n    function getCountdownStartDate()external  view  returns(uint){\r\n        return dateOfStartOfCountDown;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Does_Not_Record_Your_Masturbation_Count\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"getCountdownStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "masturbationCount", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0fe6b6c8696c8da6c9a83e1a3bae46beb6f9855222d443e5f077de24e50a1e9d"}