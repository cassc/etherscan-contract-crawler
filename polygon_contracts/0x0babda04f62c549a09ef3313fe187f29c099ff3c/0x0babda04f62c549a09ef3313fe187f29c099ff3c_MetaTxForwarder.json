{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.12;\r\n\r\n\r\ncontract MetaTxForwarder {\r\n    /**\r\n    * @notice Create the contract\r\n    */\r\n    constructor() public { }\r\n\r\n    /**\r\n    * @notice Forward a call\r\n    * @param _target - target address to call\r\n    * @param _data - call data to be used\r\n    * @return response in bytes if any\r\n    */\r\n    function forwardMetaTx(address _target, bytes calldata _data) external payable returns (bytes memory) {\r\n       (bool success, bytes memory res) = _target.call{value: msg.value}(_data);\r\n\r\n       require(success, \"MetaTxForwarder#forwardMetaTx:  CALL_FAILED\");\r\n\r\n       return res;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"forwardMetaTx\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "MetaTxForwarder", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7da80e91ffe96cc0ca8319b7a1361edc3ba04b31ec4784250a5fa64e8985bf9c"}