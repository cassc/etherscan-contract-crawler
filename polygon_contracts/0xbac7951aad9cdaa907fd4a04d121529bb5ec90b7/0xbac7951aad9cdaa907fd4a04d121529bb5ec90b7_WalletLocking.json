{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract WalletLocking{\r\n    mapping(address => uint256) private walletsLocked;\r\n\r\n    event Lock(address indexed owner, uint256 lockedUntil);\r\n\r\n    function lock() external {\r\n        walletsLocked[msg.sender] = block.timestamp;\r\n        emit Lock(msg.sender, block.timestamp);\r\n    }\r\n\r\n    function getWalletLock(address owner) public view returns(uint256){\r\n        return walletsLocked[owner];\r\n    }\r\n\r\n\r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedUntil\",\"type\":\"uint256\"}],\"name\":\"Lock\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getWalletLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "WalletLocking", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://821964eabf9f31c46d5324c8aeaa1fb3a089ba2d0fe1d4d747e88ed1e57ee842"}