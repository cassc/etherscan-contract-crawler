{"SourceCode": "// SPDX-License-Identifier: LGPL-3.0-only\r\npragma solidity >=0.7.0 <0.8.0;\r\n\r\ncontract DelegateRegistry {\r\n    \r\n    // The first key is the delegator and the second key a id. \r\n    // The value is the address of the delegate \r\n    mapping (address => mapping (bytes32 => address)) public delegation;\r\n    \r\n    // Using these events it is possible to process the events to build up reverse lookups.\r\n    // The indeces allow it to be very partial about how to build this lookup (e.g. only for a specific delegate).\r\n    event SetDelegate(address indexed delegator, bytes32 indexed id, address indexed delegate);\r\n    event ClearDelegate(address indexed delegator, bytes32 indexed id, address indexed delegate);\r\n    \r\n    /// @dev Sets a delegate for the msg.sender and a specific id.\r\n    ///      The combination of msg.sender and the id can be seen as a unique key.\r\n    /// @param id Id for which the delegate should be set\r\n    /// @param delegate Address of the delegate\r\n    function setDelegate(bytes32 id, address delegate) public {\r\n        require (delegate != msg.sender, \"Can't delegate to self\");\r\n        require (delegate != address(0), \"Can't delegate to 0x0\");\r\n        address currentDelegate = delegation[msg.sender][id];\r\n        require (delegate != currentDelegate, \"Already delegated to this address\");\r\n        \r\n        // Update delegation mapping\r\n        delegation[msg.sender][id] = delegate;\r\n        \r\n        if (currentDelegate != address(0)) {\r\n            emit ClearDelegate(msg.sender, id, currentDelegate);\r\n        }\r\n\r\n        emit SetDelegate(msg.sender, id, delegate);\r\n    }\r\n    \r\n    /// @dev Clears a delegate for the msg.sender and a specific id.\r\n    ///      The combination of msg.sender and the id can be seen as a unique key.\r\n    /// @param id Id for which the delegate should be set\r\n    function clearDelegate(bytes32 id) public {\r\n        address currentDelegate = delegation[msg.sender][id];\r\n        require (currentDelegate != address(0), \"No delegate set\");\r\n        \r\n        // update delegation mapping\r\n        delegation[msg.sender][id] = address(0);\r\n        \r\n        emit ClearDelegate(msg.sender, id, currentDelegate);\r\n    }\r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"ClearDelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"SetDelegate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"clearDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DelegateRegistry", "CompilerVersion": "v0.7.2+commit.51b20bc0", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "petersburg", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://b6cd5a8d04426e1189563fbec7dfec4ba70090dc70fe05097a137991fe1b3969"}