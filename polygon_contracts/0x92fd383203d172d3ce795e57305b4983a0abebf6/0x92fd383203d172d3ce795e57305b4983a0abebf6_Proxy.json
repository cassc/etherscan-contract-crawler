{"SourceCode": "// Sources flattened with hardhat v2.12.7 https://hardhat.org\r\n\r\n// File contracts/smart-contract-wallet/Proxy.sol\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\n/**\r\n * @title Proxy // This is the user's Smart Account\r\n * @notice Basic proxy that delegates all calls to a fixed implementation contract.\r\n * @dev    Implementation address is stored in the slot defined by the Proxy's address\r\n */\r\ncontract Proxy {\r\n    constructor(address _implementation) {\r\n        require(\r\n            _implementation != address(0),\r\n            \"Invalid implementation address\"\r\n        );\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            sstore(address(), _implementation)\r\n        }\r\n    }\r\n\r\n    fallback() external payable {\r\n        address target;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            target := sload(address())\r\n            calldatacopy(0, 0, calldatasize())\r\n            let result := delegatecall(gas(), target, 0, calldatasize(), 0, 0)\r\n            returndatacopy(0, 0, returndatasize())\r\n            switch result\r\n            case 0 {\r\n                revert(0, returndatasize())\r\n            }\r\n            default {\r\n                return(0, returndatasize())\r\n            }\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "Proxy", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "800", "ConstructorArguments": "000000000000000000000000263ed676d58b598e03bdda82d7a268d6acbd4824", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://a7977748230fa5c96134083773f708cfbe78723c07e58051ac6bd8c4877a4d5a"}