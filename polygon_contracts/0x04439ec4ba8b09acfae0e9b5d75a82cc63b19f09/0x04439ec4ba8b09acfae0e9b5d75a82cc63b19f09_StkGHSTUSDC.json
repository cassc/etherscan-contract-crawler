{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.7.6;\r\npragma experimental ABIEncoderV2;\r\n\r\nstruct AppStorage {\r\n    uint256 totalSupply;\r\n    mapping(address => uint256) accounts;\r\n    mapping(address => mapping(address => uint256)) allowances;\r\n    address minter;\r\n}\r\n\r\ncontract StkGHSTUSDC {\r\n    AppStorage s;\r\n\r\n    uint256 constant MAX_UINT = uint256(-1);\r\n\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n    constructor(address _minter) {\r\n        s.minter = _minter;\r\n    }\r\n\r\n    function setMinter(address _newMinter) external {\r\n        require(msg.sender == s.minter, \"Must be minter to change minter\");\r\n        s.minter = _newMinter;\r\n    }\r\n\r\n    function name() external pure returns (string memory) {\r\n        return \"Staked GHST-USDC LP\";\r\n    }\r\n\r\n    function symbol() external pure returns (string memory) {\r\n        return \"stkGHST-USDC\";\r\n    }\r\n\r\n    function decimals() external pure returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return s.totalSupply;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance_) {\r\n        balance_ = s.accounts[_owner];\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        uint256 frombalance = s.accounts[msg.sender];\r\n        require(frombalance >= _value, \"Not enough GHSTStakingToken to transfer\");\r\n        s.accounts[msg.sender] = frombalance - _value;\r\n        s.accounts[_to] += _value;\r\n        emit Transfer(msg.sender, _to, _value);\r\n        success = true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    ) public returns (bool success) {\r\n        uint256 fromBalance = s.accounts[_from];\r\n        if (msg.sender != _from) {\r\n            uint256 l_allowance = s.allowances[_from][msg.sender];\r\n            require(l_allowance >= _value, \"Allowance not great enough to transfer GHSTStakingToken\");\r\n            if (l_allowance != MAX_UINT) {\r\n                s.allowances[_from][msg.sender] = l_allowance - _value;\r\n                emit Approval(_from, msg.sender, l_allowance - _value);\r\n            }\r\n        }\r\n        require(fromBalance >= _value, \"Not enough GHSTStakingToken to transfer\");\r\n        s.accounts[_from] = fromBalance - _value;\r\n        s.accounts[_to] += _value;\r\n        emit Transfer(_from, _to, _value);\r\n        success = true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success_) {\r\n        s.allowances[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        success_ = true;\r\n    }\r\n\r\n    function increaseAllowance(address _spender, uint256 _value) external returns (bool success) {\r\n        uint256 l_allowance = s.allowances[msg.sender][_spender];\r\n        uint256 newAllowance = l_allowance + _value;\r\n        require(newAllowance >= l_allowance, \"GHSTStakingToken allowance increase overflowed\");\r\n        s.allowances[msg.sender][_spender] = newAllowance;\r\n        emit Approval(msg.sender, _spender, newAllowance);\r\n        success = true;\r\n    }\r\n\r\n    function decreaseAllowance(address _spender, uint256 _value) external returns (bool success) {\r\n        uint256 l_allowance = s.allowances[msg.sender][_spender];\r\n        require(l_allowance >= _value, \"GHSTStakingToken allowance decreased below 0\");\r\n        l_allowance -= _value;\r\n        s.allowances[msg.sender][_spender] = l_allowance;\r\n        emit Approval(msg.sender, _spender, l_allowance);\r\n        success = true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining_) {\r\n        remaining_ = s.allowances[_owner][_spender];\r\n    }\r\n\r\n    function mint(address _to, uint256 _amount) external {\r\n        require(msg.sender == s.minter, \"Must be minter to mint\");\r\n        s.accounts[_to] += _amount;\r\n        s.totalSupply += _amount;\r\n        emit Transfer(address(0), msg.sender, _amount);\r\n    }\r\n\r\n    function burn(address _to, uint256 _amount) external {\r\n        require(msg.sender == s.minter, \"Must be minter to mint\");\r\n        uint256 bal = s.accounts[_to];\r\n        require(bal >= _amount, \"Can't burn more than person has\");\r\n        s.accounts[_to] = bal - _amount;\r\n        s.totalSupply -= _amount;\r\n        emit Transfer(address(0), msg.sender, _amount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMinter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "StkGHSTUSDC", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "1", "Runs": "20000", "ConstructorArguments": "000000000000000000000000a02d547512bb90002807499f05495fe9c4c3943f", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2120fa3cad1e052c105d9066a34fe89e27d7a911d92d369913e2c0aa1e08a831"}