{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/cuwz/Desktop/bsc/cr/rage/contracts/ClaimAggregator.sol\": {\r\n      \"content\": \"pragma solidity =0.6.6;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./interfaces/IBorrowable.sol\\\";\\nimport \\\"./interfaces/IFarmingPool.sol\\\";\\n\\ncontract ClaimAggregator {\\n\\n\\tconstructor () public {}\\n\\t\\n\\tfunction trackBorrows(address account, address[] calldata borrowables) external {\\n\\t\\tfor (uint i = 0; i < borrowables.length; i++) {\\n\\t\\t\\tIBorrowable(borrowables[i]).trackBorrow(account);\\n\\t\\t}\\n\\t}\\n\\t\\n\\tfunction claims(address account, address[] calldata farmingPools) external returns (uint amount) {\\n\\t\\tfor (uint i = 0; i < farmingPools.length; i++) {\\n\\t\\t\\tamount += IFarmingPool(farmingPools[i]).claimAccount(account);\\n\\t\\t}\\n\\t}\\n\\n}\"\r\n    },\r\n    \"/Users/cuwz/Desktop/bsc/cr/rage/contracts/interfaces/IBorrowable.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\n\\ninterface IBorrowable {\\n\\n\\t/*** YampFinance ERC20 ***/\\n\\t\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\n\\t\\n\\tfunction name() external pure returns (string memory);\\n\\tfunction symbol() external pure returns (string memory);\\n\\tfunction decimals() external pure returns (uint8);\\n\\tfunction totalSupply() external view returns (uint);\\n\\tfunction balanceOf(address owner) external view returns (uint);\\n\\tfunction allowance(address owner, address spender) external view returns (uint);\\n\\tfunction approve(address spender, uint value) external returns (bool);\\n\\tfunction transfer(address to, uint value) external returns (bool);\\n\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\n\\t\\n\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\tfunction nonces(address owner) external view returns (uint);\\n\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\t\\n\\t/*** Pool Token ***/\\n\\t\\n\\tevent Mint(address indexed sender, address indexed minter, uint mintAmount, uint mintTokens);\\n\\tevent Redeem(address indexed sender, address indexed redeemer, uint redeemAmount, uint redeemTokens);\\n\\tevent Sync(uint totalBalance);\\n\\t\\n\\tfunction underlying() external view returns (address);\\n\\tfunction factory() external view returns (address);\\n\\tfunction totalBalance() external view returns (uint);\\n\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\n\\n\\tfunction exchangeRate() external returns (uint);\\n\\tfunction mint(address minter) external returns (uint mintTokens);\\n\\tfunction redeem(address redeemer) external returns (uint redeemAmount);\\n\\tfunction skim(address to) external;\\n\\tfunction sync() external;\\n\\t\\n\\tfunction _setFactory() external;\\n\\t\\n\\t/*** Borrowable ***/\\n\\n\\tevent BorrowApproval(address indexed owner, address indexed spender, uint value);\\n\\tevent Borrow(address indexed sender, address indexed borrower, address indexed receiver, uint borrowAmount, uint repayAmount, uint accountBorrowsPrior, uint accountBorrows, uint totalBorrows);\\n\\tevent Liquidate(address indexed sender, address indexed borrower, address indexed liquidator, uint seizeTokens, uint repayAmount, uint accountBorrowsPrior, uint accountBorrows, uint totalBorrows);\\n\\t\\n\\tfunction BORROW_FEE() external pure returns (uint);\\n\\tfunction collateral() external view returns (address);\\n\\tfunction reserveFactor() external view returns (uint);\\n\\tfunction exchangeRateLast() external view returns (uint);\\n\\tfunction borrowIndex() external view returns (uint);\\n\\tfunction totalBorrows() external view returns (uint);\\n\\tfunction borrowAllowance(address owner, address spender) external view returns (uint);\\n\\tfunction borrowBalance(address borrower) external view returns (uint);\\t\\n\\tfunction borrowTracker() external view returns (address);\\n\\t\\n\\tfunction BORROW_PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\tfunction borrowApprove(address spender, uint256 value) external returns (bool);\\n\\tfunction borrowPermit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\tfunction borrow(address borrower, address receiver, uint borrowAmount, bytes calldata data) external;\\n\\tfunction liquidate(address borrower, address liquidator) external returns (uint seizeTokens);\\n\\tfunction trackBorrow(address borrower) external;\\n\\t\\n\\t/*** Borrowable Interest Rate Model ***/\\n\\n\\tevent AccrueInterest(uint interestAccumulated, uint borrowIndex, uint totalBorrows);\\n\\tevent CalculateKink(uint kinkRate);\\n\\tevent CalculateBorrowRate(uint borrowRate);\\n\\t\\n\\tfunction KINK_BORROW_RATE_MAX() external pure returns (uint);\\n\\tfunction KINK_BORROW_RATE_MIN() external pure returns (uint);\\n\\tfunction KINK_MULTIPLIER() external pure returns (uint);\\n\\tfunction borrowRate() external view returns (uint);\\n\\tfunction kinkBorrowRate() external view returns (uint);\\n\\tfunction kinkUtilizationRate() external view returns (uint);\\n\\tfunction adjustSpeed() external view returns (uint);\\n\\tfunction rateUpdateTimestamp() external view returns (uint32);\\n\\tfunction accrualTimestamp() external view returns (uint32);\\n\\t\\n\\tfunction accrueInterest() external;\\n\\t\\n\\t/*** Borrowable Setter ***/\\n\\n\\tevent NewReserveFactor(uint newReserveFactor);\\n\\tevent NewKinkUtilizationRate(uint newKinkUtilizationRate);\\n\\tevent NewAdjustSpeed(uint newAdjustSpeed);\\n\\tevent NewBorrowTracker(address newBorrowTracker);\\n\\n\\tfunction RESERVE_FACTOR_MAX() external pure returns (uint);\\n\\tfunction KINK_UR_MIN() external pure returns (uint);\\n\\tfunction KINK_UR_MAX() external pure returns (uint);\\n\\tfunction ADJUST_SPEED_MIN() external pure returns (uint);\\n\\tfunction ADJUST_SPEED_MAX() external pure returns (uint);\\n\\t\\n\\tfunction _initialize (\\n\\t\\tstring calldata _name, \\n\\t\\tstring calldata _symbol,\\n\\t\\taddress _underlying, \\n\\t\\taddress _collateral\\n\\t) external;\\n\\tfunction _setReserveFactor(uint newReserveFactor) external;\\n\\tfunction _setKinkUtilizationRate(uint newKinkUtilizationRate) external;\\n\\tfunction _setAdjustSpeed(uint newAdjustSpeed) external;\\n\\tfunction _setBorrowTracker(address newBorrowTracker) external;\\n}\"\r\n    },\r\n    \"/Users/cuwz/Desktop/bsc/cr/rage/contracts/interfaces/IFarmingPool.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\n\\ninterface IFarmingPool {\\n\\tfunction yamp() external pure returns (address);\\n\\tfunction claimable() external pure returns (address);\\n\\tfunction borrowable() external pure returns (address);\\n\\tfunction vestingBegin() external pure returns (uint);\\n\\tfunction segmentLength() external pure returns (uint);\\n\\tfunction recipients(address) external view returns (uint shares, uint lastShareIndex, uint credit);\\n\\tfunction totalShares() external view returns (uint);\\n\\tfunction shareIndex() external view returns (uint);\\n\\tfunction epochBegin() external view returns (uint);\\n\\tfunction epochAmount() external view returns (uint);\\n\\tfunction lastUpdate() external view returns (uint);\\n\\t\\n\\tfunction updateShareIndex() external returns (uint _shareIndex);\\n\\tfunction updateCredit(address account) external returns (uint credit);\\n\\tfunction advance() external;\\n\\tfunction claim() external returns (uint amount);\\n\\tfunction claimAccount(address account) external returns (uint amount);\\n\\tfunction trackBorrow(address borrower, uint borrowBalance, uint borrowIndex) external;\\n\\t\\n\\tevent UpdateShareIndex(uint shareIndex);\\n\\tevent UpdateCredit(address indexed account, uint lastShareIndex, uint credit);\\n\\tevent Claim(address indexed account, uint amount);\\n\\tevent EditRecipient(address indexed account, uint shares, uint totalShares);\\n\\tevent Advance(uint epochBegin, uint epochAmount);\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 999999\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"farmingPools\",\"type\":\"address[]\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"borrowables\",\"type\":\"address[]\"}],\"name\":\"trackBorrows\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ClaimAggregator", "CompilerVersion": "v0.6.6+commit.6c089d02", "OptimizationUsed": "1", "Runs": "999999", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}