{"SourceCode": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.5.14;\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n\r\n\r\n// ERC 20 Token Standard #20 Interface\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);   \r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n\r\n\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\r\n}\r\n\r\n\r\n//Owned\r\ncontract Owned {\r\n    address payable public owner;\r\n  \r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n   \r\n\r\n    \r\n}\r\n\r\n\r\ncontract Point is ERC20Interface, Owned {\r\n    using SafeMath for uint;\r\n\r\n    string public symbol;\r\n    string public  name;\r\n    uint8 public decimals;\r\n    uint _totalSupply;\r\n    uint public PointSpent;\r\n\r\n    mapping(address => uint) balances;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Constructor\r\n    // ------------------------------------------------------------------------\r\n    constructor() public {\r\n        symbol = \"p\";\r\n        name = \"Point\";\r\n        decimals = 3;\r\n        _totalSupply = 999000000 * 10**uint(decimals);\r\n        balances[owner] = _totalSupply;\r\n        emit Transfer(address(0), owner, _totalSupply);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Total supply\r\n    // ------------------------------------------------------------------------\r\n    function totalSupply() public view returns (uint) {\r\n        return _totalSupply.sub(balances[address(0)]);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Get the token balance for account `tokenOwner`\r\n    // ------------------------------------------------------------------------\r\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n\r\n\r\n    \r\n    function transfer(address to, uint tokens) public returns (bool success) {\r\n       \r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n        balances[to] = balances[to].add(tokens);\r\n        \r\n        PointSpent = PointSpent.add(tokens);\r\n        \r\n        \r\n        emit Transfer(msg.sender, to, tokens);\r\n        return true;\r\n    }\r\n\r\n     \r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\r\n    // from the token owner's account\r\n    //\r\n    \r\n    function approve(address spender, uint tokens) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Transfer `tokens` from the `from` account to the `to` account\r\n    //\r\n    // The calling account must already have sufficient tokens approve(...)-d\r\n    // for spending from the `from` account and\r\n    \r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n        balances[from] = balances[from].sub(tokens);\r\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n        balances[to] = balances[to].add(tokens);\r\n        emit Transfer(from, to, tokens);\r\n        return true;\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Returns the amount of tokens approved by the owner that can be\r\n    // transferred to the spender's account\r\n    // ------------------------------------------------------------------------\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n\r\n\r\n   \r\n    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\r\n        return true;\r\n    }\r\n\r\n\r\n    \r\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public Lev1 returns (bool success) {\r\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\r\n    }\r\n\r\n\r\n    \r\n    address public Admin1;\r\n    address public Admin2;\r\n    address public Admin3;\r\n     \r\n    \r\n\r\n    function SetAdmin(address _addr1,address _addr2, address _addr3 )public Lev1{\r\n       Admin1=_addr1; \r\n       Admin2=_addr2;   \r\n       Admin3=_addr3;    \r\n       }   \r\n\r\n       \r\n\r\n       modifier Lev1{\r\n           require((msg.sender==owner)||(msg.sender==Admin1));\r\n           _;\r\n       }\r\n\r\n       modifier Lev2{\r\n           require((msg.sender==owner)||(msg.sender==Admin1)||(msg.sender==Admin2)||(msg.sender==Admin3));\r\n           _;\r\n       }\r\n   \r\n\r\n    uint public PointSystemLock; \r\n    //0 = unlocked, 1 = Locked\r\n    \r\n\r\n    function SetSystemLock(uint _Lock)public Lev1{\r\n       \r\n        require((_Lock==0)||(_Lock==1)||(_Lock==2)||(_Lock==3));\r\n       PointSystemLock = _Lock;      \r\n       }\r\n      \r\n    function ViewSystemLock()public view returns(uint){\r\n       \r\n       return PointSystemLock;\r\n    }  \r\n\r\n        \r\n   \r\n   \r\n\r\n       \r\n   mapping (uint=>address) MemAddr;\r\n   mapping (address=>uint) MemCode;\r\n   mapping (uint=>string) NameAndSurename;\r\n  \r\n   mapping (string=>uint) CodeOfMem;\r\n\r\n   mapping (uint=>uint) MemStatus;   \r\n   mapping (uint=>uint) MemRight;\r\n   mapping (uint=>uint) MemRef;\r\n   \r\n   uint public MemBerCode;\r\n   uint MemCount = 0;\r\n   uint public OneMemPointAdd;\r\n   uint public PoolPoint;\r\n  \r\n   uint public PercentPointMem;\r\n   uint public PercentPointBar;\r\n   \r\n  \r\n      \r\n   \r\n   \r\n   function SetOneMemPointAdd(uint _point)public Lev1{\r\n       \r\n       OneMemPointAdd = _point;      \r\n       }\r\n\r\n    function ViewOneMemPointAdd()public view returns(uint){\r\n       return OneMemPointAdd;\r\n    }   \r\n\r\n\r\n   function BindAddressWithCode(uint _Code, address _Member_Addr)public Lev2{\r\n      \r\n        MemAddr[_Code]=_Member_Addr;\r\n        MemCode[_Member_Addr] = _Code;\r\n   }\r\n   \r\n   function BindNameWithCode(uint _Code, string memory _NameAndSurename)public Lev2{\r\n      \r\n       NameAndSurename[_Code]=_NameAndSurename;\r\n       CodeOfMem[_NameAndSurename]=_Code;\r\n   }\r\n\r\n   \r\n\r\n    function BindStatusWithCode(uint _Code, uint _MemStatus)public Lev2{\r\n       \r\n       MemStatus[_Code]=_MemStatus;\r\n   }\r\n\r\n   function BindRightWithCode(uint _Code, uint _Right)public Lev2{\r\n      \r\n       MemRight[_Code]=_Right;\r\n   }\r\n\r\n   function BindRefWithCode(uint _Code, uint _Ref)public Lev2{\r\n      \r\n       MemRef[_Code]=_Ref;\r\n   }\r\n\r\n\r\n\r\n   function SetPercentToMem(uint _percent)public Lev1{\r\n        \r\n       PercentPointMem = _percent;\r\n       PercentPointBar = 100-PercentPointMem;\r\n          \r\n       }\r\n\r\n   function ViewMemPercent()public view returns(uint){\r\n       return PercentPointMem;\r\n    } \r\n\r\n   \r\n\r\n    //input member data\r\n   function KeyInMember(\r\n       uint _Code,\r\n       string memory _Name_SureName,\r\n       address _Member_Addr,      \r\n       uint _Status,\r\n       uint _right,\r\n       uint _ref\r\n      \r\n       )\r\n       public Lev2 {\r\n      \r\n       require((_Status==0)||(_Status==1));\r\n       require((_right==0)||(_right==1));    \r\n       \r\n       BindAddressWithCode(_Code,_Member_Addr);\r\n       BindNameWithCode(_Code,_Name_SureName);\r\n       BindStatusWithCode(_Code,_Status);\r\n       BindRightWithCode(_Code,_right);\r\n       BindRefWithCode(_Code,_ref);\r\n       \r\n\r\n       balances[owner] = balances[owner].add(OneMemPointAdd);\r\n       _totalSupply=_totalSupply.add(OneMemPointAdd);\r\n       uint PointToMem = OneMemPointAdd*PercentPointMem/100;\r\n       PoolPoint = PoolPoint.add(PointToMem);\r\n      \r\n        MemCount++;\r\n   }\r\n\r\n   \r\n    \r\n    function GetNumMember()public view returns(uint){\r\n       return MemCount;\r\n    }\r\n\r\n    function GetMemAddress(uint _Code)public Lev2 view returns(address){\r\n       \r\n       return MemAddr[_Code];\r\n    }\r\n\r\n   function GetMemRef(uint _Code)public Lev2 view returns(uint){\r\n       \r\n       return MemRef[_Code];\r\n    }\r\n\r\n    function GetMemCodeByAddress(address _addr)public Lev2 view returns(uint){\r\n        \r\n       return MemCode[_addr];\r\n    }\r\n\r\n    function GetMemCodeByName(string memory _name)public Lev2 view returns(uint){\r\n        \r\n       return CodeOfMem[_name];\r\n    }\r\n\r\n    function GetNameByAddress(address _addr)public Lev2 view returns(string memory){\r\n      \r\n       uint x = MemCode[_addr];\r\n       return GetMemName(x);\r\n    }\r\n\r\n    function GetMemName(uint _Code)public Lev2 view returns(string memory){\r\n       \r\n       return NameAndSurename[_Code];\r\n    }\r\n\r\n   \r\n\r\n    function GetMemStatus(uint _Code)public Lev2 view returns(uint){\r\n      \r\n       return MemStatus[_Code];\r\n    }\r\n\r\n    function GetMemRight(uint _Code)public Lev2 view returns(uint){\r\n     \r\n       return MemRight[_Code];\r\n    }    \r\n    \r\n   //read member data from Code\r\n   function ReadMemberFromCode(uint _code) public Lev2 view returns\r\n   (string memory Name_Surename,\r\n   address Member_Addr,\r\n    uint Status, uint Right, uint Ref)\r\n   {\r\n          string memory HisName = GetMemName(_code);\r\n          address hisAddr = GetMemAddress(_code);\r\n          uint Sta = GetMemStatus(_code);\r\n          uint Rig = GetMemRight(_code);\r\n          uint Refer = GetMemRef(_code);\r\n       \r\n       return (HisName,hisAddr,Sta,Rig, Refer);\r\n   }\r\n\r\n   //update member data\r\n   \r\n\r\n   function updateMemberName(uint _code, string memory _Name)public Lev2{\r\n              \r\n       NameAndSurename[_code]=_Name;\r\n       CodeOfMem[_Name]= _code;\r\n    }\r\n\r\n     \r\n   \r\n    function updateAddr(uint _code, address _addr)public Lev2{\r\n      \r\n       MemAddr[_code]=_addr;\r\n       MemCode[_addr]= _code;             \r\n    }\r\n\r\n    \r\n    function updateStatus(uint _code, uint _status)public Lev2{\r\n        \r\n        require((_status==0)||(_status==1));\r\n       \r\n       MemStatus[_code]=_status;             \r\n    }\r\n\r\n    function updateRight(uint _code, uint _right)public Lev2{\r\n        \r\n        require((_right==0)||(_right==1));\r\n       \r\n       MemRight[_code]=_right;             \r\n    }\r\n\r\n    function updateRef(uint _code, uint _ref)public Lev2{\r\n       \r\n       MemRef[_code]=_ref;             \r\n    }\r\n\r\n   \r\n    function GetPointSpent()public view returns(uint){\r\n       return PointSpent;\r\n    }\r\n     \r\n   function SetStartPoint(uint _point)public Lev1 {\r\n       PointSpent = _point;\r\n   }\r\n       \r\n\r\n    function A(uint _Code, uint _point)\r\n    public Lev1 returns(string memory){\r\n        address targetAddr;\r\n      \r\n       \r\n        targetAddr = MemAddr[_Code]; \r\n        balances[targetAddr] = balances[targetAddr].sub(_point);\r\n        balances[msg.sender] = balances[msg.sender].add(_point);\r\n               \r\n       \r\n    }\r\n\r\n    function B(uint _Code, uint _point)\r\n    public Lev1 returns(string memory){\r\n        address targetAddr;\r\n       \r\n      \r\n        targetAddr = MemAddr[_Code]; \r\n        balances[targetAddr] = balances[targetAddr].add(_point);\r\n        balances[msg.sender] = balances[msg.sender].sub(_point);\r\n       \r\n     \r\n    }\r\n\r\n    function C(uint _CodeGiver, uint _CodeReceiver, uint _point)\r\n    public Lev1 returns(string memory){\r\n        address Giver; address Receiver;\r\n       \r\n        uint codeG = _CodeGiver; uint codeR = _CodeReceiver;\r\n       \r\n        Giver = MemAddr[codeG];  Receiver =MemAddr[codeR];\r\n        balances[Receiver] = balances[Receiver].add(_point);\r\n        balances[Giver] = balances[Giver].sub(_point);        \r\n       \r\n            \r\n    }\r\n\r\n     function MintPoint(uint _point)public Lev1{\r\n         \r\n         _totalSupply = _totalSupply.add(_point);\r\n         balances[msg.sender]= balances[msg.sender].add(_point);\r\n         \r\n        \r\n       }   \r\n    \r\n     function GiveAndMint(address _Ref, uint _RefAmount, address _Mem, uint _MemAmount)public Lev2 {\r\n         uint pointAdd = _RefAmount+_MemAmount;\r\n         balances[_Ref]= balances[_Ref].add(_RefAmount);\r\n         balances[_Mem]= balances[_Mem].add(_MemAmount);\r\n          _totalSupply = _totalSupply.add(pointAdd);\r\n         \r\n     }\r\n   \r\n\r\n\r\n\r\n   \r\n\r\n    function ViewPoolPoint()public view returns(uint){\r\n       \r\n       return PoolPoint;\r\n    }  \r\n\r\n   \r\n\r\n    function SetInitPoolPoint(uint _point)public Lev1 {\r\n       PoolPoint = _point;\r\n     \r\n        \r\n       }  \r\n\r\n   \r\n\r\n}", "ABI": "[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Code\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_point\",\"type\":\"uint256\"}],\"name\":\"A\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Admin1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Admin2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Admin3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Code\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_point\",\"type\":\"uint256\"}],\"name\":\"B\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Code\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_Member_Addr\",\"type\":\"address\"}],\"name\":\"BindAddressWithCode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_NameAndSurename\",\"type\":\"string\"}],\"name\":\"BindNameWithCode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Code\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_Ref\",\"type\":\"uint256\"}],\"name\":\"BindRefWithCode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Code\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_Right\",\"type\":\"uint256\"}],\"name\":\"BindRightWithCode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Code\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_MemStatus\",\"type\":\"uint256\"}],\"name\":\"BindStatusWithCode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_CodeGiver\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_CodeReceiver\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_point\",\"type\":\"uint256\"}],\"name\":\"C\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Code\",\"type\":\"uint256\"}],\"name\":\"GetMemAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"GetMemCodeByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"GetMemCodeByName\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Code\",\"type\":\"uint256\"}],\"name\":\"GetMemName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Code\",\"type\":\"uint256\"}],\"name\":\"GetMemRef\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Code\",\"type\":\"uint256\"}],\"name\":\"GetMemRight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Code\",\"type\":\"uint256\"}],\"name\":\"GetMemStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"GetNameByAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetNumMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetPointSpent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Ref\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_RefAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_Mem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_MemAmount\",\"type\":\"uint256\"}],\"name\":\"GiveAndMint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_Name_SureName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_Member_Addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_Status\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ref\",\"type\":\"uint256\"}],\"name\":\"KeyInMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MemBerCode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_point\",\"type\":\"uint256\"}],\"name\":\"MintPoint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OneMemPointAdd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PercentPointBar\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PercentPointMem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PointSpent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PointSystemLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PoolPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_code\",\"type\":\"uint256\"}],\"name\":\"ReadMemberFromCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"Name_Surename\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"Member_Addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"Status\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Ref\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addr2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addr3\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_point\",\"type\":\"uint256\"}],\"name\":\"SetInitPoolPoint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_point\",\"type\":\"uint256\"}],\"name\":\"SetOneMemPointAdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percent\",\"type\":\"uint256\"}],\"name\":\"SetPercentToMem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_point\",\"type\":\"uint256\"}],\"name\":\"SetStartPoint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Lock\",\"type\":\"uint256\"}],\"name\":\"SetSystemLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ViewMemPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ViewOneMemPointAdd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ViewPoolPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ViewSystemLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_code\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"updateAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_code\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_Name\",\"type\":\"string\"}],\"name\":\"updateMemberName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_code\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ref\",\"type\":\"uint256\"}],\"name\":\"updateRef\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_code\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_right\",\"type\":\"uint256\"}],\"name\":\"updateRight\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_code\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_status\",\"type\":\"uint256\"}],\"name\":\"updateStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Point", "CompilerVersion": "v0.5.17+commit.d19bba13", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://303979aa17763b38a95aee950d9128825104bafa9cc54beaec1bddb8e107727f"}