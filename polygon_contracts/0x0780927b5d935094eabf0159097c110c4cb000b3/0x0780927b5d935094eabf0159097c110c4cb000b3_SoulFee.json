{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Context.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/SoulFee.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0-only\\r\\npragma solidity 0.8.15;\\r\\n\\r\\n/*\\r\\n   \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2584  \u2588\u2588\u2588    \u2588\u2584   \u2584\u2588                                      \\r\\n  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588                                      \\r\\n  \u2588\u2588\u2588    \u2588\u2580  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588                                      \\r\\n  \u2588\u2588\u2588        \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588                                      \\r\\n  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588                                      \\r\\n         \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588                                      \\r\\n   \u2584\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588     \u2584                                \\r\\n \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580   \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2580  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                \\r\\n                                                                           \\r\\n   \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2584   \u2584\u2588        \u2584\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584   \u2584\u2588      \u2588\u2588\u2588      \u2584\u2588\u2588   \u2588\u2584  \\r\\n  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588       \u2588\u2588\u2588  \u2588\u2588\u2588   \u2580\u2588\u2588\u2588 \u2588\u2588\u2588 \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2588\u2588\u2588   \u2588\u2588\u2588\\r\\n  \u2588\u2588\u2588    \u2588\u2580  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588       \u2588\u2588\u2588  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588   \u2580\u2580\u2580\u2588\u2588\u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2588\u2588\u2584\u2584\u2584\u2588\u2588\u2588\\r\\n  \u2588\u2588\u2588        \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588       \u2588\u2588\u2588  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588      \u2580\u2580\u2580\u2580\u2580\u2580\u2588\u2588\u2588\\r\\n  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588       \u2588\u2588\u2588  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588      \u2584\u2588\u2588   \u2588\u2588\u2588\\r\\n         \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588       \u2588\u2588\u2588  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588      \u2588\u2588\u2588   \u2588\u2588\u2588\\r\\n   \u2584\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588     \u2584 \u2588\u2588\u2588  \u2588\u2588\u2588   \u2584\u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588      \u2588\u2588\u2588   \u2588\u2588\u2588\\r\\n \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580   \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2580  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2580   \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580  \u2588\u2580      \u2584\u2588\u2588\u2588       \u2580\u2588\u2588\u2588\u2588\u2588\u2580    \\r\\n\\r\\n * App:             https:// TODO\\r\\n * Medium:          https:// TODO\\r\\n * Twitter:         https:// TODO\\r\\n * Discord:         https:// TODO\\r\\n * Telegram:        https:// TODO \\r\\n * Announcements:   https:// TODO\\r\\n * GitHub:          https:// TODO\\r\\n */\\r\\n\\r\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title SoulFee\\r\\n * @dev A contract for managing project fees with ownership control.\\r\\n */\\r\\ncontract SoulFee is Ownable {\\r\\n    string[] public PROJECTS;\\r\\n    mapping(string => uint256) public FEE_PERCENTAGE; // Denominator of 10_000\\r\\n    uint256 public immutable MAX_FEE;\\r\\n    address public feeCollector;\\r\\n\\r\\n    event UpdatedFee(string project, uint256 fee);\\r\\n    event UpdatedFeeCollector(address feeCollector);\\r\\n    event MissingProject(string project);\\r\\n\\r\\n    /**\\r\\n     * @dev Constructor to initialize the contract and add an initial default project.\\r\\n     */\\r\\n    constructor(address _feeCollector, uint256 _defaultFee, uint256 _maxFee) Ownable() {\\r\\n        require(_defaultFee <= _maxFee, \\\"SoulFee: Fee too high\\\");\\r\\n        feeCollector = _feeCollector;\\r\\n        MAX_FEE = _maxFee;\\r\\n        addProject(\\\"default\\\", _defaultFee);\\r\\n        addProject(\\\"zap\\\", _defaultFee);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get the fee percentage for a specific project.\\r\\n     * @param project The name of the project.\\r\\n     * @return fee The fee percentage for the project.\\r\\n     */\\r\\n    function getFee(string memory project) public view returns (uint256 fee) {\\r\\n        if (!projectExists(project)) {\\r\\n            // TODO: Can't do this on view function unfortunately. Other ideas?\\r\\n            // emit MissingProject(project);\\r\\n            return FEE_PERCENTAGE[\\\"default\\\"];\\r\\n        }\\r\\n        return FEE_PERCENTAGE[project];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Get the fee percentage for a project by its index.\\r\\n     * @param projectId The index of the project in the PROJECTS array.\\r\\n     * @return fee The fee percentage for the project.\\r\\n     */\\r\\n    function getFee(uint256 projectId) public view returns (uint256 fee) {\\r\\n        return FEE_PERCENTAGE[PROJECTS[projectId]];\\r\\n    }\\r\\n\\r\\n    function getFeeCollector() public view returns (address) {\\r\\n        return feeCollector;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Check if a project with a given name exists.\\r\\n     * @param project The name of the project.\\r\\n     * @return exists True if the project exists, false otherwise.\\r\\n     */\\r\\n    function projectExists(string memory project) public view returns (bool exists) {\\r\\n        for (uint256 i = 0; i < PROJECTS.length; i++) {\\r\\n            if (compareStrings(PROJECTS[i], project)) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Compare two strings for equality.\\r\\n     * @param a The first string.\\r\\n     * @param b The second string.\\r\\n     * @return True if the strings are equal, false otherwise.\\r\\n     */\\r\\n    function compareStrings(string memory a, string memory b) internal pure returns (bool) {\\r\\n        return keccak256(abi.encodePacked(a)) == keccak256(abi.encodePacked(b));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Add a new project with its associated fee percentage.\\r\\n     * @param project The name of the project.\\r\\n     * @param fee The fee percentage (out of 10,000).\\r\\n     */\\r\\n    function addProject(string memory project, uint256 fee) public onlyOwner {\\r\\n        require(fee <= MAX_FEE, \\\"SoulFee: Fee too high\\\");\\r\\n        PROJECTS.push(project);\\r\\n        FEE_PERCENTAGE[project] = fee;\\r\\n        emit UpdatedFee(project, fee);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Remove a project and its associated fee percentage. This is a destructive operation.\\r\\n                Other contracts might depend on the data removed. Move with caution.\\r\\n     * @param project The name of the project to be removed.\\r\\n     */\\r\\n    function removeProject(string memory project) public onlyOwner {\\r\\n        require(!compareStrings(project, \\\"default\\\"), \\\"SoulFee: can't remove default project fee\\\");\\r\\n        for (uint256 i = 0; i < PROJECTS.length; i++) {\\r\\n            if (compareStrings(PROJECTS[i], project)) {\\r\\n                if (i != PROJECTS.length - 1) {\\r\\n                    // Swap the element to remove with the last element\\r\\n                    PROJECTS[i] = PROJECTS[PROJECTS.length - 1];\\r\\n                }\\r\\n                // Shorten the array by one\\r\\n                PROJECTS.pop();\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        FEE_PERCENTAGE[project] = 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Set the fee percentage for an existing project.\\r\\n     * @param project The name of the project.\\r\\n     * @param fee The new fee percentage (out of 10,000).\\r\\n     */\\r\\n    function setFee(string memory project, uint256 fee) public onlyOwner {\\r\\n        require(fee <= MAX_FEE, \\\"SoulFee: Fee too high\\\");\\r\\n        require(projectExists(project), \\\"SoulFee: project not found\\\");\\r\\n        FEE_PERCENTAGE[project] = fee;\\r\\n        emit UpdatedFee(project, fee);\\r\\n    }\\r\\n\\r\\n    function setFeeCollector(address _feeCollector) public onlyOwner {\\r\\n        feeCollector = _feeCollector;\\r\\n        emit UpdatedFeeCollector(_feeCollector);\\r\\n    }\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 1000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_defaultFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"}],\"name\":\"MissingProject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"UpdatedFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"}],\"name\":\"UpdatedFeeCollector\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"FEE_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PROJECTS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"addProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"}],\"name\":\"projectExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"}],\"name\":\"removeProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SoulFee", "CompilerVersion": "v0.8.15+commit.e14f2714", "OptimizationUsed": "1", "Runs": "1000", "ConstructorArguments": "0000000000000000000000005c7c7246bd8a18df5f6ee422f9f8ccdf716a6ad2000000000000000000000000000000000000000000000000000000000000012c00000000000000000000000000000000000000000000000000000000000003e8", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}