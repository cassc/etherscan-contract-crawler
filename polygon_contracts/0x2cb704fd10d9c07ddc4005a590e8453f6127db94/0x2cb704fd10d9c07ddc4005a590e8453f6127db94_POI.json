{"SourceCode": "pragma solidity ^0.4.21;\r\n\r\ncontract POI\r\n{\r\n  address owner;\r\n  mapping(bytes32=>string) pubKeys;\r\n  mapping(bytes32=>uint256) invalidations;\r\n  mapping(bytes32=>bytes32) roots;\r\n  mapping(bytes32=>uint256) time;\r\n\r\n  constructor() public{\r\n  owner = msg.sender;\r\n}\r\n\r\n  modifier onlyOwner() {\r\n  require(msg.sender == owner);\r\n  _;\r\n}\r\n\r\n  function getPubKey(bytes32 name) public constant returns(string){\r\n  return pubKeys[name];\r\n}\r\n\r\n  function setPubKey(bytes32 name, string key)\r\n  public\r\n  onlyOwner\r\n  payable\r\n  {\r\n    require(bytes(pubKeys[name]).length==0);\r\n    pubKeys[name]=key;\r\n  }\r\n\r\n  function invalidate(bytes32 docHash)\r\n  public\r\n  onlyOwner\r\n  payable\r\n  {\r\n    require(invalidations[docHash]==0);\r\n    invalidations[docHash]=now;\r\n  }\r\n\r\n  function getInvalidated(bytes32 docHash) public constant returns(uint256){\r\n  return invalidations[docHash];\r\n}\r\n\r\n  function getRootPubKey(bytes32 root) public constant returns(string){\r\n  return pubKeys[roots[root]];\r\n}\r\n\r\n  function getAuthority(bytes32 root) public constant returns(bytes32){\r\n  return roots[root];\r\n}\r\n\r\n  function getTime(bytes32 root) public constant returns(uint256){\r\n  return time[root];\r\n}\r\n\r\n  function setRoot(bytes32 root, bytes32 name)\r\n  public\r\n  onlyOwner\r\n  payable\r\n  {\r\n    require(roots[root]==0x0);\r\n    roots[root]=name;\r\n    time[root]=now;\r\n  }\r\n\r\n\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"getPubKey\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"root\",\"type\":\"bytes32\"},{\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"setRoot\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"getRootPubKey\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"invalidate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"bytes32\"},{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"setPubKey\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"getAuthority\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"getTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"getInvalidated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]", "ContractName": "POI", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU AGPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://0ac02601d58c6dc9f90b08c33676f485889666d233e7f5dc751282d3fc2af5dc"}