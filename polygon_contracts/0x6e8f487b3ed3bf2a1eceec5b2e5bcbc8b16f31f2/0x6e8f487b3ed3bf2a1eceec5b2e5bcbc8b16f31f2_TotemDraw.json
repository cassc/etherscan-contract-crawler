{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\ncontract TotemDraw {\r\n    address public owner;\r\n    mapping(string => string[3]) public lotteries;\r\n    string[] public availableHeads = [\"axolotl\", \"bat\", \"bee\", \"cat\", \"goat\", \"monkey\", \"owl\", \"penguin\", \"pig\"];\r\n\r\n    event HeadsListUpdated(string[] newHeads);\r\n    event LotteryDrawn(string name, string[3] winner, string[] allHeads);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"New owner is the zero address\");\r\n        owner = newOwner;\r\n    }\r\n\r\n    function updateHeadsList(string[] memory newHeads) public onlyOwner {\r\n        require(newHeads.length >= 3, \"Minimum number of heads is 3\");\r\n        availableHeads = newHeads;\r\n        emit HeadsListUpdated(newHeads);\r\n    }\r\n    \r\n    function drawTotem(string memory name) public onlyOwner {\r\n        require(bytes(name).length != 0, \"Invalid Name\");\r\n        require(bytes(lotteries[name][0]).length == 0, \"Lottery already drawn\");\r\n        \r\n        string[] memory usedHeads = availableHeads;\r\n\r\n        for (uint i = 0; i < 3; i++) {\r\n            uint randomIndex = uint(keccak256(abi.encodePacked(name, i, block.number))) % usedHeads.length;\r\n            lotteries[name][i] = usedHeads[randomIndex];\r\n\r\n            if (randomIndex < usedHeads.length - 1) {\r\n                usedHeads[randomIndex] = usedHeads[usedHeads.length - 1];\r\n            }\r\n            assembly {\r\n                mstore(usedHeads, sub(mload(usedHeads), 1))\r\n            }\r\n        }\r\n\r\n        emit LotteryDrawn(name, lotteries[name], availableHeads);\r\n    }\r\n\r\n    function getLotteryResult(string memory name) public view returns (string[3] memory) {\r\n        return lotteries[name];\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"newHeads\",\"type\":\"string[]\"}],\"name\":\"HeadsListUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[3]\",\"name\":\"winner\",\"type\":\"string[3]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"allHeads\",\"type\":\"string[]\"}],\"name\":\"LotteryDrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"availableHeads\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"drawTotem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getLotteryResult\",\"outputs\":[{\"internalType\":\"string[3]\",\"name\":\"\",\"type\":\"string[3]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lotteries\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"newHeads\",\"type\":\"string[]\"}],\"name\":\"updateHeadsList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TotemDraw", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4dd6946c658cdaf73d7e8f08990b3d179680eee90ff66cf69e7460eb33efba86"}