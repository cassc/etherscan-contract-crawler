{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/rent.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\npragma abicoder v2;\\r\\n\\r\\nimport \\\"./OMS.sol\\\";\\r\\n\\r\\ncontract Rent is OMS {\\r\\n\\r\\n    struct StartData {\\r\\n        uint256 contractNumber;\\r\\n        string[] startOwnerUserIDArrayString;\\r\\n        string[] nfTokenIDArrayString;\\r\\n        uint256 startTime;\\r\\n        uint256 duration;\\r\\n        uint256[] costArray;\\r\\n    }\\r\\n\\r\\n    struct EndData {\\r\\n        uint256 contractNumber;\\r\\n        string[] endOwnerUserIDArrayString;\\r\\n        string[] nfTokenIDArrayString;\\r\\n        uint256 endTime;\\r\\n        uint256[] costArray;\\r\\n        uint256[] prodArray;\\r\\n        uint256[] taxArray;\\r\\n        uint256[] netArray;\\r\\n    }\\r\\n\\r\\n    struct EndRentParams {\\r\\n        uint256 contractNumber;\\r\\n        string[] endOwnerUserIDArray;\\r\\n        string[] nfTokenIDArray;\\r\\n        uint256[] costArray;\\r\\n        uint256[] prodArray;\\r\\n        uint256[] taxArray;\\r\\n        uint256[] netArray;\\r\\n    }\\r\\n\\r\\n    mapping(uint256 => StartData) private _startData;\\r\\n    mapping(uint256 => EndData) private _endData;\\r\\n\\r\\n    // Helper function to convert string array to bytes32 array\\r\\n    function toBytes32Array(string[] memory stringArray) internal pure returns (bytes32[] memory) {\\r\\n        bytes32[] memory bytesArray = new bytes32[](stringArray.length);\\r\\n        for (uint i = 0; i < stringArray.length; i++) {\\r\\n            bytesArray[i] = bytes32(keccak256(abi.encodePacked(stringArray[i])));\\r\\n        }\\r\\n        return bytesArray;\\r\\n    }\\r\\n\\r\\n    // Write functions\\r\\n    function startRent(\\r\\n        uint256 contractNumber,\\r\\n        string[] calldata startOwnerUserIDArray,\\r\\n        string[] calldata nfTokenIDArray,\\r\\n        uint256 duration,\\r\\n        uint256[] calldata costArray\\r\\n    ) external Manager {\\r\\n        string[] memory startOwnerArray = new string[](startOwnerUserIDArray.length);\\r\\n        string[] memory nfTokenArray = new string[](nfTokenIDArray.length);\\r\\n\\r\\n        for (uint i = 0; i < startOwnerUserIDArray.length; i++) {\\r\\n            startOwnerArray[i] = startOwnerUserIDArray[i];\\r\\n        }\\r\\n\\r\\n        for (uint i = 0; i < nfTokenIDArray.length; i++) {\\r\\n            nfTokenArray[i] = nfTokenIDArray[i];\\r\\n        }\\r\\n\\r\\n        _startData[contractNumber] = StartData({\\r\\n            contractNumber: contractNumber,\\r\\n            startOwnerUserIDArrayString: startOwnerArray,\\r\\n            nfTokenIDArrayString: nfTokenArray,\\r\\n            startTime: block.timestamp,\\r\\n            duration: duration,\\r\\n            costArray: costArray\\r\\n        });\\r\\n    }\\r\\n\\r\\n    function setEndRentData(EndRentParams calldata params) external Manager {\\r\\n        string[] memory endOwnerArray = new string[](params.endOwnerUserIDArray.length);\\r\\n        string[] memory nfTokenArray = new string[](params.nfTokenIDArray.length);\\r\\n\\r\\n        for (uint i = 0; i < params.endOwnerUserIDArray.length; i++) {\\r\\n            endOwnerArray[i] = params.endOwnerUserIDArray[i];\\r\\n        }\\r\\n\\r\\n        for (uint i = 0; i < params.nfTokenIDArray.length; i++) {\\r\\n            nfTokenArray[i] = params.nfTokenIDArray[i];\\r\\n        }\\r\\n\\r\\n        EndData storage existingData = _endData[params.contractNumber];\\r\\n        existingData.contractNumber = params.contractNumber;\\r\\n        existingData.endOwnerUserIDArrayString = endOwnerArray;\\r\\n        existingData.nfTokenIDArrayString = nfTokenArray;\\r\\n        existingData.endTime = block.timestamp;\\r\\n        existingData.costArray = params.costArray;\\r\\n        existingData.prodArray = params.prodArray;\\r\\n        existingData.taxArray = params.taxArray;\\r\\n        existingData.netArray = params.netArray;\\r\\n    }\\r\\n\\r\\n    // Read functions\\r\\n    function getStartRentData(uint256 contractNumber) external view returns(StartData memory) {\\r\\n        return _startData[contractNumber];\\r\\n    }\\r\\n\\r\\n    function getEndRentData(uint256 contractNumber) external view returns(EndData memory) {\\r\\n        return _endData[contractNumber];\\r\\n    }\\r\\n\\r\\n    function getCompleteRentData(uint256 contractNumber) external view returns(StartData memory startData, EndData memory endData) {\\r\\n        return (_startData[contractNumber], _endData[contractNumber]);\\r\\n    }\\r\\n}\"\r\n    },\r\n    \"contracts/OMS.sol\": {\r\n      \"content\": \"// Developed by Orcania (https://orcania.io/)\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity =0.8.0;\\r\\ninterface IERC20{\\r\\n         \\r\\n    function transfer(address recipient, uint256 amount) external;\\r\\n    \\r\\n}\\r\\n\\r\\nabstract contract OMS { //Orcania Management Standard\\r\\n\\r\\n    address private _owner;\\r\\n    mapping(address => bool) private _manager;\\r\\n\\r\\n    event OwnershipTransfer(address indexed newOwner);\\r\\n    event SetManager(address indexed manager, bool state);\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    constructor() {\\r\\n        _owner = msg.sender;\\r\\n        _manager[msg.sender] = true;\\r\\n\\r\\n        emit SetManager(msg.sender, true);\\r\\n    }\\r\\n\\r\\n    //Modifiers ==========================================================================================================================================\\r\\n    modifier Owner() {\\r\\n        require(msg.sender == _owner, \\\"OMS: NOT_OWNER\\\");\\r\\n        _;  \\r\\n    }\\r\\n\\r\\n    modifier Manager() {\\r\\n      require(_manager[msg.sender], \\\"OMS: MOT_MANAGER\\\");\\r\\n      _;  \\r\\n    }\\r\\n\\r\\n    //Read functions =====================================================================================================================================\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    function manager(address user) external view returns(bool) {\\r\\n        return _manager[user];\\r\\n    }\\r\\n\\r\\n    \\r\\n    //Write functions ====================================================================================================================================\\r\\n    function setNewOwner(address user) external Owner {\\r\\n        _owner = user;\\r\\n        emit OwnershipTransfer(user);\\r\\n    }\\r\\n\\r\\n    function setManager(address user, bool state) external Owner {\\r\\n        _manager[user] = state;\\r\\n        emit SetManager(user, state);\\r\\n    }\\r\\n\\r\\n    //===============\\r\\n    \\r\\n    function withdraw(address payable to, uint256 value) external Manager {\\r\\n        require(to.send(value), \\\"OMS: ISSUE_SENDING_FUNDS\\\");    \\r\\n    }\\r\\n\\r\\n    function withdrawERC20(address token, address to, uint256 value) external Manager {\\r\\n        IERC20(token).transfer(to, value);   \\r\\n    }\\r\\n\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"SetManager\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractNumber\",\"type\":\"uint256\"}],\"name\":\"getCompleteRentData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"contractNumber\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"startOwnerUserIDArrayString\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"nfTokenIDArrayString\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"costArray\",\"type\":\"uint256[]\"}],\"internalType\":\"struct Rent.StartData\",\"name\":\"startData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"contractNumber\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"endOwnerUserIDArrayString\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"nfTokenIDArrayString\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"costArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"prodArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"taxArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"netArray\",\"type\":\"uint256[]\"}],\"internalType\":\"struct Rent.EndData\",\"name\":\"endData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractNumber\",\"type\":\"uint256\"}],\"name\":\"getEndRentData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"contractNumber\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"endOwnerUserIDArrayString\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"nfTokenIDArrayString\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"costArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"prodArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"taxArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"netArray\",\"type\":\"uint256[]\"}],\"internalType\":\"struct Rent.EndData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractNumber\",\"type\":\"uint256\"}],\"name\":\"getStartRentData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"contractNumber\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"startOwnerUserIDArrayString\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"nfTokenIDArrayString\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"costArray\",\"type\":\"uint256[]\"}],\"internalType\":\"struct Rent.StartData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"contractNumber\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"endOwnerUserIDArray\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"nfTokenIDArray\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"costArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"prodArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"taxArray\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"netArray\",\"type\":\"uint256[]\"}],\"internalType\":\"struct Rent.EndRentParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setEndRentData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contractNumber\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"startOwnerUserIDArray\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"nfTokenIDArray\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"costArray\",\"type\":\"uint256[]\"}],\"name\":\"startRent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Rent", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}