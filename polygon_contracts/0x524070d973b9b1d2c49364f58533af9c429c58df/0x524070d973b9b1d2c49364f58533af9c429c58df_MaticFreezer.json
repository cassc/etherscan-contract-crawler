{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.18;\r\n\r\n// Freeze some MATIC and unlock it between 1 hour and 1 year later. Minimum deposit is 50 MATIC.\r\n\r\ncontract MaticFreezer {\r\n    mapping(address => int) public balances;\r\n    mapping(address => int) public unfreezeDates;\r\n    Logger logger;\r\n\r\n    constructor(Logger _logger) {\r\n        logger = Logger(_logger);\r\n    }\r\n\r\n    function deposit(int _hours) public payable {\r\n        require(unfreezeDates[msg.sender] <= int(block.timestamp), \"Funds are frozen\");\r\n        require(50 ether <= msg.value, \"Deposit at least 50 MATIC\");\r\n        require(1 <= _hours && _hours <= 24 * 365, \"Freeze time must be 1 hour to 1 year\");\r\n        unfreezeDates[msg.sender] = int(block.timestamp) + _hours * 1 hours;\r\n        balances[msg.sender] += int(msg.value);\r\n        logger.log(msg.sender, int(msg.value), \"Deposit\");\r\n    }\r\n\r\n    function withdraw(int _amount) public {\r\n        require(_amount <= balances[msg.sender], \"Insufficient funds\");\r\n        require(unfreezeDates[msg.sender] <= int(block.timestamp), \"Funds are frozen\");\r\n        (bool sent, ) = msg.sender.call{value: uint(_amount)}(\"\");\r\n        require(sent, \"Failure to send Ether\");\r\n        balances[msg.sender] -= _amount;\r\n        logger.log(msg.sender, _amount, \"Withdraw\");\r\n    }\r\n}\r\n\r\ncontract Logger {\r\n    event Log(address caller, int amount, string action);\r\n\r\n    function log(\r\n        address _caller,\r\n        int _amount,\r\n        string memory _action\r\n    ) public {\r\n        emit Log(_caller, _amount, _action);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract Logger\",\"name\":\"_logger\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_hours\",\"type\":\"int256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unfreezeDates\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_amount\",\"type\":\"int256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MaticFreezer", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000068d39044f8bbe34d55042d2aeac9a3248c1a9527", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ceff6320ba1b40c7d023b09690dde0c447b75d76ecfb5a76f9aa0b88d46553af"}