{"SourceCode": "//  _______ _           ___   ___ ___   ___\r\n// |__   __| |         / _ \\ / _ \\__ \\ / _ \\\r\n//    | |  | |__   ___| (_) | | | | ) | | | | ___  _ __ __ _\r\n//    | |  | '_ \\ / _ \\> _ <| | | |/ /| | | |/ _ \\| '__/ _` |\r\n//    | |  | | | |  __/ (_) | |_| / /_| |_| | (_) | | | (_| |\r\n//  __|_|  |_| |_|\\___|\\___/ \\___/____|\\___(_)___/|_|_ \\__, |    _\r\n// |  __ \\                               | |    / ____| __/ |   | |\r\n// | |__) |_ _ _   _ _ __ ___   ___ _ __ | |_  | (___  |___/ ___| |_ ___ _ __ ___\r\n// |  ___/ _` | | | | '_ ` _ \\ / _ \\ '_ \\| __|  \\___ \\| | | / __| __/ _ \\ '_ ` _ \\\r\n// | |  | (_| | |_| | | | | | |  __/ | | | |_   ____) | |_| \\__ \\ ||  __/ | | | | |\r\n// |_|   \\__,_|\\__, |_| |_| |_|\\___|_| |_|\\__| |_____/ \\__, |___/\\__\\___|_| |_| |_|\r\n//              __/ |                                   __/ |\r\n//             |___/                                   |___/\r\n// Payment system designed by Shahzain Tariq and Rico Cunningham for the betterment\r\n// of the GSG Ecosystem.  Learn more about us @ www.the8020.org\r\n\r\npragma solidity 0.8.18;\r\n\r\ninterface IGS50 {\r\n    function buy(address _referredAdd) external payable;\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\ninterface INFTRewardPool {\r\n    function receiveEth() external payable;\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract MasterPaymentContract is Ownable {\r\n    INFTRewardPool public communityPool;\r\n    INFTRewardPool public accessPool;\r\n    IGS50 public gs50Token;\r\n\r\n    mapping(uint256 => AppSharesData) public getData;\r\n\r\n    event GS50Bought(address indexed _user, uint256 _ethAmount, uint256 _id);\r\n\r\n    struct AppSharesData {\r\n        address[] addresses;\r\n        uint256[] shares;\r\n        bool sale;\r\n    }\r\n\r\n    constructor(\r\n        address gs50TokenAddress,\r\n        address accessPoolAdd,\r\n        address communityPoolAdd\r\n    ) {\r\n        gs50Token = IGS50(gs50TokenAddress);\r\n        accessPool = INFTRewardPool(accessPoolAdd);\r\n        communityPool = INFTRewardPool(communityPoolAdd);\r\n    }\r\n\r\n    function buyGS50(uint256 id) external payable {\r\n        require(getData[id].sale, \"ERROR: sale not started\");\r\n        uint256 toBuyGS50 = (msg.value * 95) / 100;\r\n        uint256 toSendToAccessPool = (msg.value * 3) / 100;\r\n        uint256 toSendToCommPool = (msg.value * 2) / 100;\r\n\r\n        gs50Token.buy{value: toBuyGS50}(_msgSender());\r\n        accessPool.receiveEth{value: toSendToAccessPool}();\r\n        communityPool.receiveEth{value: toSendToCommPool}();\r\n\r\n        distributeGS50(id);\r\n\r\n        emit GS50Bought(_msgSender(), msg.value, id);\r\n    }\r\n\r\n    function getApplicationShareData(\r\n        uint256 id\r\n    ) public view returns (AppSharesData memory) {\r\n        return (getData[id]);\r\n    }\r\n\r\n    function setCommunityRewardPool(address add) external onlyOwner {\r\n        communityPool = INFTRewardPool(add);\r\n    }\r\n\r\n    function setAccessRewardPool(address add) external onlyOwner {\r\n        accessPool = INFTRewardPool(add);\r\n    }\r\n\r\n    function set8020(address add) external onlyOwner {\r\n        gs50Token = IGS50(add);\r\n    }\r\n\r\n    function setApplicationShareData(\r\n        address[] memory adds,\r\n        uint[] memory _shares,\r\n        bool _sale,\r\n        uint256 id\r\n    ) external onlyOwner {\r\n        require(\r\n            adds.length > 0 && adds.length < 6,\r\n            \"ERROR: address limit error\"\r\n        );\r\n        require(\r\n            adds.length == _shares.length,\r\n            \"ERROR: addresses doesn't match shares\"\r\n        );\r\n        AppSharesData memory AppSharesDataLocal = AppSharesData(\r\n            adds,\r\n            _shares,\r\n            _sale\r\n        );\r\n        getData[id] = AppSharesDataLocal;\r\n    }\r\n\r\n    function distributeGS50(uint256 id) internal {\r\n        uint256 tokenBalance = gs50Token.balanceOf(address(this));\r\n        uint256 userShareBack = (tokenBalance * 2) / 100;\r\n        tokenBalance -= userShareBack;\r\n        gs50Token.transfer(_msgSender(), userShareBack);\r\n\r\n        for (uint256 i = 0; i < getData[id].addresses.length; i++) {\r\n            gs50Token.transfer(\r\n                getData[id].addresses[i],\r\n                (tokenBalance * getData[id].shares[i]) / 100\r\n            );\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gs50TokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessPoolAdd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"communityPoolAdd\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"GS50Bought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accessPool\",\"outputs\":[{\"internalType\":\"contract INFTRewardPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"buyGS50\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityPool\",\"outputs\":[{\"internalType\":\"contract INFTRewardPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getApplicationShareData\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"sale\",\"type\":\"bool\"}],\"internalType\":\"struct MasterPaymentContract.AppSharesData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"sale\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gs50Token\",\"outputs\":[{\"internalType\":\"contract IGS50\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"set8020\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"setAccessRewardPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"adds\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_shares\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"_sale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"setApplicationShareData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"setCommunityRewardPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MasterPaymentContract", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000e7c15c988528bae6e2c6961e394f0ad663e52cb5000000000000000000000000ba48df724fbc574d795160914dc9d9886698eae50000000000000000000000006f7f6c8f7f0d40ad7705dfed49e4760e467d2561", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://790df47c95bee9ca0cb2819e92556f7d7d778a887c3c3d29ca1e98727dadee2a"}