{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool); // Added approve function\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value); // Added Approval event\r\n}\r\n\r\ncontract GeoToken is IERC20 {\r\n    string public name = \"GEOINDEX\";\r\n    string public symbol = \"GEO\";\r\n    uint8 public decimals = 18;\r\n\r\n    mapping(address => uint256) public balances;\r\n    mapping(address => mapping(address => uint256)) public allowed;\r\n\r\n    uint256 public override totalSupply;\r\n    IERC20 public geoToken;\r\n    uint256 public contractMaticBalance;\r\n    \r\n    struct Proof {\r\n        uint256 Proof_id;\r\n        string State_id;\r\n        string Thesis;\r\n        string Body;\r\n        string Conclusion;\r\n        string ProofLink;\r\n        string[10] ProofLinks;\r\n    }\r\n\r\n    Proof[] public proofs;\r\n    mapping(uint256 => Proof) public proofsById;\r\n\r\n    constructor() {\r\n        totalSupply = 1000000000 * (10 ** uint256(decimals));\r\n        balances[msg.sender] = totalSupply;\r\n        geoToken = IERC20(address(this));\r\n    }\r\n\r\n    function transfer(address to, uint256 value) external override returns (bool) {\r\n        require(to != address(0), \"Invalid address\");\r\n        require(balances[msg.sender] >= value, \"Insufficient balance\");\r\n        balances[msg.sender] -= value;\r\n        balances[to] += value;\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) external override returns (bool) {\r\n        require(from != address(0), \"Invalid address\");\r\n        require(to != address(0), \"Invalid address\");\r\n        require(balances[from] >= value, \"Insufficient balance\");\r\n        require(allowed[from][msg.sender] >= value, \"Allowance exceeded\");\r\n        balances[from] -= value;\r\n        balances[to] += value;\r\n        allowed[from][msg.sender] -= value;\r\n        emit Transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) external override returns (bool) {\r\n        allowed[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) external view override returns (uint256) {\r\n        return allowed[owner][spender];\r\n    }\r\n\r\n    function balanceOf(address account) external view override returns (uint256) {\r\n        return balances[account];\r\n    }\r\n\r\n    function createProof(\r\n        uint256 _Proof_id,\r\n        string memory _State_id,\r\n        string memory _Thesis,\r\n        string memory _Body,\r\n        string memory _Conclusion,\r\n        string memory _ProofLink,\r\n        string[10] memory _ProofLinks\r\n    ) external {\r\n        Proof memory newProof = Proof({\r\n            Proof_id: _Proof_id,\r\n            State_id: _State_id,\r\n            Thesis: _Thesis,\r\n            Body: _Body,\r\n            Conclusion: _Conclusion,\r\n            ProofLink: _ProofLink,\r\n            ProofLinks: _ProofLinks\r\n        });\r\n        proofs.push(newProof);\r\n        proofsById[_Proof_id] = newProof;\r\n        require(geoToken.transfer(msg.sender, 10000e18), \"Token transfer failed\");\r\n    }\r\n\r\n    function getProof(uint256 Proof_id) external view returns (\r\n        uint256 _Proof_id,\r\n        string memory _State_id,\r\n        string memory _Thesis,\r\n        string memory _Body,\r\n        string memory _Conclusion,\r\n        string memory _ProofLink,\r\n        string[10] memory _ProofLinks   \r\n    ) {\r\n        Proof memory proof = proofsById[Proof_id];\r\n        return (\r\n            proof.Proof_id,\r\n            proof.State_id,\r\n            proof.Thesis,\r\n            proof.Body,\r\n            proof.Conclusion,\r\n            proof.ProofLink,\r\n            proof.ProofLinks\r\n        );\r\n    }\r\n\r\n  function burnGeo(uint256 value) external {\r\n        require(balances[msg.sender] >= value, \"Insufficient balance\");\r\n        balances[msg.sender] -= value;\r\n        totalSupply -= value;\r\n        emit Transfer(msg.sender, address(0), value);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnGeo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractMaticBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Proof_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_State_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_Thesis\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_Body\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_Conclusion\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ProofLink\",\"type\":\"string\"},{\"internalType\":\"string[10]\",\"name\":\"_ProofLinks\",\"type\":\"string[10]\"}],\"name\":\"createProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"geoToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Proof_id\",\"type\":\"uint256\"}],\"name\":\"getProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_Proof_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_State_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_Thesis\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_Body\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_Conclusion\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ProofLink\",\"type\":\"string\"},{\"internalType\":\"string[10]\",\"name\":\"_ProofLinks\",\"type\":\"string[10]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proofs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"Proof_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"State_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Thesis\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Body\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Conclusion\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ProofLink\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proofsById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"Proof_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"State_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Thesis\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Body\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Conclusion\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ProofLink\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "GeoToken", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://217b96e303f76fcb27a3d69502dc8a507c1b00b1c198ffeabc8e5aaef5629a83"}