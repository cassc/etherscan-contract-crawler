{"SourceCode": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.6.12;\r\n\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface IUniswapV2Pair {\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n}\r\n\r\nabstract contract UniswapV2Factory  {\r\n    mapping(address => mapping(address => address)) public getPair;\r\n    address[] public allPairs;\r\n    function allPairsLength() external view virtual returns (uint);\r\n}\r\n\r\n// In order to quickly load up data from Uniswap-like market, this contract allows easy iteration with a single eth_call\r\ncontract FlashBotsUniswapQuery {\r\n    function getReservesByPairs(IUniswapV2Pair[] calldata _pairs) external view returns (uint256[3][] memory) {\r\n        uint256[3][] memory result = new uint256[3][](_pairs.length);\r\n        for (uint i = 0; i < _pairs.length; i++) {\r\n            (result[i][0], result[i][1], result[i][2]) = _pairs[i].getReserves();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getPairsByIndexRange(UniswapV2Factory _uniswapFactory, uint256 _start, uint256 _stop) external view returns (address[3][] memory)  {\r\n        uint256 _allPairsLength = _uniswapFactory.allPairsLength();\r\n        if (_stop > _allPairsLength) {\r\n            _stop = _allPairsLength;\r\n        }\r\n        require(_stop >= _start, \"start cannot be higher than stop\");\r\n        uint256 _qty = _stop - _start;\r\n        address[3][] memory result = new address[3][](_qty);\r\n        for (uint i = 0; i < _qty; i++) {\r\n            IUniswapV2Pair _uniswapPair = IUniswapV2Pair(_uniswapFactory.allPairs(_start + i));\r\n            result[i][0] = _uniswapPair.token0();\r\n            result[i][1] = _uniswapPair.token1();\r\n            result[i][2] = address(_uniswapPair);\r\n        }\r\n        return result;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract UniswapV2Factory\",\"name\":\"_uniswapFactory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stop\",\"type\":\"uint256\"}],\"name\":\"getPairsByIndexRange\",\"outputs\":[{\"internalType\":\"address[3][]\",\"name\":\"\",\"type\":\"address[3][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IUniswapV2Pair[]\",\"name\":\"_pairs\",\"type\":\"address[]\"}],\"name\":\"getReservesByPairs\",\"outputs\":[{\"internalType\":\"uint256[3][]\",\"name\":\"\",\"type\":\"uint256[3][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "FlashBotsUniswapQuery", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://9ddd82146851b6c91bf0c2160aa9970bb106b4b1e324175f17835480e0542608"}