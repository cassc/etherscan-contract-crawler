{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.18;\r\n\r\ncontract mStakeContract {\r\n    address owner = msg.sender;\r\n    uint256 public totalInvestors;\r\n    uint256 public totalInvested;\r\n    uint256 public startTime = 1699380000;\r\n\r\n    mapping(address => bool) public registered;\r\n    mapping(address => uint256) public invested;\r\n    mapping(address => uint256) public atBlock;\r\n    mapping(address => address) public referrers;\r\n    mapping(uint256 => uint256) public levels;\r\n    mapping(address => mapping(uint256 => uint256)) public referralsCounts;\r\n    mapping(address => uint256) public referralRewards;\r\n\r\n    event Registered(address user);\r\n\r\n    constructor() {\r\n        levels[0] = 20;\r\n        levels[1] = 50;\r\n        levels[2] = 100;\r\n        levels[3] = 100;\r\n    }\r\n\r\n    function _register(address referrerAddress) internal {\r\n        if (!registered[msg.sender]) {\r\n            address user = msg.sender;\r\n            address nextReferrer = referrerAddress;\r\n            for (uint256 i = 0; i < 4; i++) {\r\n                if (registered[nextReferrer]) {\r\n                    referrers[user] = nextReferrer;\r\n                    referralsCounts[nextReferrer][i]++;\r\n\r\n                    user = nextReferrer;\r\n                    nextReferrer = referrers[user];\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            totalInvestors++;\r\n            registered[msg.sender] = true;\r\n            emit Registered(msg.sender);\r\n        }\r\n    }\r\n\r\n    function withdrawable(address user) public view returns (uint256) {\r\n        return (invested[user] * (block.number - atBlock[user])) / 432000;\r\n    }\r\n\r\n    function withdraw() public {\r\n        payable(msg.sender).transfer(\r\n            referralRewards[msg.sender] + withdrawable(msg.sender)\r\n        );\r\n\r\n        referralRewards[msg.sender] = 0;\r\n        atBlock[msg.sender] = block.number;\r\n    }\r\n\r\n    function deposit(address referrerAddress) external payable {\r\n        require(block.timestamp >= startTime);\r\n        require(msg.value >= 50 ether);\r\n        payable(owner).transfer(msg.value / 10);\r\n\r\n        _register(referrerAddress);\r\n\r\n        address referrer = referrers[msg.sender];\r\n        for (uint256 i = 0; i < 4; i++) {\r\n            if (referrer != address(0)) {\r\n                referralRewards[referrer] += msg.value / levels[i];\r\n            } else {\r\n                referralRewards[owner] += msg.value / levels[i];\r\n            }\r\n\r\n            referrer = referrers[referrer];\r\n        }\r\n\r\n        withdraw();\r\n\r\n        totalInvested += msg.value;\r\n        invested[msg.sender] += msg.value;\r\n    }\r\n\r\n    function topVolumeForRadars() external payable {\r\n        payable(msg.sender).transfer(msg.value);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrerAddress\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"invested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"referralsCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topVolumeForRadars\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalInvested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalInvestors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "mStakeContract", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://aa3b4ccc5cfdaee1b147759ae79e2c9718ba830e0797a716f6694c3e96ccac08"}