{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/proxy/AbstractProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\\n *\\n *     Copyright (C) 2023, Tokeny s\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"./interface/IProxy.sol\\\";\\nimport \\\"./authority/ITREXImplementationAuthority.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\nabstract contract AbstractProxy is IProxy, Initializable {\\n\\n    /**\\n     *  @dev See {IProxy-setImplementationAuthority}.\\n     */\\n    function setImplementationAuthority(address _newImplementationAuthority) external override {\\n        require(msg.sender == getImplementationAuthority(), \\\"only current implementationAuthority can call\\\");\\n        require(_newImplementationAuthority != address(0), \\\"invalid argument - zero address\\\");\\n        require(\\n            (ITREXImplementationAuthority(_newImplementationAuthority)).getTokenImplementation() != address(0)\\n            && (ITREXImplementationAuthority(_newImplementationAuthority)).getCTRImplementation() != address(0)\\n            && (ITREXImplementationAuthority(_newImplementationAuthority)).getIRImplementation() != address(0)\\n            && (ITREXImplementationAuthority(_newImplementationAuthority)).getIRSImplementation() != address(0)\\n            && (ITREXImplementationAuthority(_newImplementationAuthority)).getMCImplementation() != address(0)\\n            && (ITREXImplementationAuthority(_newImplementationAuthority)).getTIRImplementation() != address(0)\\n        , \\\"invalid Implementation Authority\\\");\\n        _storeImplementationAuthority(_newImplementationAuthority);\\n        emit ImplementationAuthoritySet(_newImplementationAuthority);\\n    }\\n\\n    /**\\n     *  @dev See {IProxy-getImplementationAuthority}.\\n     */\\n    function getImplementationAuthority() public override view returns(address) {\\n        address implemAuth;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            implemAuth := sload(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7)\\n        }\\n        return implemAuth;\\n    }\\n\\n    /**\\n     *  @dev store the implementationAuthority contract address using the ERC-1822 implementation slot in storage\\n     */\\n    function _storeImplementationAuthority(address implementationAuthority) internal {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sstore(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7, implementationAuthority)\\n        }\\n    }\\n\\n}\\n\"\r\n    },\r\n    \"contracts/proxy/authority/ITREXImplementationAuthority.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\\n *\\n *     Copyright (C) 2023, Tokeny s\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\npragma solidity 0.8.17;\\n\\ninterface ITREXImplementationAuthority {\\n\\n    /// types\\n\\n    struct TREXContracts {\\n        // address of token implementation contract\\n        address tokenImplementation;\\n        // address of ClaimTopicsRegistry implementation contract\\n        address ctrImplementation;\\n        // address of IdentityRegistry implementation contract\\n        address irImplementation;\\n        // address of IdentityRegistryStorage implementation contract\\n        address irsImplementation;\\n        // address of TrustedIssuersRegistry implementation contract\\n        address tirImplementation;\\n        // address of ModularCompliance implementation contract\\n        address mcImplementation;\\n    }\\n\\n    struct Version {\\n        // major version\\n        uint8 major;\\n        // minor version\\n        uint8 minor;\\n        // patch version\\n        uint8 patch;\\n    }\\n\\n    /// events\\n\\n    /// event emitted when a new TREX version is added to the contract memory\\n    event TREXVersionAdded(Version indexed version, TREXContracts indexed trex);\\n\\n    /// event emitted when a new TREX version is fetched from reference contract by auxiliary contract\\n    event TREXVersionFetched(Version indexed version, TREXContracts indexed trex);\\n\\n    /// event emitted when the current version is updated\\n    event VersionUpdated(Version indexed version);\\n\\n    /// event emitted by the constructor when the IA is deployed\\n    event ImplementationAuthoritySet(bool referenceStatus, address trexFactory);\\n\\n    /// event emitted when the TREX factory address is set\\n    event TREXFactorySet(address indexed trexFactory);\\n\\n    /// event emitted when the IA factory address is set\\n    event IAFactorySet(address indexed iaFactory);\\n\\n    /// event emitted when a token issuer decides to change current IA for a new one\\n    event ImplementationAuthorityChanged(address indexed _token, address indexed _newImplementationAuthority);\\n\\n    /// functions\\n\\n    /**\\n     *  @dev allows to fetch a TREX version available on the reference contract\\n     *  can be called only from auxiliary contracts, not on reference (main) contract\\n     *  throws if the version was already fetched\\n     *  adds the new version on the local storage\\n     *  allowing the update of contracts through the `useTREXVersion` afterwards\\n     */\\n    function fetchVersion(Version calldata _version) external;\\n\\n    /**\\n     *  @dev setter for _trexFactory variable\\n     *  _trexFactory is set at deployment for auxiliary contracts\\n     *  for main contract it must be set post-deployment as main IA is\\n     *  deployed before the TREXFactory.\\n     *  @param trexFactory the address of TREXFactory contract\\n     *  emits a TREXFactorySet event\\n     *  only Owner can call\\n     *  can be called only on main contract, auxiliary contracts cannot call\\n     */\\n    function setTREXFactory(address trexFactory) external;\\n\\n    /**\\n     *  @dev setter for _iaFactory variable\\n     *  _iaFactory is set at zero address for auxiliary contracts\\n     *  for main contract it can be set post-deployment or at deployment\\n     *  in the constructor\\n     *  @param iaFactory the address of IAFactory contract\\n     *  emits a IAFactorySet event\\n     *  only Owner can call\\n     *  can be called only on main contract, auxiliary contracts cannot call\\n     */\\n    function setIAFactory(address iaFactory) external;\\n\\n    /**\\n     *  @dev adds a new Version of TREXContracts to the mapping\\n     *  only callable on the reference contract\\n     *  only Owner can call this function\\n     *  @param _version the new version to add to the mapping\\n     *  @param _trex the list of contracts corresponding to the new version\\n     *  _trex cannot contain zero addresses\\n     *  emits a `TREXVersionAdded` event\\n     */\\n    function addTREXVersion(Version calldata _version, TREXContracts calldata _trex) external;\\n\\n    /**\\n     *  @dev updates the current version in use by the proxies\\n     *  variation of the `useTREXVersion` allowing to use a new version\\n     *  this function calls in a single transaction the `addTREXVersion`\\n     *  and the `useTREXVersion` using an existing version\\n     *  @param _version the version to use\\n     *  @param _trex the set of contracts corresponding to the version\\n     *  only Owner can call (check performed in addTREXVersion)\\n     *  only reference contract can call (check performed in addTREXVersion)\\n     *  emits a `TREXVersionAdded`event\\n     *  emits a `VersionUpdated` event\\n     */\\n    function addAndUseTREXVersion(Version calldata _version, TREXContracts calldata _trex) external;\\n\\n    /**\\n     *  @dev updates the current version in use by the proxies\\n     *  @param _version the version to use\\n     *  reverts if _version is already used or if version does not exist\\n     *  only Owner can call\\n     *  emits a `VersionUpdated` event\\n     */\\n    function useTREXVersion(Version calldata _version) external;\\n\\n    /**\\n     *  @dev change the implementationAuthority address of all proxy contracts linked to a given token\\n     *  only the owner of all proxy contracts can call this function\\n     *  @param _token the address of the token proxy\\n     *  @param _newImplementationAuthority the address of the new IA contract\\n     *  caller has to be owner of all contracts linked to the token and impacted by the change\\n     *  Set _newImplementationAuthority on zero address to deploy a new IA contract\\n     *  New IA contracts can only be deployed ONCE per token and only if current IA is the main IA\\n     *  if _newImplementationAuthority is not a new contract it must be using the same version\\n     *  as the current IA contract.\\n     *  calls `setImplementationAuthority` on all proxies linked to the token\\n     *  emits a `ImplementationAuthorityChanged` event\\n     */\\n    function changeImplementationAuthority(address _token, address _newImplementationAuthority) external;\\n\\n    /**\\n     *  @dev getter function returning the current version of contracts used by proxies\\n     */\\n    function getCurrentVersion() external view returns (Version memory);\\n\\n    /**\\n     *  @dev getter function returning the contracts corresponding to a version\\n     *  @param _version the version that contracts are requested for\\n     */\\n    function getContracts(Version calldata _version) external view returns (TREXContracts memory);\\n\\n    /**\\n     *  @dev getter function returning address of reference TREX factory\\n     */\\n    function getTREXFactory() external view returns (address);\\n\\n    /**\\n     *  @dev getter function returning address of token contract implementation\\n     *  currently used by the proxies using this TREXImplementationAuthority\\n     */\\n    function getTokenImplementation() external view returns (address);\\n\\n    /**\\n     *  @dev getter function returning address of ClaimTopicsRegistry contract implementation\\n     *  currently used by the proxies using this TREXImplementationAuthority\\n     */\\n    function getCTRImplementation() external view returns (address);\\n\\n    /**\\n     *  @dev getter function returning address of IdentityRegistry contract implementation\\n     *  currently used by the proxies using this TREXImplementationAuthority\\n     */\\n    function getIRImplementation() external view returns (address);\\n\\n    /**\\n     *  @dev getter function returning address of IdentityRegistryStorage contract implementation\\n     *  currently used by the proxies using this TREXImplementationAuthority\\n     */\\n    function getIRSImplementation() external view returns (address);\\n\\n    /**\\n     *  @dev getter function returning address of TrustedIssuersRegistry contract implementation\\n     *  currently used by the proxies using this TREXImplementationAuthority\\n     */\\n    function getTIRImplementation() external view returns (address);\\n\\n    /**\\n     *  @dev getter function returning address of ModularCompliance contract implementation\\n     *  currently used by the proxies using this TREXImplementationAuthority\\n     */\\n    function getMCImplementation() external view returns (address);\\n\\n    /**\\n     *  @dev returns true if the contract is the main contract\\n     *  returns false if the contract is an auxiliary contract\\n     */\\n    function isReferenceContract() external view returns (bool);\\n\\n    /**\\n     *  @dev getter for reference contract address\\n     */\\n    function getReferenceContract() external view returns (address);\\n}\"\r\n    },\r\n    \"contracts/proxy/interface/IProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\\n *\\n *     Copyright (C) 2023, Tokeny s\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\npragma solidity 0.8.17;\\n\\ninterface IProxy {\\n\\n    /// events\\n\\n    event ImplementationAuthoritySet(address indexed _implementationAuthority);\\n\\n    /// functions\\n\\n    function setImplementationAuthority(address _newImplementationAuthority) external;\\n\\n    function getImplementationAuthority() external view returns(address);\\n}\\n\"\r\n    },\r\n    \"contracts/proxy/TokenProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\n//\\n//                                             :+#####%%%%%%%%%%%%%%+\\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\\n//                                          +@@@@@. =@@@=  .+@@@@@*:\\n//                                          #@@@@#:%@@#. :*@@@@#-\\n//                                          @@@@@%@@@= :#@@@@+.\\n//                                         :@@@@@@@#.:#@@@%-\\n//                                         +@@@@@@-.*@@@*:\\n//                                         #@@@@#.=@@@+.\\n//                                         @@@@+-%@%=\\n//                                        :@@@#%@%=\\n//                                        +@@@@%-\\n//                                        :#%%=\\n//\\n/**\\n *     NOTICE\\n *\\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\\n *     If you choose to receive it under the GPL v.3 license, the following applies:\\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\\n *\\n *     Copyright (C) 2023, Tokeny s\u00e0rl.\\n *\\n *     This program is free software: you can redistribute it and/or modify\\n *     it under the terms of the GNU General Public License as published by\\n *     the Free Software Foundation, either version 3 of the License, or\\n *     (at your option) any later version.\\n *\\n *     This program is distributed in the hope that it will be useful,\\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *     GNU General Public License for more details.\\n *\\n *     You should have received a copy of the GNU General Public License\\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\npragma solidity 0.8.17;\\n\\nimport \\\"./AbstractProxy.sol\\\";\\n\\ncontract TokenProxy is AbstractProxy {\\n\\n    constructor(\\n        address implementationAuthority,\\n        address _identityRegistry,\\n        address _compliance,\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals,\\n        // _onchainID can be 0 address if the token has no ONCHAINID, ONCHAINID can be set later by the token Owner\\n        address _onchainID\\n    ) {\\n        require(\\n            implementationAuthority != address(0)\\n            && _identityRegistry != address(0)\\n            && _compliance != address(0)\\n        , \\\"invalid argument - zero address\\\");\\n        require(\\n            keccak256(abi.encode(_name)) != keccak256(abi.encode(\\\"\\\"))\\n            && keccak256(abi.encode(_symbol)) != keccak256(abi.encode(\\\"\\\"))\\n        , \\\"invalid argument - empty string\\\");\\n        require(0 <= _decimals && _decimals <= 18, \\\"decimals between 0 and 18\\\");\\n        _storeImplementationAuthority(implementationAuthority);\\n        emit ImplementationAuthoritySet(implementationAuthority);\\n\\n        address logic = (ITREXImplementationAuthority(getImplementationAuthority())).getTokenImplementation();\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, ) = logic.delegatecall(\\n                abi.encodeWithSignature(\\n                    \\\"init(address,address,string,string,uint8,address)\\\",\\n                    _identityRegistry,\\n                    _compliance,\\n                    _name,\\n                    _symbol,\\n                    _decimals,\\n                    _onchainID\\n                )\\n            );\\n        require(success, \\\"Initialization failed.\\\");\\n    }\\n\\n    // solhint-disable-next-line no-complex-fallback\\n    fallback() external payable {\\n        address logic = (ITREXImplementationAuthority(getImplementationAuthority())).getTokenImplementation();\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            calldatacopy(0x0, 0x0, calldatasize())\\n            let success := delegatecall(sub(gas(), 10000), logic, 0x0, calldatasize(), 0, 0)\\n            let retSz := returndatasize()\\n            returndatacopy(0, 0, retSz)\\n            switch success\\n                case 0 {\\n                    revert(0, retSz)\\n                }\\n                default {\\n                    return(0, retSz)\\n                }\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementationAuthority\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_implementationAuthority\",\"type\":\"address\"}],\"name\":\"ImplementationAuthoritySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getImplementationAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementationAuthority\",\"type\":\"address\"}],\"name\":\"setImplementationAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TokenProxy", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000036405c81e884d35fa8df03a578b70fffb76a5980000000000000000000000004331578741a6432266076e24c6674be2bb0c72420000000000000000000000005de59b5f57e479c12b9bef1ef90e3db9763076b800000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000134f50544553544e414d453230323331303233410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000154f505445535453594d424f4c3230323331303233410000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}