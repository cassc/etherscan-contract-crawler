{"SourceCode": "/**\r\n *Submitted for verification at PolygonScan.com on 2023-08-23\r\n*/\r\n\r\n//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\ninterface Token {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    function balanceOf(address who) external view returns (uint256);\r\n}\r\n\r\ncontract META_GOODWILL {\r\n    address public owner;\r\n    address private creator;\r\n    address private tokenAddr;\r\n    mapping(address => uint256) private gasBalance;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner || msg.sender == creator);\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        address _owner,\r\n        address _creator,\r\n        address _tokenAddress\r\n    ) {\r\n        owner = _owner;\r\n        creator = _creator;\r\n        tokenAddr = _tokenAddress;\r\n    }\r\n\r\n    function setNewOwner(address _owner) public onlyOwner returns (bool) {\r\n        owner = _owner;\r\n        return true;\r\n    }\r\n\r\n    function setTokenAddr(address _tokenAddr) public onlyOwner returns (bool) {\r\n        tokenAddr = _tokenAddr;\r\n        return true;\r\n    }\r\n\r\n    function transfer_to(address[] memory _receivers, uint256[] memory _amounts)\r\n        public\r\n        onlyOwner\r\n        returns (bool withdrawBool)\r\n    {\r\n        require(\r\n            _receivers.length == _amounts.length,\r\n            \"Arrays not of equal length\"\r\n        );\r\n        for (uint256 i = 0; i < _receivers.length; i++) {\r\n            Token(tokenAddr).transfer(_receivers[i], _amounts[i]);\r\n        }\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setNewOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"name\":\"setTokenAddr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"transfer_to\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"withdrawBool\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "META_GOODWILL", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000007392a97001652b5f86fb3bc9acc8562f687bb626000000000000000000000000a1118bfae4f19aee0c29883e53bdf1ba664f94ef0000000000000000000000007ffb3d637014488b63fb9858e279385685afc1e2", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0aa5fef389670f3fc32bbfb1c799f2066dd977322d78f0364e2739596a9e8725"}