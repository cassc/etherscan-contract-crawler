{"SourceCode": "pragma solidity ^0.6.2;\r\n\r\n\r\n/**\r\nERC20 Token\r\n \r\nSymbol          : IOI\r\nName            : IOI Token\r\nTotal supply    : 100000000\r\nDecimals        : 6\r\n \r\n*/\r\n \r\nabstract contract ERC20Interface {\r\n  string public name;\r\n  string public symbol;\r\n  uint8 public decimals;\r\n  uint256 public totalSupply;\r\n  function balanceOf(address _owner) public view virtual returns (uint256 balance);\r\n  function transfer(address _to, uint256 _value) public virtual returns (bool success);\r\n  function transferFrom(address _from, address _to, uint256 _value) public virtual returns (bool success);\r\n  function approve(address _spender, uint256 _value) public virtual returns (bool success);\r\n  function allowance(address _owner, address _spender) public view virtual returns (uint256 remaining);\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a / b;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\nabstract contract TokenRecipient {\r\n function receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData) public virtual;\r\n}\r\n\r\ncontract IOIToken is ERC20Interface {\r\n mapping (address => uint256) _balances;\r\n mapping (address => mapping (address => uint256)) _allowed;\r\n address public childChainManagerProxy;\r\n address deployer;\r\n using SafeMath for uint256;\r\n  \r\n constructor(address _childChainManagerProxy) public {\r\n   name = \"IOI Token\";\r\n   symbol = \"IOI\";\r\n   decimals = 6;\r\n   totalSupply = 100000000 * 10 ** uint256(decimals);\r\n   _balances[msg.sender] = totalSupply;\r\n   childChainManagerProxy = _childChainManagerProxy;\r\n   deployer = msg.sender;\r\n }\r\n \r\n event Burn(address indexed from, uint256 value);\r\n \r\n function balanceOf(address _owner) public view override returns (uint256 balance) {\r\n   return _balances[_owner];\r\n }\r\n \r\n function transfer(address _to, uint256 _value) public override returns (bool success) {\r\n   _transfer(msg.sender, _to, _value);\r\n   return true;\r\n }\r\n \r\n function transferFrom(address _from, address _to, uint256 _value) public override returns (bool success) {\r\n   require(_value <= _allowed[_from][msg.sender]);\r\n   _allowed[_from][msg.sender] -= _value;\r\n   _transfer(_from, _to, _value);\r\n   return true;\r\n }\r\n \r\n function approve(address _spender, uint256 _value) public override returns (bool success) {\r\n   _allowed[msg.sender][_spender] = _value;\r\n   emit Approval(msg.sender, _spender, _value);\r\n   return true;\r\n }\r\n \r\n function allowance(address _owner, address _spender) public view override returns (uint256 remaining) {\r\n   return _allowed[_owner][_spender];\r\n }\r\n \r\n function approveAndCall(address _spender, uint256 _value, bytes memory _extraData) public returns (bool success) {\r\n   TokenRecipient spender = TokenRecipient(_spender);\r\n   approve(_spender, _value);\r\n   spender.receiveApproval(msg.sender, _value, address(this), _extraData);\r\n   return true;\r\n }\r\n \r\n function burn(uint256 _value) public returns (bool success) {\r\n   require(_balances[msg.sender] >= _value);\r\n   _balances[msg.sender] -= _value;\r\n   totalSupply -= _value;\r\n   emit Burn(msg.sender, _value);\r\n   return true;\r\n }\r\n \r\n function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n   require(_balances[_from] >= _value);\r\n   require(_value <= _allowed[_from][msg.sender]);\r\n   _balances[_from] -= _value;\r\n   _allowed[_from][msg.sender] -= _value;\r\n   totalSupply -= _value;\r\n   emit Burn(_from, _value);\r\n   return true;\r\n }\r\n \r\n function _transfer(address _from, address _to, uint _value) internal {\r\n   require(_to != address(0x0));\r\n   require(_balances[_from] >= _value);\r\n   require(_balances[_to] + _value > _balances[_to]);\r\n  \r\n   uint previousBalances = _balances[_from] + _balances[_to];\r\n   _balances[_from] -= _value;\r\n   _balances[_to] += _value;\r\n   emit Transfer(_from, _to, _value);\r\n   assert(_balances[_from] + _balances[_to] == previousBalances);\r\n }\r\n\r\n function updateChildChainManager(address newChildChainManagerProxy) external {\r\n   require(newChildChainManagerProxy != address(0), \"Bad ChildChainManagerProxy address\");\r\n   require(msg.sender == deployer, \"You're not allowed\");\r\n\r\n   childChainManagerProxy = newChildChainManagerProxy;\r\n }\r\n\r\n function deposit(address user, bytes calldata depositData) external {\r\n    require(msg.sender == childChainManagerProxy, \"You're not allowed to deposit\");\r\n\r\n    uint256 amount = abi.decode(depositData, (uint256));\r\n\r\n    totalSupply = totalSupply.add(amount);\r\n    _balances[user] = _balances[user].add(amount);\r\n        \r\n    emit Transfer(address(0), user, amount);\r\n }\r\n\r\n function withdraw(uint256 amount) external {\r\n    _balances[msg.sender] = _balances[msg.sender].sub(amount);\r\n    totalSupply = totalSupply.sub(amount);\r\n        \r\n    emit Transfer(msg.sender, address(0), amount);\r\n }\r\n  \r\n fallback() external payable {\r\n   revert();\r\n }\r\n \r\n receive() external payable{\r\n   revert();\r\n }\r\n \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_childChainManagerProxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"childChainManagerProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"depositData\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newChildChainManagerProxy\",\"type\":\"address\"}],\"name\":\"updateChildChainManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "IOIToken", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000a6fa4fb5f76172d178d61b04b0ecd319c5d1c0aa", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": ""}