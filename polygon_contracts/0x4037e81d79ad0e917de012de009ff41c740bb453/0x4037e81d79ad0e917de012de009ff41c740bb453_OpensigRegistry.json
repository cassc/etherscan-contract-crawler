{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @title Opensig Registry\r\n * @author Bubble Protocol\r\n *\r\n * EVM version of the OpenSig blockchain registry.  Signatures can be registered once.\r\n */\r\ncontract OpensigRegistry {\r\n\r\n    /**\r\n     * @dev emitted each time a new published signature is registered.\r\n     */\r\n    event Signature(uint256 time, address indexed signer, bytes32 indexed signature, bytes data);\r\n\r\n    /**\r\n     * @dev registry of published signatures.\r\n     */\r\n    mapping (bytes32 => bool) private signatures;\r\n    \r\n    /**\r\n     * @dev Registers the given signature and emits it along with the block timestamp and given data.\r\n     */\r\n    function registerSignature(bytes32 sig_, bytes memory data_) public {\r\n        require(!signatures[sig_], \"signature already published\");\r\n        signatures[sig_] = true;\r\n        emit Signature(block.timestamp, msg.sender, sig_, data_);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the given signature has already been registered\r\n     */\r\n    function isRegistered(bytes32 sig_) public view returns (bool) {\r\n        return signatures[sig_];\r\n    }\r\n    \r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"signature\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Signature\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"sig_\",\"type\":\"bytes32\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"sig_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data_\",\"type\":\"bytes\"}],\"name\":\"registerSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "OpensigRegistry", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://777fac70e3fc7a30d6b2c83ef7a2e43c2aad69ba957fe3938bb14ec8b618a1f3"}