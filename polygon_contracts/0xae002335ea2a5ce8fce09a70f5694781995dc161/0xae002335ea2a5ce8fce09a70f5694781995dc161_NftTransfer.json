{"SourceCode": "/**\r\n *Submitted for verification at PolygonScan.com on 2023-08-22\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.6;\r\n\r\ninterface IERC1155 {\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n\r\ninterface IERC721 {\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id\r\n    ) external;\r\n}\r\n\r\ncontract NftTransfer {\r\n\r\n    address public owner;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n      modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    function transferERC1155(\r\n        IERC1155[] calldata _tokens,\r\n        address[] calldata _to,\r\n        uint256[] calldata _ids,\r\n        uint256[] calldata _amounts\r\n    ) public onlyOwner{\r\n        require(_tokens.length > 0, \"No tokens specified\");\r\n        require(\r\n            _to.length == _ids.length && _to.length == _amounts.length,\r\n            \"Receivers, IDs, and amounts are of different lengths\"\r\n        );\r\n        require(_to.length > 0, \"No NFTs to transfer\");\r\n\r\n        uint256 numTokens = _tokens.length;\r\n        uint256 numReceivers = _to.length;\r\n\r\n        for (uint256 i = 0; i < numTokens; i++) {\r\n            IERC1155 token = _tokens[i];\r\n            bool isProcessed = false;\r\n            for (uint256 j = 0; j < numReceivers; j++) {\r\n                if (_amounts[i] > 0 && !isProcessed) {\r\n                    token.safeTransferFrom(\r\n                        msg.sender,\r\n                        _to[j],\r\n                        _ids[i],\r\n                        _amounts[i],\r\n                        \"\"\r\n                    );\r\n                    isProcessed = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n     function transferERC721(\r\n        IERC721[] calldata _tokens,\r\n        address[] calldata _to,\r\n        uint256[] calldata _ids\r\n    ) public onlyOwner{\r\n        require(_tokens.length > 0, \"No tokens specified\");\r\n        require(\r\n            _to.length == _ids.length,\r\n            \"Receivers, IDs are of different lengths\"\r\n        );\r\n        require(_to.length > 0, \"No NFTs to transfer\");\r\n\r\n        uint256 numTokens = _tokens.length;\r\n        uint256 numReceivers = _to.length;\r\n\r\n        for (uint256 i = 0; i < numTokens; i++) {\r\n            IERC721 token = _tokens[i];\r\n            bool isProcessed = false;\r\n            for (uint256 j = 0; j < numReceivers; j++) {\r\n                if (!isProcessed) {\r\n                    token.safeTransferFrom(\r\n                        msg.sender,\r\n                        _to[j],\r\n                        _ids[i]\r\n                    );\r\n                    isProcessed = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC1155[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"transferERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "NftTransfer", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f75f450dbc7f4a171bb07dad53b9fa2e863ac87310375c22e4e95d8640bc083b"}