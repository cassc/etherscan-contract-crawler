{"SourceCode": "/**\r\n *Submitted for verification at polygonscan.com on 2022-11-25\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.7;\r\n\r\ncontract SheepFarmer {  \r\n    struct Village {\r\n        uint256 gems;\r\n        uint256 money;\r\n        uint256 money2;\r\n        uint256 yield;\r\n        uint256 timestamp;\r\n        uint256 hrs;\r\n        address neighbor;\r\n        uint256 neighbors;\r\n        uint256 neighborDeps;\r\n        uint8 warehouse;\r\n        uint8 truck;    \r\n        uint8 farm;\r\n        uint8[6] sheeps;\r\n    }\r\n\r\n    struct Neighbor {\r\n        uint256 gems;\r\n        uint256 wools;\r\n    }\r\n\r\n    mapping(address => Village) public villages;\r\n    mapping(address => Neighbor) public neighborsInfo;\r\n\r\n    uint256 public totalSheeps;\r\n    uint256 public totalVillages;\r\n    uint256 public totalInvested;\r\n    address private manager;\r\n    address private devWallet;\r\n\r\n    uint256 public immutable denominator = 10;\r\n    uint256 public immutable GEM_BONUS = 10;\r\n    uint256 public immutable CONVERT_BONUS = 50;\r\n    uint256 public immutable OWNER_ETHER_FEE = 4;\r\n    uint256 public immutable OWNER_GEM_FEE = 4;\r\n    uint256 public immutable REF_GEM_BONUS = 8;\r\n    uint256 public immutable REF_WOOL_BONUS = 4;\r\n    uint256 public immutable PERCENT_DIVIDER = 1000;\r\n\r\n    bool public init;\r\n\r\n    event Newbie(address indexed user, uint256 bonus);\r\n    event VillageUpgraded(address indexed user, uint256 yield, uint256 farm, uint256 time);\r\n    event WarehouseUpgraded(address indexed user, uint8 warehouseId, uint256 time);\r\n    event TruckUpgraded(address indexed user, uint8 truckId, uint256 time);\r\n    event BuyGem(address indexed user, uint256 amount, uint256 gem, uint256 time);\r\n    event SellWool(address indexed user, uint256 wool, uint256 time);\r\n    event SellVillage(address indexed user, uint256 time);\r\n    event ConvertWool(address indexed user, uint256 wool, uint256 gem, uint256 time);\r\n\r\n    modifier initialized() {\r\n        require(init, \"Not initialized\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        manager = address(0xa97034123874f6d686f09114b9062986E0D75628);\r\n        devWallet = address(0xa97034123874f6d686f09114b9062986E0D75628);\r\n    }\r\n\r\n    function initialize() external {\r\n        require(manager == msg.sender);\r\n        require(!init);\r\n        init = true;\r\n    }\r\n\r\n    function register(address neighbor) external initialized {\r\n        address user = msg.sender;\r\n        require(villages[user].timestamp == 0, \"just new users\");\r\n        uint256 gems;\r\n        totalVillages++;\r\n        if (villages[neighbor].sheeps[0] > 0 && neighbor != manager) {\r\n            gems = GEM_BONUS * 2;\r\n        } else{\r\n            neighbor = address(0x000000000000000000000000000000000000dEaD);\r\n            gems = GEM_BONUS;\r\n        }\r\n        villages[neighbor].neighbors++;\r\n        villages[user].neighbor = neighbor;\r\n        villages[user].gems = gems;\r\n        emit Newbie(msg.sender, gems);\r\n    }\r\n\r\n    function addGems() external payable initialized {\r\n        uint256 gems = msg.value / 1e17;\r\n        require(gems > 0, \"Zero gems\");\r\n        address user = msg.sender;\r\n        require(villages[user].neighbor != address(0), \"first register\");\r\n        totalInvested += msg.value;\r\n        if (villages[user].timestamp == 0) {\r\n            villages[user].timestamp = block.timestamp;\r\n        }\r\n        address neighbor = villages[user].neighbor;\r\n        uint256 RefGemBonus = REF_GEM_BONUS;\r\n        uint256 RefWoolBonus = REF_WOOL_BONUS;\r\n        villages[neighbor].gems += (gems * RefGemBonus) / 100;\r\n        villages[neighbor].money += (gems * 100 * RefWoolBonus) / 100;\r\n        neighborsInfo[neighbor].gems += (gems * RefGemBonus) / 100;\r\n        neighborsInfo[neighbor].wools += (gems * 100 * RefWoolBonus) / 100;\r\n        villages[neighbor].neighborDeps += gems;\r\n        villages[user].gems += gems;\r\n\r\n        uint256 ownerGemFee = (gems * OWNER_GEM_FEE) / 100;\r\n        uint256 ownerEtherFee = (msg.value * OWNER_ETHER_FEE) / 100;\r\n        payFee(ownerEtherFee,ownerGemFee);\r\n\r\n        emit BuyGem(msg.sender, msg.value, gems, block.timestamp);\r\n    }\r\n\r\n    function convertWoolToGem(uint256 wool) external initialized {\r\n        address user = msg.sender;\r\n        uint256 Convertablewool = wool;\r\n        require(\r\n            Convertablewool <= villages[user].money && Convertablewool > 0,\r\n            \"not enough Wool\"\r\n        );\r\n        villages[user].money -= Convertablewool;\r\n        Convertablewool =\r\n            Convertablewool +\r\n            ((Convertablewool * CONVERT_BONUS) / PERCENT_DIVIDER);\r\n        uint256 gemAmount = Convertablewool / 100;\r\n        villages[user].gems += gemAmount;\r\n        emit ConvertWool(msg.sender, wool, gemAmount, block.timestamp);\r\n    }\r\n\r\n    function collectMoney() public initialized {\r\n        address user = msg.sender;\r\n        syncVillage(user);\r\n        villages[user].hrs = 0;\r\n        villages[user].money += villages[user].money2;\r\n        villages[user].money2 = 0;\r\n    }\r\n\r\n    function upgradeVillage(uint256 farmId) external initialized {\r\n        require(farmId < 6, \"Max 6 farm\");\r\n        address user = msg.sender;\r\n        if (villages[user].sheeps[0] == 0) {\r\n            require(farmId == 0, \"Only first farm is available\");\r\n        }\r\n        if (villages[user].farm < farmId) {\r\n            villages[user].farm++;\r\n            require(villages[user].farm == farmId, \"farm is lock\");\r\n        }\r\n        syncVillage(user);\r\n        villages[user].sheeps[farmId]++;\r\n        totalSheeps++;\r\n        uint256 sheeps = villages[user].sheeps[farmId];\r\n        villages[user].gems -= getUpgradePrice(farmId, sheeps) / denominator;\r\n        villages[user].yield += getYield(farmId, sheeps);\r\n        emit VillageUpgraded(msg.sender, villages[user].yield, villages[user].farm, block.timestamp);\r\n    }\r\n\r\n    function upgradeWarehouse() external initialized {\r\n        address user = msg.sender;\r\n        uint8 warehouseId = villages[user].warehouse + 1;\r\n        syncVillage(user);\r\n        require(warehouseId < 5, \"Max 5 WareHouse\");\r\n        (uint256 gemPrice, uint256 woolPrice, ) = getWarehouse(warehouseId);\r\n        villages[user].gems -= gemPrice / denominator;\r\n        villages[user].money -= woolPrice / denominator;\r\n        villages[user].warehouse = warehouseId;\r\n        emit WarehouseUpgraded(msg.sender, warehouseId, block.timestamp);\r\n    }\r\n\r\n    function upgradeTruck() external initialized {\r\n        address user = msg.sender;\r\n        uint8 truckId = villages[user].truck + 1;\r\n        syncVillage(user);\r\n        require(truckId < 4, \"Max 4 truck\");\r\n        (uint256 gemPrice, uint256 woolPrice, ) = getTruck(truckId);\r\n        villages[user].gems -= gemPrice / denominator;\r\n        villages[user].money -= woolPrice / denominator;\r\n        villages[user].truck = truckId;\r\n        emit TruckUpgraded(msg.sender, truckId, block.timestamp);\r\n    }\r\n\r\n    function withdrawMoney(uint256 wool) external initialized {\r\n        address user = msg.sender;\r\n        require(wool <= villages[user].money && wool > 0);\r\n        villages[user].money -= wool;\r\n        uint256 amount = wool * 1e15;\r\n        payable(user).transfer(\r\n            address(this).balance < amount\r\n                ? address(this).balance\r\n                : amount\r\n        );\r\n        emit SellWool(msg.sender, wool, block.timestamp);\r\n    }\r\n\r\n    function getSheeps(address user) external view returns (uint8[6] memory) {\r\n        return villages[user].sheeps;\r\n    }\r\n\r\n    function syncVillage(address user) internal {\r\n        require(villages[user].timestamp > 0, \"User is not registered\");\r\n        if (villages[user].yield > 0) {\r\n            (, , uint256 warehouse) = getWarehouse(villages[user].warehouse);\r\n            uint256 hrs = block.timestamp / 3600 - villages[user].timestamp / 3600;\r\n            if (hrs + villages[user].hrs > warehouse) {\r\n                hrs = warehouse - villages[user].hrs;\r\n            }\r\n            (, , uint256 truck) = getTruck(villages[user].truck);\r\n            uint256 userYield =((villages[user].yield * 100) + ((villages[user].yield * 100 * truck) / PERCENT_DIVIDER)) / 100 ;            \r\n            villages[user].money2 += hrs * userYield;\r\n            villages[user].hrs += hrs;\r\n        }\r\n        villages[user].timestamp = block.timestamp;\r\n    }\r\n\r\n    function payFee(uint256 etherFee, uint256 gemFee) internal {\r\n        if(etherFee > 0){\r\n            payable(devWallet).transfer(etherFee);\r\n        }\r\n        if(gemFee > 0){\r\n            villages[devWallet].gems += gemFee;\r\n        }\r\n    }\r\n\r\n    function getUpgradePrice(uint256 farmId, uint256 sheepId)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        if (sheepId == 1)\r\n            return [400, 4000, 12000, 24000, 40000, 60000][farmId];\r\n        if (sheepId == 2)\r\n            return [600, 6000, 18000, 36000, 60000, 90000][farmId];\r\n        if (sheepId == 3)\r\n            return [900, 9000, 27000, 54000, 90000, 135000][farmId];\r\n        if (sheepId == 4)\r\n            return [1350, 13000, 40000, 81000, 135000, 202000][farmId];\r\n        if (sheepId == 5)\r\n            return [2000, 20000, 60000, 121000, 202000, 303000][farmId];\r\n        if (sheepId == 6)\r\n            return [3000, 30000, 91000, 182000, 303000, 455000][farmId];\r\n        if (sheepId == 7)\r\n            return [4500, 45000, 136000, 273000, 455000, 683000][farmId];\r\n        if (sheepId == 8)\r\n            return [6800, 68000, 205000, 410000, 683000, 1025000][farmId];\r\n        if (sheepId == 9)\r\n            return [10000, 102000, 307000, 615000, 1025000, 1537000][farmId];\r\n        if (sheepId == 10)\r\n            return [15000, 154000, 461000, 922000, 1537000, 2300000][farmId];\r\n        revert(\"Incorrect sheepId\");\r\n    }\r\n\r\n    function getYield(uint256 farmId, uint256 sheepId)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        if (sheepId == 1) return [5, 56, 179, 382, 678, 762][farmId];\r\n        if (sheepId == 2) return [8, 85, 272, 581, 1030, 1142][farmId];\r\n        if (sheepId == 3) return [12, 128, 413, 882, 1564, 1714][farmId];\r\n        if (sheepId == 4) return [18, 195, 628, 1340, 2379, 2570][farmId];\r\n        if (sheepId == 5) return [28, 297, 954, 2035, 3620, 3856][farmId];\r\n        if (sheepId == 6) return [42, 450, 1439, 3076, 5506, 5783][farmId];\r\n        if (sheepId == 7) return [63, 675, 2159, 4614, 8259, 8675][farmId];\r\n        if (sheepId == 8) return [95, 1013, 3238, 6921, 12389, 13013][farmId];\r\n        if (sheepId == 9) return [142, 1519, 4857, 10382, 18583, 19519][farmId];\r\n        if (sheepId == 10) return [213, 2278, 7285, 15572, 27874, 29278][farmId];\r\n        revert(\"Incorrect sheepId\");\r\n    }\r\n\r\n    function getWarehouse(uint256 warehouseId)\r\n        internal\r\n        pure\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        )\r\n    {\r\n        if (warehouseId == 0) return (0, 0, 24); // price in gem | price in wool | value\r\n        if (warehouseId == 1) return (2000, 0, 30);\r\n        if (warehouseId == 2) return (2500, 0, 36);\r\n        if (warehouseId == 3) return (3000, 20000, 42);\r\n        if (warehouseId == 4) return (4000, 50000, 48);\r\n        revert(\"Incorrect warehouseId\");\r\n    }\r\n\r\n    function getTruck(uint256 truckId)\r\n        internal\r\n        pure\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256\r\n        )\r\n    {\r\n        if (truckId == 0) return (0, 0, 0); // price in gem | price in wool | value\r\n        if (truckId == 1) return (10000, 200000, 33);\r\n        if (truckId == 2) return (40000, 1000000, 66);\r\n        if (truckId == 3) return (100000, 3000000, 99);\r\n        revert(\"Incorrect truckId\");\r\n    }\r\n\r\n    function isRegister(address user) external view returns (bool) {\r\n         if(villages[user].neighbor != address(0)){\r\n             return true;\r\n         }else{\r\n             return false;\r\n         }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gem\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"BuyGem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wool\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gem\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"ConvertWool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bonus\",\"type\":\"uint256\"}],\"name\":\"Newbie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"SellVillage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wool\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"SellWool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"truckId\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"TruckUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"yield\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"farm\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"VillageUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"warehouseId\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"WarehouseUpgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONVERT_BONUS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GEM_BONUS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER_ETHER_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER_GEM_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REF_GEM_BONUS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REF_WOOL_BONUS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addGems\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wool\",\"type\":\"uint256\"}],\"name\":\"convertWoolToGem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"denominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getSheeps\",\"outputs\":[{\"internalType\":\"uint8[6]\",\"name\":\"\",\"type\":\"uint8[6]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isRegister\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"neighborsInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gems\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wools\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"neighbor\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalInvested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSheeps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVillages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeTruck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"farmId\",\"type\":\"uint256\"}],\"name\":\"upgradeVillage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeWarehouse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"villages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gems\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"money2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yield\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hrs\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"neighbor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"neighbors\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neighborDeps\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"warehouse\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"truck\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"farm\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wool\",\"type\":\"uint256\"}],\"name\":\"withdrawMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SheepFarmer", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://8a9c825076962a7517e523a3f5b0958b8a5266b0667b9799df676cd2f14a3ed3"}