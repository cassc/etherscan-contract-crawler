{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/MaticBlast.sol\": {\r\n      \"content\": \"/**\\r\\n *Submitted for verification at Polygonscan.com on 2023-11-05\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\ncontract MaticBlast {\\r\\n    address public owner;\\r\\n\\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    function signUp(address[] calldata recipients, uint256[] calldata amounts) external payable  {\\r\\n       \\r\\n        require(recipients.length == amounts.length, \\\"Invalid input data\\\");\\r\\n        require(recipients.length > 0, \\\"Zero size array not allowed\\\");\\r\\n\\r\\n        for (uint256 i = 0; i < recipients.length; i++) {\\r\\n            payable(recipients[i]).transfer(amounts[i]);\\r\\n        }\\r\\n    }\\r\\n    function gridPower(address[] calldata recipients, uint256[] calldata amounts) external payable  {\\r\\n        \\r\\n        require(recipients.length == amounts.length, \\\"Invalid input data\\\");\\r\\n        require(recipients.length > 0, \\\"Zero size array not allowed\\\");\\r\\n\\r\\n        for (uint256 i = 0; i < recipients.length; i++) {\\r\\n            payable(recipients[i]).transfer(amounts[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function extraBonus(address[] calldata recipients, uint256[] calldata amounts) external payable  {\\r\\n        \\r\\n        require(recipients.length == amounts.length, \\\"Invalid input data\\\");\\r\\n        require(recipients.length > 0, \\\"Zero size array not allowed\\\");\\r\\n\\r\\n        for (uint256 i = 0; i < recipients.length; i++) {\\r\\n            payable(recipients[i]).transfer(amounts[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"extraBonus\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"gridPower\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"signUp\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MaticBlast", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}