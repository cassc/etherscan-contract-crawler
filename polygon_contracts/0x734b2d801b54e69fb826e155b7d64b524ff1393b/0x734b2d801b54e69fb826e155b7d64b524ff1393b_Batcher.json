{"SourceCode": "/**\r\n *Submitted for verification at Etherscan.io on 2023-06-04\r\n */\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.7.0;\r\ninterface Myinterface {\r\n    function publicMint(address to) external;\r\n    function safeTransferFrom(address from,address to,uint256 tokenId) external;\r\n}\r\n\r\ncontract Batcher {\r\n    address private immutable owner;\r\n    Myinterface wild = Myinterface(0x92DEbE94Ae834B1B627033eEEa918405Eece472d);\r\n    constructor(){\r\n        owner = msg.sender;\r\n    }\r\n    modifier isOwner() {\r\n        require(msg.sender == owner, \"Caller is not owner\");\r\n        _;\r\n    }\r\n\r\n    function fooyaoBulkMint(address[] calldata addrs) isOwner external payable {\r\n        for (uint i = 0; i < addrs.length; i++) {\r\n            wild.publicMint(addrs[i]);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"fooyaoBulkMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "Batcher", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2e71626e332477cab4e33db91ff91f280333587bad09f49c49bf3849d9b3141c"}