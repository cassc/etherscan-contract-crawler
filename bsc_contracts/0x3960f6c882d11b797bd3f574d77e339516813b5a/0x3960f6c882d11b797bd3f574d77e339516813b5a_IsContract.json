{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0; \r\n\r\ncontract IsContract {\r\n    function isContract(address[] memory _contracts) external view returns (bool[] memory) {\r\n        bool[] memory contractCheck = new bool[](_contracts.length);\r\n        for (uint i; i < _contracts.length; i++) {\r\n                uint32 size;\r\n                address a = _contracts[i];\r\n                assembly {\r\n                    size := extcodesize(a)\r\n                }\r\n\r\n                contractCheck[i] = size > 0;\r\n        }\r\n\r\n        return contractCheck;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_contracts\",\"type\":\"address[]\"}],\"name\":\"isContract\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "IsContract", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7e40de50705dbe6ad7062fd8a8b2c52b1ebd2039963d1486e68c8d0f0c506ab1"}