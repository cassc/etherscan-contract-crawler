{"SourceCode": "// SPDX-License-Identifier: UNLISCENSED\r\npragma solidity ^0.8.4;\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"not owner\");\r\n        _;\r\n    }\r\n\r\n    function setOwner(address _newOwner) external onlyOwner {\r\n        require(_newOwner != address(0), \"invalid address\");\r\n        owner = _newOwner;\r\n    }\r\n\r\n    function onlyOwnerCanCallThisFunc() external onlyOwner {\r\n        //code\r\n    }\r\n\r\n    function anyOneCanCall() external {\r\n        // code\r\n    }\r\n}\r\n\r\ncontract LoraxToken is Ownable {\r\n    string public name = \"Lorax\";\r\n    string public symbol = \"LORAX\";\r\n    uint256 public totalSupply = 69000000 * 1e18;\r\n    uint8 public decimals = 18;\r\n\r\n    // Addresses\r\n    address constant DevAddress = 0x4aA95be8674202cc4034a605A1E13a215FB3CB60; // 0.2% for funding further development\r\n    address constant MarketingAddress = 0x8E3e4CAbF28E6CCF6E0042154CF416531815E13C; // 1%\r\n    address constant BurnAddress = 0x000000000000000000000000000000000000dEaD; // 1%\r\n    address constant LiquidityAddress = 0xF79C2bD7CC931C22E826eAe59F5eCA0E4FC64FC2; // 2%\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value); \r\n\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    constructor() {\r\n        balanceOf[msg.sender] = totalSupply;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n\r\n        uint256 devValue = _value * 2 / 1000; // 0.2% for development\r\n        uint256 marketingValue = _value / 100; // 1% for marketing\r\n        uint256 burnValue = _value / 100; // 1% for burning\r\n        uint256 liquidityValue = _value * 2 / 100; // 2% for liquidity\r\n\r\n        uint256 totalDeduction = devValue + marketingValue + burnValue + liquidityValue;\r\n        uint256 toRecipientValue = _value - totalDeduction;\r\n\r\n        balanceOf[msg.sender] -= _value;\r\n        balanceOf[_to] += toRecipientValue;\r\n        balanceOf[DevAddress] += devValue;\r\n        balanceOf[MarketingAddress] += marketingValue;\r\n        balanceOf[BurnAddress] += burnValue;\r\n        balanceOf[LiquidityAddress] += liquidityValue;\r\n\r\n        emit Transfer(msg.sender, _to, toRecipientValue);\r\n        emit Transfer(msg.sender, DevAddress, devValue);\r\n        emit Transfer(msg.sender, MarketingAddress, marketingValue);\r\n        emit Transfer(msg.sender, BurnAddress, burnValue);\r\n        emit Transfer(msg.sender, LiquidityAddress, liquidityValue);\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= balanceOf[_from]);\r\n        require(_value <= allowance[_from][msg.sender]);\r\n\r\n        uint256 devValue = _value * 2 / 1000; // 0.2% for development\r\n        uint256 marketingValue = _value / 100; // 1% for marketing\r\n        uint256 burnValue = _value / 100; // 1% for burning\r\n        uint256 liquidityValue = _value * 2 / 100; // 2% for liquidity\r\n\r\n        uint256 totalDeduction = devValue + marketingValue + burnValue + liquidityValue;\r\n        uint256 toRecipientValue = _value - totalDeduction;\r\n\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += toRecipientValue;\r\n        balanceOf[DevAddress] += devValue;\r\n        balanceOf[MarketingAddress] += marketingValue;\r\n        balanceOf[BurnAddress] += burnValue;\r\n        balanceOf[LiquidityAddress] += liquidityValue;\r\n\r\n        allowance[_from][msg.sender] -= _value;\r\n\r\n        emit Transfer(_from, _to, toRecipientValue);\r\n        emit Transfer(_from, DevAddress, devValue);\r\n        emit Transfer(_from, MarketingAddress, marketingValue);\r\n        emit Transfer(_from, BurnAddress, burnValue);\r\n        emit Transfer(_from, LiquidityAddress, liquidityValue);\r\n\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"anyOneCanCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onlyOwnerCanCallThisFunc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LoraxToken", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://71dac56b5eb8dd668cf09e2b1827c954e9107ded4a01bfd8918215a7cf8add31"}