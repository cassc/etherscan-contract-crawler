{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\n/*\r\n   __  ____  ____          \r\n  / / / /  |/  (_)___  ___ \r\n / / / / /|_/ / / __ \\/ _ \\\r\n/ /_/ / /  / / / / / /  __/\r\n\\____/_/  /_/_/_/ /_/\\___/ \r\n\r\n*/\r\n\r\npragma solidity 0.8.13;\r\n\r\ninterface IToken {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b != 0);\r\n    return a % b;\r\n  }\r\n}\r\n\r\ncontract UMine {\r\n    using SafeMath for uint256;\r\n\r\n    IToken public token_BUSD;\r\n    \r\n    uint256 public MINERALS_TO_BUILD_1EXTRACTOR = 1080000;\r\n    uint256 public PERCENTS_DIVIDER = 1000;\r\n    uint256 public REFERRAL = 100; // 10%\r\n    uint256 public TAX = 50;\r\n    uint256 public MARKET_MINERALS_DIVISOR = 2; // 50%\r\n    uint256 public MARKET_MINERALS_DIVISOR_SELL = 1; // 100%\r\n\r\n    uint256 public MIN_INVEST_LIMIT = 10 * 1e18; /** 10 BUSD  **/\r\n    uint256 public WALLET_DEPOSIT_LIMIT = 10000 * 1e18; /** 10000 BUSD  **/\r\n\r\n    uint256 public REBUILD_BONUS = 30; /** 3% **/\r\n    uint256 public REBUILD_BONUS_MAX_TIMES = 10; /** 10 times / 5 days. **/\r\n    uint256 public REBUILD_STEP = 12 * 60 * 60; /** every 12 hours. **/\r\n\r\n    uint256 public COLLECTION_TAX = 750; // 75%\r\n    uint256 public REBUILD_FOR_NO_TAX_COLLECTION = 10; // rebuild periods, for no tax collection.\r\n\r\n    uint256 public totalStaked;\r\n    uint256 public totalDeposits;\r\n    uint256 public totalRebuild;\r\n    uint256 public totalRefBonus;\r\n    uint256 public totalCollected;\r\n\r\n    uint256 public marketMinerals;\r\n    uint256 PSN = 10000;\r\n    uint256 PSNH = 5000;\r\n    bool public contractStarted;\r\n\r\n    uint256 public CUTOFF_STEP = 48 * 60 * 60; /** 48 hours  **/\r\n\r\n    address public owner;\r\n    address public mkt;\r\n    address public shop;\r\n\r\n    struct User {\r\n        uint256 initialDeposit;\r\n        uint256 userDeposit;\r\n        uint256 extractors;\r\n        uint256 claimedMinerals;\r\n        uint256 lastRebuild;\r\n        address referrer;\r\n        uint256 referralsCount;\r\n        uint256 referralMineralRewards;\r\n        uint256 totalCollected;\r\n        uint256 dailyRebuildBonus;\r\n        uint256 lastWithdrawTime;\r\n    }\r\n\r\n    mapping(address => User) public users;\r\n\r\n    mapping(address => uint256) public customMineralsPerExtractor;\r\n    mapping(address => uint256) public customCutoffStep;\r\n    mapping(address => uint256) public customCollectionTax;\r\n    mapping(address => uint256) public customRebuildBonus;\r\n    mapping(address => uint256) public customRebuildBonusMaxTimes;\r\n    mapping(address => uint256) public customRebuildStep;\r\n    mapping(address => uint256) public customRebuildForNoTaxCollection;\r\n    mapping(address => uint256) public customReferral;\r\n\r\n    constructor(address _erctoken, address _mkt, address _shop) {\r\n        require(!isContract(_mkt));\r\n        owner = msg.sender;\r\n        mkt = _mkt;\r\n        shop = _shop;\r\n        token_BUSD = IToken(_erctoken);\r\n    }\r\n\r\n    function isContract(address addr) internal view returns (bool) {\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size > 0;\r\n    }\r\n\r\n    function getMineralsPerExtractor(address addr) public view returns (uint256) {\r\n        uint256 minerals;\r\n\r\n        if (customMineralsPerExtractor[addr] > 0) {\r\n            minerals = customMineralsPerExtractor[addr];\r\n        } else {\r\n            minerals = MINERALS_TO_BUILD_1EXTRACTOR;\r\n        }\r\n\r\n        return minerals;\r\n    }\r\n\r\n    function getCutoffStep(address addr) public view returns (uint256) {\r\n        uint256 cutoff;\r\n\r\n        if (customCutoffStep[addr] > 0) {\r\n            cutoff = customCutoffStep[addr];\r\n        } else {\r\n            cutoff = CUTOFF_STEP;\r\n        }\r\n\r\n        return cutoff;\r\n    }\r\n\r\n    function getCollectionTax(address addr) public view returns (uint256) {\r\n        uint256 tax;\r\n\r\n        if (customCollectionTax[addr] > 0) {\r\n            tax = customCollectionTax[addr];\r\n        } else {\r\n            tax = COLLECTION_TAX;\r\n        }\r\n\r\n        return tax;\r\n    }\r\n\r\n    function getRebuildBonus(address addr) public view returns (uint256) {\r\n        uint256 bonus;\r\n\r\n        if (customRebuildBonus[addr] > 0) {\r\n            bonus = customRebuildBonus[addr];\r\n        } else {\r\n            bonus = REBUILD_BONUS;\r\n        }\r\n\r\n        return bonus;\r\n    }\r\n\r\n    function getRebuildBonusMaxTimes(address addr) public view returns (uint256) {\r\n        uint256 times;\r\n\r\n        if (customRebuildBonusMaxTimes[addr] > 0) {\r\n            times = customRebuildBonusMaxTimes[addr];\r\n        } else {\r\n            times = REBUILD_BONUS_MAX_TIMES;\r\n        }\r\n\r\n        return times;\r\n    }\r\n\r\n    function getRebuildStep(address addr) public view returns (uint256) {\r\n        uint256 step;\r\n\r\n        if (customRebuildStep[addr] > 0) {\r\n            step = customRebuildStep[addr];\r\n        } else {\r\n            step = REBUILD_STEP;\r\n        }\r\n\r\n        return step;\r\n    }\r\n\r\n    function getRebuildForNoTaxCollection(address addr) public view returns (uint256) {\r\n        uint256 rebuild;\r\n\r\n        if (customRebuildForNoTaxCollection[addr] > 0) {\r\n            rebuild = customRebuildForNoTaxCollection[addr];\r\n        } else {\r\n            rebuild = REBUILD_FOR_NO_TAX_COLLECTION;\r\n        }\r\n\r\n        return rebuild;\r\n    }\r\n\r\n    function getReferral(address addr) public view returns (uint256) {\r\n        uint256 referral;\r\n\r\n        if (customReferral[addr] > 0) {\r\n            referral = customReferral[addr];\r\n        } else {\r\n            referral = REFERRAL;\r\n        }\r\n\r\n        return referral;\r\n    }\r\n\r\n    function rebuildExtractors(bool isRebuild) public {\r\n        User storage user = users[msg.sender];\r\n        require(contractStarted, \"Contract not yet Started.\");\r\n\r\n        uint256 mineralsUsed = getMyMinerals();\r\n        uint256 mineralsForRebuild = mineralsUsed;\r\n\r\n        if(isRebuild) {\r\n            uint256 dailyRebuildBonus = getDailyRebuildBonus(msg.sender, mineralsForRebuild);\r\n            mineralsForRebuild = mineralsForRebuild.add(dailyRebuildBonus);\r\n            uint256 mineralsUsedValue = calculateMineralSell(mineralsForRebuild);\r\n            user.userDeposit = user.userDeposit.add(mineralsUsedValue);\r\n            totalRebuild = totalRebuild.add(mineralsUsedValue);\r\n        } \r\n\r\n        if(block.timestamp.sub(user.lastRebuild) >= getRebuildStep(msg.sender)) {\r\n            if(user.dailyRebuildBonus < getRebuildBonusMaxTimes(msg.sender)) {\r\n                user.dailyRebuildBonus = user.dailyRebuildBonus.add(1);\r\n            }\r\n        }\r\n        \r\n        user.extractors = user.extractors.add(mineralsForRebuild.div(getMineralsPerExtractor(msg.sender)));\r\n        user.claimedMinerals = 0;\r\n        user.lastRebuild = block.timestamp;\r\n\r\n        marketMinerals = marketMinerals.add(mineralsUsed.div(MARKET_MINERALS_DIVISOR));\r\n    }\r\n\r\n    function collectMinerals() public{\r\n        require(contractStarted);\r\n        User storage user = users[msg.sender];\r\n        uint256 hasMinerals = getMyMinerals();\r\n        uint256 mineralValue = calculateMineralSell(hasMinerals);\r\n        \r\n        /** \r\n            if user rebuild < to mandatory rebuild periods**/\r\n        if(user.dailyRebuildBonus < getRebuildForNoTaxCollection(msg.sender)){\r\n            //daily rebuild bonus count will not reset and mineralValue will be deducted with collection tax.\r\n            mineralValue = mineralValue.sub(mineralValue.mul(getCollectionTax(msg.sender)).div(PERCENTS_DIVIDER));\r\n        }else{\r\n            //set daily rebuild bonus count to 0 and mineralValue will remain without deductions\r\n             user.dailyRebuildBonus = 0;   \r\n        }\r\n        \r\n        user.lastWithdrawTime = block.timestamp;\r\n        user.claimedMinerals = 0;  \r\n        user.lastRebuild = block.timestamp;\r\n        marketMinerals = marketMinerals.add(hasMinerals.div(MARKET_MINERALS_DIVISOR_SELL));\r\n        \r\n        if(getBalance() < mineralValue) {\r\n            mineralValue = getBalance();\r\n        }\r\n\r\n        uint256 mineralsPayout = mineralValue.sub(payFees(mineralValue));\r\n        token_BUSD.transfer(msg.sender, mineralsPayout);\r\n        user.totalCollected = user.totalCollected.add(mineralsPayout);\r\n        totalCollected = totalCollected.add(mineralsPayout);\r\n    }\r\n\r\n    function buildExtractors(address ref, uint256 amount) public{\r\n        require(contractStarted);\r\n        User storage user = users[msg.sender];\r\n        require(amount >= MIN_INVEST_LIMIT, \"Mininum investment not met.\");\r\n        require(user.initialDeposit.add(amount) <= WALLET_DEPOSIT_LIMIT, \"Max deposit limit reached.\");\r\n        \r\n        token_BUSD.transferFrom(address(msg.sender), address(this), amount);\r\n        uint256 mineralsBought = calculateMineralBuy(amount, getBalance().sub(amount));\r\n        user.userDeposit = user.userDeposit.add(amount);\r\n        user.initialDeposit = user.initialDeposit.add(amount);\r\n        user.claimedMinerals = user.claimedMinerals.add(mineralsBought);\r\n\r\n        if (user.referrer == address(0)) {\r\n            if (ref != msg.sender) {\r\n                user.referrer = ref;\r\n            }\r\n\r\n            address upline1 = user.referrer;\r\n            if (upline1 != address(0)) {\r\n                users[upline1].referralsCount = users[upline1].referralsCount.add(1);\r\n            }\r\n        }\r\n                \r\n        if (user.referrer != address(0)) {\r\n            address upline = user.referrer;\r\n            if (upline != address(0)) {\r\n                uint256 refRewards = amount.mul(getReferral(ref)).div(PERCENTS_DIVIDER);\r\n                token_BUSD.transfer(upline, refRewards);\r\n                users[upline].referralMineralRewards = users[upline].referralMineralRewards.add(refRewards);\r\n                totalRefBonus = totalRefBonus.add(refRewards);\r\n            }\r\n        }\r\n\r\n        uint256 mineralsPayout = payFees(amount);\r\n        /** less the fee on total Staked to give more transparency of data. **/\r\n        totalStaked = totalStaked.add(amount.sub(mineralsPayout));\r\n        totalDeposits = totalDeposits.add(1);\r\n        rebuildExtractors(false);\r\n    }\r\n\r\n    function payFees(uint256 mineralValue) internal returns(uint256){\r\n        uint256 tax = mineralValue.mul(TAX).div(PERCENTS_DIVIDER);\r\n        token_BUSD.transfer(mkt, tax);\r\n        return tax;\r\n    }\r\n\r\n    function getDailyRebuildBonus(address _adr, uint256 amount) public view returns(uint256){\r\n        if(users[_adr].dailyRebuildBonus == 0) {\r\n            return 0;\r\n        } else {\r\n            uint256 totalBonus = users[_adr].dailyRebuildBonus.mul(getRebuildBonus(_adr)); \r\n            uint256 result = amount.mul(totalBonus).div(PERCENTS_DIVIDER);\r\n            return result;\r\n        }\r\n    }\r\n\r\n    function getUserInfo(address _adr) public view returns(uint256 _initialDeposit, uint256 _userDeposit, uint256 _extractors,\r\n     uint256 _claimedMinerals, uint256 _lastRebuild, address _referrer, uint256 _referrals,\r\n     uint256 _totalCollected, uint256 _referralMineralRewards, uint256 _dailyRebuildBonus, uint256 _lastWithdrawTime) {\r\n         _initialDeposit = users[_adr].initialDeposit;\r\n         _userDeposit = users[_adr].userDeposit;\r\n         _extractors = users[_adr].extractors;\r\n         _claimedMinerals = users[_adr].claimedMinerals;\r\n         _lastRebuild = users[_adr].lastRebuild;\r\n         _referrer = users[_adr].referrer;\r\n         _referrals = users[_adr].referralsCount;\r\n         _totalCollected = users[_adr].totalCollected;\r\n         _referralMineralRewards = users[_adr].referralMineralRewards;\r\n         _dailyRebuildBonus = users[_adr].dailyRebuildBonus;\r\n         _lastWithdrawTime = users[_adr].lastWithdrawTime;\r\n    }\r\n\r\n    function initialize(uint256 amount) public{\r\n        if (!contractStarted) {\r\n            if (msg.sender == owner) {\r\n                require(marketMinerals == 0);\r\n                contractStarted = true;\r\n                marketMinerals = 86400000000;\r\n                buildExtractors(msg.sender, amount);\r\n            } else revert(\"Contract not yet started.\");\r\n        }\r\n    }\r\n\r\n    function getBalance() public view returns (uint256) {\r\n        return token_BUSD.balanceOf(address(this));\r\n    }\r\n\r\n    function getTimeStamp() public view returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function getAvailableEarnings(address _adr) public view returns(uint256) {\r\n        uint256 userMinerals = users[_adr].claimedMinerals.add(getMineralsSinceLastRebuild(_adr));\r\n        return calculateMineralSell(userMinerals);\r\n    }\r\n\r\n    function calculateTrade(uint256 rt,uint256 rs, uint256 bs) public view returns(uint256){\r\n        return SafeMath.div(SafeMath.mul(PSN, bs), SafeMath.add(PSNH, SafeMath.div(SafeMath.add(SafeMath.mul(PSN, rs), SafeMath.mul(PSNH, rt)), rt)));\r\n    }\r\n\r\n    function calculateMineralSell(uint256 minerals) public view returns(uint256){\r\n        return calculateTrade(minerals, marketMinerals, getBalance());\r\n    }\r\n\r\n    function calculateMineralBuy(uint256 eth,uint256 contractBalance) public view returns(uint256){\r\n        return calculateTrade(eth, contractBalance, marketMinerals);\r\n    }\r\n\r\n    function calculateMineralBuySimple(uint256 eth) public view returns(uint256){\r\n        return calculateMineralBuy(eth, getBalance());\r\n    }\r\n\r\n    function getMineralsYield(address adr, uint256 amount) public view returns(uint256,uint256) {\r\n        uint256 mineralsAmount = calculateMineralBuy(amount , getBalance().add(amount).sub(amount));\r\n        uint256 extractors = mineralsAmount.div(getMineralsPerExtractor(adr));\r\n        uint256 day = 1 days;\r\n        uint256 mineralsPerDay = day.mul(extractors);\r\n        uint256 earningsPerDay = calculateMineralSellForYield(mineralsPerDay, amount);\r\n        return(extractors, earningsPerDay);\r\n    }\r\n\r\n    function calculateMineralSellForYield(uint256 minerals,uint256 amount) public view returns(uint256){\r\n        return calculateTrade(minerals,marketMinerals, getBalance().add(amount));\r\n    }\r\n\r\n    function getSiteInfo() public view returns (uint256 _totalStaked, uint256 _totalDeposits, uint256 _totalRebuild, uint256 _totalRefBonus) {\r\n        return (totalStaked, totalDeposits, totalRebuild, totalRefBonus);\r\n    }\r\n\r\n    function getMyExtractors() public view returns(uint256){\r\n        return users[msg.sender].extractors;\r\n    }\r\n\r\n    function getMyMinerals() public view returns(uint256){\r\n        return users[msg.sender].claimedMinerals.add(getMineralsSinceLastRebuild(msg.sender));\r\n    }\r\n\r\n    function getMineralsSinceLastRebuild(address adr) public view returns(uint256){\r\n        uint256 secondsSinceLastRebuild = block.timestamp.sub(users[adr].lastRebuild);\r\n                            /** get min time. **/\r\n        uint256 cutoffTime = min(secondsSinceLastRebuild, getCutoffStep(adr));\r\n        uint256 secondsPassed = min(getMineralsPerExtractor(adr), cutoffTime);\r\n        return secondsPassed.mul(users[adr].extractors);\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /** wallet addresses setters **/\r\n    function CHANGE_OWNERSHIP(address value) external {\r\n        require(msg.sender == owner, \"Admin use only.\");\r\n        owner = value;\r\n    }\r\n\r\n    function CHANGE_MKT_WALLET(address value) external {\r\n        require(msg.sender == owner, \"Admin use only.\");\r\n        mkt = value;\r\n    }\r\n\r\n    function CHANGE_SHOP_CONTRACT(address value) external {\r\n        require(msg.sender == owner, \"Admin use only.\");\r\n        shop = value;\r\n    }\r\n\r\n    /** percentage setters **/\r\n\r\n    // 2592000 - 3%, 2160000 - 4%, 1728000 - 5%, 1440000 - 6%, 1200000 - 7%, 1080000 - 8%\r\n    // 959000 - 9%, 864000 - 10%, 720000 - 12%, 575424 - 15%, 540000 - 16%, 479520 - 18%\r\n    \r\n    function PRC_MINERALS_TO_BUILD_1EXTRACTOR(uint256 value) external {\r\n        require(msg.sender == owner, \"Admin use only.\");\r\n        require(value >= 479520 && value <= 2592000); /** min 3% max 12%**/\r\n        MINERALS_TO_BUILD_1EXTRACTOR = value;\r\n    }\r\n\r\n    function PRC_TAX(uint256 value) external {\r\n        require(msg.sender == owner, \"Admin use only.\");\r\n        require(value <= 100); /** 10% max **/\r\n        TAX = value;\r\n    }\r\n\r\n    function PRC_REFERRAL(uint256 value) external {\r\n        require(msg.sender == owner, \"Admin use only.\");\r\n        require(value >= 10 && value <= 100); /** 10% max **/\r\n        REFERRAL = value;\r\n    }\r\n\r\n    function PRC_MARKET_MINERALS_DIVISOR(uint256 value) external {\r\n        require(msg.sender == owner, \"Admin use only.\");\r\n        require(value <= 50); /** 50 = 2% **/\r\n        MARKET_MINERALS_DIVISOR = value;\r\n    }\r\n\r\n    /** Collection tax **/\r\n    function SET_COLLECTION_TAX(uint256 value) external {\r\n        require(msg.sender == owner, \"Admin use only.\");\r\n        require(value <= 800); /** Max Tax is 80% or lower **/\r\n        COLLECTION_TAX = value;\r\n    }\r\n    \r\n    function SET_REBUILD_FOR_NO_TAX_COLLECTION(uint256 value) external {\r\n        require(msg.sender == owner, \"Admin use only.\");\r\n        REBUILD_FOR_NO_TAX_COLLECTION = value;\r\n    }\r\n\r\n    function BONUS_DAILY_REBUILD(uint256 value) external {\r\n        require(msg.sender == owner, \"Admin use only.\");\r\n        require(value >= 10 && value <= 900);\r\n        REBUILD_BONUS = value;\r\n    }\r\n\r\n    function BONUS_DAILY_REBUILD_BONUS_MAX_TIMES(uint256 value) external {\r\n        require(msg.sender == owner, \"Admin use only.\");\r\n        require(value <= 30);\r\n        REBUILD_BONUS_MAX_TIMES = value;\r\n    }\r\n\r\n    function BONUS_REBUILD_STEP(uint256 value) external {\r\n        require(msg.sender == owner, \"Admin use only.\");\r\n        REBUILD_STEP = value * 60 * 60;\r\n    }\r\n\r\n    function SET_MIN_INVEST_LIMIT(uint256 value) external {\r\n        require(msg.sender == owner, \"Admin use only\");\r\n        MIN_INVEST_LIMIT = value * 1e18;\r\n    }\r\n\r\n    function SET_CUTOFF_STEP(uint256 value) external {\r\n        require(msg.sender == owner, \"Admin use only\");\r\n        CUTOFF_STEP = value * 60 * 60;\r\n    }\r\n\r\n    function SET_WALLET_DEPOSIT_LIMIT(uint256 value) external {\r\n        require(msg.sender == owner, \"Admin use only\");\r\n        require(value >= 20);\r\n        WALLET_DEPOSIT_LIMIT = value * 1e18;\r\n    }\r\n\r\n    /** Shop functionalities for perks **/\r\n\r\n    function SET_CUSTOM_MINERALS_PER_EXTRACTOR(address adr, uint256 minerals) external {\r\n        require(msg.sender == shop, \"Shop use only\");\r\n        customMineralsPerExtractor[adr] = minerals;\r\n    }\r\n\r\n    function SET_CUSTOM_CUTOFF_STEP(address adr, uint256 cutoff) external {\r\n        require(msg.sender == shop, \"Shop use only\");\r\n        customCutoffStep[adr] = cutoff;\r\n    }\r\n\r\n    function SET_CUSTOM_COLLECTION_TAX(address adr, uint256 tax) external {\r\n        require(msg.sender == shop, \"Shop use only\");\r\n        customCollectionTax[adr] = tax;\r\n    }\r\n\r\n    function SET_CUSTOM_REBUILD_BONUS(address adr, uint256 bonus) external {\r\n        require(msg.sender == shop, \"Shop use only\");\r\n        customRebuildBonus[adr] = bonus;\r\n    }\r\n\r\n    function SET_CUSTOM_REBUILD_BONUS_MAX_TIMES(address adr, uint256 times) external {\r\n        require(msg.sender == shop, \"Shop use only\");\r\n        customRebuildBonusMaxTimes[adr] = times;\r\n    }\r\n\r\n    function SET_CUSTOM_REBUILD_STEP(address adr, uint256 step) external {\r\n        require(msg.sender == shop, \"Shop use only\");\r\n        customRebuildStep[adr] = step;\r\n    }\r\n\r\n    function SET_CUSTOM_REBUILD_FOR_NO_TAX_COLLECTION(address adr, uint256 rebuild) external {\r\n        require(msg.sender == shop, \"Shop use only\");\r\n        customRebuildForNoTaxCollection[adr] = rebuild;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erctoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mkt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_shop\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BONUS_DAILY_REBUILD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BONUS_DAILY_REBUILD_BONUS_MAX_TIMES\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BONUS_REBUILD_STEP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"CHANGE_MKT_WALLET\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"CHANGE_OWNERSHIP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"CHANGE_SHOP_CONTRACT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COLLECTION_TAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CUTOFF_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARKET_MINERALS_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARKET_MINERALS_DIVISOR_SELL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINERALS_TO_BUILD_1EXTRACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_INVEST_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"PRC_MARKET_MINERALS_DIVISOR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"PRC_MINERALS_TO_BUILD_1EXTRACTOR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"PRC_REFERRAL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"PRC_TAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REBUILD_BONUS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REBUILD_BONUS_MAX_TIMES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REBUILD_FOR_NO_TAX_COLLECTION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REBUILD_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFERRAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SET_COLLECTION_TAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tax\",\"type\":\"uint256\"}],\"name\":\"SET_CUSTOM_COLLECTION_TAX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cutoff\",\"type\":\"uint256\"}],\"name\":\"SET_CUSTOM_CUTOFF_STEP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minerals\",\"type\":\"uint256\"}],\"name\":\"SET_CUSTOM_MINERALS_PER_EXTRACTOR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bonus\",\"type\":\"uint256\"}],\"name\":\"SET_CUSTOM_REBUILD_BONUS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"times\",\"type\":\"uint256\"}],\"name\":\"SET_CUSTOM_REBUILD_BONUS_MAX_TIMES\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rebuild\",\"type\":\"uint256\"}],\"name\":\"SET_CUSTOM_REBUILD_FOR_NO_TAX_COLLECTION\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"step\",\"type\":\"uint256\"}],\"name\":\"SET_CUSTOM_REBUILD_STEP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SET_CUTOFF_STEP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SET_MIN_INVEST_LIMIT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SET_REBUILD_FOR_NO_TAX_COLLECTION\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SET_WALLET_DEPOSIT_LIMIT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WALLET_DEPOSIT_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buildExtractors\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"calculateMineralBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"calculateMineralBuySimple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minerals\",\"type\":\"uint256\"}],\"name\":\"calculateMineralSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minerals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateMineralSellForYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bs\",\"type\":\"uint256\"}],\"name\":\"calculateTrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectMinerals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractStarted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customCollectionTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customCutoffStep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customMineralsPerExtractor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customRebuildBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customRebuildBonusMaxTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customRebuildForNoTaxCollection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customRebuildStep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customReferral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adr\",\"type\":\"address\"}],\"name\":\"getAvailableEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getCollectionTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getCutoffStep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getDailyRebuildBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getMineralsPerExtractor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getMineralsSinceLastRebuild\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getMineralsYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyExtractors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyMinerals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getRebuildBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getRebuildBonusMaxTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getRebuildForNoTaxCollection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getRebuildStep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getReferral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSiteInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalDeposits\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalRebuild\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalRefBonus\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adr\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_extractors\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_claimedMinerals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lastRebuild\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_referrals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_referralMineralRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dailyRebuildBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lastWithdrawTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketMinerals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mkt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isRebuild\",\"type\":\"bool\"}],\"name\":\"rebuildExtractors\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shop\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token_BUSD\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRebuild\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRefBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"initialDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"extractors\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedMinerals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRebuild\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referralsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralMineralRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyRebuildBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastWithdrawTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "UMine", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000e9e7cea3dedca5984780bafc599bd69add087d560000000000000000000000004c27ca1c8c8fc1b4f6f9d48dc5c3e77fe698d865000000000000000000000000c45efb8ff1d3851e47a70f62d19ce87be5429a8d", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e968b8224ffa0469d3226d468d24ab2658ac782c143cb4435d1a2147a27c549a"}