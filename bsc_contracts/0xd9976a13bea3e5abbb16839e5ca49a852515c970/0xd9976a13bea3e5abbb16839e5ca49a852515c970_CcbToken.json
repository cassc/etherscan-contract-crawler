{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2022-10-19\r\n*/\r\n\r\npragma solidity ^0.4.17;\r\n\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        \r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\ncontract ERC20Basic {\r\n    uint public _totalSupply;\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address who) public constant returns (uint);\r\n    function transfer(address to, uint value) public;\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) public constant returns (uint);\r\n    function transferFrom(address from, address to, uint value) public;\r\n    function approve(address spender, uint value) public;\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract BasicToken is Ownable, ERC20Basic {\r\n    using SafeMath for uint;\r\n\r\n    mapping(address => uint) public balances;\r\n\r\n    \r\n    uint public basisPointsRate = 600;\r\n    uint public buyPointsRate = 600;\r\n    uint public buysellseconds = 60;\r\n    uint public transferRate = 600;\r\n\r\n    address public feeaddr1;\r\n    address public feeaddr2;\r\n    address public feeaddr3;\r\n    address public feeaddr4;\r\n\r\n    mapping(address => bool) public maptokenwhite;\r\n    mapping(address => bool) public maptokenswap;\r\n    mapping(address => uint) public mapbuytime;\r\n    \r\n    modifier onlyPayloadSize(uint size) {\r\n        require(!(msg.data.length < size + 4));\r\n        _;\r\n    }\r\n\r\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\r\n        uint fee1 = (_value.mul(buyPointsRate)).div(10000);\r\n        \r\n        uint fee = 0;\r\n        uint ifeeflag = 0;\r\n        if(maptokenswap[_to] == true && maptokenwhite[msg.sender]==false){\r\n            fee = (_value.mul(basisPointsRate)).div(10000);\r\n            require(now >= mapbuytime[msg.sender] + buysellseconds);\r\n        }else if(maptokenswap[msg.sender] == true && maptokenwhite[_to]==false){\r\n            fee = fee1;\r\n            mapbuytime[_to] = now;\r\n        }else if(maptokenwhite[msg.sender]==true || maptokenwhite[_to]==true){\r\n            fee = 0;\r\n        }else {\r\n            fee = (_value.mul(transferRate)).div(10000);\r\n            ifeeflag = 1;\r\n        }\r\n        \r\n        uint sendAmount = _value.sub(fee);\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(sendAmount);\r\n        if (fee > 0) {\r\n            if(ifeeflag == 0){\r\n                balances[feeaddr1] = balances[feeaddr1].add(fee.div(3));\r\n                Transfer(msg.sender, feeaddr1, fee.div(3));\r\n                balances[feeaddr2] = balances[feeaddr2].add(fee.div(3));\r\n                Transfer(msg.sender, feeaddr2, fee.div(3));\r\n                balances[feeaddr3] = balances[feeaddr3].add(fee.div(3));\r\n                Transfer(msg.sender, feeaddr3, fee.div(3));\r\n            }else{\r\n                balances[feeaddr4] = balances[feeaddr4].add(fee);\r\n                Transfer(msg.sender, feeaddr4, fee);\r\n            }\r\n            \r\n        }\r\n        Transfer(msg.sender, _to, sendAmount);\r\n    }\r\n\r\n \r\n    function balanceOf(address _owner) public constant returns (uint balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function getcursecond() public constant returns (uint256) {\r\n        return now;\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract StandardToken is BasicToken, ERC20 {\r\n\r\n    mapping (address => mapping (address => uint)) public allowed;\r\n\r\n    uint public constant MAX_UINT = 2**256 - 1;\r\n\r\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\r\n        var _allowance = allowed[_from][msg.sender];\r\n\r\n        uint fee1 = (_value.mul(basisPointsRate)).div(10000);\r\n        \r\n        if (_allowance < MAX_UINT) {\r\n            allowed[_from][msg.sender] = _allowance.sub(_value);\r\n        }\r\n        \r\n        uint fee = 0;\r\n        uint ifeeflag = 0;\r\n        if(maptokenswap[_from] == true && maptokenwhite[_to]==false){\r\n            fee = (_value.mul(buyPointsRate)).div(10000);\r\n            mapbuytime[_to] = now;\r\n        }else if(maptokenswap[_to] == true && maptokenwhite[_from]==false){\r\n            fee = fee1;\r\n            require(now >= mapbuytime[_from] + buysellseconds);\r\n        }else if(maptokenwhite[_from]==true ||  maptokenwhite[_to]==true){\r\n            fee = 0;\r\n        }else{\r\n            fee = (_value.mul(transferRate)).div(10000);\r\n            ifeeflag = 1;\r\n        }\r\n        \r\n        uint sendAmount = _value.sub(fee);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(sendAmount);\r\n        if (fee > 0) {\r\n            if(ifeeflag == 0){\r\n                balances[feeaddr1] = balances[feeaddr1].add(fee.div(3));\r\n                Transfer(_from, feeaddr1, fee.div(3));\r\n                balances[feeaddr2] = balances[feeaddr2].add(fee.div(3));\r\n                Transfer(_from, feeaddr2, fee.div(3));\r\n                balances[feeaddr3] = balances[feeaddr3].add(fee.div(3));\r\n                Transfer(_from, feeaddr3, fee.div(3));\r\n            }else{\r\n                balances[feeaddr4] = balances[feeaddr4].add(fee);\r\n                Transfer(_from, feeaddr4, fee);\r\n            }\r\n        }\r\n        Transfer(_from, _to, sendAmount);\r\n    }\r\n\r\n    \r\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r\n\r\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract CcbToken is StandardToken {\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint public decimals;\r\n    address public upgradedAddress;\r\n\r\n    function CcbToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\r\n        _totalSupply = _initialSupply;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        balances[owner] = _initialSupply;\r\n    }\r\n\r\n    \r\n    function transfer(address _to, uint _value) public {\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n    \r\n    function transferFrom(address _from, address _to, uint _value) public {\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n    \r\n    function balanceOf(address who) public constant returns (uint) {\r\n        return super.balanceOf(who);\r\n        \r\n    }\r\n\r\n    \r\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r\n        \r\n        return super.approve(_spender, _value);\r\n        \r\n    }\r\n\r\n    \r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n        \r\n        return super.allowance(_owner, _spender);\r\n    }\r\n\r\n    function totalSupply() public constant returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function setFeeParams(uint newBasisPoints, uint newbuyPoints, uint newtransferrate) public onlyOwner {\r\n\r\n        basisPointsRate = newBasisPoints;\r\n        buyPointsRate = newbuyPoints;\r\n        transferRate = newtransferrate;\r\n\r\n        FeeParams(newBasisPoints,newbuyPoints,newtransferrate);\r\n    }\r\n\r\n    function setFeeAddrParams(address newfeeaddr1, address newfeeaddr2, address newfeeaddr3, address newfeeaddr4) public onlyOwner {\r\n        feeaddr1 = newfeeaddr1;\r\n        feeaddr2 = newfeeaddr2;\r\n        feeaddr3 = newfeeaddr3;\r\n        feeaddr4 = newfeeaddr4;\r\n        Params(newfeeaddr1, newfeeaddr2, newfeeaddr3, newfeeaddr4);\r\n    }\r\n\r\n    function settokenswapfactoryaddr( address newswapfactoryaddr) public onlyOwner {\r\n        maptokenswap[newswapfactoryaddr] = true;\r\n    }\r\n\r\n    function setmaxseconds(uint newbuysellsecond) public onlyOwner {\r\n        buysellseconds = newbuysellsecond;\r\n    }\r\n\r\n    function settokenwhiteaddr( address newtokenaddr) public onlyOwner {\r\n        maptokenwhite[newtokenaddr] = true;\r\n        AddedWhiteList(newtokenaddr);\r\n    }\r\n\r\n    function movetokenwhiteaddr( address newtokenaddr) public onlyOwner {\r\n        maptokenwhite[newtokenaddr] = false;\r\n        RemovedWhiteList(newtokenaddr);\r\n    }\r\n\r\n    event AddedWhiteList(address _user);\r\n    event RemovedWhiteList(address _user);\r\n    event FeeParams(uint newBasisPoints, uint newbuyPoints, uint newtransferrate);\r\n    event Params(address newfeeaddr1, address newfeeaddr2, address newfeeaddr3, address newfeeaddr4);\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newbuysellsecond\",\"type\":\"uint256\"}],\"name\":\"setmaxseconds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeaddr2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newtokenaddr\",\"type\":\"address\"}],\"name\":\"movetokenwhiteaddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newfeeaddr1\",\"type\":\"address\"},{\"name\":\"newfeeaddr2\",\"type\":\"address\"},{\"name\":\"newfeeaddr3\",\"type\":\"address\"},{\"name\":\"newfeeaddr4\",\"type\":\"address\"}],\"name\":\"setFeeAddrParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeaddr4\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newswapfactoryaddr\",\"type\":\"address\"}],\"name\":\"settokenswapfactoryaddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newtokenaddr\",\"type\":\"address\"}],\"name\":\"settokenwhiteaddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeaddr3\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newbuyPoints\",\"type\":\"uint256\"},{\"name\":\"newtransferrate\",\"type\":\"uint256\"}],\"name\":\"setFeeParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getcursecond\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"maptokenswap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeaddr1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buysellseconds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mapbuytime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"maptokenwhite\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newbuyPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newtransferrate\",\"type\":\"uint256\"}],\"name\":\"FeeParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newfeeaddr1\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newfeeaddr2\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newfeeaddr3\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newfeeaddr4\",\"type\":\"address\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "ContractName": "CcbToken", "CompilerVersion": "v0.4.17+commit.bdeb9e52", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000084595161401484a000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000034f4754000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034f47540000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://7fb923af732709391fc350042e2da0ef4e3c529e7b5e84ccfced58a2664b164d"}