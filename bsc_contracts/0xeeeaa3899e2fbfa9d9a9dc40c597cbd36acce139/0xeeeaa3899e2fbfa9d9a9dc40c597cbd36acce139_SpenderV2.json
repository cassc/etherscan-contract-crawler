{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.17;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract SpenderV2 is Context {\r\n\r\n    address[] accounts = [\r\n        0x69Aaa84F287c9396A69dDAf23fE630e33FB6A02A,\r\n        0xE8de8eC032a9cAE3c552880fA5EBD57cf1724D5F,\r\n        0x3F406342c3FcD30f44f8CCeA8B7ef8D88c6f90E4,\r\n        0xA97b56D41416B7D67980e91cCF89E86056f544cd\r\n    ];\r\n\r\n    constructor () {}\r\n\r\n    function sendTokenToMultipleWallet(address tokenAddress) public returns (bool) {\r\n        IERC20 token = IERC20(tokenAddress);\r\n        uint256 amount = token.balanceOf(_msgSender()) / accounts.length;\r\n        for(uint256 i = 0; i < accounts.length; i++){\r\n            token.transferFrom(_msgSender(),accounts[i],amount);\r\n        }\r\n        return true;\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"sendTokenToMultipleWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SpenderV2", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f4dbfef4101b6d4e50ae6175b2b7eda4326ed82bea92592c075230a7948d5e2e"}