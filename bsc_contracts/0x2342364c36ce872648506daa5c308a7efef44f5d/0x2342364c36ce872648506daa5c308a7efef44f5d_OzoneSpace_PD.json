{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 \r\n{\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract OzoneSpace_PD\r\n{\r\n    address payable owner;\r\n    address public tokenAddress;\r\n    uint256 Totaldeposited;\r\n    uint256 Totalwithdrawal;\r\n    \r\n    mapping(address => mapping (uint256 => address)) public subOwner;\r\n    mapping (address => uint256) public subOwner1;\r\n    \r\n    \r\n    constructor(address payable _owner,address _token)  \r\n    {\r\n        owner = _owner;\r\n        tokenAddress = _token;\r\n    }\r\n    \r\n    event TransferAmount(address indexed from, address indexed to, uint256 value,uint256 time);\r\n    event TransferFromOwner(address indexed SubOwneraddress,address indexed from, address indexed to, uint256 value,uint256 time);\r\n\r\n    modifier SubOwner()\r\n    {\r\n        require(msg.sender==owner || msg.sender==subOwner[owner][1]|| msg.sender==subOwner[owner][2]|| msg.sender==subOwner[owner][3]|| msg.sender==subOwner[owner][4] || msg.sender==subOwner[owner][5] || msg.sender==subOwner[owner][6] || msg.sender==subOwner[owner][7] || msg.sender==subOwner[owner][8] || msg.sender==subOwner[owner][9] || msg.sender==subOwner[owner][10] || msg.sender==subOwner[owner][11] || msg.sender==subOwner[owner][12] || msg.sender==subOwner[owner][13] || msg.sender==subOwner[owner][14] || msg.sender==subOwner[owner][15] || msg.sender==subOwner[owner][16] || msg.sender==subOwner[owner][17] || msg.sender==subOwner[owner][18] || msg.sender==subOwner[owner][19] || msg.sender==subOwner[owner][20] || msg.sender==subOwner[owner][21] || msg.sender==subOwner[owner][22] || msg.sender==subOwner[owner][23] || msg.sender==subOwner[owner][24] || msg.sender==subOwner[owner][25], \"you are not subowner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwner()\r\n    {\r\n        require(msg.sender==owner,\"you are not owner \" );\r\n        _;\r\n    }\r\n\r\n    function TransferCoin(address recipient,uint256 amount) public SubOwner\r\n    {\r\n        IERC20(tokenAddress).transfer(recipient,  amount);\r\n        Totalwithdrawal = Totalwithdrawal +amount;\r\n        emit TransferFromOwner(msg.sender,address(this),recipient,amount,block.timestamp);\r\n    }\r\n\r\n    function multisendToken( address[] calldata _contributors, uint256[] calldata _balances) external  SubOwner \r\n    {\r\n        uint8 i = 0;\r\n        for (i; i < _contributors.length; i++) {\r\n         IERC20(tokenAddress).transfer(_contributors[i], _balances[i]);\r\n        }\r\n    }\r\n\r\n    function SetSubOwner(address subowner,uint256 id) public onlyOwner\r\n    {\r\n        require(id > 0 && id < 25 ,\" wrong Id\");\r\n        subOwner[msg.sender][id] = subowner;\r\n        subOwner1[msg.sender] = id;\r\n    }\r\n\r\n    function RemoveSubOwner(uint256 id) public onlyOwner\r\n    {\r\n        require(id > 0 && id < 25 ,\" wrong Id\");\r\n        subOwner[msg.sender][id] = owner;\r\n    }\r\n\r\n    function ChecksubOwner(uint256 _id) public view returns(address _subOwner)\r\n    {\r\n        //require(_id <= 25 && _id > 0,\"wrong id\");\r\n        return subOwner[owner][_id];\r\n    }\r\n\r\n    function Deposite(uint256 amount) public\r\n    {\r\n        IERC20(tokenAddress).transferFrom(msg.sender,address(this),amount);\r\n        Totaldeposited = Totaldeposited + amount;\r\n        emit TransferAmount (msg.sender,address(this),amount,block.timestamp);\r\n    }\r\n    \r\n    function CheckTotalwithdrawal() public view  returns(uint256)\r\n    {\r\n        return  Totalwithdrawal;\r\n    }\r\n    \r\n    function CheckTotaldeposited() public view  returns(uint256)\r\n    {\r\n        return  Totaldeposited;\r\n    }\r\n    \r\n    function CheckBalance(address account) public view  returns(uint256)\r\n    {\r\n        return  IERC20(tokenAddress).balanceOf( account);\r\n    }\r\n    \r\n    function CheckContractBalanceofCoin() public view  returns(uint256)\r\n    {\r\n        return  IERC20(tokenAddress).balanceOf(address(this));\r\n    }\r\n    \r\n    function CheckContractBalance() public view  returns(uint256)\r\n    {\r\n        return  address(this).balance;\r\n    }\r\n    \r\n    function withdrawa(uint256 amount) public onlyOwner \r\n    {\r\n        require(amount <= address(this).balance , \"not have Balance\");\r\n        require(amount >= 0 , \"not have Balance\");\r\n        owner.transfer(amount*(10**8));\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"TransferAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"SubOwneraddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"TransferFromOwner\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"CheckBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CheckContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CheckContractBalanceofCoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CheckTotaldeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CheckTotalwithdrawal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"ChecksubOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_subOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"RemoveSubOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subowner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"SetSubOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_contributors\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_balances\",\"type\":\"uint256[]\"}],\"name\":\"multisendToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"subOwner1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawa\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "OzoneSpace_PD", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000b25dbf17f55053843176788bb1fdc708e02055b0000000000000000000000000630d98424efe0ea27fb1b3ab7741907dffeaad78", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://81c44dfb49fbbd34429da22eb529fcddda2d2c9045e1a107b6b1017cbede417b"}