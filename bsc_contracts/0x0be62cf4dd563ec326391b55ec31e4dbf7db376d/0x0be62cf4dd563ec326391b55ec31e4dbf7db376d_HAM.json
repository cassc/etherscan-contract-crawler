{"SourceCode": "pragma solidity ^0.8.0;\r\n\r\ncontract HAM {\r\n\r\n    string public name = \"Hamster Coin\";\r\n    string public symbol = \"HAM\";\r\n    uint256 public decimals = 6;\r\n    uint256 public totalSupply = 0;\r\n    uint256 public capForPeriod = 42000000000000;\r\n    uint256 public mintingAmount = 1000000;\r\n    address private constant VB_ADDRESS = 0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n    address private lastTransferFrom;\r\n    uint256 private lastTransferTime;\r\n\r\n    constructor() {\r\n        _mint(VB_ADDRESS, 14000000000000);\r\n        _mint(msg.sender, 14000000000000);\r\n    }\r\n \r\n    function _mint(address _to, uint256 _amount) private returns (bool) {\r\n        balances[_to] = balances[_to] + _amount;\r\n        totalSupply = totalSupply + _amount;\r\n        emit Transfer(address(0), _to, _amount);\r\n        return true;\r\n    }\r\n \r\n    function _mate(address _sender, address _receiver) private returns (bool) {\r\n        if(block.timestamp <= lastTransferTime + 60 seconds\r\n           && lastTransferFrom != address(0) \r\n           && lastTransferFrom != _sender\r\n           && lastTransferFrom != _receiver\r\n        ) {\r\n            _mint(lastTransferFrom, mintingAmount);\r\n            _mint(_sender, mintingAmount);\r\n            lastTransferFrom = address(0);\r\n            _halve();\r\n        }else{\r\n            lastTransferTime = block.timestamp;\r\n            lastTransferFrom = msg.sender;\r\n        }\r\n        return true;\r\n    }\r\n  \r\n    function _halve() private returns (bool) {\r\n        if(totalSupply > capForPeriod) {\r\n            mintingAmount = mintingAmount / 2;\r\n            capForPeriod = capForPeriod / 2  + 28000000000000;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _amount) public returns (bool) {\r\n        require(_amount <= balances[msg.sender], 'insufficient balance');\r\n\r\n        balances[msg.sender] = balances[msg.sender] - _amount;\r\n        balances[_to] = balances[_to] + _amount;\r\n\r\n        _mate(msg.sender, _to);\r\n\r\n        emit Transfer(msg.sender, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool) {\r\n        require(_amount <= balances[_from], 'insufficient balance');\r\n        require(_amount <= allowed[_from][msg.sender], 'insufficient allowance');\r\n\r\n        balances[_from] = balances[_from] - _amount;\r\n        balances[_to] = balances[_to] + _amount;\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender] - _amount;\r\n\r\n        _mate(_from, _to);\r\n\r\n        emit Transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"capForPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "HAM", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0931c2ca3d0cabde4f9473987d48385f207eb4a6285d1bfd4217dc7af1cc34a1"}