{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/PaymentDistributer.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract PaymentDistributer {\\n    address public owner;\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    receive() external payable {}\\n\\n    function distribute(address[] calldata recipients, uint256[] calldata amounts) external payable  {\\n        require(recipients.length == amounts.length, \\\"Invalid input data\\\");\\n        require(recipients.length > 0, \\\"Zero size array not allowed\\\");\\n\\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            payable(recipients[i]).transfer(amounts[i]);\\n        }\\n    }\\n     function signUp(address[] calldata recipients, uint256[] calldata amounts) external payable  {\\n        require(recipients.length == amounts.length, \\\"Invalid input data\\\");\\n        require(recipients.length > 0, \\\"Zero size array not allowed\\\");\\n\\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            payable(recipients[i]).transfer(amounts[i]);\\n        }\\n    }\\n    function smartMatrix(address[] calldata recipients, uint256[] calldata amounts) external payable  {\\n        require(recipients.length == amounts.length, \\\"Invalid input data\\\");\\n        require(recipients.length > 0, \\\"Zero size array not allowed\\\");\\n\\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            payable(recipients[i]).transfer(amounts[i]);\\n        }\\n    }\\n    \\n    function pooling(address[] calldata recipients, uint256[] calldata amounts) external payable  {\\n        require(recipients.length == amounts.length, \\\"Invalid input data\\\");\\n        require(recipients.length > 0, \\\"Zero size array not allowed\\\");\\n\\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            payable(recipients[i]).transfer(amounts[i]);\\n        }\\n    }\\n    function teamEarning(address[] calldata recipients, uint256[] calldata amounts) external payable  {\\n        require(recipients.length == amounts.length, \\\"Invalid input data\\\");\\n        require(recipients.length > 0, \\\"Zero size array not allowed\\\");\\n\\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            payable(recipients[i]).transfer(amounts[i]);\\n        }\\n    }\\n\\n\\n}\\n\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"pooling\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"signUp\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"smartMatrix\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"teamEarning\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PaymentDistributer", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}