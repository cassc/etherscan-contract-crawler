{"SourceCode": "# @version 0.3.10\r\n\"\"\"\r\n@title Gauge Type Oracle\r\n@license MIT\r\n@author Curve Finance\r\n\"\"\"\r\n\r\nevent SetGaugeType:\r\n    gauge: indexed(address)\r\n    type: uint256\r\n\r\nevent SetProver:\r\n    prover: address\r\n\r\nevent TransferOwnership:\r\n    owner: indexed(address)\r\n\r\n\r\ngauge_type: HashMap[address, uint256]  # a value of 0 signifies the account is not a valid gauge\r\n\r\nprover: public(address)\r\n\r\nowner: public(address)\r\nfuture_owner: public(address)\r\n\r\n\r\n@external\r\ndef __init__():\r\n    self.owner = msg.sender\r\n    log TransferOwnership(msg.sender)\r\n\r\n\r\n@view\r\n@external\r\ndef get_gauge_type(_gauge: address) -> uint256:\r\n    \"\"\"\r\n    @notice Get the gauge type of an account\r\n    @dev This method will revert if the gauge type has not been set yet\r\n    \"\"\"\r\n    return self.gauge_type[_gauge] - 1\r\n\r\n\r\n@external\r\ndef set_gauge_type(_gauge: address, _type: uint256):\r\n    \"\"\"\r\n    @notice Set the gauge type of an account\r\n    @dev This method will increment the value of `_type` by 1 prior to storing,\r\n        since a value of 0 signifies an invalid gauge.\r\n    \"\"\"\r\n    assert msg.sender in [self.owner, self.prover]  # dev: only owner\r\n\r\n    self.gauge_type[_gauge] = _type + 1\r\n    log SetGaugeType(_gauge, _type)\r\n\r\n\r\n@external\r\ndef set_prover(_prover: address):\r\n    \"\"\"\r\n    @notice Set the account with prover permissions.\r\n    \"\"\"\r\n    assert msg.sender == self.owner\r\n\r\n    self.prover = _prover\r\n    log SetProver(_prover)\r\n\r\n\r\n@external\r\ndef commit_transfer_ownership(_future_owner: address):\r\n    \"\"\"\r\n    @notice Transfer ownership to `_future_owner`\r\n    @param _future_owner The account to commit as the future owner\r\n    \"\"\"\r\n    assert msg.sender == self.owner  # dev: only owner\r\n\r\n    self.future_owner = _future_owner\r\n\r\n\r\n@external\r\ndef accept_transfer_ownership():\r\n    \"\"\"\r\n    @notice Accept the transfer of ownership\r\n    @dev Only the committed future owner can call this function\r\n    \"\"\"\r\n    assert msg.sender == self.future_owner  # dev: only future owner\r\n\r\n    self.owner = msg.sender\r\n    log TransferOwnership(msg.sender)", "ABI": "[{\"name\":\"SetGaugeType\",\"inputs\":[{\"name\":\"gauge\",\"type\":\"address\",\"indexed\":true},{\"name\":\"type\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"SetProver\",\"inputs\":[{\"name\":\"prover\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"TransferOwnership\",\"inputs\":[{\"name\":\"owner\",\"type\":\"address\",\"indexed\":true}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"get_gauge_type\",\"inputs\":[{\"name\":\"_gauge\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_gauge_type\",\"inputs\":[{\"name\":\"_gauge\",\"type\":\"address\"},{\"name\":\"_type\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_prover\",\"inputs\":[{\"name\":\"_prover\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"commit_transfer_ownership\",\"inputs\":[{\"name\":\"_future_owner\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"accept_transfer_ownership\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"prover\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]}]", "ContractName": "Gauge Type Oracle", "CompilerVersion": "vyper:0.3.10", "OptimizationUsed": "0", "Runs": "0", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": ""}