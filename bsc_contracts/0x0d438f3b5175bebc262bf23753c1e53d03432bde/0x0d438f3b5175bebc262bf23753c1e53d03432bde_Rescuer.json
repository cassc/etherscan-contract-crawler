{"SourceCode": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.0;\r\n\r\n/*\r\n\r\nWe deployed this contract to rescue the 8 ETH sent by accident to 0x0d438f3b5175bebc262bf23753c1e53d03432bde on BSC,\r\nwhich is the Wrapped NXM address on Ethereum mainnet. If you are the owner of these tokens\r\n(i.e. 0x02699a4cbbea963d20baf49fbb9f5204198ae2ff) please contact @alex_pertsev or @shark0der on Telegram.\r\n\r\n*/\r\n\r\ninterface IERC20 {\r\n\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract Rescuer {\r\n\r\n  address payable immutable public owner;\r\n\r\n  constructor () {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function claimTokens(IERC20[] calldata tokens) external payable {\r\n\r\n    require(msg.sender == owner, \"not owner\");\r\n\r\n    for (uint i = 0; i < tokens.length; i++) {\r\n\r\n      // BNB\r\n      if (address(tokens[i]) == address(0)) {\r\n        (bool ok,) = owner.call{value : address(this).balance}(new bytes(0));\r\n        require(ok, \"transfer failed\");\r\n        continue;\r\n      }\r\n\r\n      // ERC20\r\n      tokens[i].transfer(owner, tokens[i].balanceOf(address(this)));\r\n    }\r\n\r\n  }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Rescuer", "CompilerVersion": "v0.7.6+commit.7338295f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://3a88fa0f13fb63778f8ed72e9e9e8e85bf2f83e1f2197b34d4760f83749ce43d"}