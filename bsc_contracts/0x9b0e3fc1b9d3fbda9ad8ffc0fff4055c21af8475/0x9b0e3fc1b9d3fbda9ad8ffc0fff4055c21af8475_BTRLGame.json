{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.2;\r\n\r\ncontract BTRLGame{\r\n\r\n    address public owner;\r\n\tuint256[] public winner;\r\n\t\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can call this function.\");\r\n        _;\r\n    }\r\n\t\r\n    constructor() {\r\n       owner = address(msg.sender);\r\n    }\r\n\t\r\n\tfunction chooseWinner(uint256 minTicketNumber, uint256 maxTicketNumber) external onlyOwner {\r\n\t   uint256 winnerNumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, block.number))) % (maxTicketNumber-minTicketNumber);\r\n       winnerNumber = winnerNumber + minTicketNumber;\r\n\t   winner.push(winnerNumber);\r\n\t}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTicketNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTicketNumber\",\"type\":\"uint256\"}],\"name\":\"chooseWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "BTRLGame", "CompilerVersion": "v0.8.2+commit.661d1103", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://b14035a9f64715c4aa87d96c93212bc8c8192db7ee3f4e947739fdf8437085e5"}