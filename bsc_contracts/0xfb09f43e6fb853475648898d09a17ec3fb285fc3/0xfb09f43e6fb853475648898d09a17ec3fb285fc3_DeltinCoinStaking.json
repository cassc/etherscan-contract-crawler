{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.6.12;\r\n\r\ninterface BEP20 {\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address tokenOwner) external view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) external view returns (uint remaining);\r\n    function transfer(address to, uint tokens) external returns (bool success);\r\n    function approve(address spender, uint tokens) external returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract DeltinCoinStaking{\r\n    BEP20 public DELT = BEP20(0xa8097d516f9D03545cF10c70C69Ce7727E29D7A2);\r\n    address signer;\r\n    \r\n    event Stake(address depositor, uint256 amount);\r\n    event StakeDistribution(address receiver, uint256 amount);\r\n   \r\n    modifier signature(){\r\n        require(msg.sender == signer,\"Invalid Signer!\");\r\n        _;\r\n    }\r\n    \r\n    modifier security {\r\n        uint size;\r\n        address sandbox = msg.sender;\r\n        assembly { size := extcodesize(sandbox) }\r\n        require(size == 0, \"Smart contract detected!\");\r\n        _;\r\n    }\r\n\r\n    function getContractInfo() view public returns(uint256 contractBalance){\r\n        return contractBalance = DELT.balanceOf(address(this));\r\n    }\r\n\r\n    constructor() public {\r\n        signer = msg.sender;\r\n    }\r\n\r\n    function stake(uint256 amount) public security{\r\n        DELT.transferFrom(msg.sender,address(this),amount);\r\n        emit Stake(msg.sender, amount);\r\n    }\r\n\r\n    function stakeDistribution(address _address, uint _amount) external signature security{\r\n        DELT.transfer(_address,_amount);\r\n        emit StakeDistribution(_address,_amount);\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeDistribution\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELT\",\"outputs\":[{\"internalType\":\"contract BEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DeltinCoinStaking", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://9cc5aa0b4e78684f71ba5ad801376b6b0f6d675ef6500a7b59365300bc4d8379"}