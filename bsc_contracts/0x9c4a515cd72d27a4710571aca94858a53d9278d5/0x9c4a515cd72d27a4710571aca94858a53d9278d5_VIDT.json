{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.16;\r\n\r\ninterface ERC20 {\r\n\tfunction totalSupply() external view returns (uint256);\r\n\tfunction decimals() external view returns (uint8);\r\n\tfunction symbol() external view returns (string memory);\r\n\tfunction name() external view returns (string memory);\r\n\r\n\tfunction balanceOf(address account) external view returns (uint256);\r\n\tfunction transfer(address recipient, uint256 amount) external returns (bool);\r\n\tfunction allowance(address account, address spender) external view returns (uint256);\r\n\tfunction approve(address spender, uint256 amount) external returns (bool);\r\n\tfunction transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n\tfunction increaseAllowance(address spender, uint256 amount) external returns (bool success);\r\n\tfunction decreaseAllowance(address spender, uint256 amount) external returns (bool success);\r\n\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract Context {\r\n\tconstructor () { }\r\n\r\n\tfunction _msgSender() internal view returns (address) {\r\n\t\treturn msg.sender;\r\n\t}\r\n}\r\n\r\nlibrary SafeMath {\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\trequire(c >= a && c >= b, \"SafeMath: addition overflow\");\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn sub(a, b, \"SafeMath: subtraction overflow\");\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n\t\tuint256 c = a - b;\r\n\t\trequire(b <= a && c <= a, errorMessage);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ncontract Controllable is Context {\r\n\tmapping (address => bool) public controllers;\r\n\tevent ControllerAdded(address indexed _new);\r\n\tevent ControllerRemoved(address indexed _old);\r\n\r\n\tconstructor () {\r\n\t\taddress msgSender = _msgSender();\r\n\t\tcontrollers[msgSender] = true;\r\n\t\temit ControllerAdded(msgSender);\r\n\t}\r\n\r\n\tmodifier onlyController() {\r\n\t\trequire(controllers[_msgSender()], \"Controllable: caller is not a controller\");\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction addController(address _address) external onlyController {\r\n\t\tcontrollers[_address] = true;\r\n\t\temit ControllerAdded(_address);\r\n\t}\r\n\r\n\tfunction removeController(address _address) external onlyController {\r\n\t\tdelete controllers[_address];\r\n\t\temit ControllerRemoved(_address);\r\n\t}\r\n}\r\n\r\nlibrary SafeERC20 {\r\n\tfunction safeTransfer(ERC20 _token, address _to, uint256 _value) internal {\r\n\t\trequire(_token.transfer(_to, _value),\"STF1 - Safe transfer failed\");\r\n\t}\r\n}\r\n\r\ncontract VIDT is ERC20, Controllable {\r\n\tusing SafeMath for uint256;\r\n\tusing SafeERC20 for ERC20;\r\n\r\n\tmapping (address => uint256) private _balances;\r\n\tmapping (address => mapping (address => uint256)) private _allowances;\r\n\tmapping (uint256 => string) private verifiedNFTs;\r\n\r\n\tstruct FileStruct { uint256 index; uint256 nft; }\r\n\tmapping(string => FileStruct) private fileHashes;\r\n\tstring[] private fileIndex;\r\n\r\n\tstring private constant NAME = 'VIDT DAO';\r\n\tstring private constant SYMBOL = 'VIDT';\r\n\tuint8 private constant _decimals = 18;\r\n\tuint256 private _totalSupply = 1e27;\r\n\r\n\tuint256 private _validationPrice = 1 * 10**18;\r\n\tuint256 private _validationFee = 1 * 10**18;\r\n\taddress private _validationWallet;\r\n\r\n\taddress private constant LEGACY_CONTRACT = address(0x3f515f0a8e93F2E2f891ceeB3Db4e62e202d7110);\r\n\taddress private _nftContract;\r\n\taddress private _nftdContract;\r\n\r\n\tevent ValidateFile(uint256 indexed index, string indexed data, uint256 indexed nftID);\r\n\tevent ValidateNFT(string indexed data, uint256 indexed nftID);\r\n\tevent ListFile(uint256 indexed index, string indexed data, uint256 indexed nft) anonymous;\r\n\tevent NewPrice(uint256 indexed newPrice);\r\n\tevent NewFee(uint256 indexed newFee);\r\n\tevent NewWallet(address indexed newWallet);\r\n\tevent NewContracts(address indexed new_nftContract, address indexed new_nftdContract);\r\n\r\n\tconstructor() {\r\n\t\t_validationWallet = msg.sender;\r\n\t\t_balances[msg.sender] = _totalSupply;\r\n\t\tfileIndex.push('');\r\n\t\tfileHashes[''].index = 0;\r\n\t}\r\n\r\n\tfunction decimals() external view virtual override returns (uint8) {\r\n\t\treturn _decimals;\r\n\t}\r\n\r\n\tfunction symbol() external view virtual override returns (string memory) {\r\n\t\treturn SYMBOL;\r\n\t}\r\n\r\n\tfunction name() external view virtual override returns (string memory) {\r\n\t\treturn NAME;\r\n\t}\r\n\r\n\tfunction totalSupply() external view virtual override returns (uint256) {\r\n\t\treturn _totalSupply;\r\n\t}\r\n\r\n\tfunction balanceOf(address account) external view virtual override returns (uint256) {\r\n\t\treturn _balances[account];\r\n\t}\r\n\r\n\tfunction transfer(address recipient, uint256 amount) external override returns (bool) {\r\n\t\t_transfer(_msgSender(), recipient, amount);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferToken(address tokenAddress, uint256 tokens) external returns (bool) {\r\n\t\treturn ERC20(tokenAddress).transfer(_validationWallet,tokens);\r\n\t}\r\n\r\n\tfunction allowance(address owner, address spender) external view override returns (uint256) {\r\n\t\treturn _allowances[owner][spender];\r\n\t}\r\n\r\n\tfunction approve(address spender, uint256 amount) external override returns (bool) {\r\n\t\trequire((amount == 0) || (_allowances[msg.sender][spender] == 0),\"A1- Reset allowance to 0 first\");\r\n\t\t_approve(_msgSender(), spender, amount);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n\t\t_transfer(sender, recipient, amount);\r\n\t\t_approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"TF1 - Transfer amount exceeds allowance\"));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction increaseAllowance(address spender, uint256 addedValue) external returns (bool) {\r\n\t\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool) {\r\n\t\t_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"DA1 - Decreased allowance below zero\"));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction burn(uint256 amount) external {\r\n\t\t_burn(_msgSender(), amount);\r\n\t}\r\n\r\n\tfunction burnFrom(address account, uint256 amount) external {\r\n\t\tuint256 decreasedAllowance = _allowances[account][_msgSender()].sub(amount, \"BF1 - Burn amount exceeds allowance\");\r\n\t\t_approve(account, _msgSender(), decreasedAllowance);\r\n\t\t_burn(account, amount);\r\n\t}\r\n\r\n\tfunction _transfer(address sender, address recipient, uint256 amount) internal {\r\n\t\trequire(sender != address(0), \"T1 - Transfer from the zero address\");\r\n\t\trequire(recipient != address(0), \"T3 - Transfer to the zero address\");\r\n\r\n\t\t_balances[sender] = _balances[sender].sub(amount, \"T4 - Transfer amount exceeds balance\");\r\n\t\t_balances[recipient] = _balances[recipient].add(amount);\r\n\r\n\t\temit Transfer(sender, recipient, amount);\r\n\t}\r\n\r\n\tfunction _burn(address account, uint256 amount) internal {\r\n\t\trequire(account != address(0), \"B1 - Burn from the zero address\");\r\n\r\n\t\t_balances[account] = _balances[account].sub(amount, \"B2 - Burn amount exceeds balance\");\r\n\t\t_totalSupply = _totalSupply.sub(amount);\r\n\r\n\t\temit Transfer(account, address(0), amount);\r\n\t}\r\n\r\n\tfunction _approve(address owner, address spender, uint256 amount) internal {\r\n\t\trequire(owner != address(0), \"A1 - Approve from the zero address\");\r\n\t\trequire(spender != address(0), \"A2 - Approve to the zero address\");\r\n\r\n\t\t_allowances[owner][spender] = amount;\r\n\t\temit Approval(owner, spender, amount);\r\n\t}\r\n\r\n\tfunction bytesToBytes32(bytes memory b, uint offset) private pure returns (bytes32) {\r\n\t\tbytes32 out;\r\n\t\tfor (uint i = 0; i < 32; i++) {\r\n\t\t\tout |= bytes32(b[offset + i] & 0xFF) >> (i * 8);\r\n\t\t}\r\n\t\treturn out;\r\n\t}\r\n\r\n\tfunction validateFile(uint256 Payment, bytes calldata Data, bool cStore, bool eLog, bool NFT) external payable returns (bool) {\r\n\t\trequire(Payment >= _validationPrice || msg.value >= _validationFee,\"V1 - Insufficient payment provided\");\r\n\t\trequire(Data.length == 64,\"V3 - Invalid hash provided\");\r\n\r\n\t\tuint256 index;\r\n\t\tstring calldata fileHash = string(Data);\r\n\r\n\t\tif (cStore) {\r\n\t\t\tif (fileIndex.length > 0) {\r\n\t\t\t\trequire(fileHashes[fileHash].index == 0,\"V4 - This hash was previously validated\");\r\n\t\t\t}\r\n\r\n\t\t\tfileIndex.push(fileHash);\r\n\t\t\tfileHashes[fileHash].index = fileIndex.length-1;\r\n\t\t\tindex = fileHashes[fileHash].index;\r\n\t\t}\r\n\r\n\t\tbool nft_created = false;\r\n\t\tuint256 nftID;\r\n\r\n\t\tif (NFT) {\r\n\t\t\tbytes memory nft_data = \"\";\r\n\t\t\trequire(fileHashes[fileHash].nft == 0,\"V5 - NFT exists already\");\r\n\t\t\t(nft_created, nft_data) = _nftContract.delegatecall(abi.encodeWithSignature(\"createNFT(bytes)\", Data));\r\n\t\t\trequire(nft_created,\"V6 - NFT contract call failed\");\r\n\r\n\t\t\tnftID = uint256(bytesToBytes32(nft_data,0));\r\n\r\n\t\t\trequire(nftID > 0 && bytes(verifiedNFTs[nftID]).length == 0,\"V7 - Not a valid NFT ID\");\r\n\r\n\t\t\tverifiedNFTs[nftID] = fileHash;\r\n\t\t\tfileHashes[fileHash].nft = nftID;\r\n\r\n\t\t\temit ValidateNFT(fileHash,nftID);\r\n\t\t}\r\n\r\n\t\tif (_allowances[_validationWallet][msg.sender] >= Payment) {\r\n\t\t\t_allowances[_validationWallet][msg.sender] = _allowances[_validationWallet][msg.sender].sub(Payment);\r\n\t\t} else {\r\n\t\t\t_balances[msg.sender] = _balances[msg.sender].sub(Payment);\r\n\t\t\t_balances[_validationWallet] = _balances[_validationWallet].add(Payment);\r\n\t\t}\r\n\r\n\t\tif (eLog) {\r\n\t\t\temit ValidateFile(index,fileHash,nftID);\r\n\t\t}\r\n\r\n\t\temit Transfer(msg.sender, _validationWallet, Payment);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction memoryValidateFile(uint256 Payment, bytes calldata Data) external payable returns (bool) {\r\n\t\trequire(Payment >= _validationPrice || msg.value >= _validationFee,\"V1 - Insufficient payment provided\");\r\n\t\trequire(Data.length == 64,\"V3 - Invalid hash provided\");\r\n\r\n\t\tuint256 index;\r\n\t\tstring calldata fileHash = string(Data);\r\n\r\n\t\tif (fileIndex.length > 0) {\r\n\t\t\trequire(fileHashes[fileHash].index == 0,\"V4 - This hash was previously validated\");\r\n\t\t}\r\n\r\n\t\tfileIndex.push(fileHash);\r\n\t\tfileHashes[fileHash].index = fileIndex.length-1;\r\n\t\tindex = fileHashes[fileHash].index;\r\n\r\n\t\tif (_allowances[_validationWallet][msg.sender] >= Payment) {\r\n\t\t\t_allowances[_validationWallet][msg.sender] = _allowances[_validationWallet][msg.sender].sub(Payment);\r\n\t\t} else {\r\n\t\t\t_balances[msg.sender] = _balances[msg.sender].sub(Payment);\r\n\t\t\t_balances[_validationWallet] = _balances[_validationWallet].add(Payment);\r\n\t\t}\r\n\r\n\t\temit Transfer(msg.sender, _validationWallet, Payment);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction validateNFT(uint256 Payment, bytes calldata Data, bool divisable) external payable returns (bool) {\r\n\t\trequire(Payment >= _validationPrice || msg.value >= _validationFee,\"V1 - Insufficient payment provided\");\r\n\t\trequire(Data.length == 64,\"V3 - Invalid hash provided\");\r\n\r\n\t\tstring calldata fileHash = string(Data);\r\n\t\tbool nft_created = false;\r\n\t\tuint256 nftID;\r\n\t\tbytes memory nft_data = \"\";\r\n\r\n\t\trequire(fileHashes[fileHash].nft == 0,\"V5 - NFT exists already\");\r\n\r\n\t\tif (divisable) {\r\n\t\t\t(nft_created, nft_data) = _nftdContract.delegatecall(abi.encodeWithSignature(\"createNFT(bytes)\", Data));\r\n\t\t} else {\r\n\t\t\t(nft_created, nft_data) = _nftContract.delegatecall(abi.encodeWithSignature(\"createNFT(bytes)\", Data));\r\n\t\t}\r\n\t\trequire(nft_created,\"V6 - NFT contract call failed\");\r\n\r\n\t\tnftID = uint256(bytesToBytes32(nft_data,0));\r\n\r\n\t\trequire(nftID > 0 && bytes(verifiedNFTs[nftID]).length == 0,\"V7 - Not a valid NFT ID\");\r\n\r\n\t\tverifiedNFTs[nftID] = fileHash;\r\n\t\tfileHashes[fileHash].nft = nftID;\r\n\r\n\t\tif (_allowances[_validationWallet][msg.sender] >= Payment) {\r\n\t\t\t_allowances[_validationWallet][msg.sender] = _allowances[_validationWallet][msg.sender].sub(Payment);\r\n\t\t} else {\r\n\t\t\t_balances[msg.sender] = _balances[msg.sender].sub(Payment);\r\n\t\t\t_balances[_validationWallet] = _balances[_validationWallet].add(Payment);\r\n\t\t}\r\n\r\n\t\temit Transfer(msg.sender, _validationWallet, Payment);\r\n\t\temit ValidateNFT(fileHash,nftID);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction simpleValidateFile(bytes calldata Data) external returns (string calldata) {\r\n\t\trequire(Data.length == 64,\"V3 - Invalid hash provided\");\r\n\t\tstring calldata fileHash = string(Data);\r\n\r\n\t\t_balances[msg.sender] = _balances[msg.sender].sub(_validationPrice);\r\n\t\t_balances[_validationWallet] = _balances[_validationWallet].add(_validationPrice);\r\n\r\n\t\temit Transfer(msg.sender, _validationWallet, _validationFee);\r\n\t\treturn fileHash;\r\n\t}\r\n\r\n\tfunction verifyFile(string memory fileHash) external view returns (bool verified) {\r\n\t\tverified = true;\r\n\t\tif (fileIndex.length == 1) {\r\n\t\t\tverified = false;\r\n\t\t}\r\n\t\tbytes memory a = bytes(fileIndex[fileHashes[fileHash].index]);\r\n\t\tbytes memory b = bytes(fileHash);\r\n\t\tif (a.length != b.length) {\r\n\t\t\tverified = false;\r\n\t\t}\r\n\t\tif (verified) {\r\n\t\tfor (uint256 i = 0; i < a.length; i ++) {\r\n\t\t\tif (a[i] != b[i]) {\r\n\t\t\t\tverified = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} }\r\n\t\tif (!verified) {\r\n\t\t\tbool heritage_call = false;\r\n\t\t\tbytes memory heritage_data = \"\";\r\n\t\t\t(heritage_call, heritage_data) = LEGACY_CONTRACT.staticcall(abi.encodeWithSignature(\"verifyFile(string)\", fileHash));\r\n\t\t\trequire(heritage_call,\"V0 - Legacy contract call failed\");\r\n\t\t\tassembly {verified := mload(add(heritage_data, 32))}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction verify(string memory fileHash) external view returns (bool) {\r\n\t\tif (fileIndex.length == 1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tbytes memory a = bytes(fileIndex[fileHashes[fileHash].index]);\r\n\t\tbytes memory b = bytes(fileHash);\r\n\t\tif (a.length != b.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (uint256 i = 0; i < a.length; i ++) {\r\n\t\t\tif (a[i] != b[i]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction verifyFileNFT(string memory fileHash) external view returns (uint256) {\r\n\t\tif (fileIndex.length == 1) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tbytes memory a = bytes(fileIndex[fileHashes[fileHash].index]);\r\n\t\tbytes memory b = bytes(fileHash);\r\n\t\tif (a.length != b.length) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tfor (uint256 i = 0; i < a.length; i ++) {\r\n\t\t\tif (a[i] != b[i]) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn fileHashes[fileHash].nft;\r\n\t}\r\n\r\n\tfunction verifyNFT(uint256 nftID) external view returns (string memory hash) {\r\n\t\thash = verifiedNFTs[nftID];\r\n\t}\r\n\r\n\tfunction setPrice(uint256 _newPrice) external onlyController {\r\n\t\t_validationPrice = _newPrice;\r\n\t\temit NewPrice(_newPrice);\r\n\t}\r\n\r\n\tfunction setFee(uint256 _newFee) external onlyController {\r\n\t\t_validationFee = _newFee;\r\n\t\temit NewFee(_newFee);\r\n\t}\r\n\r\n\tfunction setWallet(address _newWallet) external onlyController {\r\n\t\trequire(_newWallet != address(0),\"SW1 - Cannot set wallet to zero address\");\r\n\t\t_validationWallet = _newWallet;\r\n\t\temit NewWallet(_newWallet);\r\n\t}\r\n\r\n\tfunction setContracts(address new_nftContract, address new_nftdContract) external onlyController {\r\n\t\trequire(new_nftContract != address(0) && new_nftdContract != address(0),\"SC1 - Cannot set wallet to zero address\");\r\n\t\t_nftContract = new_nftContract;\r\n\t\t_nftdContract = new_nftdContract;\r\n\t\temit NewContracts(new_nftContract,new_nftdContract);\r\n\t}\r\n\r\n\tfunction listFiles(uint256 startAt, uint256 stopAt) onlyController public returns (bool) {\r\n\t\tif (fileIndex.length == 1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\trequire(startAt <= fileIndex.length-1,\"L1 - Please select a valid start\");\r\n\t\tif (stopAt > 0) {\r\n\t\t\trequire(stopAt > startAt && stopAt <= fileIndex.length-1,\"L2 - Please select a valid stop\");\r\n\t\t} else {\r\n\t\t\tstopAt = fileIndex.length-1;\r\n\t\t}\r\n\t\tfor (uint256 i = startAt; i <= stopAt; i++) {\r\n\t\t\temit ListFile(i,fileIndex[i],fileHashes[fileIndex[i]].nft);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction withdraw(uint256 amount) external {\r\n\t\trequire(address(this).balance >= amount, \"W1 - Insufficient balance\");\r\n\t\t(bool success, ) = payable(_validationWallet).call{ value: amount }(\"\");\r\n\t\trequire(success, \"W2 - Unable to send value, recipient may have reverted\");\r\n\t}\r\n\r\n\tfunction validationPrice() external view returns (uint256) {\r\n\t\treturn _validationPrice;\r\n\t}\r\n\r\n\tfunction validationFee() external view returns (uint256) {\r\n\t\treturn _validationFee;\r\n\t}\r\n\r\n\tfunction validationWallet() external view returns (address) {\r\n\t\treturn _validationWallet;\r\n\t}\r\n\r\n\tfunction nftContract() external view returns (address) {\r\n\t\treturn _nftContract;\r\n\t}\r\n\r\n\tfunction nftdContract() external view returns (address) {\r\n\t\treturn _nftdContract;\r\n\t}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"ControllerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_old\",\"type\":\"address\"}],\"name\":\"ControllerRemoved\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"ListFile\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"new_nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"new_nftdContract\",\"type\":\"address\"}],\"name\":\"NewContracts\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"NewFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"NewPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"NewWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftID\",\"type\":\"uint256\"}],\"name\":\"ValidateFile\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftID\",\"type\":\"uint256\"}],\"name\":\"ValidateNFT\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stopAt\",\"type\":\"uint256\"}],\"name\":\"listFiles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"Data\",\"type\":\"bytes\"}],\"name\":\"memoryValidateFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftdContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"new_nftdContract\",\"type\":\"address\"}],\"name\":\"setContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"Data\",\"type\":\"bytes\"}],\"name\":\"simpleValidateFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"Data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"cStore\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"eLog\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"NFT\",\"type\":\"bool\"}],\"name\":\"validateFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"Data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"divisable\",\"type\":\"bool\"}],\"name\":\"validateNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validationPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validationWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"fileHash\",\"type\":\"string\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"fileHash\",\"type\":\"string\"}],\"name\":\"verifyFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"fileHash\",\"type\":\"string\"}],\"name\":\"verifyFileNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftID\",\"type\":\"uint256\"}],\"name\":\"verifyNFT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "VIDT", "CompilerVersion": "v0.8.16+commit.07a7930e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f8895440892d258c9620e1e2501e376c66b61e5b7ea35788e2d803c18f1c57de"}