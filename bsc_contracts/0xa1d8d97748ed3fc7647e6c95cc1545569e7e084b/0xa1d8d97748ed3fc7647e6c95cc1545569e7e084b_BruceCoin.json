{"SourceCode": "//SPDX-License-Identifier:UNLICENSE\r\npragma solidity ^0.8.19;\r\n\r\n\r\ncontract BruceCoin {\r\n    uint256 public tokenCap;\r\n    uint256 public totalSupply;\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    address private ZeroAddress;\r\n    //variable Declarations\r\n    \r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);    \r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event BurnEvent(address indexed burner, uint256 indexed buramount);\r\n    event ManageMinterEvent(address indexed newminter);\r\n    //Event Declarations \r\n    \r\n    mapping(address => uint256) public balances;\r\n\r\n    mapping(address => mapping (address => uint256)) public allowance;\r\n    \r\n    constructor(uint256 _TokenCap, string memory _name, string memory _symbol){\r\n        tokenCap = _TokenCap;\r\n        totalSupply = 0;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = 18;\r\n        Mint(msg.sender, _TokenCap);\r\n    }\r\n    \r\n    function balanceOf(address Address) public view returns (uint256 balance){\r\n        return balances[Address];\r\n    }\r\n\r\n    function approve(address delegate, uint _amount) public returns (bool) {\r\n        allowance[msg.sender][delegate] = _amount;\r\n        emit Approval(msg.sender, delegate, _amount);\r\n        return true;\r\n    }\r\n    //Approves an address to spend your coins\r\n\r\n    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool) {\r\n        require(_amount <= balances[_from]);    \r\n        require(_amount <= allowance[_from][msg.sender]);\r\n    \r\n        balances[_from] = balances[_from]-(_amount);\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender]-(_amount);\r\n        balances[_to] = balances[_to]+(_amount);\r\n        emit Transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n    //Transfer From an other address\r\n\r\n\r\n    function transfer(address _to, uint256 _amount) public returns (bool) {\r\n        require(_amount <= balances[msg.sender]);\r\n        balances[msg.sender] = balances[msg.sender]-(_amount);\r\n        balances[_to] = balances[_to]+(_amount);\r\n        emit Transfer(msg.sender, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    function Mint(address _MintTo, uint256 _MintAmount) internal {\r\n        require (totalSupply+(_MintAmount) <= tokenCap);\r\n        balances[_MintTo] = balances[_MintTo]+(_MintAmount);\r\n        totalSupply = totalSupply+(_MintAmount);\r\n        ZeroAddress = 0x0000000000000000000000000000000000000000;\r\n        emit Transfer(ZeroAddress ,_MintTo, _MintAmount);\r\n    } //Can only be used on deploy, view Internal \r\n\r\n\r\n    function Burn(uint256 _BurnAmount) public {\r\n        require (balances[msg.sender] >= _BurnAmount);\r\n        balances[msg.sender] = balances[msg.sender]-(_BurnAmount);\r\n        totalSupply = totalSupply-(_BurnAmount);\r\n        ZeroAddress = 0x0000000000000000000000000000000000000000;\r\n        emit Transfer(msg.sender, ZeroAddress, _BurnAmount);\r\n        emit BurnEvent(msg.sender, _BurnAmount);\r\n        \r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_TokenCap\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"buramount\",\"type\":\"uint256\"}],\"name\":\"BurnEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newminter\",\"type\":\"address\"}],\"name\":\"ManageMinterEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_BurnAmount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BruceCoin", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000d3c21bcecceda1000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000094272756365436f696e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034252430000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://1693916d6dc00699300e4afb481ebdacf60e92d4db073061f715952797d6242a"}