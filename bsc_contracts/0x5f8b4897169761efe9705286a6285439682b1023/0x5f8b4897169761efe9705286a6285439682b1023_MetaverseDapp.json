{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.16;\r\n    \r\ninterface TokenTransfer {\r\n    function transfer(address receiver, uint amount) external;\r\n    function transferFrom(address _from, address _to, uint256 _value) external;\r\n}\r\nabstract contract owned {\r\n    address public owner;\r\n\r\n     constructor() {\r\n        owner = 0x12356E21BC5226Bf9d6E96AF5Ae673d291576C48;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n    \r\ncontract MetaverseDapp is owned {\r\n    struct OrderInfo {\r\n        address userAddress;\r\n        address tokenAddress;\r\n        uint256 amount;\r\n        string remarks;\r\n    }\r\n    mapping(uint256 => OrderInfo) public orderInfos;\r\n    uint256 public lastOrderId = 0;\r\n    \r\n    address public mainAddress = 0x000000000000000000000000000000000000dEaD;\r\n\r\n    function rechargeOne(address tokenAddress,uint256 amount,string memory remarks) external payable {\r\n        require(amount > 0, \"Recharge quantity must be greater than 0\");\r\n\r\n        TokenTransfer(tokenAddress).transferFrom(msg.sender,address(this),amount);\r\n        \r\n        OrderInfo memory orderInfo = OrderInfo({\r\n            userAddress: msg.sender,\r\n            tokenAddress:tokenAddress,\r\n            amount:amount,\r\n            remarks:remarks\r\n        });\r\n        lastOrderId = lastOrderId+1;\r\n        orderInfos[lastOrderId] = orderInfo;\r\n    }\r\n    function withdrawalToken(address payable userAddress,address tokenAddress,uint256 amount) external onlyOwner{\r\n        if(tokenAddress == mainAddress){\r\n            userAddress.transfer(amount);\r\n        }else{\r\n            TokenTransfer(tokenAddress).transfer(userAddress,amount);\r\n        }\r\n    }\r\n   \r\n    function setMainAddress(address _mainAddress) external onlyOwner{\r\n        mainAddress = _mainAddress;\r\n    }\r\n\r\n    function setLastOrderId(uint256 _lastOrderId) external onlyOwner{\r\n        lastOrderId = _lastOrderId;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"name\":\"lastOrderId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderInfos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"remarks\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"remarks\",\"type\":\"string\"}],\"name\":\"rechargeOne\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lastOrderId\",\"type\":\"uint256\"}],\"name\":\"setLastOrderId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mainAddress\",\"type\":\"address\"}],\"name\":\"setMainAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawalToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MetaverseDapp", "CompilerVersion": "v0.8.16+commit.07a7930e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://944bea742a470919a13c331645ca5c8c1badd8c660a1c837c4a70665b9fc7d90"}