{"SourceCode": "/*  \r\n * ARK AutoAllocation\r\n * \r\n * SPDX-License-Identifier: None\r\n */\r\n\r\npragma solidity 0.8.17;\r\n\r\ncontract ARK_AUTO_ALLOCATION {\r\n    address payable public constant SERVER_WALLET = payable(0x764361cA766d0807da988f0Ac95332F2A6F90720);\r\n    uint256 public pricePerAction = 0.005 ether;\r\n\r\n    mapping(address => uint256) public paidUntil;\r\n\r\n    event RegisteredForAutoAllocation(\r\n        address investor,\r\n        uint256 withdrawPercent,\r\n        uint256 compoundPercent,\r\n        uint256 airdropPercent,\r\n        bool autoSell,\r\n        bool autoDeposit,\r\n        bool autoBond,\r\n        uint256 duration,\r\n        uint256 paidUntil,\r\n        uint256 paidGas\r\n    );\r\n\r\n    event ChangedAutoAllocation(\r\n        address investor,\r\n        uint256 withdrawPercent,\r\n        uint256 compoundPercent,\r\n        uint256 airdropPercent,\r\n        bool autoSell,\r\n        bool autoDeposit,\r\n        bool autoBond\r\n    );\r\n\r\n    event ExtendedAutoAllocation(\r\n        address investor,\r\n        uint256 duration,\r\n        uint256 paidUntil,\r\n        uint256 paidGas\r\n    );\r\n\r\n    function registerForAutoAllocation(\r\n        uint256 withdrawPercent,\r\n        uint256 compoundPercent,\r\n        uint256 airdropPercent,\r\n        bool autoSell,\r\n        bool autoDeposit,\r\n        bool autoBond,\r\n        uint256 duration\r\n    ) external payable {\r\n        require(msg.value >= duration * pricePerAction, \"Please pay the price\");\r\n        require(paidUntil[msg.sender] <= block.timestamp, \"Can't renew yet\");\r\n        paidUntil[msg.sender] = block.timestamp + duration * 1 days;\r\n        SERVER_WALLET.transfer(address(this).balance);\r\n\r\n        emit RegisteredForAutoAllocation(\r\n            msg.sender,\r\n            withdrawPercent,\r\n            compoundPercent,\r\n            airdropPercent,\r\n            autoSell,\r\n            autoDeposit,\r\n            autoBond,\r\n            duration,\r\n            paidUntil[msg.sender],\r\n            msg.value\r\n        );\r\n    }\r\n\r\n    function changeAutoAllocation(\r\n        uint256 withdrawPercent,\r\n        uint256 compoundPercent,\r\n        uint256 airdropPercent,\r\n        bool autoSell,\r\n        bool autoDeposit,\r\n        bool autoBond\r\n    ) external {\r\n        require(paidUntil[msg.sender] >= block.timestamp, \"Can't change without active schedule\");\r\n        \r\n        emit ChangedAutoAllocation(\r\n            msg.sender,\r\n            withdrawPercent,\r\n            compoundPercent,\r\n            airdropPercent,\r\n            autoSell,\r\n            autoDeposit,\r\n            autoBond\r\n        );\r\n    }\r\n\r\n    function extendAutoAllocation(uint256 duration) external payable {\r\n        require(msg.value >= duration * pricePerAction, \"Please pay the price\");\r\n        require(paidUntil[msg.sender] != 0, \"Need to have previous strategy\");\r\n        if(paidUntil[msg.sender] > block.timestamp) paidUntil[msg.sender] += duration * 1 days;\r\n        else paidUntil[msg.sender] = block.timestamp + duration * 1 days;\r\n        SERVER_WALLET.transfer(address(this).balance);\r\n\r\n        emit ExtendedAutoAllocation(\r\n            msg.sender,\r\n            duration,\r\n            paidUntil[msg.sender],\r\n            msg.value\r\n        );\r\n    }\r\n\r\n    function setPriceForAction(uint256 price) external {\r\n        if(msg.sender != SERVER_WALLET) return;\r\n        pricePerAction = price;\r\n    }\r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawPercent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundPercent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"airdropPercent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoSell\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoDeposit\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoBond\",\"type\":\"bool\"}],\"name\":\"ChangedAutoAllocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidUntil\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidGas\",\"type\":\"uint256\"}],\"name\":\"ExtendedAutoAllocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawPercent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundPercent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"airdropPercent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoSell\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoDeposit\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoBond\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidUntil\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidGas\",\"type\":\"uint256\"}],\"name\":\"RegisteredForAutoAllocation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SERVER_WALLET\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"compoundPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"airdropPercent\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"autoSell\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"autoDeposit\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"autoBond\",\"type\":\"bool\"}],\"name\":\"changeAutoAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"extendAutoAllocation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"paidUntil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pricePerAction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"compoundPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"airdropPercent\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"autoSell\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"autoDeposit\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"autoBond\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"registerForAutoAllocation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setPriceForAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ARK_AUTO_ALLOCATION", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ff010f5f8e1299cb9731320bc7eed9b870ac960edc85fc6cbffe117b4e8b1089"}