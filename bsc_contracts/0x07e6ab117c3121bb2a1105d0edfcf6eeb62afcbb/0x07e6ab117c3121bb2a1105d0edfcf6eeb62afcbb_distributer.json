{"SourceCode": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.16;\r\n\r\ncontract distributer {\r\n\r\n    address public admin;\r\n\r\n    uint256 public userDistributionPermile;\r\n\r\n    event AdminChanged(address previousAdmin, address newAdmin);\r\n    event DistributionValueChanged(uint256 previousValue, uint256 newValue);\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"Accessble: caller is not an Admin\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _admin) {\r\n        admin = _admin;\r\n        userDistributionPermile = 400;\r\n    }\r\n\r\n    function distributeFunds(address[] calldata accounts) external onlyAdmin {\r\n        require(address(this).balance > 0,\"insuffients funds\");\r\n        uint256 userDistribution = address(this).balance * userDistributionPermile / 1000;\r\n        uint256 adminDistribution = address(this).balance - userDistribution;\r\n        uint256 amountPerAccount = userDistribution / accounts.length;\r\n        payable(admin).transfer(adminDistribution);\r\n        for(uint256 i = 0; i < accounts.length; i++) {\r\n                payable(accounts[i]).transfer(amountPerAccount);\r\n        }\r\n    }\r\n\r\n    function setDistributionPermile(uint256 _userDistributionPermile) external onlyAdmin {\r\n        emit DistributionValueChanged(userDistributionPermile, _userDistributionPermile);\r\n        userDistributionPermile = _userDistributionPermile;\r\n    }\r\n\r\n    function changeAdmin(address newAdmin) external onlyAdmin {\r\n        emit AdminChanged(admin, newAdmin);\r\n        admin = newAdmin;\r\n    }\r\n\r\n    fallback() external {}\r\n    receive() external payable{}\r\n    \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"DistributionValueChanged\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"distributeFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userDistributionPermile\",\"type\":\"uint256\"}],\"name\":\"setDistributionPermile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userDistributionPermile\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "distributer", "CompilerVersion": "v0.8.16+commit.07a7930e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000009511e1ceab68bb7a97e83eb74b9a9937310d6acf", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f698506bf2cca28f1499aab51bcfa3fa68a761e2e68d345325ad9b15f014589a"}