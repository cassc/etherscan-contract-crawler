{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.3;\r\n\r\ninterface IERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n}\r\n\r\ninterface bonus {\r\n    function issue (address _Who,uint256  _Number) external returns (bool success);\r\n}\r\ncontract  deposit180 {\r\n    address  owner;\r\n    mapping (address => bool) admin;\r\n    uint256  private total=20000000000000000000000000;\r\n    uint256  private accumulation;\r\n    //current total\r\n    uint256  private ctotal;\r\n    bool  private state;\r\n    mapping (address =>uint256 ) number;\r\n    mapping (address =>uint256 ) time;\r\n    IERC20 token1 =IERC20(0x3D72cCA97537d8D3bED5ff36dEb63aB3f6Ca3775);\r\n    bonus  b1=bonus(0xA598F66403E6B7F411eaB68b440655e1E3cD245D);\r\n\r\n    constructor  ()  {\r\n      owner = msg.sender;    \r\n      admin[owner]=true;\r\n    }\r\n    function SetState (bool _yn) public {\r\n    assert(admin[msg.sender]==true);\r\n    state=_yn;\r\n    }\r\n\r\n   function deposit (uint256  _Number) public returns (bool success) {\r\n    require (state==true);\r\n    require(token1.balanceOf(msg.sender)>_Number);\r\n    require ((ctotal+_Number)<=total);   \r\n    require (number[msg.sender]==0);\r\n    require (_Number>=100000000000000000000 && _Number<1000000000000000000000000);\r\n    assert(token1.transferFrom(msg.sender,address(this),_Number));\r\n    number[msg.sender]=_Number;\r\n    time[msg.sender]=block.timestamp;\r\n    ctotal+=_Number;\r\n    accumulation+=_Number;\r\n    return true;   \r\n    }\r\n\r\n   function withdraw() public returns (bool success) {\r\n   require (number[msg.sender]>0);   \r\n   uint64 d1 ;\r\n   d1= (getNowDay()-getDay(time[msg.sender])); \r\n   require (d1>=180); \r\n   token1.transfer(msg.sender,number[msg.sender]);\r\n   uint256 n1;\r\n   n1=interest(msg.sender);\r\n   if(n1>0){\r\n   b1.issue(msg.sender ,n1);   \r\n   } \r\n    ctotal-=number[msg.sender];\r\n    number[msg.sender]=0;\r\n    time[msg.sender]=0;\r\n    return true;  \r\n   }\r\n\r\n   function sparewithdraw(address _who) public returns (bool success) {\r\n   require (admin[msg.sender]==true);    \r\n   require (number[_who]>0);   \r\n   token1.transfer(_who,number[_who]);\r\n   uint256 n1;\r\n   n1=interest(_who);\r\n   if(n1>0){\r\n   b1.issue(_who ,n1);   \r\n   } \r\n   ctotal-=number[_who];\r\n    number[_who]=0;\r\n    time[_who]=0;\r\n    return true;  \r\n   }\r\n\r\n    function interest(address _who) public view returns (uint256 _int) {\r\n    uint64 d1 ;\r\n    d1= (getNowDay()-getDay(time[_who]));   \r\n\r\n    if( d1< 1  ){ \r\n     return 0;   \r\n     } \r\n    if( d1> 0 && d1<181 ){ \r\n     return number[_who]*5*d1/10000;   \r\n     } \r\n    if(  d1>180 ){ \r\n     return number[_who]*5*180/10000;   \r\n     } \r\n\r\n    }\r\n\r\n    function getDay(uint timestamp) public pure returns (uint64) {\r\n        return uint64(timestamp / 60/60/24);\r\n    }\r\n    function getNowDay() public view returns (uint64) {\r\n        return uint64(block.timestamp / 60/60/24);\r\n    }\r\n    function Qaddress() public view returns (uint256 _number,uint64 _day,uint256 interest_){\r\n    uint64 t1;\r\n    if(time[msg.sender]==0){t1=0;}\r\n    if(time[msg.sender]>0){t1=getNowDay()-getDay(time[msg.sender]);}   \r\n     return (number[msg.sender] , t1,interest(msg.sender) );    \r\n    }\r\n    function Qaddress2(address _who ) public view returns (uint256 _number,uint64 _day,uint256 interest_){\r\n    uint64 t1;\r\n    if(time[msg.sender]==0){t1=0;}\r\n    if(time[msg.sender]>0){t1=getNowDay()-getDay(time[msg.sender]);}   \r\n     return (number[_who] , t1,interest(_who) );    \r\n    }\r\n    function Qtotal() public view  returns(uint256 total_) {\r\n    return( total); \r\n    }\r\n    function Qaccumulation() public view  returns(uint256 accumulation_) {\r\n    return( accumulation); \r\n    }\r\n    function Qctotal() public view  returns(uint256 ctotal_) {\r\n    return( ctotal); \r\n    }\r\n    function Qstate() public view  returns(bool state_) {\r\n    return( state); \r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Qaccumulation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"accumulation_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Qaddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_number\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_day\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"interest_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"Qaddress2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_number\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_day\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"interest_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Qctotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ctotal_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Qstate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"state_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Qtotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_yn\",\"type\":\"bool\"}],\"name\":\"SetState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Number\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getDay\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNowDay\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"interest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_int\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"sparewithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "deposit180", "CompilerVersion": "v0.8.16+commit.07a7930e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c8e8eb0d6d9f6ff9c283d68203a4d8c215ba0f976d2183ea1d7522bb301f217c"}