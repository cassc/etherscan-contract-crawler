{"SourceCode": "# @version 0.3.7\r\n# @title LlamaNodes Payments Factory\r\n# @license MIT\r\n\r\n\r\nevent NewPaymentAddress:\r\n    account: address\r\n    payment_address: address\r\n\r\nevent PaymentReceived:\r\n    account: indexed(address)\r\n    token: address\r\n    amount: uint256\r\n\r\nevent NewOwnerCommitted:\r\n    owner: address\r\n    new_owner: address\r\n    finalize_time: uint256\r\n\r\nevent NewOwnerAccepted:\r\n    old_owner: address\r\n    owner: address\r\n\r\nevent NewSweeperCommitted:\r\n    sweeper: address\r\n    new_sweeper: address\r\n    finalize_time: uint256\r\n\r\nevent NewSweeperSet:\r\n    old_sweeper: address\r\n    sweeper: address\r\n\r\nevent NewReceiverCommitted:\r\n    receiver: address\r\n    new_receiver: address\r\n    finalize_time: uint256\r\n\r\nevent NewReceiverSet:\r\n    old_receiver: address\r\n    receiver: address\r\n\r\n\r\nADMIN_ACTIONS_DELAY: constant(uint256) = 86400 * 3\r\nPROXY_IMPLEMENTATION: public(immutable(address))\r\n\r\nsweeper_implementation: public(address)\r\nfuture_sweeper_implementation: public(address)\r\n\r\nowner: public(address)\r\nfuture_owner: public(address)\r\n\r\nreceiver: public(address)\r\nfuture_receiver: public(address)\r\n\r\ntransfer_ownership_timestamp: public(uint256)\r\nnew_sweeper_timestamp: public(uint256)\r\nnew_receiver_timestamp: public(uint256)\r\n\r\nis_approved_token: public(HashMap[address, bool])\r\napproved_tokens: DynArray[address, 10]\r\n\r\naccount_to_payment_address: public(HashMap[address, address])\r\npayment_address_to_account: public(HashMap[address, address])\r\n\r\n\r\n@external\r\ndef __init__(_owner: address, _receiver: address, _sweeper: address, _proxy: address):\r\n    self.owner = _owner\r\n    self.receiver = _receiver\r\n    self.sweeper_implementation = _sweeper\r\n    PROXY_IMPLEMENTATION = _proxy\r\n\r\n\r\n@view\r\n@external\r\ndef get_approved_tokens() -> DynArray[address, 10]:\r\n    return self.approved_tokens\r\n\r\n\r\n@external\r\ndef payment_received(_token: address, _amount: uint256) -> bool:\r\n    account: address = self.payment_address_to_account[msg.sender]\r\n    assert account != empty(address), \"Unknown caller\"\r\n    assert self.is_approved_token[_token], \"Invalid payment token\"\r\n\r\n    log PaymentReceived(account, _token, _amount)\r\n    return True\r\n\r\n\r\n@external\r\ndef create_payment_address(_account: address = msg.sender):\r\n    sweeper: address = create_copy_of(PROXY_IMPLEMENTATION, salt=convert(_account, bytes32))\r\n    self.account_to_payment_address[_account] = sweeper\r\n    self.payment_address_to_account[sweeper] = _account\r\n\r\n    log NewPaymentAddress(_account, sweeper)\r\n\r\n\r\n@external\r\ndef set_token_approvals(_tokens: DynArray[address, 10], _approved: bool):\r\n    assert msg.sender == self.owner\r\n\r\n    approved_tokens: DynArray[address, 10] = []\r\n    if not _approved:\r\n        approved_tokens = self.approved_tokens\r\n\r\n    for token in _tokens:\r\n        if self.is_approved_token[token] != _approved:\r\n            self.is_approved_token[token] = _approved\r\n\r\n            if _approved:\r\n                self.approved_tokens.append(token)\r\n            else:\r\n                for i in range(10):\r\n                    if approved_tokens[i] == token:\r\n                        if i + 1 == len(approved_tokens):\r\n                            approved_tokens.pop()\r\n                        else:\r\n                            approved_tokens[i] = approved_tokens.pop()\r\n                        break\r\n\r\n    if not _approved:\r\n        self.approved_tokens = approved_tokens\r\n\r\n\r\n\r\n@external\r\ndef commit_new_sweeper_implementation(_sweeper: address):\r\n    assert msg.sender == self.owner\r\n\r\n    finalize_time: uint256 = block.timestamp + ADMIN_ACTIONS_DELAY\r\n    self.future_sweeper_implementation = _sweeper\r\n    self.new_sweeper_timestamp = finalize_time\r\n    log NewSweeperCommitted(self.sweeper_implementation, _sweeper, finalize_time)\r\n\r\n\r\n@external\r\ndef finalize_new_sweeper_implementation():\r\n    assert msg.sender == self.owner\r\n    assert self.new_sweeper_timestamp < block.timestamp\r\n\r\n    log NewSweeperSet(self.sweeper_implementation, self.future_sweeper_implementation)\r\n    self.sweeper_implementation = self.future_sweeper_implementation\r\n\r\n\r\n@external\r\ndef commit_new_receiver(_receiver: address):\r\n    assert msg.sender == self.owner\r\n\r\n    finalize_time: uint256 = block.timestamp + ADMIN_ACTIONS_DELAY\r\n    self.future_receiver = _receiver\r\n    self.new_receiver_timestamp = finalize_time\r\n\r\n    log NewReceiverCommitted(self.receiver, _receiver, finalize_time)\r\n\r\n\r\n@external\r\ndef finalize_new_receiver():\r\n    assert msg.sender == self.owner\r\n    assert self.new_receiver_timestamp < block.timestamp\r\n\r\n    log NewReceiverSet(self.receiver, self.future_receiver)\r\n    self.receiver = self.future_receiver\r\n\r\n\r\n@external\r\ndef commit_transfer_ownership(_new_owner: address):\r\n    \"\"\"\r\n    @notice Set a new contract owner\r\n    \"\"\"\r\n    assert msg.sender == self.owner\r\n\r\n    finalize_time: uint256 = block.timestamp + ADMIN_ACTIONS_DELAY\r\n    self.future_owner = _new_owner\r\n    self.transfer_ownership_timestamp = finalize_time\r\n    log NewOwnerCommitted(msg.sender, _new_owner, finalize_time)\r\n\r\n\r\n@external\r\ndef accept_transfer_ownership():\r\n    \"\"\"\r\n    @notice Accept transfer of contract ownership\r\n    \"\"\"\r\n    assert msg.sender == self.future_owner\r\n    assert self.transfer_ownership_timestamp < block.timestamp\r\n\r\n    log NewOwnerAccepted(self.owner, msg.sender)\r\n    self.owner = msg.sender", "ABI": "[{\"name\":\"NewPaymentAddress\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":false},{\"name\":\"payment_address\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"PaymentReceived\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"indexed\":true},{\"name\":\"token\",\"type\":\"address\",\"indexed\":false},{\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"NewOwnerCommitted\",\"inputs\":[{\"name\":\"owner\",\"type\":\"address\",\"indexed\":false},{\"name\":\"new_owner\",\"type\":\"address\",\"indexed\":false},{\"name\":\"finalize_time\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"NewOwnerAccepted\",\"inputs\":[{\"name\":\"old_owner\",\"type\":\"address\",\"indexed\":false},{\"name\":\"owner\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"NewSweeperCommitted\",\"inputs\":[{\"name\":\"sweeper\",\"type\":\"address\",\"indexed\":false},{\"name\":\"new_sweeper\",\"type\":\"address\",\"indexed\":false},{\"name\":\"finalize_time\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"NewSweeperSet\",\"inputs\":[{\"name\":\"old_sweeper\",\"type\":\"address\",\"indexed\":false},{\"name\":\"sweeper\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"NewReceiverCommitted\",\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\",\"indexed\":false},{\"name\":\"new_receiver\",\"type\":\"address\",\"indexed\":false},{\"name\":\"finalize_time\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"NewReceiverSet\",\"inputs\":[{\"name\":\"old_receiver\",\"type\":\"address\",\"indexed\":false},{\"name\":\"receiver\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_sweeper\",\"type\":\"address\"},{\"name\":\"_proxy\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"get_approved_tokens\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"payment_received\",\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"create_payment_address\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"create_payment_address\",\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"set_token_approvals\",\"inputs\":[{\"name\":\"_tokens\",\"type\":\"address[]\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"commit_new_sweeper_implementation\",\"inputs\":[{\"name\":\"_sweeper\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"finalize_new_sweeper_implementation\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"commit_new_receiver\",\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"finalize_new_receiver\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"commit_transfer_ownership\",\"inputs\":[{\"name\":\"_new_owner\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"accept_transfer_ownership\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"PROXY_IMPLEMENTATION\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"sweeper_implementation\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_sweeper_implementation\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"receiver\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"future_receiver\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"transfer_ownership_timestamp\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"new_sweeper_timestamp\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"new_receiver_timestamp\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"is_approved_token\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"account_to_payment_address\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"payment_address_to_account\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]}]", "ContractName": "LlamaNodes Payments Factory", "CompilerVersion": "vyper:0.3.7", "OptimizationUsed": "0", "Runs": "0", "ConstructorArguments": "00000000000000000000000014059d8d33dba36aa2a74ed7a52835da04450b9d000000000000000000000000303ccae16140b5e784f048d1d06b0534eb789f9d0000000000000000000000001a8ebb2a365ffab026e0df431eab5a5e6e79bad10000000000000000000000009e8a6b98e9f4827aeba2d9128ca14e2f4c8384d0", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}