{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"Lock.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract Lock {\\n    // this declares a type of users that are locked\\n    //with locked time, amount, released\\n    struct Beneficiary {\\n        uint256 month;\\n        uint256 total_locked;\\n        uint256 current_locked;\\n        uint256 released;\\n        uint256 claimed_month;\\n        uint256 locked_time;\\n    }\\n\\n    address public owner;\\n    address public locker;\\n    address unlocker;\\n    //this declares a state variable that\\n    //stores a User type (Beneficiary)\\n    mapping(address => Beneficiary) public beneficiaries;\\n    // release starts Nov 1st 2022\\n    uint256 public release_date = 1667286000;\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    function assignLocker(address _locker) external {\\n        require(msg.sender == owner);\\n        require(_locker != address(0));\\n        locker = _locker;\\n    }\\n\\n    function assignUnlocker(address _unlocker) external {\\n        require(msg.sender == owner);\\n        require(_unlocker != address(0));\\n        unlocker = _unlocker;\\n    }\\n\\n    function lock(\\n        address _user,\\n        uint256 _amount,\\n        uint256 _month\\n    ) external {\\n        require(\\n            msg.sender == locker,\\n            \\\"You don't have access to this function.\\\"\\n        );\\n        uint256 current_time = block.timestamp;\\n        require(current_time < release_date);\\n        if (beneficiaries[_user].month == 0) {\\n            beneficiaries[_user].total_locked = _amount;\\n            beneficiaries[_user].current_locked = _amount;\\n            beneficiaries[_user].month = _month;\\n            beneficiaries[_user].released = 0;\\n            beneficiaries[_user].claimed_month = 0;\\n            beneficiaries[_user].locked_time = current_time;\\n        } else {\\n            require(_month == beneficiaries[_user].month);\\n            beneficiaries[_user].total_locked += _amount;\\n            beneficiaries[_user].current_locked += _amount;\\n            beneficiaries[_user].locked_time = current_time;\\n        }\\n    }\\n\\n    function unlock(\\n        address _user,\\n        uint256 _amount,\\n        uint256 _month\\n    ) external {\\n        require(msg.sender == unlocker);\\n        require(\\n            //only allow changes within 48 hours after lock\\n            block.timestamp - beneficiaries[_user].locked_time <= 48 * 3600 &&\\n                beneficiaries[_user].month == _month\\n        );\\n        beneficiaries[_user].total_locked -= _amount;\\n        beneficiaries[_user].current_locked -= _amount;\\n    }\\n\\n    function release() external {\\n        address _beneficiary = msg.sender;\\n        require(beneficiaries[_beneficiary].current_locked > 0);\\n        Beneficiary storage beneficiary = beneficiaries[_beneficiary];\\n        uint256 today = block.timestamp;\\n        require(today > release_date);\\n        uint256 total_locked = beneficiary.total_locked;\\n        uint256 claimed = beneficiary.claimed_month;\\n        uint256 passed_time = (today - release_date) / 3600 / 24 / 30;\\n        if (passed_time > beneficiary.month) {\\n            passed_time = beneficiary.month;\\n        }\\n        uint256 release_amount = ((passed_time - claimed) * total_locked) /\\n            beneficiary.month;\\n        beneficiary.claimed_month = passed_time;\\n        beneficiary.current_locked -= release_amount;\\n        beneficiary.released += release_amount;\\n    }\\n\\n    function check_lock(address _sender)\\n        external\\n        view\\n        returns (Beneficiary memory)\\n    {\\n        return beneficiaries[_sender];\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"evmVersion\": \"istanbul\",\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"libraries\": {\r\n      \"Lock.sol\": {}\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_locker\",\"type\":\"address\"}],\"name\":\"assignLocker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_unlocker\",\"type\":\"address\"}],\"name\":\"assignUnlocker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beneficiaries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total_locked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"current_locked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"released\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed_month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"locked_time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"check_lock\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total_locked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"current_locked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"released\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed_month\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"locked_time\",\"type\":\"uint256\"}],\"internalType\":\"struct Lock.Beneficiary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"locker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release_date\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Lock", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}