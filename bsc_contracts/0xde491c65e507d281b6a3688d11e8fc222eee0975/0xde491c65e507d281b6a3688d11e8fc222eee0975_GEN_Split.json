{"SourceCode": "// SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity 0.8.10;\r\n\r\n\r\ninterface IERC20 {\r\n    \r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; \r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    constructor () {\r\n        _owner = 0x627C95B6fD9026E00Ab2c373FB08CC47E02629a0;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    \r\n}\r\n\r\n\r\ncontract GEN_Split is Ownable{\r\n\r\n    address payable private Wallet_DEV = payable(0x627C95B6fD9026E00Ab2c373FB08CC47E02629a0);\r\n    address payable private Wallet_GEN = payable(0xD05895EDF847e1712721Cc9e0427Aa26289A6Bc5);\r\n    \r\n    receive() external payable {}\r\n\r\n    function Process_BNB() external {\r\n        uint256 contractBNB = address(this).balance;\r\n        if (contractBNB > 0) {\r\n        \r\n        uint256 BNB = contractBNB/2;\r\n\r\n        Send_BNB(BNB, Wallet_DEV);\r\n        Send_BNB(BNB, Wallet_GEN);\r\n        \r\n        }\r\n    }\r\n\r\n    function Process_Tokens(address Token_Address, uint256 Percent_of_Tokens) public returns(bool _sent){\r\n        if(Percent_of_Tokens > 100){Percent_of_Tokens = 100;}\r\n        uint256 totalRandom = IERC20(Token_Address).balanceOf(address(this));\r\n        uint256 removeRandom = totalRandom * Percent_of_Tokens / 100;\r\n        _sent = IERC20(Token_Address).transfer(Wallet_DEV, removeRandom);\r\n    }      \r\n\r\n    function Update_DEV(address payable wallet) public onlyOwner() {\r\n        Wallet_DEV = wallet;\r\n    }\r\n\r\n    function Update_GEN(address payable wallet) public onlyOwner() {\r\n        Wallet_GEN = wallet;\r\n    }\r\n\r\n    function Send_BNB(uint256 amount, address payable sendTo) private {\r\n        sendTo.transfer(amount);\r\n    }  \r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Process_BNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Token_Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"Percent_of_Tokens\",\"type\":\"uint256\"}],\"name\":\"Process_Tokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_sent\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"Update_DEV\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"Update_GEN\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "GEN_Split", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://a5ef3c2956fc945635e4435c4e6e94419791e5eaab58a364cb1b2b8a5ec82d12"}