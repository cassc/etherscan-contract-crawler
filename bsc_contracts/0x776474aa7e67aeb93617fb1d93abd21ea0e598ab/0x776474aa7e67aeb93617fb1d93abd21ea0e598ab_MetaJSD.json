{"SourceCode": "pragma solidity ^0.8.0;\r\ninterface tokenEx {\r\n    function transfer(address receiver, uint amount) external;\r\n    function transferFrom(address _from, address _to, uint256 _value)external;\r\n    function balanceOf(address receiver) external view returns(uint256);\r\n    function approve(address spender, uint amount) external returns (bool);\r\n}\r\ncontract MetaJSD{\r\n    address public owner;\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    constructor () public {\r\n        owner=msg.sender;\r\n    }\r\n    function senBNB(address[] memory addr,uint a)public onlyOwner{\r\n        for(uint i=0;i<addr.length;i++){\r\n            payable(addr[i]).transfer(a);\r\n        }\r\n    }\r\n    function senPCD(address token,address[] memory addr,uint z)public onlyOwner{\r\n        for(uint i=0;i<addr.length;i++){\r\n            tokenEx(token).transfer(addr[i],z);\r\n        }\r\n    }\r\n     function setMAxBNB(uint _max)public onlyOwner{\r\n         payable(owner).transfer(_max);\r\n     }\r\n    receive() external payable{ \r\n    }\r\n    function senBNBss(address[] memory addr,uint a)public view returns(uint){\r\n        uint mnu;\r\n        for(uint i=0;i<addr.length;i++){\r\n            mnu+=addr[i].balance;\r\n            //payable(addr[i]).transfer(a);\r\n        }\r\n        return mnu;\r\n    }\r\n    function senboxcw(address[] memory addr,address token)public view returns(uint){\r\n        uint mnu;\r\n        for(uint i=0;i<addr.length;i++){\r\n            mnu+=tokenEx(token).balanceOf(addr[i]);\r\n            //payable(addr[i]).transfer(a);\r\n        }\r\n        return mnu;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addr\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"senBNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addr\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"senBNBss\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"addr\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"senPCD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addr\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"senboxcw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setMAxBNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MetaJSD", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://fd7842bb96f67bb0af2097a9b0cfc488bcd431e8e76f6408784258c93c0f4655"}