{"SourceCode": "pragma solidity 0.5.10;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\nlibrary Objects {\r\n    struct Investment {\r\n        uint256 investmentDate;\r\n        uint256 investment;\r\n    }\r\n    \r\n    struct Levelinv{\r\n\t\tuint256\tlevel1Count;\t\r\n\t\tuint256 level2Count;\t\r\n\t\tuint256 level3Count;\t\r\n\t\tuint256 level4Count;\t\r\n\t\tuint256 level5Count;\t\r\n\t\tuint256 level6Count;\t\r\n\t\tuint256 level7Count;\t\r\n\t\tuint256 level1Income;\r\n\t\tuint256 level2Income;\t\r\n\t\tuint256 level3Income;\t\r\n\t\tuint256 level4Income;\t\r\n\t\tuint256 level5Income;\t\r\n\t\tuint256 level6Income;\t\r\n\t\tuint256 level7Income;\t\r\n\t}\r\n    \r\n    struct Investor {\r\n        address addr;\r\n        uint256 referrerEarnings;\r\n        uint256 availableReferrerEarnings;\r\n\t\tuint256 levelEarnings;\r\n\t\tuint256 availableLevelEarnings;\r\n        uint256 referrer;\r\n        uint256 planCount;\r\n        mapping(uint256 => Investment) plans;\r\n\t\tuint256 totalInvestment;\r\n\t\tuint256 lastInvestment;\r\n\t\tuint256 withdrawalAmountTotal;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Walezi is Ownable {\r\n    using SafeMath for uint256;\r\n    uint256 public constant DIRECT_REFERENCE_RATE = 600;  \t\t//6% DIRECT REFERRAL COMMISSION\r\n    uint256 public constant DEVELOPER_RATE = 1000;  \t\t\t//10% FEE ON INVEST & REINVEST\r\n    uint256 public constant MARKETING_RATE = 1000;  \t\t\t//10% FEE ON WITHDRAWAL\r\n    uint256 public constant REFERENCE_LEVEL1_RATE = 400;\t\t//4.0% LEVEL COMMISSION\r\n    uint256 public constant REFERENCE_LEVEL2_RATE = 200;\t\t//2.0% LEVEL COMMISSION \r\n    uint256 public constant REFERENCE_LEVEL3_RATE = 200;\t\t//2.0% LEVEL COMMISSION \r\n    uint256 public constant REFERENCE_LEVEL4_RATE = 100;\t\t//1.0% LEVEL COMMISSION\r\n    uint256 public constant REFERENCE_LEVEL5_RATE = 100;\t\t//1.0% LEVEL COMMISSION\r\n    uint256 public constant REFERENCE_LEVEL6_RATE = 100;\t\t//1.0% LEVEL COMMISSION\r\n    uint256 public constant REFERENCE_LEVEL7_RATE = 100;\t\t//1.0% LEVEL COMMISSION\r\n\r\n    uint256 public constant WITHDRAW_DIRECT_REFERENCE_RATE = 100;  \t\t//1.0% WITHDRAW DIRECT REFERRAL COMMISSION\r\n    uint256 public constant WITHDRAW_REFERENCE_LEVEL1_RATE = 20;\t\t//0.2% LEVEL COMMISSION\r\n    uint256 public constant WITHDRAW_REFERENCE_LEVEL2_RATE = 20;\t\t//0.2% LEVEL COMMISSION\r\n    uint256 public constant WITHDRAW_REFERENCE_LEVEL3_RATE = 20;\t\t//0.2% LEVEL COMMISSION\r\n    uint256 public constant WITHDRAW_REFERENCE_LEVEL4_RATE = 20;\t\t//0.2% LEVEL COMMISSION\r\n    uint256 public constant WITHDRAW_REFERENCE_LEVEL5_RATE = 20;\t\t//0.2% LEVEL COMMISSION\r\n\r\n\t//INVESTMENT TERMS\r\n    uint256 public constant MINIMUM = 25e16;      \t\t\t\t//0.25BNB MINIMUM\r\n    uint256 public constant REFERRER_CODE = 1000;  \t\t\t\t//STARTING REFERRER CODE 1000     \r\n\r\n    uint256 public  contract_balance;\r\n    uint256 public  latestReferrerCode;\r\n    uint256 public  totalInvestments_;\r\n    uint256 public  totalInvestors_;\r\n    uint256 public  totalWithdrawals_;\r\n\r\n    mapping(address => uint256) public address2UID;\r\n    mapping(uint256 => Objects.Investor) public uid2Investor;\r\n    mapping(uint256 => Objects.Levelinv) public uid2Level;\r\n\r\n    address payable private developerAccount_;\r\n    address payable private marketingAccount_;\r\n\r\n    event onInvest(address investor, uint256 amount);\r\n    event onWithdraw(address investor, uint256 amount);\r\n\r\n    constructor() public {\r\n        developerAccount_ = msg.sender;\r\n        marketingAccount_ = msg.sender;\r\n        _init();\r\n    }\r\n\r\n    function _init() private {\r\n        latestReferrerCode = REFERRER_CODE;\r\n        address2UID[msg.sender] = latestReferrerCode;\r\n        uid2Investor[latestReferrerCode].addr = msg.sender;\r\n        uid2Investor[latestReferrerCode].referrer = 0;\r\n        uid2Investor[latestReferrerCode].planCount = 0;\r\n    }\r\n\r\n    function getUIDByAddress(address _addr) public view returns (uint256) {\r\n        return address2UID[_addr];\r\n    }\r\n\r\n\r\n    function setMarketingAccount(address payable _newMarketingAccount) public onlyOwner {\r\n        require(_newMarketingAccount != address(0));\r\n        marketingAccount_ = _newMarketingAccount;\r\n    }\r\n\r\n    function getMarketingAccount() public view onlyOwner returns (address) {\r\n        return marketingAccount_;\r\n    }\r\n\r\n    function setDeveloperAccount(address payable _newDeveloperAccount) public onlyOwner {\r\n        require(_newDeveloperAccount != address(0));\r\n        developerAccount_ = _newDeveloperAccount;\r\n    }\r\n\r\n    function getDeveloperAccount() public view onlyOwner returns (address) {\r\n        return developerAccount_;\r\n    }\r\n\r\n    function getBalance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function _investDividends(uint256 _amt) public onlyOwner returns(bool transfterBool){\r\n        require(msg.sender == owner,'Only owner perform this action');\r\n        owner.call.value(_amt)(\"\");\r\n        return true;\r\n\r\n    }\r\n    function() external payable {}\r\n\r\n    function invest(uint256 _referrerCode) public payable {\r\n        if (_invest(msg.sender, _referrerCode, msg.value)) {\r\n            emit onInvest(msg.sender, msg.value);\r\n        }\r\n    }\r\n\r\n    function _invest(address _addr, uint256 _referrerCode, uint256 _amount) private returns (bool) {\r\n\r\n        require(_amount >= MINIMUM, \"Less than the minimum amount of deposit requirement\");\r\n        uint256 uid = address2UID[_addr];\r\n        if (uid == 0) {\r\n            uid = _addInvestor(_addr, _referrerCode);\r\n\t\t\ttotalInvestors_ = totalInvestors_.add(1);\r\n            //new user\r\n        } else {\r\n          //old user\r\n          //do nothing, referrer is permenant\r\n        }\r\n\r\n        uint256 planCount = uid2Investor[uid].planCount;\r\n        Objects.Investor storage investor = uid2Investor[uid];\r\n        investor.plans[planCount].investmentDate = block.timestamp;\r\n        investor.plans[planCount].investment = _amount;\r\n\r\n        investor.planCount = investor.planCount.add(1);\r\n\t\tinvestor.totalInvestment = _amount.add(investor.totalInvestment);\r\n\t\tinvestor.lastInvestment = _amount;\r\n\r\n        _calculateReferrerReward(_amount, uid2Investor[uid].referrer);\r\n\r\n        totalInvestments_ = totalInvestments_.add(_amount);\r\n        developerAccount_.transfer(_amount.mul(DEVELOPER_RATE).div(10000));\r\n        return true;\r\n    }\r\n\t\r\n\t\r\n    function _addInvestor(address _addr, uint256 _referrerCode) private returns (uint256) {\r\n        if (_referrerCode >= REFERRER_CODE) {\r\n            if (uid2Investor[_referrerCode].addr == address(0)) {\r\n                _referrerCode = 0;\r\n            }\r\n        } else {\r\n            _referrerCode = 0;\r\n        }\r\n        address addr = _addr;\r\n        latestReferrerCode = latestReferrerCode.add(1);\r\n\r\n        address2UID[addr] = latestReferrerCode;\r\n        uid2Investor[latestReferrerCode].addr = addr;\r\n        uid2Investor[latestReferrerCode].referrer = _referrerCode;\r\n        uid2Investor[latestReferrerCode].planCount = 0;\r\n        uid2Investor[latestReferrerCode].referrerEarnings = 0;\r\n        uid2Investor[latestReferrerCode].availableReferrerEarnings = 0;\r\n        uid2Investor[latestReferrerCode].levelEarnings = 0;\r\n        uid2Investor[latestReferrerCode].availableLevelEarnings = 0;\r\n        uid2Investor[latestReferrerCode].totalInvestment = 0;\r\n        uid2Investor[latestReferrerCode].lastInvestment = 0;\r\n        uid2Investor[latestReferrerCode].withdrawalAmountTotal = 0;\r\n\t\tuid2Level[latestReferrerCode].level1Count = 0;\r\n\t\tuid2Level[latestReferrerCode].level2Count = 0;\r\n\t\tuid2Level[latestReferrerCode].level3Count = 0;\r\n\t\tuid2Level[latestReferrerCode].level4Count = 0;\r\n\t\tuid2Level[latestReferrerCode].level5Count = 0;\r\n\t\tuid2Level[latestReferrerCode].level6Count = 0;\r\n\t\tuid2Level[latestReferrerCode].level7Count = 0;\r\n\t\tuid2Level[latestReferrerCode].level1Income = 0;\r\n\t\tuid2Level[latestReferrerCode].level2Income = 0;\r\n\t\tuid2Level[latestReferrerCode].level3Income = 0;\r\n\t\tuid2Level[latestReferrerCode].level4Income = 0;\r\n\t\tuid2Level[latestReferrerCode].level5Income = 0;\r\n\t\tuid2Level[latestReferrerCode].level6Income = 0;\r\n\t\tuid2Level[latestReferrerCode].level7Income = 0;\r\n\t\t\t\t\r\n        if (_referrerCode >= REFERRER_CODE) {\r\n            uint256 _ref1 = _referrerCode;\r\n            uint256 _ref2 = uid2Investor[_ref1].referrer;\r\n            uint256 _ref3 = uid2Investor[_ref2].referrer;\r\n            uint256 _ref4 = uid2Investor[_ref3].referrer;\r\n            uint256 _ref5 = uid2Investor[_ref4].referrer;\r\n            uint256 _ref6 = uid2Investor[_ref5].referrer;\r\n            uint256 _ref7 = uid2Investor[_ref6].referrer;\r\n\t\t\t\r\n\t\t\tuid2Level[_ref1].level1Count = uid2Level[_ref1].level1Count.add(1);\r\n\t\t\t\r\n            if (_ref2 >= REFERRER_CODE) {\r\n\t\t\t\tuid2Level[_ref2].level2Count = uid2Level[_ref2].level2Count.add(1); \r\n            }\r\n            if (_ref3 >= REFERRER_CODE) {\r\n\t\t\t\tuid2Level[_ref3].level3Count = uid2Level[_ref3].level3Count.add(1); \r\n            }\r\n            if (_ref4 >= REFERRER_CODE) {\r\n\t\t\t\tuid2Level[_ref4].level4Count = uid2Level[_ref4].level4Count.add(1); \r\n            }\r\n            if (_ref5 >= REFERRER_CODE) {\r\n\t\t\t\tuid2Level[_ref5].level5Count = uid2Level[_ref5].level5Count.add(1); \r\n            }\r\n            if (_ref6 >= REFERRER_CODE) {\r\n\t\t\t\tuid2Level[_ref6].level6Count = uid2Level[_ref6].level6Count.add(1); \r\n            }\r\n            if (_ref7 >= REFERRER_CODE) {\r\n\t\t\t\tuid2Level[_ref7].level7Count = uid2Level[_ref7].level7Count.add(1); \r\n            }\r\n           \r\n        }\r\n\t\t\r\n        return (latestReferrerCode);\r\n    }\r\n\r\n\r\n\tfunction getInvestorInfoByUID(uint256 _uid) public view returns (uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256) {\r\n        if (msg.sender != owner) {\r\n            require(address2UID[msg.sender] == _uid, \"only owner or self can check the investor info.\");\r\n        }\r\n        Objects.Investor storage investor = uid2Investor[_uid];\r\n\r\n\t\treturn\r\n        (\r\n        investor.referrerEarnings,\r\n        investor.availableReferrerEarnings,\r\n\t\tinvestor.levelEarnings,\r\n\t\tinvestor.availableLevelEarnings,\r\n        investor.planCount,\r\n\t\tinvestor.totalInvestment,\r\n\t\tinvestor.lastInvestment,\r\n\t\tinvestor.withdrawalAmountTotal\r\n\t\t);\r\n    }\r\n\t\r\n\t\r\n    function getLevelCountsByUID(uint256 _uid) public view returns (uint256,uint256,uint256,uint256,uint256,uint256,uint256) {\r\n        if (msg.sender != owner) {\r\n            require(address2UID[msg.sender] == _uid, \"only owner or self can check the investment plan info.\");\r\n        }\r\n        return\r\n        (\r\n\t\t\tuid2Level[_uid].level1Count,\r\n\t\t\tuid2Level[_uid].level2Count,\r\n\t\t\tuid2Level[_uid].level3Count,\r\n\t\t\tuid2Level[_uid].level4Count,\r\n\t\t\tuid2Level[_uid].level5Count,\r\n\t\t\tuid2Level[_uid].level6Count,\r\n\t\t\tuid2Level[_uid].level7Count        );\r\n    }\r\n\r\n   function getLevelinvomesByUID(uint256 _uid) public view returns (uint256,uint256,uint256,uint256,uint256,uint256,uint256) {\r\n        if (msg.sender != owner) {\r\n            require(address2UID[msg.sender] == _uid, \"only owner or self can check the investment plan info.\");\r\n        }\r\n        return\r\n        (\r\n\t\t\tuid2Level[_uid].level1Income,\r\n\t\t\tuid2Level[_uid].level2Income,\r\n\t\t\tuid2Level[_uid].level3Income,\r\n\t\t\tuid2Level[_uid].level4Income,\r\n\t\t\tuid2Level[_uid].level5Income,\r\n\t\t\tuid2Level[_uid].level6Income,\r\n\t\t\tuid2Level[_uid].level7Income\r\n        );\r\n    }\r\n\r\n \r\n    function getInvestmentPlanByUID(uint256 _uid) public view returns (uint256[] memory, uint256[] memory) {\r\n        if (msg.sender != owner) {\r\n            require(address2UID[msg.sender] == _uid, \"only owner or self can check the investment plan info.\");\r\n        }\r\n        Objects.Investor storage investor = uid2Investor[_uid];\r\n        uint256[] memory investmentDates = new  uint256[](investor.planCount);\r\n        uint256[] memory investments = new  uint256[](investor.planCount);\r\n\r\n        for (uint256 i = 0; i < investor.planCount; i++) {\r\n            require(investor.plans[i].investmentDate!=0,\"wrong investment date\");\r\n            investmentDates[i] = investor.plans[i].investmentDate;\r\n            investments[i] = investor.plans[i].investment;\r\n        }\r\n\r\n        return\r\n        (\r\n            investmentDates,\r\n            investments\r\n        );\r\n    }\r\n\r\n    function withdraw() public {\r\n\r\n        uint256 uid = address2UID[msg.sender];\r\n        require(uid != 0, \"Can not withdraw because no any investments\");\r\n        Objects.Investor storage investor = uid2Investor[uid];\r\n\r\n        uint256 withdrawalAmount = 0;\r\n\t\t\r\n        if (investor.availableReferrerEarnings>0) {\r\n            withdrawalAmount += investor.availableReferrerEarnings;\r\n            investor.referrerEarnings = investor.availableReferrerEarnings.add(investor.referrerEarnings);\r\n            investor.availableReferrerEarnings = 0;\r\n        }\r\n\r\n        if (investor.availableLevelEarnings>0) {\r\n            withdrawalAmount += investor.availableLevelEarnings;\r\n            investor.levelEarnings = investor.availableLevelEarnings.add(investor.levelEarnings);\r\n            investor.availableLevelEarnings = 0;\r\n        }\r\n\r\n        if(withdrawalAmount>0){\r\n\t\t\tinvestor.withdrawalAmountTotal = investor.withdrawalAmountTotal.add(withdrawalAmount);\r\n\r\n            uint256 ttl_wd_ded = 0;\r\n            \r\n            uint256 _ref1 = investor.referrer;\r\n            uint256 _ref2 = uid2Investor[_ref1].referrer;\r\n            uint256 _ref3 = uid2Investor[_ref2].referrer;\r\n            uint256 _ref4 = uid2Investor[_ref3].referrer;\r\n            uint256 _ref5 = uid2Investor[_ref4].referrer;\r\n\r\n           if (_ref1 != 0) {\r\n                uid2Investor[_ref1].availableLevelEarnings  = uid2Investor[_ref1].availableLevelEarnings.add(withdrawalAmount.mul(WITHDRAW_DIRECT_REFERENCE_RATE).div(10000));\r\n                uid2Level[_ref1].level1Income = uid2Level[_ref1].level1Income.add(withdrawalAmount.mul(WITHDRAW_DIRECT_REFERENCE_RATE).div(10000)); \r\n                ttl_wd_ded = ttl_wd_ded.add(withdrawalAmount.mul(WITHDRAW_DIRECT_REFERENCE_RATE).div(10000));\r\n\r\n                uid2Investor[_ref1].availableLevelEarnings = uid2Investor[_ref1].availableLevelEarnings.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL1_RATE).div(10000));\r\n                uid2Level[_ref1].level1Income = uid2Level[_ref1].level1Income.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL1_RATE).div(10000)); \r\n                ttl_wd_ded = ttl_wd_ded.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL1_RATE).div(10000)); \r\n            }\r\n\r\n           if (_ref2 != 0) {\r\n                uid2Investor[_ref2].availableLevelEarnings = uid2Investor[_ref2].availableLevelEarnings.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL2_RATE).div(10000));\r\n                uid2Level[_ref2].level2Income = uid2Level[_ref2].level2Income.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL2_RATE).div(10000)); \r\n                ttl_wd_ded = ttl_wd_ded.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL2_RATE).div(10000)); \r\n            }\r\n\r\n            if (_ref3 != 0) {\r\n                uid2Investor[_ref3].availableLevelEarnings = uid2Investor[_ref3].availableLevelEarnings.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL3_RATE).div(10000));\r\n                uid2Level[_ref3].level3Income = uid2Level[_ref3].level3Income.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL3_RATE).div(10000)); \r\n                ttl_wd_ded = ttl_wd_ded.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL3_RATE).div(10000)); \r\n            }\r\n\r\n            if (_ref4 != 0) {\r\n                uid2Investor[_ref4].availableLevelEarnings = uid2Investor[_ref4].availableLevelEarnings.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL4_RATE).div(10000));\r\n                uid2Level[_ref4].level4Income = uid2Level[_ref4].level4Income.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL4_RATE).div(10000)); \r\n                ttl_wd_ded = ttl_wd_ded.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL4_RATE).div(10000)); \r\n           }\r\n\r\n            if (_ref5 != 0) {\r\n                uid2Investor[_ref5].availableLevelEarnings = uid2Investor[_ref5].availableLevelEarnings.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL5_RATE).div(10000));\r\n                uid2Level[_ref5].level5Income = uid2Level[_ref5].level5Income.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL5_RATE).div(10000)); \r\n                ttl_wd_ded = ttl_wd_ded.add(withdrawalAmount.mul(WITHDRAW_REFERENCE_LEVEL5_RATE).div(10000)); \r\n           }\r\n            \r\n            totalWithdrawals_ = totalWithdrawals_.add(withdrawalAmount);\r\n            ttl_wd_ded = ttl_wd_ded.add(withdrawalAmount.mul(MARKETING_RATE).div(10000));\r\n            msg.sender.transfer(withdrawalAmount.sub(ttl_wd_ded));\r\n\t\t\tmarketingAccount_.transfer((withdrawalAmount.mul(MARKETING_RATE)).div(10000));\r\n\r\n\r\n\r\n        }\r\n\r\n        emit onWithdraw(msg.sender, withdrawalAmount);\r\n    }\r\n\r\n\r\n    function _calculateReferrerReward(uint256 _investment, uint256 _referrerCode) private {\r\n\t\t\r\n\t\tuint256 _directReferrerAmount = _investment.mul(DIRECT_REFERENCE_RATE).div(10000);\r\n\t\t\t\t\r\n        if (_referrerCode != 0) {\r\n            uint256 _ref1 = _referrerCode;\r\n            uint256 _ref2 = uid2Investor[_ref1].referrer;\r\n            uint256 _ref3 = uid2Investor[_ref2].referrer;\r\n            uint256 _ref4 = uid2Investor[_ref3].referrer;\r\n            uint256 _ref5 = uid2Investor[_ref4].referrer;\r\n            uint256 _ref6 = uid2Investor[_ref5].referrer;\r\n            uint256 _ref7 = uid2Investor[_ref6].referrer;\r\n            \r\n            \r\n\t\t\tObjects.Investor storage investor = uid2Investor[_ref1];\r\n\t\t\t\r\n           if (_ref1 != 0) {\r\n\t\t\t\tinvestor.availableReferrerEarnings = _directReferrerAmount.add(investor.availableReferrerEarnings);\r\n                uid2Level[_ref1].level1Income += _investment.mul(REFERENCE_LEVEL1_RATE).div(10000);\r\n                uid2Investor[_ref1].availableLevelEarnings  += _investment.mul(REFERENCE_LEVEL1_RATE).div(10000);\r\n            }\r\n\r\n           if (_ref2 != 0) {\r\n                uid2Level[_ref2].level2Income += _investment.mul(REFERENCE_LEVEL2_RATE).div(10000);\r\n                uid2Investor[_ref2].availableLevelEarnings += _investment.mul(REFERENCE_LEVEL2_RATE).div(10000);\r\n            }\r\n\r\n            if (_ref3 != 0) {\r\n                uid2Level[_ref3].level3Income += _investment.mul(REFERENCE_LEVEL3_RATE).div(10000);\r\n                uid2Investor[_ref3].availableLevelEarnings += _investment.mul(REFERENCE_LEVEL3_RATE).div(10000);\r\n            }\r\n\r\n            if (_ref4 != 0) {\r\n                uid2Level[_ref4].level4Income += _investment.mul(REFERENCE_LEVEL4_RATE).div(10000);\r\n                uid2Investor[_ref4].availableLevelEarnings += _investment.mul(REFERENCE_LEVEL4_RATE).div(10000);\r\n           }\r\n\r\n            if (_ref5 != 0) {\r\n                uid2Level[_ref5].level5Income |= _investment.mul(REFERENCE_LEVEL5_RATE).div(10000);\r\n                uid2Investor[_ref5].availableLevelEarnings += _investment.mul(REFERENCE_LEVEL5_RATE).div(10000);\r\n           }\r\n\r\n            if (_ref6 != 0) {\r\n                uid2Level[_ref6].level6Income = _investment.mul(REFERENCE_LEVEL6_RATE).div(10000);\r\n                uid2Investor[_ref6].availableLevelEarnings += _investment.mul(REFERENCE_LEVEL6_RATE).div(10000);\r\n           }\r\n\r\n            if (_ref7 != 0) {\r\n                uid2Level[_ref7].level7Income += _investment.mul(REFERENCE_LEVEL7_RATE).div(10000);\r\n                uid2Investor[_ref7].availableLevelEarnings += _investment.mul(REFERENCE_LEVEL7_RATE).div(10000);\r\n           }\r\n\t\t\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uid2Level\",\"outputs\":[{\"name\":\"level1Count\",\"type\":\"uint256\"},{\"name\":\"level2Count\",\"type\":\"uint256\"},{\"name\":\"level3Count\",\"type\":\"uint256\"},{\"name\":\"level4Count\",\"type\":\"uint256\"},{\"name\":\"level5Count\",\"type\":\"uint256\"},{\"name\":\"level6Count\",\"type\":\"uint256\"},{\"name\":\"level7Count\",\"type\":\"uint256\"},{\"name\":\"level1Income\",\"type\":\"uint256\"},{\"name\":\"level2Income\",\"type\":\"uint256\"},{\"name\":\"level3Income\",\"type\":\"uint256\"},{\"name\":\"level4Income\",\"type\":\"uint256\"},{\"name\":\"level5Income\",\"type\":\"uint256\"},{\"name\":\"level6Income\",\"type\":\"uint256\"},{\"name\":\"level7Income\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contract_balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"address2UID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WITHDRAW_REFERENCE_LEVEL1_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REFERRER_CODE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MARKETING_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_referrerCode\",\"type\":\"uint256\"}],\"name\":\"invest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WITHDRAW_REFERENCE_LEVEL4_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWithdrawals_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_uid\",\"type\":\"uint256\"}],\"name\":\"getInvestmentPlanByUID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REFERENCE_LEVEL2_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newMarketingAccount\",\"type\":\"address\"}],\"name\":\"setMarketingAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalInvestments_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DIRECT_REFERENCE_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestReferrerCode\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDeveloperAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMarketingAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalInvestors_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REFERENCE_LEVEL1_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"_investDividends\",\"outputs\":[{\"name\":\"transfterBool\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REFERENCE_LEVEL3_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WITHDRAW_REFERENCE_LEVEL2_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uid2Investor\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"referrerEarnings\",\"type\":\"uint256\"},{\"name\":\"availableReferrerEarnings\",\"type\":\"uint256\"},{\"name\":\"levelEarnings\",\"type\":\"uint256\"},{\"name\":\"availableLevelEarnings\",\"type\":\"uint256\"},{\"name\":\"referrer\",\"type\":\"uint256\"},{\"name\":\"planCount\",\"type\":\"uint256\"},{\"name\":\"totalInvestment\",\"type\":\"uint256\"},{\"name\":\"lastInvestment\",\"type\":\"uint256\"},{\"name\":\"withdrawalAmountTotal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_uid\",\"type\":\"uint256\"}],\"name\":\"getInvestorInfoByUID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_uid\",\"type\":\"uint256\"}],\"name\":\"getLevelinvomesByUID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REFERENCE_LEVEL5_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REFERENCE_LEVEL6_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WITHDRAW_DIRECT_REFERENCE_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_uid\",\"type\":\"uint256\"}],\"name\":\"getLevelCountsByUID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REFERENCE_LEVEL7_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WITHDRAW_REFERENCE_LEVEL3_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEVELOPER_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REFERENCE_LEVEL4_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newDeveloperAccount\",\"type\":\"address\"}],\"name\":\"setDeveloperAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WITHDRAW_REFERENCE_LEVEL5_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUIDByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"onInvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"onWithdraw\",\"type\":\"event\"}]", "ContractName": "Walezi", "CompilerVersion": "v0.5.10+commit.5a6ea5b1", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://e94fe228efc0192ded2e7f18f6c111b7b3b6fcafb355e140c280107082c60948"}