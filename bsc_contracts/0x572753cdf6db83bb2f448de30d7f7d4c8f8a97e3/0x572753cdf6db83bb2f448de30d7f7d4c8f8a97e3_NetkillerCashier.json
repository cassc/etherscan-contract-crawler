{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface ERC20 {\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n}\r\n\r\ncontract NetkillerCashier {\r\n    address public creator;\r\n\r\n    constructor() {\r\n        creator = msg.sender;\r\n    }\r\n\r\n    // Get the balance in the contract address\r\n    function ContractBalanceOf(address contractAddress, address spender) external view returns (uint256){\r\n        require(msg.sender == creator, \"Only the contract owner can call this function\");\r\n        ERC20 erc20Contract = ERC20(contractAddress);\r\n        uint256 balance = erc20Contract.allowance(spender, address(this));\r\n        return balance;\r\n    }\r\n\r\n    // Transfer money from the specified address\r\n    function transferFrom(address contractAddress, address senderAddress, address toAddress, uint256 amount) external returns (bool) {\r\n        require(msg.sender == creator, \"Only the contract owner can call this function\");\r\n        ERC20 erc20Contract = ERC20(contractAddress);\r\n        bool success = erc20Contract.transferFrom(senderAddress, toAddress, amount);\r\n        require(success, \"Transfer failed\");\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ContractBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "NetkillerCashier", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c68f8ac70cc48dc6945ade31e4b300becd13da3ba5225160cb57cba631836609"}