{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2021-11-02\r\n*/\r\n\r\n/**\r\n  \r\n   #StarBaseCoin\r\n\r\n   1% of the cost is automatically added to hit the black hole for burn\r\n   1% fee auto distribute to all holders\r\n   1% fee auto Marketing Wallet\r\n   40% Supply is burned at start.\r\n\r\n   mission\uff1aMaking Humans a Multiplanetary Species!!!\r\n   vision\uff1aHelp SpaceX get more people support!!!\r\n   We can certainly become the most powerful cryptocurrency in the universe.\r\n   \r\n */\r\n\r\n /**\r\n\r\nStarShip To the Mars!\r\n\r\n                               ................'.''''''''''''''''''`````````^^^^^^^^^^^^\"^\"\"^\"\"\"\"\"^^^^\"\"^\"\"\"\",\"\"\"\"\"\"\"\"\"\",,,,,,,,::::::::::::;;;;;:::::::;;;;II;IIlIIllllllllllllllllIIIllllllllllllll!!!!!!!!!!lllllll!l!\r\n                                ................''..'''''''''''''''````````^^^^^^^^^^\"\"\"^^\"^\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\",,,,,,,:::,:::::::::;::;:::;;;::;:;;;;IIlIlllllllllllIIIlIIIIllIllllllllllll!!!!!!!!l!ll!l!!l!!!\r\n                                 ................'.'.''''''''''''''````````^`^^^^^^^^^^^\"\"\"^\"\"^\"^\"\"\"\"\"\"\"\"\"^````^\"\"\"\"\"\"\"\"\",\",,,,::,,,::::::::::::::::::::;:;;;;IIlllll!lllIlIIIIIIIIlIlllll!llll!l!!!!!!!!!!!!!!ii!!!!!!!\r\n                                ...................''''''''''''''''`'`````^^^^^^^^\"\"\"\"\"\"\"\"\"\"\"\"\"\"^^\"^\"\"\"^^^I_{)]!^`\"\"\"\",\",,,,,,,,::,::::::::::::::::::::::;:;;;;Illlll!lllIIIIIIIIlIlllllll!!ll!!!l!!!lllllll!!!!!ii!!!ii\r\n                                  .............''.''''''''''''''''`'```````^^^^^\"^^^\"\"\"\"\"\"\"\"\"\"\"\"\"^^\"\"^^`l\\XQmpdqz+^^\"\"\"\"\"\",:,,,,,,:,:::::::::::::::::::::::::;;;IIllllllIIlIIIllIIlllllll!!ii!!!!ll!lllllllIllll!l!!!!!!\r\n                                   ............'..''.'''''''''''''''`'```^^^^^^^^^\"^^\"\"\"\"\"\"\"\"\"\"\"^\"\"\"^`I)uccLmqwOwqc~^\"\"\",,,,,,,,,,,,,,,::::::::::::::::::::::::;;IIlIlIIIIIIIIIIlIllllll!!!i!!!!llllllllllll!lll!!!l!!!!\r\n                                   ...............'''''''''''''''''``````^^^^^^^^^^^^^^^\"\"\"^\"^^\"\"\"^`;}nn|)jLqbqUYYCJ|I^,,:::::::::::::,:::::::::::::::;;::::::::;;;;II;;;;IIIIIIlllll!!!!!iiiii!!lllllll!lll!!!!ii!!!!!!\r\n                                   ..............''''''''''''''''`'`''```^^^^^^^^^^^^^^^^^^^^^^^^^,-jcYt|fcYYCQQCCCJJv]:,::::;;;;;;:::::,::::::::::;:;;;;;:;;:::::;;;;;;;IIIIII;Illll!!!!!ii>ii!!!!!!ii!!!l!!!i!!!iiii!!\r\n                                  ..............''''''''''''''''``''``````^^^^^^^^^^^^^^^^^^^^^^^>(xtf|))fuzzYJQLCCJUUYj~,::;;;;;;;;;;::,:::::::::::;;:;::::::::::;;;;;;;IIIII;IIlllll!!!!!!i!!!!!ii!>ii!!!!!!!!i!iiii>i\r\n                                 ..............'''''''''''''''`'``''````````^^^^^^^^^^^^^^^^^^':}\\j[]?][{txvvXXJ0QCCJUUYv{;:;;;;::::::::::::::::::::::::::::::::::;;:;;;;;IIIl;IIIIIIIllllllll!!!!i>iii!!!!!!!!!!!!i>>>>\r\n                              ..................''''''''''''''''``````````````````^^^^^^^`^^^`l}(j--?]}])fvccXcXJQQLCJUJYz/!,::::,:::,,,:::::::::::::::::::::::::;;;::;;;;IIIII;IIIlIIIlllllll!iiiii>i!!!i!!!!!!iiiii>>i\r\n                             ..................''''''''''''''''``````````````````````^```````-1/nu-??]{}\\ncccXcXULQLCUzUJYXx_\",,,,,,:,,:::;;::::::::::::::;;;;::;;;;:;;;;;;IIIIIIIllllllll!!!i>ii>>>iii!ii!!!!!!!!iiii>i\r\n                            .................'''''''''''''``''`'''``````````````````'''^^^^^<(rrrux[{)(/jxuzXUYYJCQCCUXXJUUYu{:\",,:,::,,:;;::::::::;;;;;;;;;;;;;;;;;;;;;;;;IIIIIlIIIl!!!!!!!!i!!iiiiiiiii>iiiiiii!iiiii>\r\n                         ...................'''''''''''''````````''```````````''.'^l_\\nUCLQL))fxnXu]))fjffncXYXYYJCJCUccJJJJYv\\I\":::::::::::::::::;;;;;;;;;;;;I;II;I;;;;;IIlllllIIIllll!iii>iii!i>>>>>>>i>>>>i>iiiiiiiii\r\n              . .... .... ...............'..'''''''''''''`````````````````'''`:>[\\jrrrjxnwYqZLUccY)[(|fjjxvcXYXXYUCCCCCvYJJCJcvf!\"::;:;::::::::::;;;;;;II;II;IIIIIIII;;;IIIllllllllllll!iii>iii>>>>>>>>>>i>>>>>>>>>>>>>>\r\n.        ... .. ........................'''''''''''''''''````````````'''`,l_)/jft//tfjf|UvupmO0QLLJf1\\ffrxuvXXXXXYUUCJYnvJJJCYvcxi\":::;;:::;::::;;:;:;;;;IIIIIIIIIII;IIIIlllllllllllllll!!!ii>>>>>>>iii!iii>>>>>>>>>>><<\r\n..     .................................''''''''''''''''''``````''''\"I<}\\ftj///tfftfjfjxJrpwZOOZmZpn)/ffjjxuzccYYYYYUCXcxUJJCJYccx<\";;;;:;;;;;;;;;;;;;;;;;;;;IIIIIIIIllIll!!!!!!ii!lll!!!ii!iiiii>iiii>i>><>>><<<><<><><\r\n...   ...............................''''''''''''''''`''```''.'`,!?1\\fjfjfjj\\//tfrxxr/cOxqqwmZQCJXx)\\tfttfrnvunczYYYYUcnfvCJJJJYccx>,;;;;;;IIIIIIIIIII;;;;;;;I;;IIIlIIlll!!!!!!!>>i!!!i!!!!i>ii!!!i!i>>>><<<<<<<<<<<<<<<\r\n...   ..............................'''''''''''''''`'''``'`\"l~])\\/ttffffttj//jjjfffjf\\CcmqZZ([){11(|/jjjjjrnuunnucYYYnzrjfYJJJJJXzcni,;;;;Illl!lllllllllIIIllllllIllll!!!!!!!!ii>>i>iiiii!!>i!!!llll!>><<<<<><<<<<<<~~<<\r\n................................'..'.'''''''''`''```'```'';+_t\\//\\\\\\\\\\//trtftfjfttff(uQ0qCXX!]))(\\///ffffjxnvvcvvzXYzucjrtcCJCJJJXXcxl:;;;;lll!!l!!ll!ll!lllll!!!!!!!!!!!!!iiiiii>>>>>><>ii>><>i!l!!!!><<<<<><<<<<<<<~~<\r\n...............................'''''''''''''''''`````````.^\">(\\|\\||((|\\|f//fjt/fjft(\\ZQmLXJn<)(\\/fffxnnrjjxnxuvczYJCCUXnxfrJCCJCJUXXzj;;lIIIll!!!!!!!!!!!!lll!!!!!!iiiiiiii>ii>>>>>>><<<<<<<<<<<>iii>>>>>><<<<<<<<~~<<~~\r\n..........................'....''''''''''''''''``````````.)/((()(|(()()\\/\\/ft/\\\\/t/(QQZOJU0{]||\\tjjrjjft\\|fjfjrrxcYJCXcvrncC0QQLCJYXXcf~;Illl!!!!!!!!!l!!!!!!!!i!!!iii>i>>>>>i>>>>>><><<<<<<<<<<<<<<<<<>i><<~<<~<<~~~~~~\r\n......................''...'''.'''''''''''''''```````````.frtf/||\\///t/f||)(|\\\\\\/t|YLCZQL01-][}1(///tt//\\/frjnxuvcYCLJunjncJLQ00Q0LUYYnXf>I!ii!!iii!!!!!iiiiii!ii!i!!i!i>>>>>><>>>>><<<<<<<<~~~~~<<<<<>><>><~~~~<~~~~~~~\r\n............'...'.'..'''.'''''''''''''''''''''```````````.nt/ftttt//\\|f|/\\\\\\\\\\|(|(xmXZOCQQ~]])1)(jjjjrj/|txxrnuvczJQCLcnrucUCQ00QCQLLCXxJJ(i!ii!!ii!!!ii>>>iii>>>i>>>iii>>>><<<<<<<<<<<<<<<<<~~~~~<<<<<<~<~<~~~<<<<~~<~<\r\n............''...''..'''''''''''''''''''''''''''`'``'```''z////\\\\\\\\\\(t(}]?_]{|\\\\/)LLJO0L0n>]?}}1/jjff/j\\/rxuurrnvXJQQQCUvvXJQ0000LQCJJJYuC0Y}l!i!!!!!!!iii>iiiii>>>>>>>>>>><>><<<<<<<<<<<<<<<~~~~~~~~~~~~~~~~<<~<<<~~<<~\r\n.....'..''.''.'''''''''''''''''''''''''''''''''''''''''''^U||\\/////||({[~ii<?)|)}fJXL00Q0?i_-]})/fffjxxttnnnuuvuuXC0O0LLUXYU0OO0OQQ0LJYYYYCLQu_;llll!!!i!iiiiiiii>>>>><<<<<><<<<<<<<<<<<<~<~~~+~~~+~<<<~~~~~~~~~<<~~~~<<\r\n.....''''''''''''''''''''''''''''''''''''''''''''''''''`':Qtf/\\\\\\\\//j(({]?-]1||{}u{(XCQ0L:l!?]{1\\frxxxnnxxunnuuvzXJC0000CUJCL0OOOQQQCCUYXzLCCQQj>I!!!ii!iiiiiiiiii>>ii>>><<<><<<<<<<<<<<<~~~+~~~~~<~~~~~~~~~~~<~~~~<<~~<\r\n....'''''''''''''''''''''''''''''''''''''''''''''''''''''^])jnxuurfr|\\\\\\\\\\||(1{?f\\?\\YCQZ\\'li__[1fxnnrrrxvvvzzzzUUXJC0Q0OLJC0Q00000QLQLJUYzcCJUYCX)!liiiiiiii!iiiii>ii>i>>>><<<<<<<<~<<<<<~<~~~~~~~~~~+~~~~<<<~~~~<~~<~<~\r\n...'''''''''''''''''''''''''''''''''''''''''''''''''''''''..'^:i?(juzccvnjj/|(}/X)XCQQ0Zf?;I-_]|xxxnffrruuvzzYXJJUCLQ000LJQO000000QLLCCJUUcCCCCCLCz[ll!!!!!!iiiiiii!!ii>>>><<~<<<<<<~<<~~~~~~~~~~~~~~~~~~~<~~~~~<~<<<<<<\r\n...'''''''''''''''''''''''''''''''''''''`'''''''''''''''``'''''.. .'\"I<}(jXO0QJZmYwOmZwqpdX?-?{/rrxu/tjjxxnccXJJCCQLQQ0O0COZO0QQQQQQLCJUUYXUUUJJQCUCn+;Illl!!!iiii!ii>>>>>><<~<<<<<<<<~<<~~~~~<~~<~~~~~~~~~~~~<~~<~~<<<<\r\n''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''``''....`jkbbdpdppddpqqqpwr_}trrruttfjnuvcXJCCCJCLQ000OQLOZQQLQLQQQCUYYYYYYczXU0CLCCf>;llll!!!iii>>><>>>>><<<<~~~~<~~~<<~~~<<<~~<~~~<~~~~~~~<~~<~<<<<<\r\n''''''''''''''''''''''''''''''''''''''''``''''```''''''''`''````````````'''.{dbbpqwwqqqqqqwwqv_+-(())|rnnuucXCQQQQOOLLCL00L0QQQQQLQQLCUYYYYzQzXzzJLLLCQJ|!l!!ii!i>i>><<><>>><<<~~~~~<<~~<<<<~<~<~<<~~~<~~<~~~~<~<<<<<<><\r\n'''''''''''''''''''''`'```'''````''''```'```````''''```'``''````````````'``';f|/fxzCQOOZmmmZZ0t_<[}1}-(xxnuvXJQQQCQ0CJJCLQJJUYYUJCQQCCJYYUUcLUzzXYQJCLJJ0C1!i>>>>>>><<<<<<<<<<<~~~~<<<<<<<<>><<<>><<<<<<~<~<<~<<<<<<<<><\r\n'''''''''''''''''''`''''```'`'``````'````````'``'```'```````````^`^````````.{)]{{[[[(rUQ0OZZZZZ0z\\-[][\\jxxnvcYCCCJCQCYUJLQJJUYXXzXJJYUJUYUYXYCzXXzUJzYJJL0mc?><<><<><<<<<<<<~<<~<<~<<<<~~<<>>>>>>iii>><><<~<<<<<<<<<>>>>\r\n''''''''''''''''''``''''`'`''`'``'`````````````````````'````````^`^^````^``'f)(()1}1{?[cQQ000O0O0Qz\\)\\tfjjxnvXUJYYJLJXYUJCUYYzXzzXJUXXXYUJUXc0YUUUXJvcXUCCCQJ>~<<<>i><<<<<<<~<~~~<<<<<<~<<<<<>iii!!!!i>i>>><><<<<<<<>>>>\r\n''''''''''`''`''`''''''`''`'''``````'```````````````'````````^^^^^^^^^```^`:n(|\\))(L)[{zLCLQQ000QZQf|/ffrrxrrvXYzXYCJXXUYJYXXcczczYUYzXXXXYYzCLCCCCJJzXXXXXXJ~~<<<>>>><<<<<<<<<~<<~<<~~~~~<<<<>i!!!!!!!!ii><><<<<<<<<<>!\r\n''''''''''''''''`'`'````````'```'`````'```````````````````````^^^^`^``^^^^'+urt/(cu/}{)XCJCLQ00OZm0j\\tfjjjj/tnccvczYXXXUJJUYYzccvvYYXzXXXXYvcQCJJJJJQJUUUYYXC_<<<<><<<<<<<<<<~~~~~~~~~~~~~<~<<<>>!!!iiii!!i><<<<<<<<>>>!\r\n''''`'``''```````'````````````'```````````````````````````````````^^``^^^^'{Yujffxx1))(ULCCCCLYUcc/|//ffrxxnxnuvnnnvnucXXUzzzczzzcYYXzXXXXXcvcCvYUXXYLUUYXXzC]><>><<<~~<~<<~<~~<~~<~~<~~~<~<~~<<<>>i!!!!!ii><<><<>>>><>>\r\n'``'````````````````````^`^```'`````'``````````````````````^``````^```^^^^'\\XXXjzYY((((xXnvxj/(\\/1(/ttjrxnnnvvccxxjnxfuccYzczvuvvcXYXXXYzYYczxqYXXccXJJYUUYXC{i<>><<<<<<~~<~~<<<~<<~~<<<~~~~~~<<<<<>ii!l!i>>>>>>>i>><<<<\r\n''```````````^``````^^````^```````````````````````````````````````````^^^^'rUXYxXzft\\t)]/fxrjt\\/t(|/tfrxnnvvcvXXvuvYcrucvYzccvuvuvXYzzzXYUUzzxq0pOOw0CQUJJJJ0/!<<<<<<<<<~<~~~<~~~<~~<~~~~<~~~~~<~<~<<>i!!!!!!!i>iii>>>><\r\n`'`'`````````````^``^^^``^^^`````````````^^``````````````````^````````^^^^'vYUvvLYYftf1{jxuxjt\\/t(\\/fjrxnnvvcvzXvvuUXuvzcYzccuuuuvzXzzXzzYUYXnYl+-{\\jvczmZmZZni<<<<<<<<~~~~~~~~~~~~~~+~~<<><<<~~~<<~<>i!!!l!!!i!i>>><<<<\r\n`'```````````````^^^^^^^^^``^^^``````^`^^^``````````````````````^``````^^^'zcCzcYcvrff}{xrvxrf\\/t\\/fxxnuvvccXXYYcczUJczUXXXzzvnnnucYzXXzzYYXYcLl~~~~<><~_])/r1i<><<<<~~~~~~~~~<~~~+~~~~~<>i!i><~<<~<<>>ii!!!!!i!!i><<<<<\r\n''````````````^```^^^`^^``^^`^^^^^`^^^^^^^``````'`````````^^^````^````^^^^`LYCLzzYYzuv?1xnvuxf///(/trjxxnuuvcvXzvvvJXvzXzYzzzcvuvucXzXXXzUYYXvQ!+<~~<<<<>>!!!!i>>~~~~~~+++~~~~~<~~+~~<<<>i!!!i><<<<<<>>><>>>>>>>>>>><~<~\r\n''''''''`````'`````^`^`^^^^^^^^^^^^^^^^^^^^^^^``````````^^```````^^^^^^\"^\"^QY0CXXQLJJn)/nucurt||\\(/txxxnvvvczuzcuvuJJvXYcXXccuxnuccvzYYzzYUYYvX><<~~<>i!lII!!>>>><<<<~~<~<~~<<~~~~~<<<<>>i!!i><<<<<<<<<<<<<~<~<~~<~~~~++\r\n'''''''''`''```````````^^^^^`^^^^^^^^^^^`^^^^^^^^^^^^````^^``^^^^^^^^^^^^\"\"QYOXCXCUCUL(/vucnxt\\||(/fxxxnvvcczvzzvvuJJvXYvXXccuxxuucYXXYzzYUYXzc>><>i!lIlIll!!i>>><><<<<<~<<~~~<<~<<<~<<<>iii<<<~<~~~<<<<<<<~+~~+++++++++\r\n''''''''''''``````````````````^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^`^^^^^^^^^\"\"^;0XLLqC0JLJQ{tcucnxt|||(/jxxxnvvcczuccvuvJJvXYvzXccvnxuuvYXYYvvcYUXXv;!!!lllIIIll!!ii>><<<<<<<<~<~<<<<<<<<<<<<<><><~<~+~~~<<<<~<~~~++++++++__+\r\n''''''''''''``'````'````````^^^`^^^^^^^^^^^^^\"^^\"^^^^^^^^^^^^^^^^^^^^^\"^\"\";pUOQZ0QCLYX}fXuznrt\\((\\/jnunuzzXzXcczvuuYCzXYczXcvvxxuuvXXYUXzUJJYYX;lIII;;IIl!!!!!i>>><<<~<~<<<<<<<<<<~<<<<~<~~~+++++++~~~~+++++++++~+++++++\r\n''''''''''''``'`````````^``^``^^^^^^^^^^^^\"\"^^\"\"\"\"\"\"\"\"\"^\"\"\"^\"^^^^^\"^^\"\"\"\"\"lpY0CwwOYcnx}\\zuvvrf//\\\\frnunvvccczzXzvvzUUzYYYYXzcvurnunYXYJXXUJJYYJII;IIIIIl!iii!iiii>>>><<>>>>>>>>i>i>><<<<~~+_+++++++_+++____++__+__+++__+\r\n''''''`'''''''''`````````````^^^^^^^^^^^\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"^^\"\"\"\"\"^~dJ0LZwUXzuv{fzzcurt(()\\tjuunucczccvucnxnUJcXXvzzvvvnncccUUJJXXUJCXXC!;;Illlllllll!!!!!!!i!!i!!i>>>>>!!llllll!i><~~~<~++___+~+_+__+__+++++__++\r\n``''''`'''''`'```````````^`^`^^^^^^^^^^^\"^^\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"^_wLZLmZJYzvn1fXvvnj/(11\\fjuunnzczczvvcnjnUJcXXcXzvcvrjuvvUUJCYYUJCXYCiIll!iii!llIIlllllll!!!lllll!lllllIIIIIIIl!!!i>><~++++++__++++_+++++++++~\r\n````'``'``''''````````^^^``^`^^^^^^^^^\"^^^\"\"^\"\"\"\"\"\",\"\"\",,\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"^-qQwCZmCUzcn)/Xvnxj/(1)\\fruvnvcczzcvvvurnUCcXXvXzvcvxjuvuUUJCzYCCLYYC<!i><<<>>!lI;IIIIIIIIlllIII;I;IIIIIIIIIIIlllll!i>i>>~~~++++++++~~~~~~<<~<\r\n^````````````'``````^^^^^^^^^^^^^^^\"^\"^\"^\"\"\"\"\"\"\"\"\"\",\"\",\",,\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"`}q0OLZZJYzvn1\\Xvnrj/)11\\tjucuvcczccvuvnjnYJcXXvXXvvvxjuvvUUUCXzUCCUYC_i<<<>iiiilII;;;;;IIIIIII;;;;;;;;IIIIIIIIIlll!l!!!i>><<<<<<<<<<<<<<<<<<~<\r\n^^^^^^`^````'''````^^^^^^``^^^^^^^^\"\"^\"\"^^^\"\"\"\"\",\"\"\"\"\",\",,,\"\"\"\"\"\",\"\"\"\"\"\",`(bOOCQwQ00vx{|Xvxxf\\)1(/rxvcvczcXzcccccnvUJXUYcXXvcvrfnvuYUUCXXUCLYUC?!i!!l!!!!llI;;;;;;;;I;;;;;;;;;;;I;IIIllIIlllll!!!i>>>>i>ii>>><<<<<<<<<<~\r\n^\"^^^^^^^^````````^^``^^``^^`^^^^^^^\"^\"\"\"\"\"\"\"\"\"\"\"\"\",\"\",,,,\",,\"\"\"\"\"\"\"\"\",,,`\\wZOQqwQQUzr[|ucnxjt((ftjxvvuvvcccvvvvnjvUYzJYzXXXzYccvcvYUJCXXJCLUUL}IllIllll!lII;;;;;;;;;;;;;;;;;;;;IIIIlllllllll!l!!i!iiiiii>iiii>><<<<<<<<\r\n\"\"\"\"\"\"^^^^^`````^`^^`````^^`^^^^^^^^^^\"\"\"\"\"\"\"\"\"\"\"\"\",,,,,,,,,,,\"\"\"\"\"\"\"\",,,`rmZZ0Oqm00Jx1tzcxj//)()tjxcccnzYccvcucxtuYYcJYzzzuvccnzXXJCLCYYUCQUUL1:lIlIIIIII;;;;;;;;;;;;;;;;;;;;;;;;IlIlllllll!ll!l!!!!!!!!!!!!!!!i!iiii>>\r\n,\"\"\"\"\"\"\"\"^^^^^^^````^^^^^^^^^^^^^\"\"\"\"\"\"\"\"\"\"\"\"\"\",,,\"\",,,,,,:,:,,,,,\"\"\"\",,,`cmOmQQmZ00Lj}(vcft|(}}1fjrvvvuzXzvvcuvn/nUYcJYzzzucvxjuuuYUJCYJJC0JYL|\";;IIIIIII;;;;;:;:;;;;;;;;;;;;;;;I;IIllllllllllllllllllllllllllllllll!!!\r\n,\"\",\"\"\"\"\"\"\"^^^``````^^^^^\"^\"^^\"^\"\"\"\",\"\"\"\",\"\"\"\"\",,,,,,,,,,,,,:,:,,,,,,,,,:`XmZZQZwZ00Ot{)vuf/|)[})ffxvcvvzzzzuvuunfnYYcJYzcznczujuvvUUUJzYJQQUYLt\"I;II;;;I;;;;;;:::;;;;;;;;;;;;;;;;;;IlIlIllllIlIlllllllllllllIllllllllll\r\n,,,,,,,,\"\"\"\"^^^^^^^^^^^^\"\"^\"\"\"\"\"\"\"\"\"\"\"\"\"\",,\"\",\"\",\",,,,,::::,,:,,:,,,,,,,:^XLwZQpmZOYY/[)vvf\\()]})fjrucvucXzcvvuunfnYXzJXzcXnccvxnvvYYUJXYUCQJUJr,lIIIlIIII;;;;:;::;;;;;;;;;;;III;;;;;IIIIIllIlIIlllIIllllIIllllllllll!ll\r\n:::,,,,,,,,\"\"\"\"^\"^\"^^\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\",\",,,\",,,,,,:,::::,::::,::,,,,,,:^C0qZmp0Z0LXt?)nut\\)1}{\\jxuccvczXXzccvvnxcUYYCYYXYvzXcxnvvYYYUXYUCLUYCr,IIllllllI;;;;;;:;;;;;;;;I;I;;IIIIII;;IIIIIIIIIIIIIIIIIIIIIIIllllllllll!\r\n::::::,,:,,,\",\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\",\"\"\",,\"\",,,,,,,,::,,:::::::::::,,,,,,,,,:\"Z0wwZq0OOCX1?(xvf\\){[)\\xxnvvvuvXccvuuunfvXXXJzzXccXzcvcXcXYYUXYUCQUYJv\";IIlllllII;;;;;;;;;;;;I;;II;IIIIIIIIIIIIIIIIIIIIIIIIIIIIIllllllIlllllll\r\n;;;;:::::,,,,,,,\"\"\",,\"\"\",\"\"\"\"\",,,,,,,,,,,,,,,,,,:::::::::::::::,,,::,,:,:,wZmO0dmQOQz([\\un|1[}?|/nnnvvvnzXccvuuuufzXYXJzzXcuXzzcuzcYYJCYUUCQJUJz\"::;;;;II;;;;;;;;;;;;;;;IIIIIIIII;IIIIIIII;IIIIlIIIlIIlIIIIlIIllllllllll\r\n;;;;;;;:::::,:,:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,:::::::::::::::::::,::,::::;q0wOOO0QOLz\\_)xx(1}[?(/xxnuvvvcXzzvunuujcXYXUcXYcuXzXcvzvzXXQYUJQQUUQY\";;;;;;II;II;;;;;;;;;;IIIIIlllIIlIIIIIIIIIIIIlllllIlIIIIIIIIlllllllIIIll\r\n;;;;;;;;;;:;:;::::::::,,:::,:::,::::,::::::::::::::::::::::::::::,::,::::lmmp0OO00O0C1_(xn({]]-|/xxnvcvczYXYzzuvvnuXJYUXzUcuXXzzczvzXXLYYYCLUULC,:;;;;;;;;;I;;;;;;;;IIIIIIIllllllIIIIlIIIIIIIIIIlIllllIIIIlllIllIIlllIll\r\n;;;;;;;;;;;;;;:::::::::::::::::::::,::::::::::::;::::::::;::::::::::::;;:>wmqZOOZO00z]+1jn)1[[[/xcccczzcXYYXzvucuxnXYUJYUUXzYUXYXXvzYzCYYYCCYYY0l:;:;;:;;;;;;;;;;;;;;;IIIIlIlIllIIllIIIIIIIIIIIIlIllllllIlIlIIIllIllIllI\r\n;;:::::;;;;::::::::;;:::::::::::::::::::::::::::::;;;;;;;;;;;;:;:::::;;;;+dqqZOmm0O0X/]}rf1?-?1fvccvuccccYYzzunvvxxzXYYYJczzUJYYUYcXXzQUYXJJYYXCI,::;;;;;;;;;;:;;;;;;;;I;IIIIIIllllIIIIIIII;III;IIIIIIIIIlllIIlIlIlIIIII\r\n::;:::::::::,,:::;;::::::::::::;:::::::;:::;::::;;;;;;;;;;;I;;;;;;;;;;;I;?dqqmmwwOO0U/?_x/{???{/nvvcvcvvcXXcvvnvuruzYYUXJXczJUXYYXvzXcUJJJCCYYYJl,:;;;;;;;;;;;;;;;;;;;;;;IIIIIIIIIIIIII;III;I;;;;;;;;;;;;;I;I;I;;;;;IIII\r\n,::::::::::::,:::::::::::::::;:;;::;;;;;;;;;;:;:;;;IIIIIIIIIIII;I;;;;IllI}bqpmmqqZOOY1]]rf{]_?[(xzcvvccvXYXzcvnvvrnuYXUUUXccYUXXYXczXzYUYJCJYYYJ>,:;;;;;I;I;;;;;;;;:;;;IIIIIIIIIIIIIIIIII;;;;;;;;;:::;;:;;;;;;;:;;;;;;II\r\n,,,,,,:::,:::,:::::::::::::::::;;;;;;;;;;;;;;;;;;IIIlIllllllIIIIIIIIIll!l|kqbmZmZO0C~<{+tj}?_-[(ncvvvccczXYXcvnvvxxuYXUYUXczXJYYYYucXcXUUJCUXYYC~,;;;:;;I;;;;;::;;;;;;;;;;;I;;;;I;IIII;;;;;;;;:::::::::::::;::::;::;;;;;\r\n,,,,,::::::::::::::::::::::::;;;;;IIIII;IIIIIIIIIIIlllllllllllllllllll!!lthwpmpbZ0Q/,?}~tj}-_-[|xvcccccczYUYzzuvcnnnYXJUUzzzYCYYYYczzzXUYJCUYYXJ_\"::;;;;;:;;::::::::;;;;;;;;;;;;;;;;;;;;;;;;;;::::::::::::::::::::;;;;;;\r\n::::::::::::::::;:::::::::;;;;;;IIIIllIllIlllllllllllllll!l!lllllllll!!i!jkddmwkmQQf\"<]~\\j{[?]{/ucczczcczXXXcvvcuncXYYJYUYXXYCJYYJccXczUUCCJYXXJ-\"::::::;::;:;:::::::::::::::;:;;;;;;;;:;:::::::::,::::::::::::::::;;:;;\r\n;:;;:;;;;;;;;I;;;;;;;;;;;;;;;;IlllIlllllll!lllll!!llll!l!ll!!!llll!l!!><iudbbwwmmmwj^+{1xf1]-?}\\xzccvcccvXYXccxvcxxuYXYcXXzXYJUYYYzXXXXYUJLJYYzJ]\"::,::::,:::::::::::::::::::;;;I;;;;;;::;:::::,::::,:,::,,:::::::::::::\r\n;;;;;;IIII;;IIIIIIIIIIIIIIIIIIIIlIllll!l!llll!!!!!!ll!!l!l!!!!lll!!!!ii<iXkkbwqwwmZ}`+[~tf}-__}/uXXcvczuXYYXXcnvznrnYYYXYYXXXUJUUUczzcJLJCLJYXzU}^,::::,,,,,,,,,:::,::::;;;;;;;;;I;;;;;:::::::::,:::,,,,,,,,,,,::,,:::::\r\nIIIlIIIllllIlllllllllllllllllllllll!l!!!!!!!!!!!i!!!!!!!!!!!!!!!!!!!i>><>Ubhkqqqm00)\"_}+/\\[-__{tvczzvcczzYUXzcnczurnYXYXXXXYXJJUUJczzcUQUCLCUYzU1`,:::::,,,,\"\"\",,,\",,::;;;;I;I;;II;;;;;:::::::::::::::,,,,,,,,,,,,,,,:::\r\nllllllll!!l!!!llll!!l!ll!lll!!!!!!!!!!!!!!!iii!iiii!!ii!!!!!!!!!!!!!i><~<Jbkdkpdm0Z)\"+]+/|}-+_{fvczzvccczXJYzcnvcuxnYXUYXYYYXJCJUJXXzzULUCQLUYzY(`,,,,,,,,,,\"\"\",,\"\",,::;;IIIIlllIII;;;;::::::::::,::,,,\"\"\",,,,::,:,,,:,:\r\n!l!!l!!!!!!!!!!!!!!!!!!!!!!!!!!!!ii!iiiiiiiiii>i>>>>>>>>i>>iiiii!!iii>~~<OhkdqbbdOO+^<]?t|[-__{juXXXccczXXJYXXuczcxxYYJUYXYUXCLJYJXXXzYLULLLJYcX|`,\"\",,\",,,,,,,,,,::;;;;;IlllllllllIII;;;;;;;:::::,,,\",,,,,,,,,,,,,,,:,:\r\ni!!!iiii!iiiiiii>iiiiiiiii!iii>i>i>i>>>>>>>>>>><<><<<<<<><>>>iiiiii>i><~~mhhdbbbpZ0-'!__\\(}]??)fucczccczXXXzXvuzcvvcYYUYUXYUUUCJJUJYzzYLJQQLJUzz/^:,::::::::::::;;;;IIIIIlIlIIllllIllIIII;;;;::,,,,,\"\",,,,,,,,,,,,,\",,,,\r\n>ii>>iiii>>>>>>>>>>>>><>><>>><<<<<<>><<<<<<<<~~~<~<<<<<<<<<<<>!!!!iii>>~~ZkkhkbbqZZ?^<]}f({?-])jcXYYccXzcYUYXXuczcruYUJJCXUUXJJUJUUJYYYLJQ0QCUXct,;;;;;;;;;;II;;IIIIIlllllllIIIl!llllllIIII;;;;:,,\"\",\",,\",,:,,,,,,,,,,:,\r\n>>>>>>>>><<<<<<<<<<<<<<<<<~~~~~~~<~<~~~~~~~~~~++~~~~<<<<<<<<>>ii!!!ii>><+mkkkkkbqZZ!^>_-t}?+~?(xzXUUzzzcUYUYXXuvzcxvJJJCCYYJYYCCJJUYXXXJCLQ0QJzcf;llllIllllllllllllllll!!llllllllllllllllIIII;::::::,,,,,,::,::,,,,,,,::\r\n<<<<<<<<<<<<<<~~~<~~~~~~~~+~+++~+++++++++++++~~+++~~~~~<<<>>>>ii!!lii><<-phkkkkbpqm~.l<_/]?_~{fuYzUXXcYYJUJYYXvczzxvJJCJLYYCYXCCJJJUXzcXLLQ0LCYcfli!!!!!!!!!!!ll!l!lllllllllIlllllllIlllIII;;;::::::,::,,:::::::::::::::\r\n<<<<<<~~~~~~~~~~~~~++++++++++_+++++++++++++++++++++++++~<<<>>ii!lll!i><<]bhbkhkkqmQi.;!_\\?-+~{fnXzYUXXXYYUJYYXvcXzuvCJLCLUYCUXLCJJUUXXzXLL00QJXcji<<>>i!!!!llllllllI;;IIIIlIIIIIllllIIlIII;;::::::,:,,,,::;::;;:;;;:::::\r\n<<<~~~~~~~~~+++~++++++++__+++++_++__++_____+++++++++~~~~~<<<>>i!!!!i><<<}bhhhkdhpwJ:':l_\\?_++]|ncXYYXcXXXYJYYUucXXuvCJQCQUYCUzLLJJJJYXzXCCQ0QJXuj<~<<<>i!!!llI;IlIII;;;;I;I;;;;;IIIIIIIIII;;;::;::::,,::::;;;;;;;;::::::\r\n++~+~+++++++++++_+___+___++_________+_++______+++_++++~+~<<<>>i!!!!!><~<1baokdpbpwQi',;i{__++}|uzYUUYYYUJJCJJUYUUJYJQOO00QCLLXJQCCJJUXzzLCQQQJXvj~<<<>>>!!!!lI;;;;;;;;::::;;;;;;;;;IIIIIII;;;;;;::::::::::::;;:::::::::,\r\n_++_+__+__+_+___+______________________+_________++++++~~<<<>>iii!ii><~<(kahbdpbpwC;`,;l~>+?}(fvzzzzXXYXUJJJUUUUJJJQQmm000LQUCLQQQCJJXXcCLQ0QJXvr~>>>iiii!lllI;;;;:;::::::::;;;;;;;;II;II;;;;;;;;;;;;;;;:::::;::::::::::\r\n__________++______________-________________________++++++~<<>>>iiiiii>~>/aohbbkdpkJ:,:l!:l>?}(jczYYXXYYYUJJJJYXYUYYCQZZ000C0JCCQLCJUUYcLQLQQOJXur<!ii!!l!!lllI;;;;::::::::::;;III;;III;;;;;;;;;IIIIIIII;;;;;;;;;::::::::\r\n_________________________----_-_____________--_______++++~~<<>>>>>>>>><<faahbbkdhkQl\":;i!i~+?1\\uzXYXXXYXXJJJUYXYUYXCL0Z00QLLJULLCCJUUYcQLCCC0CXvx~!i!!!!!l!llIIIIII;;;::;;;IIIllIIIIII;;;III;IlIlllIIllIIIII;;;;;;;:;;::\r\n___-__-_____________---_-------_-----___---_-_______+_++++~~<<<<<>><<<+>xaaabkhbdpJ,\"\":llI>+])tvzXXXXXYXYJJJJYXYUUXCLZmO00QQJYCLLLCYJYvLQLCC0Ucvx+!ii!!!!!!llllllllllllllllIlllllllIIIIIIIIllIllllllllllllIIlI;;;;;;;;;;\r\n----__--_______-__-------_---_-__--_-------_--__-______+++++~~~<~<<<<~+<vahhbkhbpbJ,\"\";lIIi_])tvzzzXXXYXYJCJJUYYUUUCQZm000QQCUCLLLLUJUcCLCCXQJcvr_!>>>iiii!!!!!l!ll!l!!!!l!!!lllllIlIIlllllll!!!!!!!!!!!!!lllllI;IIIIII;\r\n----_--_______---_-------?----__-----------_--------______+++++~~<~~~~+~UahhhkabhdJ,\"\";l;;!~]1/ncXXYYYYUUCCLCJUUJCJC0ZmZZOOLQULCQLLUJUcCCCCcCJcux?i>>>>>>iii!!!l!!!!ll!llll!!!!llllIIlllllll!!!!!!!lll!!!llllllllllIIIII\r\n-----__-_-____--?-???--???--_-----------??---????-?----_____+++~~~~~~+++Joahhhakkbv^,,;iii+_[|jzXUUYXYYYYJJUJYXXYYXCQOOO00QLCCQQ0QQCCCcCCCJcJJcvn[i>>>>>iiiii!!!!!!!!!!!!!!!!!!!!!lll!!llll!ll!l!llIlllllIlIIIlIIIIlllll\r\n___-__---_-____---??----?------------?--??-?????--??-----_____++~++++_-_Cahkhhohddu\",,Iill>+]{|xcXzXXXXXYJCJUUYJJJJLQZmZ0Z0LJULLLLCJJUXJLLCcYCcvu{!>i>>ii>ii!i!!!!!i!!!!ii!!!!!!!!!l!!l!lllllIllllllllllllllllllllllllll\r\n+_____-___---_------???-?------?-?-----????-???-????--?-______+_+++++_--0oaokhokbbc\",,:I,;!_}1/uzYzXXYYXUJJJJJUJCCCL0ZwZ0OOLCYJQ0LLJJJcvYLJYCCzuu1liiiiiiiii!i!!!!!!!i!i!!!i!i!!i!!!!!l!lllllllll!lIIIIIll!!!!!!!!!!lll!\r\n+_+____---___---?-------------????--??-----????--??--------____+++_++_??Zaoao*akkkn`:,:I:I!-{1/xczcXYYYYUCCCJJUJCCCQ0Zqm0ZZLCYCLQQQJJCzczCJvzJzvu(!>iiiiiiii!i!!!!!!!i!!i!!i!!!!!!!!!!!!!l!!!llll!l!lll!!!!!!!!!!!l!!l!!\r\n__________-_-____------------?---?---??---?????-??--------__-__+++_++-??poaa*ohabbU^;,:;,;!_[{\\nczcXYUYUUCCCJJJJCCLQ0Zqm0ZZLLYCQQQQCJCXzzJJcvYcuu|>>>>>>iiiiii!!!!!!!!i!!!!!!!i!!!!!!!!!!!!!!!!!!!!!!!!!!!!l!!l!!!!!!!!!\r\n___+_________________-------?----------?---?---?---??---?--____++++++--[booo*ah#hkc^;,:;:;i_}{\\rvcvzYJYUJCCJCCLCLQQ0ZZqw0mmQLYCQQQQCUCXzcJJcvYzuu/<<<~<<<>>>>>ii!!!!!!!!!!!!!!!l!l!!!!!!!!!!!!!!!!!!!!!!l!l!llllllllll!!\r\n-_____+___+__________--------------------------?--?????-?--___+__++__--}bo#*oaaoaau,:,,::I<?[1/xzYYUJCCCQLQLQLLQ00QZmwqpmmZZLCJCL00QUCXzvJJzvXzuv/~~~~~~<<<<>>>>iii!!!!!!!!l!!!!!!!!!!!!!!l!!l!!!!!!l!!!!!!l!!!ll!!lll!!\r\n--________++____-__-------??-------_---__----??-??-?-???---___+++++++_-{ko#*ooooaaUl;;lll>_}})\\nzXcXJJUYUJCJCJCCLQQ0OZqmZmZQJCCLQO00LQJYXYJXxcXuvt+~~~~~<<<<>>>i>iii!!!!!!!l!!!!!!!!!!!!!!!!!!!l!!!!!!!!!!!!!!!!!!!!l!!!\r\n----___________--__-----?-----??----------?--?--------?---____++~++++__)ho#*oo*#ha|;:,:\",;i-+-)jvXcYUJJJCCCCJLQL000ZZmqqZZm0JXXJL0QLUCXYLCJYzvYuvf+~~~<<<<>>>>>>>iiiiii!!!!!!!!!llll!l!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n---------_____--__-??---?--?---?-----?--------------------__+++~~~~~~+~|o*#o****o*Q>,,:\":I>?<?)jvzcYJJJJLCCCCLQQ0ZZZmmqqZOmOUYXJLO0QJQYUJXYzvzUccr_+~~<<<>>>>>>>>iiii>i!!!!!!!llll!!!llll!llll!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n---------_____-------------?-------??----------_----_-____++~+~~~~<<<~~\\*o*oooooahL+,,:\":I>[>-)fvczYJCCCCCQLLQQQ0OOZwmpqmZmmUUcJCQOQJLUJJXYzunUzvx-<~~<>>>>>>>iiiiiiii!!!!!!!!!!!!!!llllllllll!l!!!!!!!!!!!!!!!!!!!!!!!!\r\n----?---___------?---------------??-?---?--------_-_______++~~~<<~~<<~<t#**ooo**aaL+:,:\":I>]>_1fvczYJCCCCLLLLQQ00OZmmmqqZZmmJYcUCQOQJLUJCXYXvvUXvx?<<<<>i>>>>>iiiiii!ii!!!!!ll!!!!llllllllll!lll!l!!l!!!!!!!!!!!!!!!!!!!\r\n????---_________----------------????-??---_--------_______+++++~<~+~<<>r#oooo*#oahC<:::\":Ii?!~}(nccYJCCLQQQQ0O0OZmZmwwmqm0ZmUYvYCQ00JLJJCXXccuUYvx]<<<<<>><>>>>>>ii!!!!lllllllllllllllllllll!!!!!!!!!!!!!!l!!!!!!!!!l!!!\r\n???-_-_____-_-_-_-???????????--????-----------_-____-______++++~~~~<<~in*aao#MMaaoU?I,;,;!_]?}\\rzXUCLLQQ0QQQQ000mmZmqqqpwmOOJYXJLLOOCLCJCXXccnJUvn[<<<>>>>>>>>>iiii!!!!lllIlllllllllll!!!!l!!!!!!!!!!!ll!!!!!!!!!!!!l!!l\r\n???--_---____-----??????-?????-------_---_______-___-______+++++~~~<~~iv#o#o#*#aaou~;::,Ii+-~?{\\vzXJCLLQCQQQQQOOZmmmwwmpm0Z0XzzJLQOQLLCJJYXccnJJvx}><<<>>>>>>>ii!!!!!lllllllllll!!!!!!l!!!!!!!!!!!!!!!!!!!!!i!!!!!!!!!!l\r\n-??---?????????--?????????????--?---_-_____-____-_-_________+++++~<~<~iX*ooaaaooahc<:,:^:l<_<_[|vXXJCL0JQ00000ZZmqqwwmmpmLQ0czcYCC00CQCCXzzzzcLCzn{><<<<>>>>>>>i!!!!!!!lllllllll!ll!!!!!i!!!l!!!!!!!!!!!!!!!!!!!i!!!!!!l\r\n]????????-??????????????????????--_________________________+_+++~~<<<~!J*o*haaaakbU+:,:^;l>_<+[|vXXJCLQQO00Q0ZZZZqpqqmZpwLQmvzcYCC00CQCCYXvzzvCJcn)><<>>>>>>>>iii!!!!!!l!!!lll!llll!!!!!!!!!!!!!!!!!!!!!!!!lll!!!!!ii!!!\r\n]]]]????????????????????????????-?--_--____-___-_____-______++++~<<<<<!Lao#hhhkhkd0<:,:^;l>-~_}|vzXJCQQ0O00OOZZZmmmmqwOpwCC0vzvYLC00CQLCUXcXzvCLzn|><<>>>>>>>>>iiiii!!!!!!!!!!!!!!l!!ll!!!!!!!!!!!!!!!!!!l!lllll!!!!i!!!\r\n]]]]]]?????-?????????]???]??????-_--__-_-_____--_-----_______++~<<~~<<!Zh#8hbhkakkhf^,,^:l<-+_}\\uXXUCQ00OOOOZmmmmwmqqmOpwCJLucvYLC0OLQLCJYccXzCLYu\\>>>>>>>>>>>>iii!i!!!!!!!!!!!!!!!l!!ll!!!lllllllll!!!!!!!!!!!!!!!!!i!!\r\n]]]]]??????????????????-???????----_----_---_---_---_-----___+++~<<<<~!mWBB@Mbkhkpppf^\"^:;i+?+[|xzYJL0OOZmZZZmwwwqwqqpOqp0YLczcXCJ0ZQOQCJYvcXXCQYu/i>>iiiiiiiiii!!!!l!!l!!!!!!!!!!!!llllllllllllIlIlllllll!!!!!!!!!l!!!!\r\n]]]??????????????]?????--------_----_--_----__------_---_____++++~~<~~ibB8B@$%oakbqmkx\",l>_?}{/nXULQ0OOOZZZOmmmmqpqqqwqpm0QCXYYCLQOZ0ZZQCUvcXXLQYvf!>iiiii!i!!!!!!!!lllllllllllll!!lllllllIII;;;;;;IIIIlIIll!!!!!!!l!!!!\r\n]???????-????????????????-_--_----_--------??------------_-____+_++~<<~WBBB@@$BohpwwdhY;,l<-}]{/xcXCLOOZOZmZZOwmZwqwqmOwOJzzcXzYCCZOQ00CQJcXYYCOUcri>i>ii!i!i!!!!!llllIIlIlllllllllllllII;;;;;:::;;I;;IIlllllll!!!!!!!!!\r\n???????-??-??---????????-????-??-?-?--???????---?--------_-____+++++~i/$BBB@@@@@#kwqdbbC!\"<_(]}txvXJL0mQwmwZmmqwqpdpwmZwOCcvczXYJUmmQZ0QQJxcYJL0Ucx>>>iiiii!!!!!lllllllllllllllllllllllI;;;;;;:;;;;;;;IIIIIIIlllllllll!!\r\n---?-----?--??---?-?????-????????-????-????????????-------_____+++~~~lZ@BB@@@@@@@Mkwkhbbw_!_/]}fnvXJLOZZwmqZmwwwZpqqqwZwZQvncXzYUUmwQZQQQCxcYJCOJvu>>iiiiiii!!!!!l!llllllll!!!!!!llIII;;;;;;;;;;;;;:;;;;;;;I;IIIIIllIIll\r\n_____---_----??????--????????????????????????????-??------___++++++~>~JbLJ$$$$Bp#BWMoba#cIi_|}}fnvzULOZmwZpmmqqmwmZmwmZw0QuucXXYUUOqQOCCCCucYJC0Cvc>iiiiiii!!!!!!llllllIIlIIlllIII;;;;::;;:;;;;;;;;;;;;:;;;;;;I;;;;IIII;\r\n-____-___----??-??????-????-????????????????????-------___-___++~+<>{UOnjX$$$$8m#@%&#aahw?!+|{{jxucULOOZZZqmmqqqwmmmmmOmOLvvcXXXUU0m0OCCCLuvYCC0Qvc<iii!!!!llllllIII;;I;;;;;;;;;;;;;;;;;;;;;;;I;;;;;;:;;;;;;;;;;;;;IIII;\r\n_----?--???--?????-?-?-????????????]???????-?-_______________++++<+fOCnxjJ$$$$&mMB%8M*h*x;l<1){/xuvYL0ZZwwqwwqqqwwZZmmmmZ0XncYXXYUQwOZJJJLuvXCC00vX<llllII;;;I;;;;;;;;;::::::::::;;;;;;;;;;;;;I;;;;;I;;;;I;I;;;;;;;;;;;;\r\n------?-?--?-??----?--??????-??-?--???????--___+_+_++_++_++_+++~>}Y0urnnfC$$$$&ZWB%&W#*oZ-~[))\\nczJC0ZZZZmwZqwmwppmwqZwqZ0zzYYUJCQOmmZQUCQvccLC0OcvtI;I;;;;;;I;;;;;;:;;::::;::;;;;;;;;;;;;;;;;;;;;:;I;;;IIIIIIII;;I;;;;;\r\n-?-??-?-?-----?-??????????----?---------____++++++++++++++++++<~jZYrxxrnrL$$$$WZ8B%&MWoMcl>_111fnxuYLOZ0ZZmZ0mqZZOL0ZQQZOCxvXXzXUCOZ0OCCJJcXXLLLZYjmw>;lIIIIIIlIIIII;;;;;;;;;;;::::;::;;:::::::::::;;;;;;II;;I;;;;;;::::\r\n??-?-?-?----????????-????-----??-------_____++++++++++++++~~~>]J0unnxnxxj0$$$$#m8BB8&MM*z!<+{1}fnxuYCOQOmmmm0qwmqmCQ0QQ0OJnucXYXYJLZ00UzcYcczQL00YnUqClIllIlllllllIIIlIII;II;::::::::::::,::::::::::;:::::::::::::::::::\r\n?-????-??-????-???????????????-?-??---____+__++++++++++~~~~<<fZUrnnrrxrr/m$$$$#w%@B%8W*W0i~~{1[fxxnYL0OZmZZZOmZ0mZUCOCOL0UnuzXXXYJL0OQJzzXXzvLL0OXnYmqC>I!!llllllllllIlIIII;;:::::::::,::,:::::,::,:::::,,:,,:,,:,,,,,::\r\n??-???????????????????????????-?---?-_-______+++++++++++++>]UZcxunnnxxjj\\w$$$$*Z8B@B8MMMfl_~{1}tjjnYL0ZZmZmmOmZ0OCYUOCLJ0YnuczcXUCLQ0LCXXXYzcCL0ZJnUZmmZ+li!!!!!!ll!llllI;;;::::::,,,,,,:,:,,:,,,,,,,,,,,,,\",,,,,,,,,,,,\r\n?????????--??????]?]]??????????--?------______++++++++++~<tZUnvunxxnxrrr/k$$$$aO8@@@&&#Ww~_+{)[/frnXLQ0OOZZOZwmOQCzY0UJY0YnucccYUCCQ0CCXzzXXvJLQZJnYOOZmZ]li!ii!!!l!l!llII;;:::,,,,,,,,,,\",\",,\",\",\",,\",,,\",,,\"\",,\",,,,,\"\r\n??????????????????????]???]????-??-----_-_____+__++++++>?UZYnvvunnxrrjff/8@M#$kO8B@BB&&W\\<]+}|{(tfrcCL0OZZO0COZ0JYcXJXzcQYnvvccXYJCC0CCXczYYuUQ0ZCnU0Z0Omm1;!!!llllllIIII;::::,,,,,,,,,,,\"\"\"\"\"\"\"\"\"\"\"\",\"\"\"\"\"\"\",,,,,,,,\"\"\"\r\n??????????????????????????????????----_-_--_____+++++~>\\ZJvXvcvunnxxxrjj\\#$BB$bO8@@@@B%%w]}1(\\tfnxcULQ0OZ000Z0OZOQC0QLQCCYcYYYJYUCQC0CJCvzUJuU00OQnU0ZZZmmp|:lllII;;;;;;;:,,:,,,,\"\",,,,,,,,\"\"\",,,,,,\",,\"\"\"\"\"\",,,,,,\"\"\"\"\"\r\n]?????-??????????????]??????????-??----__________+++<-YOvuccnunxxxxxrjjr\\a$$$$dZ8%@BMhbw~_?-{(1(\\frXCQ0Q0O0LUC0JYXvzYXzuunuvzzzYUCLQQCCXYJJYXUQ0Z0uYQ00OOmmpf:;;;::::::,:,,::,,:,,,,,,,:,:::,,:,::::,:,,,,,,\",,,,,\",\"\"^\"\r\n???????????????????????]???????-?-?-----______+__++<\\ZJucvzznnnnxxxrjrjj\\*$$$$dZ%Woh}>_?1}{}{/{))tjzJQQ0ZO0LzQOJzzvcccvnnnuvvzXYYJJCCUCYvCJYuUQQ0CvU0Q0OOmmZpn\",::::::::::::::::,,,:,:,::::::::::::::::,::::,,,,,,,,\"\"\"\"\r\n-??---??????????]????]????????-???----_-_____+++_~_XZcvczcYXvvvununnxxrrtM$$$$qm8*k*1!?-{})1{f{)1/jXULQOZOQCcJJYccvzvvunnnvuvzYYYJJJCYJJvCUUnY00OOcQBCQOOOmmmqv,,::::;;::::::::::::::::::::::::::::::::,:,,::::,,,,:,,,,\r\n-?---?-?----??-???????????????-???---_--_______+<(OCuccccvUzcvnnnnxxxxxrf&$$$$mmBoh*(>]]{((11t1((trzULO0O00CvJJXccvvuuxnnxuvvcXYYUJJCUJJzCUYuXQ0OOXUkLLQQQ00QQZUI\"::::::::::::::::,::::::::::::::::::::::;:;::::::::,:::\r\n---?---?--?---????????--------?---?----_-_____++zZzvcccccvUzzcvuvnnnnrrrj8$$$$mwBok#f<}}1)(1)t)((/jcJQ0000QJnYYzzznnunnuunvvuzXYYYJJJUJCzCUXnzQ00OJLJJLQJJCJCCLpQ!\":::::::::,,,:,,,,,,:,,,,,,::::::::::::;:;;:::::::::::\r\n??--------???-????-??--_--___-_-__-_------___~)0LczXzXzzzcJXXXzczccunxxrx%$$$$mpBak*t~}{)\\(()/|\\(\\fcYCQQ0QQQrucucvnjrnxnnruvvzYXXJCJUYULXJJXrzLOOO00CYCYYYYYYJUOQL<^:,,,,,,,,::::,:,::,,,,,,,,:::::::::::;:::::;::::::::\r\n?-?-????----????---_---------_---____---___++vOzvzzzzzzzXcCzYYXzXzcvunnxuB$$$@mbBokoQ-{)(/\\\\|//tttxcXCLQQCJUjrnvnxjrnunnvnczzXYYYYUUJUYQJCJzxcQO0OJQLYJYUCUYYUYLJJQ?^,,,,,,::::::,,,,,:,:,::::::::::::,:::::::::::::::::\r\n--??-?-???????-?---------------_-___---___+{QCvzXzzXXzYYYXJzYXXzzcvcvnnrc@$$$BZk8oa*Y)\\tfft|\\\\tnt\\rnvcUJXnzf|f\\vjt1/fnrnXUucvzczXYYUJJC0LJCYcvCOOOUQQYYYYUYYYYJ00LC0}`\",,\",,,,,,,,,:,:,:::,,:,,:,,,,,,,::,::::::::::::::\r\n-?--????????--????---?-__-__-_-__________-<bQcXzXXXYYYUYUYLXUJYXXzzzcunrX$$$$%OhWaooJ)/tfff|//fnffrccULLLcJufxjXnutxrvvucccXcXczzYUYUYU0LcUYxXQOO0JJQzzzXXzzzYQOOLJCQ(`\"\"\"^\"\"\"\"::,::::::::,::::,,,,:,,,,,,,::::,:::::::,\r\n??-?-???????-??--------__-__--_________+_+<aYczXzzXXXXYXYXQYYYYXXXXXzcuxU$$@$%Ok&*#*Q(tffjr\\r\\xnfnjUcCLCZcZjxfxXfc|uxvzrnxYYcJzXJYLCLCLO0UCJvcQOO0J00zccXXXXYL00QUYCUOf`\"\"\"\"\"\",,,,::,:,,,,::::::,,::,:,,:,,,:,,::::,::,:\r\n-?-?--??-??---???-??-?----_-________+++++~+#zcczXXXXXYYYYULXYYYYYXXXzzvxC$$$$8Oa&**oZ)fffjj\\r\\jxtxjUXLLL0XZxxjxzrv\\unvcxvnYXcJzYJXCCCCLO0UJCzc0ZZOU0OXzvzXYYUQ0CLYUJJC0x\"^,,,\"\"\",,,,:,::,,:,,,,,,,:,::,,,,:::,,,,,,,,,:,\r\n-??--?--??-?-???--???-----______+++++~~~~<_MczzzzXUYXYYUUJQUJUYUYYXXXXcn0$$$$8Zo&*oaw)/tfff|//frr\\xucYCLJXcX\\frnvr//tvxnnrcXcXXzUXJJCCC00UCJzvOOZOJLZzzcYcczXCCXQYYYUJJQc;\":,,,,,,:,,,,,,,\"\",,\"\"\"\",,:,,,,:,,,,:,,,,,,,,\"\r\n?--?----?--??---------_-____++++++~~~~~<~>}MuzccczzYUUYYUJCXYXXXYYXzzzvrO$$$$&Z#&o*kp)/fftf\\//jjx\\xncXULUXvY(ffxXxjftvnuuxczccXcYzUYJJJL0CYUJvLOZ0JCqvccXzcccXYzCUUCYUJULUl^,,,,,,,,,\"\"\",\"\"\"\",\"\",,,,,,,,,,,,,,,,:,,,,,,\"\r\n-?--------?-----?-----___+++++~~~~~~~~<<<i|#uzcvczXXYUJUYJJXYXXXXXXzzzvjw$$$$&ZMM*#hb\\\\tjjj\\/trrn/nvzYC0QUcCjxuuYnnxrcvvzxvXXzYcUXJYUJYJO0XYQzJOZOCJdvvccXcccXXzCXUCJJCCCLQl\",,,,,,,,,,,,\"\",\",,\",,:,,,,,,,,,,:,,,:::::::\r\n??----_--?--------_____++++~+<<~~<~~~<<<<!xouXzXXXYYUUYJCLLUUJJUYYYXzzcjp$$$$MZMMo*aJ\\/fjfttjtrjxjXYC00ZQ0CUuuYzXurvuYvznvXYUYUXCULJQJQQ00JYCUJZZZLUbvJJUXvvvczvCczXUUJCLCm(`,,,,,,,,,:,\",,,,,,,,,,,\",\"\",\",,,:,,::,,,,::\r\n?------_-------_-___+++~~+~~~~~~<<~~<<<<~!zbnzzXXXXYXYXYULCUUJUJUYXXzccjb$$$$*ZMMooa0(/tjjf/ttrxntucYJQmQQJ0uXzzLcvnnUzYcxzXYXYcYXJYJUJC0LJYJXQZZOCUauYzcvccczzcCXzYUUJCLUL(`,,,,\",,,,,\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"^\"\"\"\"\"\"\",,,::::::\r\n----_-------_____+++++~~~~~~<~<<<~<<<<<<<!0wnXzXzXXYYYUUXLJCJJUYYYXcvuufk$$$$*OWMooam\\\\rrjj/ttrnnfuvYJ0ZZCJOvYcYQXvncLUUYuYUYcUYJzXYYJYX0QJzQJUOO0JYouucvnucuvzvJczXYJJJJJQx'\"\"\"\"\"\"\"\",\"\"\"\"\"\"\"\"^\"\"\"\"\"\"\"\"\"\"\"\",\",,,,:::::::\r\n_-_-_-_______+++~+~~~~~<<<<<<>>>>>>>>>>><lw0vXzXXYXXUUUUYLUUJJJYYXcvvnnfo$@@$oOW#oooZ|/tjjj\\/tjurfxvcU0ZmJCOcUXL0XcuYJCYJnXUczYXXXzYzJYXCCJzCCUO00UnauvcvuuvnnczXzcXUUYYYJCn'\"\"\"\"\"\"\"\",\"\"\"^\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\",,,,,,,,::\r\n____________++++~~~~<<<<<<<<>i>iiiiiiii>>lkJvcccczccXXYYYLYYJUJCJYXXcvvf#$$$$a0&*ooaZ\\/jxrj\\tfrxjtjnuYQO0CXZcYXC0UYzUCCJJnXUYzXXXXzYzUUXUUJzJCU00QYrhvcvvvvvvcvcYXXXYYYXUJJU`\"\"^^\"\"\"\"\"\"\"\"^\"^^\"^^^\"\"\"\"^\"^^\"\"\",,,,,::::::;\r\n__________+++~~++~~<<<<><<>>>>>>iiiiiiiii!oYccccczcczXXXXLXYUUYUJUXcvvnx&$$$$k0&***o0//rxrj/ffxxf\\jxnXJQJJX0cXXU0UUUYLJCJcUUJzUXUYXYYYJYUUJXJ0J0OQXtkvvvvuuvvvvvXYcXXXUUJCCU^\"\"^\"^^\"\"\"\"\"\"^^^^^^^^^^^\"^^\"\"\"\"\",,,,,,,,,,,,\r\n__________++++~~~~<<<><>>>>>>>>>>i>iiiiii<MzzzcczzczXXYXYCXUUYYXYXXcunjX$@@@$bO%*oooJf/rnnjjffxjf|jtruXCYYcLXvzcQzzXXCUUJvYUJXUXUYXYJXLXYYJXCOL0ZQXtbcuvvunvvvcccUvzXXYYUJJQ:^\"^^\"\"\"\"^\"^\"\"^^\"\"^^^^^^^^\"\"\"^^^\"^^^\"\"^^^\"\"\"\r\n_+_+++++++~~<<<<<<<<>>>i>>>i>>i>iiii!!!!l_MvzXYzzccXYUUXYCYUYYYYXXczXzrJ$@B@$bOB*aoomf/rnurrjrnjj/xjuzYCYXcXvnccYuuXcUXYzzXUJXJYJUJYCXQUXcUYCQ0OOQztdcucvvuvczcvvJczzXXYUJJL;^\"^\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"^^\"^^^\"^^\"^^\"^^\"\"\"^\"^\"\"^^\r\n+++++++~~<<<><>>>>>>>>>ii!i!!i!!!!!i!!ll;[MvXXXXXczXXYYXXCYXUUYXXcczccccB$$@$pZ8#aoovffnxxjffjntt\\ffxczYccuzrrncvjrnuYvXvuXXYzYXJYJUCJLYCUJCQQ0OZOzrZdnuvnucvuvccYYYzYzXJYUO<^\"^\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"^^^\"\"\"\"\"\"\"\"\"\"\"\"\"\"^\"\"\"\"^\r\n++++++~<<<>>>>>>>>>iiii!ii!!!!!llllllllI,)oncvvccXXXcXYYYLXYJCJUYzcvccuvB$$$$wm8*aa#Jftxnvxrxnn(\\)||txuzuuxYvxnvzxuvcXXYXzXXJYUUJUYYJUQUYuzJCQ0OOQYjm@XnuvcvuuuvvYzzczzzUUYL_`\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"^\"\"\"\"\"\"\"\"\"\"\"\"^\"\"\"^^\"^^`\r\n+++~~<<i!!iiiiiii!!!!!!!!!!llI;;:::::,::'/auzccXXXXzXUUUUQYYYUJJYXccvurz$$@@$qw8ohaMYffxnuxxnun(()(\\trvunnnXujnuzrnvcXUUXzXXJYYYUJXYUYQJJvvJCL0O0QzfQ#UvcvvvvcvunXzXczYcJCYL1^;;;::::,,,,,,\"\"\",,,,\"\"\"\"\"\",::::,\"^``````''\r\n~~<<>!l;:,:;;;;II;:;;;IIlllllII;::::,,\"\".udncvvccccXJJJUJCUJCUYXXXXzcurY$$@$$qp8hha#Xftjnunxnnx()((|/jxnxxnznrxvvxuuzcCJXzcXUYXYUUzYYYLCUXnUCCQ00LzjLQvvnvuuuvccxYcYXzYXYCQL\\,I;II;I;;;:;::;::;;;;::,:::,::;;::,^^^^^\"\"\"\r\n>>i!l;,\"\"\"\"\"\"\",\",,,,,,:;;;IIllll;;:::,,,'CmxcvcczccXXXYYCCJCJYUUYzcccvrJ$$$$@qd8kaoWzftxnvnnunx|\\((|/jjxxnrXvrnvvnnuczQQYXzXJYXYYUzYXUCLUYuUJJQ0QLXfJ0nnnnvvczccnYnccvcYUCOmu:llllllllllllllIIlI;;II;;;;;;::;;:;;:;:;;;;\r\n;;::,,\"\"\"\"\"\"\"\"\"\"\",\",,,:::;;;;IllII;;;:::^mOzzczcccXzczYUCCJCJUUJJJXXcuxL$$$$@ph8ka**cjtnnvnuuvx\\/|t|/jruxnxXcruvzuuvvXQ0UYXXJUYXJUXXUYLLCUcYJJL00CzfUZuuucccccuvvYuuvczzYJCLc:!ll!!!!!!!lllllllIIlllIlIIIII;I;;lIIIIIIlI\r\n,,,,,,:,,,,\",\"\"\"\"\",:::;;;;;IIllllI;;:;:;,kCnvvzYYzczXUCC0000LCJJUYXzccnO$$@$@bo&ao*ovjtxucuvuvxt/\\t\\/jjnrnxcXxuvXuvcuXLmCUYXJYUXJUXXYULLCJXUCJL0OCXrYmuvcnnvvcXzXLJUXUYYYYUYU;!!i!ii!!!!!lllIlIIIllllllllllllllllllllIII\r\n;;;:::::;::,::,,,,:::;;;I;;;;;I;;;;;;;::;oXuvcXXzvvzYUJJQmO0QLCXcvvvccvm$$@$@b*8oa*#XrjuvcucvzujjfxruuuvnvvczncvcvvXcYCZUJJUJUCJCJJUJC000CCCCCJQZCXxzpuzXnxcUYXvXCUYXzXcXYJYUli!iii>iii!!lllllIIIIIllllIIIlllllllllllll;\r\n;;;;::;;;;;;;II;;;;;;;;;;;;;;;;;;;;;;;;:!MJXYUYzvvcXYUCJL0QQ0QJYXczXcvjw$$$$Bd*&**#axrxvvvucvcx/t\\f/rnucnvuXvrvcvuuvvXLQXXXzUXYYUYYYUJLCCXJCLLQOZCYnXbnzzvvYXXYXYQCcccYXczJCZ>i>i>>>ii>i!!!lllllIIII;I;;;;IIIllIlIllllll\r\n;;;;;;;;IIIIIlllllIII;;;;IIIIIIIIII;;;;,_WYJUYzcvczYUJJUCYUJJJJJUYYXzcxp$$@$%q#&a#*MjrjnuvncvcnfjtrfjjjvxuxcXnvvcvvzvXLZJYYYJYJYUUYXYJQCQCLCLYJQ0CXrYkncvvvuzzYCLQUXUYUJCCCCZ~>>>>>>>>ii!!!!llllIlII;I;;;IIIIllIIIllIlll\r\nlIII;IIlllllllllllllllllIllllllllllIIII,{MzYUUzcvvcXXXXXUvcczXYUUUXzcznb$$$$8w*&a*##frrnuunvvcujjfrjjjuxjnncznuvvuuvvzLZJYYUYYYYUUXzJCLCQLLLCUUQQUXrchnunvccXYJJJQYzUJXU0LJU0]i>>>>>i>>iii!!!llllIIIIIIIIII;IIIlllllllll\r\n!llll!l!!!!!!!!!!!!!!!!!llllllllllIIIII,/*uXUUYXXzczcvvuXuvccczXXXXYUYcM$$$$8m#&*o#otjxnunnvcvnjrjjrjrjrxxuzzuvvvuvvvcLmJYXUYXUYYYXXCJJJJUJLJYYCLUzxvanvczXYXUJJJLJYCYYYJLL0q[li!!!!!!!!!!lllIlII;;;;;;;;::!~~<<>ilII!ii\r\nii!iii!!!!iii!iii!!!!!!!!!!!!!!!llllllI\"vacYYJJJXXXXcvuuYzXzcvvuvvzXXzY8B&M@&mM%*a#o/rxnuunvccvxnxnnxrrnxnnzXuvccvvcccLmJYYYUYUUYYXYLJUJJJJCUUUCCUzxnauuXUYUYYYzzcJUJUXXYLOZw):llllIIIII;;;;;:;;;:;:::::I]xOZOpbbbqQc<ii\r\n>>>>>>>>>i>>>ii>>>i>>>ii>i>iiiii!!!!i~?_ZqnXUCUYYYYzccczUXcvvvczzzcvvvvW$@$$MwW8#*#otxnuvvncczvuunununnvuvvYYucczccXzXLZJUUYCUJUUUYJQCJJCJJCJUYJCUzxnbaXUYYYcczvvvUYYXXXJQOOm/:llllIlIl;;;;::::::,,:,,,\"<Jb#ah###M&8%/li\r\n<<<<<<<<><<<<>>><<>><>>>>>>>>iiii![YL0Z0MZcYUUYYUJJYccczYXXcccczzzccvvnW$$$$&p88WWWaxuvvcznzzXzcvvvvcvvcucvYJvzXXzzXXYJmCYJJCJJJJJUCm0JCCJJCJJUJCJXnud&JUUYcuccvXJJzYXXJ0OOOmn;!!llllllllI:,;>++_<~~__+i>Cb*WWW#o*#W&U!>\r\n<<<<~~<~<~~~<~~~~~<~~<<~<<<<<>><>i/CUCLQpmZqppppqpmLUcuxnnczzzcxrrrjttfQZO00CXCUYXzc||||())))()1111{))111|txXXUJYzzXXXcYcvcvnnvvvzzzCLzczzXYYXzXXXcxrmXxvvcXXzzXUUCYCQL0OZZZmYl>>iiiii!!!!{zmLYU0mppqpbap0d#&88&##M&%Zii\r\n<><<<<<<<<<<<<<<<<<>>><>>>>>>>>ii>jxnvcYUJ0qbkkbqJcrf/|[+-(rj/\\[}|()((|(|){1)()()1}1)}}{1{{}{{{{{}})\\\\/frj/\\xXQ0QCUvuczJQUUUJJJJUYzYXzcuvvcXYYXzzXCUccvczzcvunxnrjfrcCQOZZZmOCi<>>>>>>i!!<Z8$LY0*8B@@B%B&QmoW&&&WMW&8p~>\r\n>>>>>>>>>>>>>>>>>>>>>>>i>>>>iiii!<xfxuvXCC0mkbwOL~i>i!!i+<>-11)-])}})1)(\\\\(|/\\tuxttt//jffjxjrrjjrjfrxxxuvnxxucXXczXzvzzzzzUQQUC0QJxjUXcuunnnunuvzzccvvvcXXULLJYzXYzvuxjvJJUJJY<<<<<<>>>>!?h&$OvLaM8B@@BB8LOhWW&&WWW88a}~\r\n<<<>>><>><<<<><<>>>>>>>>>>>i>iiii_rtjuvzJLZphbqZ0?~+?1(jvXXCOqCJLLLLQ0OZmwqqqqpqwZO0OOOOO000000000000000QCUXczYJLQQLYccYJCJJUCQ0QCUJCQLQQQQ0O00QLCCCCJUL0QQ00QkkbkpJYXvti<>><><>>>>>iiiil-k8$dvJdaM%@@@@BQLb#M&WWW&88*(<\r\n>>>><<<><<<<<<<>><<<>>>>>>>i>iii!?ftjuzzCQZdhkqZCzCZZmqqhqqoMaXYUUJCCLQ0OZmwwqqmqdZQLCJJUUUUUYUUUUXzzcccvvuucJQ0JYUYXYXzcvnxxuuxxxnuuvvnnnnnnxxxxrnccvcU000LLm8@BMkdmLc(i>i>>>>>>iiii!!lIiZM$*cJqhM8B@@@@QJp*#MWMWW8%Wr<\r\n>>>>>>>>>i>>><>>>>ii>iiiiiii>i!il]//jvcYLOqkakq0Uz00QJYnnII~?fnnvvczXUUCQOZZmZmwmCCCYYzvvcvzzccvvunxxnnxnnnXLZwZ0UJJYQOLLQQujJQUcnxrrxxxnjrvcuxrrxvvczYJQ0Z00maoonl>iii><<><<<<>>>>!ii!]rncXJCxXwh*&B@@$$OUqo*MWMMW8%&X~\r\n \r\n */\r\n\r\n\r\npragma solidity ^0.6.12;\r\n\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\n \r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { codehash := extcodehash(account) }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    address private _previousOwner;\r\n    uint256 private _lockTime;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n     /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n\r\n    function geUnlockTime() public view returns (uint256) {\r\n        return _lockTime;\r\n    }\r\n\r\n    //Locks the contract for owner for the amount of time provided\r\n    function lock(uint256 time) public virtual onlyOwner {\r\n        _previousOwner = _owner;\r\n        _owner = address(0);\r\n        _lockTime = now + time;\r\n        emit OwnershipTransferred(_owner, address(0));\r\n    }\r\n    \r\n    //Unlocks the contract for owner when _lockTime is exceeds\r\n    function unlock() public virtual {\r\n        require(_previousOwner == msg.sender, \"You don't have permission to unlock\");\r\n        require(now > _lockTime , \"Contract is locked until 7 days\");\r\n        emit OwnershipTransferred(_owner, _previousOwner);\r\n        _owner = _previousOwner;\r\n    }\r\n}\r\n\r\n// pragma solidity >=0.5.0;\r\n\r\ninterface IUniswapV2Factory {\r\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n    function feeTo() external view returns (address);\r\n    function feeToSetter() external view returns (address);\r\n\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n    function allPairs(uint) external view returns (address pair);\r\n    function allPairsLength() external view returns (uint);\r\n\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n\r\n    function setFeeTo(address) external;\r\n    function setFeeToSetter(address) external;\r\n}\r\n\r\ninterface IUniswapV2Pair {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns (string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n    function nonces(address owner) external view returns (uint);\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n    event Swap(\r\n        address indexed sender,\r\n        uint amount0In,\r\n        uint amount1In,\r\n        uint amount0Out,\r\n        uint amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\r\n    function factory() external view returns (address);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n    function price0CumulativeLast() external view returns (uint);\r\n    function price1CumulativeLast() external view returns (uint);\r\n    function kLast() external view returns (uint);\r\n\r\n    function mint(address to) external returns (uint liquidity);\r\n    function burn(address to) external returns (uint amount0, uint amount1);\r\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n    function skim(address to) external;\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}\r\n\r\ninterface IUniswapV2Router01 {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint amountADesired,\r\n        uint amountBDesired,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountA, uint amountB, uint liquidity);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n    function removeLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint liquidity,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountA, uint amountB);\r\n    function removeLiquidityETH(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountToken, uint amountETH);\r\n    function removeLiquidityWithPermit(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint liquidity,\r\n        uint amountAMin,\r\n        uint amountBMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    ) external returns (uint amountA, uint amountB);\r\n    function removeLiquidityETHWithPermit(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    ) external returns (uint amountToken, uint amountETH);\r\n    function swapExactTokensForTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n    function swapTokensForExactTokens(\r\n        uint amountOut,\r\n        uint amountInMax,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n        external\r\n        payable\r\n        returns (uint[] memory amounts);\r\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\r\n        external\r\n        returns (uint[] memory amounts);\r\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n        external\r\n        returns (uint[] memory amounts);\r\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\r\n        external\r\n        payable\r\n        returns (uint[] memory amounts);\r\n\r\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\r\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\r\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\r\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\r\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\r\n}\r\n\r\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\r\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountETH);\r\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    ) external returns (uint amountETH);\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n\r\n\r\ncontract StarBase is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    address payable public charityAddress = 0xf988d22ddCE2F7CF36E7fb107ECccAFfb8CD08BC;\r\n\r\n\r\n    mapping (address => uint256) private _rOwned;\r\n    mapping (address => uint256) private _tOwned;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n\r\n    mapping (address => bool) private _isExcluded;\r\n    address[] private _excluded;\r\n   \r\n    uint256 private constant MAX = ~uint256(0);\r\n    uint256 private _tTotal = 200200 * 10**6 * 10**9;  \r\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\r\n    uint256 private _tFeeTotal;\r\n\r\n    string private _name = \"Star Base Coin\";\r\n    string private _symbol = \"StarBase\";\r\n    uint8 private _decimals = 9; \r\n    \r\n    uint256 public _taxFee = 1; \r\n    uint256 private _previousTaxFee = _taxFee;\r\n    \r\n    uint256 public _liquidityFee = 1;\r\n    uint256 private _previousLiquidityFee = _liquidityFee;\r\n\r\n    uint256 public _charityFee = 1;\r\n    uint256 private _previousCharityFee = _charityFee;\r\n\r\n    IUniswapV2Router02 public immutable uniswapV2Router;\r\n    address public immutable uniswapV2Pair;\r\n    \r\n    bool inSwapAndLiquify;\r\n    bool public swapAndLiquifyEnabled = true;\r\n    \r\n    uint256 public _maxTxAmount = 20000 * 10**6 * 10**9;\r\n    uint256 private numTokensSellToAddToLiquidity = 1000 * 10**6 * 10**9;\r\n    \r\n    event MinTokensBeforeSwapUpdated(uint256 minTokensBeforeSwap);\r\n    event SwapAndLiquifyEnabledUpdated(bool enabled);\r\n    event SwapAndLiquify(\r\n        uint256 tokensSwapped,\r\n        uint256 ethReceived,\r\n        uint256 tokensIntoLiqudity\r\n    );\r\n    \r\n    modifier lockTheSwap {\r\n        inSwapAndLiquify = true;\r\n        _;\r\n        inSwapAndLiquify = false;\r\n    }\r\n    \r\n    constructor () public {\r\n        _rOwned[_msgSender()] = _rTotal;\r\n        \r\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E);\r\n         // Create a uniswap pair for this new token\r\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\r\n            .createPair(address(this), _uniswapV2Router.WETH());\r\n\r\n        // set the rest of the contract variables\r\n        uniswapV2Router = _uniswapV2Router;\r\n        \r\n        //exclude owner and this contract from fee\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        \r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        if (_isExcluded[account]) return _tOwned[account];\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    function isExcludedFromReward(address account) public view returns (bool) {\r\n        return _isExcluded[account];\r\n    }\r\n\r\n    function totalFees() public view returns (uint256) {\r\n        return _tFeeTotal;\r\n    }\r\n\r\n    function deliver(uint256 tAmount) public {\r\n        address sender = _msgSender();\r\n        require(!_isExcluded[sender], \"Excluded addresses cannot call this function\");\r\n        (uint256 rAmount,,,,,,) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _rTotal = _rTotal.sub(rAmount);\r\n        _tFeeTotal = _tFeeTotal.add(tAmount);\r\n    }\r\n\r\n    function reflectionFromToken(uint256 tAmount, bool deductTransferFee) public view returns(uint256) {\r\n        require(tAmount <= _tTotal, \"Amount must be less than supply\");\r\n        if (!deductTransferFee) {\r\n            (uint256 rAmount,,,,,,) = _getValues(tAmount);\r\n            return rAmount;\r\n        } else {\r\n            (,uint256 rTransferAmount,,,,,) = _getValues(tAmount);\r\n            return rTransferAmount;\r\n        }\r\n    }\r\n\r\n    function tokenFromReflection(uint256 rAmount) public view returns(uint256) {\r\n        require(rAmount <= _rTotal, \"Amount must be less than total reflections\");\r\n        uint256 currentRate =  _getRate();\r\n        return rAmount.div(currentRate);\r\n    }\r\n\r\n    function excludeFromReward(address account) public onlyOwner() {\r\n        // require(account != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D, 'We can not exclude Uniswap router.');\r\n        require(!_isExcluded[account], \"Account is already excluded\");\r\n        if(_rOwned[account] > 0) {\r\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\r\n        }\r\n        _isExcluded[account] = true;\r\n        _excluded.push(account);\r\n    }\r\n\r\n    function includeInReward(address account) external onlyOwner() {\r\n        require(_isExcluded[account], \"Account is already excluded\");\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (_excluded[i] == account) {\r\n                _excluded[i] = _excluded[_excluded.length - 1];\r\n                _tOwned[account] = 0;\r\n                _isExcluded[account] = false;\r\n                _excluded.pop();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    function _transferBothExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity, uint256 tCharity) = _getValues(tAmount);\r\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\r\n        _takeCharity(tCharity);\r\n        _takeLiquidity(tLiquidity);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n    \r\n    function excludeFromFee(address account) public onlyOwner {\r\n        _isExcludedFromFee[account] = true;\r\n    }\r\n    \r\n    function includeInFee(address account) public onlyOwner {\r\n        _isExcludedFromFee[account] = false;\r\n    }\r\n    \r\n    function setTaxFeePercent(uint256 taxFee) external onlyOwner() {\r\n        _taxFee = taxFee;\r\n    }\r\n    \r\n    function setLiquidityFeePercent(uint256 liquidityFee) external onlyOwner() {\r\n        _liquidityFee = liquidityFee;\r\n    }\r\n   \r\n    function setMaxTxPercent(uint256 maxTxPercent) external onlyOwner() {\r\n        _maxTxAmount = _tTotal.mul(maxTxPercent).div(\r\n            10**2\r\n        );\r\n    }\r\n\r\n    function setSwapAndLiquifyEnabled(bool _enabled) public onlyOwner {\r\n        swapAndLiquifyEnabled = _enabled;\r\n        emit SwapAndLiquifyEnabledUpdated(_enabled);\r\n    }\r\n    \r\n     //to recieve ETH from uniswapV2Router when swaping\r\n    receive() external payable {}\r\n\r\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\r\n        _rTotal = _rTotal.sub(rFee);\r\n        _tFeeTotal = _tFeeTotal.add(tFee);\r\n    }\r\n\r\n    function _getValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256, uint256,uint256, uint256) {\r\n        (uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity, uint tCharity) = _getTValues(tAmount);\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, ) = _getRValues(tAmount, tFee, tLiquidity, tCharity);\r\n        return (rAmount, rTransferAmount, rFee, tTransferAmount, tFee, tLiquidity, tCharity);\r\n    }\r\n\r\n    function _getTValues(uint256 tAmount) private view returns (uint256, uint256, uint256, uint256) {\r\n        uint256 tFee = calculateTaxFee(tAmount);\r\n        uint256 tLiquidity = calculateLiquidityFee(tAmount);\r\n        uint256 tCharity = calculateCharityFee(tAmount);\r\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tLiquidity).sub(tCharity);\r\n        return (tTransferAmount, tFee, tLiquidity, tCharity);\r\n    }\r\n\r\n    function _getRValues(uint256 tAmount, uint256 tFee, uint256 tLiquidity, uint256 tCharity) private view returns (uint256, uint256, uint256, uint256) {\r\n        uint256 currentRate =  _getRate();\r\n        uint256 rAmount = tAmount.mul(currentRate);\r\n        uint256 rFee = tFee.mul(currentRate);\r\n        uint256 rLiquidity = tLiquidity.mul(currentRate);\r\n        uint256 rCharity = tCharity.mul(currentRate);\r\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rLiquidity).sub(rCharity);\r\n        return (rAmount, rTransferAmount, rFee, rCharity);\r\n    }\r\n\r\n    function _getRate() private view returns(uint256) {\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n        return rSupply.div(tSupply);\r\n    }\r\n\r\n    function _getCurrentSupply() private view returns(uint256, uint256) {\r\n        uint256 rSupply = _rTotal;\r\n        uint256 tSupply = _tTotal;      \r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (_rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply) return (_rTotal, _tTotal);\r\n            rSupply = rSupply.sub(_rOwned[_excluded[i]]);\r\n            tSupply = tSupply.sub(_tOwned[_excluded[i]]);\r\n        }\r\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\r\n        return (rSupply, tSupply);\r\n    }\r\n    \r\n    function _takeLiquidity(uint256 tLiquidity) private {\r\n        uint256 currentRate =  _getRate();\r\n        uint256 rLiquidity = tLiquidity.mul(currentRate);\r\n        _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity);\r\n        if(_isExcluded[address(this)])\r\n            _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity);\r\n    }\r\n    \r\n    function _takeCharity(uint256 tCharity) private {\r\n        uint256 currentRate =  _getRate();\r\n        uint256 rCharity = tCharity.mul(currentRate);\r\n        _rOwned[charityAddress] = _rOwned[charityAddress].add(rCharity);\r\n        if(_isExcluded[address(this)])\r\n            _tOwned[charityAddress] = _tOwned[charityAddress].add(tCharity);\r\n    }\r\n    \r\n    function calculateTaxFee(uint256 _amount) private view returns (uint256) {\r\n        return _amount.mul(_taxFee).div(\r\n            10**2\r\n        );\r\n    }\r\n\r\n    function calculateLiquidityFee(uint256 _amount) private view returns (uint256) {\r\n        return _amount.mul(_liquidityFee).div(\r\n            10**2\r\n        );\r\n    }\r\n    \r\n    function calculateCharityFee (uint256 _amount ) private view returns (uint256) {\r\n        return _amount.mul(_charityFee).div(\r\n            10**2\r\n        );\r\n    }\r\n    \r\n    function removeAllFee() private {\r\n        if(_taxFee == 0 && _liquidityFee == 0) return;\r\n        \r\n        _previousTaxFee = _taxFee;\r\n        _previousLiquidityFee = _liquidityFee;\r\n        \r\n        _taxFee = 0;\r\n        _liquidityFee = 0;\r\n    }\r\n    \r\n    function restoreAllFee() private {\r\n        _taxFee = _previousTaxFee;\r\n        _liquidityFee = _previousLiquidityFee;\r\n    }\r\n    \r\n    function isExcludedFromFee(address account) public view returns(bool) {\r\n        return _isExcludedFromFee[account];\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        if(from != owner() && to != owner())\r\n            require(amount <= _maxTxAmount, \"Transfer amount exceeds the maxTxAmount.\");\r\n\r\n        // is the token balance of this contract address over the min number of\r\n        // tokens that we need to initiate a swap + liquidity lock?\r\n        // also, don't get caught in a circular liquidity event.\r\n        // also, don't swap & liquify if sender is uniswap pair.\r\n        uint256 contractTokenBalance = balanceOf(address(this));\r\n        \r\n        if(contractTokenBalance >= _maxTxAmount)\r\n        {\r\n            contractTokenBalance = _maxTxAmount;\r\n        }\r\n        \r\n        bool overMinTokenBalance = contractTokenBalance >= numTokensSellToAddToLiquidity;\r\n        if (\r\n            overMinTokenBalance &&\r\n            !inSwapAndLiquify &&\r\n            from != uniswapV2Pair &&\r\n            swapAndLiquifyEnabled\r\n        ) {\r\n            contractTokenBalance = numTokensSellToAddToLiquidity;\r\n            //add liquidity\r\n            swapAndLiquify(contractTokenBalance);\r\n        }\r\n        \r\n        //indicates if fee should be deducted from transfer\r\n        bool takeFee = true;\r\n        \r\n        //if any account belongs to _isExcludedFromFee account then remove the fee\r\n        if(_isExcludedFromFee[from] || _isExcludedFromFee[to]){\r\n            takeFee = false;\r\n        }\r\n        \r\n        //transfer amount, it will take tax, burn, liquidity fee\r\n        _tokenTransfer(from,to,amount,takeFee);\r\n    }\r\n\r\n    function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {\r\n        uint256 half = contractTokenBalance.div(2);\r\n        uint256 otherHalf = contractTokenBalance.sub(half);\r\n        uint256 initialBalance = address(this).balance;\r\n\r\n        // swap tokens for ETH\r\n        swapTokensForEth(half); // <- this breaks the ETH -> HATE swap when swap+liquify is triggered\r\n\r\n        // how much ETH did we just swap into?\r\n        uint256 newBalance = address(this).balance.sub(initialBalance);\r\n\r\n        // add liquidity to uniswap\r\n        addLiquidity(otherHalf, newBalance);\r\n        \r\n        emit SwapAndLiquify(half, newBalance, otherHalf);\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private {\r\n        // generate the uniswap pair path of token -> weth\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n\r\n        // make the swap\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,              // accept any amount of ETH\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\r\n        // approve token transfer to cover all possible scenarios\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n\r\n        // add the liquidity\r\n        uniswapV2Router.addLiquidityETH{value: ethAmount}(\r\n            address(this),\r\n            tokenAmount,\r\n            0,              // slippage is unavoidable\r\n            0,              // slippage is unavoidable\r\n            owner(),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    //this method is responsible for taking all fee, if takeFee is true\r\n    function _tokenTransfer(address sender, address recipient, uint256 amount,bool takeFee) private {\r\n        if(!takeFee)\r\n            removeAllFee();\r\n        \r\n        if (_isExcluded[sender] && !_isExcluded[recipient]) {\r\n            _transferFromExcluded(sender, recipient, amount);\r\n        } else if (!_isExcluded[sender] && _isExcluded[recipient]) {\r\n            _transferToExcluded(sender, recipient, amount);\r\n        } else if (!_isExcluded[sender] && !_isExcluded[recipient]) {\r\n            _transferStandard(sender, recipient, amount);\r\n        } else if (_isExcluded[sender] && _isExcluded[recipient]) {\r\n            _transferBothExcluded(sender, recipient, amount);\r\n        } else {\r\n            _transferStandard(sender, recipient, amount);\r\n        }\r\n        \r\n        if(!takeFee)\r\n            restoreAllFee();\r\n    }\r\n\r\n    function _transferStandard(address sender, address recipient, uint256 tAmount) private {\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity, uint256 tCharity) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\r\n        _takeCharity(tCharity);\r\n        _takeLiquidity(tLiquidity);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _transferToExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity, uint256 tCharity) = _getValues(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount); \r\n        _takeCharity(tCharity);\r\n        _takeLiquidity(tLiquidity);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n    function _transferFromExcluded(address sender, address recipient, uint256 tAmount) private {\r\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee, uint256 tTransferAmount, uint256 tFee, uint256 tLiquidity, uint256 tCharity) = _getValues(tAmount);\r\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\r\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\r\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount); \r\n        _takeCharity(tCharity);\r\n        _takeLiquidity(tLiquidity);\r\n        _reflectFee(rFee, tFee);\r\n        emit Transfer(sender, recipient, tTransferAmount);\r\n    }\r\n\r\n\r\n    function changeCharityAddress(address payable _newaddress) public onlyOwner {\r\n        \r\n        charityAddress = _newaddress;\r\n    }\r\n\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minTokensBeforeSwap\",\"type\":\"uint256\"}],\"name\":\"MinTokensBeforeSwapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiqudity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"SwapAndLiquifyEnabledUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_charityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newaddress\",\"type\":\"address\"}],\"name\":\"changeCharityAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"charityAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"geUnlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deductTransferFee\",\"type\":\"bool\"}],\"name\":\"reflectionFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityFee\",\"type\":\"uint256\"}],\"name\":\"setLiquidityFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTxPercent\",\"type\":\"uint256\"}],\"name\":\"setMaxTxPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setSwapAndLiquifyEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"taxFee\",\"type\":\"uint256\"}],\"name\":\"setTaxFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAndLiquifyEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"}],\"name\":\"tokenFromReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "StarBase", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f18076b03801413dd6320ca5204997a32044ec444bcf8a56dc62e64050155612"}