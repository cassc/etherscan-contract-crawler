{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\ninterface ERC20Interface {\r\n    function totalSupply() external view returns (uint);\r\n\r\n    function balanceOf(address tokenOwner) external view returns (uint balance);\r\n\r\n    function transfer(address to, uint tokens) external returns (bool success);\r\n\r\n    function approve(\r\n        address spender,\r\n        uint tokens\r\n    ) external returns (bool success);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint tokens\r\n    ) external returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(\r\n        address indexed tokenOwner,\r\n        address indexed spender,\r\n        uint tokens\r\n    );\r\n}\r\n\r\ncontract SeedRound {\r\n    ERC20Interface public mmtToken;\r\n    ERC20Interface public usdtToken;\r\n\r\n    address public fundAddress;\r\n    address public owner;\r\n\r\n    uint256 public tokenPrice = 2e15;\r\n    uint256 public SaleBalance = 80e24;\r\n    uint256 public MINIMUM_PURCHASE = 10e18;\r\n    uint256 public MAXIMUM_PURCHASE = 2e22;\r\n    uint256 public VESTING_DURATION = 30 days;\r\n    uint256 public VESTING_PERIODS = 16;\r\n    uint256 public INITIAL_RELEASE_RATE = 4;\r\n\r\n    struct Vest {\r\n        uint256 reservedMMT;\r\n        uint256 sentUSDT;\r\n        uint256 vestedAmount;\r\n        uint256 startTime;\r\n        uint256 initialRelease;\r\n        uint256 monthlyReward;\r\n        uint256 lastClaimedDate;\r\n        uint256 claimedToken;\r\n    }\r\n\r\n    mapping(address => Vest) public userVesting;\r\n\r\n    event BuyToken(address indexed user, uint256 usdtToken, uint256 mmtToken);\r\n    event VestingToken(address indexed user, uint256 amount);\r\n    event ClaimTokens(address indexed user, uint256 mmtAmount);\r\n    event FundAddressUpdated(address newFundAddress);\r\n\r\n    address[] public vestedAddress;\r\n    bool public isActive = true;\r\n\r\n    constructor(\r\n        ERC20Interface _token,\r\n        ERC20Interface _usdt,\r\n        address _fundAddress\r\n    ) {\r\n        mmtToken = _token;\r\n        usdtToken = _usdt;\r\n        fundAddress = _fundAddress;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not Authorized\");\r\n        _;\r\n    }\r\n\r\n    function buyToken(uint256 usdtAmount) external {\r\n        require(isActive, \"Sale is not available\");\r\n        require(usdtAmount >= MINIMUM_PURCHASE, \"Require more than 10 USDT\");\r\n        require(usdtAmount <= MAXIMUM_PURCHASE, \"Require less than 20,000 USDT\");\r\n        require(fundAddress != address(0), \"FundAddress is not set\");\r\n\r\n        Vest storage vest = userVesting[msg.sender];\r\n        uint256 reservedAmount = (usdtAmount * 1e18) / tokenPrice;\r\n\r\n        require(\r\n            SaleBalance >= reservedAmount,\r\n            \"Not enough tokens in sale balance\"\r\n        );\r\n\r\n        vest.reservedMMT += reservedAmount;\r\n        vest.sentUSDT += usdtAmount;\r\n        SaleBalance -= reservedAmount;\r\n\r\n        require(\r\n            usdtToken.transferFrom(msg.sender, fundAddress, usdtAmount),\r\n            \"Transfer USDT Failed\"\r\n        );\r\n\r\n        emit BuyToken(msg.sender, usdtAmount, reservedAmount);\r\n    }\r\n\r\n\r\n    function setFundAddress(address _address) external onlyOwner {\r\n        fundAddress = _address;\r\n        emit FundAddressUpdated(_address);\r\n    }\r\n\r\n    function vestMMTToken(\r\n        address[] memory _address,\r\n        uint256[] memory _amount,\r\n        uint256 startTime\r\n    ) external onlyOwner {\r\n        uint256 totalAmount = 0;\r\n        for (uint256 i = 0; i < _address.length; i++) {\r\n            initVest(_address[i], _amount[i], startTime);\r\n            totalAmount += _amount[i];\r\n        }\r\n\r\n        require(\r\n            mmtToken.transferFrom(msg.sender, address(this), totalAmount),\r\n            \"Vesting Failed\"\r\n        );\r\n    }\r\n\r\n    function claimTokens() external {\r\n        Vest storage vest = userVesting[msg.sender];\r\n        require(vest.vestedAmount > 0, \"No vested Tokens are available\");\r\n        require(\r\n            block.timestamp >= vest.lastClaimedDate + VESTING_DURATION,\r\n            \"Vesting Period Amount\"\r\n        );\r\n\r\n        uint256 claimAmount = calculateClaimableToken(msg.sender);\r\n        vest.vestedAmount -= claimAmount;\r\n        vest.claimedToken += claimAmount;\r\n        vest.lastClaimedDate = block.timestamp;\r\n\r\n        require(mmtToken.transfer(msg.sender, claimAmount), \"Transfer failed\");\r\n        emit ClaimTokens(msg.sender, claimAmount);\r\n    }\r\n\r\n    function initVest(\r\n        address _address,\r\n        uint256 _amount,\r\n        uint256 startTime\r\n    ) internal {\r\n        Vest storage vest = userVesting[_address];\r\n        require(vest.vestedAmount == 0, \"Already Vested\");\r\n\r\n        vest.vestedAmount = _amount;\r\n        vest.reservedMMT -= _amount;\r\n        vest.startTime = startTime;\r\n        vest.initialRelease = (_amount * INITIAL_RELEASE_RATE) / 100;\r\n        vest.monthlyReward = (_amount - vest.initialRelease) / VESTING_PERIODS;\r\n        vest.claimedToken = 0;\r\n        vest.lastClaimedDate = startTime;\r\n\r\n        vestedAddress.push(_address);\r\n\r\n        emit VestingToken(_address, _amount);\r\n    }\r\n\r\n    function calculateClaimableToken(\r\n        address _address\r\n    ) internal view returns (uint256) {\r\n        Vest storage vest = userVesting[_address];\r\n        uint256 elapsedTime = block.timestamp - vest.lastClaimedDate;\r\n        uint256 periodsPassed = elapsedTime / VESTING_DURATION;\r\n        uint256 claimableToken = 0;\r\n\r\n        if (vest.claimedToken == 0) {\r\n            claimableToken = vest.initialRelease + periodsPassed * vest.monthlyReward;\r\n            if(claimableToken >= vest.vestedAmount) {\r\n                claimableToken = vest.vestedAmount;\r\n            }\r\n        } else {\r\n            claimableToken = periodsPassed * vest.monthlyReward;\r\n            if(claimableToken >= vest.vestedAmount - vest.claimedToken) {\r\n                claimableToken = vest.vestedAmount - vest.claimedToken;\r\n            }\r\n        }\r\n        return claimableToken;\r\n    }\r\n\r\n    function updateUserAddress(\r\n        address sourceAddress,\r\n        address targetAddress\r\n    ) external onlyOwner {\r\n        userVesting[targetAddress] = userVesting[sourceAddress];\r\n        delete userVesting[sourceAddress];\r\n    }\r\n\r\n    function setSaleStatus (bool status) external onlyOwner{\r\n        isActive = status;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract ERC20Interface\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract ERC20Interface\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fundAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdtToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mmtToken\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mmtAmount\",\"type\":\"uint256\"}],\"name\":\"ClaimTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newFundAddress\",\"type\":\"address\"}],\"name\":\"FundAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VestingToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_RELEASE_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXIMUM_PURCHASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_PURCHASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SaleBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VESTING_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VESTING_PERIODS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mmtToken\",\"outputs\":[{\"internalType\":\"contract ERC20Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setFundAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setSaleStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sourceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"name\":\"updateUserAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"contract ERC20Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userVesting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reservedMMT\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sentUSDT\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialRelease\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"monthlyReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimedDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedToken\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"vestMMTToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vestedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SeedRound", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000875f5f5a7c8823059e4d2bd8a8b35a180c2e0e8e00000000000000000000000055d398326f99059ff775485246999027b3197955000000000000000000000000540858c4c75d0cdd42265df904c9c23dc1a748c1", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://48a1499c100380254f66f2bfda5bd9a35c81ced1989b58a15000c7cfdf466f15"}