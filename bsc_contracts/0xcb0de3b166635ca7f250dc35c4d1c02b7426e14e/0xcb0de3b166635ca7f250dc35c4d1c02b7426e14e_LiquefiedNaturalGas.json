{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\ncontract LiquefiedNaturalGas {\r\n    mapping(address => uint) public balances;\r\n    mapping(address => mapping(address => uint)) public allowance;\r\n    uint public totalSupply = 53e9 * 10 ** 18; // Toplam arz\u0131 53 milyar olarak g\u00fcncelledik\r\n    string public name = \"Liquefied Natural Gas\";\r\n    string public symbol = \"LNG\";\r\n    uint public decimals = 18;\r\n\r\n    address public owner; // \r\n    address public burnAddress; //\r\n    address public feeAddress; // \r\n    uint public feePercentage; // \r\n    bool public tradingFrozen; // \r\n\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Burn(address indexed from, uint value); // Yakma i\u015flemi i\u00e7in yeni bir etkinlik ekledik\r\n    event FeeTransfer(address indexed from, address indexed to, uint value); // Komisyon transferi i\u00e7in yeni bir etkinlik ekledik\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n        balances[msg.sender] = totalSupply;\r\n\r\n        burnAddress = address(0x0); // Token yakma adresini varsay\u0131lan olarak s\u0131f\u0131ra ayarlad\u0131k\r\n        feeAddress = address(0x0); // Komisyon adresini varsay\u0131lan olarak s\u0131f\u0131ra ayarlad\u0131k\r\n        feePercentage = 2; // Varsay\u0131lan olarak komisyon y\u00fczdesini %2 olarak ayarlad\u0131k\r\n        tradingFrozen = false; // Ba\u015flang\u0131\u00e7ta al\u0131m sat\u0131m\u0131n dondurulmad\u0131\u011f\u0131n\u0131 varsayd\u0131k\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the contract owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    modifier notFrozen() {\r\n        require(!tradingFrozen, \"Trading is currently frozen\");\r\n        _;\r\n    }\r\n\r\n    function balanceOf(address owner) public view returns (uint) {\r\n        return balances[owner];\r\n    }\r\n\r\n    function transfer(address to, uint value) public notFrozen returns (bool) {\r\n        require(balanceOf(msg.sender) >= value, 'Balance too low');\r\n        require(to != address(0), \"Invalid transfer address\"); // Ge\u00e7ersiz transfer adresini kontrol ediyoruz\r\n\r\n        balances[to] += value;\r\n        balances[msg.sender] -= value;\r\n        emit Transfer(msg.sender, to, value);\r\n\r\n        if (to == burnAddress && burnAddress != address(0)) {\r\n            // Yakma adresine transfer yap\u0131ld\u0131\u011f\u0131nda tokenleri yakma i\u015flemini ger\u00e7ekle\u015ftiriyoruz\r\n            totalSupply -= value;\r\n            emit Burn(to, value);\r\n        }\r\n\r\n        // Komisyon hesaplamas\u0131 ve transferi\r\n        if (feeAddress != address(0) && feePercentage > 0) {\r\n            uint fee = (value * feePercentage) / 100;\r\n            uint netValue = value - fee;\r\n\r\n            balances[feeAddress] += fee;\r\n            emit FeeTransfer(msg.sender, feeAddress, fee);\r\n            emit Transfer(msg.sender, to, netValue); // Komisyon d\u00fc\u015f\u00fcld\u00fckten sonra transferi tekrar kaydediyoruz\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint value) public notFrozen returns (bool) {\r\n        require(balanceOf(from) >= value, 'Balance too low');\r\n        require(allowance[from][msg.sender] >= value, 'Allowance too low');\r\n        require(to != address(0), \"Invalid transfer address\");\r\n\r\n        balances[to] += value;\r\n        balances[from] -= value;\r\n        emit Transfer(from, to, value);\r\n\r\n        allowance[from][msg.sender] -= value;\r\n\r\n        if (to == burnAddress && burnAddress != address(0)) {\r\n            totalSupply -= value;\r\n            emit Burn(to, value);\r\n        }\r\n\r\n        if (feeAddress != address(0) && feePercentage > 0) {\r\n            uint fee = (value * feePercentage) / 100;\r\n            uint netValue = value - fee;\r\n\r\n            balances[feeAddress] += fee;\r\n            emit FeeTransfer(msg.sender, feeAddress, fee);\r\n            emit Transfer(from, to, netValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint value) public notFrozen returns (bool) {\r\n        allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    // Komisyon adresini ve y\u00fczdesini ayarlayan fonksiyon\r\n    function setFeeAddressAndPercentage(address _feeAddress, uint _feePercentage) public onlyOwner {\r\n        require(_feePercentage <= 5, \"Fee percentage cannot exceed 5%\"); // %5'ten fazla komisyon al\u0131nmas\u0131n\u0131 engelliyoruz\r\n        feeAddress = _feeAddress;\r\n        feePercentage = _feePercentage;\r\n    }\r\n\r\n    // Token yakma adresini ayarlayan fonksiyon\r\n    function setBurnAddress(address _burnAddress) public onlyOwner {\r\n        burnAddress = _burnAddress;\r\n    }\r\n\r\n    // Al\u0131m sat\u0131m\u0131 dondurma veya a\u00e7ma fonksiyonu\r\n    function setTradingFrozen(bool _frozen) public onlyOwner {\r\n        tradingFrozen = _frozen;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FeeTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_burnAddress\",\"type\":\"address\"}],\"name\":\"setBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercentage\",\"type\":\"uint256\"}],\"name\":\"setFeeAddressAndPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_frozen\",\"type\":\"bool\"}],\"name\":\"setTradingFrozen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LiquefiedNaturalGas", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7201b8bc8bd69cf71b16ae6eb46ad1e3089189180f9e1d3d8afb5d4a238e0440"}