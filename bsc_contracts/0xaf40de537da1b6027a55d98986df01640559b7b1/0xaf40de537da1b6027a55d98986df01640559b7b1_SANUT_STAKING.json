{"SourceCode": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity >= 0.5.0;\r\n\r\ninterface IBEP20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool);\r\n  \r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n  function burn(uint256 value) external returns (bool);\r\n  event Transfer(address indexed from,address indexed to,uint256 value);\r\n  event Approval(address indexed owner,address indexed spender,uint256 value);\r\n}\r\n\r\ncontract SANUT_STAKING{\r\n  \r\n    struct User {\r\n        uint id;\r\n     }\r\n    mapping(address => User) public users;\r\n    mapping(uint => address) public idToAddress;\r\n  \t\r\n    event Multisended(uint256 value , address indexed sender);\r\n    event Airdropped(address indexed _userAddress, uint256 _amount);\r\n\tevent Registration(address indexed  investor, address indexed  referral,uint256 investment,uint256 investmentToken);\r\n\tevent Reinvestment(string  investorId,uint256 investment,address indexed investor,uint256 investmentToken);\r\n\tevent WithDraw(address indexed  investor,uint256 WithAmt);\r\n\tevent MemberPayment(address indexed  investor,uint256 WithAmt,uint netAmt);\r\n\tevent Payment(uint256 NetQty);\r\n    event TokenBuy(address user,uint256 tokenQty,uint256 tokenRate);\r\n\t\r\n    using SafeMath for uint256;\r\n    IBEP20 private BUSDT; \r\n    address public owner;\r\n    address public AdminAddress;\r\n    uint256 public BusdToBusdtRate=1*1e18;  // 1 Busdt = 1 $\r\n    uint public  MINIMUM_BUY = 10*1e18;\r\n    uint public  MAXIMUM_BUY = 1000000*1e18 ;\r\n    uint public  JoinMinAmt = 12*1e18;\r\n   uint public lastUserId = 3100;\r\n\r\n   \r\n    constructor(address oAddress,IBEP20 _BUSDT,uint256 _lastUserId,address _AAddress) public\r\n    {\r\n        owner = oAddress;  \r\n        AdminAddress=_AAddress;\r\n         BUSDT = _BUSDT;\r\n         lastUserId=_lastUserId;\r\n\r\n        User memory user = User({\r\n            id: 1\r\n         });\r\n        users[oAddress] = user;\r\n        idToAddress[1] = oAddress;\r\n    }\r\n    \r\n    function NewRegistration(address referral,uint256 investmentBusd) public payable\r\n\t{\r\n        require(!isUserExists(msg.sender), \"user exists\");\r\n       uint256 investmentToken=((investmentBusd/BusdToBusdtRate)*1e18);  \r\n        require(investmentBusd>=JoinMinAmt,\"Invalid Joinging Amount\");\r\n\t\trequire(BUSDT.balanceOf(msg.sender)>=investmentBusd);\r\n\t\trequire(BUSDT.allowance(msg.sender,address(this))>=investmentBusd,\"Approve Your Token First\");\r\n\t    BUSDT.transferFrom(msg.sender, address(this), investmentBusd);\r\n\t\temit Registration(msg.sender, referral,investmentBusd,investmentToken);\r\n\r\n          User memory user = User({\r\n            id: lastUserId\r\n        });\r\n        users[msg.sender] = user;\r\n        idToAddress[lastUserId] = msg.sender;\r\n        lastUserId++;\r\n\r\n\t}\r\n    function isUserExists(address user) public view returns (bool) \r\n    {\r\n        return (users[user].id != 0);\r\n    }\r\n    function BusdtRate() public view returns (uint256) \r\n    {\r\n        return (BusdToBusdtRate);\r\n    }\r\n  \r\n\r\n\tfunction Investment(string memory investor,uint investmentBusd) public payable\r\n\t{\r\n        //require(isUserExists(msg.sender), \"user Not exists\");\r\n    \r\n        uint256 investmentToken=((investmentBusd/BusdToBusdtRate)*1e18);  \r\n        require(investmentBusd>=JoinMinAmt,\"Invalid Joinging Amount\");\r\n\t\trequire(BUSDT.balanceOf(msg.sender)>=investmentBusd);\r\n\t\trequire(BUSDT.allowance(msg.sender,address(this))>=investmentBusd,\"Approve Your Token First\");\r\n\t\tBUSDT.transferFrom(msg.sender ,address(this),investmentBusd);\r\n\t\temit Reinvestment( investor,investmentBusd,msg.sender,investmentToken);\r\n\t}\r\n\r\n    function multisendBNB(address payable[]  memory  _contributors, uint256[] memory _balances) public payable {\r\n        uint256 total = msg.value;\r\n        uint256 i = 0;\r\n        for (i; i < _contributors.length; i++) {\r\n            require(total >= _balances[i] );\r\n            total = total.sub(_balances[i]);\r\n            _contributors[i].transfer(_balances[i]);\r\n        }\r\n       \r\n    }\r\n    \r\n    function multisendToken(address payable[]  memory  _contributors, uint256[] memory _balances, uint256 totalQty,uint256[] memory NetAmt) public payable {\r\n    \tuint256 total = totalQty;\r\n        uint256 i = 0;\r\n        for (i; i < _contributors.length; i++) {\r\n            require(total >= _balances[i]);\r\n            total = total.sub(_balances[i]);\r\n            BUSDT.transferFrom(msg.sender, _contributors[i], _balances[i]);\r\n\t\t\temit MemberPayment(  _contributors[i],_balances[i],NetAmt[i]);\r\n        }\r\n\t\temit Payment(totalQty);\r\n        \r\n    }\r\n    \r\n\t function multisendWithdraw(address payable[]  memory  _contributors, uint256[] memory _balances) public payable {\r\n    \trequire(msg.sender == owner, \"onlyOwner\");\r\n        uint256 i = 0;\r\n        for (i; i < _contributors.length; i++) {\r\n              BUSDT.transfer(_contributors[i], _balances[i]);\r\n        }\r\n        \r\n    }\r\n\r\n\t \r\n    \r\n    function withdrawLostBNBFromBalance(address payable _sender) public {\r\n        require(msg.sender == owner, \"onlyOwner\");\r\n        _sender.transfer(address(this).balance);\r\n    }\r\n    \r\n  \r\n    function withdrawincomeBusdt(address payable _userAddress,uint256 WithAmt) public {\r\n        require(msg.sender == AdminAddress, \"onlyOwner\");\r\n        BUSDT.transferFrom(msg.sender,_userAddress, WithAmt);\r\n        emit WithDraw(_userAddress,WithAmt);\r\n    }\r\n     \r\n      modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\t\r\n    function withdrawBusdt(uint256 QtyAmt) external   onlyOwner\r\n\t{\r\n        // require(msg.sender == owner, \"onlyOwner\");\r\n        BUSDT.transfer(owner,QtyAmt*1e18);\r\n\t}\r\n    function withdrawLostTokenFromBalance(uint256 QtyAmt,IBEP20 _TOKAN) public \r\n\t{\r\n        require(msg.sender == owner, \"onlyOwner\");\r\n        _TOKAN.transfer(owner,QtyAmt*1e18);\r\n\t}\r\n\t\r\n     function SetTokenRate(uint256 _JoinMinAmt,uint256 _busdbusdtRate) public {\r\n        require(msg.sender == owner, \"onlyOwner\");\r\n        JoinMinAmt=_JoinMinAmt;\r\n        BusdToBusdtRate=_busdbusdtRate;\r\n      \r\n    }\r\n     function SetBuyToken(uint256 _minimumBuy,uint256 _maximumBuy) public {\r\n        require(msg.sender == owner, \"onlyOwner\");\r\n        MINIMUM_BUY=_minimumBuy;\r\n        MAXIMUM_BUY=_maximumBuy;\r\n    }\r\n\r\n      function ChangeOwner(address newOwner) public {\r\n        require(msg.sender == owner, \"onlyOwner\");\r\n        owner=newOwner;\r\n    \r\n    }\r\n     function ChangeAdmin(address newAdmin) public {\r\n        require(msg.sender == owner, \"onlyOwner\");\r\n        AdminAddress=newAdmin;\r\n    \r\n    }\r\n}\r\n\r\n\r\n/**     \r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a); \r\n    return c;\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oAddress\",\"type\":\"address\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_BUSDT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lastUserId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_AAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Airdropped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"WithAmt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"netAmt\",\"type\":\"uint256\"}],\"name\":\"MemberPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Multisended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"NetQty\",\"type\":\"uint256\"}],\"name\":\"Payment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investmentToken\",\"type\":\"uint256\"}],\"name\":\"Registration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"investorId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investment\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investmentToken\",\"type\":\"uint256\"}],\"name\":\"Reinvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenQty\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenRate\",\"type\":\"uint256\"}],\"name\":\"TokenBuy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"WithAmt\",\"type\":\"uint256\"}],\"name\":\"WithDraw\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"AdminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BusdToBusdtRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BusdtRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"ChangeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"investor\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"investmentBusd\",\"type\":\"uint256\"}],\"name\":\"Investment\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JoinMinAmt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAXIMUM_BUY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_BUY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"investmentBusd\",\"type\":\"uint256\"}],\"name\":\"NewRegistration\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumBuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maximumBuy\",\"type\":\"uint256\"}],\"name\":\"SetBuyToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_JoinMinAmt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_busdbusdtRate\",\"type\":\"uint256\"}],\"name\":\"SetTokenRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isUserExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastUserId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"_contributors\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_balances\",\"type\":\"uint256[]\"}],\"name\":\"multisendBNB\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"_contributors\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"totalQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"NetAmt\",\"type\":\"uint256[]\"}],\"name\":\"multisendToken\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"_contributors\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_balances\",\"type\":\"uint256[]\"}],\"name\":\"multisendWithdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"QtyAmt\",\"type\":\"uint256\"}],\"name\":\"withdrawBusdt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"withdrawLostBNBFromBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"QtyAmt\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_TOKAN\",\"type\":\"address\"}],\"name\":\"withdrawLostTokenFromBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"WithAmt\",\"type\":\"uint256\"}],\"name\":\"withdrawincomeBusdt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SANUT_STAKING", "CompilerVersion": "v0.5.16+commit.9c3226ce", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000039fce4c09e55d3b087f6657ec96178878e4cf97d00000000000000000000000055d398326f99059ff775485246999027b31979550000000000000000000000000000000000000000000000000000000000000c1c000000000000000000000000c95e9785e8934e2ad283af8a8b1ee292f256cb0f", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://95ee638dde975dd599b5f828d8c6df27e95f304e0ca18acd186c6f4b1b0a913c"}