{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/pauseGuardian.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IPausable {\\n    function _setMintPaused(address target, bool _paused) external;\\n}\\n\\ncontract EmergencyPause {\\n    address public owner;\\n    mapping(address => bool) public admins;\\n\\n    event AdminAdded(address indexed admin);\\n    event AdminRemoved(address indexed admin);\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"pauseGuardian: Not the contract owner\\\");\\n        _;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(admins[msg.sender], \\\"pauseGuardian: Not an admin\\\");\\n        _;\\n    }\\n\\n    constructor() {\\n        owner = msg.sender;\\n        admins[msg.sender] = true;\\n    }\\n\\n    function addAdmin(address _admin) external onlyOwner {\\n        require(_admin != address(0), \\\"pauseGuardian: Invalid admin address\\\");\\n        admins[_admin] = true;\\n        emit AdminAdded(_admin);\\n    }\\n\\n    function removeAdmin(address _admin) external onlyOwner {\\n        require(admins[_admin], \\\"pauseGuardian: Not an admin\\\");\\n        delete admins[_admin];\\n        emit AdminRemoved(_admin);\\n    }\\n\\n    function emergencyPause(address pausableContract, address[] memory targets) external onlyAdmin {\\n        for (uint256 i = 0; i < targets.length; i++) {\\n            IPausable(pausableContract)._setMintPaused(targets[i], true);\\n        }\\n    }\\n\\n    function emergencyUnpause(address pausableContract, address[] memory targets) external onlyAdmin {\\n        for (uint256 i = 0; i < targets.length; i++) {\\n            IPausable(pausableContract)._setMintPaused(targets[i], false);\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pausableContract\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"}],\"name\":\"emergencyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pausableContract\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"}],\"name\":\"emergencyUnpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "EmergencyPause", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}