{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.4;\r\n\r\ncontract Xoxo {\r\n    mapping(address => uint) public balances;\r\n    uint public totalSupply = 10e9 * 10 ** 18;\r\n    string public name = \"Xoxo Network\";\r\n    string public symbol = \"XoXo\";\r\n    uint public decimals = 18;\r\n\r\n    uint public commissionRate = 2;\r\n    address public commissionAddress;\r\n    uint public burnRate = 1;\r\n    address public burnAddress = 0x000000000000000000000000000000000000dEaD;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    constructor() {\r\n        balances[msg.sender] = totalSupply;\r\n        commissionAddress = msg.sender;\r\n    }\r\n\r\n    function balanceOf(address owner) public view returns(uint) {\r\n        return balances[owner];\r\n    }\r\n\r\n    function transfer(address to, uint value) public returns(bool) {\r\n    require(balanceOf(msg.sender) >= value, 'Insufficient balance');\r\n    uint commission = (value * commissionRate) / 100;\r\n    uint transferValue = value - commission;\r\n\r\n    balances[to] += transferValue;\r\n    balances[msg.sender] -= value;\r\n    emit Transfer(msg.sender, to, transferValue);\r\n\r\n    uint commissionAmount = (value * commissionRate) / 100;\r\n    uint burnAmount = (value * burnRate) / 100;\r\n    uint finalTransferValue = value - commissionAmount;\r\n\r\n    balances[commissionAddress] += commissionAmount;\r\n    emit Transfer(msg.sender, commissionAddress, commissionAmount);\r\n\r\n    // Yak\u0131lma i\u015flemi\r\n    balances[burnAddress] += burnAmount;\r\n    emit Transfer(msg.sender, burnAddress, burnAmount);\r\n\r\n    return true;\r\n}\r\n\r\n\r\n    function burn(uint amount) public {\r\n        require(balances[msg.sender] >= amount, \"Insufficient balance to burn\");\r\n        balances[msg.sender] -= amount;\r\n        balances[burnAddress] += amount;\r\n        emit Transfer(msg.sender, burnAddress, amount);\r\n    }\r\n\r\n    function setCommission(address _commissionAddress, uint _commissionRate) public {\r\n        require(msg.sender == commissionAddress, \"Only the current commission address can change the commission settings\");\r\n        commissionAddress = _commissionAddress;\r\n        commissionRate = _commissionRate;\r\n    }\r\n\r\n    function setBurnRate(uint _burnRate) public {\r\n        require(msg.sender == commissionAddress, \"Only the current commission address can change the burn rate\");\r\n        burnRate = _burnRate;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commissionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnRate\",\"type\":\"uint256\"}],\"name\":\"setBurnRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_commissionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_commissionRate\",\"type\":\"uint256\"}],\"name\":\"setCommission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Xoxo", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7427bb9ee050335ddf614ed833400b091d66790cd5dddeffb3fa4ba77ffca098"}