{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, 'SafeMath: addition overflow');\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, 'SafeMath: subtraction overflow');\r\n    }\r\n\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, 'SafeMath: multiplication overflow');\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, 'SafeMath: division by zero');\r\n    }\r\n\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, 'SafeMath: modulo by zero');\r\n    }\r\n\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n\r\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        z = x < y ? x : y;\r\n    }\r\n\r\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint256 x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract ReentrancyGuard {\r\n\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    modifier nonReentrant() {\r\n\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n\r\ninterface IBEP20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function decimals() external view returns (uint8);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function name() external view returns (string memory);\r\n\r\n    function getOwner() external view returns (address);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\ncontract ASIMining is Ownable, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    \r\n    IBEP20 public USDT = IBEP20(0x55d398326f99059fF775485246999027B3197955);\r\n    IBEP20 public ASI = IBEP20(0x6A86f028dfE7e0dbC3F72993864126f3af5Ea2F3);\r\n    IBEP20 public DOGE = IBEP20(0xbA2aE424d960c26247Dd6c32edC70B295c744C43);\r\n    \r\n    uint256 public asiPrice = 5;\r\n    uint256 public decimalASIPrice = 1000;\r\n\r\n    uint256 public dogePrice = 73;\r\n    uint256 public decimalDOGEPrice = 1000;\r\n\r\n    uint256 public PACKAGE_1 = 100;\r\n    uint256 public PACKAGE_2 = 500;\r\n    uint256 public PACKAGE_3 = 2000;\r\n    uint256 public PACKAGE_4 = 5000;\r\n    uint256 public PACKAGE_5 = 10000;\r\n    uint256 public PACKAGE_6 = 20000;\r\n    uint256 public PACKAGE_7 = 50000;\r\n\r\n    uint256 public WITHDRAW_PERIOD_1 = 450 days;\r\n    uint256 public WITHDRAW_PERIOD_2 = 450 days;\r\n    uint256 public WITHDRAW_PERIOD_3 = 480 days;\r\n    uint256 public WITHDRAW_PERIOD_4 = 480 days;\r\n    uint256 public WITHDRAW_PERIOD_5 = 480 days;\r\n    uint256 public WITHDRAW_PERIOD_6 = 510 days;\r\n    uint256 public WITHDRAW_PERIOD_7 = 600 days;\r\n\r\n    uint256 public PACKAGE_RATE_1 = 8;\r\n    uint256 public PACKAGE_RATE_2 = 12;\r\n    uint256 public PACKAGE_RATE_3 = 14;\r\n    uint256 public PACKAGE_RATE_4 = 16;\r\n    uint256 public PACKAGE_RATE_5 = 18;\r\n    uint256 public PACKAGE_RATE_6 = 20;\r\n    uint256 public PACKAGE_RATE_7 = 20;\r\n\r\n    uint256 public PACKAGE_RATE_COMPANY_1 = 8;\r\n    uint256 public PACKAGE_RATE_COMPANY_2 = 12; // 10\r\n    uint256 public PACKAGE_RATE_COMPANY_3 = 14; // 13\r\n    uint256 public PACKAGE_RATE_COMPANY_4 = 16; // 15\r\n    uint256 public PACKAGE_RATE_COMPANY_5 = 18; // 17\r\n    uint256 public PACKAGE_RATE_COMPANY_6 = 20; // 18\r\n    uint256 public PACKAGE_RATE_COMPANY_7 = 20; // 18\r\n\r\n    uint256 public CLAIM_FEE = 2;\r\n\r\n    struct UserInfo {\r\n        uint256 balanceASI;\r\n        uint256 packageASI;\r\n        uint256 miningASIAt;\r\n        bool isMiningASI;\r\n        uint256 bonusDebtASI;\r\n        bool isCompanyMiningASI;\r\n        uint256 bonusUSDT;\r\n        uint256 bonusASI;\r\n        uint256 lockASI; \r\n    }\r\n\r\n    mapping(address => UserInfo) public userInfo;\r\n\r\n    event RescueFundsUSDT(address indexed owner, address to);\r\n    event RescueFundsASI(address indexed owner, address to);\r\n    event SetBonusASI(address indexed owner, address account, uint256 bonusAmount);\r\n    event SetBonusUSDT(address indexed owner, address account, uint256 bonusAmount);\r\n    event AddUserMiningASI(address indexed owner, address account, uint256 _balanceASI, uint256 _miningASIAt, bool _isMiningASI, \r\n    uint256 _packageASI, uint256 _bonusDebtASI, bool _isCompanyMiningASI, uint256 _lockASI);\r\n    event RemoveUserInfo(address indexed owner, address account);\r\n    event BuyMiningPackage(address indexed owner, uint256 tokenType, uint256 packageType, uint256 amount, bool isCompany);\r\n    event Withdraw(address indexed owner);\r\n    event Claim(address indexed owner, uint256 tokenClaim);\r\n    event ClaimBonus(address indexed owner, uint256 tokenClaim);\r\n\r\n    // VIEWS\r\n    function balanceUSDT() public view returns(uint256) {\r\n        return USDT.balanceOf(address(this));\r\n    }\r\n\r\n    function balanceASI() public view returns(uint256) {\r\n        return ASI.balanceOf(address(this));\r\n    }\r\n\r\n    function balanceASIOfUser(address account) public view returns(uint256) {\r\n        return ASI.balanceOf(account);\r\n    }\r\n\r\n    function balanceUSDTOfUser(address account) public view returns(uint256) {\r\n        return USDT.balanceOf(account);\r\n    }\r\n\r\n    function calculateBonus(address account) public view returns(uint256) {\r\n        UserInfo storage user = userInfo[account];\r\n\r\n        if(user.balanceASI > 0) {\r\n            uint256 dayBonus = 0;\r\n            uint256 timestampBonus = block.timestamp.sub(user.miningASIAt);\r\n            \r\n            if(timestampBonus > 86400) {\r\n                uint256 modBonus = timestampBonus.mod(86400);\r\n                uint256 modBonusTimeStamp = timestampBonus.sub(modBonus);\r\n                dayBonus = modBonusTimeStamp.div(86400);\r\n            } else {\r\n                return 0;\r\n            }\r\n\r\n            if(user.packageASI == 1) {\r\n                if(user.isCompanyMiningASI == true) {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_COMPANY_1).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                } else {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_1).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                }\r\n            } else if (user.packageASI == 2) {\r\n                if(user.isCompanyMiningASI == true) {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_COMPANY_2).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                } else {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_2).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                }\r\n            } else if (user.packageASI == 3) {\r\n                if(user.isCompanyMiningASI == true) {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_COMPANY_3).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                } else {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_3).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                }\r\n            } else if (user.packageASI == 4) {\r\n                if(user.isCompanyMiningASI == true) {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_COMPANY_4).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                } else {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_4).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                }\r\n            } else if (user.packageASI == 5) {\r\n                if(user.isCompanyMiningASI == true) {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_COMPANY_5).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                } else {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_5).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                }\r\n            } else if (user.packageASI == 6) {\r\n                if(user.isCompanyMiningASI == true) {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_COMPANY_6).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                } else {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_6).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                }\r\n            } else {\r\n                if(user.isCompanyMiningASI == true) {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_COMPANY_7).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                } else {\r\n                    return user.balanceASI.mul(PACKAGE_RATE_7).div(100).div(30).mul(dayBonus).sub(user.bonusDebtASI);\r\n                }\r\n            }\r\n        } else {\r\n            return 0;\r\n        }\r\n        \r\n    }\r\n\r\n    function checkWithdraw(address account) public view returns(bool) {\r\n        UserInfo storage user = userInfo[account];\r\n        if(user.packageASI == 1) {\r\n            if(user.miningASIAt.add(WITHDRAW_PERIOD_1) > block.timestamp) {\r\n                return false;\r\n            }\r\n        } else if (user.packageASI == 2) {\r\n            if(user.miningASIAt.add(WITHDRAW_PERIOD_2) > block.timestamp) {\r\n                return false;\r\n            }\r\n        } else if (user.packageASI == 3) {\r\n            if(user.miningASIAt.add(WITHDRAW_PERIOD_3) > block.timestamp) {\r\n                return false;\r\n            }\r\n        } else if (user.packageASI == 4) {\r\n            if(user.miningASIAt.add(WITHDRAW_PERIOD_4) > block.timestamp) {\r\n                return false;\r\n            }\r\n        } else if (user.packageASI == 5) {\r\n            if(user.miningASIAt.add(WITHDRAW_PERIOD_5) > block.timestamp) {\r\n                return false;\r\n            }\r\n        } else if (user.packageASI == 6) {\r\n            if(user.miningASIAt.add(WITHDRAW_PERIOD_6) > block.timestamp) {\r\n                return false;\r\n            }\r\n        } else {\r\n            if(user.miningASIAt.add(WITHDRAW_PERIOD_7) > block.timestamp) {\r\n                return false;\r\n            }\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n    // OWNER\r\n    function addUserMiningASI(address account, uint256 _balanceASI, uint256 _miningASIAt, bool _isMiningASI, \r\n    uint256 _packageASI, uint256 _bonusDebtASI, bool _isCompanyMiningASI, uint256 _lockASI) external onlyOwner {\r\n        userInfo[account].packageASI = _packageASI;\r\n        userInfo[account].isMiningASI = _isMiningASI;\r\n        userInfo[account].balanceASI = _balanceASI;\r\n        userInfo[account].miningASIAt = _miningASIAt;\r\n        userInfo[account].bonusDebtASI = _bonusDebtASI;\r\n        userInfo[account].isCompanyMiningASI = _isCompanyMiningASI;\r\n        userInfo[account].lockASI = _lockASI;\r\n\r\n        emit AddUserMiningASI(msg.sender, account, _balanceASI, _miningASIAt, _isMiningASI, _packageASI, _bonusDebtASI, _isCompanyMiningASI, _lockASI);\r\n    }\r\n\r\n    function removeUserInfo(address account) external onlyOwner {\r\n        delete userInfo[account];\r\n\r\n        emit RemoveUserInfo(msg.sender, account);\r\n    }\r\n\r\n    function rescueFundsUSDT(address to) external onlyOwner {\r\n        uint256 bal = balanceUSDT();\r\n        require(bal > 0, \"dont have a USDT\");\r\n        USDT.transfer(to, bal);\r\n\r\n        emit RescueFundsUSDT(msg.sender, to);\r\n    }\r\n\r\n    function rescueFundsASI(address to) external onlyOwner {\r\n        uint256 bal = balanceASI();\r\n        require(bal > 0, \"dont have a ASI\");\r\n        ASI.transfer(to, bal);\r\n\r\n        emit RescueFundsASI(msg.sender, to);\r\n    }\r\n\r\n    function setToken(uint8 tag,address value) public onlyOwner returns(bool) {\r\n        if(tag == 1) {\r\n            USDT = IBEP20(value);\r\n        } else if (tag == 2){\r\n            ASI = IBEP20(value);\r\n        } else if (tag == 3) {\r\n            DOGE = IBEP20(value);\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n    function set(uint8 tag,uint256 value) public onlyOwner returns(bool) {\r\n        if(tag == 1) {\r\n            asiPrice = value;\r\n        } else if(tag == 2){\r\n            decimalASIPrice = value;\r\n        } else if(tag == 3){\r\n            dogePrice = value;\r\n        }else if(tag == 4){\r\n            decimalDOGEPrice = value;\r\n        }else if(tag == 5){\r\n            PACKAGE_1 = value;\r\n        }else if(tag == 6){\r\n            PACKAGE_2 = value;\r\n        }else if(tag == 7){\r\n            PACKAGE_3 = value;\r\n        } else if (tag == 8) {\r\n            PACKAGE_4 = value;\r\n        } else if (tag == 9) {\r\n            PACKAGE_5 = value;\r\n        } else if (tag == 10) {\r\n            PACKAGE_6 = value;\r\n        } else if (tag == 11) {\r\n            PACKAGE_7 = value;\r\n        } else if (tag == 12) {\r\n            PACKAGE_RATE_1 = value;\r\n        } else if (tag == 13) {\r\n            PACKAGE_RATE_2 = value;\r\n        } else if (tag == 14) {\r\n            PACKAGE_RATE_3 = value;\r\n        } else if (tag == 15) {\r\n            PACKAGE_RATE_4 = value;\r\n        } else if (tag == 16) {\r\n            PACKAGE_RATE_5 = value;\r\n        } else if (tag == 17) {\r\n            PACKAGE_RATE_6 = value;\r\n        } else if (tag == 18) {\r\n            PACKAGE_RATE_7 = value;\r\n        } else if (tag == 19) {\r\n            PACKAGE_RATE_COMPANY_1 = value;\r\n        } else if (tag == 20) {\r\n            PACKAGE_RATE_COMPANY_2 = value;\r\n        } else if (tag == 21) {\r\n            PACKAGE_RATE_COMPANY_3 = value;\r\n        } else if (tag == 22) {\r\n            PACKAGE_RATE_COMPANY_4 = value;\r\n        } else if (tag == 23) {\r\n            PACKAGE_RATE_COMPANY_5 = value;\r\n        } else if (tag == 24) {\r\n            PACKAGE_RATE_COMPANY_6 = value;\r\n        } else if (tag == 25) {\r\n            PACKAGE_RATE_COMPANY_7 = value;\r\n        } else if (tag == 26) {\r\n            WITHDRAW_PERIOD_1 = value;\r\n        } else if (tag == 27) {\r\n            WITHDRAW_PERIOD_2 = value;\r\n        } else if (tag == 28) {\r\n            WITHDRAW_PERIOD_3 = value;\r\n        } else if (tag == 29) {\r\n            WITHDRAW_PERIOD_4 = value;\r\n        } else if (tag == 30) {\r\n            WITHDRAW_PERIOD_5 = value;\r\n        } else if (tag == 31) {\r\n            WITHDRAW_PERIOD_6 = value;\r\n        } else if (tag == 32) {\r\n            WITHDRAW_PERIOD_7 = value;\r\n        } else if (tag == 33) {\r\n            CLAIM_FEE = value;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n    function setBonusASI(address account, uint256 bonusAmount) external onlyOwner {\r\n        userInfo[account].bonusASI = bonusAmount;\r\n\r\n        emit SetBonusASI(msg.sender, account, bonusAmount);\r\n    }\r\n\r\n    function setBonusUSDT(address account, uint256 bonusAmount) external onlyOwner {\r\n        userInfo[account].bonusUSDT = bonusAmount;\r\n\r\n        emit SetBonusUSDT(msg.sender, account, bonusAmount);\r\n    }\r\n\r\n    /* --EXTERNAL-- */\r\n\r\n    function buyMiningPackage(uint256 tokenType, uint256 packageType, uint256 amount, bool isCompany) public nonReentrant returns(bool) {\r\n        require(amount > 0, \"amount must greater than zero\");\r\n        require(msg.sender != address(0), \"account must not zero address\");\r\n        UserInfo storage user = userInfo[msg.sender];\r\n\r\n        if(packageType == 1) {\r\n            require(amount >= PACKAGE_1.mul(10**18), \"amout must greater than package amount\");\r\n        } else if (packageType == 2) {\r\n            require(amount >= PACKAGE_2.mul(10**18), \"amout must greater than package amount\");\r\n        } else if (packageType == 3) {\r\n            require(amount >= PACKAGE_3.mul(10**18), \"amout must greater than package amount\");\r\n        } else if (packageType == 4) {\r\n            require(amount >= PACKAGE_4.mul(10**18), \"amout must greater than package amount\");\r\n        } else if (packageType == 5) {\r\n            require(amount >= PACKAGE_5.mul(10**18), \"amout must greater than package amount\");\r\n        } else if (packageType == 6) {\r\n            require(amount >= PACKAGE_6.mul(10**18), \"amout must greater than package amount\");\r\n        } else if (packageType == 7) {\r\n            require(amount >= PACKAGE_7.mul(10**18), \"amout must greater than package amount\");\r\n        }\r\n\r\n        if(tokenType == 1) { // ASI\r\n            require(balanceASIOfUser(msg.sender) >= amount.mul(decimalASIPrice).div(asiPrice), \"balance ASI is not enough\");\r\n\r\n            if(user.balanceASI > 0) {\r\n                uint256 oldBonus = calculateBonus(msg.sender);\r\n                uint256 oldBonusASI = oldBonus.mul(decimalASIPrice).div(asiPrice);\r\n                if(oldBonusASI > 0) {\r\n                    userInfo[msg.sender].lockASI = userInfo[msg.sender].lockASI.add(oldBonusASI.div(5));\r\n                    USDT.transfer(msg.sender, oldBonus.sub(oldBonus.div(5)));\r\n                }\r\n            }\r\n\r\n            user.packageASI = packageType;\r\n            user.balanceASI = user.balanceASI.add(amount);\r\n            user.miningASIAt = block.timestamp;\r\n            user.bonusDebtASI = 0;\r\n            user.isMiningASI = true;\r\n            user.isCompanyMiningASI = isCompany;\r\n            \r\n            \r\n            ASI.transferFrom(msg.sender, address(this), amount.mul(decimalASIPrice).div(asiPrice));\r\n\r\n        } else if (tokenType == 2) { // USDT\r\n            require(balanceUSDTOfUser(msg.sender) >= amount, \"balance USDT is not enough\");\r\n\r\n            if(user.balanceASI > 0) {\r\n                uint256 oldBonus = calculateBonus(msg.sender);\r\n                uint256 oldBonusASI = oldBonus.mul(decimalASIPrice).div(asiPrice);\r\n                if(oldBonusASI > 0) {\r\n                    userInfo[msg.sender].lockASI = userInfo[msg.sender].lockASI.add(oldBonusASI.div(5));\r\n                    USDT.transfer(msg.sender, oldBonus.sub(oldBonus.div(5)));\r\n                }\r\n            }\r\n\r\n            user.packageASI = packageType;\r\n            user.balanceASI = user.balanceASI.add(amount.mul(120).div(100));\r\n            user.miningASIAt = block.timestamp;\r\n            user.bonusDebtASI = 0;\r\n            user.isMiningASI = true;\r\n            user.isCompanyMiningASI = isCompany;\r\n            \r\n\r\n            USDT.transferFrom(msg.sender, address(this), amount);\r\n        }\r\n\r\n        emit BuyMiningPackage(msg.sender, tokenType, packageType, amount, isCompany);\r\n        return true;\r\n    }\r\n\r\n    function withdraw() public {\r\n        _withdraw(msg.sender);\r\n    }\r\n\r\n    function claim(uint256 tokenClaim) public {\r\n        _claim(msg.sender, tokenClaim);\r\n    }\r\n\r\n    function claimBonus(uint256 tokenClaim) public nonReentrant returns(bool) {\r\n        uint256 bonusReturn = 0;\r\n        if(tokenClaim == 1) { // ASI\r\n            bonusReturn = userInfo[msg.sender].bonusASI.sub(userInfo[msg.sender].bonusASI.mul(CLAIM_FEE).div(100));\r\n            require(bonusReturn > 0, \"bonus must be greater than zero\");\r\n            userInfo[msg.sender].bonusASI = 0;\r\n            ASI.transfer(msg.sender, bonusReturn);\r\n\r\n        } else if (tokenClaim == 2) { // USDT\r\n            bonusReturn = userInfo[msg.sender].bonusUSDT.sub(userInfo[msg.sender].bonusUSDT.mul(CLAIM_FEE).div(100));\r\n            require(bonusReturn > 0, \"bonus must be greater than zero\");\r\n            userInfo[msg.sender].bonusUSDT = 0;\r\n            USDT.transfer(msg.sender, bonusReturn);\r\n\r\n        }\r\n        emit ClaimBonus(msg.sender, tokenClaim);\r\n        return true;\r\n    }\r\n\r\n    /* --INTERNAL-- */\r\n\r\n    function _withdraw(address account) private nonReentrant {\r\n        UserInfo storage user = userInfo[account];\r\n        require(account != address(0), \"account must not zero address\");\r\n        require(user.balanceASI > 0, \"sender dont have a mining ASI\");\r\n\r\n        if(checkWithdraw(account) == true) {\r\n            uint256 amount = user.balanceASI;\r\n            uint256 balUSDT = balanceUSDT();\r\n            require(balUSDT >= amount, \"smartcontract is not enough USDT\");\r\n            user.balanceASI = 0;\r\n            user.miningASIAt = 0;\r\n            user.bonusDebtASI = 0;\r\n            user.isMiningASI = false;\r\n            user.packageASI = 0;\r\n            USDT.transfer(account, amount);\r\n        }\r\n        \r\n        emit Withdraw(account);\r\n    }\r\n\r\n    function _claim(address account, uint256 tokenClaim) private nonReentrant {\r\n        uint256 bonus = 0;\r\n        uint256 bonusReturn = 0;\r\n        UserInfo storage user = userInfo[account];\r\n        require(user.balanceASI > 0, \"user is not mining\");\r\n        bonus = calculateBonus(account);\r\n        require(bonus > 0, \"bonus must be greater than zero\");\r\n\r\n        bonusReturn = bonus.sub(bonus.mul(CLAIM_FEE).div(100));\r\n        uint256 bonusReturnASI = bonusReturn.mul(decimalASIPrice).div(asiPrice);\r\n        user.bonusDebtASI = user.bonusDebtASI.add(bonus);\r\n        user.lockASI = user.lockASI.add(bonusReturnASI.div(5));\r\n\r\n        uint256 bonusFinal = bonusReturn.sub(bonusReturn.div(5));\r\n        if(tokenClaim == 1) { // ASI\r\n            bonusFinal = bonusFinal.div(asiPrice).mul(decimalASIPrice);\r\n            ASI.transfer(account, bonusFinal);\r\n        } else if (tokenClaim == 2) { // USDT\r\n            USDT.transfer(account, bonusFinal);\r\n        } else if (tokenClaim == 3) { // DOGE\r\n            bonusFinal = bonusFinal.div(10**10).div(dogePrice).mul(decimalDOGEPrice);\r\n            DOGE.transfer(account, bonusFinal);\r\n        }\r\n        \r\n        emit Claim(account, tokenClaim);\r\n    }\r\n    \r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_balanceASI\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_miningASIAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_isMiningASI\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_packageASI\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_bonusDebtASI\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_isCompanyMiningASI\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lockASI\",\"type\":\"uint256\"}],\"name\":\"AddUserMiningASI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isCompany\",\"type\":\"bool\"}],\"name\":\"BuyMiningPackage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenClaim\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenClaim\",\"type\":\"uint256\"}],\"name\":\"ClaimBonus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RemoveUserInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"RescueFundsASI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"RescueFundsUSDT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bonusAmount\",\"type\":\"uint256\"}],\"name\":\"SetBonusASI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bonusAmount\",\"type\":\"uint256\"}],\"name\":\"SetBonusUSDT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ASI\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLAIM_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOGE\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_4\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_5\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_6\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_7\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_4\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_5\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_6\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_7\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_COMPANY_1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_COMPANY_2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_COMPANY_3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_COMPANY_4\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_COMPANY_5\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_COMPANY_6\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PACKAGE_RATE_COMPANY_7\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_PERIOD_1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_PERIOD_2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_PERIOD_3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_PERIOD_4\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_PERIOD_5\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_PERIOD_6\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAW_PERIOD_7\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balanceASI\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_miningASIAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isMiningASI\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_packageASI\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusDebtASI\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isCompanyMiningASI\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_lockASI\",\"type\":\"uint256\"}],\"name\":\"addUserMiningASI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asiPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceASI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceASIOfUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceUSDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceUSDTOfUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"packageType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCompany\",\"type\":\"bool\"}],\"name\":\"buyMiningPackage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"calculateBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"checkWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenClaim\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenClaim\",\"type\":\"uint256\"}],\"name\":\"claimBonus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimalASIPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimalDOGEPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dogePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeUserInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"rescueFundsASI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"rescueFundsUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tag\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bonusAmount\",\"type\":\"uint256\"}],\"name\":\"setBonusASI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bonusAmount\",\"type\":\"uint256\"}],\"name\":\"setBonusUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tag\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceASI\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"packageASI\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"miningASIAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isMiningASI\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"bonusDebtASI\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCompanyMiningASI\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"bonusUSDT\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bonusASI\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockASI\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ASIMining", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://40a73638db43ab0931b94e8f8bc0337975390f1f9332d5f56afd72636c8ca182"}