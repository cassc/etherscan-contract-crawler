{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.4.4;\r\n\r\ncontract SafeMath {\r\n    \r\n    // \u4e58\u6cd5\uff08internal\u4fee\u9970\u7684\u51fd\u6570\u53ea\u80fd\u591f\u5728\u5f53\u524d\u5408\u7ea6\u6216\u5b50\u5408\u7ea6\u4e2d\u4f7f\u7528\uff09\r\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) { \r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n  \r\n    // \u9664\u6cd5\r\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b > 0);\r\n        uint256 c = a / b;\r\n        assert(a == b * c + a % b);\r\n        return c;\r\n    }\r\n \r\n    // \u51cf\u6cd5\r\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        assert(b >=0);\r\n        return a - b;\r\n    }\r\n \r\n    // \u52a0\u6cd5\r\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c>=a && c>=b);\r\n        return c;\r\n    }\r\n}\r\n \r\ncontract Test is SafeMath{\r\n    // \u4ee3\u5e01\u7684\u540d\u5b57\r\n    string public name; \r\n    // \u4ee3\u5e01\u7684\u7b26\u53f7\r\n    string public symbol;\r\n    // \u4ee3\u5e01\u652f\u6301\u7684\u5c0f\u6570\u4f4d\r\n    uint8 public decimals;\r\n    // \u4ee3\u8868\u53d1\u884c\u7684\u603b\u91cf\r\n    uint256 public totalSupply;\r\n    // \u7ba1\u7406\u8005\r\n    address public owner;\r\n \r\n    // \u8be5mapping\u4fdd\u5b58\u8d26\u6237\u4f59\u989d\uff0cKey\u8868\u793a\u8d26\u6237\u5730\u5740\uff0cValue\u8868\u793atoken\u4e2a\u6570\r\n    mapping (address => uint256) public balanceOf;\r\n    // \u8be5mappin\u4fdd\u5b58\u6307\u5b9a\u5e10\u53f7\u88ab\u6388\u6743\u7684token\u4e2a\u6570\r\n    // key1\u8868\u793a\u6388\u6743\u4eba\uff0ckey2\u8868\u793a\u88ab\u6388\u6743\u4eba\uff0cvalue2\u8868\u793a\u88ab\u6388\u6743token\u7684\u4e2a\u6570\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    // \u51bb\u7ed3\u6307\u5b9a\u5e10\u53f7token\u7684\u4e2a\u6570\r\n    mapping (address => uint256) public freezeOf;\r\n \r\n    // \u5b9a\u4e49\u4e8b\u4ef6\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Burn(address indexed from, uint256 value);\r\n    event Freeze(address indexed from, uint256 value);\r\n    event Unfreeze(address indexed from, uint256 value);\r\n \r\n    // \u6784\u9020\u51fd\u6570\uff081000000, \"TestCoin\", 18, \"TEST\"\uff09\r\n    constructor( \r\n        uint256 initialSupply,  // \u53d1\u884c\u6570\u91cf\r\n        string tokenName,       // token\u7684\u540d\u5b57 TestToken\r\n        uint8 decimalUnits,     // \u6700\u5c0f\u5206\u5272\uff0c\u5c0f\u6570\u70b9\u540e\u9762\u7684\u5c3e\u6570 1ether = 10** 18wei\r\n        string tokenSymbol      // TEST\r\n    ) public {\r\n        decimals = decimalUnits;                           \r\n        balanceOf[msg.sender] = initialSupply * 10 ** 8;    \r\n        totalSupply = initialSupply * 10 ** 8;   \r\n        name = tokenName;      \r\n        symbol = tokenSymbol;\r\n        owner = msg.sender;\r\n    }\r\n \r\n    // \u8f6c\u8d26\uff1a\u67d0\u4e2a\u4eba\u82b1\u8d39\u81ea\u5df1\u7684\u5e01\r\n    function transfer(address _to, uint256 _value) public {\r\n        // \u9632\u6b62_to\u65e0\u6548\r\n        assert(_to != 0x0);\r\n        // \u9632\u6b62_value\u65e0\u6548                       \r\n        assert(_value > 0);\r\n        // \u9632\u6b62\u8f6c\u8d26\u4eba\u7684\u4f59\u989d\u4e0d\u8db3\r\n        assert(balanceOf[msg.sender] >= _value);\r\n        // \u9632\u6b62\u6570\u636e\u6ea2\u51fa\r\n        assert(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        // \u4ece\u8f6c\u8d26\u4eba\u7684\u8d26\u6237\u4e2d\u51cf\u53bb\u4e00\u5b9a\u7684token\u7684\u4e2a\u6570\r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);                     \r\n        // \u5f80\u63a5\u6536\u5e10\u53f7\u589e\u52a0\u4e00\u5b9a\u7684token\u4e2a\u6570\r\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value); \r\n        // \u8f6c\u8d26\u6210\u529f\u540e\u89e6\u53d1Transfer\u4e8b\u4ef6\uff0c\u901a\u77e5\u5176\u4ed6\u4eba\u6709\u8f6c\u8d26\u4ea4\u6613\u53d1\u751f\r\n        emit Transfer(msg.sender, _to, _value);// Notify anyone listening that this transfer took place\r\n    }\r\n \r\n    // \u6388\u6743\uff1a\u6388\u6743\u67d0\u4eba\u82b1\u8d39\u81ea\u5df1\u8d26\u6237\u4e2d\u4e00\u5b9a\u6570\u91cf\u7684token\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        assert(_value > 0);\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n \r\n     //\u589e\u53d1\r\n    function mintToken(address _to, uint256 _value) public returns (bool success){\r\n        // \u68c0\u67e5sender\u662f\u5426\u662f\u5f53\u524d\u5408\u7ea6\u7684\u7ba1\u7406\u8005\r\n        assert(msg.sender == owner);\r\n        // \u9632\u6b62_to\u65e0\u6548\r\n        assert(_to != 0x0);\r\n        // \u9632\u6b62_value\u65e0\u6548                       \r\n        assert(_value > 0);\r\n        balanceOf[_to] += _value;\r\n        totalSupply += _value;\r\n        emit Transfer(0, msg.sender, _value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n \r\n    // \u6388\u6743\u8f6c\u8d26\uff1a\u88ab\u6388\u6743\u4eba\u4ece_from\u5e10\u53f7\u4e2d\u7ed9_to\u5e10\u53f7\u8f6c\u4e86_value\u4e2atoken\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        // \u9632\u6b62\u5730\u5740\u65e0\u6548\r\n        assert(_to != 0x0);\r\n        // \u9632\u6b62\u8f6c\u8d26\u91d1\u989d\u65e0\u6548\r\n        assert(_value > 0);\r\n        // \u68c0\u67e5\u6388\u6743\u4eba\u8d26\u6237\u7684\u4f59\u989d\u662f\u5426\u8db3\u591f\r\n        assert(balanceOf[_from] >= _value);\r\n        // \u68c0\u67e5\u6570\u636e\u662f\u5426\u6ea2\u51fa\r\n        assert(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        // \u68c0\u67e5\u88ab\u6388\u6743\u4eba\u5728allowance\u4e2d\u53ef\u4ee5\u4f7f\u7528\u7684token\u6570\u91cf\u662f\u5426\u8db3\u591f\r\n        assert(_value <= allowance[_from][msg.sender]);\r\n        // \u4ece\u6388\u6743\u4eba\u5e10\u53f7\u4e2d\u51cf\u53bb\u4e00\u5b9a\u6570\u91cf\u7684token\r\n        balanceOf[_from] = SafeMath.safeSub(balanceOf[_from], _value); \r\n        // \u5f80\u63a5\u6536\u4eba\u5e10\u53f7\u4e2d\u589e\u52a0\u4e00\u5b9a\u6570\u91cf\u7684token\r\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value); \r\n        // \u4eceallowance\u4e2d\u51cf\u53bb\u88ab\u6388\u6743\u4eba\u53ef\u4f7f\u7528token\u7684\u6570\u91cf\r\n        allowance[_from][msg.sender] = SafeMath.safeSub(allowance[_from][msg.sender], _value);\r\n        // \u4ea4\u6613\u6210\u529f\u540e\u89e6\u53d1Transfer\u4e8b\u4ef6\uff0c\u5e76\u8fd4\u56detrue\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n \r\n    // \u6d88\u6bc1\u5e01\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        // \u68c0\u67e5sender\u662f\u5426\u662f\u5f53\u524d\u5408\u7ea6\u7684\u7ba1\u7406\u8005\r\n        assert(msg.sender == owner);\r\n        // \u68c0\u67e5\u5f53\u524d\u5e10\u53f7\u4f59\u989d\u662f\u5426\u8db3\u591f\r\n        assert(balanceOf[msg.sender] >= _value);\r\n        // \u68c0\u67e5_value\u662f\u5426\u6709\u6548\r\n        assert(_value > 0);\r\n        // \u4ecesender\u8d26\u6237\u4e2d\u4e2d\u51cf\u53bb\u4e00\u5b9a\u6570\u91cf\u7684token\r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);\r\n        // \u66f4\u65b0\u53d1\u884c\u5e01\u7684\u603b\u91cf\r\n        totalSupply = SafeMath.safeSub(totalSupply,_value);\r\n        // \u53d1\u9001\u5230 0x0 \u9ed1\u6d1e\u5730\u5740\r\n        emit Transfer(msg.sender, address(0), _value);\r\n        // \u6d88\u5e01\u6210\u529f\u540e\u89e6\u53d1Burn\u4e8b\u4ef6\uff0c\u5e76\u8fd4\u56detrue\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n \r\n    // \u51bb\u7ed3\r\n    function freeze(uint256 _value) public returns (bool success) {\r\n        // \u68c0\u67e5sender\u8d26\u6237\u4f59\u989d\u662f\u5426\u8db3\u591f\r\n        assert(balanceOf[msg.sender] >= _value);\r\n        // \u68c0\u67e5_value\u662f\u5426\u6709\u6548\r\n        assert(_value > 0);\r\n        // \u4ecesender\u8d26\u6237\u4e2d\u51cf\u53bb\u4e00\u5b9a\u6570\u91cf\u7684token\r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value); \r\n        // \u5f80freezeOf\u4e2d\u7ed9sender\u8d26\u6237\u589e\u52a0\u6307\u5b9a\u6570\u91cf\u7684token\r\n        freezeOf[msg.sender] = SafeMath.safeAdd(freezeOf[msg.sender], _value); \r\n        // freeze\u6210\u529f\u540e\u89e6\u53d1Freeze\u4e8b\u4ef6\uff0c\u5e76\u8fd4\u56detrue\r\n        emit Freeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n \r\n    // \u89e3\u51bb\r\n    function unfreeze(uint256 _value) public returns (bool success) {\r\n        // \u68c0\u67e5\u89e3\u51bb\u91d1\u989d\u662f\u5426\u6709\u6548\r\n        assert(freezeOf[msg.sender] >= _value);\r\n        // \u68c0\u67e5_value\u662f\u5426\u6709\u6548\r\n        assert(_value > 0); \r\n        // \u4ecefreezeOf\u4e2d\u51cf\u53bb\u6307\u5b9asender\u8d26\u6237\u4e00\u5b9a\u6570\u91cf\u7684token\r\n        freezeOf[msg.sender] = SafeMath.safeSub(freezeOf[msg.sender], _value); \r\n        // \u5411sender\u8d26\u6237\u4e2d\u589e\u52a0\u4e00\u5b9a\u6570\u91cf\u7684token\r\n        balanceOf[msg.sender] = SafeMath.safeAdd(balanceOf[msg.sender], _value);    \r\n        // \u89e3\u51bb\u6210\u529f\u540e\u89e6\u53d1\u4e8b\u4ef6\r\n        emit Unfreeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n \r\n    // \u7ba1\u7406\u8005\u81ea\u5df1\u53d6\u94b1\r\n    function withdrawEther(uint256 amount) public {\r\n        // \u68c0\u67e5sender\u662f\u5426\u662f\u5f53\u524d\u5408\u7ea6\u7684\u7ba1\u7406\u8005\r\n        assert(msg.sender == owner);\r\n        // sender\u7ed9owner\u53d1\u9001token\r\n        owner.transfer(amount);\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"}]", "ContractName": "Test", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000002540be4000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000003454c5400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003454c540000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://bc710ba2e89a26a47babbbd9130fb7dd3ced5def3437590853c96d824418a62e"}