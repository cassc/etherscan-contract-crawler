{"SourceCode": "pragma solidity ^0.5.12;\r\n\r\ncontract ERC20Interface {\r\n  function totalSupply() public view returns (uint);\r\n  function balanceOf(address tokenOwner) public view returns (uint balance);\r\n  function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n  function transfer(address to, uint tokens) public returns (bool success);\r\n  function approve(address spender, uint tokens) public returns (bool success);\r\n  function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint tokens);\r\n  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n}\r\n\r\nlibrary SafeMath {\r\n  function add(uint a, uint b) internal pure returns (uint c) {\r\n    c = a + b;\r\n    require(c >= a);\r\n  }\r\n  function sub(uint a, uint b) internal pure returns (uint c) {\r\n    require(b <= a);\r\n    c = a - b;\r\n  }\r\n  function mul(uint a, uint b) internal pure returns (uint c) {\r\n    c = a * b;\r\n    require(a == 0 || c / a == b); \r\n  }\r\n  function div(uint a, uint b) internal pure returns (uint c) {\r\n    require(b > 0);\r\n    c = a / b;\r\n  }\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\ncontract SOGOToken is ERC20Interface{\r\n  using SafeMath for uint;\r\n\r\n  string public symbol;\r\n  string public  name;\r\n  uint8 public decimals;\r\n  uint _totalSupply;\r\n  mapping(address => address) public inviter;\r\n  uint256[3] inviterFee = [40,20,10];\r\n  mapping(address => uint256) balances;\r\n  mapping(address => mapping(address => uint)) allowed;\r\n  address public uniswapV2Pair;\r\n  IUniswapV2Router02  uniswapV2Router;\r\n  address owner;\r\n  bool public canTransfer;\r\n  constructor() public {\r\n    symbol = \"SOGO\";\r\n    name = \"SOGO LINK\";\r\n    decimals = 10;\r\n\towner = msg.sender;\r\n\tcanTransfer = true;\r\n    _totalSupply = 20000000 * 10**uint(decimals);\r\n    balances[msg.sender] = _totalSupply;\r\n\t        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(\r\n            0x10ED43C718714eb63d5aA57B78B54704E256024E\r\n        );\r\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\r\n            .createPair(address(this), _uniswapV2Router.WETH());\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n\t\r\n  }\r\n  function totalSupply() public view returns (uint) {\r\n    return _totalSupply;\r\n  }\r\n  function setTransfer(bool set) public returns(bool){\r\n\trequire(msg.sender == owner);\r\n\tcanTransfer = set;\r\n\treturn canTransfer;\r\n  }\r\n    function setOwner(address newOwner) public returns(address){\r\n\trequire(msg.sender == owner);\r\n\towner = newOwner;\r\n\treturn newOwner;\r\n  }\r\n  function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n    return balances[tokenOwner];\r\n  }\r\n  function transfer(address to, uint amount) public returns (bool success) { \r\n    if  (inviter[to] == address(0)){\r\n\t\tinviter[to] = msg.sender;\r\n\t}\r\n    balances[msg.sender] = balances[msg.sender].sub(amount);\r\n\taddress cur;\r\n\tuint256 realAmount = amount;\r\n\tif(to == uniswapV2Pair){\r\n\t\tcur = msg.sender;\r\n\t}else if(msg.sender == uniswapV2Pair){\r\n\t\tcur = to;\r\n\t}\r\n\tfor (uint256 i = 0; i < 3; i++) {\r\n\t\tcur = inviter[cur];\r\n        if (cur == address(0)) {\r\n            break;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tbalances[cur] = balances[cur].add(amount.mul(inviterFee[i]).div(1000));\r\n\t\t\trealAmount = realAmount-amount.mul(inviterFee[i]).div(1000);\r\n\t\t}\r\n        }\r\n\r\n    balances[to] = balances[to].add(realAmount);\t\r\n    emit Transfer(msg.sender, to, realAmount);\r\n    return true;\r\n  }\r\n  function approve(address spender, uint tokens) public returns (bool success) {\r\n    require(spender != address(0), \"spender address is a zero address\");   \r\n\trequire(canTransfer == true);\r\n    allowed[msg.sender][spender] = tokens;\r\n    emit Approval(msg.sender, spender, tokens);\r\n    return true;\r\n  }\r\n  function transferFrom(address from, address to, uint256 amount) public returns (bool success) {  \r\n    balances[from] = balances[from].sub(amount);\r\n    allowed[from][msg.sender] = allowed[from][msg.sender].sub(amount);\r\n\taddress cur;\r\n\tuint256 realAmount = amount;\r\n\tif(to == uniswapV2Pair){\r\n\t\tcur = from;\r\n\t}else if(from == uniswapV2Pair){\r\n\t\tcur = to;\r\n\t}\r\n\tfor (uint256 i = 0; i < 3; i++) {\r\n\t\tcur = inviter[cur];\r\n        if (cur == address(0)) {\r\n            break;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tbalances[cur] = balances[cur].add(amount.mul(inviterFee[i]).div(1000));\r\n\t\t\trealAmount = realAmount-amount.mul(inviterFee[i]).div(1000);\r\n\t\t}\r\n        }\r\n\r\n    balances[to] = balances[to].add(realAmount);\t\r\n    emit Transfer(from, to, realAmount);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n    return allowed[tokenOwner][spender];\r\n  }\r\n}", "ABI": "[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"inviter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"set\",\"type\":\"bool\"}],\"name\":\"setTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SOGOToken", "CompilerVersion": "v0.5.12+commit.7709ece9", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://80c24d0d8a99262b3fc9854adf2bb7dddb6f2e2b985daba428469af7ac419abb"}