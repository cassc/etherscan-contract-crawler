{"SourceCode": "pragma solidity ^0.4.26; // solhint-disable-line\r\n\r\ncontract ERC20 {\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract FISHERMAN {\r\n    \r\n    address tgc = 0x4AeE9D30893C5C73E5a5B8637A10d9537497F1C8; \r\n    uint256 public FISH_TO_CATCH_1=1440000;\r\n    uint256 PSN=10000;\r\n    uint256 PSNH=5000;\r\n    bool public initialized=false;\r\n    address public ceoAddress;\r\n    address public ceoAddress1;\r\n    address public ceoAddress2;\r\n    mapping (address => uint256) public catchFishes;\r\n    mapping (address => uint256) public claimedMoneys;\r\n    mapping (address => uint256) public lastClaim;\r\n    mapping (address => address) public referrals;\r\n    uint256 public marketFishes;\r\n    constructor() public{\r\n        ceoAddress=msg.sender;\r\n        ceoAddress1=address(0x1457d8DcD08f2865394949eCCE0b7Dd4D8c01697);\r\n        ceoAddress2=address(0x45ef2121D0043Ae29725E793E8b09bCc45b90f73);\r\n    }\r\n    function harvestFishes(address ref) public {\r\n        require(initialized);\r\n        if(ref == msg.sender) {\r\n            ref = 0;\r\n        }\r\n        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender) {\r\n            referrals[msg.sender]=ref;\r\n        }\r\n        uint256 printerUsed=getMyFish();\r\n        uint256 newPrinters=SafeMath.div(printerUsed,FISH_TO_CATCH_1);\r\n        catchFishes[msg.sender]=SafeMath.add(catchFishes[msg.sender],newPrinters);\r\n        claimedMoneys[msg.sender]=0;\r\n        lastClaim[msg.sender]=now;\r\n        \r\n        claimedMoneys[referrals[msg.sender]]=SafeMath.add(claimedMoneys[referrals[msg.sender]],SafeMath.div(printerUsed,10));\r\n\r\n        marketFishes=SafeMath.add(marketFishes,SafeMath.div(printerUsed,5));\r\n    }\r\n    function catchFishes() public {\r\n        require(initialized);\r\n        uint256 hasFish=getMyFish();\r\n        uint256 fishValue=calculateMoneyClaim(hasFish);\r\n        uint256 fee=devFee(fishValue);\r\n        uint256 fee2=fee/3;\r\n        claimedMoneys[msg.sender]=0;\r\n        lastClaim[msg.sender]=now;\r\n        marketFishes=SafeMath.add(marketFishes,hasFish);\r\n        ERC20(tgc).transfer(ceoAddress, fee2);\r\n        ERC20(tgc).transfer(ceoAddress1, fee2);\r\n        ERC20(tgc).transfer(ceoAddress2, fee2);\r\n        ERC20(tgc).transfer(address(msg.sender), SafeMath.sub(fishValue,fee));\r\n    }\r\n    function buyFisherman(address ref, uint256 amount) public {\r\n        require(initialized);\r\n    \r\n        ERC20(tgc).transferFrom(address(msg.sender), address(this), amount);\r\n        \r\n        uint256 balance = ERC20(tgc).balanceOf(address(this));\r\n        uint256 fishermanBought=calculatePrinterBuy(amount,SafeMath.sub(balance,amount));\r\n        fishermanBought=SafeMath.sub(fishermanBought,devFee(fishermanBought));\r\n        uint256 fee=devFee(amount);\r\n        uint256 fee2=fee/5;\r\n        ERC20(tgc).transfer(ceoAddress, fee2);\r\n        ERC20(tgc).transfer(ceoAddress1, fee2);\r\n        ERC20(tgc).transfer(ceoAddress2, fee2);\r\n        claimedMoneys[msg.sender]=SafeMath.add(claimedMoneys[msg.sender],fishermanBought);\r\n        harvestFishes(ref);\r\n    }\r\n    //magic happens here\r\n    function calculateTrade(uint256 rt,uint256 rs, uint256 bs) public view returns(uint256) {\r\n        return SafeMath.div(SafeMath.mul(PSN,bs),SafeMath.add(PSNH,SafeMath.div(SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)),rt)));\r\n    }\r\n    function calculateMoneyClaim(uint256 printers) public view returns(uint256) {\r\n        return calculateTrade(printers,marketFishes,ERC20(tgc).balanceOf(address(this)));\r\n    }\r\n    function calculatePrinterBuy(uint256 eth,uint256 contractBalance) public view returns(uint256) {\r\n        return calculateTrade(eth,contractBalance,marketFishes);\r\n    }\r\n    function calculatePrinterBuySimple(uint256 eth) public view returns(uint256){\r\n        return calculatePrinterBuy(eth,ERC20(tgc).balanceOf(address(this)));\r\n    }\r\n    function devFee(uint256 amount) public pure returns(uint256){\r\n        return SafeMath.div(SafeMath.mul(amount,5),100);\r\n    }\r\n    function seedMarket(uint256 amount) public {\r\n        require(msg.sender == ceoAddress);\r\n        ERC20(tgc).transferFrom(address(msg.sender), address(this), amount);\r\n        require(marketFishes==0);\r\n        initialized=true;\r\n        marketFishes=144000000000;\r\n    }\r\n    function getBalance() public view returns(uint256) {\r\n        return ERC20(tgc).balanceOf(address(this));\r\n    }\r\n    function getMyFishes() public view returns(uint256) {\r\n        return catchFishes[msg.sender];\r\n    }\r\n    function getMyFish() public view returns(uint256) {\r\n        return SafeMath.add(claimedMoneys[msg.sender],getFishesSinceLastCatch(msg.sender));\r\n    }\r\n    function getFishesSinceLastCatch(address adr) public view returns(uint256) {\r\n        uint256 secondsPassed=min(FISH_TO_CATCH_1,SafeMath.sub(now,lastClaim[adr]));\r\n        return SafeMath.mul(secondsPassed,catchFishes[adr]);\r\n    }\r\n    function min(uint256 a, uint256 b) private pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedMoneys\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"printers\",\"type\":\"uint256\"}],\"name\":\"calculateMoneyClaim\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"rt\",\"type\":\"uint256\"},{\"name\":\"rs\",\"type\":\"uint256\"},{\"name\":\"bs\",\"type\":\"uint256\"}],\"name\":\"calculateTrade\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FISH_TO_CATCH_1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"seedMarket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"devFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getFishesSinceLastCatch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ref\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyFisherman\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastClaim\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"catchFishes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyFishes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"calculatePrinterBuySimple\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrals\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"catchFishes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"eth\",\"type\":\"uint256\"},{\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"calculatePrinterBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"harvestFishes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketFishes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyFish\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]", "ContractName": "FISHERMAN", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://c50f7572c575e1f19c6808a458722775375114a30fa26c51177eed2a0feb1267"}