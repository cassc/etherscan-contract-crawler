{"SourceCode": "pragma solidity >= 0.6.0;\r\n\r\nlibrary TransferHelper {\r\n    \r\n    function safeTransfer(address token, address to, uint256 value) internal {\r\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"TransferHelper: TRANSFER_FAILED\");\r\n    }\r\n\r\n    function safeTransferFrom(address token, address from, address to, uint256 value) internal {\r\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"TransferHelper: TRANSFER_FROM_FAILED\");\r\n    }\r\n    \r\n    function safeTransferETH(address to, uint256 value) internal {\r\n        // solium-disable-next-line\r\n        (bool success, ) = to.call{value: value}(new bytes(0));\r\n        require(success, \"TransferHelper: ETH(HT/BNB)_TRANSFER_FAILED\");\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address) external view returns (uint);\r\n}\r\n\r\ncontract TPTDAO {\r\n    \r\n    string public name     = \"TPT DAO\";\r\n    string public symbol   = \"xTPT\";\r\n    uint8  public decimals = 4;\r\n    \r\n    address public _TPT_TOKEN_;\r\n    address public _OWNER_;\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint))  public  allowance;\r\n    uint256 public totalSupply;\r\n    \r\n    event  Approval(address indexed src, address indexed guy, uint wad);\r\n    event  Transfer(address indexed src, address indexed dst, uint wad);\r\n    event  Deposit(address indexed dst, uint wad);\r\n    event  Withdrawal(address indexed src, uint wad);\r\n    \r\n    constructor(address _TPT, address _OWNER) public {\r\n        _TPT_TOKEN_ = _TPT;\r\n        _OWNER_ = _OWNER;\r\n    }\r\n    \r\n    function tptTotalDeposit() public view returns (uint) {\r\n        return IERC20(_TPT_TOKEN_).balanceOf(address(this));\r\n    }\r\n    \r\n    function approve(address spender, uint value) public returns (bool) {\r\n        allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint value) public returns (bool) {\r\n        return transferFrom(msg.sender, to, value);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint value) public returns (bool)\r\n    {\r\n        require(balanceOf[from] >= value);\r\n\r\n        if (from != msg.sender && allowance[from][msg.sender] != uint(-1)) {\r\n            require(allowance[from][msg.sender] >= value);\r\n            allowance[from][msg.sender] -= value;\r\n        }\r\n\r\n        balanceOf[from] -= value;\r\n        balanceOf[to] += value;\r\n\r\n        emit Transfer(from, to, value);\r\n        return true;\r\n    }\r\n    \r\n    function deposit(uint256 payAmount) public returns (uint256 recevieAmount) {\r\n        require(payAmount > 0, \"Invalid Pay Amount\");\r\n        TransferHelper.safeTransferFrom(_TPT_TOKEN_, msg.sender, address(this), payAmount);\r\n        balanceOf[msg.sender] = balanceOf[msg.sender] + payAmount;\r\n        totalSupply += payAmount;\r\n        recevieAmount = payAmount;\r\n        emit Deposit(msg.sender, payAmount);\r\n        emit Transfer(address(0), msg.sender, payAmount);\r\n    }\r\n    \r\n    function withdraw(uint256 withdrawAmount) public returns (uint256 recevieAmount) {\r\n        require(withdrawAmount > 0, \"Invalid Pay Amount\");\r\n        require(withdrawAmount <= balanceOf[msg.sender], \"Insufficient balance\");\r\n        balanceOf[msg.sender] = balanceOf[msg.sender] - withdrawAmount;\r\n        TransferHelper.safeTransfer(_TPT_TOKEN_, msg.sender, withdrawAmount);\r\n        recevieAmount = withdrawAmount;\r\n        totalSupply -= withdrawAmount;\r\n        emit Withdrawal(msg.sender, withdrawAmount);\r\n        emit Transfer(msg.sender, address(0), withdrawAmount);\r\n    }\r\n    \r\n    function recoverOther(address payable token) public {\r\n        require(msg.sender == _OWNER_, \"Invalid Owner\");\r\n        require(token != _TPT_TOKEN_ && token != address(this), \"Invalid token\");\r\n        if(token == address(0)) {\r\n            TransferHelper.safeTransferETH(_OWNER_, address(this).balance);\r\n        } else {\r\n            TransferHelper.safeTransfer(token, _OWNER_, IERC20(token).balanceOf(address(this)));\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_TPT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_OWNER\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_OWNER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_TPT_TOKEN_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payAmount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"recevieAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"recoverOther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tptTotalDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"recevieAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TPTDAO", "CompilerVersion": "v0.6.9+commit.3e3065ac", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000eca41281c24451168a37211f0bc2b8645af45092000000000000000000000000fab745c5ee6c59c09605a40464232930892ba48c", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://6802f54e624cd7297c64825ef0d973d7318dc8e08287bd93aa5708397b0db32a"}