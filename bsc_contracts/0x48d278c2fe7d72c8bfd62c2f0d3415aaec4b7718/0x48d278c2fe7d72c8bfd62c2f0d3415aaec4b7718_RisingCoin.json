{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract RisingCoin {\r\n\r\n    address  public owner;\r\n     address payable public wallet;\r\n    string public name; \r\n    string public symbol; \r\n    uint256 public balance;\r\n    uint public decimals;\r\n    uint public totalSupply_;\r\n    uint public maxSupply = 1000000000 * 10 ** 18;\r\n\r\n\r\n    uint256 public dailyMineLimit = 100000 * 10 ** 18;\r\n\r\n    uint256 public reward = 10 * 10 ** 18;\r\n\r\n    mapping (address => uint256) public lastMineTime;\r\n\r\n\r\n    uint256 public fourYears = 4 * 365 * 24 * 60 * 60;\r\n    uint256 public halvingInterval = fourYears;\r\n    uint256 public lastHalving;   \r\n     \r\n     uint256 public timeSinceLastHalving;\r\n     uint256 public timeSinceLastMined;\r\n\r\n      uint256 public mingingInterval =  24 * 60* 60;\r\n      uint256 public lastMining;    \r\n      uint256 public dailyMineTotal; \r\n \r\n    \r\n  mapping(address => uint) balances;\r\n  mapping(address => mapping(address => uint)) allowed; \r\n \r\n    \r\n\r\n    \r\n   \r\n  \r\n\r\n\r\n event TransferReceived(address _from, uint _amount);\r\n event TransferSent(address _from, address _destAddr, uint _amount);\r\n\r\n  event Transfer (address indexed from, address indexed to, uint256 value); \r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n\r\n\r\n\r\n  modifier sufficientBalance(address _spender, uint _value){\r\n    require(_value <= balances[_spender] , \"Insufficient Balance for User\");\r\n    _;\r\n  }\r\n\r\n  modifier sufficientApproval(address _owner, address _spender, uint _value){\r\n    require(_value <= allowed[_owner][_spender], \"Insufficient allowance for this User from owner\");\r\n    _;\r\n  }\r\n\r\n  modifier validAddress(address _address){\r\n    require(_address != address(0), \"Invalid address\");\r\n    _;\r\n  } \r\n\r\n\r\n   \r\n \r\n\r\n\r\n\r\n\r\n  constructor(uint _totalSupply, uint _decimals, string memory _name, string memory _symbol, address payable _wallet){\r\n      totalSupply_ = _totalSupply * 10 ** 18;\r\n      decimals = _decimals;\r\n      name = _name;\r\n      symbol = _symbol;\r\n       owner = msg.sender;    \r\n      balances[msg.sender] = _totalSupply * 10 ** 18;\r\n      wallet = _wallet;\r\n      timeSinceLastMined = block.timestamp + 24 * 60* 60;\r\n      timeSinceLastHalving = block.timestamp + 4 * 365 * 24 * 60 * 60;\r\n        \r\n\r\n  }\r\n\r\n\r\n\r\n      receive() payable external {\r\n        balance += msg.value;\r\n        emit TransferReceived(msg.sender, msg.value);\r\n    }    \r\n    \r\n    function withdraw(uint amount, address payable destAddr) public {\r\n        require(msg.sender == owner, \"Only owner can withdraw funds\"); \r\n        require(amount <= balance, \"Insufficient funds\");\r\n        \r\n        destAddr.transfer(amount);\r\n        balance -= amount;\r\n        emit TransferSent(msg.sender, destAddr, amount);\r\n    }\r\n    \r\n  \r\n\r\n  \r\n  function totalSupply() public view virtual returns(uint256){\r\n    return totalSupply_;\r\n  }\r\n\r\n\r\n  function balanceOf(address _who) public view virtual returns(uint256){\r\n    return balances[_who];\r\n  }\r\n\r\n  function transfer(address to, uint256 value) public virtual sufficientBalance(msg.sender, value) validAddress(to) returns(bool){\r\n    balances[msg.sender] = balances[msg.sender] - value;\r\n    balances[to] = balances[to] + value;\r\n    emit Transfer(msg.sender, to, value);\r\n    \r\n    return true;\r\n  }\r\n\r\n  function approve(address spender, uint256 value) public virtual validAddress(spender) returns(bool){\r\n    allowed[msg.sender][spender] = value;\r\n    emit Approval(msg.sender, spender, value);\r\n\r\n    return true;\r\n  }\r\n  \r\n  function allowance(address owner_, address spender) public virtual view returns(uint256){\r\n      return allowed[owner_][spender];\r\n  }\r\n\r\n  function transferFrom(address from, address to, uint256 value) public virtual sufficientBalance(from, value) sufficientApproval(from, msg.sender, value) validAddress(to) returns(bool){\r\n      allowed[from][msg.sender] = allowed[from][msg.sender] - value; \r\n      balances[from] = balances[from] - value; \r\n      balances[to] = balances[to] + value; \r\n      emit Transfer(from, to, value);\r\n      return true;\r\n\r\n  } \r\n\r\n\r\n \r\n\r\n function mine()  external payable returns (bool)  {\r\n        require(msg.value >= 0.00064 ether);\r\n        require(block.timestamp >= lastMineTime[msg.sender] + mingingInterval, \"Cannot mine again today.\");\r\n        \r\n\r\n        require( totalSupply_ <= maxSupply, \"No more tokens can be mined.\");\r\n        \r\n        lastMineTime[msg.sender] = block.timestamp; \r\n         updateDailyTotal();\r\n\r\n         require(dailyMineTotal <= dailyMineLimit);\r\n\r\n        updateMintLimit();\r\n        \r\n\r\n        balances[msg.sender] += reward;\r\n        totalSupply_ += reward;\r\n          dailyMineTotal += reward;\r\n          wallet.transfer(msg.value);\r\n        // emit Transfer(address(0), msg.sender, amount);\r\n        return true ;\r\n } \r\n\r\n \r\n   function updateMintLimit() internal { \r\n     \r\n        if (timeSinceLastHalving <= block.timestamp) {\r\n            dailyMineLimit /= 2;\r\n            timeSinceLastHalving = block.timestamp + 4 * 365 * 24 * 60 * 60;\r\n        }\r\n     }\r\n\r\n\r\n    function updateDailyTotal() internal {\r\n      \r\n        if (timeSinceLastMined <= block.timestamp) {\r\n            dailyMineTotal = 0;\r\n            timeSinceLastMined = block.timestamp + 24 * 60* 60;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_destAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyMineLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyMineTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fourYears\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halvingInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastHalving\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastMineTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastMining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mine\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mingingInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeSinceLastHalving\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeSinceLastMined\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"destAddr\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "RisingCoin", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000e5a5c12df425d5ff7ec295710c820fd02f725d67000000000000000000000000000000000000000000000000000000000000000852534320434f494e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035253430000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2f3f03a2ab81024dc7ac12a593b927a3dbb9ec0d43d128c73b91cb11dad96cd9"}