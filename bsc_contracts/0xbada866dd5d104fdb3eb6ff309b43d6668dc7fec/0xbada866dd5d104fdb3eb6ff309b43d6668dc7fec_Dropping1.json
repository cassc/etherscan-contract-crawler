{"SourceCode": "pragma solidity ^0.5.16;\r\n\r\n\r\ninterface IUniswapV2Pair {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns (string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n    function nonces(address owner) external view returns (uint);\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n    event Swap(\r\n        address indexed sender,\r\n        uint amount0In,\r\n        uint amount1In,\r\n        uint amount0Out,\r\n        uint amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\r\n    function factory() external view returns (address);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n    function price0CumulativeLast() external view returns (uint);\r\n    function price1CumulativeLast() external view returns (uint);\r\n    function kLast() external view returns (uint);\r\n\r\n    function mint(address to) external returns (uint liquidity);\r\n    function burn(address to) external returns (uint amount0, uint amount1);\r\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n    function skim(address to) external;\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}\r\n\r\n\r\n// safe transfer\r\nlibrary TransferHelper {\r\n    function safeTransfer(address token, address to, uint value) internal {\r\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');\r\n    }\r\n\r\n    function safeTransferFrom(address token, address from, address to, uint value) internal {\r\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\r\n    }\r\n\r\n    function safeTransferETH(address to, uint value) internal {\r\n        // (bool success,) = to.call{value:value}(new bytes(0));\r\n        (bool success,) = to.call.value(value)(new bytes(0));\r\n        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');\r\n    }\r\n}\r\n\r\n\r\n// owner\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"owner error\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Dropping contract\r\ncontract Dropping1 is Ownable {\r\n\r\n    constructor(address owner_) public {\r\n        owner = owner_;\r\n    }\r\n\r\n    event TranferEq(address _token, uint256 _total);\r\n    event TranferNeq(address _token, uint256 _total);\r\n    event TranferFromEq(address _token, uint256 _total);\r\n    event TranferFromNeq(address _token, uint256 _total);\r\n    event TranferETHEq(uint256 _total);\r\n    event TranferETHNeq(uint256 _total);\r\n\r\n    // \u63d0\u53d6\u5408\u7ea6\u91cc\u9762\u7684\u5e01\r\n    // \u53c2\u65701: Token\u5730\u5740\r\n    // \u53c2\u65702: To\u5730\u5740\r\n    // \u53c2\u65702\uff1a\u63d0\u53d6\u7684\u6570\u91cf\r\n    function withdraw(address _token, address _to, uint256 _value) public onlyOwner {\r\n        TransferHelper.safeTransfer(_token, _to, _value);\r\n    }\r\n\r\n    // \u6279\u91cf\u8f6c\u4ee3\u5e01, \u4ece\u5408\u7ea6\u91cc\u9762\u6263\u5e01, \u4e00\u6837\u7684\u6570\u91cf\r\n    // \u53c2\u65701: Token\u5730\u5740\r\n    // \u53c2\u65702: \u63a5\u6536\u8005\u5730\u5740\u6570\u7ec4equal\r\n    // \u53c2\u65703: \u6bcf\u4e2a\u5730\u5740\u63a5\u6536\u7684\u6570\u91cf\r\n    function tranferEq(address _token, address[] memory _addr, uint256 _value) public onlyOwner {\r\n        for(uint256 i = 0; i < _addr.length; i++) {\r\n            TransferHelper.safeTransfer(_token, _addr[i], _value);\r\n        }\r\n        emit TranferEq(_token, _value * _addr.length);\r\n    }\r\n\r\n    // \u6279\u91cf\u8f6c\u4ee3\u5e01, \u4ece\u5408\u7ea6\u91cc\u9762\u6263\u5e01, \u4e0d\u4e00\u6837\u7684\u6570\u91cf\r\n    // \u53c2\u65701: Token\u5730\u5740\r\n    // \u53c2\u65702: \u63a5\u6536\u8005\u5730\u5740\u6570\u7ec4; [0x123...,0x234...,...](\u533a\u5757\u94fe\u6d4f\u89c8\u5668\u683c\u5f0f)\r\n    // \u53c2\u65703: \u6570\u91cf\u6570\u7ec4; [1,2,...](\u533a\u5757\u94fe\u6d4f\u89c8\u5668\u683c\u5f0f)\r\n    function tranferNeq(address _token, address[] memory _addr, uint256[] memory _value) public onlyOwner {\r\n        require(_addr.length == _value.length, \"length error\");\r\n        uint256 _all = 0;\r\n        for(uint256 i = 0; i < _addr.length; i++) {\r\n            TransferHelper.safeTransfer(_token, _addr[i], _value[i]);\r\n            _all += _value[i];\r\n        }\r\n        emit TranferNeq(_token, _all);\r\n    }\r\n\r\n    // \u6279\u91cf\u8f6c\u4ee3\u5e01, \u4ece\u53d1\u9001\u8005\u5730\u5740\u6263\u5e01, \u4e00\u6837\u7684\u6570\u91cf\r\n    // \u53c2\u65701: Token\u5730\u5740\r\n    // \u53c2\u65702: \u63a5\u6536\u8005\u5730\u5740\u6570\u7ec4\r\n    // \u53c2\u65703: \u6bcf\u4e2a\u5730\u5740\u63a5\u6536\u7684\u6570\u91cf\r\n    function tranferFromEq(address _token, address[] memory _addr, uint256 _value) public onlyOwner {\r\n        for(uint256 i = 0; i < _addr.length; i++) {\r\n            TransferHelper.safeTransferFrom(_token, msg.sender, _addr[i], _value);\r\n        }\r\n        emit TranferFromEq(_token, _value * _addr.length);\r\n    }\r\n\r\n    // \u6279\u91cf\u8f6c\u4ee3\u5e01, \u4ece\u53d1\u9001\u8005\u5730\u5740\u6263\u5e01, \u4e0d\u4e00\u6837\u7684\u6570\u91cf\r\n    // \u53c2\u65701: Token\u5730\u5740\r\n    // \u53c2\u65702: \u63a5\u6536\u8005\u5730\u5740\u6570\u7ec4\r\n    // \u53c2\u65703: \u6570\u91cf\u6570\u7ec4\r\n    function tranferFromNeq(address _token, address[] memory _addr, uint256[] memory _value) public onlyOwner {\r\n        require(_addr.length == _value.length, \"length error\");\r\n        uint256 _all = 0;\r\n        for(uint256 i = 0; i < _addr.length; i++) {\r\n            TransferHelper.safeTransferFrom(_token, msg.sender, _addr[i], _value[i]);\r\n            _all += _value[i];\r\n        }\r\n        emit TranferFromNeq(_token, _all);\r\n    }\r\n\r\n    // \u63d0\u53d6\u4e3b\u94fe\u5e01\r\n    // \u53c2\u65701: To\u5730\u5740\r\n    // \u53c2\u65702: \u63d0\u53d6\u7684\u6570\u91cf\r\n    function withdrawETH(address _to, uint256 _value) public onlyOwner {\r\n        TransferHelper.safeTransferETH(_to, _value);\r\n    }\r\n\r\n    // \u63a5\u6536\u4e3b\u94fe\u5e01\r\n    function() external payable {}\r\n\r\n    // \u6279\u91cf\u8f6c\u4e3b\u94fe\u5e01\r\n    // \u53c2\u65701: \u63a5\u6536\u8005\u5730\u5740\u6570\u7ec4equal\r\n    // \u53c2\u65702: \u6bcf\u4e2a\u5730\u5740\u63a5\u6536\u7684\u6570\u91cf\r\n    function tranferETHEq(address[] memory _addr, uint256 _value) public onlyOwner {\r\n        for(uint256 i = 0; i < _addr.length; i++) {\r\n            TransferHelper.safeTransferETH(_addr[i], _value);\r\n        }\r\n        emit TranferETHEq(_value * _addr.length);\r\n    }\r\n\r\n    // \u6279\u91cf\u8f6c\u4e3b\u94fe\u5e01, \u4ece\u5408\u7ea6\u91cc\u9762\u6263\u5e01, \u4e0d\u4e00\u6837\u7684\u6570\u91cf\r\n    // \u53c2\u65701: \u63a5\u6536\u8005\u5730\u5740\u6570\u7ec4\r\n    // \u53c2\u65702: \u6570\u91cf\u6570\u7ec4\r\n    function tranferETHNeq(address[] memory _addr, uint256[] memory _value) public onlyOwner {\r\n        require(_addr.length == _value.length, \"length error\");\r\n        uint256 _all = 0;\r\n        for(uint256 i = 0; i < _addr.length; i++) {\r\n            TransferHelper.safeTransferETH(_addr[i], _value[i]);\r\n            _all += _value[i];\r\n        }\r\n        emit TranferETHNeq(_all);\r\n    }\r\n\r\n    // \u8f6c\u5e01\u5230\u67d0\u4e2aLP\u6c60\u5b50\uff0c\u5e76\u4e14\u66f4\u65b0\u50a8\u5907\u91cf\r\n    function addTokenAndSync(address _tokenAddress, uint256 _tokenValue, address _lpAddress) public onlyOwner {\r\n        // \u5148\u628atoken\u8f6c\u7ed9lp\u5730\u5740\r\n        TransferHelper.safeTransfer(_tokenAddress, _lpAddress, _tokenValue);\r\n        // \u66f4\u65b0\u50a8\u5907\u91cf\r\n        IUniswapV2Pair(_lpAddress).sync();\r\n    }\r\n\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"}],\"name\":\"TranferETHEq\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"}],\"name\":\"TranferETHNeq\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"}],\"name\":\"TranferEq\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"}],\"name\":\"TranferFromEq\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"}],\"name\":\"TranferFromNeq\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"}],\"name\":\"TranferNeq\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_lpAddress\",\"type\":\"address\"}],\"name\":\"addTokenAndSync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addr\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"tranferETHEq\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addr\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"tranferETHNeq\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_addr\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"tranferEq\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_addr\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"tranferFromEq\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_addr\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"tranferFromNeq\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_addr\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"tranferNeq\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Dropping1", "CompilerVersion": "v0.5.17+commit.d19bba13", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000b3830ace491aca4e16d8c1eb97c44426594dc75a", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://0a4a8e63a8e1779708615e65f399bf134c6b84c0b37feb780e796dbbf00685f5"}