{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2023-09-17\r\n*/\r\n\r\n/**\r\n *Submitted for verification at BscScan.com on 2023-09-11\r\n*/\r\n\r\n/**\r\n *Submitted for verification at BscScan.com on 2023-09-11\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^ 0.8.0;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n    unchecked {\r\n        uint256 c = a + b;\r\n        if (c < a) return (false, 0);\r\n        return (true, c);\r\n    }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n    unchecked {\r\n        if (b > a) return (false, 0);\r\n        return (true, a - b);\r\n    }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n    unchecked {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) return (true, 0);\r\n        uint256 c = a * b;\r\n        if (c / a != b) return (false, 0);\r\n        return (true, c);\r\n    }\r\n    }\r\n\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n    unchecked {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a / b);\r\n    }\r\n    }\r\n\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n    unchecked {\r\n        if (b == 0) return (false, 0);\r\n        return (true, a % b);\r\n    }\r\n    }\r\n\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n    unchecked {\r\n        require(b <= a, errorMessage);\r\n        return a - b;\r\n    }\r\n    }\r\n\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n    unchecked {\r\n        require(b > 0, errorMessage);\r\n        return a / b;\r\n    }\r\n    }\r\n\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n    unchecked {\r\n        require(b > 0, errorMessage);\r\n        return a % b;\r\n    }\r\n    }\r\n}\r\n\r\nlibrary DateTimeLibrary {\r\n \r\n    uint constant SECONDS_PER_DAY = 24 * 60 * 60;\r\n    uint constant SECONDS_PER_HOUR = 60 * 60;\r\n    uint constant SECONDS_PER_MINUTE = 60;\r\n    int constant OFFSET19700101 = 2440588;\r\n \r\n    uint constant DOW_MON = 1;\r\n    uint constant DOW_TUE = 2;\r\n    uint constant DOW_WED = 3;\r\n    uint constant DOW_THU = 4;\r\n    uint constant DOW_FRI = 5;\r\n    uint constant DOW_SAT = 6;\r\n    uint constant DOW_SUN = 7;\r\n\r\n \r\n    function _daysToDate(uint _days) internal pure returns (uint year, uint month, uint day) {\r\n        int __days = int(_days);\r\n \r\n        int L = __days + 68569 + OFFSET19700101;\r\n        int N = 4 * L / 146097;\r\n        L = L - (146097 * N + 3) / 4;\r\n        int _year = 4000 * (L + 1) / 1461001;\r\n        L = L - 1461 * _year / 4 + 31;\r\n        int _month = 80 * L / 2447;\r\n        int _day = L - 2447 * _month / 80;\r\n        L = _month / 11;\r\n        _month = _month + 2 - 12 * L;\r\n        _year = 100 * (N - 49) + _year + L;\r\n \r\n        year = uint(_year);\r\n        month = uint(_month);\r\n        day = uint(_day);\r\n    }\r\n \r\n\r\n    function timestampToDate(uint timestamp) internal pure returns (uint year, uint month, uint day) {\r\n        (year, month, day) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n    }\r\n\t\r\n\tfunction timestampToDay(uint timestamp) internal pure returns (uint _time) {\r\n\t\r\n\t\tuint year;uint month;uint day;uint hour;\r\n        (year, month, day) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n\t\t\r\n\t\thour=timestamp/SECONDS_PER_DAY;\r\n\t\thour=timestamp-SECONDS_PER_DAY*hour;\r\n\t\thour=hour/SECONDS_PER_HOUR;\r\n\t\t\r\n\t\tyear=year*1000000;\r\n\t\tmonth=month*10000;\r\n\t\tday=day*100;\r\n\t\t \r\n\t\t_time=year+month+day+hour;\r\n\t\t\r\n    }\r\n\r\n}\r\n interface NFT721 {\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    function transferFrom(address src, address dst, uint256 amount) external;\r\n\t\r\n\tfunction add_new(address _addr) external;\r\n\t\r\n\t\r\n    function balanceOf(address addr) external view returns(uint);\r\n    function getInfo(uint256 _tokenId) external view returns(address, string memory, string memory, string memory);\r\n\r\n    function lastTokenId() external view returns(uint);\r\n\r\n    function getToken(address _user) external view returns(uint);\r\n\t\r\n\tfunction cur_index() external view returns(uint256);\r\n\t \r\n\r\n} \r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    constructor(address _addr) {\r\n        _owner = _addr;\r\n        emit OwnershipTransferred(address(0), _addr);\r\n    }\r\n    function owner() public view returns(address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ninterface ERC20 {\r\n\r\n    function totalSupply() external view returns(uint256);\r\n\r\n    function balanceOf(address account) external view returns(uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns(bool);\r\n\t\r\n\tfunction creat_amount(uint256 amount,address _addr) external;\r\n\r\n    function approve(address spender, uint256 amount) external returns(bool);\r\n\t\r\n\t \r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns(bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract BUY is Ownable {\r\n    using SafeMath for uint;\r\n   \taddress public _addr_1=0xF97fD80F0b13EE534C71C4a5C9E7f8d712bA8C40;\r\n\taddress public _addr_2=0x78B35Ef4D51755B86Df72B5faF824a4D36143622;\r\n\taddress public _addr_3=0x2aD95ad55BdE366Cf5Cd2B044A4448deD687f378;\r\n\taddress public _addr_4=0x3dd7901F8C8c6Bd5c3C7cf6072d92fe885bcFD73;\r\n\t\r\n\taddress public coin_addr=0x8CED3ef605d5CDEc929f9BEc42778372569B7b18;\r\n \r\n\taddress public usdt_addr=0x55d398326f99059fF775485246999027B3197955;\r\n \r\n\t \r\n\t\r\n\taddress public nft_addr=0x5C898dF17390DAfbc0980E38Bb5D06F9887C9cdC;\r\n\t\r\n\tuint256 public usdt_amount=500*10**18;\r\n\t\r\n\t\r\n\tuint256 public usdt_new_amount=5*10**18;\r\n\r\n    uint256 public new_num=3000;\r\n\t \r\n \r\n \r\n    mapping(uint256 => uint256) public num_lists;\r\n\t\r\n\tmapping(uint256 => uint256) public num_all_lists;\r\n\t\r\n\tmapping(address => uint256) public nft_lists_index_cur;\r\n\tmapping(address => uint256) public nft_lists_index;\r\n\t\r\n\tmapping(address => mapping(uint256=>uint256)) public nft_lists;\r\n\t \r\n\t \r\n\t\r\n\t\r\n\tuint256 public index=0;\r\n\r\n    uint public unlocked=1;\r\n    modifier lock() {\r\n        require(unlocked == 1, 'LOCKED2');\r\n        unlocked = 0;\r\n        _;\r\n        unlocked = 1;\r\n    }\r\n\r\n    constructor() Ownable(msg.sender) {\r\n\t\t \r\n\t}\r\n\t\r\n\treceive() external payable {}\r\n\t \r\n\r\n    function approve(address addr_1,address addr_2,uint256 _num) external payable   onlyOwner {\r\n\t\tERC20(addr_1).approve(addr_2,_num);\r\n\t\t\r\n\t}\r\n \r\n \tfunction get_time() view public  returns(uint)  {\r\n\t\t\tuint256 to_hour=DateTimeLibrary.timestampToDay(block.timestamp);\r\n\t\t\treturn to_hour;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tfunction stake() lock public payable   {\r\n\t\t\r\n\t\tERC20(usdt_addr).transferFrom(msg.sender, address(this), usdt_amount);\r\n\t\t\r\n\t\tuint256 to_hour=DateTimeLibrary.timestampToDay(block.timestamp);\r\n\t\t \r\n\t\trequire(num_lists[to_hour]>0,\"NO\");\r\n\t\t\r\n\t\tuint256 amount_1=usdt_amount.mul(30).div(100);\r\n\t\tuint256 amount_2=usdt_amount.mul(5).div(100);\r\n\t\tuint256 amount_3=usdt_amount.mul(5).div(100);\r\n\t\tuint256 amount_4=usdt_amount.mul(60).div(100);\r\n        \r\n\t\t\r\n\t\tERC20(usdt_addr).transfer(_addr_1, amount_1);\r\n\t\tERC20(usdt_addr).transfer(_addr_2, amount_2);\r\n\t\tERC20(usdt_addr).transfer(_addr_3, amount_3);\r\n\t\t\r\n\t\tERC20(coin_addr).creat_amount(amount_4,msg.sender);\r\n\t\t\r\n\t\taddress _owner=owner();\r\n\t\t \r\n\t\tNFT721(nft_addr).add_new(_owner);\r\n\t\t\r\n\t\tuint256 nft_id=NFT721(nft_addr).cur_index();\r\n\t\t\r\n\t\tnft_lists[msg.sender][nft_lists_index[msg.sender]]=nft_id;\r\n\t\t\r\n\t\t\r\n\t\tnft_lists_index[msg.sender]++;\r\n\t\t \r\n\t\tnum_lists[to_hour]--;\r\n\t\t \r\n    }\r\n\t \r\n\t\r\n\tfunction set_num( uint256 _day,uint256 _num ) public payable lock {\r\n\t   num_lists[_day]=_num;\r\n\t   num_all_lists[_day]=_num;\r\n    }\r\n\t\r\n\tfunction tran_nft(address _addr ) public onlyOwner lock {\r\n\t\tuint256 nft_id=nft_lists[msg.sender][nft_lists_index_cur[msg.sender]];\r\n\t\t\r\n\t\tNFT721(nft_addr).transferFrom(address(this),_addr,nft_id);\r\n\t\t\r\n\t\tnft_lists_index_cur[msg.sender]++;\r\n\t\r\n    }\r\n\t\r\n\t\r\n\tfunction add_new() lock public payable   {\r\n        \r\n\r\n        require(new_num>0,\"NO\");\r\n\t\t\r\n\t\tuint256 amount_1=usdt_new_amount.mul(90).div(100);\r\n\t\tuint256 amount_2=usdt_new_amount.mul(10).div(100);\r\n\t\t\r\n\t\tERC20(usdt_addr).transferFrom(msg.sender, _addr_4, amount_1);\r\n\t\t\r\n\t\tERC20(usdt_addr).transferFrom(msg.sender, _addr_3, amount_2);\r\n\t\t\r\n\t\tnew_num--;\r\n\t\t\r\n\t\t \r\n\t\t \r\n    }\r\n\t\r\n\t\r\n\tfunction tran_num(address coin_addr,uint256 coin_num,uint256 num,uint256 type_id ) lock public payable   {\r\n        if(coin_num>0){\r\n\t\t\tERC20(coin_addr).transferFrom(msg.sender, address(this), coin_num);\r\n\t\t}\r\n  \r\n\t\t \r\n    }\r\n\t \r\n\t\r\n\t\r\n\tfunction tran_nft(address _to,address _nft_addr, uint _amount) external payable   onlyOwner {\r\n\r\n        NFT721(_nft_addr).transferFrom(address(this), _to, _amount);\r\n         \r\n\r\n    }\r\n\t \r\n    function out_coin(address _addr, address _to, uint _val) public onlyOwner {\r\n       \r\n        ERC20(_addr).transfer(_to, _val);\r\n\r\n    }\r\n\t\r\n\tfunction out_nft(address _addr, address _to, uint _val) public onlyOwner {\r\n       \r\n        NFT721(_addr).transferFrom(address(this), _to, _val);\r\n\r\n    }\r\n\t\r\n\t\r\n    function out_bnb(address payable _to, uint _val) public payable onlyOwner {\r\n        _to.transfer(_val);\r\n\r\n    }\r\n\t  \r\n\t\r\n\tfunction ismakerAdr_1(address addr) public onlyOwner {\r\n        _addr_1 = addr;\r\n    }\r\n\t\r\n\tfunction ismakerAdr_2(address addr) public onlyOwner {\r\n        _addr_2 = addr;\r\n    }\r\n\t\r\n\tfunction ismakerAdr_3(address addr) public onlyOwner {\r\n        _addr_3 = addr;\r\n    }\r\n\t\r\n\tfunction iscoin_addr(address addr) public onlyOwner {\r\n        coin_addr = addr;\r\n    }\r\n\t\r\n\tfunction isnft_addr(address addr) public onlyOwner {\r\n        nft_addr = addr;\r\n    }\r\n\t\r\n\tfunction set_usdt_amount(uint256 addr) public onlyOwner {\r\n        usdt_amount = addr;\r\n    }\r\n\tfunction set_usdt_new_amount(uint256 addr) public onlyOwner {\r\n        usdt_new_amount = addr;\r\n    }\r\n    function set_new_num(uint256 addr) public onlyOwner {\r\n        new_num = addr;\r\n    } \r\n  \r\n  \r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_addr_1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_addr_2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_addr_3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_addr_4\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"add_new\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr_1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addr_2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coin_addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"iscoin_addr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ismakerAdr_1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ismakerAdr_2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ismakerAdr_3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isnft_addr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"new_num\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft_addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nft_lists\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nft_lists_index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nft_lists_index_cur\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"num_all_lists\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"num_lists\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"out_bnb\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"out_coin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"out_nft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"addr\",\"type\":\"uint256\"}],\"name\":\"set_new_num\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_day\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"set_num\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"addr\",\"type\":\"uint256\"}],\"name\":\"set_usdt_amount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"addr\",\"type\":\"uint256\"}],\"name\":\"set_usdt_new_amount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nft_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"tran_nft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"tran_nft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coin_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"coin_num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"type_id\",\"type\":\"uint256\"}],\"name\":\"tran_num\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt_addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt_amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt_new_amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "BUY", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c767bc1a5b64a45af32f3aa076af6caacd7c2bb94708f90910bceaa13f2670f2"}