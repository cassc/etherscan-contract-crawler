{"SourceCode": "// SPDX-License-Identifier: SimPL-2.0\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20{\r\n    function decimals() external view returns (uint8);\r\n    function transferFrom(address sender,address recipient,uint256 amount) external returns (bool);\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract NFTDropContract{\r\n\r\n    address public owner;\r\n\r\n    address public AIAddress;\r\n\r\n    event NFTDropAIEvent(address[] _adrs,uint[] _amounts);\r\n\r\n    constructor() payable{\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n   receive() external payable {}\r\n\r\n    modifier isOnwer(){\r\n        require(msg.sender == owner,\"not contract owner\");\r\n        _;\r\n    }\r\n\r\n    function setOwner(address own) public isOnwer{\r\n        owner = own;\r\n    }\r\n\r\n    function setAITokenAddress(address _token)public isOnwer returns(bool){\r\n        AIAddress = _token;\r\n        return true;\r\n    }\r\n\r\n    function width(address to,uint256 value) public isOnwer{\r\n        require(address(this).balance >= value,\"no enough balance\");\r\n        \r\n        IERC20(AIAddress).transfer(to,value);\r\n    }\r\n\r\n    function nodeDropAIAction(address[] memory _adrs,uint[] memory _amounts) public isOnwer {\r\n        require(_adrs.length == _amounts.length,\"not equal\");\r\n\r\n        for(uint i = 0;i<_adrs.length;i++){\r\n            IERC20(AIAddress).transfer(_adrs[i],_amounts[i]);\r\n        }\r\n        emit NFTDropAIEvent(_adrs,_amounts);\r\n    }\r\n\r\n    function getBalance() public view returns(uint256){\r\n        return IERC20(AIAddress).balanceOf(address(this));\r\n    }\r\n    \r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_adrs\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"NFTDropAIEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_adrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"nodeDropAIAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setAITokenAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"own\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"width\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "NFTDropContract", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4bc50c6b12b62a07ba92162e6ff9f4d4925fbfc52b70f724844596ce1c520c13"}