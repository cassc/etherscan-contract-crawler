{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\n/**\r\nTG: https://t.me/boltcom\r\n\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f0\u2837\u2832\u28a6\u28c4\u28c0\u2840\u2820\u2824\u28a4\u2824\u2824\u2824\u2824\u2804\u2824\u2814\u2832\u28e4\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28e0\u2814\u280b\u2801\u2860\u28fa\u2875\u2802\u2800\u2800\u2800\u2800\u2808\u2803\u2800\u2800\u2800\u2800\u2800\u2808\u2833\u28c6\u2809\u28f2\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u2816\u280b\u2801\u2800\u2800\u2800\u2858\u28f5\u280f\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28a6\u2818\u280e\u28a3\u2840\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u284b\u2800\u2800\u2800\u2800\u2800\u28b0\u28b1\u2801\u2800\u2800\u2800\u2800\u28e0\u2800\u2800\u2840\u2811\u2804\u2800\u2800\u2800\u2800\u2820\u28c4\u2830\u2848\u2846\u28b3\u2888\u2849\u2822\u28c0\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u2800\u2840\u2800\u2800\u2800\u2800\u284f\u2818\u2800\u2800\u2880\u2824\u2812\u2880\u28c0\u2800\u2804\u2800\u2818\u2800\u2800\u2800\u2880\u288f\u2840\u2891\u28b9\u28b0\u2808\u2806\u28b1\u2850\u2846\u287f\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2839\u287c\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u2800\u2800\u2820\u2824\u28f4\u28fe\u28ff\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28ff\u28ff\u28f6\u28b7\u28b8\u2808\u2802\u2800\u2807\u2801\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2839\u28c4\u2800\u2800\u2800\u2800\u2800\u2808\u2876\u2800\u2800\u2800\u2808\u281b\u281f\u283b\u2803\u2800\u2800\u2800\u2800\u2831\u285c\u281f\u281b\u2800\u2878\u28b8\u2800\u2800\u2800\u2808\u2880\u2847\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2833\u28c0\u2800\u2800\u2800\u28b0\u2842\u2800\u2800\u2800\u2800\u2800\u2800\u28f0\u2803\u2800\u2800\u2800\u2800\u2800\u2808\u28a6\u2800\u2880\u2807\u28fe\u2813\u2800\u2800\u28a0\u281e\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b9\u28c6\u2800\u285c\u28fc\u28c5\u2800\u2800\u2800\u2800\u2800\u2874\u2801\u2800\u2800\u28a0\u28f6\u283f\u28b6\u28b7\u2844\u28bb\u285e\u28fc\u28bb\u2844\u2880\u2800\u284e\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b9\u28f0\u281e\u28ff\u280e\u2811\u28a0\u2832\u28ee\u2849\u2800\u2800\u2800\u2800\u2838\u28ff\u28ff\u28ff\u28ff\u2807\u2800\u28b9\u285f\u2800\u2819\u28a6\u2879\u2847\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a4\u285f\u2844\u2800\u28bb\u28f3\u28cc\u287b\u2840\u2800\u2800\u2800\u2880\u28fd\u28ff\u28ff\u2841\u2800\u2800\u2898\u28c7\u2800\u2800\u2800\u2809\u2801\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u283b\u28e7\u2858\u28a6\u2840\u2801\u2883\u2819\u28ff\u28e6\u2864\u2824\u2834\u283f\u283f\u2817\u28ee\u28e4\u28e4\u28fe\u285f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b4\u283e\u28b7\u28f6\u28f7\u2840\u2808\u2826\u2808\u280b\u2819\u2836\u2824\u2824\u28e4\u283e\u28bf\u287f\u28bf\u287f\u28b7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u28e7\u28c0\u2800\u2800\u2800\u2800\u2880\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f8\u28be\u2800\u280c\u2819\u283f\u28ff\u28dd\u28fe\u28f6\u28d2\u2832\u28b6\u28f6\u28f6\u28f6\u2852\u280b\u28c1\u281c\u2800\u286d\u28b7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2818\u28a7\u2869\u2835\u28d2\u2812\u2812\u281a\u281b\u2819\u2832\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2824\u2816\u2812\u28d2\u287d\u281a\u2889\u28de\u28cf\u28b8\u2800\u2800\u2808\u2833\u28c4\u2800\u2809\u2809\u281b\u2812\u281b\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f1\u28a8\u28c6\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2819\u2826\u28c4\u2848\u2810\u2812\u28a4\u2840\u2800\u2808\u2833\u2844\u2800\u2800\u2800\u28e0\u2816\u280a\u2809\u2880\u2824\u2820\u287e\u2801\u2880\u28b4\u28ff\u284f\u28bf\u284c\u2846\u2800\u2800\u2800\u2808\u2802\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u281f\u2800\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u2809\u2809\u2810\u281b\u28a6\u2840\u2800\u28b9\u28c0\u2874\u280b\u2800\u2800\u2800\u2854\u2801\u2860\u28aa\u2800\u2810\u28f1\u287f\u28fc\u2800\u28b8\u2871\u28ff\u28c4\u2800\u2800\u2800\u2800\u2808\u2833\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u284f\u2800\u2800\u28bf\u2844\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f9\u287e\u2869\u280b\u2800\u2800\u2800\u2880\u28ce\u2804\u2814\u28b4\u2807\u2800\u28a0\u285f\u2878\u284d\u2800\u2800\u2801\u2808\u2809\u281b\u28a6\u2840\u2800\u2800\u2800\u2818\u280d\u2812\u2804\u2800\u2800\u2800\u2800\u2800\u28a0\u2800\u2800\u2800\u2808\u28f7\u2840\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u287f\u281e\u2870\u2803\u2800\u2800\u2800\u2818\u28af\u2800\u2800\u280a\u2800\u2870\u28b9\u28ff\u2841\u2817\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u2826\u2840\u2800\u2800\u2818\u2844\u2808\u2800\u2832\u2844\u2800\u2880\u287e\u2800\u2800\u2800\u2800\u2810\u28f7\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28fc\u2802\u28e0\u2801\u2800\u2800\u2800\u2800\u2800\u28b8\u28c4\u2800\u2800\u2800\u2803\u28b8\u287f\u2844\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2822\u2840\u2800\u2839\u2800\u2800\u2800\u2818\u2800\u2818\u28a0\u2800\u2800\u2800\u2800\u2800\u28b9\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28fe\u280f\u28b0\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u284e\u28a6\u2800\u2800\u2800\u28b8\u2847\u2845\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2810\u2802\u2800\u2840\u2800\u2800\u2800\u28a0\u2807\u2800\u2800\u2800\u2800\u2800\u284f\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2888\u2843\u2800\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28be\u28c7\u2800\u2800\u28b8\u28f7\u2800\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28a6\u2842\u2870\u280b\u2844\u2800\u2800\u2800\u2800\u28b8\u2807\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u2843\u2846\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u280b\u2833\u2840\u2800\u285e\u28e6\u2847\u2800\u2843\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28a6\u2800\u285f\u2881\u281e\u2800\u2800\u2800\u2800\u28a0\u2807\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28ff\u2845\u2847\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u2814\u2802\u2803\u289c\u28c6\u28b0\u2839\u28b3\u2800\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b1\u2877\u284f\u2800\u2800\u2800\u2800\u2880\u280f\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u285f\u2858\u28e2\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u285c\u28f5\u28f6\u28d3\u28ed\u2840\u2819\u28a6\u28e7\u2808\u28e7\u28b8\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2870\u2802\u2800\u2800\u2800\u2800\u285c\u28f0\u2802\u2800\u2800\u2800\u2800\u285c\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28a7\u28a0\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u285c\u2870\u280b\u28f8\u281f\u2809\u2819\u28e6\u2840\u281d\u28bf\u2823\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u285e\u2801\u2880\u2874\u280b\u2880\u28de\u28fc\u2865\u2810\u280b\u2892\u2822\u2804\u2807\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fe\u28fc\u28b8\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2858\u28f0\u28f7\u285f\u2809\u2801\u2808\u2800\u2887\u2839\u28cf\u28ff\u2800\u2800\u28c4\u2800\u2800\u2800\u2800\u2800\u2844\u28e0\u281e\u2801\u28a0\u28e7\u287e\u280b\u2809\u2800\u2800\u2880\u28da\u2810\u2820\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n */\r\n\r\n\r\npragma solidity >=0.8.19;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// @dev Wrappers over Solidity's arithmetic operations with added overflow * checks.\r\nlibrary SafeMath {\r\n    // Counterpart to Solidity's `+` operator.\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    // Counterpart to Solidity's `-` operator.\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    // Counterpart to Solidity's `-` operator.\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    // Counterpart to Solidity's `*` operator.\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    // Counterpart to Solidity's `/` operator.\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    // Counterpart to Solidity's `/` operator.\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    // Counterpart to Solidity's `%` operator.\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    // Counterpart to Solidity's `%` operator.\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract Context {\r\n    // Empty internal constructor, to prevent people from mistakenly deploying\r\n    // an instance of this contract, which should be used via inheritance.\r\n    constructor () { }\r\n\r\n    function _msgSender() internal view returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n\r\n    function _msgData() internal view returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"onlyOwner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract BOLT is Context, Ownable, IERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n    uint8 public _decimals;\r\n    string public _symbol;\r\n    string public _name;\r\n\r\n    constructor() {\r\n        _name = \"Bolt Doge\";\r\n        _symbol = \"BOLT\";\r\n        _decimals = 18;\r\n        _totalSupply = 10000000000 * 1000000000000000000;\r\n        _balances[msg.sender] = _totalSupply;\r\n\r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n    }\r\n\r\n    function getOwner() external view returns (address) {\r\n        return owner();\r\n    }\r\n\r\n    function decimals() external view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function symbol() external view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function name() external view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address addressOwner, address spender) external view returns (uint256) {\r\n        return _allowances[addressOwner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \"Transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \"Decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \"Transfer from the zero address\");\r\n        require(recipient != address(0), \"Transfer to the zero address\");\r\n        require(amount <= _balances[sender], \"Transfer amount exceeds balance\");\r\n\r\n        _balances[sender] = _balances[sender].sub(amount);\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    function _approve(address addressOwner, address spender, uint256 amount) internal {\r\n        require(addressOwner != address(0), \"Approve from the zero address\");\r\n        require(spender != address(0), \"Approve to the zero address\");\r\n\r\n        _allowances[addressOwner][spender] = amount;\r\n        emit Approval(addressOwner, spender, amount);\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BOLT", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2d14e7af527a8edd2521c059da173e457938df1d3aa2de4d251e4a93f3866924"}