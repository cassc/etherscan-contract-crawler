{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.6;\r\n\r\n\r\n\r\ninterface CIRC8 {\r\n    \r\n    function totalSupply() external view returns (uint);\r\n\r\n    \r\n    function balanceOf(address account) external view returns (uint);\r\n\r\n   \r\n    function transfer(address recipient, uint amount) external returns (bool);\r\n\r\n\r\n    function allowance(address ownerwfo, address spender) external view returns (uint);\r\n\r\n \r\n    function approve(address spender, uint amount) external returns (bool);\r\n\r\n   \r\n    function transferFrom(address sender, address recipient, uint amount) external returns (bool);\r\n\r\n\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n\r\n    event Approval(address indexed ownerwfo, address indexed spender, uint value);\r\n}\r\n\r\npragma solidity 0.8.6;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\npragma solidity 0.8.6;\r\n\r\ninterface CRIC2Metadata is CIRC8 {\r\n   \r\n    function name() external view returns (string memory);\r\n\r\n   \r\n    function symbol() external view returns (string memory);\r\n\r\n   \r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\nlibrary SafeMath {\r\n   \r\n    function tryAdd(uint a, uint b) internal pure returns (bool, uint) {\r\n        unchecked {\r\n            uint c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n \r\n    function trySub(uint a, uint b) internal pure returns (bool, uint) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n   \r\n    function tryMul(uint a, uint b) internal pure returns (bool, uint) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n\r\n    function tryDiv(uint a, uint b) internal pure returns (bool, uint) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n\r\n    function tryMod(uint a, uint b) internal pure returns (bool, uint) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n  \r\n    function add(uint a, uint b) internal pure returns (uint) {\r\n        return a + b;\r\n    }\r\n\r\n   \r\n    function sub(uint a, uint b) internal pure returns (uint) {\r\n        return a - b;\r\n    }\r\n\r\n\r\n    function mul(uint a, uint b) internal pure returns (uint) {\r\n        return a * b;\r\n    }\r\n\r\n \r\n    function div(uint a, uint b) internal pure returns (uint) {\r\n        return a / b;\r\n    }\r\n\r\n\r\n    function mod(uint a, uint b) internal pure returns (uint) {\r\n        return a % b;\r\n    }\r\n\r\n\r\n    function sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n\r\n    function div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    function mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity 0.8.6;\r\n\r\ncontract RedHorse is Context, CIRC8, CRIC2Metadata {\r\n    mapping (address => uint) private _balances;\r\n\r\n    mapping (address => mapping (address => uint)) private _allowances;\r\n\r\n    uint private _nmtotalsfo;\r\n \r\n    string private _nmtokensfo;\r\n    string private _nminitialsfo;\r\n\r\n\r\n    constructor () {\r\n        _nmtokensfo = \"RedHorse\";\r\n        _nminitialsfo = 'REDHORSE';\r\n        _nmtotalsfo = 1*10**12 * 10**9;\r\n        _balances[msg.sender] = _nmtotalsfo;\r\n\r\n    emit Transfer(address(0), msg.sender, _nmtotalsfo);\r\n    }\r\n\r\n\r\n    function name() public view virtual override returns (string memory) {\r\n        return _nmtokensfo;\r\n    }\r\n\r\n\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _nminitialsfo;\r\n    }\r\n\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 9;\r\n    }\r\n\r\n\r\n    function totalSupply() public view virtual override returns (uint) {\r\n        return _nmtotalsfo;\r\n    }\r\n\r\n\r\n    function balanceOf(address account) public view virtual override returns (uint) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    function allowance(address ownerwfo, address spender) public view virtual override returns (uint) {\r\n        return _allowances[ownerwfo][spender];\r\n    }\r\n\r\n\r\n    function approve(address spender, uint amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    function transferFrom(address sender, address recipient, uint amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"CIRC8: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    function increaseAllowance(address spender, uint addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n\r\n    function decreaseAllowance(address spender, uint subtractedValue) public virtual returns (bool) {\r\n        uint currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"CIRC8: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint amount) internal virtual {\r\n        require(sender != address(0), \"CIRC8: transfer from the zero address\");\r\n        require(recipient != address(0), \"CIRC8: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"CIRC8: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n\r\n    function _approve(address ownerwfo, address spender, uint amount) internal virtual {\r\n        require(ownerwfo != address(0), \"BEP0: approve from the zero address\");\r\n        require(spender != address(0), \"BEP0: approve to the zero address\");\r\n\r\n        _allowances[ownerwfo][spender] = amount;\r\n        emit Approval(ownerwfo, spender, amount);\r\n    }\r\n\r\n  \r\n    function _beforeTokenTransfer(address from, address to, uint amount) internal virtual { }\r\n    \r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ownerwfo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownerwfo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RedHorse", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://12e5308af34e617715afdd80522682d9abff96a6042a42a943fc94a343b358e7"}