{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2023-02-19\r\n*/\r\n\r\n/**\r\n *Submitted for verification at BscScan.com on 2023-02-07\r\n*/\r\n\r\n/**\r\n *Submitted for verification at BscScan.com on 2023-02-01\r\n*/\r\n\r\n/**\r\n *Submitted for verification at BscScan.com on 2023-01-28\r\n*/\r\n\r\n// contracts/Faucet.sol\r\n// SPDX-License-Indentifier: MIT\r\n\r\npragma solidity ^0.8.17;\r\n\r\ninterface IERC20 {\r\nfunction transfer(address to , uint256 amount) external returns (bool);\r\nfunction balanceOf(address account) external view returns (uint256);\r\nevent Transfer(address indexed from, address indexed to, uint256 value);\r\n }\r\n\r\ncontract Faucet \r\n{\r\naddress payable owner;\r\nIERC20 public token;\r\n   struct UserInfo {\r\n        uint256 lastUserActionTime; // keeps track of the last user action time\r\n                uint256 shares; // keeps track of the last user action time\r\n        uint256 lastDepositedTime; // keeps track of the last user action time\r\n        uint256 pendingReward; // keeps track of the last user action time\r\n\r\n    }\r\nuint256 public withdrawalAmount = 50 * (10**18) ;\r\nuint256 public lockTime = 24 hours;\r\nuint256 public lastHarvestedTime;\r\nuint256 public minToken = 10000 * (10**18);\r\nevent Deposit(address indexed from ,uint256 indexed amount);\r\nevent Withdrawal(address indexed from, uint256 indexed amount);\r\nmapping(address => UserInfo) public userInfo;\r\nmapping(address => uint256) public lastUserActionTime;\r\nmapping(address => uint256) public pendingReward;\r\nmapping(address => uint256) public balanceOf;\r\nmapping(address => uint256) public shares;\r\nmapping(address => uint256) public lastDepositedTime;\r\n\r\nconstructor(address tokenAddress) payable {\r\ntoken = IERC20(tokenAddress);\r\nowner = payable(msg.sender);\r\n}\r\nfunction harvest() public {\r\nrequire(msg.sender != address(0), \"Request must not originate from a zero account\");\r\nrequire(token.balanceOf(address(this)) >= withdrawalAmount, \"Insufficient balance in faucet\");\r\nrequire(block.timestamp >= lastUserActionTime[msg.sender], \"it's not possible yet\");\r\nrequire(token.balanceOf(msg.sender) >= minToken);\r\nlastUserActionTime[msg.sender] = block.timestamp + lockTime;\r\n\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        user.shares = block.timestamp + lockTime;\r\n        user.lastDepositedTime = block.timestamp + lockTime;\r\n        user.lastUserActionTime = block.timestamp + lockTime;\r\ntoken.transfer(msg.sender, withdrawalAmount);\r\nlastHarvestedTime = block.timestamp;\r\n}\r\n\r\nreceive() external payable {\r\nemit Deposit(msg.sender, msg.value);\r\n}\r\nfunction getBalance() external view returns (uint256) {\r\nreturn token.balanceOf(address(this));\r\n}\r\nfunction setWithdrawalAmount(uint256 amount) public onlyOwner {\r\nwithdrawalAmount = amount * (10**18);\r\n}\r\nfunction setminToken(uint256 amount) public onlyOwner {\r\nminToken = amount * (10**18);\r\n}\r\nfunction setLockTime(uint256 amount) public onlyOwner {\r\nlockTime = amount * 24 hours;\r\n}\r\nfunction kill() external onlyOwner {\r\nemit Withdrawal(msg.sender, token.balanceOf(address(this)));\r\ntoken.transfer(msg.sender, token.balanceOf(address(this)));\r\n}\r\n    \r\nmodifier onlyOwner() {\r\nrequire(msg.sender == owner,\"Only the contract owner can call this function\");\r\n_;\r\n}\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastDepositedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastHarvestedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastUserActionTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setLockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setWithdrawalAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setminToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastUserActionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingReward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Faucet", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000adaae082237cb1772c9e079db95c117e6dd0c5af", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e04bbaa2001a50d95e160649a496c50e0c68513b1bbf1bb5a2238bb50693ff13"}