{"SourceCode": "// SPDX-License-Identifier: Unlicensed\r\npragma solidity ^0.8.9;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\ncontract TaxStructureFactory is Ownable {\r\n  event Deploy(address addr, address deployer);\r\n\r\n  constructor () {}\r\n\r\n  function deployTaxStructure(uint _salt, address _router) external returns (address) { \r\n    TaxStructure _contract = new TaxStructure{\r\n      salt: bytes32(_salt)\r\n    }(_msgSender(), _router);\r\n    emit Deploy(address(_contract), msg.sender);\r\n    return address(_contract);\r\n  }\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n}\r\n\r\ninterface IUniswapV2Pair {\r\n    function factory() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n}\r\n\r\ncontract TaxStructure is Ownable {\r\n    uint256 public feeDecimal = 2;\r\n    address public routerAddress;\r\n\r\n    string public tax1Name;\r\n    address public tax1Wallet;\r\n    uint256 public tax1BuyConfig;\r\n    uint256 public tax1SellConfig;\r\n\r\n    string public tax2Name;\r\n    address public tax2Wallet;\r\n    uint256 public tax2BuyConfig;\r\n    uint256 public tax2SellConfig;\r\n\r\n    string public tax3Name;\r\n    address public tax3Wallet;\r\n    uint256 public tax3BuyConfig;\r\n    uint256 public tax3SellConfig;\r\n\r\n    string public tax4Name;\r\n    address public tax4Wallet;\r\n    uint256 public tax4BuyConfig;\r\n    uint256 public tax4SellConfig;\r\n  \r\n    string public tokenTaxName;\r\n    address public tokenTaxWallet;\r\n    uint256 public tokenTaxBuyConfig;\r\n    uint256 public tokenTaxSellConfig;\r\n\r\n    address public burnAddress = 0x000000000000000000000000000000000000dEaD;\r\n    uint256 public burnTaxBuyConfig;\r\n    uint256 public burnTaxSellConfig;\r\n  \r\n    address public lpTokenHolder;\r\n    uint256 public liquidityTaxBuyConfig;\r\n    uint256 public liquidityTaxSellConfig;\r\n\r\n    string public customTaxName;\r\n\r\n    event TaxUpdated(\r\n        string oldName,\r\n        address oldWallet,\r\n        uint256 oldBuyAmount,\r\n        uint256 oldSellAmount,\r\n        string newName,\r\n        address newWallet,\r\n        uint256 newBuyAmount,\r\n        uint256 newSellAmount\r\n    );\r\n\r\n    event CustomTaxNameUpdated(\r\n        string oldName,\r\n        string newName\r\n    );\r\n\r\n    event RouterUpdated(\r\n        address oldRouter,\r\n        address newRouter\r\n    );\r\n\r\n    event FeeDecimalUpdated(\r\n        uint256 oldDecimal,\r\n        uint256 newDecimal\r\n    );\r\n\r\n    constructor (address _owner, address _router) {\r\n      transferOwnership(_owner);\r\n      routerAddress = _router;\r\n    }\r\n\r\n    // buy amounts\r\n    function tax1BuyAmount (address _address) public view returns (uint256) {\r\n      return tax1BuyConfig;\r\n    }\r\n    function tax2BuyAmount (address _address) public view returns (uint256) {\r\n      return tax2BuyConfig;\r\n    }\r\n    function tax3BuyAmount (address _address) public view returns (uint256) {\r\n      return tax3BuyConfig;\r\n    }\r\n    function tax4BuyAmount (address _address) public view returns (uint256) {\r\n      return tax4BuyConfig;\r\n    }\r\n    function tokenTaxBuyAmount (address _address) public view returns (uint256) {\r\n      return tokenTaxBuyConfig;\r\n    }\r\n    function burnTaxBuyAmount (address _address) public view returns (uint256) {\r\n      return burnTaxBuyConfig;\r\n    }\r\n    function liquidityTaxBuyAmount (address _address) public view returns (uint256) {\r\n      return liquidityTaxBuyConfig;\r\n    }\r\n\r\n    // sell sell amounts\r\n    function tax1SellAmount (address _address) public view returns (uint256) {\r\n      return tax1SellConfig;\r\n    }\r\n    function tax2SellAmount (address _address) public view returns (uint256) {\r\n      return tax2SellConfig;\r\n    }\r\n    function tax3SellAmount (address _address) public view returns (uint256) {\r\n      return tax3SellConfig;\r\n    }\r\n    function tax4SellAmount (address _address) public view returns (uint256) {\r\n      return tax4SellConfig;\r\n    }\r\n    function tokenTaxSellAmount (address _address) public view returns (uint256) {\r\n      return tokenTaxSellConfig;\r\n    }\r\n    function burnTaxSellAmount (address _address) public view returns (uint256) {\r\n      return burnTaxSellConfig;\r\n    }\r\n    function liquidityTaxSellAmount (address _address) public view returns (uint256) {\r\n      return liquidityTaxSellConfig;\r\n    }\r\n\r\n    function setRouterAddress (address _newRouterAddress) external onlyOwner {\r\n      address _oldRouter = routerAddress;\r\n      routerAddress = _newRouterAddress;\r\n\r\n      emit RouterUpdated(\r\n        _oldRouter,\r\n        routerAddress\r\n      );\r\n    }\r\n\r\n    function setTax1 (string memory _name, address _wallet, uint256 _buyAmount, uint256 _sellAmount) external onlyOwner {\r\n      string memory _oldName = tax1Name;\r\n      address _oldWallet = tax1Wallet;\r\n      uint256 _oldBuyAmount = tax1BuyConfig;\r\n      uint256 _oldSellAmount = tax1SellConfig;\r\n\r\n      tax1Name = _name;\r\n      tax1Wallet = _wallet;\r\n      tax1BuyConfig = _buyAmount;\r\n      tax1SellConfig = _sellAmount;\r\n\r\n      emit TaxUpdated(\r\n        _oldName,\r\n        _oldWallet,\r\n        _oldBuyAmount,\r\n        _oldSellAmount,\r\n        tax1Name,\r\n        tax1Wallet,\r\n        tax1BuyConfig,\r\n        tax1SellConfig\r\n      );\r\n    }\r\n\r\n    function setTax2 (string memory _name, address _wallet, uint256 _buyAmount, uint256 _sellAmount) external onlyOwner {\r\n      string memory _oldName = tax2Name;\r\n      address _oldWallet = tax2Wallet;\r\n      uint256 _oldBuyAmount = tax2BuyConfig;\r\n      uint256 _oldSellAmount = tax2SellConfig;\r\n\r\n      tax2Name = _name;\r\n      tax2Wallet = _wallet;\r\n      tax2BuyConfig = _buyAmount;\r\n      tax2SellConfig = _sellAmount;\r\n\r\n      emit TaxUpdated(\r\n        _oldName,\r\n        _oldWallet,\r\n        _oldBuyAmount,\r\n        _oldSellAmount,\r\n        tax2Name,\r\n        tax2Wallet,\r\n        tax2BuyConfig,\r\n        tax2SellConfig\r\n      );\r\n    }\r\n\r\n    function setTax3 (string memory _name, address _wallet, uint256 _buyAmount, uint256 _sellAmount) external onlyOwner  {\r\n      string memory _oldName = tax3Name;\r\n      address _oldWallet = tax3Wallet;\r\n      uint256 _oldBuyAmount = tax3BuyConfig;\r\n      uint256 _oldSellAmount = tax3SellConfig;\r\n\r\n      tax3Name = _name;\r\n      tax3Wallet = _wallet;\r\n      tax3BuyConfig = _buyAmount;\r\n      tax3SellConfig = _sellAmount;\r\n\r\n      emit TaxUpdated(\r\n        _oldName,\r\n        _oldWallet,\r\n        _oldBuyAmount,\r\n        _oldSellAmount,\r\n        tax3Name,\r\n        tax3Wallet,\r\n        tax3BuyConfig,\r\n        tax3SellConfig\r\n      );\r\n    }\r\n\r\n    function setTax4 (string memory _name, address _wallet, uint256 _buyAmount, uint256 _sellAmount) external onlyOwner {\r\n      string memory _oldName = tax4Name;\r\n      address _oldWallet = tax4Wallet;\r\n      uint256 _oldBuyAmount = tax4BuyConfig;\r\n      uint256 _oldSellAmount = tax4SellConfig;\r\n\r\n      tax4Name = _name;\r\n      tax4Wallet = _wallet;\r\n      tax4BuyConfig = _buyAmount;\r\n      tax4SellConfig = _sellAmount;\r\n\r\n      emit TaxUpdated(\r\n        _oldName,\r\n        _oldWallet,\r\n        _oldBuyAmount,\r\n        _oldSellAmount,\r\n        tax4Name,\r\n        tax4Wallet,\r\n        tax4BuyConfig,\r\n        tax4SellConfig\r\n      );\r\n    }\r\n\r\n    function setTokenTax (string memory _name, address _wallet, uint256 _buyAmount, uint256 _sellAmount) external onlyOwner {\r\n      string memory _oldName = tokenTaxName;\r\n      address _oldWallet = tokenTaxWallet;\r\n      uint256 _oldBuyAmount = tokenTaxBuyConfig;\r\n      uint256 _oldSellAmount = tokenTaxSellConfig;\r\n\r\n      tokenTaxName = _name;\r\n      tokenTaxWallet = _wallet;\r\n      tokenTaxBuyConfig = _buyAmount;\r\n      tokenTaxSellConfig = _sellAmount;\r\n\r\n      emit TaxUpdated(\r\n        _oldName,\r\n        _oldWallet,\r\n        _oldBuyAmount,\r\n        _oldSellAmount,\r\n        tokenTaxName,\r\n        tokenTaxWallet,\r\n        tokenTaxBuyConfig,\r\n        tokenTaxSellConfig\r\n      );\r\n    }\r\n\r\n    function setLiquidityTax (address _lpTokenHolder, uint256 _buyAmount, uint256 _sellAmount) external onlyOwner {\r\n      address _oldLpTokenHolder = lpTokenHolder;\r\n      uint256 _oldBuyAmount = liquidityTaxBuyConfig;\r\n      uint256 _oldSellAmount = liquidityTaxSellConfig;\r\n\r\n      lpTokenHolder = _lpTokenHolder;\r\n      liquidityTaxBuyConfig = _buyAmount;\r\n      liquidityTaxSellConfig = _sellAmount;\r\n\r\n      emit TaxUpdated(\r\n        'Liquidity Tax',\r\n        _oldLpTokenHolder,\r\n        _oldBuyAmount,\r\n        _oldSellAmount,\r\n        'Liquidity Tax',\r\n        lpTokenHolder,\r\n        liquidityTaxBuyConfig,\r\n        liquidityTaxSellConfig\r\n      );\r\n    }\r\n\r\n    function setBurnTax (address _burnAddress, uint256 _buyAmount, uint256 _sellAmount) external onlyOwner {\r\n      address _oldBurnAddress = burnAddress;\r\n      uint256 _oldBuyAmount = burnTaxBuyConfig;\r\n      uint256 _oldSellAmount = burnTaxSellConfig;\r\n\r\n      burnAddress = _burnAddress;\r\n      burnTaxBuyConfig = _buyAmount;\r\n      burnTaxSellConfig = _sellAmount;\r\n\r\n      emit TaxUpdated(\r\n        'Burn Tax',\r\n        _oldBurnAddress,\r\n        _oldBuyAmount,\r\n        _oldSellAmount,\r\n        'Burn Tax',\r\n        burnAddress,\r\n        burnTaxBuyConfig,\r\n        burnTaxSellConfig\r\n      );\r\n    }\r\n\r\n    function setCustomTaxName (string memory _name) external onlyOwner {\r\n      string memory _oldName = customTaxName;\r\n      customTaxName = _name;\r\n\r\n      emit CustomTaxNameUpdated(\r\n        _oldName,\r\n        customTaxName\r\n      );\r\n    }\r\n\r\n    function setFeeDecimal (uint256 _newDecimal) external onlyOwner {\r\n      uint256 _oldDecimal = feeDecimal;\r\n      feeDecimal = _newDecimal;\r\n      \r\n      emit FeeDecimalUpdated(\r\n        _oldDecimal,\r\n        feeDecimal\r\n      );\r\n    }\r\n\r\n    function getBuyTaxAmounts (\r\n      address _address\r\n    ) external view returns (uint256, uint256, uint256, uint256, uint256, uint256, uint256) {\r\n      return (\r\n        tax1BuyAmount(_address),\r\n        tax2BuyAmount(_address),\r\n        tax3BuyAmount(_address),\r\n        tax4BuyAmount(_address),\r\n        tokenTaxBuyAmount(_address),\r\n        burnTaxBuyAmount(_address),\r\n        liquidityTaxBuyAmount(_address)\r\n      );\r\n    }\r\n\r\n    function getSellTaxAmounts (\r\n      address _address\r\n    ) external view returns (uint256, uint256, uint256, uint256, uint256, uint256, uint256) {\r\n      return (\r\n        tax1SellAmount(_address),\r\n        tax2SellAmount(_address),\r\n        tax3SellAmount(_address),\r\n        tax4SellAmount(_address),\r\n        tokenTaxSellAmount(_address),\r\n        burnTaxSellAmount(_address),\r\n        liquidityTaxSellAmount(_address)\r\n      );\r\n    }\r\n\r\n    function getTaxNames () external view returns (string memory, string memory, string memory, string memory, string memory, string memory, string memory) {\r\n      return (\r\n        tax1Name,\r\n        tax2Name,\r\n        tax3Name,\r\n        tax4Name,\r\n        tokenTaxName,\r\n        \"Burn Tax\",\r\n        \"Liquidity Tax\"\r\n      );\r\n    }\r\n\r\n    function getTaxWallets () external view returns (address, address, address, address, address, address, address) {\r\n      return (\r\n        tax1Wallet,\r\n        tax2Wallet,\r\n        tax3Wallet,\r\n        tax4Wallet,\r\n        tokenTaxWallet,\r\n        burnAddress,\r\n        lpTokenHolder\r\n      );\r\n    }\r\n\r\n    function getPair (address _token) public view returns (address) {\r\n        IUniswapV2Router02 uniswapV2Router = IUniswapV2Router02(routerAddress);\r\n        IUniswapV2Factory uniswapV2Factory = IUniswapV2Factory(uniswapV2Router.factory());\r\n        return uniswapV2Factory.getPair(uniswapV2Router.WETH(), _token);\r\n    }\r\n\r\n    function getReserves (address _token) external view returns (uint112, uint112, uint32) {\r\n        IUniswapV2Pair pair = IUniswapV2Pair(getPair(_token));\r\n        return pair.getReserves();\r\n    }\r\n\r\n    function getPreSwapBuyTaxAmount (address _address, uint256 customTaxAmount) external view returns (uint256) {\r\n        uint256 taxes = tax1BuyAmount(_address) + tax2BuyAmount(_address) + tax3BuyAmount(_address) + tax4BuyAmount(_address);\r\n        return customTaxAmount + taxes + liquidityTaxBuyAmount(_address) / 2;\r\n    }\r\n\r\n    function getPostSwapBuyTaxAmount (address _address) external view returns (uint256) {\r\n        uint256 taxes = tokenTaxBuyAmount(_address) + burnTaxBuyAmount(_address);\r\n        return taxes + liquidityTaxBuyAmount(_address) / 2;\r\n    }\r\n\r\n    function getPreSwapSellTaxAmount (address _address) external view returns (uint256) {\r\n        uint256 taxes = tokenTaxSellAmount(_address) + burnTaxSellAmount(_address);\r\n        return taxes + liquidityTaxSellAmount(_address) / 2;\r\n    }\r\n\r\n    function getPostSwapSellTaxAmount (address _address) external view returns (uint256) {\r\n        uint256 taxes = tax1SellAmount(_address) + tax2SellAmount(_address) + tax3SellAmount(_address) + tax4SellAmount(_address);\r\n        return taxes + liquidityTaxSellAmount(_address) / 2;\r\n    }\r\n\r\n    function withdrawEthToOwner (uint256 _amount) external onlyOwner {\r\n        payable(_msgSender()).transfer(_amount);\r\n    }\r\n\r\n    function withdrawTokenToOwner(address tokenAddress, uint256 amount) external onlyOwner {\r\n        uint256 balance = IERC20(tokenAddress).balanceOf(address(this));\r\n        require(balance >= amount, \"Insufficient token balance\");\r\n\r\n        IERC20(tokenAddress).transfer(_msgSender(), amount);\r\n    }\r\n\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"Deploy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"deployTaxStructure\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TaxStructureFactory", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e9640a147083d3d32c5399b2ae20806b2fc047602b444832e09c8c35b1d5c523"}