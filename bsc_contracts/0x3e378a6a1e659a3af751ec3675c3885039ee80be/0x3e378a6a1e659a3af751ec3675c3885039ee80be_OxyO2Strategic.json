{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2022-12-29\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT LICENSE\r\npragma solidity ^0.8.2;\r\n\r\ninterface BEP20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    function decimals() external view returns (uint8);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\nlibrary DateTime {\r\n    uint256 constant SECONDS_PER_DAY = 24 * 60 * 60;\r\n    uint256 constant SECONDS_PER_HOUR = 60 * 60;\r\n    uint256 constant SECONDS_PER_MINUTE = 60;\r\n    int256 constant OFFSET19700101 = 2440588;\r\n\r\n    uint256 constant DOW_MON = 1;\r\n    uint256 constant DOW_TUE = 2;\r\n    uint256 constant DOW_WED = 3;\r\n    uint256 constant DOW_THU = 4;\r\n    uint256 constant DOW_FRI = 5;\r\n    uint256 constant DOW_SAT = 6;\r\n    uint256 constant DOW_SUN = 7;\r\n\r\n    function _daysToDate(uint256 _days) internal pure returns (uint256 year, uint256 month, uint256 day) {\r\n        unchecked {\r\n            int256 __days = int256(_days);\r\n\r\n            int256 L = __days + 68569 + OFFSET19700101;\r\n            int256 N = (4 * L) / 146097;\r\n            L = L - (146097 * N + 3) / 4;\r\n            int256 _year = (4000 * (L + 1)) / 1461001;\r\n            L = L - (1461 * _year) / 4 + 31;\r\n            int256 _month = (80 * L) / 2447;\r\n            int256 _day = L - (2447 * _month) / 80;\r\n            L = _month / 11;\r\n            _month = _month + 2 - 12 * L;\r\n            _year = 100 * (N - 49) + _year + L;\r\n\r\n            year = uint256(_year);\r\n            month = uint256(_month);\r\n            day = uint256(_day);\r\n        }\r\n    }\r\n\r\n    function getMonth(uint256 timestamp) internal pure returns (uint256 month) {\r\n        (, month,) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n    }\r\n    function getYear(uint256 timestamp) internal pure returns (uint256 year) {\r\n        (year,,) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n    }\r\n\r\n    function diffMonths(uint256 fromTimestamp, uint256 toTimestamp) internal pure returns (uint256 _months) {\r\n        require(fromTimestamp <= toTimestamp);\r\n        (uint256 fromYear, uint256 fromMonth,) = _daysToDate(fromTimestamp / SECONDS_PER_DAY);\r\n        (uint256 toYear, uint256 toMonth,) = _daysToDate(toTimestamp / SECONDS_PER_DAY);\r\n        _months = toYear * 12 + toMonth - fromYear * 12 - fromMonth;\r\n    }\r\n}\r\ncontract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this;\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ncontract OxyO2Strategic is Ownable {\r\n    uint256 public amount = 1250000e18;\r\n\r\n    uint256 public lastmonth;\r\n    uint public lastyear;\r\n    uint256 private _lockDates;\r\n   BEP20 public ox2;\r\n    constructor(address _token) {\r\n        uint timestamp = block.timestamp;\r\n        lastmonth = DateTime.getMonth(timestamp) == 1 ? 12 : (DateTime.getMonth(timestamp) - 1);\r\n        lastyear = lastmonth == 12 ? (DateTime.getYear(timestamp) - 1 ) : DateTime.getYear(timestamp);\r\n          _lockDates = block.timestamp + 90 days;\r\n              ox2 = BEP20(_token);\r\n    }\r\n\r\n    function getremainingmonths() public view returns (uint) {\r\n        uint256 timestamp = block.timestamp;\r\n        uint256 month;\r\n        uint256 currentyear = DateTime.getYear(timestamp);\r\n        uint256 currentmonth = DateTime.getMonth(timestamp);\r\n        uint256 totalyears = currentyear - lastyear;\r\n         require(\r\n            block.timestamp >= _lockDates,\r\n            \"You can not Transfer your funds yet\"\r\n        );\r\n        if(currentmonth < lastmonth){\r\n            uint256 remainigmonths = (lastmonth - currentmonth);\r\n            month = ((totalyears * 12) - remainigmonths) - 1;\r\n        } else {\r\n            month = ((totalyears * 12) + (currentmonth - lastmonth)) - 1;\r\n        }\r\n        return (month);\r\n    }\r\n    function PrivateStrategic() public onlyOwner {\r\n        uint timestamp = block.timestamp;\r\n        uint256 month = getremainingmonths();\r\n        require(month > 0 , \"timestamp exeeds\");\r\n        if (month > 0) {\r\n            uint256 ox2balance = ox2.balanceOf(address(this));\r\n            require(ox2balance > 0 , \"balance exeeds\");\r\n            if (ox2balance < amount*month) {\r\n                ox2.transfer(owner(), ox2balance);\r\n            } else {\r\n                ox2.transfer(owner(), amount * month);\r\n            }\r\n            uint currentmonth = DateTime.getMonth(timestamp);\r\n            lastyear = DateTime.getYear(timestamp);\r\n            if(currentmonth == 1){\r\n                lastyear = (DateTime.getYear(timestamp) - 1);\r\n                lastmonth = 12;\r\n            }else {\r\n                lastyear = DateTime.getYear(timestamp);\r\n                lastmonth = currentmonth - 1;\r\n            }\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PrivateStrategic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getremainingmonths\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastmonth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastyear\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ox2\",\"outputs\":[{\"internalType\":\"contract BEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "OxyO2Strategic", "CompilerVersion": "v0.8.2+commit.661d1103", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000d1fcb37b4252de1ba686c897ba7be14d04b3954a", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://1755535dc1e7e8aec3c10c64f4d986798bef7ba88068c02bdcedc7230b5b9b76"}