{"SourceCode": "/*\r\nLightLink\r\n\r\nhttps://t.me/LightLink_portal\r\n\r\nWelcome to LightLink, where magic meets the blockchain. \r\nOur journey began with a simple idea \u2013 to blend the enchanting \r\nworld of people with the power of blockchain technology. \r\nWe believe that humor and innovation can coexist to create something \r\ntruly unique. Meet US the Magician, the heart and soul of our project, \r\nand join us in exploring the endless possibilities.\r\n\r\nLightLink fan token\r\n*/\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.23;\r\n\r\ncontract LightLink {\r\n\r\n    address private owner;\r\n    address private SalesA;\r\n    address private SalesB;\r\n    address private SalesC;\r\n    address private burnAddress = 0x000000000000000000000000000000000000dEaD;\r\n\r\n    mapping(address => uint) public balances;\r\n    mapping(address => mapping(address => uint)) public allowance;\r\n    uint public totalSupply = 1000000000000000000 * 10 ** 9;\r\n    string public name = \"LightLink\";\r\n    string public symbol = \"LightLink\";\r\n    uint public decimals = 9;\r\n\r\n    string public LightLinkCHannelTG = \"https://t.me/LightLink\";\r\n            function getLightLinkCHannelTG() public view returns (string memory) {\r\n        return LightLinkCHannelTG;\r\n    }\r\n\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event OwnershipRenounced(address indexed previousOwner);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not the owner\");\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        uint totalSupplyValue,\r\n        address SalesAAddress,\r\n        address SalesBAddress,\r\n        address SalesCAddress\r\n    ) {\r\n        // set total supply\r\n        totalSupply = totalSupplyValue;\r\n\r\n        // designate addresses\r\n        owner = msg.sender;\r\n        SalesA = SalesAAddress;\r\n        SalesB = SalesBAddress;\r\n        SalesC = SalesCAddress;\r\n\r\n        // split the tokens according to agreed-upon percentages\r\n        balances[SalesA] = totalSupply * 1 / 100;\r\n        balances[SalesB] = totalSupply * 1 / 100;\r\n        balances[SalesC] = totalSupply * 2 / 100;\r\n        balances[burnAddress] = 0; // Initialize burn address with zero balance\r\n\r\n        balances[owner] = totalSupply * 96 / 100;\r\n    }\r\n\r\n    function balanceOf(address account) public view returns (uint) {\r\n        return balances[account];\r\n    }\r\n\r\n    function transfer(address to, uint value) public returns (bool) {\r\n        require(balanceOf(msg.sender) >= value, 'balance too low');\r\n        \r\n        // Calculate burn amount (2% of the value)\r\n        uint burnAmount = value * 2 / 100;\r\n        uint transferAmount = value - burnAmount;\r\n\r\n        // Transfer to recipient\r\n        balances[to] += transferAmount;\r\n        emit Transfer(msg.sender, to, transferAmount);\r\n\r\n        // Burn tokens\r\n        balances[burnAddress] += burnAmount;\r\n        emit Transfer(msg.sender, burnAddress, burnAmount);\r\n\r\n        // Decrease sender's balance\r\n        balances[msg.sender] -= value;\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint value) public returns (bool) {\r\n        require(balanceOf(from) >= value, 'balance too low');\r\n        require(allowance[from][msg.sender] >= value, 'allowance too low');\r\n        \r\n        // Calculate burn amount (2% of the value)\r\n        uint burnAmount = value * 2 / 100;\r\n        uint transferAmount = value - burnAmount;\r\n\r\n        // Transfer to recipient\r\n        balances[to] += transferAmount;\r\n        emit Transfer(from, to, transferAmount);\r\n\r\n        // Burn tokens\r\n        balances[burnAddress] += burnAmount;\r\n        emit Transfer(from, burnAddress, burnAmount);\r\n\r\n        // Decrease sender's balance\r\n        balances[from] -= value;\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint value) public returns (bool) {\r\n        allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipRenounced(owner);\r\n        owner = address(0);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupplyValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"SalesAAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"SalesBAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"SalesCAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LightLinkCHannelTG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLightLinkCHannelTG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LightLink", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000021e19e0c9bab2400000000000000000000000000000be7b1367194b18fda96801b9d7c5261f67b83bfa0000000000000000000000000ed194a0e15636a108bd68f02df309e0374a82e4000000000000000000000000e213a73b8bd76edd9d65a1d89465e8624860dd1b", "EVMVersion": "london", "Library": "", "LicenseType": "MPL-2.0", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://cd70dc3bbe7610a6ac32111804ebe6606ace32ea3cb6cd35f5a5529cd80125ea"}