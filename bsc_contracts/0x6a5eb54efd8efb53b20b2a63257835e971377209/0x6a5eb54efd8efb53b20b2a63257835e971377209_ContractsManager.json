{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <=0.8.6;\r\n\r\ncontract ContractsManager {\r\n    address[] public owners;\r\n    mapping(address => bool) public isOwner;\r\n    uint256 public numConfirmationsRequired;\r\n\r\n    Transaction[] public transactions;\r\n\r\n    // mapping from tx index => owner => bool\r\n    mapping(uint => mapping(address => bool)) public transactionsConfirmed;\r\n\r\n    // MODIFIERS\r\n    modifier onlyOwner() {\r\n        require(isOwner[msg.sender], \"ERROR_NOT_OWNER\");\r\n        _;\r\n    }\r\n    modifier txExists(uint _txIndex) {\r\n        require(_txIndex < transactions.length, \"ERROR_TX_DOES_NOT_EXISTS\");\r\n        _;\r\n    }\r\n    modifier notExecuted(uint _txIndex) {\r\n        require(!transactions[_txIndex].executed, \"ERROR_TX_ALREADY_EXECUTED\");\r\n        _;\r\n    }\r\n    modifier notCancelled(uint _txIndex) {\r\n        require(!transactions[_txIndex].cancelled, \"ERROR_TX_ALREADY_CANCELLED\");\r\n        _;\r\n    }\r\n    modifier notConfirmedBySender(uint _txIndex) {\r\n        require(!transactionsConfirmed[_txIndex][msg.sender], \"ERROR_TX_ALTREADY_CONFIRMED\");\r\n        _;\r\n    }\r\n    modifier confirmedBySender(uint _txIndex) {\r\n        require(transactionsConfirmed[_txIndex][msg.sender], \"ERROR_TX_NOT_CONFIRMED_WITH_THIS_ADDRESS\");\r\n        _;\r\n    }\r\n    modifier selfTransaction() {\r\n        require(msg.sender == address(this), \"ERROR_ONLY_SELF_TX\");\r\n        _;\r\n    }\r\n\r\n    // STRUCTS\r\n    struct Transaction {\r\n        address to;\r\n        uint value;\r\n        bytes data;\r\n        bool executed;\r\n        bool cancelled;\r\n        uint numConfirmations;\r\n    }\r\n\r\n    // CONTRUCTOR\r\n    constructor(address[] memory _owners, uint _numConfirmationsRequired) {\r\n        setOwners(_owners, _numConfirmationsRequired);\r\n    }\r\n\r\n    // ONLYOWNER METHODS\r\n    function submitTransaction(address _to, uint _value, bytes memory _data)\r\n        public\r\n        payable\r\n        onlyOwner\r\n    {\r\n        uint txIndex = transactions.length;\r\n\r\n        transactions.push(Transaction({\r\n            to: _to,\r\n            value: _value,\r\n            data: _data,\r\n            executed: false,\r\n            cancelled: false,\r\n            numConfirmations: 1\r\n        }));\r\n\r\n        transactionsConfirmed[txIndex][msg.sender] = true;\r\n\r\n        emit SubmitedTransaction(msg.sender, txIndex, _to, _value, 1, _data);\r\n    }\r\n\r\n    function confirmTransaction(uint _txIndex)\r\n        public\r\n        onlyOwner\r\n        txExists(_txIndex)\r\n        notExecuted(_txIndex)\r\n        notCancelled(_txIndex)\r\n        notConfirmedBySender(_txIndex)\r\n    {\r\n        Transaction storage transaction = transactions[_txIndex];\r\n        transaction.numConfirmations += 1;\r\n        transactionsConfirmed[_txIndex][msg.sender] = true;\r\n\r\n        emit ConfirmedTransaction(msg.sender, _txIndex, transaction.numConfirmations);\r\n    }\r\n\r\n    function cancelConfirmation(uint _txIndex)\r\n        public\r\n        onlyOwner\r\n        txExists(_txIndex)\r\n        notExecuted(_txIndex)\r\n        notCancelled(_txIndex)\r\n        confirmedBySender(_txIndex)\r\n    {\r\n        Transaction storage transaction = transactions[_txIndex];\r\n\r\n        transaction.numConfirmations -= 1;\r\n        transactionsConfirmed[_txIndex][msg.sender] = false;\r\n\r\n        emit CancelledConfirmation(msg.sender, _txIndex, transaction.numConfirmations);\r\n    }\r\n\r\n    function cancelTransaction(uint _txIndex)\r\n        public\r\n        onlyOwner\r\n        txExists(_txIndex)\r\n        notExecuted(_txIndex)\r\n        notCancelled(_txIndex)\r\n    {\r\n        transactions[_txIndex].cancelled = true;\r\n\r\n        emit CancelledTransaction(msg.sender, _txIndex);\r\n    }\r\n\r\n    function executeTransaction(uint _txIndex)\r\n        public\r\n        onlyOwner\r\n        txExists(_txIndex)\r\n        notExecuted(_txIndex)\r\n        notCancelled(_txIndex)\r\n    {\r\n        Transaction storage transaction = transactions[_txIndex];\r\n\r\n        require(\r\n            transaction.numConfirmations >= numConfirmationsRequired,\r\n            \"ERROR_NOT_CONFIRMED_TX\"\r\n        );\r\n\r\n        transaction.executed = true;\r\n\r\n        (bool success,) = transaction.to.call{value: transaction.value}(transaction.data);\r\n        require(success, \"ERROR_TX_CALL_FAIL\");\r\n\r\n        emit ExecutedTransaction(msg.sender, _txIndex);\r\n    }\r\n\r\n    // INTERNAL METHODS\r\n    function changeOwners(address[] memory _owners, uint _numConfirmationsRequired)\r\n        public\r\n        selfTransaction\r\n    {   \r\n        setOwners(_owners, _numConfirmationsRequired);\r\n    }\r\n\r\n    function setOwners(address[] memory _owners, uint _numConfirmationsRequired) internal {\r\n        require(_owners.length > 0, \"ERROR_OWNERS_REQUIRED\");\r\n        require(\r\n            _numConfirmationsRequired > 0 && _numConfirmationsRequired <= _owners.length,\r\n            \"ERROR_INVALID_CONFIRMATIONS\"\r\n        );\r\n\r\n        for (uint i = 0; i < owners.length; i++) {\r\n            isOwner[owners[i]] = false;\r\n        }\r\n\r\n        delete owners;\r\n\r\n        for (uint i = 0; i < _owners.length; i++) {\r\n            address owner = _owners[i];\r\n\r\n            require(owner != address(0), \"ERROR_INVALID_OWNER_ADDRESS\");\r\n            require(!isOwner[owner], \"ERROR_ADDRESS_NOT_UNIQUE\");\r\n\r\n            isOwner[owner] = true;\r\n        }\r\n\r\n        owners = _owners;\r\n        numConfirmationsRequired = _numConfirmationsRequired;\r\n    }\r\n\r\n    // PUBLIC METHODS\r\n    function getOwners() public view returns (address[] memory) {\r\n        return owners;\r\n    }\r\n\r\n    function getTransactionsCount() public view returns (uint) {\r\n        return transactions.length;\r\n    }\r\n\r\n    function getTransactions() public view returns (Transaction[] memory) {\r\n        return transactions;\r\n    }\r\n    \r\n    function getIsTransactionConfirmed(uint _txIndex, address _owner) public view returns (bool) {\r\n        return transactionsConfirmed[_txIndex][_owner];\r\n    }\r\n\r\n    // EVENTS\r\n    event SubmitedTransaction(\r\n        address indexed owner,\r\n        uint indexed txIndex,\r\n        address indexed to,\r\n        uint value,\r\n        uint numConfirmations,\r\n        bytes data\r\n    );\r\n    event ConfirmedTransaction(address indexed owner, uint indexed txIndex, uint indexed numConfirmations);\r\n    event ExecutedTransaction(address indexed owner, uint indexed txIndex);\r\n    event CancelledConfirmation(address indexed owner, uint indexed txIndex, uint indexed numConfirmations);\r\n    event CancelledTransaction(address indexed owner, uint indexed txIndex);\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_numConfirmationsRequired\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"name\":\"CancelledConfirmation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"CancelledTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"name\":\"ConfirmedTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ExecutedTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"SubmitedTransaction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"cancelConfirmation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"cancelTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_numConfirmationsRequired\",\"type\":\"uint256\"}],\"name\":\"changeOwners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"confirmTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getIsTransactionConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"internalType\":\"struct ContractsManager.Transaction[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numConfirmationsRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"submitTransaction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"transactionsConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ContractsManager", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000af8cb55b6fad3e99150cc9d25d273097ee1f76520000000000000000000000001e9f7d829f3880013e866f8699b78fabcf2a65fd000000000000000000000000dc9a9e8bb41b8c3e2e27d21208aff0145420f7c2000000000000000000000000653d11f97c8dd3633e5fa69c98853923e765a881", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ddaa3c3b3ee9a3a9fafd1bd72d318b8f67cf323254dd951f1606f53b498c9d84"}