{"SourceCode": "{\"pledge_porxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"./proxy.sol\\\";\\n\\ncontract PledgePorxy is basePorxy{\\n       constructor(address impl) {\\n        _setAdmin(msg.sender);\\n        _setLogic(impl);\\n    }\\n}\\n\"},\"proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\\ncontract Proxy {\\n    //EIP1967 Impl_solt: keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n    //EIP1967 Admin_solt: keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n  \\n    function _setAdmin(address admin_) internal {\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = admin_;\\n    }\\n    \\n    function _setLogic(address logic_) internal {\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = logic_;\\n    }\\n    \\n    function logic() public view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n    \\n    function admin() public view returns (address) {\\n       return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n    \\n    \\n    fallback () external payable {\\n        assembly {\\n            let impl := sload(_IMPLEMENTATION_SLOT)\\n            calldatacopy(0, 0, calldatasize())\\n            let result := delegatecall(gas(), impl, 0, calldatasize(), 0, 0)\\n            returndatacopy(0, 0, returndatasize())\\n            switch result\\n            case 0 { revert(0, returndatasize()) }\\n            default { return(0, returndatasize()) }\\n        }\\n    }\\n    \\n    receive () external payable virtual {}\\n}\\n\\n\\ncontract basePorxy is Proxy {\\n    event Upgraded(address indexed impl);\\n    event AdminChanged(address preAdmin, address newAdmin);\\n    \\n    modifier onlyAmdin(){\\n        require(msg.sender == admin(), \\\"LucaPorxy: Caller not admin\\\");\\n        _;\\n    }\\n    \\n    function changeAdmin(address newAdmin) external onlyAmdin returns(bool) {\\n        _setAdmin(newAdmin);\\n        emit AdminChanged(admin(), newAdmin);\\n        return true;\\n    } \\n    \\n    function upgrad(address newLogic) external onlyAmdin returns(bool) {\\n        _setLogic(newLogic);\\n        emit Upgraded(newLogic);\\n        return true;\\n    }\\n}\"}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"preAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"logic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newLogic\",\"type\":\"address\"}],\"name\":\"upgrad\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PledgePorxy", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000cfb5e11a1fb7217ad6fccc083891c9c1f48b8377", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "1", "Implementation": "0x12fd216bb03f40afb585063966ae21d11002f351", "SwarmSource": "ipfs://5c4e9c43770c8c0fc89c775a5d5b2dff62fd7ad71aa6c8d1e01b285b38b839c1"}