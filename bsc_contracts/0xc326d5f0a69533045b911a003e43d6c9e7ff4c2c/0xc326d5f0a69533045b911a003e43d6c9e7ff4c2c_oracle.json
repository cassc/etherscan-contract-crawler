{"SourceCode": "//SPDX-License-Identifier: Unlicense\r\n\r\n\r\npragma solidity 0.8.19;\r\n\r\ncontract owned {\r\n    address payable public owner;\r\n\r\n    constructor ()  {\r\n        owner = payable(msg.sender);\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n         require(msg.sender == owner,\"only owner method\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address payable newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract limited is owned {\r\n    mapping (address => bool) canAsk;\r\n    \r\n    \r\n     modifier onlyCanAsk {\r\n        require(canAsk[msg.sender]);\r\n        _;\r\n    }\r\n    \r\n    \r\n    \r\n    function changeAsk (address a,bool allow) onlyOwner public {\r\n        canAsk[a] = allow;\r\n    }\r\n    \r\n}\r\n\r\ninterface ICampaign {\r\n    \r\n    function update(bytes32 idRequest,uint64 likes,uint64 shares,uint64 views) external  returns (bool ok);\r\n    function updateBounty(bytes32 idProm,uint256 nbAbos) external  returns (bool ok);\r\n}\r\n\r\ninterface IERC20 {\r\n   function transfer(address _to, uint256 _value) external;\r\n}\r\n\r\ncontract oracle is limited {\r\n    \r\n    struct oracleUnit {\r\n        bool granted;\r\n        address token;\r\n        uint256 fee;\r\n    }\r\n    \r\n    mapping (address => oracleUnit) oracleList;\r\n    \r\n     modifier onlyCanAnswer {\r\n        require(oracleList[msg.sender].granted || msg.sender == owner,\"sender not in whitelist\");\r\n        _;\r\n    }\r\n    \r\n    /**\r\n    * @dev Modifier to prevent reentrancy attacks during function execution.\r\n    * It sets a flag before the function body and resets it after execution.\r\n    */\r\n    modifier noReentrancy() {\r\n        // Ensure that reentrancy is not already in progress\r\n        require(!_withdrawalInProgress, \"Reentrant call\");\r\n\r\n        _withdrawalInProgress = true; // Set the flag to prevent reentrancy\r\n        _; // This underscores the location where the modified function's body will be placed.\r\n        _withdrawalInProgress = false; // Reset the flag after the function completes\r\n    }\r\n    \r\n    modifier validCampaignAddress(address campaignContract){\r\n        require(campaignContract != address(0), \"Invalid campaign address\");\r\n        _;\r\n    }\r\n    bool private _withdrawalInProgress; // Reentrancy guard\r\n\r\n    function changeAnswer (address oracleAddress,bool allow,address token,uint256 fee) onlyOwner validCampaignAddress(oracleAddress) public {\r\n        oracleList[oracleAddress] = oracleUnit(allow,token,fee);\r\n\r\n         emit OracleInfoUpdated(oracleAddress, allow, token, fee);\r\n    }\r\n    \r\n    event AskRequest(bytes32 indexed idRequest, uint8 typeSN, string idPost,string idUser);\r\n    event AnswerRequest(bytes32 indexed idRequest, uint64 likes, uint64 shares, uint64 views);\r\n    \r\n    event AskRequestBounty( uint8 typeSN, string idPost,string idUser,bytes32 idProm);\r\n    event AnswerRequestBounty(bytes32 indexed idProm,uint256 nbAbos);\r\n    event OracleInfoUpdated(address indexed oracleAddress, bool allow, address token, uint256 fee);\r\n\r\n    \r\n    function  ask (uint8 typeSN,string memory idPost,string memory idUser, bytes32 idRequest) public onlyCanAsk\r\n    {\r\n        emit AskRequest(idRequest, typeSN, idPost, idUser );\r\n    }\r\n    \r\n    function askBounty(uint8 typeSN,string memory idPost,string memory idUser, bytes32 idProm) public onlyCanAsk\r\n    {\r\n        emit AskRequestBounty( typeSN, idPost, idUser, idProm);\r\n    }\r\n    \r\n    function answer(address campaignContract,bytes32 idRequest,uint64 likes,uint64 shares, uint64 views) public onlyOwner validCampaignAddress(campaignContract){\r\n        ICampaign campaign = ICampaign(campaignContract);\r\n        campaign.update(idRequest,likes,shares,views);\r\n        emit AnswerRequest(idRequest,likes,shares,views);\r\n    }\r\n    \r\n    function answerBounty(address campaignContract,bytes32 idProm,uint256 nbAbos) public onlyOwner validCampaignAddress(campaignContract){\r\n        ICampaign campaign = ICampaign(campaignContract);\r\n        campaign.updateBounty(idProm,nbAbos);\r\n        emit AnswerRequestBounty(idProm,nbAbos);\r\n    }\r\n    \r\n    \r\n     function thirdPartyAnswer(address campaignContract,bytes32 idRequest,uint64 likes,uint64 shares, uint64 views) public onlyCanAnswer validCampaignAddress(campaignContract) {\r\n        ICampaign campaign = ICampaign(campaignContract);\r\n        campaign.update(idRequest,likes,shares,views);\r\n        emit AnswerRequest(idRequest,likes,shares,views);\r\n        \r\n    \r\n        IERC20 erc20 = IERC20(oracleList[msg.sender].token);\r\n        erc20.transfer(msg.sender,oracleList[msg.sender].fee);\r\n     }\r\n       \r\n    function withdraw() onlyOwner noReentrancy public {\r\n      owner.transfer(address(this).balance);\r\n    }\r\n    \r\n    function transferToken (address token,address to,uint256 val) public onlyOwner {\r\n        IERC20 erc20 = IERC20(token);\r\n        erc20.transfer(to,val);\r\n    }\r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"idRequest\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"likes\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"shares\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"views\",\"type\":\"uint64\"}],\"name\":\"AnswerRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"idProm\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nbAbos\",\"type\":\"uint256\"}],\"name\":\"AnswerRequestBounty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"idRequest\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"typeSN\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"idPost\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"idUser\",\"type\":\"string\"}],\"name\":\"AskRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"typeSN\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"idPost\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"idUser\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"idProm\",\"type\":\"bytes32\"}],\"name\":\"AskRequestBounty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allow\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"OracleInfoUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"campaignContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idRequest\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"likes\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"shares\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"views\",\"type\":\"uint64\"}],\"name\":\"answer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"campaignContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idProm\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nbAbos\",\"type\":\"uint256\"}],\"name\":\"answerBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"typeSN\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"idPost\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"idUser\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"idRequest\",\"type\":\"bytes32\"}],\"name\":\"ask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"typeSN\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"idPost\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"idUser\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"idProm\",\"type\":\"bytes32\"}],\"name\":\"askBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allow\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"changeAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allow\",\"type\":\"bool\"}],\"name\":\"changeAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"campaignContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"idRequest\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"likes\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"shares\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"views\",\"type\":\"uint64\"}],\"name\":\"thirdPartyAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "oracle", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://589d2fbd2bbb94dc0d91c2e7793bb87272e11b2725a3830cc7e87e17637e96c7"}