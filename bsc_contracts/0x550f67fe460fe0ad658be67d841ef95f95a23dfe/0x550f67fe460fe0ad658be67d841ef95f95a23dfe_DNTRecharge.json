{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity >= 0.8.0 < 0.9.0;\r\n\r\ninterface MyERC  {\r\n    function transferFrom(\r\n        address _from, address _to, uint _value\r\n    ) external;\r\n    function balanceOf(address tokenHolder) external  view returns (uint256);\r\n}\r\ncontract DNTRecharge\r\n{\r\n    address public official;\r\n    ReChangeLogs[] private _Logs;\r\n    MyERC public PayContract;\r\n    uint256 public OnePrices;\r\n    mapping(uint64 => bool) private _PayStatus;\r\n    // admin address\r\n    address public Admin;\r\n\r\n    uint256 public MaxPayNumber;\r\n\r\n    modifier onlyAdmin()\r\n    {\r\n        require(msg.sender == Admin, \"only admin user opertions\");\r\n        _;\r\n    }\r\n\r\n    struct ReChangeLogs\r\n    {\r\n        uint256 Amount;\r\n        uint64 OrderId;\r\n        uint64 Time;\r\n        address Address;\r\n    }\r\n    constructor(address _official, address admin, MyERC _payContract, uint256 _onePrice, uint256  maxPayNumber)\r\n    {\r\n        Admin = msg.sender;\r\n        PayContract = _payContract;\r\n        setOfficial(_official);\r\n        setOnePrice(_onePrice);\r\n        seMaxPayNumber(maxPayNumber);\r\n        setAdmin(admin);\r\n    }\r\n    \r\n    function setOfficial(address  _newOfficial) public onlyAdmin \r\n    {\r\n        official = _newOfficial;\r\n    }\r\n\r\n    function setOnePrice(uint256 _onePrice) public onlyAdmin\r\n    {\r\n        OnePrices = _onePrice;\r\n    }\r\n\r\n    function seMaxPayNumber(uint256  maxPayNumber) public onlyAdmin \r\n    {\r\n        require(maxPayNumber >= GetOrderLength(), \"max len is too small\");\r\n        MaxPayNumber = maxPayNumber;\r\n    }\r\n\r\n    function setAdmin(address admin) public onlyAdmin \r\n    {\r\n        Admin = admin;\r\n    }\r\n\r\n\r\n    function ReChange(uint64 orderId) external\r\n    {\r\n        require(GetOrderLength() < MaxPayNumber, \"more than the max len!\");\r\n        require(_PayStatus[orderId] == false, \"order has been paid\");\r\n\r\n        require(PayContract.balanceOf(msg.sender) >= OnePrices , \"Not enough sent\");\r\n\r\n         _Logs.push(ReChangeLogs(\r\n            {\r\n                Amount: OnePrices,\r\n                OrderId: orderId,\r\n                Time:uint64(block.timestamp),\r\n                Address:msg.sender\r\n            }\r\n        ));\r\n        _PayStatus[orderId] = true;\r\n\r\n        PayContract.transferFrom(msg.sender, official , OnePrices);\r\n    }\r\n    function GetOrderLength() public view returns(uint256)\r\n    {\r\n        return _Logs.length;\r\n    }\r\n    function GetPayOrderInfo(uint256 index) public view returns(ReChangeLogs memory)\r\n    {\r\n        return _Logs[index];\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_official\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"contract MyERC\",\"name\":\"_payContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_onePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPayNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"GetPayOrderInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"OrderId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"Time\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"Address\",\"type\":\"address\"}],\"internalType\":\"struct DNTRecharge.ReChangeLogs\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MaxPayNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OnePrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PayContract\",\"outputs\":[{\"internalType\":\"contract MyERC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"orderId\",\"type\":\"uint64\"}],\"name\":\"ReChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"official\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxPayNumber\",\"type\":\"uint256\"}],\"name\":\"seMaxPayNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOfficial\",\"type\":\"address\"}],\"name\":\"setOfficial\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_onePrice\",\"type\":\"uint256\"}],\"name\":\"setOnePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DNTRecharge", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000058e3b7fa88eb89615c9d02e788b84b1919c94b8b000000000000000000000000692c2e89ab2eaa3b560cdefcfe9be83cae42331800000000000000000000000044836708ff32246635d8d08c785f4e779e2945980000000000000000000000000000000000000000000000000000002e90edd00000000000000000000000000000000000000000000000000000000000000001f4", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://9e3b2b79a269764240ce1c6795fbc99f4a77ba41a2470c8d011f387a7a6cc587"}