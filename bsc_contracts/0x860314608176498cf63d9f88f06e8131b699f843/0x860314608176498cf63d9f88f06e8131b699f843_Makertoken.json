{"SourceCode": "pragma solidity ^0.8.7;\r\n// ---------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// SafeMath\u5b89\u5168\u5e93\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns(uint) {\r\n        \r\n        uint c = a + b;\r\n        \r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        \r\n        return c;\r\n    }\r\n    function sub(uint a, uint b) internal pure returns(uint) {\r\n        \r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint a, uint b, string memory errorMessage) internal pure returns(uint) {\r\n        \r\n        require(b <= a, errorMessage);\r\n        \r\n        uint c = a - b;\r\n        \r\n        return c;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns(uint) {\r\n        if (a == 0) {\r\n            \r\n            return 0;\r\n        }\r\n        uint c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        \r\n        return c;\r\n    }\r\n    function div(uint a, uint b) internal pure returns(uint) {\r\n        \r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function div(uint a, uint b, string memory errorMessage) internal pure returns(uint) {\r\n        \r\n        // Solidity only automatically asserts when dividing by 0  \r\n        \r\n        require(b > 0, errorMessage);\r\n        \r\n        uint c = a / b;\r\n        \r\n        return c;\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC20 \u4ee3\u5e01\u6807\u51c6\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\r\n// ----------------------------------------------------------------------------\r\ninterface ERC20Interface {\r\n    function totalSupply() external view returns(uint);\r\n\r\n    function balanceOf(address account) external view returns(uint);\r\n\r\n    function transfer(address recipient, uint amount) external returns(bool);\r\n\r\n    function allowance(address deployer, address spender) external view returns(uint);\r\n\r\n    function approve(address spender, uint amount) external returns(bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint amount) external returns(bool);\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    \r\n    event Approval(address indexed deployer, address indexed spender, uint value);\r\n}\r\n\r\ninterface fenhong {\r\n    function addfenhong(uint num) external returns (bool success);\r\n\r\n   \r\n}\r\n// ----------------------------------------------------------------------------\r\n// \u6240\u6709\u8005\u5408\u7ea6\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n   address public owner;\r\n   address public newOwner;\r\n\r\n   event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n   constructor() public {\r\n       owner = msg.sender;\r\n   }\r\n\r\n   modifier onlyOwner {\r\n       require(msg.sender == owner);\r\n       _;\r\n   }\r\n\r\n   function transferOwnership(address _newOwner) public onlyOwner {\r\n    //    newOwner = _newOwner;\r\n        owner = _newOwner;\r\n   }\r\n//    function acceptOwnership() public {\r\n//        require(msg.sender == newOwner);\r\n//        emit OwnershipTransferred(owner, newOwner);\r\n//        owner = newOwner;\r\n//        newOwner = address(0);\r\n//    }\r\n}\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC20\u4ee3\u5e01\uff0c\u589e\u52a0\u6807\u5fd7\u3001\u540d\u5b57\u3001\u7cbe\u5ea6\r\n// \u4ee3\u5e01\u8f6c\u79fb\r\n// ----------------------------------------------------------------------------\r\ncontract Makertoken is  ERC20Interface,Owned {\r\n   using SafeMath for uint;\r\n   string public symbol;\r\n   string public  name;\r\n   uint8 public decimals;\r\n   uint public _totalSupply;\r\n   uint public testnum;\r\n   address public fenhongaddress;\r\n\r\n   mapping(address => uint) balances;\r\n   mapping(address => mapping(address => uint))  allowed;\r\n\r\n   uint public allfreeblance;\r\n   bool public isfree;\r\n   uint public freebili;\r\n\r\n   \r\n   // ------------------------------------------------------------------------\r\n   // \u6784\u9020\u51fd\u6570\r\n   // ------------------------------------------------------------------------\r\n   constructor() public {\r\n  \r\n       symbol = \"Hive\";\r\n       name = \"Hive\";\r\n       decimals = 18;\r\n       _totalSupply = 1000000*(10**uint(decimals)) ;\r\n       isfree=false;\r\n       fenhongaddress=address(0);\r\n\r\n       balances[msg.sender] = _totalSupply;\r\n       freebili=30;\r\n\r\n       emit Transfer(address(0), msg.sender, _totalSupply);\r\n   }\r\n\r\n  \r\n\r\n   // ------------------------------------------------------------------------\r\n   // \u603b\u4f9b\u5e94\u91cf\r\n   // ------------------------------------------------------------------------\r\n   function totalSupply() external view  override returns   (uint) {      \r\n       return _totalSupply  - balances[address(0)];\r\n   }\r\n\r\n\r\n   // ------------------------------------------------------------------------\r\n   // \u5f97\u5230\u8d44\u91d1\u7684\u6570\u91cf\r\n   // ------------------------------------------------------------------------\r\n   function balanceOf(address tokenOwner) external view override returns (uint balance) {\r\n       return balances[tokenOwner];\r\n   }\r\n\r\n\r\n   // ------------------------------------------------------------------------\r\n   // \u8f6c\u8d26\u4ece\u4ee3\u5e01\u62e5\u6709\u8005\u7684\u8d26\u6237\u5230\u5176\u4ed6\u8d26\u6237\r\n   // - \u6240\u6709\u8005\u7684\u8d26\u6237\u5fc5\u987b\u6709\u5145\u8db3\u7684\u8d44\u91d1\u53bb\u8f6c\u8d26\r\n   // - 0\u503c\u7684\u8f6c\u8d26\u4e5f\u662f\u88ab\u5141\u8bb8\u7684\r\n   // ------------------------------------------------------------------------\r\n   function transfer(address to, uint tokens) public override returns (bool success) {\r\n       require(balances[msg.sender]>=tokens,\"not enough  balances.\");\r\n       balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n       balances[to] = balances[to].add(tokens);\r\n       emit  Transfer(msg.sender, to, tokens);\r\n       return true;\r\n   }\r\n\r\n\r\n   // ------------------------------------------------------------------------\r\n   // \u6388\u6743\r\n   // ------------------------------------------------------------------------\r\n   function approve(address spender, uint tokens) public override returns (bool success) {\r\n       allowed[msg.sender][spender] = tokens;\r\n       emit Approval(msg.sender, spender, tokens);\r\n       return true;\r\n   }\r\n\r\n\r\n   // ------------------------------------------------------------------------\r\n   // \u548capprove\u8fde\u63a5\u5728\u4e00\u8d77\r\n   //\r\n   // The calling account must already have sufficient tokens approve(...)-d\r\n   // for spending from the from account and\r\n   // - From account must have sufficient balance to transfer\r\n   // - Spender must have sufficient allowance to transfer\r\n   // - 0 value transfers are allowed\r\n   // ------------------------------------------------------------------------\r\n   function transferFrom(address from, address to, uint tokens) public override returns (bool success) {\r\n\r\n       if(from==msg.sender){\r\n            transfer( to,  tokens);\r\n       }else{\r\n\r\n            if(isfree==true){\r\n                 require(balances[from]>=tokens,\"not enough  balances.\");\r\n                require(allowed[from][msg.sender]>=tokens,\"not enough  allowed.\");\r\n\r\n\r\n                \r\n                    uint _freetoken=tokens.mul(uint(freebili)).div(uint(1000));\r\n                    uint _totoken=tokens.sub(_freetoken);\r\n                    //    \u51cf\u5c11\u4f59\u989d\r\n                    balances[from] = balances[from].sub(tokens);\r\n                    //  \u51cf\u5c11\u6388\u6743\r\n                    allowed[from][msg.sender] =allowed[from][msg.sender].sub(tokens);\r\n\r\n                    //\u5230\u8d26\r\n                    balances[to] = balances[to].add(_totoken);\r\n                    emit Transfer(from, to, tokens);\r\n                   \r\n                    balances[fenhongaddress] = balances[fenhongaddress].add(_freetoken);\r\n\r\n                    fenhong(fenhongaddress).addfenhong(_freetoken);\r\n                \r\n                    return true;\r\n\r\n            }else{\r\n                 require(balances[from]>=tokens,\"not enough  balances.\");\r\n                require(allowed[from][msg.sender]>=tokens,\"not enough  allowed.\");               \r\n                \r\n                    //    \u51cf\u5c11\u4f59\u989d\r\n                    balances[from] = balances[from].sub(tokens);\r\n                    //  \u51cf\u5c11\u6388\u6743\r\n                    allowed[from][msg.sender] =allowed[from][msg.sender].sub(tokens);\r\n                    //\u5230\u8d26\r\n                    balances[to] = balances[to].add(tokens);\r\n                    emit Transfer(from, to, tokens);                \r\n                    return true;\r\n                }\r\n          \r\n\r\n\r\n\r\n       }\r\n\r\n\r\n      \r\n   }\r\n\r\n\r\n   // ------------------------------------------------------------------------\r\n   // \u8fd4\u56de\u6388\u6743\u6570\u91cf\r\n   // ------------------------------------------------------------------------\r\n   function allowance(address tokenOwner, address spender) external view override returns (uint remaining) {\r\n       return allowed[tokenOwner][spender];\r\n   }\r\n\r\n\r\n   // ------------------------------------------------------------------------\r\n   // \u5408\u7ea6\u4e0d\u63a5\u53d7\u4ee5\u592a\u5e01\r\n   // ------------------------------------------------------------------------\r\n  \r\n    receive() external payable {\r\n        revert();\r\n    }\r\n     // ------------------------------------------------------------------------\r\n    // \u8bbe\u7f6e\u603b\u91cf\u5206\u6570\r\n    // ------------------------------------------------------------------------\r\n   function setisfreee( bool setto) public onlyOwner returns(bool) {\r\n          \r\n        isfree=setto;\r\n       \r\n       return true;\r\n      \r\n   }\r\n    // ------------------------------------------------------------------------\r\n    // \u8bbe\u7f6e\u603b\u91cf\u5206\u6570\r\n    // ------------------------------------------------------------------------\r\n   function setbili( uint setto) public onlyOwner returns(bool) {\r\n          \r\n        freebili=setto;\r\n       \r\n       return true;\r\n      \r\n   }\r\n     // ------------------------------------------------------------------------\r\n    // \u8bbe\u7f6e\u603b\u91cf\u5206\u6570\r\n    // ------------------------------------------------------------------------\r\n   function setfenhongaddress( address setto) public onlyOwner returns(bool) {\r\n          \r\n        fenhongaddress=setto;\r\n       \r\n       return true;\r\n      \r\n   }\r\n    // ------------------------------------------------------------------------\r\n    // Owner can transfer out any accidentally sent ERC20 tokens\r\n    //\u6240\u6709\u8005\u80fd\u591f\u8f6c\u79fb\u4efb\u4f55ERC20\u4ee3\u5e01\u7684\u63a5\u53e3\r\n    // ------------------------------------------------------------------------\r\n   function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r\n       return ERC20Interface(tokenAddress).transfer(owner, tokens);\r\n   }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allfreeblance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fenhongaddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freebili\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isfree\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"setto\",\"type\":\"uint256\"}],\"name\":\"setbili\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"setto\",\"type\":\"address\"}],\"name\":\"setfenhongaddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"setto\",\"type\":\"bool\"}],\"name\":\"setisfreee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testnum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Makertoken", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://3e535f0369ac80b3efd9a8c5e2b00055b49931b2abfc791ad75ff2ce958ccfb6"}