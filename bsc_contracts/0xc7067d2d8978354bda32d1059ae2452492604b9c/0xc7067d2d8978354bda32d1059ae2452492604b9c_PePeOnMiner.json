{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.9;\r\n\r\ncontract PePeOnMiner {\r\n    address payable public owner;\r\n    mapping(address => uint256) public deposits;\r\n    address[] private depositorList;\r\n\r\n    constructor() {\r\n        owner = payable(msg.sender);\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can call this function.\");\r\n        _;\r\n    }\r\n\r\n    receive() external payable {\r\n        deposits[msg.sender] += msg.value;\r\n        if (deposits[msg.sender] > 0) {\r\n            depositorList.push(msg.sender);\r\n        }\r\n    }\r\n\r\n    function BuyShares() public payable {\r\n        deposits[msg.sender] += msg.value;\r\n        if (deposits[msg.sender] > 0) {\r\n            depositorList.push(msg.sender);\r\n        }\r\n    }\r\n\r\n    function distributeProfits() public onlyOwner {\r\n        uint256 totalDeposits = getTotalDeposits();\r\n        require(totalDeposits > 0, \"No deposits to distribute.\");\r\n\r\n        for (uint256 i = 0; i < depositorList.length; i++) {\r\n            address depositor = depositorList[i];\r\n            uint256 depositAmount = deposits[depositor];\r\n            uint256 profit = (address(this).balance * depositAmount) / totalDeposits;\r\n            payable(depositor).transfer(profit);\r\n        }\r\n\r\n        owner.transfer(address(this).balance);\r\n    }\r\n\r\n    function getTotalDeposits() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function getDepositors() public view returns (address[] memory) {\r\n        return depositorList;\r\n    }\r\n\r\n    function getDepositorCount() public view returns (uint256) {\r\n        return depositorList.length;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BuyShares\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeProfits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PePeOnMiner", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2ba406d25c7f2681d9e460062582872aad3a2db3637a44faf61ec93729ca384d"}