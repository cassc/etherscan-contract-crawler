{"SourceCode": "/**\r\n *Submitted for verification at Etherscan.io on 2023-06-24\r\n*/\r\n\r\n/**\r\n *Submitted for verification at Arbiscan on 2023-06-12\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\n\r\n\r\npragma solidity ^0.8.17;\r\n\r\ncontract BatchToken {\r\n    address private immutable owner;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n    function batch_token(string[] calldata hexData) external payable {\r\n        for (uint i = 0; i < hexData.length; i++) {\r\n            (bool success, ) = msg.sender.call{value: 0}(bytes(hexData[i]));\r\n            require(success, \"External call failed\");\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"hexData\",\"type\":\"string[]\"}],\"name\":\"batch_token\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "BatchToken", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://162599fd6ac9d565aee3bb202f3ac962dbaf6c6666ed6ebc2e7159b676272460"}