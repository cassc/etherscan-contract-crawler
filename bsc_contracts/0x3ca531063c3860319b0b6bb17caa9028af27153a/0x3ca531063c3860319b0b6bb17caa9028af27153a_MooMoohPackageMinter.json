{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.19;\r\n\r\ninterface INFT {\r\n    function ProcessTokenRequest(address account) external returns (bool);\r\n}\r\n\r\ninterface IMooUp {\r\n    function data(address account) external view returns (uint256,uint256,uint256,uint256,bool);\r\n}\r\n\r\ncontract permission {\r\n    mapping(address => mapping(string => bytes32)) private permit;\r\n\r\n    function newpermit(address adr,string memory str) internal { permit[adr][str] = bytes32(keccak256(abi.encode(adr,str))); }\r\n\r\n    function clearpermit(address adr,string memory str) internal { permit[adr][str] = bytes32(keccak256(abi.encode(\"null\"))); }\r\n\r\n    function checkpermit(address adr,string memory str) public view returns (bool) {\r\n        if(permit[adr][str]==bytes32(keccak256(abi.encode(adr,str)))){ return true; }else{ return false; }\r\n    }\r\n\r\n    modifier forRole(string memory str) {\r\n        require(checkpermit(msg.sender,str),\"Permit Revert!\");\r\n        _;\r\n    }\r\n}\r\n\r\ncontract MooMoohPackageMinter is permission {\r\n    \r\n    address public owner;\r\n\r\n    address public depositor = 0xf08133A1a2a0301832A03DF8D8F0C4406E39c5E6;\r\n    address public nftAddress = 0xE6981Efd5D6A08DC33A20Dd5fe31F80A904B392B;\r\n\r\n    uint256 nftdropAmount = 100 * 1e18;\r\n\r\n    mapping(address => uint256) public totalMinted;\r\n\r\n    bool locked;\r\n    modifier noReentrant() {\r\n        require(!locked, \"No re-entrancy\");\r\n        locked = true;\r\n        _;\r\n        locked = false;\r\n    }\r\n\r\n    constructor() {\r\n        newpermit(msg.sender,\"permit\");\r\n        newpermit(msg.sender,\"owner\");\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function openPackageBOX() public noReentrant returns (bool) {\r\n        require(totalMinted[msg.sender]<getLimitMinted(msg.sender),\"MOOMOOHMINTER REVERT: LIMITED MINT\");\r\n        totalMinted[msg.sender] += 1;\r\n        INFT(nftAddress).ProcessTokenRequest(msg.sender);\r\n        return true;\r\n    }\r\n\r\n    function getLimitMinted(address account) public view returns (uint256) {\r\n        (,uint256 totalUSD,,,) = IMooUp(depositor).data(account);\r\n        return totalUSD / nftdropAmount;\r\n    }\r\n\r\n    function grantRole(address adr,string memory role) public forRole(\"owner\") returns (bool) {\r\n        newpermit(adr,role);\r\n        return true;\r\n    }\r\n\r\n    function revokeRole(address adr,string memory role) public forRole(\"owner\") returns (bool) {\r\n        clearpermit(adr,role);\r\n        return true;\r\n    }\r\n\r\n    function transferOwnership(address adr) public forRole(\"owner\") returns (bool) {\r\n        newpermit(adr,\"owner\");\r\n        clearpermit(msg.sender,\"owner\");\r\n        owner = adr;\r\n        return true;\r\n    }\r\n\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"checkpermit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLimitMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"grantRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openPackageBOX\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"revokeRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MooMoohPackageMinter", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://502f1047d0f72dc38e5f47c609ca2cf7eeb1fb9ec3a0c87512837b769528883e"}