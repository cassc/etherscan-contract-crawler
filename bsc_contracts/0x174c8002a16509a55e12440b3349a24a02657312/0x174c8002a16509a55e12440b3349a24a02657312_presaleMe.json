{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/presaleMe.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\n\\n\\n\\npragma solidity ^0.8.19;\\n\\ninterface IBEP20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function SupplyPerPhase() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    function approve(address spender, uint256 value) external;\\n\\n    function transfer(address to, uint256 value) external;\\n\\n    function transferFrom(address from, address to, uint256 value) external;\\n\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n}\\n\\ncontract presaleMe {\\n    IBEP20 public ME = IBEP20(0x21bbE13f45F4c2D298cFC6A71B8Ae725fC3F23eC);\\n    IBEP20 public USDT = IBEP20(0x55d398326f99059fF775485246999027B3197955);\\n    IBEP20 public BUSD = IBEP20(0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56);\\n    IBEP20 public USDC = IBEP20(0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d);\\n\\n    address payable public owner;\\n\\n    uint256 public tokenPerUsd =  100000000000000000;\\n    uint256 public soldToken;\\n    uint256 public SupplyPerPhase = 700_000_000 * 1e18;\\n    uint256 public amountRaisedUSDT;\\n    uint256 public amountRaisedBUSD;\\n    uint256 public amountRaisedUSDC;\\n    address payable public fundReceiver =\\n        payable(0xF45622B79c1839f2e3B36449fA1A37688EE70975);\\n\\n    uint256 public constant divider = 100;\\n\\n    bool public presaleStatus;\\n\\n    struct user {\\n        uint256 USDT_balance;\\n        uint256 BUSD_balance;\\n        uint256 USDC_balance;\\n        uint256 token_balance;\\n    }\\n\\n    mapping(address => user) public users;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"PRESALE: Not an owner\\\");\\n        _;\\n    }\\n\\n    event BuyToken(address indexed _user, uint256 indexed _amount);\\n\\n    constructor() {\\n        owner = payable(0xF45622B79c1839f2e3B36449fA1A37688EE70975);\\n\\n        presaleStatus = true;\\n    }\\n\\n    // to buy token during preSale time with USDT => for web3 use\\n    function buyTokenUSDT(uint256 amount) public {\\n        require(soldToken <= SupplyPerPhase, \\\"All Sold\\\");\\n\\n        USDT.transferFrom(msg.sender, fundReceiver, amount);\\n\\n        uint256 numberOfTokens;\\n        numberOfTokens = USDToToken(amount);\\n        ME.transfer(msg.sender, numberOfTokens);\\n\\n        soldToken = soldToken + (numberOfTokens);\\n        amountRaisedUSDT = amountRaisedUSDT + (amount);\\n\\n        users[msg.sender].USDT_balance += amount;\\n\\n        users[msg.sender].token_balance =\\n            users[msg.sender].token_balance +\\n            (numberOfTokens);\\n    }\\n\\n    // to buy token during preSale time with BUSD => for web3 use\\n    function buyTokenBUSD(uint256 amount) public {\\n        require(soldToken <= SupplyPerPhase, \\\"All Sold\\\");\\n\\n        BUSD.transferFrom(msg.sender, fundReceiver, amount);\\n\\n        uint256 numberOfTokens;\\n        numberOfTokens = USDToToken(amount);\\n        ME.transfer(msg.sender, numberOfTokens);\\n\\n        soldToken = soldToken + (numberOfTokens);\\n        amountRaisedBUSD = amountRaisedBUSD + (amount);\\n\\n        users[msg.sender].BUSD_balance += amount;\\n\\n        users[msg.sender].token_balance =\\n            users[msg.sender].token_balance +\\n            (numberOfTokens);\\n    }\\n\\n    // to buy token during preSale time with USDC => for web3 use\\n    function buyTokenUSDC(uint256 amount) public {\\n        require(soldToken <= SupplyPerPhase, \\\"All Sold\\\");\\n\\n        USDC.transferFrom(msg.sender, fundReceiver, amount);\\n\\n        uint256 numberOfTokens;\\n        numberOfTokens = USDToToken(amount);\\n        ME.transfer(msg.sender, numberOfTokens);\\n\\n        soldToken = soldToken + (numberOfTokens);\\n        amountRaisedUSDC = amountRaisedUSDC + (amount);\\n\\n        users[msg.sender].USDC_balance += amount;\\n\\n        users[msg.sender].token_balance =\\n            users[msg.sender].token_balance +\\n            (numberOfTokens);\\n    }\\n\\n    // to change preSale amount limits\\n    function setSupplyPerPhase(\\n        uint256 _SupplyPerPhase,\\n        uint256 _soldToken\\n    ) external onlyOwner {\\n        SupplyPerPhase = _SupplyPerPhase;\\n        soldToken = _soldToken;\\n    }\\n\\n    function stopPresale(bool _off) external onlyOwner {\\n        presaleStatus = _off;\\n    }\\n\\n    // to check number of token for given usdt\\n    function USDToToken(uint256 _amount) public view returns (uint256) {\\n        uint256 numberOfTokens = (_amount * (tokenPerUsd)) / (1e18);\\n        return numberOfTokens;\\n    }\\n\\n    // to change Price of the token\\n    function changePrice(uint256 _price) external onlyOwner {\\n        tokenPerUsd = _price;\\n    }\\n\\n    // transfer ownership\\n    function changeOwner(address payable _newOwner) external onlyOwner {\\n        owner = _newOwner;\\n    }\\n function changefundReceiver(address payable _newOwner) external onlyOwner {\\n        fundReceiver = _newOwner;\\n    }\\n    // change tokens\\n    function changeToken(address _token) external onlyOwner {\\n        ME = IBEP20(_token);\\n    }\\n\\n    //change USDT\\n    function changeUSDT(address _USDT) external onlyOwner {\\n        USDT = IBEP20(_USDT);\\n    }\\n\\n    //change BUSD\\n    function changeBUSD(address _BUSD) external onlyOwner {\\n        USDC = IBEP20(_BUSD);\\n    }\\n\\n    //change USDC\\n    function changeUSDC(address _USDC) external onlyOwner {\\n        BUSD = IBEP20(_USDC);\\n    }\\n\\n    // to draw out tokens\\n    function transferTokens(IBEP20 token, uint256 _value) external onlyOwner {\\n        token.transfer(msg.sender, _value);\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ME\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SupplyPerPhase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"USDToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountRaisedBUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountRaisedUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountRaisedUSDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokenBUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokenUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokenUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_BUSD\",\"type\":\"address\"}],\"name\":\"changeBUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"changeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"}],\"name\":\"changeUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDT\",\"type\":\"address\"}],\"name\":\"changeUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changefundReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"divider\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundReceiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_SupplyPerPhase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_soldToken\",\"type\":\"uint256\"}],\"name\":\"setSupplyPerPhase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"soldToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_off\",\"type\":\"bool\"}],\"name\":\"stopPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPerUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"USDT_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"BUSD_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"USDC_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "presaleMe", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}