{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\n\r\ncontract Feeable is Ownable {\r\n\r\n    uint8 public feePercent;\r\n    uint16 public packCount;\r\n    uint16 public gasValuePrice;\r\n\r\n    constructor() public {\r\n        feePercent = 0;\r\n        packCount=255;\r\n        gasValuePrice=3;\r\n    }\r\n\r\n    function setFeePercent(uint8 _feePercent) public onlyOwner {\r\n        feePercent = _feePercent;\r\n    }\r\n    function setPackCount(uint16 _packCount) public onlyOwner {\r\n        packCount = _packCount;\r\n    }\r\n    function setGasValuePrice(uint16 _gasValuePrice) public onlyOwner {\r\n        gasValuePrice = _gasValuePrice;\r\n    }\r\n\r\n    function minFee() public view returns(uint256) {\r\n        return tx.gasprice * gasleft() * feePercent / 100;\r\n    }\r\n}\r\n\r\n\r\ncontract ERC20 {\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    function transferFrom( address from, address to, uint value) public returns (bool ok);\r\n}\r\n\r\n\r\ncontract Multiplexer is Feeable {\r\n    constructor()public payable{      // \u5408\u7ea6\u6784\u9020\u51fd\u6570\r\n        //owner = msg.sender;           // \u8bbe\u5b9a\u667a\u80fd\u5408\u7ea6\u7684\u6240\u6709\u8005\r\n                        // \u521d\u59cb\u5316\u4e3a0\r\n        msg.value;   //\u5916\u90e8\u8d26\u6237\u5728\u90e8\u7f72\u65f6\u7ed9\u5408\u7ea6\u8d26\u6237\u8f6c\u8d26msg.value\u4ee5\u592a\u5e01\r\n    }\r\n\r\n    function sendEth(address[] memory _to, uint256[] memory _value) payable public returns (bool _success) {\r\n        // input validation\r\n        assert(_to.length == _value.length);\r\n        assert(_to.length <= packCount);\r\n        //uint256 fee = minFee();\r\n        //require(msg.value >= fee);\r\n\r\n        uint256 remain_value = msg.value ;\r\n\r\n        // loop through to addresses and send value\r\n        for (uint8 i = 0; i < _to.length; i++) {\r\n            require(remain_value >= _value[i]);\r\n            remain_value = remain_value - _value[i];\r\n\r\n            address(_to[i]).transfer(_value[i]);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function sendErc20(address _tokenAddress, address[] memory _to, uint256[] memory _value) payable public returns (bool _success) {\r\n        // input validation\r\n        assert(_to.length == _value.length);\r\n        assert(_to.length <= packCount);\r\n        //require(msg.value >= minFee());\r\n\r\n        // use the erc20 abi\r\n        ERC20 token = ERC20(_tokenAddress);\r\n        // loop through to addresses and send value\r\n        for (uint8 i = 0; i < _to.length; i++) {\r\n            assert(token.transferFrom(msg.sender, _to[i], _value[i]) == true);\r\n        }\r\n        return true;\r\n    }\r\n// \u5411\u5408\u7ea6\u8d26\u6237\u8f6c\u8d26 \r\n    function transderToContract(uint256 _value) payable public {\r\n        //address(this).balance=_value;\r\n        address(uint160(owner)).transfer(_value);\r\n    }\r\n    // \u83b7\u53d6\u5408\u7ea6\u8d26\u6237\u4f59\u989d \r\n    function getBalanceOfContract() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n    function claim(address _token) public onlyOwner {\r\n        if (_token == owner) {\r\n            address(uint160(owner)).transfer(address(this).balance);\r\n            return;\r\n        }\r\n        ERC20 erc20token = ERC20(_token);\r\n        uint256 balance = erc20token.balanceOf(this);\r\n        erc20token.transfer(owner, balance);\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalanceOfContract\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"sendEth\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transderToContract\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"packCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"sendErc20\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gasValuePrice\",\"type\":\"uint16\"}],\"name\":\"setGasValuePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_packCount\",\"type\":\"uint16\"}],\"name\":\"setPackCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gasValuePrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_feePercent\",\"type\":\"uint8\"}],\"name\":\"setFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}]", "ContractName": "Multiplexer", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://da94f1575adb3035d4918df3c05c9771482ad73f2ed8bf597071fc9982827d6c"}