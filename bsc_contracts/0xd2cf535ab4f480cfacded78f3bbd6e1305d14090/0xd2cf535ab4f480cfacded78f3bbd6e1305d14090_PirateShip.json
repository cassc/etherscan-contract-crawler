{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\n\r\n/**\r\n *\r\n *\r\n *\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2557\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\r\n *\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u255a\u2550\u2550\u2588\u2588\u2554\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\r\n *\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2591\u255a\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\r\n *\u2588\u2588\u2554\u2550\u2550\u2550\u255d\u2591\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2554\u2550\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u255d\u2591\r\n *\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u2591\r\n *\u255a\u2550\u255d\u2591\u2591\u2591\u2591\u2591\u255a\u2550\u255d\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u255a\u2550\u255d\u255a\u2550\u255d\u2591\u2591\u2591\u2591\u2591\r\n *\r\n *\r\n * Web: https://pirateship.cc/\r\n *\r\n * Telegram: @PirateShip_cc\r\n *\r\n */\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n}\r\n\r\npragma solidity ^0.8.16;\r\n\r\ncontract PirateShip {\r\n    struct Ship {\r\n        uint256 doubloons;\r\n        uint256 gold;\r\n        uint256 gold2;\r\n        uint256 yield;\r\n        uint256 timestamp;\r\n        uint256 hrs;\r\n        address ref;\r\n        uint256 refs;\r\n        uint256 refDeps;\r\n        uint8[7] pirates;\r\n        uint256 totalDoubloonsSpend;\r\n        uint256 totalGoldReceived;\r\n    }\r\n    mapping(address => Ship) public decks;\r\n    uint256 public totalPirates;\r\n    uint256 public totalShips;\r\n    uint256 public totalInvested;\r\n    address public manager = 0x35E4299Eb8574A5d5508Cb497d3261B18C3551B0;\r\n\r\n    IERC20 usdt = IERC20(0x55d398326f99059fF775485246999027B3197955);\r\n\r\n    function addDoubloons(address ref,uint256 tokenAmount) public {\r\n        usdt.transferFrom(msg.sender, address(this), tokenAmount);\r\n        uint256 doubloons = tokenAmount / 1e16;\r\n        require(doubloons > 0, \"Zero doubloons\");\r\n        address user = msg.sender;\r\n        totalInvested += tokenAmount;\r\n        if (decks[user].timestamp == 0) {\r\n            totalShips++;\r\n           ref = decks[ref].timestamp == 0 ? manager : ref;\r\n            decks[ref].refs++;\r\n            decks[user].ref = ref;\r\n            decks[user].timestamp = block.timestamp;\r\n        }\r\n        ref = decks[user].ref;\r\n        decks[ref].doubloons += (doubloons * 6) / 100;\r\n        decks[ref].gold += (doubloons * 100 * 4) / 100;\r\n        decks[ref].refDeps += doubloons;\r\n        decks[user].doubloons += doubloons;\r\n        usdt.transfer(manager,(tokenAmount * 10) / 100);\r\n    }\r\n\r\n    function withdrawGold() public {\r\n        address user = msg.sender;\r\n        uint256 gold = decks[user].gold;\r\n        decks[user].gold = 0;\r\n        uint256 amount = gold * 1e14;\r\n        usdt.transfer(user,usdt.balanceOf(address(this)) < amount ? usdt.balanceOf(address(this)) : amount);\r\n    }\r\n\r\n    function collectGold() public {\r\n        address user = msg.sender;\r\n        syncShip(user);\r\n        decks[user].hrs = 0;\r\n        decks[user].gold += decks[user].gold2;\r\n        decks[user].gold2 = 0;\r\n    }\r\n\r\n    function upgradeShip(uint256 pirateId) public {\r\n        require(pirateId < 7, \"Maximum 7 Pirates\");\r\n        address user = msg.sender;\r\n        if(pirateId>0){\r\n        require(decks[user].pirates[pirateId-1]>=3,\"Need to buy previous Pirate\");\r\n        }\r\n        syncShip(user);\r\n        decks[user].pirates[pirateId]++;\r\n        totalPirates++;\r\n        uint256 pirates = decks[user].pirates[pirateId];\r\n        decks[user].doubloons -= getUpgradePrice(pirateId, pirates);\r\n        decks[user].totalDoubloonsSpend += getUpgradePrice(pirateId, pirates);\r\n        decks[user].yield += getYield(pirateId, pirates);\r\n    }\r\n\r\n    function getPirates(address addr) public view returns (uint8[7] memory) {\r\n        return decks[addr].pirates;\r\n    }\r\n\r\n    function syncShip(address user) internal {\r\n        require(decks[user].timestamp > 0, \"User is not registered\");\r\n        if (decks[user].yield > 0) {\r\n            uint256 hrs = block.timestamp / 3600 - decks[user].timestamp / 3600;\r\n            if (hrs + decks[user].hrs > 24) {\r\n                hrs = 24 - decks[user].hrs;\r\n            }\r\n            uint256 yield = hrs * decks[user].yield;\r\n            if((decks[user].totalGoldReceived+yield) > ((decks[user].totalDoubloonsSpend)*220)){\r\n                 decks[user].gold2 += (decks[user].totalDoubloonsSpend*220)-(decks[user].totalGoldReceived);\r\n                 decks[user].totalGoldReceived += (decks[user].totalDoubloonsSpend*220)-(decks[user].totalGoldReceived);\r\n                 decks[user].yield = 0;\r\n                 for(uint8 i=0;i<7;i++){\r\n                        decks[user].pirates[i]=0;\r\n                 }\r\n            }else{\r\n                decks[user].gold2 += yield;\r\n                decks[user].totalGoldReceived += yield;\r\n            }\r\n            decks[user].hrs += hrs;\r\n        }\r\n        decks[user].timestamp = block.timestamp;\r\n    }\r\n\r\n   function getUpgradePrice(uint256 pirateId, uint256 piratesId) internal pure returns (uint256) {\r\n        if (piratesId == 1) return [200, 1400, 3000, 13000, 30000, 120000, 350000][pirateId];\r\n        if (piratesId == 2) return [500, 1900, 5000, 15000, 50000, 150000, 450000][pirateId];\r\n        if (piratesId == 3) return [1000, 2500, 8000, 20000, 90000, 220000, 900000][pirateId];\r\n        revert(\"Incorrect piratesId\");\r\n    }\r\n\r\n    function getYield(uint256 pirateId, uint256 piratesId) internal pure returns (uint256) {\r\n        if (piratesId == 1) return [17, 123, 275, 1219, 2880, 11750, 35000][pirateId];\r\n        if (piratesId == 2) return [42, 167, 459, 1407, 4793, 14690, 45000][pirateId];\r\n        if (piratesId == 3) return [85, 219, 735, 1875, 8630, 21542, 90000][pirateId];\r\n        revert(\"Incorrect piratesId\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"addDoubloons\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectGold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"doubloons\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gold2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yield\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hrs\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"refs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refDeps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDoubloonsSpend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalGoldReceived\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getPirates\",\"outputs\":[{\"internalType\":\"uint8[7]\",\"name\":\"\",\"type\":\"uint8[7]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalInvested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPirates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShips\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pirateId\",\"type\":\"uint256\"}],\"name\":\"upgradeShip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawGold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PirateShip", "CompilerVersion": "v0.8.16+commit.07a7930e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://5fbdf2a70a0b290fde7d1d0981f44f07138eb7b5ba2291859a12acc85217eb99"}