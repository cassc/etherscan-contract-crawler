{"SourceCode": "pragma solidity ^0.5.0;\r\n\r\ninterface IERC20 {\r\n    function decimals() external view returns (uint8);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function name() external view returns (string memory);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract YFNTStakeCondition {\t\t\r\n\tstring public name = \"YFNT Stake Condition\";\r\n\taddress public owner;\r\n\taddress public funder;\r\n\r\n    IERC20 public yfntToken;\t\r\n\r\n    uint256 public constant MAX = ~uint256(0);\r\n\r\n    bool public _canVIPCUnstakeYFNT = false;\r\n    uint public _yfntVIPCCondition = 5 * 10 ** 17;\r\n    mapping(address => uint) public stakingYFNTVIPCBalance;\r\n    mapping(address => bool) public hasYFNTVIPCStaked;\r\n\r\n\tconstructor(address _yfntTokenAddr) public {\r\n\t\towner = msg.sender;\r\n\t\tfunder = address(0xAdA68a211fD22956b31b1734788F3D1B545Fa6B1);\r\n\r\n        yfntToken = IERC20(_yfntTokenAddr);\r\n\t}\r\n\r\n\t/* Stakes Tokens (Deposit): An investor will deposit the DAI into the smart contracts\r\n\tto starting earning rewards.\r\n\t\t\r\n\tCore Thing: Transfer the DAI tokens from the investor's wallet to this smart contract. */\r\n    function stakeYFNTTokens() public {\t\r\n        if (hasYFNTVIPCStaked[msg.sender]){\r\n            return ;\r\n        }\t\r\n        \r\n\t\t// transfer Mock DAI tokens to this contract for staking\r\n\t\tyfntToken.transferFrom(msg.sender, address(this), _yfntVIPCCondition);\r\n\r\n\t\t// update staking balance\r\n\t\tstakingYFNTVIPCBalance[msg.sender] = stakingYFNTVIPCBalance[msg.sender] + _yfntVIPCCondition;\r\n\r\n\t\thasYFNTVIPCStaked[msg.sender] = true;\r\n\t}\r\n\r\n\tfunction unstakeYFNTTokens() public {\t\r\n        require(_canVIPCUnstakeYFNT, \"cannotunstaked\");\t\t\r\n        require(stakingYFNTVIPCBalance[msg.sender] >= _yfntVIPCCondition, \"cannotunstaked\");\t\t\r\n        \r\n\t\t// transfer Mock DAI tokens to this contract for staking\r\n\t\tyfntToken.transfer(msg.sender, _yfntVIPCCondition);\r\n\r\n\t\t// update staking balance\r\n\t\tstakingYFNTVIPCBalance[msg.sender] = 0;\r\n\r\n\t\thasYFNTVIPCStaked[msg.sender] = false;\r\n\t}\r\n\r\n    modifier onlyFunder() {\r\n        require(owner == msg.sender || funder == msg.sender, \"!Funder\");\r\n        _;\r\n    }\r\n\r\n\tfunction setFunderWithAddress(address addr) external onlyFunder {\t\r\n\t\tfunder = addr;\r\n\t}\r\n\r\n    function setYfntVIPCCondition(uint pAmount) external onlyFunder {\t\r\n\t\t_yfntVIPCCondition = pAmount;\r\n\t}\r\n\r\n    function setCanVIPCUnstakeYFNT(bool pCan) external onlyFunder {\t\r\n\t\t_canVIPCUnstakeYFNT = pCan;\r\n\t}\r\n\r\n    function claimToken(address token, uint256 amount, address to) external onlyFunder {\r\n        IERC20(token).transfer(to, amount);\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"funder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"yfntToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasYFNTVIPCStaked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_yfntVIPCCondition\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unstakeYFNTTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pCan\",\"type\":\"bool\"}],\"name\":\"setCanVIPCUnstakeYFNT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_canVIPCUnstakeYFNT\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingYFNTVIPCBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pAmount\",\"type\":\"uint256\"}],\"name\":\"setYfntVIPCCondition\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stakeYFNTTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setFunderWithAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_yfntTokenAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]", "ContractName": "YFNTStakeCondition", "CompilerVersion": "v0.5.0+commit.1d4f565a", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000002bc238ac402d54c18e6542d83d6456777ce0e04a", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://0f0f9d986b0e4e5d577dbfd6caa3600bc5a25cecf11d83c1139474193cd939ce"}