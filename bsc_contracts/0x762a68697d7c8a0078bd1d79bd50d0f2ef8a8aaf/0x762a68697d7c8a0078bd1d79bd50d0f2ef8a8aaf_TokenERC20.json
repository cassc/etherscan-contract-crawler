{"SourceCode": "pragma solidity ^0.4.16;\r\n\r\n \r\n\r\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; }\r\n\r\n \r\n\r\ncontract TokenERC20 {\r\n\r\n    string public name;\r\n\r\n    string public symbol;\r\n\r\n    uint8 public decimals = 18;  // 18 \u662f\u5efa\u8bae\u7684\u9ed8\u8ba4\u503c\r\n\r\n    uint256 public totalSupply;\r\n\r\n \r\n\r\n    mapping (address => uint256) public balanceOf;  //\r\n\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n \r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n \r\n\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n \r\n\r\n \r\n\r\n    function TokenERC20(address recAddress,uint256 initialSupply, string tokenName, string tokenSymbol) public {\r\n\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);\r\n\r\n        balanceOf[recAddress] = totalSupply;\r\n\r\n        name = tokenName;\r\n\r\n        symbol = tokenSymbol;\r\n\r\n    }\r\n\r\n \r\n\r\n \r\n\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n\r\n        require(_to != 0x0);\r\n\r\n        require(balanceOf[_from] >= _value);\r\n\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n\r\n        balanceOf[_from] -= _value;\r\n\r\n        balanceOf[_to] += _value;\r\n\r\n        Transfer(_from, _to, _value);\r\n\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n\r\n    }\r\n\r\n \r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n\r\n        _transfer(msg.sender, _to, _value);\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n \r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n\r\n        require(_value <= allowance[_from][msg.sender]);     // Check allowance\r\n\r\n        allowance[_from][msg.sender] -= _value;\r\n\r\n        _transfer(_from, _to, _value);\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n \r\n\r\n    function approve(address _spender, uint256 _value) public\r\n\r\n        returns (bool success) {\r\n\r\n        allowance[msg.sender][_spender] = _value;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n \r\n\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\r\n\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n\r\n        if (approve(_spender, _value)) {\r\n\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n \r\n\r\n    function burn(uint256 _value) public returns (bool success) {\r\n\r\n        require(balanceOf[msg.sender] >= _value);\r\n\r\n        balanceOf[msg.sender] -= _value;\r\n\r\n        totalSupply -= _value;\r\n\r\n        Burn(msg.sender, _value);\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n \r\n\r\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n\r\n        require(balanceOf[_from] >= _value);\r\n\r\n        require(_value <= allowance[_from][msg.sender]);\r\n\r\n        balanceOf[_from] -= _value;\r\n\r\n        allowance[_from][msg.sender] -= _value;\r\n\r\n        totalSupply -= _value;\r\n\r\n        Burn(_from, _value);\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"recAddress\",\"type\":\"address\"},{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]", "ContractName": "TokenERC20", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000060b77322f63d0e8a2f1fb2180fe7c1e9e98b2beb00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000007536861727065690000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045348414200000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://80b32e3cc4a9bb042c68b78836cd63ce6901935f75b851c46a374acccf819997"}