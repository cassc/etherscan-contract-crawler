{"SourceCode": "/*\r\n * MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXKkdlc;,...            ...,;cldOKNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\n * MMMMMMMMMMMMMMMMMMMMMMMMMMMWX0xl;..                              ..;lx0NWMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\n * MMMMMMMMMMMMMMMMMMMMMMMMNOd:.                                         .':d0NMMMMMMMMMMMMMMMMMMMMMMMM\r\n * MMMMMMMMMMMMMMMMMMMMWXkc'                                                 .'lkXWMMMMMMMMMMMMMMMMMMMM\r\n * MMMMMMMMMMMMMMMMMMNOc.                                                        'lONMMMMMMMMMMMMMMMMMM\r\n * MMMMMMMMMMMMMMMWKd,                                                              ,dXWMMMMMMMMMMMMMMM\r\n * MMMMMMMMMMMMMW0l.                           ...........                            .oKWMMMMMMMMMMMMM\r\n * MMMMMMMMMMMWKl.                     .';:codxxkkOOOOOkkkxdolc;,..                     .lKMMMMMMMMMMMM\r\n * MMMMMMMMMMXo.                  .':ldO00000OOkkkkkkkkkkkkkOOO00Oxoc,.                   .dNMMMMMMMMMM\r\n * MMMMMMMMWO,                 .;lxO000OkkxxddddddddooooooddodddxxkkOOko;.                  ;OWMMMMMMMM\r\n * MMMMMMMXo.                .ck0K00OkxddoodddoooddddddddodoodddooddddxkOxl.                 .oNMMMMMMM\r\n * MMMMMMK:                .lO0K0Okddddodooddddodddddoddooddddddddddoooodxkxc.                 :KMMMMMM\r\n * MMMMWO,               .:k000OxdddddodoooddddddoddxxxkOO0000000000OOkkxdddxo,                 ;0MMMMM\r\n * MMMWO'               .o0K00kdddddoddool:;;;;:ok0KXXXNNNNNNNNNNNNNNNNXXK0Oxxd;.                ,0MMMM\r\n * MMM0'               .d0K0Oxdodo::llc;..      .;xKNNNNNNNNNNNNNNNNNNNNNNNNXKOx:                 ,0MMM\r\n * MMK;               .o000Odddooo:'..  .;;.       :0NNNNNNNNNNNNNNNXXXKKKXXNNNXk;                 :XMM\r\n * MNl                c0K0Ododooooool'  ;KK:        c0XNNNNNNNNNKkoc;,'...',:cdOKk'                 lNM\r\n * Wx.               ,kK0Oxoododooodl'   ..         ,x0NNNNNNXOc'  ..,;:::;,.. .'c,                 .kM\r\n * X;               .l000xddooddodddo;           ...c0XNNNNN0l.  .lk0KKKKKXK0ko;.                    :X\r\n * x.               'xK0Ododddooddoodo;.     ..',..:0NNNNNN0;   'd000000000KKKXKkc.                  .k\r\n * c                :OK0xdodddooododdx0k:......'':xKNNNNNNK:  .;dO0000000000000KXKd.                  l\r\n * '               .l00OdddddoododdodOXNXKkdoodk0XNNNNNNNXo. 'dO00000000000000000KKo.                 ,\r\n * .               .xK0kdddddoodddoox0NNNNNNNNNNNNNNNNNNNK;  ,k00000000000000000000O:                 .\r\n *                 ;OK0xddddddooddodkXNNNNNNNNNNNNNNNNNNNk.  .lkOOOOOOOkkkkkkkOOOO00o.                .\r\n *                 c0KOxdddoddodddodOXNNNNNNNNNNNNNNNNNNNx.   .,:ccc::::::::::cloxkOd.                .\r\n *                .dK0Ododdoodooddox0NNNNNNNNNNNNNNNNNNNNx. .:;'..................'::.                .\r\n * .              :OK0kdddddddddddoxKNNNNNNNNNNNNNNNNNNNNO' .lxdooooooodddddoddl'                     .\r\n * .             .d00OxddoddoodddodOXNNNNNNNNNNNNNNNNNNNNK:  ;ddddddddddddddxkOk;  .                  '\r\n * ;             c000kdddooddodddod0NNNNNNNNNNNNNNNNNNNNNNx. .lddxxddxddddddxkOl. ';                  :\r\n * d.          .cOK0kdoooddoododddkKNNNNNNNNNNNNNNNNNNNNNNXo. .cdddddddddddxkOo. .d:                 .x\r\n * 0'         'oO0OkdooddodoodododOXNNNNNNNNNNNNNNNNNNNNNNNXd. .;ldddddddxxxd:. 'x0;                 ,K\r\n * Wo       .lO00Oxdool:clooddoooxKNNNNNNNNNNNNNNNNNNNNNNNNNXOc. ..;:clllc:,. .cONO'                .dW\r\n * MK;    .:k00Oxdddoooc,';coddddOXNNNNNNNNNNNNNNNNNNNNNNNNNNNXOo;..      ..;oOXNNx.                :XM\r\n * MWk.  ,d00Okddodooddol:'.,lodkXNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNXKOxdoooxkKXNNNNXl                'OMM\r\n * MMWx,cO0Okdoodddooddoolc,..:xKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNK:               .xWMM\r\n * MMMWX00kxdddoddooddddolcc;..lXNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN0'              .dWMMM\r\n * MMMMWXkddddoodddoodddoolcc;..dXNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNk.             .xWMMMM\r\n * MMMMMWKxddddoddoodddooolccc' 'kNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNo.            'kWMMMMM\r\n * MMMMMMWXkddodddddoddddolccc:. cKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNK:            ;0WMMMMMM\r\n * MMMMMMMMN0xddodddodddolccccc' .kNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNk.          .oXMMMMMMMM\r\n * MMMMMMMMMWXOddoddddddolccccc;. lXNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNXl          ;OWMMMMMMMMM\r\n * MMMMMMMMMMMWKkddddoddolccccl;. ;0XNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNk.        'xNMMMMMMMMMMM\r\n * MMMMMMMMMMMMMNKkddodolcccccc;. ;O0KXNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN0:       'dXMMMMMMMMMMMMM\r\n * MMMMMMMMMMMMMMMNKOxollcccccc,  cO000KXNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNXKl.    .;xXMMMMMMMMMMMMMMM\r\n * MMMMMMMMMMMMMMMMMWXOdlcccccc. .d000000KXXNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNXK0o.   'lONMMMMMMMMMMMMMMMMM\r\n * MMMMMMMMMMMMMMMMMMMMNKkdllc,  cO000000000KXXNNNNNNNNNNNNNNNNNNNNNNNXXKK00o. .ckXWMMMMMMMMMMMMMMMMMMM\r\n * MMMMMMMMMMMMMMMMMMMMMMWNKOo'.:k00000000000000KKXXXXXXNNNNNNNXXXXXKK00000kooOXWMMMMMMMMMMMMMMMMMMMMMM\r\n * MMMMMMMMMMMMMMMMMMMMMMMMMMWK0KXK0000000000000000000000KKKKK000000000KXXNNWMMMMMMMMMMMMMMMMMMMMMMMMMM\r\n * MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNNXXKK0000000000000000000000KKXXNNWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\n * MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNNXXKKKKKKKKKKKKKKXXNNWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r\n *\r\n * Written by: MrGreenCrypto\r\n * Co-Founder of CodeCraftrs.com\r\n * \r\n * SPDX-License-Identifier: None\r\n */\r\n\r\npragma solidity 0.8.17;\r\n\r\ninterface IBEP20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function decimals() external view returns (uint8);\r\n    function symbol() external view returns (string memory);\r\n    function name() external view returns (string memory);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount ) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface IDEXFactory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IDEXPair {\r\n    function sync() external;\r\n}\r\n\r\ninterface IDEXRouter {\r\n    function factory() external pure returns (address);\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn, \r\n        uint256 amountOutMin, \r\n        address[] calldata path, \r\n        address to, \r\n        uint256 deadline\r\n    ) external;\r\n}\r\n\r\ncontract NewBirb is IBEP20 {\r\n    string public constant name = \"Birb\";\r\n    string public constant symbol = \"BIRB\";\r\n    uint8 public constant decimals = 18;\r\n    uint256 constant _totalSupply = 100_000_000 * (10**decimals);\r\n\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => bool) public limitless;\r\n\r\n    uint256 public buyTax = 0;\r\n    uint256 public sellTax = 5;\r\n    \r\n    uint256 private buyLiq = 0;\r\n    uint256 private buyMarketing = 0;\r\n    uint256 private buyToken = 0;\r\n    uint256 private buyBurn = 0;\r\n    uint256 private sellLiq = 2;\r\n    uint256 private sellMarketing = 3;\r\n    uint256 private sellToken = 0;\r\n    uint256 private sellBurn = 0;\r\n    uint256 private taxDivisor = 100;\r\n    uint256 private swapBirbAt = _totalSupply / 10_000;\r\n\r\n    IDEXRouter public constant ROUTER = IDEXRouter(0x10ED43C718714eb63d5aA57B78B54704E256024E);\r\n    address public constant CEO = 0x6AE2C08E6A91BEc45f6F64E96d8157F6B5DE3536;\r\n    address public constant OWNER = 0x43CC8a482957B617E7536C7d1816e61901B8d481;\r\n    address private constant DEAD = 0x000000000000000000000000000000000000dEaD;\r\n    address private constant WBNB = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\r\n           \r\n    address public marketingWallet = 0x02a05695989120517CC0bA9940741ff5323d7067;\r\n    address public tokenWallet = 0x1C11409562C815B53c943868e6de58b15725AC6c;\r\n    address public immutable pcsPair;\r\n    address[] public pairs;\r\n\r\n    modifier onlyOwner(){\r\n        require (msg.sender == OWNER, \"Only the OWNER can do that\");\r\n        _;\r\n    }\r\n\r\n    event WalletsChanged(address marketingWallet, address tokenWallet);\r\n    event SwapBirbAtSet(uint256 swapBirbAt);\r\n    event TokenRescued(address tokenRescued, uint256 amountRescued);\r\n    event BnbRescued(uint256 balanceRescued);\r\n    event ExcludedAddressFromTax(address wallet);\r\n    event UnExcludedAddressFromTax(address wallet);\r\n    event AirdropsSent(address[] airdropWallets, uint256[] amount);\r\n    event MarketingTaxSwapped(uint256 bnbReceived);\r\n    event PairAdded(address addedPair);\r\n    event PairRemoved(address removedPair);\r\n    \r\n    event TaxesChanged(\r\n        uint256 sellTax,\r\n        uint256 buyTax,\r\n        uint256 newBuyLiq,\r\n        uint256 newBuyMarketing,\r\n        uint256 newBuyToken,\r\n        uint256 newBuyBurn,\r\n        uint256 newSellLiq,\r\n        uint256 newSellMarketing,\r\n        uint256 newSellToken,\r\n        uint256 newSellBurn,\r\n        uint256 newTaxDivisor\r\n    );\r\n\r\n    constructor() {\r\n        pcsPair = IDEXFactory(IDEXRouter(ROUTER).factory()).createPair(WBNB, address(this));\r\n        pairs.push(pcsPair);\r\n        _allowances[address(this)][address(ROUTER)] = type(uint256).max;\r\n\r\n        limitless[CEO] = true;\r\n        limitless[address(this)] = true;\r\n\r\n        _balances[CEO] = _totalSupply;\r\n        emit Transfer(address(0), CEO, _totalSupply);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function totalSupply() public view override returns (uint256) {return _totalSupply - _balances[DEAD];}\r\n    function balanceOf(address account) public view override returns (uint256) {return _balances[account];}\r\n    function allowance(address holder, address spender) public view override returns (uint256) {return _allowances[holder][spender];}\r\n    function approveMax(address spender) external returns (bool) {return approve(spender, type(uint256).max);}\r\n    \r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        require(spender != address(0), \"Can't use zero address here\");\r\n        _allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        require(spender != address(0), \"Can't use zero address here\");\r\n        _allowances[msg.sender][spender]  = allowance(msg.sender, spender) + addedValue;\r\n        emit Approval(msg.sender, spender, _allowances[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        require(spender != address(0), \"Can't use zero address here\");\r\n        require(allowance(msg.sender, spender) >= subtractedValue, \"Can't subtract more than current allowance\");\r\n        _allowances[msg.sender][spender]  = allowance(msg.sender, spender) - subtractedValue;\r\n        emit Approval(msg.sender, spender, _allowances[msg.sender][spender]);\r\n        return true;\r\n    }\r\n    \r\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n        return _transferFrom(msg.sender, recipient, amount);\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount ) external override returns (bool) {\r\n        if (_allowances[sender][msg.sender] != type(uint256).max) {\r\n            require(_allowances[sender][msg.sender] >= amount, \"Insufficient Allowance\");\r\n            _allowances[sender][msg.sender] -= amount;\r\n            emit Approval(sender, msg.sender, _allowances[sender][msg.sender]);\r\n        }\r\n        \r\n        return _transferFrom(sender, recipient, amount);\r\n    }\r\n\r\n    function setBirbWallets(address marketingAddress, address tokenAddress) external onlyOwner {\r\n        require(marketingAddress != address(0) && tokenAddress != address(0), \"Can't use zero addresses here\");\r\n        marketingWallet = marketingAddress;\r\n        tokenWallet = tokenAddress;\r\n        emit WalletsChanged(marketingWallet, tokenWallet);\r\n    }\r\n    \r\n    function setSwapBirbAt(uint256 _swapBirbAt) external onlyOwner{\r\n        require(_swapBirbAt <= _totalSupply / 50, \"Can't set the amount to sell to higher than 2% of totalSupply\");  \r\n        swapBirbAt = _swapBirbAt;\r\n        emit SwapBirbAtSet(swapBirbAt);\r\n    }\r\n\r\n    function rescueAnyToken(address tokenToRescue) external onlyOwner {\r\n        require(tokenToRescue != address(this), \"Can't rescue your own\");\r\n        emit TokenRescued(tokenToRescue, IBEP20(tokenToRescue).balanceOf(address(this)));\r\n        IBEP20(tokenToRescue).transfer(CEO, IBEP20(tokenToRescue).balanceOf(address(this)));\r\n    }\r\n\r\n    function rescueBnb() external onlyOwner {\r\n        emit BnbRescued(address(this).balance);\r\n        (bool success, ) = CEO.call{value: address(this).balance}(\"\");\r\n        require(success, \"Something went wrong\");\r\n    }\r\n\r\n    function setSellTax(uint256 newTaxDivisor, uint256 newSellLiq, uint256 newSellMarketing, uint256 newSellToken, uint256 newSellBurn) external onlyOwner {\r\n        taxDivisor     = newTaxDivisor;\r\n        sellLiq        = newSellLiq;\r\n        sellMarketing  = newSellMarketing;\r\n        sellToken      = newSellToken;\r\n        sellBurn       = newSellBurn;\r\n        sellTax        = sellLiq + sellMarketing + sellToken + sellBurn;\r\n        require(buyTax <= taxDivisor / 20 || sellTax <= taxDivisor / 20, \"Taxes are limited to max. 5%\");\r\n        \r\n        emit TaxesChanged(\r\n            sellTax,\r\n            buyTax,\r\n            buyLiq,\r\n            buyMarketing,\r\n            buyToken,\r\n            buyBurn,\r\n            newSellLiq,\r\n            newSellMarketing,\r\n            newSellToken,\r\n            newSellBurn,\r\n            newTaxDivisor\r\n        );\r\n    }\r\n\r\n    function setBuyTax(uint256 newTaxDivisor, uint256 newBuyLiq, uint256 newBuyMarketing, uint256 newBuyToken, uint256 newBuyBurn) external onlyOwner {\r\n        taxDivisor     = newTaxDivisor;\r\n        buyLiq         = newBuyLiq;\r\n        buyMarketing   = newBuyMarketing;\r\n        buyToken       = newBuyToken;\r\n        buyBurn        = newBuyBurn;\r\n        buyTax         = buyLiq + buyMarketing + buyToken + buyBurn;\r\n        require(buyTax <= taxDivisor / 20 || sellTax <= taxDivisor / 20, \"Taxes are limited to max. 5%\");\r\n        \r\n        emit TaxesChanged(\r\n            sellTax,\r\n            buyTax,\r\n            newBuyLiq,\r\n            newBuyMarketing,\r\n            newBuyToken,\r\n            newBuyBurn,\r\n            sellLiq,\r\n            sellMarketing,\r\n            sellToken,\r\n            sellBurn,\r\n            newTaxDivisor\r\n        );\r\n    }\r\n\r\n    function setAddressTaxStatus(address wallet, bool status) external onlyOwner {\r\n        limitless[wallet] = status;\r\n        if(status) emit ExcludedAddressFromTax(wallet);\r\n        else emit UnExcludedAddressFromTax(wallet);\r\n    }\r\n\r\n    function isContract(address account) internal view returns (bool) {\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        assembly { codehash := extcodehash(account) }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    function addPair(address pairToAdd) external onlyOwner {\r\n        require(isContract(pairToAdd) && pairToAdd != address(this) && pairToAdd != address(ROUTER), \"This address can not be set as a pair\");\r\n        pairs.push(pairToAdd);\r\n        emit PairAdded(pairToAdd);\r\n    }\r\n\r\n    function removeLastPair() external onlyOwner {\r\n        address pairToBeRemoved = pairs[pairs.length-1];\r\n        if(pairs.length == 1) return;\r\n        pairs.pop();\r\n        emit PairRemoved(pairToBeRemoved);\r\n    }\r\n\r\n    function _transferFrom(address sender, address recipient, uint256 amount) internal returns (bool) {\r\n        if (limitless[sender] || limitless[recipient]) return _lowGasTransfer(sender, recipient, amount);\r\n        amount = takeTax(sender, recipient, amount);\r\n        return _lowGasTransfer(sender, recipient, amount);\r\n    }\r\n\r\n    function takeTax(address sender, address recipient, uint256 amount) internal returns (uint256) {\r\n        uint256 taxAmount = 0;\r\n        uint256 totalTax = 0;\r\n        \r\n        if(isPair(sender)) {\r\n            totalTax = buyTax;\r\n            if(totalTax == 0) return amount;\r\n            taxAmount = amount * totalTax / taxDivisor;\r\n            \r\n            if(buyBurn > 0) \r\n                _lowGasTransfer(sender, DEAD, taxAmount * buyBurn / totalTax);\r\n            \r\n            if(buyToken > 0) \r\n                _lowGasTransfer(sender, tokenWallet, taxAmount * buyToken / totalTax);\r\n            \r\n            if(buyLiq > 0) \r\n                _lowGasTransfer(sender, pcsPair, taxAmount * buyLiq / totalTax);\r\n            \r\n            if(buyMarketing > 0) \r\n                _lowGasTransfer(sender, address(this), taxAmount * buyMarketing / totalTax);\r\n            \r\n            return amount - taxAmount;\r\n        }\r\n\r\n        if(isPair(recipient)) {\r\n            totalTax = sellTax;\r\n            if(totalTax == 0) return amount;\r\n            taxAmount = amount * sellTax / taxDivisor;\r\n            \r\n            if(sellBurn > 0) \r\n                _lowGasTransfer(sender, DEAD, taxAmount * sellBurn / totalTax);\r\n            \r\n            if(sellToken > 0) \r\n                _lowGasTransfer(sender, tokenWallet, taxAmount * sellToken / totalTax);\r\n            \r\n            if(sellLiq > 0) \r\n                _lowGasTransfer(sender, pcsPair, taxAmount * sellLiq / totalTax);\r\n            \r\n            if(sellMarketing > 0) \r\n                _lowGasTransfer(sender, address(this), taxAmount * sellMarketing / totalTax);\r\n            \r\n            if(balanceOf(address(this)) >= swapBirbAt) {\r\n                swapBirb();\r\n            } else if(sellLiq > 0) {\r\n                IDEXPair(pcsPair).sync();\r\n            }\r\n        }\r\n\r\n        return amount - taxAmount;\r\n    }\r\n\r\n    function isPair(address check) internal view returns(bool) {\r\n        for (uint256 i = 0; i < pairs.length; i++) if(check == pairs[i]) return true;\r\n        return false;\r\n    }\r\n\r\n    function _lowGasTransfer(address sender, address recipient, uint256 amount) internal returns (bool) {\r\n        require(sender != address(0) && recipient != address(0), \"Can't use zero addresses here\");\r\n        require(amount <= _balances[sender], \"Can't transfer more than you own\");\r\n        if(amount == 0) return true;\r\n        _balances[sender] -= amount;\r\n        _balances[recipient] += amount;\r\n        emit Transfer(sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function swapBirb() internal {\r\n        uint256 contractBalance = _balances[address(this)];\r\n        if(contractBalance == 0) return;\r\n        uint256 balanceBefore = marketingWallet.balance;\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\r\n\r\n        ROUTER.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            contractBalance,\r\n            0,\r\n            path,\r\n            marketingWallet,\r\n            block.timestamp\r\n        );\r\n\r\n        emit MarketingTaxSwapped(marketingWallet.balance - balanceBefore);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"airdropWallets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"AirdropsSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balanceRescued\",\"type\":\"uint256\"}],\"name\":\"BnbRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"ExcludedAddressFromTax\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bnbReceived\",\"type\":\"uint256\"}],\"name\":\"MarketingTaxSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addedPair\",\"type\":\"address\"}],\"name\":\"PairAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"removedPair\",\"type\":\"address\"}],\"name\":\"PairRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapBirbAt\",\"type\":\"uint256\"}],\"name\":\"SwapBirbAtSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellTax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyTax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBuyLiq\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBuyMarketing\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBuyToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBuyBurn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSellLiq\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSellMarketing\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSellToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSellBurn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTaxDivisor\",\"type\":\"uint256\"}],\"name\":\"TaxesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenRescued\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountRescued\",\"type\":\"uint256\"}],\"name\":\"TokenRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"UnExcludedAddressFromTax\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"marketingWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenWallet\",\"type\":\"address\"}],\"name\":\"WalletsChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CEO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUTER\",\"outputs\":[{\"internalType\":\"contract IDEXRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pairToAdd\",\"type\":\"address\"}],\"name\":\"addPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"approveMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitless\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pcsPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLastPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenToRescue\",\"type\":\"address\"}],\"name\":\"rescueAnyToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescueBnb\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setAddressTaxStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"setBirbWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTaxDivisor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBuyLiq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBuyMarketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBuyToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBuyBurn\",\"type\":\"uint256\"}],\"name\":\"setBuyTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTaxDivisor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSellLiq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSellMarketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSellToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSellBurn\",\"type\":\"uint256\"}],\"name\":\"setSellTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_swapBirbAt\",\"type\":\"uint256\"}],\"name\":\"setSwapBirbAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "NewBirb", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ab69ada7e93aa81b6983ac2b2e3ee8036008c3859c9069a4d7490ada60c527aa"}