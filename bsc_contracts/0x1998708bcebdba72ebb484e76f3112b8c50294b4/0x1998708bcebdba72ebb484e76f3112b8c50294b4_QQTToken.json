{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint);\r\n\r\n    function balanceOf(address account) external view returns (uint);\r\n\r\n    function transfer(address recipient, uint amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint amount\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract QQTToken is IERC20 {\r\n    \r\n    using SafeMath for uint256;\r\n\r\n    uint public totalSupply;\r\n    uint public maxSupply = 10000000000000000000000000000; //10B\r\n    uint public premintSupply  = 100000000000000000000000000; //100 M\r\n    uint8 public decimals = 18;\r\n    uint8 public tax = 150; //x100\r\n    uint256 public lastminttime ;\r\n    uint256 public maxMintPerDay = 250000000000000000000000; //250K\r\n    uint32 public minMintDifference = 86400; //1 Day in Seconds\r\n    \r\n    address public mintAllowAddress;\r\n    address public owner;\r\n    address public treasury;\r\n\r\n    mapping(address => uint) public balanceOf;\r\n    mapping(address => mapping(address => uint)) public allowance;\r\n    mapping(address => bool) public whitelistedAddrees;\r\n    string public name = \"QQ Token\";\r\n    string public symbol = \"QQT\";\r\n\r\n\r\n    constructor(address pre_mint_address)\r\n    {\r\n        owner = msg.sender;\r\n        premint(premintSupply,pre_mint_address);\r\n    }\r\n\r\n     modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transfer(address recipient, uint amount) external returns (bool) {\r\n        \r\n        balanceOf[msg.sender] -= amount;\r\n        if(whitelistedAddrees[msg.sender] == true || tax == 0){\r\n            balanceOf[recipient] += amount;\r\n            emit Transfer(msg.sender, recipient, amount);\r\n        }\r\n        else{\r\n            uint256 taxamount = amount.mul(tax).div(10000);\r\n            uint256 receivable = amount.sub(taxamount);\r\n\r\n            balanceOf[recipient] += receivable;\r\n            balanceOf[treasury] += taxamount;\r\n\r\n            emit Transfer(msg.sender, recipient, receivable);\r\n            emit Transfer(msg.sender, treasury, taxamount);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint amount) external returns (bool) {\r\n        allowance[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint amount\r\n    ) external returns (bool) {\r\n        allowance[sender][msg.sender] -= amount;\r\n        balanceOf[sender] -= amount;\r\n\r\n        if(whitelistedAddrees[msg.sender] == true || tax == 0){\r\n            balanceOf[recipient] += amount;\r\n            emit Transfer(sender, recipient, amount);\r\n        }\r\n        else{\r\n            uint256 taxamount = amount.mul(tax).div(10000);\r\n            uint256 receivable = amount.sub(taxamount);\r\n\r\n            balanceOf[recipient] += receivable;\r\n            balanceOf[treasury] += taxamount;\r\n\r\n            emit Transfer(sender, recipient, receivable);\r\n            emit Transfer(sender, treasury, taxamount);\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n    function mint(uint256 amount) external {\r\n\r\n        require(totalSupply+amount <=maxSupply ,\"Mint 10 B Token already\");\r\n\r\n        require(msg.sender == mintAllowAddress,\"Only QQT Minting System Allow to Mint Token\");\r\n\r\n        require( block.timestamp > lastminttime+minMintDifference ,\"Minimum 24 Hr Different Between Each Mint\");\r\n\r\n        require(amount <= maxMintPerDay,\" Maximum Can Mint only 5K Per Mint\");\r\n\r\n        balanceOf[msg.sender] += amount;\r\n        totalSupply += amount;\r\n        \r\n        lastminttime = block.timestamp;\r\n        emit minted(msg.sender,amount);\r\n        emit Transfer(address(0), msg.sender, amount);\r\n    }\r\n\r\n    function premint(uint amount,address _private_address) private {\r\n        balanceOf[_private_address] += amount;\r\n        totalSupply += amount;\r\n        emit Transfer(address(0), _private_address , amount);\r\n    }\r\n\r\n    function burn(uint amount) external {\r\n        balanceOf[msg.sender] -= amount;\r\n        totalSupply -= amount;\r\n        emit Transfer(msg.sender, address(0), amount);\r\n    }\r\n\r\n    function whitelistMintAddress(address _addr) onlyOwner external{\r\n        mintAllowAddress = _addr;\r\n\r\n    }\r\n\r\n    function addFullTransferAddress(address _addr) onlyOwner external {\r\n        whitelistedAddrees[_addr] = true;\r\n    }\r\n\r\n    function addTreasuryAddress(address _addr) onlyOwner external {\r\n        require(_addr != address(0),\"Required Valid Address\");\r\n        treasury = _addr;\r\n    }\r\n\r\n    function changeTax(uint8 _tax) onlyOwner external {\r\n        tax = _tax;\r\n    }\r\n\r\n    event minted(address indexed _to,uint value);\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pre_mint_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"minted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addFullTransferAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addTreasuryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_tax\",\"type\":\"uint8\"}],\"name\":\"changeTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastminttime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMintPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMintDifference\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintAllowAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"premintSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tax\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"whitelistMintAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedAddrees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "QQTToken", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000c21984953fdb015570fb72582337102121ef4570", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://6b9f74e35194eb7414a099739eb7e3ea54dfae334698ce90d03df425e8ce997d"}