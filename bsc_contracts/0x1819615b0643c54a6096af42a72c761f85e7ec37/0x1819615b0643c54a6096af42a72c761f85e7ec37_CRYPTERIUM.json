{"SourceCode": "pragma solidity ^0.5.10;\r\n\r\n/**\r\n\r\n\u2591\u2588\u2588\u2557\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2003\u2003\u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\r\n\u2591\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2003\u2003\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\r\n\u2591\u255a\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2591\u2003\u2003\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2591\r\n\u2591\u2591\u2588\u2588\u2588\u2588\u2554\u2550\u2588\u2588\u2588\u2588\u2551\u2591\u2588\u2588\u2554\u2550\u2550\u255d\u2591\u2591\u2003\u2003\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u255d\u2591\u2591\r\n\u2591\u2591\u255a\u2588\u2588\u2554\u255d\u2591\u255a\u2588\u2588\u2554\u255d\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2003\u2003\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\r\n\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u2003\u2003\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\r\n\r\n\u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2591\u2591\u2591\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2588\u2588\u2557\u2591\u2591\u2591\u2588\u2588\u2557\u2588\u2588\u2588\u2557\u2591\u2591\u2591\u2588\u2588\u2588\u2557\r\n\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u255a\u2588\u2588\u2557\u2591\u2588\u2588\u2554\u255d\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u255a\u2550\u2550\u2588\u2588\u2554\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2551\r\n\u2588\u2588\u2551\u2591\u2591\u255a\u2550\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2591\u255a\u2588\u2588\u2588\u2588\u2554\u255d\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\r\n\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2591\u2591\u255a\u2588\u2588\u2554\u255d\u2591\u2591\u2588\u2588\u2554\u2550\u2550\u2550\u255d\u2591\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2554\u2550\u2550\u255d\u2591\u2591\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\r\n\u255a\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2591\u255a\u2550\u255d\u2591\u2588\u2588\u2551\r\n\u2591\u255a\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u255a\u2550\u255d\u2591\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u2591\u2591\u255a\u2550\u255d\r\n\r\n* @title SafeMath\r\n* @dev Math operations with safety checks that throw on error\r\n*/\r\n\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address account) external view returns (uint);\r\n    function transfer(address recipient, uint amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n    function approve(address spender, uint amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint value) internal {\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint value) internal {\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    function safeApprove(IERC20 token, address spender, uint value) internal {\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        require(isContract(address(token)), \"SafeERC20: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = address(token).call(data);\r\n        require(success, \"SafeERC20: low-level call failed\");\r\n\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n\r\n    function isContract(address addr) internal view returns (bool) {\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size > 0;\r\n    }\r\n}\r\n\r\ncontract CRYPTERIUM{\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    \r\n    IERC20 public token;\r\n    \r\n    string public constant name                         = \"CRYPTERIUM COIN\";                // Name of the token\r\n    string public constant symbol                       = \"CCoin\";                          // Symbol of token\r\n    uint256 public constant decimals                    = 18;                               // Decimal of token\r\n    uint256 public _totalsupply                         = 200000000 * 10 ** decimals;       // Total supply\r\n    uint256 public _privateSale                         = 10000000 * 10 ** decimals;        // \r\n    uint256 public _seedSale                            = 10000000 * 10 ** decimals;        // \r\n    uint256 public _publicSale                          = 10000000 * 10 ** decimals;        // \r\n    uint256 public _development                         = 16000000 * 10 ** decimals;        // \r\n    uint256 public _playToEarn                          = 50000000 * 10 ** decimals;        // \r\n    uint256 public _stakingRewards                      = 30000000 * 10 ** decimals;        // \r\n    uint256 public _marketingAirdrops                   = 20000000 * 10 ** decimals;        // \r\n    uint256 public _ecosystem                           = 10000000 * 10 ** decimals;        // \r\n    uint256 public _ownership                           = 20000000 * 10 ** decimals;        // \r\n    uint256 public _advisor                             = 4000000 * 10 ** decimals;         // \r\n    uint256 public _liquidityPool                       = 20000000 * 10 ** decimals;        // \r\n    address public owner                                = msg.sender;                       // Owner of smart contract\r\n    uint256 public _price_token                         = 3334 * 10 ** 16;                  // 1 BUSD = 33.34 CCoin | 0.03 BSUD = 1 CCoin in Sale\r\n    address public admin                                = msg.sender;   \r\n\r\n    address public ownership                            = 0xcfb8A4D984C20B2C07404c9D238235957464b8A9;\r\n    address public advisor                              = 0xA1559A50dbbb09b7f1B57087A8c066C9423E9A97;\r\n    address public airdrop                              = 0xabf003De1d15B744DAd6418f326016c68CD7662f;\r\n    address public developer                            = 0xb3A4633aB07Fa85A9B4e2Da0551aE0fD43F2f72E;\r\n    address public liquiditypool                        = 0x026EEE1861BA8E244c1830C1dE26A12549EA81C2;\r\n    address public ecosystem                            = 0xf8A8A37B14Ad2c555edF10f08D986f5769B350C0;\r\n\taddress public playtoearn \t\t\t\t\t\t\t= 0x8552F85cb6a48c15B7abb41bB9dAce18952571Fc; \r\n\r\n    uint256 public _contractTime                        = now;   \r\n    uint256 public _privateSaleStartTime                = 0; // 1\r\n    uint256 public _seedSaleStartTime                   = 0; // 2\r\n    uint256 public _publicSaleStartTime                 = 0; // 3\r\n    uint256 public _currentSale                         = 0;\r\n    uint256 public _airdropStatus                       = 0;\r\n    uint256 public _unlock25_1st                           = 0;\r\n    uint256 public _unlock25_2nd                           = 0;\r\n    uint256 public _unlock50_3rd                           = 0;\r\n    uint256 public eth_received;                                                            // Total BUSD received in the contract\r\n    uint256 no_of_tokens;\r\n    mapping (address => uint256) balances;\r\n    mapping (address => uint256) public stakeTime;\r\n    mapping (address => uint256) public stakeAmount;\r\n    mapping (address => uint256) public airdropUserAmount;\r\n    mapping (address => mapping (address => uint)) public _allowances;\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval (address indexed _owner, address indexed spender, uint value);\r\n    \r\n    /* \u2580\u2588\u2580\u2003\u2588\u2580\u2588\u2003\u2588\u2584\u2580\u2003\u2588\u2580\u2580\u2003\u2588\u2584\u2591\u2588\u2003 \u2003\u2588\u2580\u2584\u2003\u2588\u2003\u2588\u2580\u2003\u2580\u2588\u2580\u2003\u2588\u2580\u2588\u2003\u2588\u2003\u2588\u2584\u2584\u2003\u2588\u2591\u2588\u2003\u2580\u2588\u2580\u2003\u2588\u2003\u2588\u2580\u2588\u2003\u2588\u2584\u2591\u2588\u2003 \u2003\u2588\u2580\u2584\u2003\u2588\u2580\u2580\u2003\u2580\u2588\u2580\u2003\u2584\u2580\u2588\u2003\u2588\u2003\u2588\u2591\u2591\u2003\u2588\u2580\r\n       \u2591\u2588\u2591\u2003\u2588\u2584\u2588\u2003\u2588\u2591\u2588\u2003\u2588\u2588\u2584\u2003\u2588\u2591\u2580\u2588\u2003 \u2003\u2588\u2584\u2580\u2003\u2588\u2003\u2584\u2588\u2003\u2591\u2588\u2591\u2003\u2588\u2580\u2584\u2003\u2588\u2003\u2588\u2584\u2588\u2003\u2588\u2584\u2588\u2003\u2591\u2588\u2591\u2003\u2588\u2003\u2588\u2584\u2588\u2003\u2588\u2591\u2580\u2588\u2003 \u2003\u2588\u2584\u2580\u2003\u2588\u2588\u2584\u2003\u2591\u2588\u2591\u2003\u2588\u2580\u2588\u2003\u2588\u2003\u2588\u2584\u2584\u2003\u2584\u2588\r\n    // Totalsupply - 200,000,000\r\n    // Private Sale Round - 10,000,000\r\n    // Seed Sale Round - 10,000,000\r\n    // Public Sale Round - 10,000,000\r\n    // Development - 16,000,000\r\n    // Play to Earn - 50,000,000\r\n    // Staking Rewards - 30,000,000\r\n    // Marketing & Airdrops - 20,000,000\r\n    // Ecosystem - 10,000,000\r\n    // Ownership - 20,000,000\r\n    // Advisor - 4,000,000\r\n    // Liquidity Pool - 20,000,000 \r\n    */\r\n\r\n\r\n    // Only owner can access the function\r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n    \r\n    // Only admin can access the function\r\n    modifier onlyAdmin() {\r\n        if (msg.sender != admin) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n\r\n    modifier onlyAirdrop() {\r\n        if (msg.sender != airdrop) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n    \r\n    constructor(address tokenAddr, address payable wallet) public {\r\n        require(!isContract(wallet) && isContract(tokenAddr));\r\n        token = IERC20(tokenAddr);\r\n        \r\n        // Development Transfer\r\n        balances[developer]             = _development;\r\n        emit Transfer(address(this), developer, _development);\r\n        \r\n        // Marketing & Airdrops Transfer\r\n        balances[airdrop]             = _marketingAirdrops;\r\n        emit Transfer(address(this), airdrop, _marketingAirdrops);\r\n        \r\n        // Ecosystem Transfer\r\n        balances[ecosystem]             = _ecosystem;\r\n        emit Transfer(address(this), ecosystem, _ecosystem);\r\n        \r\n        // Ownership Transfer\r\n        balances[ownership]             = _ownership;\r\n        emit Transfer(address(this), ownership, _ownership);\r\n        \r\n        // Advisor Transfer\r\n        balances[advisor]             = _advisor;\r\n        emit Transfer(address(this), advisor, _advisor);\r\n        \r\n        // Liquidity Pool Transfer\r\n        balances[liquiditypool]             = _liquidityPool;\r\n        emit Transfer(address(this), liquiditypool, _liquidityPool);\r\n\t\t\r\n\t\t// PlayToEarn Transfer\r\n        balances[playtoearn]             = _playToEarn;\r\n        emit Transfer(address(this), playtoearn, _playToEarn);\r\n    \r\n\t}\r\n    \r\n    function () external payable {\r\n        revert();\r\n    }\r\n    \r\n    function buy(uint256 value) public {\r\n        require(_currentSale > 0);\r\n        require(value <= token.allowance(msg.sender, address(this)));\r\n        token.safeTransferFrom(msg.sender, address(this), value);\r\n        \r\n        no_of_tokens                = value.mul(_price_token); \r\n        eth_received                = eth_received.add(value);\r\n        transferTokens(msg.sender,(no_of_tokens/10 ** decimals));\r\n    }\r\n    \r\n        \r\n    function startPrivateSale() public onlyAdmin\r\n    {\r\n        require(_currentSale == 0);\r\n        balances[address(this)] = balances[address(this)].add(_privateSale);\r\n        emit Transfer(address(this), address(this), _privateSale);\r\n        _privateSale = 0;\r\n        _privateSaleStartTime = now;\r\n        _currentSale = 1;\r\n    }\r\n    \r\n    function stopPrivateSale() public onlyAdmin\r\n    {\r\n        require(_currentSale == 1);\r\n        // _privateSale = balances[address(this)].add(_privateSale);\r\n        balances[msg.sender] = balances[msg.sender].add(balances[address(this)]);\r\n        emit Transfer(address(this), msg.sender, balances[address(this)]);\r\n        balances[address(this)] = 0;\r\n        _privateSaleStartTime = 0;\r\n        _currentSale = 0;\r\n    }\r\n    \r\n    function startSeedSale() public onlyAdmin\r\n    {\r\n        require(_currentSale == 0);\r\n        balances[address(this)] = balances[address(this)].add(_seedSale);\r\n        emit Transfer(address(this), address(this), _seedSale);\r\n        _seedSale = 0;\r\n        _seedSaleStartTime = now;\r\n        _currentSale = 2;\r\n    }\r\n    \r\n    function stopSeedSale() public onlyAdmin\r\n    {\r\n        require(_currentSale == 2);\r\n        // _seedSale = balances[address(this)].add(_seedSale);\r\n        balances[msg.sender] = balances[msg.sender].add(balances[address(this)]);\r\n        emit Transfer(address(this), msg.sender, balances[address(this)]);\r\n        balances[address(this)] = 0;\r\n        _seedSaleStartTime = 0;\r\n        _currentSale = 0;\r\n    }\r\n    \r\n    function startPublicSale() public onlyAdmin\r\n    {\r\n        require(_currentSale == 0);\r\n        balances[address(this)] = balances[address(this)].add(_publicSale);\r\n        emit Transfer(address(this), address(this), _publicSale);\r\n        _publicSale = 0;\r\n        _publicSaleStartTime = now;\r\n        _currentSale = 3;\r\n    }\r\n    \r\n    function stopPublicSale() public onlyAdmin\r\n    {\r\n        require(_currentSale == 3);\r\n        // _publicSale = balances[address(this)].add(_publicSale);\r\n        balances[msg.sender] = balances[msg.sender].add(balances[address(this)]);\r\n        emit Transfer(address(this), msg.sender, balances[address(this)]);\r\n        balances[address(this)] = 0;\r\n        _publicSaleStartTime = 0;\r\n        _currentSale = 0;\r\n    }\r\n    \r\n    function transferAirdrop(address _transferTo, uint256 _transferAmount) public returns(bool success)\r\n    {\r\n        require(_airdropStatus == 0 && balances[msg.sender] >= _transferAmount);\r\n        balances[msg.sender] = balances[msg.sender].sub(_transferAmount);\r\n        balances[_transferTo] = balances[_transferTo].add(_transferAmount);\r\n        airdropUserAmount[_transferTo] = airdropUserAmount[_transferTo].add(_transferAmount);\r\n        emit Transfer(msg.sender, _transferTo, _transferAmount);\r\n        return success;\r\n    }\r\n    \r\n    function unlock25_1st() public onlyAirdrop\r\n    {\r\n        _airdropStatus = 1;\r\n        _unlock25_1st = 1;\r\n    }\r\n    \r\n    function unlock25_2nd() public onlyAirdrop\r\n    {\r\n        _airdropStatus = 1;\r\n        _unlock25_2nd = 1;\r\n    }\r\n    \r\n    function unlock50_3rd() public onlyAirdrop\r\n    {\r\n        _airdropStatus = 1;\r\n        _unlock50_3rd = 1;\r\n    }\r\n    \r\n    function stakeTokens(uint256 stakeTokenAmount) public returns(bool success, uint256 tokenAmount)\r\n    {\r\n        require(balances[msg.sender] >= stakeTokenAmount && stakeTokenAmount >= (5000*10**decimals) && stakeTime[msg.sender] == 0);\r\n        balances[msg.sender] = balances[msg.sender].sub(stakeTokenAmount);\r\n        stakeAmount[msg.sender] = stakeAmount[msg.sender].add(stakeTokenAmount);\r\n        stakeTime[msg.sender] = now;\r\n        \r\n        return (true, stakeTokenAmount);\r\n    }\r\n    \r\n    function unstakeTokens() public returns(bool, uint256)\r\n    {\r\n        require(now >= (stakeTime[msg.sender] + 60));\r\n        uint256 roiOnStake = stakeAmount[msg.sender].percent(22, 100, 18);\r\n        uint256 perminStakeAmount = roiOnStake.div(525600);\r\n        uint256 roiTimeCount = now.sub(stakeTime[msg.sender]);\r\n        uint256 roiminCount = roiTimeCount.div(60);\r\n        uint256 finalminsCount;\r\n        if(roiminCount >= 1) {\r\n            finalminsCount = roiminCount;\r\n        } \r\n        uint256 totalRoiReceived = finalminsCount.mul(perminStakeAmount);\r\n        _stakingRewards = _stakingRewards.sub(totalRoiReceived);\r\n        balances[msg.sender] = balances[msg.sender].add(totalRoiReceived);\r\n        balances[msg.sender] = balances[msg.sender].add(stakeAmount[msg.sender]);\r\n        stakeAmount[msg.sender] = 0;\r\n        stakeTime[msg.sender] = 0;\r\n        \r\n        return (true, totalRoiReceived);\r\n    }\r\n    \r\n    function stakeReturnsBalance(address _owner) public view returns(bool, uint256)\r\n    {\r\n        require(stakeTime[_owner] > 0);\r\n        uint256 roiOnStake = stakeAmount[_owner].percent(22, 100, 18);\r\n        uint256 perminStakeAmount = roiOnStake.div(525600);\r\n        uint256 roiTimeCount = now.sub(stakeTime[_owner]);\r\n        uint256 roiminCount = roiTimeCount.div(60);\r\n        uint256 finalminsCount;\r\n        if(roiminCount >= 1 ) {\r\n            finalminsCount = roiminCount;\r\n        } \r\n        uint256 totalRoiReceivedShow = finalminsCount.mul(perminStakeAmount);\r\n        \r\n        return (true, totalRoiReceivedShow);\r\n    }\r\n    \r\n    // Show token balance of address owner\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    } \r\n    \r\n    // Token transfer function\r\n    // Token amount should be in 18 decimals (eg. 199 * 10 ** 18)\r\n    function transfer(address _to, uint256 _amount ) public {\r\n        require(balances[msg.sender] >= _amount && _amount >= 0);\r\n        uint256 lockAmount = airdropUserAmount[msg.sender];\r\n        if(airdropUserAmount[msg.sender] > 0) {\r\n            if(_unlock25_1st == 1) {\r\n                uint256 unlockamount25_1st = airdropUserAmount[msg.sender].percent(25, 100, 18);\r\n                lockAmount = lockAmount.sub(unlockamount25_1st);\r\n            }\r\n            if(_unlock25_2nd == 1) {\r\n                uint256 unlockamount25_2nd = airdropUserAmount[msg.sender].percent(25, 100, 18);\r\n                lockAmount = lockAmount.sub(unlockamount25_2nd);\r\n            }\r\n            if(_unlock50_3rd == 1) {\r\n                uint256 unlockamount50_3rd = airdropUserAmount[msg.sender].percent(50, 100, 18);\r\n                lockAmount = lockAmount.sub(unlockamount50_3rd);\r\n            }\r\n            require(balances[msg.sender] >= (_amount.add(lockAmount)));\r\n        }\r\n        balances[msg.sender]            = balances[msg.sender].sub(_amount);\r\n        balances[_to]                   = balances[_to].add(_amount);\r\n        emit Transfer(msg.sender, _to, _amount);\r\n    }\r\n    \r\n    // Transfer the balance from owner's account to another account\r\n    function transferTokens(address _to, uint256 _amount) private returns (bool success) {\r\n        require( _to != 0x0000000000000000000000000000000000000000);       \r\n        require(balances[address(this)] >= _amount && _amount > 0);\r\n        balances[address(this)] = balances[address(this)].sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        emit Transfer(address(this), _to, _amount);\r\n        return true;\r\n    }\r\n    \r\n    function allowance(address _owner, address spender) public view returns (uint) {\r\n        return _allowances[_owner][spender];\r\n    }\r\n    \r\n    function approve(address spender, uint amount) public returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address sender, address recipient, uint amount) public returns (bool) {\r\n        require(balances[sender] >= amount && amount >= 0);\r\n        balances[sender]                = balances[sender].sub(amount);\r\n        balances[recipient]             = balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\r\n        return true;\r\n    }\r\n    \r\n    function increaseAllowance(address spender, uint addedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\r\n        return true;\r\n    }\r\n    \r\n    function decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\r\n        return true;\r\n    }\r\n    \r\n    function _approve(address _owner, address spender, uint amount) internal {\r\n        require(_owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[_owner][spender] = amount;\r\n        emit Approval(_owner, spender, amount);\r\n    }\r\n    \r\n    function totalSupply() public view returns (uint256 total_Supply) {\r\n        total_Supply = _totalsupply;\r\n    }\r\n    \r\n    function changeAdmin(address _newAdminAddress) external onlyOwner {\r\n        admin = _newAdminAddress;\r\n    }\r\n \r\n    function contractearnings() external onlyAdmin {\r\n        uint256 contractBalance = token.balanceOf(address(this));\r\n        token.safeTransfer(msg.sender, contractBalance);\r\n        // transfer(admin, balances[address(this)]);\r\n    }\r\n    \r\n    function getContractBalance() public view returns (uint256) {\r\n        return token.balanceOf(address(this));\r\n    }\r\n    \r\n    function isContract(address addr) internal view returns (bool) {\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size > 0;\r\n    }\r\n    \r\n}\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n        return 0;\r\n    }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n  \r\n    function percent(uint value,uint numerator, uint denominator, uint precision) internal pure  returns(uint quotient) {\r\n        uint _numerator  = numerator * 10 ** (precision+1);\r\n        uint _quotient =  ((_numerator / denominator) + 5) / 10;\r\n        return (value*_quotient/1000000000000000000);\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_transferTo\",\"type\":\"address\"},{\"name\":\"_transferAmount\",\"type\":\"uint256\"}],\"name\":\"transferAirdrop\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_allowances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startPublicSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopSeedSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startSeedSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"total_Supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_publicSaleStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_privateSaleStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_liquidityPool\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_stakingRewards\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"airdropUserAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"stakeReturnsBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startPrivateSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdrop\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_marketingAirdrops\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_contractTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_unlock25_1st\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopPrivateSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownership\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_unlock50_3rd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock25_2nd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_publicSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"playtoearn\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"stakeTokenAmount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_unlock25_2nd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_airdropStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eth_received\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdminAddress\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_ownership\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecosystem\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalsupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unstakeTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_ecosystem\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock50_3rd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"liquiditypool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_development\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock25_1st\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"developer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_seedSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_privateSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopPublicSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_currentSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contractearnings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_playToEarn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_price_token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_advisor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_seedSaleStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenAddr\",\"type\":\"address\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "CRYPTERIUM", "CompilerVersion": "v0.5.10+commit.5a6ea5b1", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000e9e7cea3dedca5984780bafc599bd69add087d56000000000000000000000000ac1c584bc01f9d1bbfa08ce2494d9b10b41589ae", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://e30a2d7819f3e800a8d073dffba7f3621eda17bfa2c086fd66a427edb4ab043b"}