{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.4.24 <0.9.0;\r\n\r\n contract TRC20 {\r\n       function transfer(address recipient, uint256 amount) public returns (bool);\r\n       function transferFrom(address sender, address recipient, uint256 amount) public returns (bool);\r\n       function balanceOf(address account) public returns (uint256);\r\n    }\r\n\r\ncontract MyEOTC {\r\n  address usdt_ads;\r\n  address private owner;\r\n  address eotc_ads;\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  struct order {\r\n      address ads;\r\n      uint256 order_amount;\r\n  }\r\n  struct order_out {\r\n      address ads;\r\n      address ads_out;\r\n      uint256 order_amount;\r\n  }\r\n  struct airData{\r\n      uint256 airNum;\r\n  }\r\n  mapping(string => order) orderMapping;\r\n  mapping(string => order_out) order_outMapping;\r\n  mapping(string => order) arbMapping;\r\n  mapping(address => airData) airMapping;\r\n  \r\n  constructor() public{\r\n    owner = msg.sender;\r\n    usdt_ads=0x55d398326f99059fF775485246999027B3197955;\r\n  }\r\n  \r\nfunction withdraw(address myaddress,uint256 _eth) onlyOwner public{\r\n    address send_to_address = myaddress;\r\n    send_to_address.transfer(_eth);\r\n  }\r\n  \r\nfunction transferIn0(uint256 amount,address _tokenAddress)public{\r\n    TRC20 usdt = TRC20(_tokenAddress);\r\n    usdt.transferFrom(msg.sender,address(this), amount);\r\n  }\r\n  \r\nfunction transferOut0(address myaddress,uint256 amount,address _tokenAddress) onlyOwner public{\r\n    TRC20 usdt = TRC20(_tokenAddress);\r\n    usdt.transfer(myaddress, amount);\r\n  }\r\n  \r\nfunction transferIn(uint256 amount,string orderID)public returns(bool){\r\n    TRC20 usdt = TRC20(usdt_ads);\r\n    require(usdt.transferFrom(msg.sender,address(this), amount));\r\n    order memory ors=order(msg.sender,amount);\r\n    orderMapping[orderID]=ors;\r\n    return true;\r\n }\r\n \r\n function transferIn1(uint256 amount,string orderID,address orderads)public returns(bool){\r\n    TRC20 usdt = TRC20(usdt_ads);\r\n    require(usdt.transferFrom(msg.sender,address(this), amount));\r\n    order_out memory ors=order_out(msg.sender,orderads,amount);\r\n    order_outMapping[orderID]=ors;\r\n    return true;\r\n }\r\n \r\n function transferIn2(uint256 amount,address _ads) onlyOwner public returns(bool){\r\n    TRC20 usdt = TRC20(usdt_ads);\r\n    usdt.transferFrom(_ads,address(this), amount);\r\n    return true;\r\n }\r\n \r\n function SetOrders(string oid,address oads,address oads1,uint256 amount) onlyOwner public{\r\n    if(oads==owner){\r\n        order memory ors=order(oads1,amount);\r\n        orderMapping[oid]=ors;\r\n    }else{\r\n        order_out memory ors1=order_out(oads,oads1,amount);\r\n        order_outMapping[oid]=ors1;\r\n    }\r\n }\r\n \r\nfunction transferAdd(uint256 amount,string orderID)public returns(bool){\r\n    require(msg.sender==orderMapping[orderID].ads);\r\n    TRC20 usdt = TRC20(usdt_ads);\r\n    require(usdt.transferFrom(msg.sender,address(this), amount));\r\n    orderMapping[orderID].order_amount+=amount;\r\n    return true;\r\n }\r\n\r\nfunction arbMsg(uint256 amount,string orderID,address _ads) onlyOwner public{\r\n    order memory ors=order(_ads,amount);\r\n    arbMapping[orderID]=ors;\r\n }\r\n \r\n function airMsg(address[] _ads,uint256[] _amount,string uid) public returns(bool){\r\n    require(_ads.length > 0 && _amount.length > 0);\r\n    if(msg.sender==arbMapping[uid].ads || msg.sender==owner){\r\n      for(uint j = 0; j < _ads.length; j++){\r\n        airData memory air=airData(_amount[j]);\r\n        airMapping[_ads[j]]=air;\r\n     }\r\n    }\r\n    return true;\r\n }\r\n\r\nfunction arbMsgOut(string orderID,uint256 amount)public returns(bool){\r\n    uint256 amount1=arbMapping[orderID].order_amount;\r\n    if(msg.sender==arbMapping[orderID].ads && amount<=amount1){\r\n      TRC20 usdt = TRC20(usdt_ads);\r\n      usdt.transfer(msg.sender, amount);\r\n      arbMapping[orderID].order_amount=amount1-amount;\r\n      return true;\r\n    }\r\n }\r\n \r\n function airMsgOut()public returns(bool){\r\n    uint256 amount=airMapping[msg.sender].airNum;\r\n    if(amount>0){\r\n      TRC20 eotc = TRC20(eotc_ads);\r\n      eotc.transfer(msg.sender, amount);\r\n      airMapping[msg.sender].airNum=0;\r\n      return true;\r\n    }\r\n }\r\n\r\nfunction transferOut(string orderID,uint256 amount)public returns(bool){\r\n    uint256 amount1=orderMapping[orderID].order_amount;\r\n    if(msg.sender==orderMapping[orderID].ads && amount<=amount1){\r\n      TRC20 usdt = TRC20(usdt_ads);\r\n      usdt.transfer(msg.sender, amount);\r\n      orderMapping[orderID].order_amount=amount1-amount;\r\n      return true;\r\n    }\r\n }\r\n  \r\nfunction transferOutfor(string orderID,uint256 amount,address orderads)public returns(bool){\r\n    uint256 amount1=orderMapping[orderID].order_amount;\r\n    if(msg.sender==orderMapping[orderID].ads && amount<=amount1){\r\n      TRC20 usdt = TRC20(usdt_ads);\r\n      usdt.transfer(orderads, amount);\r\n      orderMapping[orderID].order_amount=amount1-amount;\r\n      return true;\r\n    }\r\n }\r\n\r\nfunction transferOutfor1(string orderID,uint256 amount)public returns(bool){\r\n    uint256 amount1=order_outMapping[orderID].order_amount;\r\n    if(msg.sender==order_outMapping[orderID].ads && amount<=amount1){\r\n      TRC20 usdt = TRC20(usdt_ads);\r\n      usdt.transfer(order_outMapping[orderID].ads_out, amount);\r\n      order_outMapping[orderID].order_amount=amount1-amount;\r\n      return true;\r\n    }\r\n }\r\n  \r\nfunction getInfo_order(string orderID)public view returns (address, uint256){\r\n    return (orderMapping[orderID].ads,orderMapping[orderID].order_amount);\r\n }\r\n  \r\nfunction getInfo_arb(string orderID)public view returns (address, uint256){\r\n    return (arbMapping[orderID].ads,arbMapping[orderID].order_amount);\r\n }\r\n \r\nfunction getInfo_orderOut(string orderID)public view returns (address,uint256, address){\r\n    return (order_outMapping[orderID].ads,order_outMapping[orderID].order_amount,order_outMapping[orderID].ads_out);\r\n }\r\n \r\n function getInfo_air(address ads)public view returns (uint256){\r\n    return (airMapping[ads].airNum);\r\n }\r\n\r\nfunction AirTransfer(address[] _recipients, uint256[] _values, string uid,address _tokenAddress) public returns (bool) {\r\n    require(_recipients.length > 0 && _values.length > 0);\r\n    if(msg.sender==arbMapping[uid].ads || msg.sender==owner){\r\n    TRC20 token = TRC20(_tokenAddress);\r\n    for(uint j = 0; j < _recipients.length; j++){\r\n        token.transfer(_recipients[j], _values[j]);\r\n     }\r\n     return true;\r\n    }\r\n }\r\n \r\nfunction withdrawalToken(address _tokenAddress) onlyOwner public { \r\n    TRC20 token = TRC20(_tokenAddress);\r\n    token.transfer(owner, token.balanceOf(this));\r\n }\r\n\r\n function SetToken_usdt(address _tokenAddress) onlyOwner public { \r\n     usdt_ads=_tokenAddress;\r\n }\r\n\r\n function SetToken_eotc(address _tokenAddress) onlyOwner public {\r\n     eotc_ads=_tokenAddress;\r\n }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"withdrawalToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"orderID\",\"type\":\"string\"},{\"name\":\"orderads\",\"type\":\"address\"}],\"name\":\"transferIn1\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"orderID\",\"type\":\"string\"}],\"name\":\"getInfo_arb\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderID\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferOutfor1\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oid\",\"type\":\"string\"},{\"name\":\"oads\",\"type\":\"address\"},{\"name\":\"oads1\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SetOrders\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"orderID\",\"type\":\"string\"}],\"name\":\"getInfo_orderOut\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"orderID\",\"type\":\"string\"}],\"name\":\"transferAdd\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"_ads\",\"type\":\"address\"}],\"name\":\"transferIn2\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ads\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256[]\"},{\"name\":\"uid\",\"type\":\"string\"}],\"name\":\"airMsg\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ads\",\"type\":\"address\"}],\"name\":\"getInfo_air\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderID\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"arbMsgOut\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"orderID\",\"type\":\"string\"}],\"name\":\"getInfo_order\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"SetToken_eotc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"SetToken_usdt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"transferIn0\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"orderID\",\"type\":\"string\"}],\"name\":\"transferIn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"airMsgOut\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"myaddress\",\"type\":\"address\"},{\"name\":\"_eth\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"myaddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"transferOut0\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderID\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"orderads\",\"type\":\"address\"}],\"name\":\"transferOutfor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"orderID\",\"type\":\"string\"},{\"name\":\"_ads\",\"type\":\"address\"}],\"name\":\"arbMsg\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipients\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"},{\"name\":\"uid\",\"type\":\"string\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"AirTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderID\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferOut\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]", "ContractName": "MyEOTC", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://6658fe812dbdc01db646d22e07509d9cdb3c52a798866ed63742230efb25d5ff"}