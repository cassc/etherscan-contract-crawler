{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2023-09-04\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\n// IERC20 \u4ee3\u5e01\u534f\u8bae\u89c4\u8303\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u53d1\u884c\u4ee3\u5e01\uff0c\u53ea\u8981\u7f16\u5199\u7684\u667a\u80fd\u5408\u7ea6\u91cc\u5305\u542b\u4ee5\u4e0b\u6307\u5b9a\u65b9\u6cd5\uff0c\u5728\u516c\u94fe\u4e0a\uff0c\u5c31\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u4ee3\u5e01\u5408\u7ea6\r\ninterface IERC20 {\r\n    //\u7cbe\u5ea6\uff0c\u8868\u660e\u4ee3\u5e01\u7684\u7cbe\u5ea6\u662f\u591a\u5c11\uff0c\u5373\u5c0f\u6570\u4f4d\u6709\u591a\u5c11\u4f4d\r\n    function decimals() external view returns (uint8);\r\n    //\u4ee3\u5e01\u7b26\u53f7\uff0c\u4e00\u822c\u770b\u5230\u7684\u5c31\u662f\u4ee3\u5e01\u7b26\u53f7\r\n    function symbol() external view returns (string memory);\r\n    //\u4ee3\u5e01\u540d\u79f0\uff0c\u4e00\u822c\u662f\u5177\u4f53\u7684\u6709\u610f\u4e49\u7684\u82f1\u6587\u540d\u79f0\r\n    function name() external view returns (string memory);\r\n    //\u4ee3\u5e01\u53d1\u884c\u7684\u603b\u91cf\uff0c\u73b0\u5728\u5f88\u591a\u4ee3\u5e01\u53d1\u884c\u540e\u603b\u91cf\u4e0d\u4f1a\u6539\u53d8\uff0c\u6709\u4e9b\u6316\u77ff\u7684\u5e01\uff0c\u603b\u91cf\u4f1a\u968f\u7740\u6316\u77ff\u4ea7\u51fa\u589e\u591a\uff0c\u6709\u4e9b\u4ee3\u5e01\u7684\u6a21\u5f0f\u53ef\u80fd\u4f1a\u901a\u7f29\uff0c\u5373\u603b\u91cf\u4f1a\u53d8\u5c11\r\n    function totalSupply() external view returns (uint256);\r\n    //\u67d0\u4e2a\u8d26\u6237\u5730\u5740\u7684\u4ee3\u5e01\u4f59\u989d\uff0c\u5373\u67d0\u5730\u5740\u62e5\u6709\u8be5\u4ee3\u5e01\u8d44\u4ea7\u7684\u6570\u91cf\r\n    function balanceOf(address account) external view returns (uint256);\r\n    //\u8f6c\u8d26\uff0c\u53ef\u4ee5\u5c06\u4ee3\u5e01\u8f6c\u7ed9\u522b\u4eba\uff0c\u8fd9\u79cd\u60c5\u51b5\u662f\u8d44\u4ea7\u62e5\u6709\u7684\u5730\u5740\u4e3b\u52a8\u628a\u4ee3\u5e01\u8f6c\u7ed9\u522b\u4eba\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    //\u6388\u6743\u989d\u5ea6\uff0c\u67d0\u4e2a\u8d26\u6237\u5730\u5740\u6388\u6743\u7ed9\u4f7f\u7528\u8005\u4f7f\u7528\u81ea\u5df1\u4ee3\u5e01\u7684\u989d\u5ea6\uff0c\u4e00\u822c\u662f\u6388\u6743\u7ed9\u667a\u80fd\u5408\u7ea6\uff0c\u8ba9\u667a\u80fd\u5408\u7ea6\u5212\u8f6c\u81ea\u5df1\u7684\u8d44\u4ea7\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    //\u6388\u6743\uff0c\u5c06\u81ea\u5df1\u7684\u4ee3\u5e01\u8d44\u4ea7\u6388\u6743\u7ed9\u5176\u4ed6\u4eba\u4f7f\u7528\uff0c\u4e00\u822c\u662f\u6388\u6743\u7ed9\u667a\u80fd\u5408\u7ea6\uff0c\u8bf7\u5c3d\u91cf\u4e0d\u8981\u6388\u6743\u7ed9\u4e0d\u660e\u6765\u6e90\u7684\u667a\u80fd\u5408\u7ea6\uff0c\u6709\u53ef\u80fd\u4f1a\u8f6c\u8d70\u4f60\u7684\u8d44\u4ea7\uff0c\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    //\u5c06\u6307\u5b9a\u8d26\u53f7\u5730\u5740\u7684\u8d44\u4ea7\u8f6c\u7ed9\u6307\u5b9a\u7684\u63a5\u6536\u5730\u5740\uff0c\u4e00\u822c\u662f\u667a\u80fd\u5408\u7ea6\u8c03\u7528\uff0c\u9700\u8981\u642d\u914d\u4e0a\u9762\u7684\u6388\u6743\u65b9\u6cd5\u4f7f\u7528\uff0c\u6388\u6743\u4e86\u624d\u80fd\u5212\u8f6c\u522b\u4eba\u7684\u4ee3\u5e01\u8d44\u4ea7\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    //\u8f6c\u8d26\u4e8b\u4ef6\uff0c\u4e00\u822c\u533a\u5757\u6d4f\u89c8\u5668\u662f\u6839\u636e\u8be5\u4e8b\u4ef6\u6765\u505a\u4ee3\u5e01\u8f6c\u8d26\u8bb0\u5f55\uff0c\u4e8b\u4ef6\u4f1a\u5b58\u5728\u516c\u94fe\u8282\u70b9\u7684\u65e5\u5fd7\u7cfb\u7edf\u91cc\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    //\u6388\u6743\u4e8b\u4ef6\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\nabstract contract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = msg.sender;\r\n        //\u5408\u7ea6\u521b\u5efa\u8005\u62e5\u6709\u6743\u9650\uff0c\u4e5f\u53ef\u4ee5\u586b\u5199\u5177\u4f53\u7684\u5730\u5740\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    //\u67e5\u770b\u6743\u9650\u5728\u54ea\u4e2a\u5730\u5740\u4e0a\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    //\u62e5\u6709\u6743\u9650\u624d\u80fd\u8c03\u7528\r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    //\u653e\u5f03\u6743\u9650\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    //\u8f6c\u79fb\u6743\u9650\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n// Dex Swap \u8def\u7531\u63a5\u53e3\uff0c\u5b9e\u9645\u4e0a\u63a5\u53e3\u65b9\u6cd5\u6bd4\u8fd9\u91cc\u5199\u7684\u8fd8\u8981\u66f4\u591a\u4e00\u4e9b\uff0c\u672c\u4ee3\u5e01\u5408\u7ea6\u91cc\u53ea\u7528\u5230\u4ee5\u4e0b\u65b9\u6cd5\r\ninterface ISwapRouter {\r\n    //\u8def\u7531\u7684\u5de5\u5382\u65b9\u6cd5\uff0c\u7528\u4e8e\u521b\u5efa\u4ee3\u5e01\u4ea4\u6613\u5bf9\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    //\u5c06\u6307\u5b9a\u6570\u91cf\u7684\u4ee3\u5e01path[0]\u5151\u6362\u4e3a\u53e6\u5916\u4e00\u79cd\u4ee3\u5e01path[path.length-1]\uff0c\u652f\u6301\u624b\u7eed\u8d39\u6ed1\u70b9\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}\r\n\r\ninterface ISwapFactory {\r\n    //\u521b\u5efa\u4ee3\u5e01 tokenA\u3001tokenB \u7684\u4ea4\u6613\u5bf9\uff0c\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684 LP\uff0cLP \u4ea4\u6613\u5bf9\u672c\u8eab\u4e5f\u662f\u4e00\u79cd\u4ee3\u5e01\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ncontract HDToken is IERC20, Ownable {\r\n    //\u7528\u4e8e\u5b58\u50a8\u6bcf\u4e2a\u5730\u5740\u7684\u4f59\u989d\u6570\u91cf\r\n    mapping(address => uint256) private _balances;\r\n    //\u5b58\u50a8\u6388\u6743\u6570\u91cf\uff0c\u8d44\u4ea7\u62e5\u6709\u8005 owner => \u6388\u6743\u8c03\u7528\u65b9 spender => \u6388\u6743\u6570\u91cf\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    string private _name;//\u540d\u79f0\r\n    string private _symbol;//\u7b26\u53f7\r\n    uint8 private _decimals;//\u7cbe\u5ea6\r\n\r\n    address public mainPair;//\u4e3b\u4ea4\u6613\u5bf9\u5730\u5740\r\n\r\n    mapping(address => bool) private _feeWhiteList;//\u4ea4\u6613\u7a0e\u767d\u540d\u5355\r\n\r\n    uint256 private constant MAX = ~uint256(0);\r\n    uint256 private _tTotal;//\u603b\u91cf\r\n\r\n    ISwapRouter public _swapRouter;//dex swap \u8def\u7531\u5730\u5740\r\n    bool private inSwap;//\u662f\u5426\u6b63\u5728\u4ea4\u6613\uff0c\u7528\u4e8e\u5408\u7ea6\u51fa\u552e\u4ee3\u5e01\u65f6\u52a0\u9501\r\n\r\n    address private usdt; // \r\n\r\n    uint256 private startTradeBlock;//\u5f00\u653e\u4ea4\u6613\u7684\u533a\u5757\uff0c\u7528\u4e8e\u6740\u673a\u5668\u4eba\r\n    mapping(address => bool) private _blackList;//\u9ed1\u540d\u5355\r\n\r\n    // \u8fd0\u884c\r\n    address private yiAddress = 0x8fbf6ad36BE9f039364bbF431D17FFafd28E21A2;\r\n    // \u62c9\u76d8\r\n    address private erAddress = 0xaD47b27dB60eAcf6DE0fa0A73F4ABa76d34c89C2;\r\n    // \u5956\u52b1\r\n    address private sanAddress = 0x71bF1BdF0C8f5a4cD7BB7490A59516bE1206Bd61;\r\n\r\n    uint256 public _ruYiRate = 100;\r\n    uint256 public _ruErRate = 200;\r\n    uint256 public _ruSanRate = 200;\r\n\r\n    uint256 public _chuYiRate = 100;\r\n    uint256 public _chuErRate = 200;\r\n    uint256 public _chuSanRate = 200;\r\n\r\n    // \u5356\u51fa\u6700\u5927\u6570\u91cf\r\n    uint256 public _chuMaxNum = 10000000000000000000000;\r\n\r\n    // \u6700\u5927\u5356\u51fa\u6bd4\u4f8b99.99%\r\n    uint256 public MAX_RATIO = 9999;\r\n\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor (){\r\n        _name = \"HD\";\r\n        _symbol = \"HD\";\r\n        _decimals = 9;\r\n\r\n        //BSC PancakeSwap \u8def\u7531\u5730\u5740\r\n        _swapRouter = ISwapRouter(0x10ED43C718714eb63d5aA57B78B54704E256024E);\r\n        usdt = address(0x55d398326f99059fF775485246999027B3197955);\r\n        // _swapRouter = ISwapRouter(0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3);\r\n        // usdt = address(0x7ef95a0FEE0Dd31b22626fA2e10Ee6A223F8a684);\r\n\r\n        //\u521b\u5efa\u4ea4\u6613\u5bf9\r\n        mainPair = ISwapFactory(_swapRouter.factory()).createPair(address(this), usdt);\r\n        //\u5c06\u5408\u7ea6\u7684\u8d44\u4ea7\u6388\u6743\u7ed9\u8def\u7531\u5730\u5740\r\n        _allowances[address(this)][address(_swapRouter)] = MAX;\r\n        IERC20(usdt).approve(address(_swapRouter), MAX);\r\n\r\n        //\u603b\u91cf\r\n        _tTotal = 21000000 * 10 ** _decimals;\r\n        //\u521d\u59cb\u4ee3\u5e01\u8f6c\u7ed9\u8425\u9500\u94b1\u5305\r\n        _balances[owner()] = _tTotal;\r\n        emit Transfer(address(0), owner(), _tTotal);\r\n\r\n        //\u8425\u9500\u5730\u5740\u4e3a\u624b\u7eed\u8d39\u767d\u540d\u5355\r\n        _feeWhiteList[msg.sender] = true;\r\n        _feeWhiteList[address(this)] = true;\r\n        _feeWhiteList[address(_swapRouter)] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n   */\r\n    function symbol() external view override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function name() external view override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function decimals() external view override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() external view override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    // \u8bbe\u7f6e\u4e70\u5165\u6bd4\u4f8b\r\n    function setRuYiRate(uint256 fee) public onlyOwner{\r\n        _ruYiRate = fee;\r\n    }\r\n    function setRuErRate(uint256 fee) public onlyOwner{\r\n        _ruErRate = fee;\r\n    }\r\n    function setRuSanRate(uint256 fee) public onlyOwner{\r\n        _ruSanRate = fee;\r\n    }\r\n    // \u8bbe\u7f6e\u5356\u51fa\u6bd4\u4f8b\r\n    function setChuYiRate(uint256 fee) public onlyOwner{\r\n        _chuYiRate = fee;\r\n    }\r\n    function setChuErRate(uint256 fee) public onlyOwner{\r\n        _chuErRate = fee;\r\n    }\r\n    function setChuSanRate(uint256 fee) public onlyOwner{\r\n        _chuSanRate = fee;\r\n    }\r\n\r\n    function setYiAddress(address account) public onlyOwner{\r\n        if(yiAddress != account){\r\n            yiAddress = account;\r\n        }\r\n    }\r\n\r\n    function setErAddress(address account) public onlyOwner{\r\n        if(erAddress != account){\r\n            erAddress = account;\r\n        }\r\n    }\r\n    function setSanAddress(address account) public onlyOwner{\r\n        if(sanAddress != account){\r\n            sanAddress = account;\r\n        }\r\n    }\r\n\r\n    // \u8bbe\u7f6e\u5356\u51fa\u6700\u5927\u6570\u91cf\r\n    function setChuMaxNum(uint256 num) public onlyOwner{\r\n        _chuMaxNum = num;\r\n    }\r\n\r\n    // \u8bbe\u7f6e\u6700\u5927\u5356\u51fa\u6bd4\u4f8b\r\n    function setMaxRatio(uint256 _ratio) external onlyOwner {\r\n        require(MAX_RATIO != _ratio, \"TOKEN: Repeat Setting\");\r\n        MAX_RATIO = _ratio;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        if (_allowances[sender][msg.sender] != MAX) {\r\n            _allowances[sender][msg.sender] = _allowances[sender][msg.sender] - amount;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"approve from the zero address\");\r\n        require(spender != address(0), \"approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) private {\r\n        require(from != address(0), \"Transfer from the zero address\");\r\n        require(to != address(0), \"Transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n\r\n        //\u9ed1\u540d\u5355\u4e0d\u5141\u8bb8\u8f6c\u51fa\uff0c\u4e00\u822c\u8c94\u8c85\u4ee3\u7801\u4e5f\u662f\u8fd9\u6837\u7684\u903b\u8f91\r\n        require(!_blackList[from], \"Transfer from the blackList address\");\r\n\r\n        bool takeFee = false;\r\n        if (!_feeWhiteList[from] && !_feeWhiteList[to]) {\r\n            takeFee = true;\r\n        }\r\n\r\n        //\u4ea4\u6613\u6263\u7a0e\uff0cfrom == mainPair \u8868\u793a\u4e70\u5165\uff0cto == mainPair \u8868\u793a\u5356\u51fa\r\n        if (from == mainPair || to == mainPair) {\r\n            //\u4ea4\u6613\u672a\u5f00\u542f\uff0c\u53ea\u5141\u8bb8\u624b\u7eed\u8d39\u767d\u540d\u5355\u52a0\u6c60\u5b50\uff0c\u52a0\u6c60\u5b50\u5373\u5f00\u653e\u4ea4\u6613\r\n            if (0 == startTradeBlock) {\r\n                require(_feeWhiteList[from] || _feeWhiteList[to], \"Trade not start\");\r\n                startTradeBlock = block.number;\r\n            }\r\n\r\n            //\u4e0d\u5728\u624b\u7eed\u8d39\u767d\u540d\u5355\uff0c\u9700\u8981\u6263\u4ea4\u6613\u7a0e\r\n            if (!_feeWhiteList[from] && !_feeWhiteList[to]) {\r\n                require(amount <= _chuMaxNum, \"The number of tokens sold exceeds the limit\");\r\n                require(\r\n                (_balances[from] * MAX_RATIO) / 10000 >= amount,\r\n                    \"ERC20: transfer amount exceeds balance\"\r\n                );\r\n                \r\n\r\n                //\u6740 0\u30011\u30012 \u533a\u5757\u7684\u4ea4\u6613\u673a\u5668\u4eba\r\n                if (block.number <= startTradeBlock + 2) {\r\n                    //\u4e0d\u80fd\u628a\u6c60\u5b50\u52a0\u5165\u9ed1\u540d\u5355\r\n                    if (to != mainPair) {\r\n                        _blackList[to] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        _tokenTransfer(from, to, amount, takeFee);\r\n    }\r\n\r\n    function _tokenTransfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 tAmount,\r\n        bool takeFee\r\n    ) private {\r\n        //\u8f6c\u51fa\u8005\u51cf\u5c11\u4f59\u989d\r\n        _balances[sender] = _balances[sender] - tAmount;\r\n\r\n        uint256 feeAmount;\r\n        uint256 er;\r\n        uint256 san;\r\n        // \u4e70\u5165\r\n        if (takeFee) {\r\n            if(sender == mainPair){\r\n                feeAmount = tAmount * _ruYiRate / 10000;\r\n                _takeTransfer(sender, yiAddress, feeAmount);\r\n\r\n                er = tAmount * _ruErRate / 10000;\r\n                _takeTransfer(sender, erAddress, er);\r\n\r\n                san = tAmount * _ruSanRate / 10000;\r\n                _takeTransfer(sender, sanAddress, san);\r\n                //\u603b\u624b\u7eed\u8d39\r\n                feeAmount = feeAmount + er + san;\r\n            }else if(recipient == mainPair){\r\n                feeAmount = tAmount * _chuYiRate / 10000;\r\n                _takeTransfer(sender, yiAddress, feeAmount);\r\n\r\n                er = tAmount * _chuErRate / 10000;\r\n                _takeTransfer(sender, erAddress, er);\r\n\r\n                san = tAmount * _chuSanRate / 10000;\r\n                _takeTransfer(sender, sanAddress, san);\r\n                //\u603b\u624b\u7eed\u8d39\r\n                feeAmount = feeAmount + er + san;\r\n            }\r\n            \r\n        }\r\n\r\n        //\u63a5\u6536\u8005\u589e\u52a0\u4f59\u989d\r\n        tAmount = tAmount - feeAmount;\r\n        _takeTransfer(sender, recipient, tAmount);\r\n    }\r\n\r\n    function _takeTransfer(\r\n        address sender,\r\n        address to,\r\n        uint256 tAmount\r\n    ) private {\r\n        _balances[to] = _balances[to] + tAmount;\r\n        emit Transfer(sender, to, tAmount);\r\n    }\r\n\r\n    //\u67e5\u770b\u662f\u5426\u624b\u7eed\u8d39\u767d\u540d\u5355\r\n    function isFeeWhiteList(address addr) external view returns (bool){\r\n        return _feeWhiteList[addr];\r\n    }\r\n\r\n    //\u8868\u793a\u80fd\u63a5\u6536\u4e3b\u94fe\u5e01\r\n    receive() external payable {}\r\n\r\n    //\u8bbe\u7f6e\u4ea4\u6613\u624b\u7eed\u8d39\u767d\u540d\u5355\r\n    function setFeeWhiteList(address addr, bool enable) external onlyOwner {\r\n        _feeWhiteList[addr] = enable;\r\n    }\r\n\r\n    /**\r\n     *\r\n     *  \u6279\u91cf\u8bbe\u7f6e\u767d\u540d\u5355\r\n     */ \r\n    function excludeMultipleAccountsFromFee(\r\n        address[] memory accounts,\r\n        bool excluded\r\n    ) public onlyOwner {\r\n        for (uint256 i = 0; i < accounts.length; i++) {\r\n            _feeWhiteList[accounts[i]] = excluded;\r\n        }\r\n    }\r\n\r\n    //\u8bbe\u7f6e\u9ed1\u540d\u5355\r\n    function setFeeBlack(address addr, bool enable) external onlyOwner {\r\n        _blackList[addr] = enable;\r\n    }\r\n\r\n    /**\r\n     *\r\n     *  \u6279\u91cf\u8bbe\u7f6e\u9ed1\u540d\u5355\r\n     */ \r\n    function setFeeBlackList(\r\n        address[] memory accounts,\r\n        bool excluded\r\n    ) public onlyOwner {\r\n        for (uint256 i = 0; i < accounts.length; i++) {\r\n            _blackList[accounts[i]] = excluded;\r\n        }\r\n    }\r\n\r\n    //\u79fb\u9664\u9ed1\u540d\u5355\r\n    function removeBlackList(address addr) external onlyOwner {\r\n        _blackList[addr] = false;\r\n    }\r\n\r\n    //\u67e5\u770b\u662f\u5426\u9ed1\u540d\u5355\r\n    function isBlackList(address addr) external view returns (bool){\r\n        return _blackList[addr];\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_chuErRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_chuMaxNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_chuSanRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_chuYiRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ruErRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ruSanRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ruYiRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeMultipleAccountsFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isBlackList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isFeeWhiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setChuErRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setChuMaxNum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setChuSanRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setChuYiRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setErAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setFeeBlack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"setFeeBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setFeeWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"setMaxRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setRuErRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setRuSanRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setRuYiRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setSanAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setYiAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "HDToken", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://785e67600da838b60ab01ab8fa23ddd75506d8fd286ede0fd46ba4b380caacdf"}