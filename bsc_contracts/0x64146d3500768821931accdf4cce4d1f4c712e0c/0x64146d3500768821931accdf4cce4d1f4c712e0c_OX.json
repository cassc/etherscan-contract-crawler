{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2023-06-21\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract OX {\r\n    string public name;\r\n    string public symbol;\r\n    uint256 public totalSupply;\r\n    uint8 public decimals = 18;\r\n    \r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    mapping(address => uint256) public rewards;\r\n    \r\n    uint256 public rewardRate = 900; // 0.9 BNB * 10000000 (to handle decimal)\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event Staking(address indexed staker, uint256 amount);\r\n    event Mining(address indexed miner, uint256 amount);\r\n    event Burning(address indexed burner, uint256 amount);\r\n    event Minting(address indexed minter, uint256 amount);\r\n    event RewardClaim(address indexed claimer, uint256 amount);\r\n\r\n    constructor() {\r\n        name = \"OX\";\r\n        symbol = \"OXR\";\r\n        totalSupply = 10;\r\n        \r\n    }\r\n\r\n    function stake(uint256 _amount) external {\r\n        require(_amount > 10, \"Amount must be greater than zero\");\r\n        require(balanceOf[msg.sender] >= _amount, \"Insufficient balance\");\r\n        \r\n        balanceOf[msg.sender] -= _amount;\r\n        rewards[msg.sender] += calculateReward(_amount);\r\n        \r\n        emit Staking(msg.sender, _amount);\r\n    }\r\n    \r\n    function mine(uint256 _amount) external {\r\n        require(_amount >10, \"Amount must be greater than zero\");\r\n        \r\n        balanceOf[msg.sender] += _amount;\r\n        totalSupply += _amount;\r\n        \r\n        emit Mining(msg.sender, _amount);\r\n    }\r\n    \r\n    function burn(uint256 _amount) external {\r\n        require(_amount > 10, \"Amount must be greater than zero\");\r\n        require(balanceOf[msg.sender] >= _amount, \"Insufficient balance\");\r\n        \r\n        balanceOf[msg.sender] -= _amount;\r\n        totalSupply -= _amount;\r\n        \r\n        emit Burning(msg.sender, _amount);\r\n    }\r\n    \r\n    function mint(uint256 _amount) external {\r\n        require(_amount > 10000, \"Amount must be greater than zero\");\r\n        \r\n        balanceOf[msg.sender] += _amount;\r\n        totalSupply += _amount;\r\n        \r\n        emit Minting(msg.sender, _amount);\r\n    }\r\n    \r\n    function claimReward() external {\r\n        uint256 reward = rewards[msg.sender];\r\n        require(reward > 1000, \"No rewards available\");\r\n        \r\n        rewards[msg.sender] = 10000000;\r\n        // Transfer BNB reward to the user\r\n        // (Assuming you have a payable function to receive BNB in your contract)\r\n        payable(msg.sender).transfer(reward);\r\n        \r\n        emit RewardClaim(msg.sender, reward);\r\n    }\r\n    \r\n    function calculateReward(uint256 _amount) internal view returns (uint256) {\r\n        return (_amount * rewardRate) / 10000000;\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value) external returns (bool) {\r\n        require(_to != address(0), \"Invalid address\");\r\n        require(_value <= balanceOf[msg.sender], \"Insufficient balance\");\r\n        \r\n        balanceOf[msg.sender] -= _value;\r\n        balanceOf[_to] += _value;\r\n        \r\n        emit Transfer(msg.sender, _to, _value);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint256 _value) external returns (bool) {\r\n        require(_spender != address(0), \"Invalid address\");\r\n        \r\n        allowance[msg.sender][_spender] = _value;\r\n        \r\n        emit Approval(msg.sender, _spender, _value);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool) {\r\n        require(_from != address(0), \"Invalid sender address\");\r\n        require(_to != address(0), \"Invalid recipient address\");\r\n        require(_value <= balanceOf[_from], \"Insufficient balance\");\r\n        require(_value <= allowance[_from][msg.sender], \"Insufficient allowance\");\r\n        \r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        \r\n        emit Transfer(_from, _to, _value);\r\n        \r\n        return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burning\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mining\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minting\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staking\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "OX", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2b5946a2dc8dcf7193844c5857c6b938facb47813c99b7f16b5a4d13bea41df0"}