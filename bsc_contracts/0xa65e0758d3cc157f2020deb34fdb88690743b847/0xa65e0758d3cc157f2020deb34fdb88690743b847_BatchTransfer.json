{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.10;\r\n\r\ninterface ERC721Partial {\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n}\r\n\r\ncontract BatchTransfer {\r\n    /// @notice Tokens on the given ERC-721 contract are transferred from you to a recipient.\r\n    ///         Don't forget to execute setApprovalForAll first to authorize this contract.\r\n    /// @param  tokenContract An ERC-721 contract\r\n    /// @param  recipient     Who gets the tokens?\r\n    /// @param  tokenIds      Which token IDs are transferred?\r\n    function batchTransfer(ERC721Partial tokenContract, address recipient, uint256[] calldata tokenIds) external {\r\n        for (uint256 index; index < tokenIds.length; index++) {\r\n            tokenContract.transferFrom(msg.sender, recipient, tokenIds[index]);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract ERC721Partial\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BatchTransfer", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://9fd048e7f5763145de9b767bb7377300b4e62b6b4b129a58983c47f8d7179a0c"}