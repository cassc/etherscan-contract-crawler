{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/ERC20Permit.sol\": {\r\n      \"content\": \"pragma solidity =0.5.12;\\n\\ncontract LibNote {\\n  event LogNote(\\n    bytes4 indexed sig,\\n    address indexed usr,\\n    bytes32 indexed arg1,\\n    bytes32 indexed arg2,\\n    bytes data\\n  ) anonymous;\\n\\n  modifier note() {\\n    _;\\n    assembly {\\n      // log an 'anonymous' event with a constant 6 words of calldata\\n      // and four indexed topics: selector, caller, arg1 and arg2\\n      let mark := msize // end of memory ensures zero\\n      mstore(0x40, add(mark, 288)) // update free memory pointer\\n      mstore(mark, 0x20) // bytes type data offset\\n      mstore(add(mark, 0x20), 224) // bytes size (padded)\\n      calldatacopy(add(mark, 0x40), 0, 224) // bytes payload\\n      log4(\\n        mark,\\n        288, // calldata\\n        shl(224, shr(224, calldataload(0))), // msg.sig\\n        caller, // msg.sender\\n        calldataload(4), // arg1\\n        calldataload(36) // arg2\\n      )\\n    }\\n  }\\n}\\n\\ncontract ERC20Permit is LibNote {\\n  // --- Auth ---\\n  mapping(address => uint256) public wards;\\n\\n  function rely(address guy) external note auth {\\n    wards[guy] = 1;\\n  }\\n\\n  function deny(address guy) external note auth {\\n    wards[guy] = 0;\\n  }\\n\\n  modifier auth() {\\n    require(wards[msg.sender] == 1, \\\"FiTan/not-authorized\\\");\\n    _;\\n  }\\n\\n  // --- ERC20 Data ---\\n  string public constant name = \\\"FiTan\\\";\\n  string public constant symbol = \\\"FITAN\\\";\\n  string public constant version = \\\"1\\\";\\n  uint8 public constant decimals = 18;\\n  uint256 public totalSupply;\\n\\n  mapping(address => uint256) public balanceOf;\\n  mapping(address => mapping(address => uint256)) public allowance;\\n  mapping(address => uint256) public nonces;\\n\\n  event Approval(address indexed src, address indexed guy, uint256 wad);\\n  event Transfer(address indexed src, address indexed dst, uint256 wad);\\n\\n  // --- Math ---\\n  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    require((z = x + y) >= x);\\n  }\\n\\n  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n    require((z = x - y) <= x);\\n  }\\n\\n  // --- EIP712 niceties ---\\n  bytes32 public DOMAIN_SEPARATOR;\\n  // bytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed)\\\");\\n  bytes32 public constant PERMIT_TYPEHASH =\\n    0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\\n\\n  constructor(uint256 chainId_) public {\\n    wards[msg.sender] = 1;\\n    DOMAIN_SEPARATOR = keccak256(\\n      abi.encode(\\n        keccak256(\\n          \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n        ),\\n        keccak256(bytes(name)),\\n        keccak256(bytes(version)),\\n        chainId_,\\n        address(this)\\n      )\\n    );\\n  }\\n\\n  // --- Token ---\\n  function transfer(address dst, uint256 wad) external returns (bool) {\\n    return transferFrom(msg.sender, dst, wad);\\n  }\\n\\n  function transferFrom(\\n    address src,\\n    address dst,\\n    uint256 wad\\n  ) public returns (bool) {\\n    require(balanceOf[src] >= wad, \\\"FiTan/insufficient-balance\\\");\\n    if (src != msg.sender && allowance[src][msg.sender] != uint256(-1)) {\\n      require(\\n        allowance[src][msg.sender] >= wad,\\n        \\\"FiTan/insufficient-allowance\\\"\\n      );\\n      allowance[src][msg.sender] = sub(allowance[src][msg.sender], wad);\\n    }\\n    balanceOf[src] = sub(balanceOf[src], wad);\\n    balanceOf[dst] = add(balanceOf[dst], wad);\\n    emit Transfer(src, dst, wad);\\n    return true;\\n  }\\n\\n  function mint(address usr, uint256 wad) external auth {\\n    balanceOf[usr] = add(balanceOf[usr], wad);\\n    totalSupply = add(totalSupply, wad);\\n    emit Transfer(address(0), usr, wad);\\n  }\\n\\n  function burn(address usr, uint256 wad) external {\\n    require(balanceOf[usr] >= wad, \\\"FiTan/insufficient-balance\\\");\\n    if (usr != msg.sender && allowance[usr][msg.sender] != uint256(-1)) {\\n      require(\\n        allowance[usr][msg.sender] >= wad,\\n        \\\"FiTan/insufficient-allowance\\\"\\n      );\\n      allowance[usr][msg.sender] = sub(allowance[usr][msg.sender], wad);\\n    }\\n    balanceOf[usr] = sub(balanceOf[usr], wad);\\n    totalSupply = sub(totalSupply, wad);\\n    emit Transfer(usr, address(0), wad);\\n  }\\n\\n  function approve(address usr, uint256 wad) external returns (bool) {\\n    allowance[msg.sender][usr] = wad;\\n    emit Approval(msg.sender, usr, wad);\\n    return true;\\n  }\\n\\n  // --- Alias ---\\n  function push(address usr, uint256 wad) external {\\n    transferFrom(msg.sender, usr, wad);\\n  }\\n\\n  function pull(address usr, uint256 wad) external {\\n    transferFrom(usr, msg.sender, wad);\\n  }\\n\\n  function move(\\n    address src,\\n    address dst,\\n    uint256 wad\\n  ) external {\\n    transferFrom(src, dst, wad);\\n  }\\n\\n  // --- Approve by signature ---\\n  function permit(\\n    address holder,\\n    address spender,\\n    uint256 nonce,\\n    uint256 expiry,\\n    bool allowed,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external {\\n    bytes32 digest = keccak256(\\n      abi.encodePacked(\\n        \\\"\\\\x19\\\\x01\\\",\\n        DOMAIN_SEPARATOR,\\n        keccak256(\\n          abi.encode(PERMIT_TYPEHASH, holder, spender, nonce, expiry, allowed)\\n        )\\n      )\\n    );\\n\\n    require(holder != address(0), \\\"FiTan/invalid-address-0\\\");\\n    require(holder == ecrecover(digest, v, r, s), \\\"FiTan/invalid-permit\\\");\\n    require(expiry == 0 || now <= expiry, \\\"FiTan/permit-expired\\\");\\n    require(nonce == nonces[holder]++, \\\"FiTan/invalid-nonce\\\");\\n    uint256 wad = allowed ? uint256(-1) : 0;\\n    allowance[holder][spender] = wad;\\n    emit Approval(holder, spender, wad);\\n  }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ERC20Permit", "CompilerVersion": "v0.5.12+commit.7709ece9", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000000000038", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}