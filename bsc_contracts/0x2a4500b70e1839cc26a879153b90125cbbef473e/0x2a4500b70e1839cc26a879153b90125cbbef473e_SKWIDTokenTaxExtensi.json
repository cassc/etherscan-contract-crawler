{"SourceCode": "// SPDX-License-Identifier: Unlicensed\r\npragma solidity 0.8.8;\r\n\r\ninterface IERC20 {\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract SKWIDTokenTaxExtension {\r\n    address public owner;\r\n    address public feeReceiver;\r\n    IERC20 public token;\r\n\r\n    uint256 public buyTaxPercentage = 3;\r\n    uint256 public sellTaxPercentage = 3;\r\n\r\n    constructor() {\r\n    owner = msg.sender;\r\n    token = IERC20(0x1C62d51C33bf95cdCeCCeCFc15A9098bf658de06);//SKWID\r\n    feeReceiver = 0xF740A7daBBEa92F7dcbd921eA40E2EF7C4Bfca6f;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not the contract owner\");\r\n        _;\r\n    }\r\n\r\n    function setBuyTaxPercentage(uint256 _buyTaxPercentage) external onlyOwner {\r\n        buyTaxPercentage = _buyTaxPercentage;\r\n    }\r\n\r\n    function setSellTaxPercentage(uint256 _sellTaxPercentage) external onlyOwner {\r\n        sellTaxPercentage = _sellTaxPercentage;\r\n    }\r\n\r\n    function buyTokens(uint256 amount) external {\r\n        uint256 tax = (amount * buyTaxPercentage) / 100;\r\n        uint256 totalAmountWithTax = amount + tax;\r\n        \r\n        require(token.transferFrom(msg.sender, address(this), totalAmountWithTax), \"Token transfer failed\");\r\n\r\n        uint256 tokensToTransfer = amount;\r\n        if (tax > 0) {\r\n            require(token.transfer(feeReceiver, tax), \"Fee transfer failed\");\r\n        }\r\n\r\n        require(token.transfer(msg.sender, tokensToTransfer), \"Token transfer failed\");\r\n    }\r\n\r\n    function sellTokens(uint256 amount) external {\r\n        uint256 tax = (amount * sellTaxPercentage) / 100;\r\n        uint256 tokensAfterTax = amount - tax;\r\n\r\n        require(token.transferFrom(msg.sender, address(this), amount), \"Token transfer failed\");\r\n\r\n        uint256 tokensToTransfer = tokensAfterTax;\r\n        if (tax > 0) {\r\n            require(token.transfer(feeReceiver, tax), \"Fee transfer failed\");\r\n        }\r\n\r\n        require(token.transfer(owner, tokensToTransfer), \"Token transfer failed\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buyTaxPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTaxPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_buyTaxPercentage\",\"type\":\"uint256\"}],\"name\":\"setBuyTaxPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sellTaxPercentage\",\"type\":\"uint256\"}],\"name\":\"setSellTaxPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "SKWIDTokenTaxExtension", "CompilerVersion": "v0.8.8+commit.dddeac2f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7cea2c4ffd5700819de7c08f392a8e3f52d98278b2077c33f57fb3f39646fa2c"}