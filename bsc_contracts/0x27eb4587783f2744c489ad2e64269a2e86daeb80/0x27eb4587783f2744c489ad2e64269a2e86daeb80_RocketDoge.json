{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\n/**\r\n  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .  . .  .\r\n   .       .       .   . . . .   .       .       .       .       .       .       .       .       .       .       .       .       .       .       . \r\n     .  .    .  .    ;8:t@88Xt;8:  .  .    . .     . .     . .     . .     . .     . .     . .     . .     . .     . .     . .     . .     . .     \r\n .       .       :SX% .88@SS@8@:X;X.    .      .       .       .       .       .       .       .       .       .       .       .       .       .   \r\n   .  .    .  .;@8;XXS;t%%%%%%%%XX  t.    .  .   . .    . .  .   . .    . .  .   . .    . .  .   . .    . .  .   . .    . .  .   . .    . .  .   . \r\n  .    .  .  .8%tt;S;XtX%8t8t@t%%%Xt;:.    .   .     .         .     .         .     .         .     .         .     .         .     .         .   \r\n    .      .X: 8t%SXtStXtt@;St@SS%t8 X8% .%S:..t@X;..  .  . .    .    .  . . .    .   .  . . .    .   .  . . .    .   .  . . .    .   .  . . .    .\r\n  .   . . %; 8S;X%SSSX%%@t%Xt%ttt88S SX @;X;Xt8X@8; X.8X%:.:;S@88@t:            .   .           .   .           .   . .:;::     .   .           .  \r\n    .    t:S%;S%%X%8tX@8@X8S%SS8%X 8. ::8::;;t;:...:;S8 X;X%:8@S%8tt8;. .  .  .    .t@8@t. .  .        .  .  .    .tX8X; .%8@%:        .  .  .    .\r\n  .    .%SS;XtX%XtX;@XX.XXt.@t8.8;.. . 88X.;;tt8. ttt;;t8 %t;;@88@ X8%@t     .   .%%X888X;S.    . .  .   .     .:8:tXXS%t%SSX%.t8S. .   .      .   \r\n     ..S88tXt%%Xt@;8:%:.:8S@.8. . . . ..XX@:;tt8 X:8@@;;8:t. .;%%: .X;8SS..    . :X8t888tX@%..     .   .   . .:8t8.X88@8@@@88@;8 S% X:    . .    . \r\n  .   t;XStXt@tXt%@S;; ;tS@X. .     . . .8Xttt;;ttXX@X;;t%. .;.@SSt ...8:t  .   .S88t@@8888@8:  .            ::8@8@888888888888X S:@ 8: .     .    \r\n    . 888tStStS%X%%S;.%:S X..  . . .     .8S@;:;;;;;;;;S%t  t.@ X;..S%X;S8.   . ;t8;S8X8t@.8t;    .  .  . . t;8;88888888888888888.X:@;.;   .   .  .\r\n  .   % X%XtX%@%8. :.X%X8:   .   . . .  . .:@. tXSt@8;8S.  .8.88S%SSX8:.8.%. .;8S@:%.::SXSXXXt .    .      ttSt@888888888888888888@8 :S.:.   .     \r\n     .S @%XtSXt8 X: ;S8%: .    .     . . .  . t8t:;:t8t  . ;t@t@X@.%  :XS@8..@8SX8: .  :tSXX8t   .    . .  S8:8X888888888888888888;; .;@8  .    .  \r\n  .   Xt8%XS%8S@8:.:@8;; . . .  . .   . .      ..;;:.. .  .t 8;%88.t X8Xt@:t88:@% .   . :888X: .   .     .::@XX@888888888888888888S ;:;tt.    .   .\r\n   .   ;t8:t ;8..  @8;8 .     .    . .   .  .     .   . .  :8@ t@;.8X%8S%8.t8:. .   . ;XS8.X     .   .   .8S8%%X888888888888888888@ t;:8X. .    .  \r\n     .   t88t.   .:% %:  . .   ..   .  .  t8X88@.  .  . . . .;:.   88t@88: .    . . .8t@X8. . .       .  .%@X;@8888888888888888888S ;;;@X.   .     \r\n .     .       .  S @8 .  .  .   .  .    .: % SSSt8.     .   . .. %.SS:S X8   . . .X.8XSt       . . .   ..%@X;@888888888888888888@ ; :;S%. .   .  .\r\n   . .     . .   .88tX.%SSt. . . .    .  .XX888Stt;... .  .     ;8X8;;88;;; .   :8t8t8;    .  .          .8X8t%88888888888888888@8 @.;;;%.   .     \r\n  .     .      .  %@:@:8SXX%%.. . . .     .%  t@88 S. .   . ..S@.X8%..S:SX  . .X. @8    .   .    .  . .  .: @%88888888888888888@8:X.:;88@ .     .  \r\n     .   .  .     SS tX;;;t@88    .    . . . ;8%.t@: . .  . .;tXStX ;;:.X:  .@ S..@S8;.   .    .        ..@%%.8@888888888888888@; ::;%;:    .  .  .\r\n  .    .      . .%tX;;tSXt%t@tS .  . .  .          . .  .    .;;.  S.@ ;. . SX@;88S.X8S:8S;.  .   .  .:S%X@.X88888888888888888X  XX%tS.t .         \r\n    .    . .   .;XXtS@%XtXt%8;t . .   .    .  .  .. .    .       .t;X:.t   .:%;.. ..:X;8 X.8:.   .  .;X8 ;8X8888888888888888888S .:@ %X@S;.  .  . .\r\n  .   .      . XXXS%StXtSt%X;S.  .  . . . .    .   .  . .  . . ..X8t%;@: . . .       .:;%XS8;@.    %XS8:88888888888888888888888888888.SSSX;S.      \r\n    .   .  .  @S8;StXtXtXtXS%8; .  .  .  .  . . . . .  .     ..X :SX;@: .   . . . ..    . .8;Xt;.%;XXt88888888888888888888888888888888Xt@ t ;:. .  \r\n  .           ;;tStSSStXt;88t8X  .  .  .   . . . .   . . . ..%8;%@tS8;.  .  .    .   .  .   St8t888tS%@88X8888888888888888888888888888@88@;t:t;    \r\n     . . .  .%@SStSX%Xt%%%..%XX  .  .    .    .  .   .   .;S8St;;:%8t   . .   . .  .  .  . ..@Xt %%%;8 S Xt8888888888888888888888888888St t:@ X. . \r\n  .        ..; ;%@tX%%@%XX  %@S   .  . .    .  .   .  :t@8St;;t;;%@:  .   . .  .     .   .   .@8  SX8 @8S@:8888888888888888888888888888@8S8.:8%S   \r\n    .  .    .SXXt%Xt@%%SXX@ X@; .  .   . .   .  . ..;%8Xt:;;tt;;t@:  . . . .  . . . . ..    . .t8@8S:    X  :@8888888888888888888888888@8.8.:t 8.  \r\n  .      . .SX@t@tXt%@XtXX8.88 8;..  .  .  . ..:tS@8S:@@:ttttt;%8:  . .  .    .     .   . .     .     . .;   @8888888888888888888888888@8 8.:X%.  .\r\n    . .    t.t;%%S%X%%%X@@t:;8.8@t;8Xt:. ::t@8@t.%@ @t t;ttt;;XX.      .   . .  . .  . ;S.  . .     .   ;t. @88888888888888888888888@:;88%8.:;8:   \r\n  .     . .@ 8SXSS%X%@tSS88%   tX%88Xt... ;%X888@ X;:t@Xtt;t;t8.  .  .   .    .  .    S:X%t  . .  ;@@@; 8 .S888888888888888888888888%:t@88S.;% X . \r\n     .    @S8tX;tXtStSSX%88S.    .t8%.tX@888@X;:%X X@@%;tt%ttSS .  .  .   . .     . .tS:8.X8:. ;8:8  :X:Xt8%88888888888888888888888S..8S:%:.;888   \r\n  .    .%  @St%X%StXttStX8@t   .      ..::t;:.:88X8:.:t8%S X%X%  .  .  .  . .  .   :88t S%   8X   8:.@ S@;%888888@8% X@8X8StS888@S. t8S.; .:X:X:  .\r\n    . :@88;XtX%%XtSt@t%Xt%t  .    .    .     .X88X  . .8@ 88 X8.  .  .    .  .   .:888 ;%;t:8SX@:tt;:t%t;t88888@8: X .888@@:. :..: XX@tS..:t%tt  . \r\n  .  .X 8tSXtXtSXtXt%@%St X     .   .   .:. ;%8XX.. .t;88@t;888 @.      . . .  .;SS@X .t.:.:;;;;:.:.....%888888.S8;:;;@ @;t88SS%X@8Xt 8::;@.%t.    \r\n    .% @tX%%S%XSStXt@tXSX t.  .       :8@8@S8@:;. .St88%;    :8;8StX;.. .   ..%@@;.%@t;.:.:......:...:t@88888%:t::t8%88;%X.X8888X t%t;;X8.:@.   .  \r\n  . .@8tXtXX%XtXtStXtS;8 @  .    . .  t. %8 :8:  .8X ;X.  . . .:Xt;SX@t.  ..t@8tX@;8t..:::.::.:.:...;X8888@  ;:;;S88@:   .:;SXS @S;%@8;@:%:   .   .\r\n    .@8tXt%%SXtXtXtXtX@ 8;     .     ..8S@.8t. ;8:8t8; .t@8S%8@%SS   t88  .@.8X.8%8t:::...:..:....:S888@8: @:;;X@X%%.        .;X8%. :X8t:   .      \r\n  .  t %%@S@t%StStS%@8@8  .  .   .      :8;8X:;X8 @. ;8;8X%::;S8 S 8tS @ . S:@8 S ;S;;:.:.::....;S888@8t.S::t@t@8.    . .  .           .  .    . . \r\n    .t%8%X%%8%XtX%@%888 .      .   .  .   ;8%. S@.  S%8tS888@%   @88::Xt.  .;88%;% X X ;.:.....%888X8. X.:;t@8X;   .        .      .         .     \r\n  .  .888%@%SXt@t@8.:X.    . .      .   .   .;:.  :88@t8@888@:  X:SXtS;;     :SX% XX :8.;:...tX888@;X8:.:S@S:S.   .  .  . .   . .   . . .  .    .  \r\n      .%:XS8888X.8%%.  .  .     . .             ..;8;888888XX.888:8   t S.  .  .  ::%S :t..%@88@8. X.:;@t88..                .    .       .   .   .\r\n  .      SS:XX;;8:   .       .       . .  . . . .8@8@8888@8@8S @   t@@8: .%X@@8S:  % S@.;;X88X@;X8.:;;@X%:     . .  . .  .  .   .    .  .   .   .  \r\n   . .  .   ::.        . .  .  .  .      .      tSX%@888888.888@t;8@@8@:S       tt.X ;XSX88@@S8X::;t8 ;S     .     .    .     .    .          .    \r\n         . . .  .  .             .  .  .    .  ;8@:@8888888888888888888@t::::::%t88  .@8888;S8::tXX8@:. .  .    .     .   .      .   . . . .     . \r\n .  . .           .  .  . .  . .          .    %:8:S888888888888888888%. ....:t; t%@S88888XX..;t8 tt          .   .     .   .  .   .         .  .  \r\n        . .  . .      .           .  . .    .  S:8;X88888888888888888XttSSt....:;.t888@8:.S.:;8:tX.  .  .  .    .   . .      .   .    .  .         \r\n  . .      .     .  .    . .  .    .     .    .tt8 S88888888888888888888888X%t%S88888@Xt;.:;8  X.           .            . .        .      . . .  .\r\n      . .    .    .    .     .  .    .     .   .X@t88888888888888888888888888888888@; ;.;;%%@S.   . . .  .    .  . .  .       . .     . .          \r\n .  .     .    .    .     .      .     . .   .  :.@tS%S8888@8888888888888888888888%88;;;%X8%; .         .  .   .     .  .  .      . .     .  .  .  \r\n      .     .   .     . .   .  .   . .     .    ..XX8:S%tt:t888888888888888888@8: 8.:;SS88:.    .  .  .      .   .          .  .       .    .    . \r\n  . .   .     .   . .     .      .     .    . .   :X @8::..S88888888888888888S888;:;t8%;t     .     .    .  .      .  .  .    .  .  .    .    .    \r\n         . .    .      .     . .    . .t@S:@888@.8%:;8%tS%8X@8888888888888888: S.;;8%%@.  . .   . .    .   .   .  .    .   .       .  .    .    .  \r\n .  . .      .     .  .   .       . .X. .88XXSS;@8  t..88:8X888888888888888%t;.:;8 :@. .      .      .   .    .     .    .   .  .       .    .    .\r\n        .  .   .  .     .   .  .    %t.8@@tt;;t%Xt@:S:X.88X88888888888888: @..:SXS@.     .  .    .  .       .   .    .     .     .  .    .    .    \r\n  .  .    .         .     .    ..t8.8:8888%t;;%t%SXS ;;8 8888888888888888@8 :;8 %%   .         .      . . .      . .   .      .      . .   .    .  \r\n   .   .    . . .    . .    ..SSSS.S@8@88Sttt;t;%%SS t%@88888888888888888;t.:; @.  .   .  .  .   . .         . .        . .  .  . .       .  .   . \r\n .    .  .        .      . .%SX :SSSXX8X:;ttttt%t%X.8S8X88888888888888888@ t:ttt.       .   .        .  .  .      .  .              .  .       .   \r\n    .      .  .  .  .  .  %X%S .tStXS8tttt%%%ttt8X@@;t@S888888888888888888SS:;@8;.  . .   .   . .  .         .  .     .  . .  .  .       .  .     .\r\n  .    .                 .;8S;X.;tSS8Xtt;tXt%S8888@@. .8t88888888888888888SS.;88;                    . . . .      . .        .     . . .     .  .  \r\n    .    . . . .  . . .  .:X:8  ..;8t::;%88888888X@   @S%88888888888888@88 ;;;88;. .  . .  . .  . .           . .      .  .    . .       . .      .\r\n  .   .          .      .t@t@S S tX:ttX8@XX88@:. t;.  % SX@88888888888S:tt ::;88;    .    .         .  .  .  .     .  .     .       .  .      . .  \r\n        .  .  .     . ..%S%8@@S.X;XX;SSXXSXS :%%St     88;@X888888888@.;@88.;tt:  .     .    . .  .             .       . .   .  .        .  .     \r\n  . . .   .     .     t8%8888 X:S%:..;S@@@S%@;.::  . . ;XX.X888888888 ;X 8.:tt88.   .      .        . . .  . .    . .       .      . .  .       .  \r\n        .   .  .  ..;8t..X8S.88S       ::X.@:          .t;X.@;t@88Xt.;X:t::;X;::      . .    .  . .       .    .      . .      . .     .   .  .   .\r\n  .  .            .t88@8:@:@8 X8@X8X;@.:8t    .  .  .   .;;8X:%tt;;t:S.t.:;8.@:  . .      .          .  .    .   .  .     .  .      .    .   .     \r\n       .  . . .  . ::;8% 88.X88@XX;@:;t;       .      .   :8:88@%%8 %t;;;t@88..      .  .   . . .  .       .   .      .    .    .  .  .    .   . . \r\n  . .    .         .tS8%St X;@8%t@;  .  .  . .   . .      ..;8%% S8S:tX@S@:S.  .  .   .   .          . . .        . .   .    .          .          \r\n      .     .  . .S%8;8%%S%8SS8:. .   .              .  .   . . :8:tS% @%:.     .   .        .  . .         . .  .       .     . .  .     .  .  .  \r\n  .    .  .     ;8% 8% X.8:.t.      .    . .  . .  .   .        .    .       .    .    . .          .  .  .         . .    . .     .  . .     .   .\r\n    .       . :X;S;t tt8t.     . .     .             .    .  .    .     .  .   .     .     . . .  .         .  .  .     .       .          .    .  \r\n  .   . . . :X S. 8;8t: .  . .     . .   .  . .  . .    .   .  .    . .      .   .  .   .           . . .     .     .     .  .    .  .  .   .      \r\n    .      ;8:X  8% .          .       .        .     .   .      .      . .    .      .   .  .  . .       . .   . .   . .     .     .    .    .  . \r\n  .    .  .t8@8t:..    .  .  .   . .      . .      .         .    .  .      .     .     .     .      .  .                 . .   . .   .    .   .   \r\n    .    .     .     .     .         .  .     .  .   . . .    . .      .  .   .  .  .     . .    .        .  . .  . .  .                .    .     \r\n  .   .     .   .  .    .     . .  .   .   .   .           .       . .      .        . .       .   . . .             .   .  . . .  . .    .     . .\r\n*/\r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev Interface of the BEP20 standard. \r\n */\r\ninterface IBEP20 {\r\n     /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ncontract RocketDoge is Context, IBEP20 {\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n    string private _name = \"RocketDoge\";\r\n    string private _symbol = \"RD\";\r\n    uint8 private _decimals = 18;\r\n    uint256 private _initialSupply = 1000000 ether;\r\n    uint256 private _totalSupply;\r\n\r\n    /**\r\n     * Initialize the token.\r\n     */\r\n    constructor () {\r\n         _totalSupply += _initialSupply;\r\n        _balances[_msgSender()] += _initialSupply;\r\n        emit Transfer(address(0), _msgSender(), _initialSupply);\r\n    }\r\n    \r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {BEP20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IBEP20-balanceOf} and {IBEP20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IBEP20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IBEP20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IBEP20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IBEP20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IBEP20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IBEP20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"RD: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IBEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IBEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"RD: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r\n        require(sender != address(0), \"RD: transfer from the zero address\");\r\n        require(recipient != address(0), \"RD: transfer to the zero address\");\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"RD: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\r\n        require(owner != address(0), \"RD: approve from the zero address\");\r\n        require(spender != address(0), \"RD: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RocketDoge", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://b08b4a65a7b44ed462b707af37f37d2803b20005ee216be837a8b30c6d718929"}