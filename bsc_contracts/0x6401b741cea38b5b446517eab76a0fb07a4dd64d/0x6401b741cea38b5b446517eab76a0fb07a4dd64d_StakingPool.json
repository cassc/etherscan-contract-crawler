{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nabstract contract IERC20 {\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual returns (bool);\r\n    function transfer(address recipient, uint256 amount) public virtual returns (bool);\r\n}\r\n\r\ncontract StakingPool {\r\n    struct Stake {\r\n        uint256 amount;\r\n        uint256 startTime;\r\n        uint256 endTime;\r\n        uint256 lastClaimTime;\r\n    }\r\n\r\n    mapping(address => Stake[]) public stakes;\r\n    uint256 public totalSupply;\r\n    uint256 public APR;\r\n    uint256 public duration;\r\n    address public owner;\r\n    IERC20 public Token;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    constructor(address _stakingToken) {\r\n        owner = msg.sender;\r\n        Token = IERC20(_stakingToken);\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function trasfeOwnership(address _newOwner) public onlyOwner{\r\n        owner = _newOwner;\r\n    }\r\n\r\n    function setAPR (uint256 _Apr) external onlyOwner{\r\n        APR = _Apr;\r\n    }\r\n    function setDuration(uint256 _month) external onlyOwner {\r\n        duration = _month;\r\n    }\r\n\r\n    function setStakingToken(address _stakingToken) external onlyOwner {\r\n        Token = IERC20(_stakingToken);\r\n    }\r\n\r\n    function stake(uint256 _amount) external {\r\n        require(_amount > 0, \"Staking amount must be greater than 0\");\r\n        require(Token.transferFrom(msg.sender, address(this), _amount), \"Transfer error!\");\r\n\r\n        totalSupply += _amount;\r\n\r\n        stakes[msg.sender].push(Stake({\r\n            amount: _amount,\r\n            startTime: block.timestamp,\r\n            endTime: block.timestamp + (duration * 30 days),\r\n            lastClaimTime: block.timestamp\r\n        }));\r\n    }\r\n\r\n    function unstake(uint256 _index) external {\r\n        Stake storage userStake = stakes[msg.sender][_index];\r\n        require(userStake.endTime <= block.timestamp, \"Staking period not yet ended\");\r\n        uint256 _amount = userStake.amount;\r\n\r\n        uint256 reward = calculateReward(_amount, userStake.startTime, userStake.endTime);\r\n        userStake.lastClaimTime = block.timestamp;\r\n        uint256 total = _amount + reward;\r\n        Token.transfer(msg.sender, total);\r\n        totalSupply -= _amount;\r\n\r\n        userStake.amount -= _amount;\r\n        if(userStake.amount == 0) {\r\n            delete stakes[msg.sender][_index];\r\n        }\r\n    }\r\n\r\n    function calculateReward(uint256 _amount, uint256 _startTime, uint256 _endTime) public view returns (uint256) {\r\n        uint256 timeDiff = _endTime - _startTime;\r\n        uint256 reward = (_amount * APR * timeDiff) / (365 days * 100);\r\n        return reward;\r\n    }\r\n    \r\n    function getAllStakes(address _user) public view returns (Stake[] memory,uint256) {\r\n        return (stakes[_user], stakes[_user].length);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"APR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAllStakes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimTime\",\"type\":\"uint256\"}],\"internalType\":\"struct StakingPool.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Apr\",\"type\":\"uint256\"}],\"name\":\"setAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"}],\"name\":\"setDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"name\":\"setStakingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"trasfeOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "StakingPool", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000001b0f3340a3a0eb591dacf691ff984eceb6cff605", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://baddd9deba9c00079e3562e0142de8cbd4f4e87959c999a5e8b50fdf7791f5be"}