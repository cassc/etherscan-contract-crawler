{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"Bear.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^ 0.6.12;\\r\\n\\r\\ninterface IToken {\\r\\n    function totalSupply() external view returns(uint256);\\r\\n    function balanceOf(address account) external view returns(uint256);\\r\\n    function allowance(address owner, address spender) external view returns(uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns(bool);\\r\\n    function approve(address spender, uint256 amount) external returns(bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns(bool);\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\ncontract TestToken is IToken {\\r\\n    \\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    address public owner;\\r\\n    mapping(address => bool) whitelistController;\\r\\n    \\r\\n    modifier onlyOwner {\\r\\n        require(msg.sender == owner, \\\"invalid owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    string public constant name = \\\"Blue Bear\\\";\\r\\n    string public constant symbol = \\\"BEAR\\\";\\r\\n    uint256 public constant decimals = 18;\\r\\n    uint256 totalSupply_ = 1000000000 * (10**decimals); //1M\\r\\n\\r\\n    mapping(address => uint256) balances;\\r\\n    mapping(address => mapping(address => uint256)) allowed;\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n    \\r\\n    constructor() public {\\r\\n        owner = msg.sender;\\r\\n        balances[msg.sender] = totalSupply_;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public override view returns(uint256) {\\r\\n        return totalSupply_;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address _owner) public override view returns(uint256) {\\r\\n        return balances[_owner];\\r\\n    }\\r\\n\\r\\n    function transfer(address _receiver, uint256 _amount) public override returns(bool) {\\r\\n        require(_amount <= balances[msg.sender]);\\r\\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\\r\\n        balances[_receiver] = balances[_receiver].add(_amount);\\r\\n        emit Transfer(msg.sender, _receiver, _amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function approve(address _delegate, uint256 _amount) public override returns(bool) {\\r\\n        allowed[msg.sender][_delegate] = _amount;\\r\\n        emit Approval(msg.sender, _delegate, _amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address _owner, address _delegate) public override view returns(uint) {\\r\\n        return allowed[_owner][_delegate];\\r\\n    }\\r\\n\\r\\n    function transferFrom(address _from, address _recipient, uint256 _amount) public override returns(bool) {\\r\\n        require(_amount <= balances[_from]);\\r\\n        require(_amount <= allowed[_from][msg.sender]);\\r\\n        balances[_from] = balances[_from].sub(_amount);\\r\\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\\r\\n        balances[_recipient] = balances[_recipient].add(_amount);\\r\\n        emit Transfer(_from, _recipient, _amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n   \\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function sub(uint256 a, uint256 b) internal pure returns(uint256) {\\r\\n        assert(b <= a);\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    function add(uint256 a, uint256 b) internal pure returns(uint256) {\\r\\n        uint256 c = a + b;\\r\\n        assert(c >= a);\\r\\n        return c;\\r\\n    }\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TestToken", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}