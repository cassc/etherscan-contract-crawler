{"SourceCode": "/*\r\n  ____            _                    _____   ___ \r\n |  _ \\    ___   | | __   ___   _ __  |  ___| |_ _|\r\n | |_) |  / _ \\  | |/ /  / _ \\ | '__| | |_     | | \r\n |  __/  | (_) | |   <  |  __/ | |    |  _|    | | \r\n |_|      \\___/  |_|\\_\\  \\___| |_|    |_|     |___|\r\nSupply: 10.000.000.000\r\nDecimals: 9\r\nSymbol: PokerFI\r\nSite: pokerfi.finance\r\nForked From: 0x18d3a68704e40936b086cd3c8b874a5c8c2c0c4f \r\n*/  \r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.5.16;\r\n\r\ninterface IBEP20 {\r\n\r\n  function totalSupply() external view returns (uint256);  \r\n  function decimals() external view returns (uint8);       \r\n  function symbol() external view returns (string memory); \r\n  function name() external view returns (string memory);   \r\n  function getOwner() external view returns (address);     \r\n\r\n  function balanceOf(address account) external view returns (uint256);\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n  event TexasHoldemTournament(string indexed gameplay, uint256 indexed value);\r\n  event PokerTournament(string indexed gameplay, uint256 indexed value);\r\n  event PokerRakeback(string indexed gameplay, uint256 indexed value);\r\n  event PokerCashback(string indexed gameplay, uint256 indexed value);\r\n  event PokerPayBUSD(string indexed gameplay, uint256 indexed value);\r\n}\r\n\r\ncontract Context {\r\n\r\n  constructor () internal { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}\r\n\r\nlibrary SafeMath {\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n    return c;\r\n  }\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n\r\ncontract Ownable is Context {\r\n  address public _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  function renounceOwnership() public onlyOwner {\r\n    require( _owner == msg.sender,\"security guaranteed administrator only\");\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require( _owner == msg.sender,\"security guaranteed administrator only\");\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  function _transferOwnership(address newOwner) internal {\r\n    require( _owner == msg.sender,\"security guaranteed administrator only\");\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\n/*Token BEP 20 Poker FI  */\r\ncontract BEP20Token is Context, IBEP20, Ownable {\r\n\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 private _decimals;\r\n  string private _symbol;\r\n  string private _name;\r\n  uint256 public _firstDayDate; \r\n\r\n  /*6% fee */\r\n  address public _walletAWARD;          /* 1.0% */ \r\n  address public _walletLIQUIDITY;      /* 2.0% */ \r\n  address public _walletDISTRIBUTION;   /* 3.0% */ \r\n\r\n  /* Initial Holders */\r\n  address public _walletREPURCHASE;  /*2.0% - locked for 10 years*/\r\n  address public _walletMARKETING;   /*3.5% - locked for 10 years*/\r\n  \r\n  /*burn*/\r\n  address public _walletBURN;   /*burn*/\r\n\r\n  /*Wallet POKER GAME PLAY*/\r\n  address public _walletGAMEPLAY;    /*Wallet POKER GAME PLAY*/\r\n    string public _texasHoldemTournament;\r\n    string public _pokerTournament;\r\n    string public _pokerRakeback;\r\n    string public _pokerCashback;\r\n    string public _pokerPayBUSD;\r\n  uint256 public _texasHoldemTournamentU;\r\n  uint256 public _pokerTournamentU;\r\n  uint256 public _pokerRakebackU;\r\n  uint256 public _pokerCashbackU;\r\n  uint256 public _pokerPayBUSDU;\r\n\r\n  /* First Lap setup booleans  */\r\n  bool public _alreadySetuped;\r\n  bool public _alreadyDistributed;\r\n\r\n  /* Additional PokerFi Rules  */\r\n  bool public _preSaleActivated;\r\n\r\n  constructor() public {\r\n    _name = \"PokerFI.Finance\";\r\n    _symbol = \"PokerFI\";\r\n    _decimals = 9;\r\n    _totalSupply = 10000000000000000000;\r\n    _balances[msg.sender] = 9450000000000000000;  /*94,5%*/\r\n    _alreadyDistributed = false;\r\n    _alreadySetuped = false;\r\n    _preSaleActivated = true;\r\n    _firstDayDate = block.timestamp;\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\nfunction initialDistribution (address payable dist3 ,address payable dist4 ) public onlyOwner() {\r\n  require( _owner == msg.sender,\"security guaranteed administrator only\");\r\n  require ( _alreadyDistributed == false, \"Executed only once\");\r\n  _walletREPURCHASE = dist3;\r\n  _walletMARKETING = dist4;\r\n  _balances[_walletREPURCHASE] = 200000000000000000;   /*200.000.000 2%*/\r\n  _balances[_walletMARKETING] =  350000000000000000;   /*350.000.000 3.5%*/\r\n  emit Transfer(address(0), _walletREPURCHASE,  200000000000000000);\r\n  emit Transfer(address(0), _walletMARKETING,   350000000000000000);\r\n  _alreadyDistributed = true;\r\n}\r\n\r\n/* OWNER */\r\nfunction initialSetup (address payable dist1 , address payable dist2, address payable dist3) public onlyOwner() {\r\n  require( _owner == msg.sender,\"security guaranteed administrator only\");\r\n  require ( _alreadySetuped == false, \"Executed only once\");\r\n    _walletAWARD = dist1;         /*1.0% */\r\n    _walletLIQUIDITY = dist2;     /*2.0% */\r\n    _walletDISTRIBUTION = dist3;  /*3.0% */\r\n  _alreadySetuped = true;\r\n  }\r\n\r\nfunction gamePlaySetup (address payable dist1) public onlyOwner() {\r\n  require( _owner == msg.sender,\"security guaranteed administrator only\");\r\n    _walletGAMEPLAY = dist1;         /*Poker Game Play Wallet% */\r\n  }\r\n\r\nfunction gameBurnSetup (address payable dist1) public onlyOwner() {\r\n  require( _owner == msg.sender,\"security guaranteed administrator only\");\r\n    _walletBURN = dist1;         /*Poker Game Play Wallet% */\r\n  }\r\n\r\n  function initPreSale () public onlyOwner () {\r\n  require( _owner == msg.sender,\"security guaranteed administrator only\");\r\n    _preSaleActivated = true;\r\n  }\r\n\r\n  function finishPreSale () public onlyOwner () {\r\n  require( _owner == msg.sender,\"security guaranteed administrator only\");\r\n    _preSaleActivated = false;\r\n  }\r\n\r\n  function sendToLiquidity (uint256 myAmount) public onlyOwner () {\r\n   require( _owner == msg.sender,\"security guaranteed administrator only\");\r\n   require(address(this).balance >= myAmount, \"insufficient funds.\");\r\n   msg.sender.transfer(myAmount);\r\n  }\r\n\r\n  function burnPokerFi (uint256 myAmount) public onlyOwner () {\r\n   require( _owner == msg.sender,\"security guaranteed administrator only\");\r\n   require( _balances[_walletBURN] >= myAmount,\"not amount to burn\");\r\n  _burn(_walletBURN, myAmount);\r\n  }\r\n\r\n  function pokerPayBUSD (string memory gameplay, uint256 pot) public returns (bool) {\r\n  require( _walletGAMEPLAY == msg.sender,\"only game play wallet accept\");\r\n    _pokerPayBUSD = gameplay;\r\n    _pokerPayBUSDU = pot;\r\n  emit PokerPayBUSD (gameplay,pot);\r\n  return true;\r\n  }\r\n\r\n  function pokerCashback (string memory gameplay, uint256 pot) public returns (bool) {\r\n  require( _walletGAMEPLAY == msg.sender,\"only game play wallet accept\");\r\n     _pokerCashback = gameplay;\r\n    _pokerCashbackU = pot;\r\n  emit PokerCashback(gameplay,pot);\r\n  return true;\r\n  }\r\n\r\n  function pokerRakeback (string memory gameplay, uint256 pot) public returns (bool) {\r\n  require( _walletGAMEPLAY == msg.sender,\"only game play wallet accept\");\r\n    _pokerRakeback = gameplay;\r\n    _pokerRakebackU = pot;\r\n  emit PokerRakeback(gameplay,pot);\r\n  return true;\r\n  }\r\n\r\n  function pokerTournament (string memory gameplay, uint256 pot) public returns (bool) {\r\n  require( _walletGAMEPLAY == msg.sender,\"only game play wallet accept\");\r\n    _pokerTournament = gameplay;\r\n    _pokerTournamentU = pot;\r\n  emit PokerTournament(gameplay,pot);\r\n  return true;\r\n  }\r\n\r\n  function texasHoldemTournament (string memory gameplay, uint256 pot) public returns (bool) {\r\n  require( _walletGAMEPLAY == msg.sender,\"only game play wallet accept\");\r\n    _texasHoldemTournament = gameplay;\r\n    _texasHoldemTournamentU = pot;\r\n  emit TexasHoldemTournament(gameplay,pot);\r\n  return true;\r\n  }\r\n\r\n  function totalBalanceContract () public view returns (uint256) {\r\n   return address(this).balance ;\r\n  }\r\n  function getOwner() external view returns (address) {\r\n    return owner();\r\n  }\r\n  function decimals() external view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n  function symbol() external view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n  function name() external view returns (string memory) {\r\n    return _name;\r\n  }\r\n  function totalSupply() external view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n  function balanceOf(address account) external view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n  function transfer(address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n  function allowance(address owner, address spender) external view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n  function approve(address spender, uint256 amount) external returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n  require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n  require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n  /* Holders Freeze*/\r\n      bool isHold;\r\n\r\n      if (sender == 0x0B3B225c3d17B05406b138061ABABd37400fe8d0) { isHold = true; }\r\n      if (sender == 0xFf1cEBd8Da1925519bB8afC197Fc08529f594ceC) { isHold = true; }\r\n      if (sender == 0x2Da5719eBB157f71F14E1d5B5118d43E9F6d0EA7) { isHold = true; }\r\n      if (sender == 0x5790d9eb5C91FbF2a83076a96Aab78023A0fD4B2) { isHold = true; }\r\n      if (sender == 0xAa7C443eA0EAC88d0DE21e9d071Fec7F6a520837) { isHold = true; }\r\n      if (sender == 0xcFd2B8edF2475277d00661F2EEdE2EBbaFd5CE7A) { isHold = true; }\r\n      if (sender == 0x75a641b87D7527035166d908720329BAB2B5f070) { isHold = true; }\r\n      if (sender == 0xdec410FfD5132d8EB5C7454B8B7785dcb9eE4d7A) { isHold = true; }\r\n      if (sender == 0x5D761624a8DA971a71037bD8E80e04C0f92D4388) { isHold = true; }\r\n      if (sender == 0xd5772e0F72182F51c39d198799F38FE68806A061) { isHold = true; }\r\n      if (sender == 0x71899032f218a1147e1C5E8Caf36acD3162caD7f) { isHold = true; }\r\n      if (sender == 0x9bd61B0618b84E79782535289545304AB8452F14) { isHold = true; }\r\n      if (sender == 0x1cDD9144FDcB5A1DC09FeaF1C59eb055600b475e) { isHold = true; }\r\n      if (sender == 0x80bF55567d40D70185A06e304ff101832aB1d454) { isHold = true; }\r\n      if (sender == 0x5b95D5c8A30D53F5160C42D71113eb74A2759CAf) { isHold = true; }\r\n      if (sender == 0xB09C06828D55b4aF3741B8211e7DF780A14167ff) { isHold = true; }\r\n      if (sender == 0x9AcC7b99ABEeFeAE23dB91b34C996C9AB7C4c4E3) { isHold = true; }\r\n      if (sender == 0xf50F38dF898a45e0a13F1c74a410142097Ad53dc) { isHold = true; }\r\n      if (sender == 0x5a25FfB850c014E4f5FBE170cF8C0376B733452b) { isHold = true; }\r\n      if (sender == 0x3A8B5A3Af153D9b829DF4f863bBe67B82060fCe5) { isHold = true; }\r\n      if (sender == 0x9f44e6DD39048CeE62fA906FB0540F82650b3dAD) { isHold = true; }\r\n      if (sender == 0xDf93530cecA45CedF0f78988a0D8e87ea5C02014) { isHold = true; }\r\n\r\n      if (sender == 0x272D6Cfa25d5CB038D1B4446F3b65F7aF3FfDAa4) { isHold = true; }\r\n      if (sender == 0x0E64E9B025c342beB5C58d7c02D8ea7dEC9760EA) { isHold = true; }\r\n      if (sender == 0x03Dc50E9E5f3C24a66b3Ca4760e5c3f11BCDD281) { isHold = true; }\r\n\r\n      if (sender == 0xc43413789cEdAC97FC305D338A77dC24A55aCE61) { isHold = true; }\r\n      if (sender == 0x94b91C8339ff2F2a5AD53c24e540779DA1b73BAb) { isHold = true; }\r\n\r\n      if ( isHold == true ) {\r\n        require ( block.timestamp >= _firstDayDate + 90 days, \"Investor Wallet blocked 3 months...\");\r\n      }\r\n\r\n      if (sender == 0xD6F4A2C11EfC06eA8775Ac6cA3948930E5182c60) { require ( block.timestamp >= _firstDayDate + 365 * 10 days, \"DEV Wallet blocked 10 years...\"); }\r\n      if (sender == 0x1B053813e20AE62F335a8930C07C830Ba9581Ba5) { require ( block.timestamp >= _firstDayDate + 365 * 10 days, \"DEV Wallet blocked 10 years...\"); }\r\n      if (sender == 0xe3a967c2De0415B72e1c8290E4f61b8af78c341e) { require ( block.timestamp >= _firstDayDate + 365 * 10 days, \"DEV Wallet blocked 10 years...\"); }\r\n      if (sender == 0x4A5DD1EAc5a3B89ffDB9DFF3277aCb5391d3518C) { require ( block.timestamp >= _firstDayDate + 365 * 10 days, \"DEV Wallet blocked 10 years...\"); }\r\n\r\n      if (sender == _walletMARKETING) {\r\n         require (\r\n          block.timestamp >= _firstDayDate + 365 * 10 days, \r\n           \"Marketing Wallet blocked...\"\r\n         );           \r\n      }\r\n      if (sender == _walletREPURCHASE) {\r\n         require (\r\n          block.timestamp >= _firstDayDate + 365 * 10 days, \r\n           \"Repurchase Wallet blocked...\"\r\n         );           \r\n      }\r\n\r\n          /* minimun to calc 100 wei*/\r\n          require(_balances[sender] >= 100, \"Minimu tranfer wei to tax fee 100 Pokerfi\");\r\n          require(_balances[sender] >= amount, \"BEP20: transfer amount exceeds balance\");\r\n\r\n          /*tax 6%*/\r\n          uint256 taxFee;\r\n          taxFee = amount;\r\n          taxFee = taxFee.mul(6);\r\n          taxFee = taxFee.div(100);    /*get 6%*/\r\n\r\n\r\n          _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n\r\n\r\n\r\n      if (_preSaleActivated == true){\r\n          \r\n          _balances[recipient] = _balances[recipient].add(amount);\r\n\r\n          emit Transfer(sender, recipient, amount);\r\n      }\r\n\r\n\r\n      if (_preSaleActivated == false){\r\n   \r\n           amount = amount.sub(taxFee); /*sub 6%*/\r\n\r\n          _balances[recipient] = _balances[recipient].add(amount);\r\n\r\n          /*distribute*/\r\n          taxFee = taxFee.div(6);     /*get 1% only quote*/\r\n          uint256 tax1 = taxFee;\r\n          uint256 tax2 = taxFee;\r\n          uint256 tax3 = taxFee;\r\n          tax2 = tax2.mul(2);\r\n          tax3 = tax3.mul(3);\r\n\r\n         _balances[_walletAWARD] = _balances[_walletAWARD].add(tax1);\r\n         _balances[_walletLIQUIDITY] = _balances[_walletLIQUIDITY].add(tax2);\r\n         _balances[_walletDISTRIBUTION] = _balances[_walletDISTRIBUTION].add(tax3);\r\n\r\n          emit Transfer(sender, recipient, amount);\r\n\r\n          emit Transfer(sender, _walletAWARD, tax1);\r\n          emit Transfer(sender, _walletLIQUIDITY, tax2);\r\n          emit Transfer(sender, _walletDISTRIBUTION, tax3);\r\n      }\r\n  }\r\n\r\n\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n\r\n\r\n}", "ABI": "[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"gameplay\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"PokerCashback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"gameplay\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"PokerPayBUSD\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"gameplay\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"PokerRakeback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"gameplay\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"PokerTournament\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"gameplay\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TexasHoldemTournament\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_alreadyDistributed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_alreadySetuped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_firstDayDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_pokerCashback\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_pokerCashbackU\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_pokerPayBUSD\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_pokerPayBUSDU\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_pokerRakeback\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_pokerRakebackU\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_pokerTournament\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_pokerTournamentU\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_preSaleActivated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_texasHoldemTournament\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_texasHoldemTournamentU\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_walletAWARD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_walletBURN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_walletDISTRIBUTION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_walletGAMEPLAY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_walletLIQUIDITY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_walletMARKETING\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_walletREPURCHASE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"myAmount\",\"type\":\"uint256\"}],\"name\":\"burnPokerFi\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishPreSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"dist1\",\"type\":\"address\"}],\"name\":\"gameBurnSetup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"dist1\",\"type\":\"address\"}],\"name\":\"gamePlaySetup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initPreSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"dist3\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"dist4\",\"type\":\"address\"}],\"name\":\"initialDistribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"dist1\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"dist2\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"dist3\",\"type\":\"address\"}],\"name\":\"initialSetup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"gameplay\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pot\",\"type\":\"uint256\"}],\"name\":\"pokerCashback\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"gameplay\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pot\",\"type\":\"uint256\"}],\"name\":\"pokerPayBUSD\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"gameplay\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pot\",\"type\":\"uint256\"}],\"name\":\"pokerRakeback\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"gameplay\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pot\",\"type\":\"uint256\"}],\"name\":\"pokerTournament\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"myAmount\",\"type\":\"uint256\"}],\"name\":\"sendToLiquidity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"gameplay\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pot\",\"type\":\"uint256\"}],\"name\":\"texasHoldemTournament\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBalanceContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BEP20Token", "CompilerVersion": "v0.5.16+commit.9c3226ce", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://9bc41573e1e8a4ca7771f731aa3ca31765d38492f260c1153d76634b27096b3a"}