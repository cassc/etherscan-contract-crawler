{"SourceCode": "{\"MoniToken.sol\":{\"content\":\"pragma solidity 0.6.0;\\n\\nimport \\\"./SafeMath.sol\\\";\\n\\ninterface IERC20 {\\n  function totalSupply() external view returns (uint);\\n\\n  function balanceOf(address account) external view returns (uint);\\n\\n  function transfer(address recipient, uint amount)\\n  external\\n  returns (bool);\\n\\n  function allowance(address owner, address spender)\\n  external\\n  view\\n  returns (uint);\\n\\n  function approve(address spender, uint amount) external returns (bool);\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint amount\\n  ) external returns (bool);\\n\\n  event Transfer(address indexed from, address indexed to, uint value);\\n  event Approval(\\n    address indexed owner,\\n    address indexed spender,\\n    uint value\\n  );\\n}\\n\\ncontract MoniToken is IERC20 {\\n  using SafeMath for uint;\\n\\n  // ERC20 variables\\n  mapping(address =\\u003e uint) private _balances;\\n  mapping(address =\\u003e mapping(address =\\u003e uint)) private _allowances;\\n  uint private _totalSupply = 270_000_000 * 1_000_000_000_000_000_000;\\n\\n  // General variables\\n  string public constant name = \\\"Monsta Infinite Token\\\";\\n  string public constant symbol = \\\"MONI\\\";\\n  uint8 public constant decimals = 18;\\n  address payable public _admin;\\n\\n  // External contract general variables\\n  uint _preSale1AmountCap = 540_000 * 1_000_000_000_000_000_000;\\n  uint _preSale2AmountCap = 7_560_000 * 1_000_000_000_000_000_000;\\n  address public _preSale1Contract;\\n  address public _preSale2Contract;\\n  bool public _hasPreSale1ContractNotYetSet = true;\\n  bool public _hasPreSale2ContractNotYetSet = true;\\n\\n  // Utility variables\\n  bool public _isPaused;\\n  mapping(address =\\u003e bool) public _isPausedAddress;\\n\\n  // Date variables\\n  uint public constant _Sep_16_2021_1800 = 1_631_815_200; // TGE\\n  uint public constant _Sep_23_2021 = 1_632_355_200; // 1 Week\\n  uint public constant _Sep_30_2021 = 1_632_960_000; // 2 Week\\n  uint public constant _Oct_16_2021 = 1_634_342_400; // Month 2\\n  uint public constant _Nov_16_2021 = 1_637_020_800; // Month 3\\n  uint public constant _Dec_16_2021 = 1_639_612_800; // Month 4\\n  uint public constant _Jan_16_2022 = 1_642_291_200; // Month 5\\n  uint public constant _Feb_16_2022 = 1_644_969_600; // Month 6\\n  uint public constant _Mar_16_2022 = 1_647_388_800; // Month 7\\n  uint public constant _Apr_16_2022 = 1_650_067_200; // Month 8\\n  uint public constant _May_16_2022 = 1_652_659_200; // Month 9\\n  uint public constant _Jun_16_2022 = 1_655_337_600; // Month 10\\n  uint public constant _Jul_16_2022 = 1_657_929_600; // Month 11\\n  uint public constant _Aug_16_2022 = 1_660_608_000; // Month 12\\n  uint public constant _Sep_16_2022 = 1_663_286_400; // Month 13\\n  uint public constant _Oct_16_2022 = 1_665_878_400; // Month 14\\n  uint public constant _Nov_16_2022 = 1_668_556_800; // Month 15\\n  uint public constant _Dec_16_2022 = 1_671_148_800; // Month 16\\n  uint public constant _Jan_16_2023 = 1_673_827_200; // Month 17\\n  uint public constant _Feb_16_2023 = 1_676_505_600; // Month 18\\n  uint public constant _Mar_16_2023 = 1_678_924_800; // Month 19\\n  uint public constant _Apr_16_2023 = 1_681_603_200; // Month 20\\n  uint public constant _May_16_2023 = 1_684_195_200; // Month 21\\n  uint public constant _Jun_16_2023 = 1_686_873_600; // Month 22\\n  uint public constant _Jul_16_2023 = 1_689_465_600; // Month 23\\n  uint public constant _Aug_16_2023 = 1_692_144_000; // Month 24\\n  uint public constant _Sep_16_2023 = 1_694_822_400; // Month 25\\n  uint public constant _Oct_16_2023 = 1_697_414_400; // Month 26\\n  uint public constant _Nov_16_2023 = 1_700_092_800; // Month 27\\n  uint public constant _Dec_16_2023 = 1_702_684_800; // Month 28\\n  uint public constant _Jan_16_2024 = 1_705_363_200; // Month 29\\n  uint public constant _Feb_16_2024 = 1_708_041_600; // Month 30\\n  uint public constant _Mar_16_2024 = 1_710_547_200; // Month 31\\n  uint public constant _Apr_16_2024 = 1_713_225_600; // Month 32\\n  uint public constant _May_16_2024 = 1_715_817_600; // Month 33\\n  uint public constant _Jun_16_2024 = 1_718_496_000; // Month 34\\n  uint public constant _Jul_16_2024 = 1_721_088_000; // Month 35\\n  uint public constant _Aug_16_2024 = 1_723_766_400; // Month 36\\n  uint public constant _Sep_16_2024 = 1_726_444_800; // Month 37\\n  uint public constant _Oct_16_2024 = 1_729_036_800; // Month 38\\n  uint public constant _Nov_16_2024 = 1_731_715_200; // Month 39\\n  uint public constant _Dec_16_2024 = 1_734_307_200; // Month 40\\n  uint public constant _Jan_16_2025 = 1_736_985_600; // Month 41\\n  uint public constant _Feb_16_2025 = 1_739_664_000; // Month 42\\n  uint public constant _Mar_16_2025 = 1_742_083_200; // Month 43\\n  uint public constant _Apr_16_2025 = 1_744_761_600; // Month 44\\n  uint public constant _May_16_2025 = 1_747_353_600; // Month 45\\n  uint public constant _Jun_16_2025 = 1_750_032_000; // Month 46\\n  uint public constant _Jul_16_2025 = 1_752_624_000; // Month 47\\n  uint public constant _Aug_16_2025 = 1_755_302_400; // Month 48\\n  uint public constant _Sep_16_2025 = 1_757_980_800; // Month 49\\n  uint public constant _Oct_16_2025 = 1_760_572_800; // Month 50\\n  uint public constant _Nov_16_2025 = 1_763_251_200; // Month 51\\n  uint public constant _Dec_16_2025 = 1_765_843_200; // Month 52\\n  uint public constant _Jan_16_2026 = 1_768_521_600; // Month 53\\n  uint public constant _Feb_16_2026 = 1_771_200_000; // Month 54\\n  uint public constant _Mar_16_2026 = 1_773_619_200; // Month 55\\n  uint public constant _Apr_16_2026 = 1_776_297_600; // Month 56\\n  uint public constant _May_16_2026 = 1_778_889_600; // Month 57\\n  uint public constant _Jun_16_2026 = 1_781_568_000; // Month 58\\n  uint public constant _Jul_16_2026 = 1_784_160_000; // Month 59\\n  uint public constant _Aug_16_2026 = 1_786_838_400; // Month 60\\n\\n  string[] public _categories; // String that represent address identities\\n  uint[] public _dates; // The cutoff dates that allow coin distribution\\n  mapping(string =\\u003e uint) public _categoriesAmountCap; // The maximum amount allowed to be transfer (Category =\\u003e Cap)\\n  mapping(string =\\u003e address) public _categoriesAddress; // Address for categories (Category =\\u003e Address)\\n  mapping(string =\\u003e mapping(uint =\\u003e uint)) public _coinDistribution; // Coin distribution schedule (Category =\\u003e Unix Date =\\u003e Amount)\\n  mapping(string =\\u003e mapping(uint =\\u003e mapping(uint =\\u003e bool))) public _coinDistributionStatus;// Coin distribution schedule status, Yes = hasDistributed (Category =\\u003e Unix Date =\\u003e Amount =\\u003e bool)\\n\\n  event OutOfMoney(string category);  // emit when `_categoriesAmountCap` less than required amount.\\n\\n  constructor(\\n     address advisorAddress,\\n     address teamAddress,\\n     address marketingAddress,\\n     address ecosystemFundAddress,\\n     address gameplayAddress,\\n     address stakingAddress\\n      ) public {\\n    _admin = msg.sender;\\n    _balances[address(this)] = _totalSupply;\\n    \\n    // Add all addresses\\n    _categoriesAddress[\\u0027Advisors\\u0027] = advisorAddress;\\n    _categoriesAddress[\\u0027Team\\u0027] = teamAddress;\\n    _categoriesAddress[\\u0027Marketing\\u0027] = marketingAddress;\\n    _categoriesAddress[\\u0027EcosystemFund\\u0027] = ecosystemFundAddress;\\n    _categoriesAddress[\\u0027Gameplay\\u0027] = gameplayAddress;\\n    _categoriesAddress[\\u0027Staking\\u0027] = stakingAddress;\\n    \\n    _setDefaultValues();\\n    _setCoinDistribution();\\n    _initialTransfer(); // Send to privateSale, IDO, liquidity, bLaunchpad\\n  }\\n\\n  function _setDefaultValues() private {\\n    // Add all categories\\n    _categories.push(\\u0027Advisors\\u0027);\\n    _categories.push(\\u0027Team\\u0027);\\n    _categories.push(\\u0027Marketing\\u0027);\\n    _categories.push(\\u0027EcosystemFund\\u0027);\\n    _categories.push(\\u0027Gameplay\\u0027);\\n    _categories.push(\\u0027Staking\\u0027);\\n\\n    // Add all dates\\n    _dates.push(_Sep_16_2021_1800);\\n    _dates.push(_Sep_23_2021);\\n    _dates.push(_Sep_30_2021);\\n    _dates.push(_Oct_16_2021);\\n    _dates.push(_Nov_16_2021);\\n    _dates.push(_Dec_16_2021);\\n    _dates.push(_Jan_16_2022);\\n    _dates.push(_Feb_16_2022);\\n    _dates.push(_Mar_16_2022);\\n    _dates.push(_Apr_16_2022);\\n    _dates.push(_May_16_2022);\\n    _dates.push(_Jun_16_2022);\\n    _dates.push(_Jul_16_2022);\\n    _dates.push(_Aug_16_2022);\\n    _dates.push(_Sep_16_2022);\\n    _dates.push(_Oct_16_2022);\\n    _dates.push(_Nov_16_2022);\\n    _dates.push(_Dec_16_2022);\\n    _dates.push(_Jan_16_2023);\\n    _dates.push(_Feb_16_2023);\\n    _dates.push(_Mar_16_2023);\\n    _dates.push(_Apr_16_2023);\\n    _dates.push(_May_16_2023);\\n    _dates.push(_Jun_16_2023);\\n    _dates.push(_Jul_16_2023);\\n    _dates.push(_Aug_16_2023);\\n    _dates.push(_Sep_16_2023);\\n    _dates.push(_Oct_16_2023);\\n    _dates.push(_Nov_16_2023);\\n    _dates.push(_Dec_16_2023);\\n    _dates.push(_Jan_16_2024);\\n    _dates.push(_Feb_16_2024);\\n    _dates.push(_Mar_16_2024);\\n    _dates.push(_Apr_16_2024);\\n    _dates.push(_May_16_2024);\\n    _dates.push(_Jun_16_2024);\\n    _dates.push(_Jul_16_2024);\\n    _dates.push(_Aug_16_2024);\\n    _dates.push(_Sep_16_2024);\\n    _dates.push(_Oct_16_2024);\\n    _dates.push(_Nov_16_2024);\\n    _dates.push(_Dec_16_2024);\\n    _dates.push(_Jan_16_2025);\\n    _dates.push(_Feb_16_2025);\\n    _dates.push(_Mar_16_2025);\\n    _dates.push(_Apr_16_2025);\\n    _dates.push(_May_16_2025);\\n    _dates.push(_Jun_16_2025);\\n    _dates.push(_Jul_16_2025);\\n    _dates.push(_Aug_16_2025);\\n    _dates.push(_Sep_16_2025);\\n    _dates.push(_Oct_16_2025);\\n    _dates.push(_Nov_16_2025);\\n    _dates.push(_Dec_16_2025);\\n    _dates.push(_Jan_16_2026);\\n    _dates.push(_Feb_16_2026);\\n    _dates.push(_Mar_16_2026);\\n    _dates.push(_Apr_16_2026);\\n    _dates.push(_May_16_2026);\\n    _dates.push(_Jun_16_2026);\\n    _dates.push(_Jul_16_2026);\\n    _dates.push(_Aug_16_2026);\\n\\n    // Add all amount cap\\n    _categoriesAmountCap[\\u0027Advisors\\u0027] = 13_500_000 * 1_000_000_000_000_000_000;\\n    _categoriesAmountCap[\\u0027Team\\u0027] = 43_200_000 * 1_000_000_000_000_000_000;\\n    _categoriesAmountCap[\\u0027Marketing\\u0027] = 24_300_000 * 1_000_000_000_000_000_000;\\n    _categoriesAmountCap[\\u0027EcosystemFund\\u0027] = 13_500_000 * 1_000_000_000_000_000_000;\\n    _categoriesAmountCap[\\u0027Gameplay\\u0027] = 67_500_000 * 1_000_000_000_000_000_000;\\n    _categoriesAmountCap[\\u0027Staking\\u0027] = 64_800_000 * 1_000_000_000_000_000_000;\\n  }\\n\\n\\n   // Set coin distribution info\\n   // For eg: _coinDistribution[\\u0027Advisors\\u0027][_Sep_16_2022] = 281_250  * 1_000_000_000_000_000_000;\\n   // Means: 281,250 amount will be distributed to Advisors\u2019 address after Sep_16_2022\\n  function _setCoinDistribution() private {\\n    _coinDistribution[\\u0027Advisors\\u0027][_Sep_16_2022]=  281_250  * 1_000_000_000_000_000_000; // Month 13\\n    _coinDistribution[\\u0027Advisors\\u0027][_Oct_16_2022]=  281_250  * 1_000_000_000_000_000_000; // Month 14\\n    _coinDistribution[\\u0027Advisors\\u0027][_Nov_16_2022]=  281_250  * 1_000_000_000_000_000_000; // Month 15\\n    _coinDistribution[\\u0027Advisors\\u0027][_Dec_16_2022]=  281_250  * 1_000_000_000_000_000_000; // Month 16\\n    _coinDistribution[\\u0027Advisors\\u0027][_Jan_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 17\\n    _coinDistribution[\\u0027Advisors\\u0027][_Feb_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 18\\n    _coinDistribution[\\u0027Advisors\\u0027][_Mar_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 19\\n    _coinDistribution[\\u0027Advisors\\u0027][_Apr_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 20\\n    _coinDistribution[\\u0027Advisors\\u0027][_May_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 21\\n    _coinDistribution[\\u0027Advisors\\u0027][_Jun_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 22\\n    _coinDistribution[\\u0027Advisors\\u0027][_Jul_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 23\\n    _coinDistribution[\\u0027Advisors\\u0027][_Aug_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 24\\n    _coinDistribution[\\u0027Advisors\\u0027][_Sep_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 25\\n    _coinDistribution[\\u0027Advisors\\u0027][_Oct_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 26\\n    _coinDistribution[\\u0027Advisors\\u0027][_Nov_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 27\\n    _coinDistribution[\\u0027Advisors\\u0027][_Dec_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 28\\n    _coinDistribution[\\u0027Advisors\\u0027][_Jan_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 29\\n    _coinDistribution[\\u0027Advisors\\u0027][_Feb_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 30\\n    _coinDistribution[\\u0027Advisors\\u0027][_Mar_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 31\\n    _coinDistribution[\\u0027Advisors\\u0027][_Apr_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 32\\n    _coinDistribution[\\u0027Advisors\\u0027][_May_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 33\\n    _coinDistribution[\\u0027Advisors\\u0027][_Jun_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 34\\n    _coinDistribution[\\u0027Advisors\\u0027][_Jul_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 35\\n    _coinDistribution[\\u0027Advisors\\u0027][_Aug_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 36\\n    _coinDistribution[\\u0027Advisors\\u0027][_Sep_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 37\\n    _coinDistribution[\\u0027Advisors\\u0027][_Oct_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 38\\n    _coinDistribution[\\u0027Advisors\\u0027][_Nov_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 39\\n    _coinDistribution[\\u0027Advisors\\u0027][_Dec_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 40\\n    _coinDistribution[\\u0027Advisors\\u0027][_Jan_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 41\\n    _coinDistribution[\\u0027Advisors\\u0027][_Feb_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 42\\n    _coinDistribution[\\u0027Advisors\\u0027][_Mar_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 43\\n    _coinDistribution[\\u0027Advisors\\u0027][_Apr_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 44\\n    _coinDistribution[\\u0027Advisors\\u0027][_May_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 45\\n    _coinDistribution[\\u0027Advisors\\u0027][_Jun_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 46\\n    _coinDistribution[\\u0027Advisors\\u0027][_Jul_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 47\\n    _coinDistribution[\\u0027Advisors\\u0027][_Aug_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 48\\n    _coinDistribution[\\u0027Advisors\\u0027][_Sep_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 49\\n    _coinDistribution[\\u0027Advisors\\u0027][_Oct_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 50\\n    _coinDistribution[\\u0027Advisors\\u0027][_Nov_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 51\\n    _coinDistribution[\\u0027Advisors\\u0027][_Dec_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 52\\n    _coinDistribution[\\u0027Advisors\\u0027][_Jan_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 53\\n    _coinDistribution[\\u0027Advisors\\u0027][_Feb_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 54\\n    _coinDistribution[\\u0027Advisors\\u0027][_Mar_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 55\\n    _coinDistribution[\\u0027Advisors\\u0027][_Apr_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 56\\n    _coinDistribution[\\u0027Advisors\\u0027][_May_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 57\\n    _coinDistribution[\\u0027Advisors\\u0027][_Jun_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 58\\n    _coinDistribution[\\u0027Advisors\\u0027][_Jul_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 59\\n    _coinDistribution[\\u0027Advisors\\u0027][_Aug_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 60\\n    _coinDistribution[\\u0027Team\\u0027][_Sep_16_2022]=  900_000  * 1_000_000_000_000_000_000; // Month 13\\n    _coinDistribution[\\u0027Team\\u0027][_Oct_16_2022]=  900_000  * 1_000_000_000_000_000_000; // Month 14\\n    _coinDistribution[\\u0027Team\\u0027][_Nov_16_2022]=  900_000  * 1_000_000_000_000_000_000; // Month 15\\n    _coinDistribution[\\u0027Team\\u0027][_Dec_16_2022]=  900_000  * 1_000_000_000_000_000_000; // Month 16\\n    _coinDistribution[\\u0027Team\\u0027][_Jan_16_2023]=  900_000  * 1_000_000_000_000_000_000; // Month 17\\n    _coinDistribution[\\u0027Team\\u0027][_Feb_16_2023]=  900_000  * 1_000_000_000_000_000_000; // Month 18\\n    _coinDistribution[\\u0027Team\\u0027][_Mar_16_2023]=  900_000  * 1_000_000_000_000_000_000; // Month 19\\n    _coinDistribution[\\u0027Team\\u0027][_Apr_16_2023]=  900_000  * 1_000_000_000_000_000_000; // Month 20\\n    _coinDistribution[\\u0027Team\\u0027][_May_16_2023]=  900_000  * 1_000_000_000_000_000_000; // Month 21\\n    _coinDistribution[\\u0027Team\\u0027][_Jun_16_2023]=  900_000  * 1_000_000_000_000_000_000; // Month 22\\n    _coinDistribution[\\u0027Team\\u0027][_Jul_16_2023]=  900_000  * 1_000_000_000_000_000_000; // Month 23\\n    _coinDistribution[\\u0027Team\\u0027][_Aug_16_2023]=  900_000  * 1_000_000_000_000_000_000; // Month 24\\n    _coinDistribution[\\u0027Team\\u0027][_Sep_16_2023]=  900_000  * 1_000_000_000_000_000_000; // Month 25\\n    _coinDistribution[\\u0027Team\\u0027][_Oct_16_2023]=  900_000  * 1_000_000_000_000_000_000; // Month 26\\n    _coinDistribution[\\u0027Team\\u0027][_Nov_16_2023]=  900_000  * 1_000_000_000_000_000_000; // Month 27\\n    _coinDistribution[\\u0027Team\\u0027][_Dec_16_2023]=  900_000  * 1_000_000_000_000_000_000; // Month 28\\n    _coinDistribution[\\u0027Team\\u0027][_Jan_16_2024]=  900_000  * 1_000_000_000_000_000_000; // Month 29\\n    _coinDistribution[\\u0027Team\\u0027][_Feb_16_2024]=  900_000  * 1_000_000_000_000_000_000; // Month 30\\n    _coinDistribution[\\u0027Team\\u0027][_Mar_16_2024]=  900_000  * 1_000_000_000_000_000_000; // Month 31\\n    _coinDistribution[\\u0027Team\\u0027][_Apr_16_2024]=  900_000  * 1_000_000_000_000_000_000; // Month 32\\n    _coinDistribution[\\u0027Team\\u0027][_May_16_2024]=  900_000  * 1_000_000_000_000_000_000; // Month 33\\n    _coinDistribution[\\u0027Team\\u0027][_Jun_16_2024]=  900_000  * 1_000_000_000_000_000_000; // Month 34\\n    _coinDistribution[\\u0027Team\\u0027][_Jul_16_2024]=  900_000  * 1_000_000_000_000_000_000; // Month 35\\n    _coinDistribution[\\u0027Team\\u0027][_Aug_16_2024]=  900_000  * 1_000_000_000_000_000_000; // Month 36\\n    _coinDistribution[\\u0027Team\\u0027][_Sep_16_2024]=  900_000  * 1_000_000_000_000_000_000; // Month 37\\n    _coinDistribution[\\u0027Team\\u0027][_Oct_16_2024]=  900_000  * 1_000_000_000_000_000_000; // Month 38\\n    _coinDistribution[\\u0027Team\\u0027][_Nov_16_2024]=  900_000  * 1_000_000_000_000_000_000; // Month 39\\n    _coinDistribution[\\u0027Team\\u0027][_Dec_16_2024]=  900_000  * 1_000_000_000_000_000_000; // Month 40\\n    _coinDistribution[\\u0027Team\\u0027][_Jan_16_2025]=  900_000  * 1_000_000_000_000_000_000; // Month 41\\n    _coinDistribution[\\u0027Team\\u0027][_Feb_16_2025]=  900_000  * 1_000_000_000_000_000_000; // Month 42\\n    _coinDistribution[\\u0027Team\\u0027][_Mar_16_2025]=  900_000  * 1_000_000_000_000_000_000; // Month 43\\n    _coinDistribution[\\u0027Team\\u0027][_Apr_16_2025]=  900_000  * 1_000_000_000_000_000_000; // Month 44\\n    _coinDistribution[\\u0027Team\\u0027][_May_16_2025]=  900_000  * 1_000_000_000_000_000_000; // Month 45\\n    _coinDistribution[\\u0027Team\\u0027][_Jun_16_2025]=  900_000  * 1_000_000_000_000_000_000; // Month 46\\n    _coinDistribution[\\u0027Team\\u0027][_Jul_16_2025]=  900_000  * 1_000_000_000_000_000_000; // Month 47\\n    _coinDistribution[\\u0027Team\\u0027][_Aug_16_2025]=  900_000  * 1_000_000_000_000_000_000; // Month 48\\n    _coinDistribution[\\u0027Team\\u0027][_Sep_16_2025]=  900_000  * 1_000_000_000_000_000_000; // Month 49\\n    _coinDistribution[\\u0027Team\\u0027][_Oct_16_2025]=  900_000  * 1_000_000_000_000_000_000; // Month 50\\n    _coinDistribution[\\u0027Team\\u0027][_Nov_16_2025]=  900_000  * 1_000_000_000_000_000_000; // Month 51\\n    _coinDistribution[\\u0027Team\\u0027][_Dec_16_2025]=  900_000  * 1_000_000_000_000_000_000; // Month 52\\n    _coinDistribution[\\u0027Team\\u0027][_Jan_16_2026]=  900_000  * 1_000_000_000_000_000_000; // Month 53\\n    _coinDistribution[\\u0027Team\\u0027][_Feb_16_2026]=  900_000  * 1_000_000_000_000_000_000; // Month 54\\n    _coinDistribution[\\u0027Team\\u0027][_Mar_16_2026]=  900_000  * 1_000_000_000_000_000_000; // Month 55\\n    _coinDistribution[\\u0027Team\\u0027][_Apr_16_2026]=  900_000  * 1_000_000_000_000_000_000; // Month 56\\n    _coinDistribution[\\u0027Team\\u0027][_May_16_2026]=  900_000  * 1_000_000_000_000_000_000; // Month 57\\n    _coinDistribution[\\u0027Team\\u0027][_Jun_16_2026]=  900_000  * 1_000_000_000_000_000_000; // Month 58\\n    _coinDistribution[\\u0027Team\\u0027][_Jul_16_2026]=  900_000  * 1_000_000_000_000_000_000; // Month 59\\n    _coinDistribution[\\u0027Team\\u0027][_Aug_16_2026]=  900_000  * 1_000_000_000_000_000_000; // Month 60\\n    _coinDistribution[\\u0027Marketing\\u0027][_Sep_16_2021_1800]=  675_000  * 1_000_000_000_000_000_000; // TGE\\n    _coinDistribution[\\u0027Marketing\\u0027][_Oct_16_2021]=  675_000  * 1_000_000_000_000_000_000; // Month 2\\n    _coinDistribution[\\u0027Marketing\\u0027][_Nov_16_2021]=  675_000  * 1_000_000_000_000_000_000; // Month 3\\n    _coinDistribution[\\u0027Marketing\\u0027][_Dec_16_2021]=  675_000  * 1_000_000_000_000_000_000; // Month 4\\n    _coinDistribution[\\u0027Marketing\\u0027][_Jan_16_2022]=  675_000  * 1_000_000_000_000_000_000; // Month 5\\n    _coinDistribution[\\u0027Marketing\\u0027][_Feb_16_2022]=  675_000  * 1_000_000_000_000_000_000; // Month 6\\n    _coinDistribution[\\u0027Marketing\\u0027][_Mar_16_2022]=  675_000  * 1_000_000_000_000_000_000; // Month 7\\n    _coinDistribution[\\u0027Marketing\\u0027][_Apr_16_2022]=  675_000  * 1_000_000_000_000_000_000; // Month 8\\n    _coinDistribution[\\u0027Marketing\\u0027][_May_16_2022]=  675_000  * 1_000_000_000_000_000_000; // Month 9\\n    _coinDistribution[\\u0027Marketing\\u0027][_Jun_16_2022]=  675_000  * 1_000_000_000_000_000_000; // Month 10\\n    _coinDistribution[\\u0027Marketing\\u0027][_Jul_16_2022]=  675_000  * 1_000_000_000_000_000_000; // Month 11\\n    _coinDistribution[\\u0027Marketing\\u0027][_Aug_16_2022]=  675_000  * 1_000_000_000_000_000_000; // Month 12\\n    _coinDistribution[\\u0027Marketing\\u0027][_Sep_16_2022]=  675_000  * 1_000_000_000_000_000_000; // Month 13\\n    _coinDistribution[\\u0027Marketing\\u0027][_Oct_16_2022]=  675_000  * 1_000_000_000_000_000_000; // Month 14\\n    _coinDistribution[\\u0027Marketing\\u0027][_Nov_16_2022]=  675_000  * 1_000_000_000_000_000_000; // Month 15\\n    _coinDistribution[\\u0027Marketing\\u0027][_Dec_16_2022]=  675_000  * 1_000_000_000_000_000_000; // Month 16\\n    _coinDistribution[\\u0027Marketing\\u0027][_Jan_16_2023]=  675_000  * 1_000_000_000_000_000_000; // Month 17\\n    _coinDistribution[\\u0027Marketing\\u0027][_Feb_16_2023]=  675_000  * 1_000_000_000_000_000_000; // Month 18\\n    _coinDistribution[\\u0027Marketing\\u0027][_Mar_16_2023]=  675_000  * 1_000_000_000_000_000_000; // Month 19\\n    _coinDistribution[\\u0027Marketing\\u0027][_Apr_16_2023]=  675_000  * 1_000_000_000_000_000_000; // Month 20\\n    _coinDistribution[\\u0027Marketing\\u0027][_May_16_2023]=  675_000  * 1_000_000_000_000_000_000; // Month 21\\n    _coinDistribution[\\u0027Marketing\\u0027][_Jun_16_2023]=  675_000  * 1_000_000_000_000_000_000; // Month 22\\n    _coinDistribution[\\u0027Marketing\\u0027][_Jul_16_2023]=  675_000  * 1_000_000_000_000_000_000; // Month 23\\n    _coinDistribution[\\u0027Marketing\\u0027][_Aug_16_2023]=  675_000  * 1_000_000_000_000_000_000; // Month 24\\n    _coinDistribution[\\u0027Marketing\\u0027][_Sep_16_2023]=  675_000  * 1_000_000_000_000_000_000; // Month 25\\n    _coinDistribution[\\u0027Marketing\\u0027][_Oct_16_2023]=  675_000  * 1_000_000_000_000_000_000; // Month 26\\n    _coinDistribution[\\u0027Marketing\\u0027][_Nov_16_2023]=  675_000  * 1_000_000_000_000_000_000; // Month 27\\n    _coinDistribution[\\u0027Marketing\\u0027][_Dec_16_2023]=  675_000  * 1_000_000_000_000_000_000; // Month 28\\n    _coinDistribution[\\u0027Marketing\\u0027][_Jan_16_2024]=  675_000  * 1_000_000_000_000_000_000; // Month 29\\n    _coinDistribution[\\u0027Marketing\\u0027][_Feb_16_2024]=  675_000  * 1_000_000_000_000_000_000; // Month 30\\n    _coinDistribution[\\u0027Marketing\\u0027][_Mar_16_2024]=  675_000  * 1_000_000_000_000_000_000; // Month 31\\n    _coinDistribution[\\u0027Marketing\\u0027][_Apr_16_2024]=  675_000  * 1_000_000_000_000_000_000; // Month 32\\n    _coinDistribution[\\u0027Marketing\\u0027][_May_16_2024]=  675_000  * 1_000_000_000_000_000_000; // Month 33\\n    _coinDistribution[\\u0027Marketing\\u0027][_Jun_16_2024]=  675_000  * 1_000_000_000_000_000_000; // Month 34\\n    _coinDistribution[\\u0027Marketing\\u0027][_Jul_16_2024]=  675_000  * 1_000_000_000_000_000_000; // Month 35\\n    _coinDistribution[\\u0027Marketing\\u0027][_Aug_16_2024]=  675_000  * 1_000_000_000_000_000_000; // Month 36\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Sep_16_2022]=  281_250  * 1_000_000_000_000_000_000; // Month 13\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Oct_16_2022]=  281_250  * 1_000_000_000_000_000_000; // Month 14\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Nov_16_2022]=  281_250  * 1_000_000_000_000_000_000; // Month 15\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Dec_16_2022]=  281_250  * 1_000_000_000_000_000_000; // Month 16\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Jan_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 17\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Feb_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 18\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Mar_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 19\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Apr_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 20\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_May_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 21\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Jun_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 22\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Jul_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 23\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Aug_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 24\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Sep_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 25\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Oct_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 26\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Nov_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 27\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Dec_16_2023]=  281_250  * 1_000_000_000_000_000_000; // Month 28\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Jan_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 29\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Feb_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 30\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Mar_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 31\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Apr_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 32\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_May_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 33\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Jun_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 34\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Jul_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 35\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Aug_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 36\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Sep_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 37\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Oct_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 38\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Nov_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 39\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Dec_16_2024]=  281_250  * 1_000_000_000_000_000_000; // Month 40\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Jan_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 41\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Feb_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 42\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Mar_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 43\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Apr_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 44\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_May_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 45\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Jun_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 46\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Jul_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 47\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Aug_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 48\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Sep_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 49\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Oct_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 50\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Nov_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 51\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Dec_16_2025]=  281_250  * 1_000_000_000_000_000_000; // Month 52\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Jan_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 53\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Feb_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 54\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Mar_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 55\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Apr_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 56\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_May_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 57\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Jun_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 58\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Jul_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 59\\n    _coinDistribution[\\u0027EcosystemFund\\u0027][_Aug_16_2026]=  281_250  * 1_000_000_000_000_000_000; // Month 60\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Mar_16_2022]=  1_250_000  * 1_000_000_000_000_000_000; // Month 7\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Apr_16_2022]=  1_250_000  * 1_000_000_000_000_000_000; // Month 8\\n    _coinDistribution[\\u0027Gameplay\\u0027][_May_16_2022]=  1_250_000  * 1_000_000_000_000_000_000; // Month 9\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jun_16_2022]=  1_250_000  * 1_000_000_000_000_000_000; // Month 10\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jul_16_2022]=  1_250_000  * 1_000_000_000_000_000_000; // Month 11\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Aug_16_2022]=  1_250_000  * 1_000_000_000_000_000_000; // Month 12\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Sep_16_2022]=  1_250_000  * 1_000_000_000_000_000_000; // Month 13\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Oct_16_2022]=  1_250_000  * 1_000_000_000_000_000_000; // Month 14\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Nov_16_2022]=  1_250_000  * 1_000_000_000_000_000_000; // Month 15\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Dec_16_2022]=  1_250_000  * 1_000_000_000_000_000_000; // Month 16\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jan_16_2023]=  1_250_000  * 1_000_000_000_000_000_000; // Month 17\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Feb_16_2023]=  1_250_000  * 1_000_000_000_000_000_000; // Month 18\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Mar_16_2023]=  1_250_000  * 1_000_000_000_000_000_000; // Month 19\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Apr_16_2023]=  1_250_000  * 1_000_000_000_000_000_000; // Month 20\\n    _coinDistribution[\\u0027Gameplay\\u0027][_May_16_2023]=  1_250_000  * 1_000_000_000_000_000_000; // Month 21\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jun_16_2023]=  1_250_000  * 1_000_000_000_000_000_000; // Month 22\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jul_16_2023]=  1_250_000  * 1_000_000_000_000_000_000; // Month 23\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Aug_16_2023]=  1_250_000  * 1_000_000_000_000_000_000; // Month 24\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Sep_16_2023]=  1_250_000  * 1_000_000_000_000_000_000; // Month 25\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Oct_16_2023]=  1_250_000  * 1_000_000_000_000_000_000; // Month 26\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Nov_16_2023]=  1_250_000  * 1_000_000_000_000_000_000; // Month 27\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Dec_16_2023]=  1_250_000  * 1_000_000_000_000_000_000; // Month 28\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jan_16_2024]=  1_250_000  * 1_000_000_000_000_000_000; // Month 29\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Feb_16_2024]=  1_250_000  * 1_000_000_000_000_000_000; // Month 30\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Mar_16_2024]=  1_250_000  * 1_000_000_000_000_000_000; // Month 31\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Apr_16_2024]=  1_250_000  * 1_000_000_000_000_000_000; // Month 32\\n    _coinDistribution[\\u0027Gameplay\\u0027][_May_16_2024]=  1_250_000  * 1_000_000_000_000_000_000; // Month 33\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jun_16_2024]=  1_250_000  * 1_000_000_000_000_000_000; // Month 34\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jul_16_2024]=  1_250_000  * 1_000_000_000_000_000_000; // Month 35\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Aug_16_2024]=  1_250_000  * 1_000_000_000_000_000_000; // Month 36\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Sep_16_2024]=  1_250_000  * 1_000_000_000_000_000_000; // Month 37\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Oct_16_2024]=  1_250_000  * 1_000_000_000_000_000_000; // Month 38\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Nov_16_2024]=  1_250_000  * 1_000_000_000_000_000_000; // Month 39\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Dec_16_2024]=  1_250_000  * 1_000_000_000_000_000_000; // Month 40\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jan_16_2025]=  1_250_000  * 1_000_000_000_000_000_000; // Month 41\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Feb_16_2025]=  1_250_000  * 1_000_000_000_000_000_000; // Month 42\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Mar_16_2025]=  1_250_000  * 1_000_000_000_000_000_000; // Month 43\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Apr_16_2025]=  1_250_000  * 1_000_000_000_000_000_000; // Month 44\\n    _coinDistribution[\\u0027Gameplay\\u0027][_May_16_2025]=  1_250_000  * 1_000_000_000_000_000_000; // Month 45\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jun_16_2025]=  1_250_000  * 1_000_000_000_000_000_000; // Month 46\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jul_16_2025]=  1_250_000  * 1_000_000_000_000_000_000; // Month 47\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Aug_16_2025]=  1_250_000  * 1_000_000_000_000_000_000; // Month 48\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Sep_16_2025]=  1_250_000  * 1_000_000_000_000_000_000; // Month 49\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Oct_16_2025]=  1_250_000  * 1_000_000_000_000_000_000; // Month 50\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Nov_16_2025]=  1_250_000  * 1_000_000_000_000_000_000; // Month 51\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Dec_16_2025]=  1_250_000  * 1_000_000_000_000_000_000; // Month 52\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jan_16_2026]=  1_250_000  * 1_000_000_000_000_000_000; // Month 53\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Feb_16_2026]=  1_250_000  * 1_000_000_000_000_000_000; // Month 54\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Mar_16_2026]=  1_250_000  * 1_000_000_000_000_000_000; // Month 55\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Apr_16_2026]=  1_250_000  * 1_000_000_000_000_000_000; // Month 56\\n    _coinDistribution[\\u0027Gameplay\\u0027][_May_16_2026]=  1_250_000  * 1_000_000_000_000_000_000; // Month 57\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jun_16_2026]=  1_250_000  * 1_000_000_000_000_000_000; // Month 58\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Jul_16_2026]=  1_250_000  * 1_000_000_000_000_000_000; // Month 59\\n    _coinDistribution[\\u0027Gameplay\\u0027][_Aug_16_2026]=  1_250_000  * 1_000_000_000_000_000_000; // Month 60\\n    _coinDistribution[\\u0027Staking\\u0027][_Mar_16_2022]=  1_200_000  * 1_000_000_000_000_000_000; // Month 7\\n    _coinDistribution[\\u0027Staking\\u0027][_Apr_16_2022]=  1_200_000  * 1_000_000_000_000_000_000; // Month 8\\n    _coinDistribution[\\u0027Staking\\u0027][_May_16_2022]=  1_200_000  * 1_000_000_000_000_000_000; // Month 9\\n    _coinDistribution[\\u0027Staking\\u0027][_Jun_16_2022]=  1_200_000  * 1_000_000_000_000_000_000; // Month 10\\n    _coinDistribution[\\u0027Staking\\u0027][_Jul_16_2022]=  1_200_000  * 1_000_000_000_000_000_000; // Month 11\\n    _coinDistribution[\\u0027Staking\\u0027][_Aug_16_2022]=  1_200_000  * 1_000_000_000_000_000_000; // Month 12\\n    _coinDistribution[\\u0027Staking\\u0027][_Sep_16_2022]=  1_200_000  * 1_000_000_000_000_000_000; // Month 13\\n    _coinDistribution[\\u0027Staking\\u0027][_Oct_16_2022]=  1_200_000  * 1_000_000_000_000_000_000; // Month 14\\n    _coinDistribution[\\u0027Staking\\u0027][_Nov_16_2022]=  1_200_000  * 1_000_000_000_000_000_000; // Month 15\\n    _coinDistribution[\\u0027Staking\\u0027][_Dec_16_2022]=  1_200_000  * 1_000_000_000_000_000_000; // Month 16\\n    _coinDistribution[\\u0027Staking\\u0027][_Jan_16_2023]=  1_200_000  * 1_000_000_000_000_000_000; // Month 17\\n    _coinDistribution[\\u0027Staking\\u0027][_Feb_16_2023]=  1_200_000  * 1_000_000_000_000_000_000; // Month 18\\n    _coinDistribution[\\u0027Staking\\u0027][_Mar_16_2023]=  1_200_000  * 1_000_000_000_000_000_000; // Month 19\\n    _coinDistribution[\\u0027Staking\\u0027][_Apr_16_2023]=  1_200_000  * 1_000_000_000_000_000_000; // Month 20\\n    _coinDistribution[\\u0027Staking\\u0027][_May_16_2023]=  1_200_000  * 1_000_000_000_000_000_000; // Month 21\\n    _coinDistribution[\\u0027Staking\\u0027][_Jun_16_2023]=  1_200_000  * 1_000_000_000_000_000_000; // Month 22\\n    _coinDistribution[\\u0027Staking\\u0027][_Jul_16_2023]=  1_200_000  * 1_000_000_000_000_000_000; // Month 23\\n    _coinDistribution[\\u0027Staking\\u0027][_Aug_16_2023]=  1_200_000  * 1_000_000_000_000_000_000; // Month 24\\n    _coinDistribution[\\u0027Staking\\u0027][_Sep_16_2023]=  1_200_000  * 1_000_000_000_000_000_000; // Month 25\\n    _coinDistribution[\\u0027Staking\\u0027][_Oct_16_2023]=  1_200_000  * 1_000_000_000_000_000_000; // Month 26\\n    _coinDistribution[\\u0027Staking\\u0027][_Nov_16_2023]=  1_200_000  * 1_000_000_000_000_000_000; // Month 27\\n    _coinDistribution[\\u0027Staking\\u0027][_Dec_16_2023]=  1_200_000  * 1_000_000_000_000_000_000; // Month 28\\n    _coinDistribution[\\u0027Staking\\u0027][_Jan_16_2024]=  1_200_000  * 1_000_000_000_000_000_000; // Month 29\\n    _coinDistribution[\\u0027Staking\\u0027][_Feb_16_2024]=  1_200_000  * 1_000_000_000_000_000_000; // Month 30\\n    _coinDistribution[\\u0027Staking\\u0027][_Mar_16_2024]=  1_200_000  * 1_000_000_000_000_000_000; // Month 31\\n    _coinDistribution[\\u0027Staking\\u0027][_Apr_16_2024]=  1_200_000  * 1_000_000_000_000_000_000; // Month 32\\n    _coinDistribution[\\u0027Staking\\u0027][_May_16_2024]=  1_200_000  * 1_000_000_000_000_000_000; // Month 33\\n    _coinDistribution[\\u0027Staking\\u0027][_Jun_16_2024]=  1_200_000  * 1_000_000_000_000_000_000; // Month 34\\n    _coinDistribution[\\u0027Staking\\u0027][_Jul_16_2024]=  1_200_000  * 1_000_000_000_000_000_000; // Month 35\\n    _coinDistribution[\\u0027Staking\\u0027][_Aug_16_2024]=  1_200_000  * 1_000_000_000_000_000_000; // Month 36\\n    _coinDistribution[\\u0027Staking\\u0027][_Sep_16_2024]=  1_200_000  * 1_000_000_000_000_000_000; // Month 37\\n    _coinDistribution[\\u0027Staking\\u0027][_Oct_16_2024]=  1_200_000  * 1_000_000_000_000_000_000; // Month 38\\n    _coinDistribution[\\u0027Staking\\u0027][_Nov_16_2024]=  1_200_000  * 1_000_000_000_000_000_000; // Month 39\\n    _coinDistribution[\\u0027Staking\\u0027][_Dec_16_2024]=  1_200_000  * 1_000_000_000_000_000_000; // Month 40\\n    _coinDistribution[\\u0027Staking\\u0027][_Jan_16_2025]=  1_200_000  * 1_000_000_000_000_000_000; // Month 41\\n    _coinDistribution[\\u0027Staking\\u0027][_Feb_16_2025]=  1_200_000  * 1_000_000_000_000_000_000; // Month 42\\n    _coinDistribution[\\u0027Staking\\u0027][_Mar_16_2025]=  1_200_000  * 1_000_000_000_000_000_000; // Month 43\\n    _coinDistribution[\\u0027Staking\\u0027][_Apr_16_2025]=  1_200_000  * 1_000_000_000_000_000_000; // Month 44\\n    _coinDistribution[\\u0027Staking\\u0027][_May_16_2025]=  1_200_000  * 1_000_000_000_000_000_000; // Month 45\\n    _coinDistribution[\\u0027Staking\\u0027][_Jun_16_2025]=  1_200_000  * 1_000_000_000_000_000_000; // Month 46\\n    _coinDistribution[\\u0027Staking\\u0027][_Jul_16_2025]=  1_200_000  * 1_000_000_000_000_000_000; // Month 47\\n    _coinDistribution[\\u0027Staking\\u0027][_Aug_16_2025]=  1_200_000  * 1_000_000_000_000_000_000; // Month 48\\n    _coinDistribution[\\u0027Staking\\u0027][_Sep_16_2025]=  1_200_000  * 1_000_000_000_000_000_000; // Month 49\\n    _coinDistribution[\\u0027Staking\\u0027][_Oct_16_2025]=  1_200_000  * 1_000_000_000_000_000_000; // Month 50\\n    _coinDistribution[\\u0027Staking\\u0027][_Nov_16_2025]=  1_200_000  * 1_000_000_000_000_000_000; // Month 51\\n    _coinDistribution[\\u0027Staking\\u0027][_Dec_16_2025]=  1_200_000  * 1_000_000_000_000_000_000; // Month 52\\n    _coinDistribution[\\u0027Staking\\u0027][_Jan_16_2026]=  1_200_000  * 1_000_000_000_000_000_000; // Month 53\\n    _coinDistribution[\\u0027Staking\\u0027][_Feb_16_2026]=  1_200_000  * 1_000_000_000_000_000_000; // Month 54\\n    _coinDistribution[\\u0027Staking\\u0027][_Mar_16_2026]=  1_200_000  * 1_000_000_000_000_000_000; // Month 55\\n    _coinDistribution[\\u0027Staking\\u0027][_Apr_16_2026]=  1_200_000  * 1_000_000_000_000_000_000; // Month 56\\n    _coinDistribution[\\u0027Staking\\u0027][_May_16_2026]=  1_200_000  * 1_000_000_000_000_000_000; // Month 57\\n    _coinDistribution[\\u0027Staking\\u0027][_Jun_16_2026]=  1_200_000  * 1_000_000_000_000_000_000; // Month 58\\n    _coinDistribution[\\u0027Staking\\u0027][_Jul_16_2026]=  1_200_000  * 1_000_000_000_000_000_000; // Month 59\\n    _coinDistribution[\\u0027Staking\\u0027][_Aug_16_2026]=  1_200_000  * 1_000_000_000_000_000_000; // Month 60\\n  }\\n\\n  /**\\n   * Transfer to 4 addresses when contract are created \\n   */\\n  function _initialTransfer() private{\\n    _transfer(address(this), 0x467db17EbC0FB29510a63B31332446C92DFF44fE, 16_200_000 * 1_000_000_000_000_000_000); // PrivateSale\\n    _transfer(address(this), 0xDC6FC5e0111dBdC6111AdF2ca11B7C4F234d49C6, 2_700_000 * 1_000_000_000_000_000_000); // IDO\\n    _transfer(address(this), 0x9CC234DE2CF4b0C9a1C64Bb3E4f96d6aa1176698, 2_700_000 * 1_000_000_000_000_000_000); // Liquidity\\n    _transfer(address(this), 0xA71B91f139Fc59C22b4c7DC91CDFdaadAEB10E0C, 13_500_000 * 1_000_000_000_000_000_000); // BLaunchPad\\n  }\\n\\n  /**\\n   * Modifiers\\n   */\\n  modifier onlyAdmin() { // Is Admin?\\n    require(_admin == msg.sender);\\n    _;\\n  }\\n\\n  modifier hasPreSale1ContractNotYetSet() { // Has preSale1 Contract set?\\n    require(_hasPreSale1ContractNotYetSet);\\n    _;\\n  }\\n\\n  modifier hasPreSale2ContractNotYetSet() { // Has preSale2 Contract set?\\n    require(_hasPreSale2ContractNotYetSet);\\n    _;\\n  }\\n\\n  modifier isPreSale1Contract() { // Is preSale1 the contract that is currently interact with this contract?\\n    require(msg.sender == _preSale1Contract);\\n    _;\\n  }\\n\\n  modifier isPreSale2Contract() { // Is preSale2 the contract that is currently interact with this contract?\\n    require(msg.sender == _preSale2Contract);\\n    _;\\n  }\\n\\n  modifier whenPaused() { // Is pause?\\n    require(_isPaused, \\\"Pausable: not paused Erc20\\\");\\n    _;\\n  }\\n\\n  modifier whenNotPaused() { // Is not pause? \\n    require(!_isPaused, \\\"Pausable: paused Erc20\\\");\\n    _;\\n  }\\n\\n  // Transfer ownernship\\n  function transferOwnership(address payable admin) external onlyAdmin {\\n    require(admin != address(0), \\\"Zero address\\\");\\n    _admin = admin;\\n  }\\n\\n  /**\\n   * Update external contract functions\\n   */\\n  function setPreSale1ContractNotYetSet(address preSale1Contract) external onlyAdmin hasPreSale1ContractNotYetSet {\\n    require(preSale1Contract != address(0), \\\"Zero address\\\");\\n    _preSale1Contract = preSale1Contract;\\n    _hasPreSale1ContractNotYetSet = false;\\n  }\\n\\n  function setPreSale2ContractNotYetSet(address preSale2Contract) external onlyAdmin hasPreSale2ContractNotYetSet {\\n    require(preSale2Contract != address(0), \\\"Zero address\\\");\\n    _preSale2Contract = preSale2Contract;\\n    _hasPreSale2ContractNotYetSet = false;\\n  }\\n\\n  /**\\n   * ERC20 functions\\n   */\\n  function totalSupply() public view override returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  function balanceOf(address account) external override view returns (uint){\\n    return _balances[account];\\n  }\\n\\n  function transfer(address recipient, uint amount) external virtual override returns (bool){\\n    _transfer(msg.sender, recipient, amount);\\n    return true;\\n  }\\n\\n  function allowance(address owner, address spender) external virtual override view returns (uint){\\n    return _allowances[owner][spender];\\n  }\\n\\n  function approve(address spender, uint amount) external virtual override returns (bool){\\n    _approve(msg.sender, spender, amount);\\n    return true;\\n  }\\n\\n  function transferFrom(address sender, address recipient, uint amount) external virtual override returns (bool) {\\n    _transfer(sender, recipient, amount);\\n    _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {ERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   */\\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\n    _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\\n    return true;\\n  }\\n\\n  /**\\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n   *\\n   * This is an alternative to {approve} that can be used as a mitigation for\\n   * problems described in {ERC20-approve}.\\n   *\\n   * Emits an {Approval} event indicating the updated allowance.\\n   *\\n   * Requirements:\\n   *\\n   * - `spender` cannot be the zero address.\\n   * - `spender` must have allowance for the caller of at least\\n   * `subtractedValue`.\\n   */\\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\n    _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\\n    return true;\\n  }\\n\\n  function _transfer(address sender, address recipient, uint amount ) internal virtual {\\n    require(!_isPaused, \\\"ERC20Pausable: token transfer while paused\\\");\\n    require(!_isPausedAddress[sender], \\\"ERC20Pausable: token transfer while paused on address\\\");\\n    require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n    require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n    require(recipient != address(this), \\\"ERC20: transfer to the token contract address\\\");\\n\\n    _balances[sender] = _balances[sender].sub(amount);\\n    _balances[recipient] = _balances[recipient].add(amount);\\n    emit Transfer(sender, recipient, amount);\\n  }\\n\\n  function _approve(address owner, address spender, uint amount) internal virtual {\\n    require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n    require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n    _allowances[owner][spender] = amount;\\n    emit Approval(owner, spender, amount);\\n  }\\n\\n  /**\\n   * External contract transfer functions\\n   */\\n  // Allow preSale1 external contract to trigger transfer function\\n  function transferPresale1(address recipient, uint amount) external isPreSale1Contract returns (bool) {\\n    require(_preSale1AmountCap.sub(amount) \\u003e= 0, \\u0027No more amount allocates for preSale1\\u0027);\\n    _preSale1AmountCap = _preSale1AmountCap.sub(amount);\\n    _transfer(address(this), recipient, amount);\\n    return true;\\n  }\\n\\n  // Allow preSale2 external contract to trigger transfer function\\n  function transferPresale2(address recipient, uint amount) external isPreSale2Contract returns (bool) {\\n    require(_preSale2AmountCap.sub(amount) \\u003e= 0,  \\u0027No more amount allocates for preSale2\\u0027);\\n    _preSale2AmountCap = _preSale2AmountCap.sub(amount);\\n    _transfer(address(this), recipient, amount);\\n    return true;\\n  }\\n\\n  /**\\n   * Local contract categories transfer function\\n   */\\n  function transferLocalCategories() external {\\n    for (uint i = 0; i \\u003c _categories.length; i++) {\\n      address categoryAddress = _categoriesAddress[_categories[i]];\\n\\n      for (uint y = 0; y \\u003c _dates.length; y++) {\\n        uint amount = _coinDistribution[_categories[i]][_dates[y]];\\n\\n        if(block.timestamp \\u003e= _dates[y]) {\\n          bool hasDistributed = _coinDistributionStatus[_categories[i]][_dates[y]][amount];\\n\\n          if(!hasDistributed){\\n            bool canTransfer = _categoriesTransfer(categoryAddress, amount, _categories[i]);\\n\\n            if(canTransfer){\\n              _coinDistributionStatus[_categories[i]][_dates[y]][amount] = true;\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  function _categoriesTransfer(address recipient, uint amount, string memory categories) private returns (bool){\\n    if (_categoriesAmountCap[categories] \\u003c amount) {\\n      emit OutOfMoney(categories);\\n      return false;\\n    }\\n    _categoriesAmountCap[categories] = _categoriesAmountCap[categories].sub(amount);\\n    _transfer(address(this), recipient, amount);\\n    return true;\\n  }\\n\\n  function pause() external onlyAdmin whenNotPaused {\\n    _isPaused = true;\\n  }\\n\\n  function unpause() external onlyAdmin whenPaused {\\n    _isPaused = false;\\n  }\\n\\n  function pausedAddress(address sender) external onlyAdmin {\\n    _isPausedAddress[sender] = true;\\n  }\\n\\n  function unPausedAddress(address sender) external onlyAdmin {\\n    _isPausedAddress[sender] = false;\\n  }\\n\\n  receive() external payable {\\n    revert();\\n  }\\n}\\n\"},\"SafeMath.sol\":{\"content\":\"pragma solidity 0.6.0;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n\\n  /**\\n  * @dev Multiplies two numbers, throws on overflow.\\n  */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n    c = a * b;\\n    assert(c / a == b);\\n    return c;\\n  }\\n\\n  /**\\n  * @dev Integer division of two numbers, truncating the quotient.\\n  */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // assert(b \\u003e 0); // Solidity automatically throws when dividing by 0\\n    // uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn\\u0027t hold\\n    return a / b;\\n  }\\n\\n  /**\\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\\n  */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    assert(b \\u003c= a);\\n    return a - b;\\n  }\\n\\n  /**\\n  * @dev Adds two numbers, throws on overflow.\\n  */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    c = a + b;\\n    assert(c \\u003e= a);\\n    return c;\\n  }\\n}\"}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"advisorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ecosystemFundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gameplayAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakingAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"}],\"name\":\"OutOfMoney\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_Apr_16_2022\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Apr_16_2023\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Apr_16_2024\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Apr_16_2025\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Apr_16_2026\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Aug_16_2022\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Aug_16_2023\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Aug_16_2024\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Aug_16_2025\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Aug_16_2026\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Dec_16_2021\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Dec_16_2022\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Dec_16_2023\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Dec_16_2024\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Dec_16_2025\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Feb_16_2022\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Feb_16_2023\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Feb_16_2024\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Feb_16_2025\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Feb_16_2026\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jan_16_2022\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jan_16_2023\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jan_16_2024\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jan_16_2025\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jan_16_2026\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jul_16_2022\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jul_16_2023\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jul_16_2024\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jul_16_2025\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jul_16_2026\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jun_16_2022\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jun_16_2023\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jun_16_2024\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jun_16_2025\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Jun_16_2026\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Mar_16_2022\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Mar_16_2023\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Mar_16_2024\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Mar_16_2025\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Mar_16_2026\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_May_16_2022\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_May_16_2023\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_May_16_2024\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_May_16_2025\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_May_16_2026\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Nov_16_2021\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Nov_16_2022\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Nov_16_2023\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Nov_16_2024\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Nov_16_2025\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Oct_16_2021\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Oct_16_2022\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Oct_16_2023\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Oct_16_2024\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Oct_16_2025\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Sep_16_2021_1800\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Sep_16_2022\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Sep_16_2023\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Sep_16_2024\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Sep_16_2025\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Sep_23_2021\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Sep_30_2021\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_admin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_categories\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"_categoriesAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"_categoriesAmountCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_coinDistribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_coinDistributionStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_dates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_hasPreSale1ContractNotYetSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_hasPreSale2ContractNotYetSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_isPausedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_preSale1Contract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_preSale2Contract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"pausedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"preSale1Contract\",\"type\":\"address\"}],\"name\":\"setPreSale1ContractNotYetSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"preSale2Contract\",\"type\":\"address\"}],\"name\":\"setPreSale2ContractNotYetSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferLocalCategories\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferPresale1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferPresale2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"unPausedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MoniToken", "CompilerVersion": "v0.6.0+commit.26b70077", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000015b3a05ac648881deb1fd1156ef5f0c65f46aceb000000000000000000000000a2867165f5b864cd5ac08938f0afe1c69e5da2040000000000000000000000000210a14e724c7a6769c393853be6cc0f1dff268700000000000000000000000072dc63161173b7371fbddaf3a67a6a990b5c993800000000000000000000000093f2440be026f37b7cd3fc50281253a54daaa7b9000000000000000000000000a8541e4d7b548b8ab05db477f1c14442d4931a99", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://be714fc0f1ea58e95f536d4d8b096a8da12a138d0887940e55185957da8fdd15"}