{"SourceCode": "// SPDX-License-Identifier: Unlicensed\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\nabstract contract ReentrancyGuard {\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    modifier nonReentrant() {\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n        _status = _ENTERED;\r\n        _;\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract BITSPICE_DEPOSIT_CONTRACT is ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n\r\n    address private _owner;\r\n    uint256 public _usdt_to_bts_price;\r\n    IERC20 public btsToken;\r\n    IERC20 public usdtToken;\r\n\r\n    event Deposit(address indexed account, uint256 value);\r\n    event Withdraw(address indexed account, uint256 value);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == _owner, \"Sender is not the owner.\");\r\n        _;\r\n    }\r\n\r\n    constructor(IERC20 btsAddress,IERC20 USDTAddress) {\r\n        btsToken = btsAddress;\r\n        usdtToken = USDTAddress;\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function depositUSDT(uint256 amount) public payable nonReentrant {\r\n        require(amount > 0, \"Amount should be greater than 0.\");\r\n        require(usdtToken.allowance(msg.sender, address(this)) >= amount, \"Allowance: Not enough USDT allowance to spend.\");\r\n        usdtToken.transferFrom(msg.sender, address(this), amount);\r\n\r\n        uint256 usdts = amount*1000000000000000000;\r\n        uint256 totalBTS = usdts/_usdt_to_bts_price;\r\n        btsToken.transfer(msg.sender, totalBTS);\r\n        emit Deposit(msg.sender, amount);\r\n    }\r\n\r\n    function depositBTS(uint256 amount) public payable nonReentrant {\r\n        require(amount > 0, \"Amount should be greater than 0.\");\r\n        require(btsToken.allowance(msg.sender, address(this)) >= amount, \"Allowance: Not enough USDT allowance to spend.\");\r\n        btsToken.transferFrom(msg.sender, address(this), amount);\r\n        emit Deposit(msg.sender, amount);\r\n    }\r\n\r\n    function withdrawUSDT(address account, uint256 amount) public onlyOwner {\r\n        usdtToken.transfer(account, amount);\r\n        emit Withdraw(account, amount);\r\n    }\r\n\r\n    function withdrawBTS(address account, uint256 amount) public onlyOwner {\r\n        btsToken.transfer(account, amount);\r\n        emit Withdraw(account, amount);\r\n    }\r\n\r\n    function usdt_to_bts_price(uint256 amount) public onlyOwner {\r\n        _usdt_to_bts_price = amount;\r\n    }\r\n\r\n    function changeAdmin(address admin) public onlyOwner {\r\n        _owner = admin;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"btsAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"USDTAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_usdt_to_bts_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"btsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositBTS\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositUSDT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"usdt_to_bts_price\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawBTS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "BITSPICE_DEPOSIT_CONTRACT", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000f9727041955f9311f4230ca6039b0eb60614608c00000000000000000000000055d398326f99059ff775485246999027b3197955", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://47c1d8ae187e8b8e6267c86d50232cd15e85f44a3491d5af3071a826437f9a8e"}