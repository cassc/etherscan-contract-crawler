{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2021-11-30\r\n*/\r\n\r\n/**\r\n *Submitted for verification at BscScan.com on 2021-11-29\r\n*/\r\n\r\npragma solidity 0.8.6;\r\n\r\n/**\r\n * BEP20 standard interface.\r\n */\r\ninterface IBEP20 {\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  function decimals() external view returns (uint8);\r\n\r\n  function symbol() external view returns (string memory);\r\n\r\n  function name() external view returns (string memory);\r\n\r\n  function getOwner() external view returns (address);\r\n\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  function allowance(address _owner, address spender)\r\n    external\r\n    view\r\n    returns (uint256);\r\n\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  function transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/* Life should be easy and no scam. */\r\ncontract Exactly is IBEP20 {\r\n  address private constant DEAD = 0x000000000000000000000000000000000000dEaD;\r\n\r\n  address private market = 0xb62b3910f949ACc9726932F3c6ae85683eaDDe1e;\r\n  address private dev = 0x53F37945efF809ada4375FE777140e96aC9aCaDa;\r\n\r\n  string private constant NAME = \"Exactly\";\r\n  string private constant SYMBOL = \"Exactly\";\r\n  uint8 private constant DECIMAL = 9;\r\n\r\n  mapping(address => uint256) private _balances;\r\n  mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n  bool private inSwap;\r\n  modifier swapping() {\r\n    inSwap = true;\r\n    _;\r\n    inSwap = false;\r\n  }\r\n\r\n  constructor() {\r\n    _balances[market] = 3_000_000 * (10**DECIMAL);\r\n    _balances[dev] = 3_000_000 * (10**DECIMAL);\r\n    _balances[msg.sender] = 94_000_000 *(10**DECIMAL);\r\n    emit Transfer(address(0), msg.sender,_balances[msg.sender] );\r\n    emit Transfer(address(0), dev, _balances[dev]);\r\n    emit Transfer(address(0), market, _balances[market]);\r\n  }\r\n\r\n  function totalSupply() external view override returns (uint256) {\r\n    return 100_000_000 * (10**DECIMAL);\r\n  }\r\n\r\n  function decimals() external pure override returns (uint8) {\r\n    return DECIMAL;\r\n  }\r\n\r\n  function symbol() external pure override returns (string memory) {\r\n    return SYMBOL;\r\n  }\r\n\r\n  function name() external pure override returns (string memory) {\r\n    return NAME;\r\n  }\r\n\r\n  function getOwner() external view override returns (address) {\r\n    return DEAD;\r\n  }\r\n\r\n  function balanceOf(address account) public view override returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  function allowance(address holder, address spender)\r\n    external\r\n    view\r\n    override\r\n    returns (uint256)\r\n  {\r\n    return _allowances[holder][spender];\r\n  }\r\n\r\n  function approve(address spender, uint256 amount)\r\n    public\r\n    override\r\n    returns (bool)\r\n  {\r\n    _allowances[msg.sender][spender] = amount;\r\n    emit Approval(msg.sender, spender, amount);\r\n    return true;\r\n  }\r\n\r\n  function _approve(address spender, uint256 amount) private {\r\n    _allowances[msg.sender][spender] = amount;\r\n    emit Approval(msg.sender, spender, amount);\r\n  }\r\n\r\n  function transfer(address recipient, uint256 amount)\r\n    external\r\n    override\r\n    returns (bool)\r\n  {\r\n    return _transferFrom(msg.sender, recipient, amount);\r\n  }\r\n\r\n  function transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external override returns (bool) {\r\n    uint256 currentAllowance = _allowances[sender][msg.sender];\r\n    require(\r\n      currentAllowance >= amount,\r\n      \"ERC20: transfer amount exceeds allowance\"\r\n    );\r\n    _allowances[sender][msg.sender] = currentAllowance - amount;\r\n\r\n    return _transferFrom(sender, recipient, amount);\r\n  }\r\n\r\n  function _transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) internal swapping returns (bool) {\r\n    require(_balances[sender] >= amount, \"Insufficient Balance\");\r\n    _balances[sender] = _balances[sender] - amount;\r\n    _balances[recipient] = _balances[recipient] + amount;\r\n    emit Transfer(sender, recipient, amount);\r\n    return true;\r\n  }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Exactly", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://9c7aa839659e67d8158068709072fd1d325c46fb219b64317ac9f25a0a0db5f4"}