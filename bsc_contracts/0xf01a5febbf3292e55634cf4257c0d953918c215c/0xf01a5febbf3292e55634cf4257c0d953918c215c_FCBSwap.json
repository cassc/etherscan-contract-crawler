{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.18;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n   \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nabstract contract Ownable {\r\n    address internal owner;\r\n    mapping(address => bool) internal isOperator;\r\n    constructor(){\r\n        isOperator[msg.sender] = true;\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOperator() {\r\n        require(isOperator[msg.sender] == true, \"Operator: caller is not the operator\");\r\n        _;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    function setOperator(address op, bool bl) public onlyOwner() {\r\n        isOperator[op] = bl;\r\n    }\r\n}\r\n\r\nabstract contract Receiver is Ownable {\r\n    address internal receiver;\r\n    function setAddress(address r) public onlyOwner() {\r\n        receiver = r;\r\n    }\r\n}\r\n\r\ncontract FCBSwap is Receiver {\r\n    address constant public people = 0x2c44b726ADF1963cA47Af88B284C06f30380fC78;\r\n    address constant public fcb = 0xBBEF4Afa1b9d218B2b5c541F72BB6e598C9d690d;\r\n    \r\n    uint256 public price;\r\n\r\n    constructor(){\r\n        price = 10_000;\r\n        receiver = 0x869980C0Fcb6Acd632DB3C0b2a8Bcc6aA2279042;\r\n        isOperator[0x45BC97f45e4379AEc33bd3C5b5cbBa718710ae29] = true;\r\n    }\r\n\r\n    function setPrice(uint256 p) public onlyOperator() {\r\n        price = p; // fcb:people * 10_000 \r\n    }\r\n\r\n    function fcbSwap(uint256 amount) public returns(bool) {\r\n        IERC20(people).transferFrom(msg.sender, address(this), amount); // need approve to this address firstly\r\n        IERC20(people).transfer(receiver, IERC20(people).balanceOf(address(this)));\r\n        IERC20(fcb).transfer(msg.sender, amount * 10_000 / price);\r\n        return true;\r\n    }\r\n\r\n    function withDraw(address token, uint256 amount) public onlyOwner() {\r\n        IERC20(token).transfer(receiver, amount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"fcb\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fcbSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"people\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"r\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"op\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"bl\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"p\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "FCBSwap", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://33a954fbd63556ad6cd8aa9a2f4dc92ae5aa83d2a2a00b6d2de2c7c90fc61888"}