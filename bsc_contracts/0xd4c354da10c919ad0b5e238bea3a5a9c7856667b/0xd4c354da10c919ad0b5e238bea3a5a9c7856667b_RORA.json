{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.6;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    event TransferFrom(address indexed from, address indexed to, uint256 value);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface IUniswapV2Pair {\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    function name() external pure returns (string memory);\r\n\r\n    function symbol() external pure returns (string memory);\r\n\r\n    function decimals() external pure returns (uint8);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    function factory() external view returns (address);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function getReserves()\r\n    external\r\n    view\r\n    returns (\r\n        uint112 reserve0,\r\n        uint112 reserve1,\r\n        uint32 blockTimestampLast\r\n    );\r\n}\r\n\r\n//\u62bd\u8c61\u5408\u7ea6Ownable,\u7ee7\u627fContext\r\nabstract contract Ownable {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() {\r\n        _transferOwnership(msg.sender);\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"new owner is 0\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n//RORA ERC20 \u667a\u80fd\u5408\u7ea6\r\ncontract RORA is IERC20, Ownable {\r\n    string private _name; //\u4ee3\u5e01\u540d\u79f0\r\n    string private _symbol; //\u4ee3\u5e01\u7b26\u5408\r\n    uint256 private _decimals; //\u5c0f\u6570\u70b9\u4f4d\u6570\r\n    uint256 private immutable _tTotal; //Rora Pro\u4ee3\u5e01\u53d1\u884c\u603b\u91cf\r\n    mapping(address => uint256) private _balanceOf; //\u4ee3\u5e01\u5b58\u653emap\r\n    mapping(address => mapping(address => uint256)) private _allowances; //\u6388\u6743\u8f6c\u8d26\u989d\u5ea6\r\n\r\n    IUniswapV2Pair pair;\r\n    address public pancakeV2Pair;\r\n    address public USDT = address(0x55d398326f99059fF775485246999027B3197955); // USDT\u4ee3\u5e01\u5b58\u653e\u5730\u5740\r\n\r\n    mapping(address => bool) private _whiteList; //\u767d\u540d\u5355\r\n    mapping(address => bool) private _escapeFee; //\u514d\u624b\u7eed\u8d39\r\n    mapping(address => address) public inviter; //\u9080\u8bf7\u4eba\r\n\r\n    mapping(uint256 => uint256) public _randomUsd; // \u652f\u4ed8\u91d1\u989d Usd\r\n    mapping(uint256 => uint256) public _randomRora; // \u652f\u4ed8\u91d1\u989d Rora\r\n\r\n    bool public _releaseControl = true;\r\n\r\n    // \u7814\u53d1\r\n    address[] public _researchArray;\r\n    mapping(address => uint256) public _researchMap;\r\n    // Play\r\n    address[] public _playArray;\r\n    mapping(address => uint256) public _playMap;\r\n    // \u52df\u8d44\r\n    address[] public _placementArray;\r\n    mapping(address => uint256) public _placementMap;\r\n\r\n    // LP Active \u5730\u5740\u6c60\r\n    address[] public _activeArray;\r\n    mapping(address => uint256) public _activeMap;\r\n\r\n    // \u8d28\u62bc\u6316\u77ff\r\n    address[] public _pledgeArray;\r\n    mapping(address => uint256) public _pledgeMap;\r\n    uint256 public _totalPledge; // \u603b\u8d28\u62bc\u91cf\r\n\r\n    address public constant _zeroAddress = address(0x0); //\u96f6\u5730\u5740\uff0c\u7279\u6b8a\u7528\u9014\r\n    address public _mintControlAddress = address(0x9E5712ad09408caA834378c5C0147C475E442541); // \u6316\u77ff\u63a7\u5236\u5730\u5740\r\n\r\n    address public constant _blackHoleAddress = address(0x000000000000000000000000000000000000dEaD); // \u9ed1\u6d1e\u9500\u6bc1\u5730\u5740\r\n    address public constant _airdropAddress = 0x97EB01b32A4E0d9B050d5b9e1a1D7eA57FE9Aec8; // \u6781\u5149\u7a7a\u6295\u5730\u5740(\u5408\u7ea6\u5730\u5740)\r\n    address public constant _researchAddress = address(0xF35Ac799011c6c654f0f0f72409f7479C819B238); // \u6781\u5149\u7814\u53d1\u5730\u5740\r\n    address public constant _playAddress = address(0xc56b3A97c6DE904703dc8AB08e4F2352be806307); // \u6781\u5149play\u5730\u5740\r\n    address public constant _placementAddress = address(0x2FFdeB97eD1D2E4Aea946e8c3BBc576477c868AB); // \u6781\u5149\u52df\u8d44\u5730\u5740\r\n    address public constant _liquidityAddress = address(0xdc7344Ae381AcBB70bc401CBa03678AD104189E3); // \u6781\u5149LP\u5730\u5740\r\n    address public constant _nftAddress = address(0xB2eB1CCe8dFdF49dF6e69E59faaC3D18661D4283); // \u6781\u5149NFT\u5730\u5740\r\n\r\n    address public constant _rewardAddress = address(0x116f869918AD0BC4C4bDa553e3a8A75bd9905553); // \u5956\u52b1\u5730\u5740\r\n    address public constant _platformGovernanceAddress = 0x97EB01b32A4E0d9B050d5b9e1a1D7eA57FE9Aec8; //\u5e73\u53f0\u6cbb\u7406\u6280\u672f\u7ef4\u62a4\u5730\u5740(\u5408\u7ea6\u5730\u5740)\r\n\r\n    uint256 public constant _destroyFee = 4; // \u9500\u6bc1\u6bd4\u4f8b\r\n    uint256 public constant _rewardFee = 3; // \u5956\u52b1\u6bd4\u4f8b\r\n    uint256 public constant _platformFee = 2; // \u7ef4\u62a4\u6bd4\u4f8b\r\n    uint256 public constant _backFee = 1; // \u56de\u6d41\u6bd4\u4f8b\r\n\r\n    event BuyNFTCard(uint256 amountRora, uint256 amountUsd, uint256 random);\r\n\r\n    constructor(address tokenOwner) {\r\n        _name = \"Rora Pro\";\r\n        _symbol = \"RoraPro\"; //\u4ee3\u5e01\u7b80\u5199\u7b26\u53f7\u9700\u8981\u4ea7\u54c1\u63d0\u4f9b\r\n        _decimals = 18;\r\n        _tTotal = 1000000 * 10**_decimals;\r\n        // \u7a7a\u6295\r\n        _balanceOf[_airdropAddress] = 10000 * 10**_decimals;\r\n        emit Transfer(_zeroAddress, _airdropAddress, 10000 * 10**_decimals);\r\n        // \u7814\u53d1\r\n        _balanceOf[_researchAddress] = 20000 * 10**_decimals;\r\n        emit Transfer(_zeroAddress, _researchAddress, 20000 * 10**_decimals);\r\n        // Play\r\n        _balanceOf[_playAddress] = 30000 * 10**_decimals;\r\n        emit Transfer(_zeroAddress, _playAddress, 30000 * 10**_decimals);\r\n        // \u52df\u8d44\r\n        _balanceOf[_placementAddress] = 40000 * 10**_decimals;\r\n        emit Transfer(_zeroAddress, _placementAddress, 40000 * 10**_decimals);\r\n        // LP 10 \u4e07\r\n        _balanceOf[_liquidityAddress] = 10 * 10000 * 10**_decimals;\r\n        emit Transfer(_zeroAddress, _liquidityAddress, 10 * 10000 * 10**_decimals);\r\n        // NFT 30 \u4e07\r\n        _balanceOf[_nftAddress] = 30 * 10000 * 10**_decimals;\r\n        emit Transfer(_zeroAddress, _nftAddress, 20 * 10000 * 10**_decimals);\r\n        // \u9500\u6bc1 50 \u4e07\r\n        _balanceOf[_blackHoleAddress] = 50 * 10000 * 10**_decimals;\r\n        // _tTotal-=_balanceOf[_blackHoleAddress];\r\n        emit Transfer(_zeroAddress, _blackHoleAddress, 50 * 10000 * 10**_decimals);\r\n        //\u8f6c\u79fb\u6240\u6709\u6743\r\n        transferOwnership(tokenOwner);\r\n    }\r\n\r\n    modifier onlyController() {\r\n        require(msg.sender == _mintControlAddress, \"permission denied\");\r\n        _;\r\n    }\r\n\r\n    // \u91ca\u653e\u5f00\u5173, \u62e5\u6709\u63a7\u5236\u6743\u53ef\u5207\u6362\r\n    function releaseControl() public onlyOwner returns (bool) {\r\n        if (_releaseControl) {\r\n            _releaseControl = false;\r\n        } else {\r\n            _releaseControl = true;\r\n        }\r\n        return _releaseControl;\r\n    }\r\n\r\n    // \u7814\u53d1 \u589e\u52a0\u7ebf\u6027\u91ca\u653e\r\n    function researchAdd(address research, uint256 amounts) public onlyController returns (bool) {\r\n        require(research != address(0x0), \"address = 0\");\r\n        require(amounts != 0, \"amounts = 0\");\r\n        // \u628a map \u503c \u8bbe\u7f6e\u4e3a1 \u53ef\u4ee5\u4e0d\u53d1, \u4e14\u907f\u514d\u91cd\u590d\u6dfb\u52a0\r\n        if (_researchMap[research] == 0) {\r\n            _researchArray.push(research);\r\n        }\r\n        _researchMap[research] = amounts;\r\n        return true;\r\n    }\r\n\r\n    // \u7814\u53d1 \u7ebf\u6027\u91ca\u653e\r\n    function researchRelease() public onlyController returns (bool) {\r\n        if (_releaseControl && _balanceOf[_researchAddress] > 0) {\r\n            for (uint256 i = 0; i < _researchArray.length; i++) {\r\n                address research = _researchArray[i];\r\n                uint256 amount = _researchMap[research];\r\n                if (amount > 1) {\r\n                    _balanceOf[_researchAddress] = _balanceOf[_researchAddress] - amount;\r\n                    _balanceOf[research] = _balanceOf[research] + amount;\r\n                    emit Transfer(_researchAddress, research, amount);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Play \u589e\u52a0\u7ebf\u6027\u91ca\u653e\r\n    function playAdd(address play, uint256 amounts) public onlyController returns (bool) {\r\n        require(play != address(0x0), \"address = 0\");\r\n        require(amounts != 0, \"amounts = 0\");\r\n        // \u628a map \u503c \u8bbe\u7f6e\u4e3a1 \u53ef\u4ee5\u4e0d\u53d1, \u4e14\u907f\u514d\u91cd\u590d\u6dfb\u52a0\r\n        if (_playMap[play] == 0) {\r\n            _playArray.push(play);\r\n        }\r\n        _playMap[play] = amounts;\r\n        return true;\r\n    }\r\n\r\n    // Play \u7ebf\u6027\u91ca\u653e\r\n    function playRelease() public onlyController returns (bool) {\r\n        if (_releaseControl && _balanceOf[_playAddress] > 0) {\r\n            for (uint256 i = 0; i < _playArray.length; i++) {\r\n                address play = _playArray[i];\r\n                uint256 amount = _playMap[play];\r\n                if (amount > 1) {\r\n                    _balanceOf[_playAddress] = _balanceOf[_playAddress] - amount;\r\n                    _balanceOf[play] = _balanceOf[play] + amount;\r\n                    emit Transfer(_playAddress, play, amount);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // \u52df\u8d44 \u589e\u52a0\u7ebf\u6027\u91ca\u653e\r\n    function placementAdd(address placement, uint256 amounts) public onlyController returns (bool) {\r\n        require(placement != address(0x0), \"address = 0\");\r\n        require(amounts != 0, \"amounts = 0\");\r\n        // \u628a map \u503c \u8bbe\u7f6e\u4e3a1 \u53ef\u4ee5\u4e0d\u53d1, \u4e14\u907f\u514d\u91cd\u590d\u6dfb\u52a0\r\n        if (_placementMap[placement] == 0) {\r\n            _placementArray.push(placement);\r\n        }\r\n        _placementMap[placement] = amounts;\r\n        return true;\r\n    }\r\n\r\n    // \u52df\u8d44 \u7ebf\u6027\u91ca\u653e\r\n    function placementRelease() public onlyController returns (bool) {\r\n        if (_releaseControl && _balanceOf[_placementAddress] > 0) {\r\n            for (uint256 i = 0; i < _placementArray.length; i++) {\r\n                address placement = _placementArray[i];\r\n                uint256 amount = _placementMap[placement];\r\n                if (amount > 1) {\r\n                    _balanceOf[_placementAddress] = _balanceOf[_placementAddress] - amount;\r\n                    _balanceOf[placement] = _balanceOf[placement] + amount;\r\n                    emit Transfer(_placementAddress, placement, amount);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // \u8d2d\u4e70\u5361\u7247\u4e0b\u5355\r\n    function buyNFTCard(\r\n        uint256 amountRora,\r\n        uint256 amountUsd,\r\n        uint256 random\r\n    ) public returns (bool) {\r\n        require(amountRora > 10**9, \"amountRora <= 1 GWei\");\r\n        require(amountUsd > 10**9, \"amountUsd <= 1 GWei\");\r\n        uint256 balance = _balanceOf[msg.sender];\r\n        require(balance >= amountRora, \"balance is not enough\");\r\n\r\n        bool success = IERC20(USDT).transferFrom(address(msg.sender), _platformGovernanceAddress, amountUsd);\r\n        // bool success = IERC20(USDT).transfer(_platformGovernanceAddress, amountUsd);\r\n        require(success,  \"USDT transfer is failed\");\r\n        if (success) {\r\n            _balanceOf[msg.sender] = _balanceOf[msg.sender] - amountRora;\r\n            _balanceOf[_blackHoleAddress] = _balanceOf[_blackHoleAddress] + amountRora;\r\n            emit Transfer(msg.sender, _blackHoleAddress, amountRora);\r\n            _randomRora[random] = amountRora;\r\n            _randomUsd[random] = amountUsd;\r\n            emit BuyNFTCard(amountRora, amountUsd, random);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function getRandomAmount(uint256 random) public view returns (uint256 rora, uint256 usd) {\r\n        return (_randomRora[random], _randomUsd[random]);\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint256) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balanceOf[account];\r\n    }\r\n\r\n    //\u8f6c\u8d26\u4ea4\u6613\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        if (msg.sender == pancakeV2Pair) {\r\n            // pancake \u5408\u7ea6\r\n            _transfer(msg.sender, recipient, amount);\r\n        } else {\r\n            //\u666e\u901a\u8d26\u53f7\r\n            _tokenOnlyTransfer(msg.sender, recipient, amount);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    //\u6388\u6743\u8f6c\u8d26\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        require(_allowances[sender][msg.sender] >= amount, \"exceeds allowance\"); //\u5224\u65ad\u6388\u6743\u989d\u5ea6\u662f\u5426\u591f\r\n        require(_balanceOf[sender] >= amount, \"exceeds allowance\"); //\u5224\u65adsender\u8d26\u6237\u4f59\u989d\u662f\u5426\u591f\r\n        if (recipient == pancakeV2Pair) {\r\n            _transfer(sender, recipient, amount);\r\n        } else {\r\n            _tokenOnlyTransfer(sender, recipient, amount);\r\n        }\r\n\r\n        _allowances[sender][msg.sender] = _allowances[sender][msg.sender] - amount;\r\n        emit TransferFrom(sender, recipient, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        require(amount > 0, \"amount <= 0\");\r\n        require(_balanceOf[msg.sender] >= amount, \"exceeds allowance\");\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        require(_allowances[msg.sender][spender] >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender] - subtractedValue);\r\n        return true;\r\n    }\r\n\r\n    //to recieve ETH from pancakeV2Router when swaping\r\n    receive() external payable {}\r\n\r\n    function claimTokens() public onlyOwner {\r\n        payable(owner()).transfer(address(this).balance);\r\n    }\r\n\r\n    //pancake\u4ea4\u6613\u8f6c\u8d26\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) private {\r\n        // \u5224\u65ad\u53d1\u9001\u3001\u63a5\u6536\u8d26\u53f7\u662f\u5426\u4e3a0,\u8f6c\u8d26\u6570\u91cf\u662f\u5426\u5927\u4e8e0\uff0c\u53d1\u9001\u8d26\u53f7\u4ee3\u5e01\u6301\u6709\u6570\u91cf\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u8f6c\u8d26\u6570\u91cf\r\n        require(!_whiteList[from], \"ERC20: transfer from the illegal address\");\r\n        require(!_whiteList[to], \"ERC20: transfer from the illegal address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 10**9, \"amount <= 1 GWei\");\r\n        require(_balanceOf[from] >= amount, \"exceeds allowance\");\r\n\r\n        // \u4fdd\u5b58\u5e95\u6c60\u6d3b\u8dc3\u5730\u5740\r\n        if (_activeMap[from] == 0 && from != pancakeV2Pair) {\r\n            _activeMap[from] = 1;\r\n            _activeArray.push(from);\r\n        }\r\n        if (_activeMap[to] == 0 && to != pancakeV2Pair) {\r\n            _activeMap[to] = 1;\r\n            _activeArray.push(to);\r\n        }\r\n\r\n        _balanceOf[from] = _balanceOf[from] - amount;\r\n        uint256 recipientRate = 90;\r\n        // destroy less than 10000 \u901a\u7f29\u81f310000\r\n        if (_escapeFee[from] || _escapeFee[to] || balanceOf(_blackHoleAddress) >= 990000 * 10**_decimals) {\r\n            recipientRate = 100;\r\n        } else {\r\n            // \u9500\u6bc1 40%\r\n            _takeTransfer(from, _blackHoleAddress, (amount * _destroyFee) / 100);\r\n            // _tTotal = _tTotal - ((amount * _destroyFee) / 100);\r\n            // \u5956\u52b1 30%\r\n            _takeTransfer(from, _rewardAddress, (amount * _rewardFee) / 100);\r\n            //  \u6280\u672f\u7ef4\u62a4\r\n            _takeTransfer(from, _platformGovernanceAddress, (amount * _platformFee) / 100);\r\n            // \u56de\u6d41\u5e95\u6c60\r\n            _takeTransfer(from, _platformGovernanceAddress, (amount * _backFee) / 100);\r\n        }\r\n        _balanceOf[to] = _balanceOf[to] + ((amount * recipientRate) / 100);\r\n        emit Transfer(from, to, (amount * recipientRate) / 100);\r\n    }\r\n\r\n    //\u666e\u901a\u4ea4\u6613\u8f6c\u8d26\r\n\r\n    function _tokenOnlyTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) private {\r\n        // \u5224\u65ad\u53d1\u9001\u3001\u63a5\u6536\u8d26\u53f7\u662f\u5426\u4e3a0,\u8f6c\u8d26\u6570\u91cf\u662f\u5426\u5927\u4e8e0\uff0c\u53d1\u9001\u8d26\u53f7\u4ee3\u5e01\u6301\u6709\u6570\u91cf\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u8f6c\u8d26\u6570\u91cf\r\n        require(!_whiteList[from], \"ERC20: transfer from the illegal address\");\r\n        require(!_whiteList[to], \"ERC20: transfer from the illegal address\");\r\n        require(amount > 10**9, \"amount <= 1 GWei\");\r\n        require(_balanceOf[from] >= amount, \"exceeds allowance\");\r\n\r\n        if(amount > 100000000000000){\r\n            if (inviter[to] == address(0)) {\r\n                inviter[to] = from;\r\n            }\r\n        }\r\n\r\n        _balanceOf[from] = _balanceOf[from] - amount;\r\n        uint256 recipientRate = 90;\r\n        // destroy less than 10000 \u901a\u7f29\u81f310000\r\n        if (_escapeFee[from] || _escapeFee[to] || balanceOf(_blackHoleAddress) >= 990000 * 10**_decimals) {\r\n            recipientRate = 100;\r\n        } else {\r\n            // \u9500\u6bc1 40%\r\n            _takeTransfer(from, _blackHoleAddress, (amount * _destroyFee) / 100);\r\n            // _tTotal = _tTotal - ((amount * _destroyFee) / 100);\r\n            // \u5956\u52b1 30%\r\n            _takeTransfer(from, _rewardAddress, (amount * _rewardFee) / 100);\r\n            // \u6280\u672f\u7ef4\u62a4\r\n            _takeTransfer(from, _platformGovernanceAddress, (amount * _platformFee) / 100);\r\n            // \u56de\u6d41\u5e95\u6c60\r\n            _takeTransfer(from, _platformGovernanceAddress, (amount * _backFee) / 100);\r\n        }\r\n        _balanceOf[to] = _balanceOf[to] + ((amount * recipientRate) / 100);\r\n        emit Transfer(from, to, (amount * recipientRate) / 100);\r\n    }\r\n\r\n    function _takeTransfer(\r\n        address sender,\r\n        address to,\r\n        uint256 tAmount\r\n    ) private {\r\n        _balanceOf[to] = _balanceOf[to] + tAmount;\r\n        emit Transfer(sender, to, tAmount);\r\n    }\r\n\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) private {\r\n        require(owner != address(0), \"owner:0\");\r\n        require(spender != address(0), \"spender:0\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    // NFT Reward Release , NFT \u5956\u52b1\u53d1\u653e\r\n    function nftRewardRelease(\r\n        address to,\r\n        uint256 amount,\r\n        uint256 invite\r\n    ) public onlyController returns (bool) {\r\n        require(to != address(0x0), \"zero address\");\r\n        require(amount > 0, \"amount must be greater than zero\");\r\n        require(_balanceOf[_nftAddress] >= amount + invite, \"exceeds allowance\"); // \u5956\u6c60\u4f59\u989d\u4e0d\u8db3\r\n\r\n        uint256 amountTotal = amount + invite; // \u4e2a\u4eba\u5956\u52b1 + \u56e2\u961f\u5956\u52b1\r\n\r\n        _balanceOf[to] = _balanceOf[to] + amountTotal; //\u589e\u52a0\u4e2a\u4eba\u4f59\u989d\r\n        _balanceOf[_nftAddress] = _balanceOf[_nftAddress] - amountTotal; // \u6263\u9664\u5956\u6c60\u4f59\u989d\r\n\r\n        emit Transfer(_nftAddress, to, amount);\r\n        if (invite > 0) {\r\n            emit Transfer(_nftAddress, to, invite);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // LP \u6316\u77ff\u5956\u52b1\u8bbe\u7f6e, \u4e1a\u52a1\u5c42\u63a7\u5236begin, end \u53d8\u91cf, \u9632\u6b62\u65b9\u6cd5\u6267\u884c\u5931\u8d25\r\n    function liquidityMintAll(uint256 begin, uint256 end) public onlyController returns (bool) {\r\n        uint256 dayMint = 200 * 10**_decimals;\r\n        if (_balanceOf[_liquidityAddress] >= dayMint) {\r\n            pair = IUniswapV2Pair(pancakeV2Pair);\r\n\r\n            uint256 lpTotal = pair.totalSupply();\r\n\r\n            for (uint256 i = begin; i < end; i++) {\r\n                address mint = _activeArray[i];\r\n                uint256 weight = pair.balanceOf(mint);\r\n                if (weight > 0) {\r\n                    uint256 amount = (dayMint * weight) / lpTotal;\r\n                    uint256 totalReceive = _activeMap[mint];\r\n                    if (totalReceive == 1) {\r\n                        _activeMap[mint] = amount;\r\n                    } else {\r\n                        _activeMap[mint] = amount + totalReceive;\r\n                    }\r\n                    _balanceOf[_liquidityAddress] = _balanceOf[_liquidityAddress] - amount;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // LP \u6316\u77ff\u5956\u52b1\u63d0\u53d6\r\n    function liquidityMint() public returns (bool) {\r\n        uint256 totalReceive = _activeMap[msg.sender];\r\n        if (totalReceive > 1) {\r\n            _activeMap[msg.sender] = 1;\r\n            _balanceOf[msg.sender] = _balanceOf[msg.sender] + totalReceive;\r\n            emit Transfer(_liquidityAddress, msg.sender, totalReceive);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // \u6dfb\u52a0\u8d28\u62bc\u5956\u52b1\u6570\u636e\r\n    function pledgeAdd(address pledge, uint256 amounts) public onlyController returns (bool) {\r\n        require(pledge != address(0x0), \"address = 0\");\r\n        require(amounts > 0, \"amounts = 0\");\r\n\r\n        // \u628a map \u503c \u8bbe\u7f6e\u4e3a1 \u53ef\u4ee5\u4e0d\u53d1, \u4e14\u907f\u514d\u91cd\u590d\u6dfb\u52a0\r\n        if (_pledgeMap[pledge] == 0) {\r\n            _pledgeArray.push(pledge);\r\n        }\r\n        _pledgeMap[pledge] = amounts;\r\n        return true;\r\n    }\r\n\r\n    // \u6dfb\u52a0\u603b\u8d28\u62bc\u91cf\r\n    function pledgeTotal(uint256 amounts) public onlyController returns (bool) {\r\n        require(amounts > 0, \"amounts = 0\");\r\n        _totalPledge = amounts;\r\n        return true;\r\n    }\r\n\r\n    function pledgeRelease() public onlyController returns (bool) {\r\n        // \u5956\u52b1\u6570\u91cf\u4e3a\u5956\u52b1\u5730\u5740\u4f59\u989d\r\n        uint256 reward = _balanceOf[_rewardAddress];\r\n        for (uint256 i = 0; i < _pledgeArray.length; i++) {\r\n            address receiver = _pledgeArray[i];\r\n            if (reward > 0 && _totalPledge > 0) {\r\n                uint256 pledge = _pledgeMap[receiver];\r\n                if (pledge > 1) {\r\n                    uint256 amount = (reward * pledge) / _totalPledge;\r\n                    _balanceOf[receiver] = _balanceOf[receiver] + amount;\r\n                    emit Transfer(_rewardAddress, receiver, amount);\r\n                }\r\n            }\r\n        }\r\n        _balanceOf[_rewardAddress] = 0;\r\n        return true;\r\n    }\r\n\r\n    function changeRouter(address router) public onlyOwner {\r\n        require(router != address(0), \"ERC20: transfer router to the zero address\");\r\n        pancakeV2Pair = router;\r\n    }\r\n\r\n    function changeMintControl(address control) public onlyOwner {\r\n        require(control != address(0), \"ERC20: transfer control to the zero address\");\r\n        _mintControlAddress = control;\r\n    }\r\n\r\n    function setWhiteList(address whiteList) public onlyOwner {\r\n        _whiteList[whiteList] = true;\r\n    }\r\n\r\n    function unSetWhiteList(address whiteList) public onlyOwner {\r\n        _whiteList[whiteList] = false;\r\n    }\r\n\r\n    function setEscapeFee(address escape) public onlyOwner {\r\n        _escapeFee[escape] = true;\r\n    }\r\n\r\n    function unSetEscapeFee(address escape) public onlyOwner {\r\n        _escapeFee[escape] = false;\r\n    }\r\n\r\n    function setInviter(address _account,address _inviter) public onlyOwner {\r\n        inviter[_account] = _inviter;\r\n    }\r\n\r\n    function setUSDTAddress(address _account) public onlyOwner {\r\n        USDT = _account;\r\n    }\r\n\r\n    function getInviter(address account) public view returns (address) {\r\n        return inviter[account];\r\n    }\r\n\r\n    function getLpClaim(address account) public view returns (uint256) {\r\n        return _activeMap[account];\r\n    }\r\n\r\n    function getActiveLength() public view onlyController returns (uint256) {\r\n        return _activeArray.length;\r\n    }\r\n\r\n    // \u53ef\u7ef4\u62a4\u6d3b\u8dc3\u6570\u7ec4\u5730\u5740\r\n    function addActiveArray(uint256 index, address account) public onlyController {\r\n         _activeArray[index] = account;\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountRora\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUsd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"random\",\"type\":\"uint256\"}],\"name\":\"BuyNFTCard\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferFrom\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_activeArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_activeMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_airdropAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_backFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_blackHoleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_destroyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_liquidityAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_mintControlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_placementAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_placementArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_placementMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_platformGovernanceAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_playAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_playArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_playMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_pledgeArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_pledgeMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_randomRora\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_randomUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_releaseControl\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_researchAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_researchArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_researchMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rewardAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_rewardFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalPledge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_zeroAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addActiveArray\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountRora\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountUsd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"random\",\"type\":\"uint256\"}],\"name\":\"buyNFTCard\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"control\",\"type\":\"address\"}],\"name\":\"changeMintControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"changeRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getInviter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLpClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"random\",\"type\":\"uint256\"}],\"name\":\"getRandomAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rora\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"inviter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"begin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"liquidityMintAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"invite\",\"type\":\"uint256\"}],\"name\":\"nftRewardRelease\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pancakeV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"placement\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"}],\"name\":\"placementAdd\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"placementRelease\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"play\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"}],\"name\":\"playAdd\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"playRelease\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pledge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"}],\"name\":\"pledgeAdd\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pledgeRelease\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"}],\"name\":\"pledgeTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseControl\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"research\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"}],\"name\":\"researchAdd\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"researchRelease\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"escape\",\"type\":\"address\"}],\"name\":\"setEscapeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_inviter\",\"type\":\"address\"}],\"name\":\"setInviter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"setUSDTAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whiteList\",\"type\":\"address\"}],\"name\":\"setWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"escape\",\"type\":\"address\"}],\"name\":\"unSetEscapeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whiteList\",\"type\":\"address\"}],\"name\":\"unSetWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "RORA", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "000000000000000000000000228d42c270618b6c99464fd26f34ac956dc75161", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://fc82573b05d9c17108ada1c2e90905d3f62ce19d6d38b8f1625e4d6253f4753d"}