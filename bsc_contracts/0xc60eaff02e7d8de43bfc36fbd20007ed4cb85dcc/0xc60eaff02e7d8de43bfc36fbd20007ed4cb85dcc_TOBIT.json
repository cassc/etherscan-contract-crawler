{"SourceCode": "pragma solidity ^0.4.16;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address _owner) external constant returns (uint256 balance);\r\n\r\n    function transfer(address _to, uint256 _value) external returns (bool success);\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\r\n\r\n    function approve(address _spender, uint256 _value) external returns (bool success);\r\n\r\n    function allowance(address _owner, address _spender) external constant returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract TOBIT is IERC20 {\r\n    address private creator = msg.sender;\r\n\r\n    uint256 public totalSupply;\r\n    string  public name;\r\n    uint8   public decimals;\r\n    string  public symbol;\r\n\r\n    address public destroyAddr = 0x0000000000000000000000000000000000000000;\r\n    address public dividendAddr = 0xF5A514821649cfDCF7D78250d5145a76fDea4B2d;\r\n    address public capitalPoolAddr = 0xd1b719EE3fE97C6d9E41385E73Eef28814079D64;\r\n\r\n    uint256[4] public rate;\r\n    uint256[9] public agentRate;\r\n\r\n    mapping(address => address) public playerAgent;\r\n\r\n    address emptyAddr = 0x0000000000000000000000000000000000000000;\r\n\r\n    address public routerAddr;\r\n\r\n    constructor (uint256 initialAmount, string tokenName, uint8 decimalUnits, string tokenSymbol) public {\r\n        totalSupply = initialAmount * 10 ** uint256(decimalUnits);\r\n        balances[msg.sender] = totalSupply;\r\n\r\n        name = tokenName;\r\n        decimals = decimalUnits;\r\n        symbol = tokenSymbol;\r\n\r\n        rate[0] = 2;\r\n        rate[1] = 2;\r\n        rate[2] = 3;\r\n        rate[3] = 8;\r\n\r\n        agentRate[0] = 25;\r\n        agentRate[1] = 15;\r\n        agentRate[2] = 12;\r\n        agentRate[3] = 8;\r\n        agentRate[4] = 8;\r\n        agentRate[5] = 8;\r\n        agentRate[6] = 8;\r\n        agentRate[7] = 8;\r\n        agentRate[8] = 8;\r\n    }\r\n\r\n    function setRouter(address _routerAddr) public {\r\n        require(msg.sender == creator);\r\n        routerAddr = _routerAddr;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        require(balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]);\r\n\r\n        register(msg.sender, _to);\r\n        uint256 lastValue = economicModel(msg.sender, _to, _value);\r\n\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += lastValue;\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0);\r\n\r\n        register(msg.sender, _to);\r\n        uint256 lastValue = economicModel(_from, _to, _value);\r\n\r\n        balances[_to] += lastValue;\r\n        balances[_from] -= _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function register(address _from, address _to) private {\r\n        if (playerAgent[_to] == emptyAddr) {\r\n            playerAgent[_to] = _from;\r\n        }\r\n    }\r\n\r\n    function economicModel(address _from, address _to, uint256 _value) private returns (uint256 trueValue){\r\n        if (_to == routerAddr || _from == routerAddr) {\r\n            balances[destroyAddr] += _value * rate[0] / 100;\r\n            balances[dividendAddr] += _value * rate[1] / 100;\r\n            balances[capitalPoolAddr] += _value * rate[2] / 100;\r\n\r\n            bonusToAgents(_from, _value * rate[3] / 100);\r\n\r\n            return _value * 85 / 100;\r\n        } else {\r\n            return _value;\r\n        }\r\n    }\r\n\r\n    function bonusToAgents(address _from, uint256 _value) private {\r\n        uint actualValue;\r\n        address myAddr = _from;\r\n        for (uint i = 0; i < 9; i++) {\r\n            actualValue = _value * agentRate[i] / 100;\r\n            if (playerAgent[myAddr] != emptyAddr) {\r\n                balances[playerAgent[myAddr]] += actualValue;\r\n                myAddr = playerAgent[myAddr];\r\n            } else {\r\n                balances[destroyAddr] += actualValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success)\r\n    {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function pathTransferSame(address[] _addrAll, uint256 _value) public returns (uint256 _addrs){\r\n        require(msg.sender == creator);\r\n        uint256 m;\r\n        for (uint256 i = 0; i < _addrAll.length; i++) {\r\n            m++;\r\n            balances[_addrAll[i]] += _value;\r\n            balances[msg.sender] -= _value;\r\n        }\r\n        return m;\r\n    }\r\n\r\n    function pathTransferDif(address[] _addrAll, uint256[] _values) public returns (uint256 _addrs){\r\n        require(msg.sender == creator);\r\n        uint256 m;\r\n        for (uint256 i = 0; i < _addrAll.length; i++) {\r\n            m++;\r\n            balances[_addrAll[i]] += _values[i];\r\n            balances[msg.sender] -= _values[i];\r\n        }\r\n        return m;\r\n    }\r\n\r\n    function init(uint256 amount) public {\r\n        require(msg.sender == creator);\r\n        balances[msg.sender] += amount;\r\n    }\r\n\r\n    function burn(uint256 amount) public {\r\n        require(msg.sender == creator);\r\n        balances[msg.sender] -= amount;\r\n    }\r\n\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping(address => uint256)) allowed;\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrAll\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"pathTransferSame\",\"outputs\":[{\"name\":\"_addrs\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"routerAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"capitalPoolAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dividendAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrAll\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"pathTransferDif\",\"outputs\":[{\"name\":\"_addrs\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_routerAddr\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agentRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"destroyAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialAmount\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "TOBIT", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000a0eebb000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000005544f4249540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005544f424954000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://29bfd69ead1b33971847a92c537ecc359f1c1ace1e04e673a578eca5a22a691b"}