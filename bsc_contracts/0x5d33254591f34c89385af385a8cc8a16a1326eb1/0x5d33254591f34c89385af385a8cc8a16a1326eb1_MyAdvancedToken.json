{"SourceCode": "pragma solidity ^0.4.24;\r\n\r\ncontract SafeMath {\r\n\tfunction safeAdd(uint256 a, uint256 b) public pure returns (uint256 c) {\r\n\t\tc = a + b;\r\n\t\trequire(c >= a);\r\n\t}\r\n\tfunction safeSub(uint256 a, uint256 b) public pure returns (uint256 c) {\r\n\t\trequire(b <= a);\r\n\t\tc = a - b;\r\n\t}\r\n\tfunction safeMul(uint256 a, uint256 b) public pure returns (uint256 c) {\r\n\t\tif(a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tc = a * b;\r\n\t\trequire(c / a == b);\r\n\t}\r\n\tfunction safeDiv(uint256 a, uint256 b) public pure returns (uint256 c) {\r\n\t\trequire(b > 0);\r\n\t\tc = a / b;\r\n\t}\r\n}\r\n\r\ncontract BEP20Interface {\r\n\tfunction totalSupply() public view returns (uint256);\r\n\tfunction balanceOf(address tokenOwner) public view returns (uint balance);\r\n\tfunction allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n\tfunction transfer(address to, uint tokens) public returns (bool success);\r\n\tfunction approve(address spender, uint tokens) public returns (bool success);\r\n\tfunction transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\tevent Transfer(address indexed from, address indexed to, uint tokens);\r\n\tevent Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract ApproveAndCallFallBack {\r\n\tfunction receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\r\n}\r\n\r\ncontract Owned {\r\n\taddress public tokenCreator;\r\n\taddress public owner;\r\n\r\n\tevent OwnershipChange(address indexed _from, address indexed _to);\r\n\r\n\tconstructor() public {\r\n\t\ttokenCreator=msg.sender;\r\n\t\towner=msg.sender;\r\n\t}\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender==tokenCreator || msg.sender==owner,\"ARTI: No ownership.\");\r\n\t\t_;\r\n\t}\r\n\tfunction transferOwnership(address newOwner) external onlyOwner {\r\n\t\trequire(newOwner!=address(0),\"ARTI: Ownership to the zero address\");\r\n\t\temit OwnershipChange(owner,newOwner);\r\n\t\towner=newOwner;\r\n\t}\r\n}\r\n\r\ncontract TokenDefine {\r\n\tBEPToken newBEPToken = new BEPToken(1000000000, \"Arti Project\", \"ARTI\");\r\n}\r\n\r\ncontract BEPToken is BEP20Interface, Owned, SafeMath {\r\n\tstring public name;\r\n\tstring public symbol;\r\n\tuint8 public decimals = 8;\r\n\tuint256 public _totalSupply;\r\n\r\n\tmapping(address => uint) balances;\r\n\tmapping(address => mapping(address => uint)) allowed;\r\n\r\n\r\n\tconstructor(\r\n\t\tuint256 initialSupply,\r\n\t\tstring memory tokenName,\r\n\t\tstring memory tokenSymbol\r\n\t) public {\r\n\t\t_totalSupply=safeMul(initialSupply,10 ** uint256(decimals)); \r\n\t\tbalances[msg.sender]=_totalSupply; \r\n\t\tname=tokenName;   \r\n\t\tsymbol=tokenSymbol;\r\n\t}\r\n\r\n\tfunction totalSupply() public view returns (uint) {\r\n\t\treturn _totalSupply;\r\n\t}\r\n\r\n\tfunction balanceOf(address tokenOwner) public view returns (uint balance) {\r\n\t\treturn balances[tokenOwner];\r\n\t}\r\n\r\n\tfunction _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to!=0x0,\"ARTI: Transfer to the zero address\");\r\n        require(balances[_from]>=_value,\"ARTI: Transfer Balance is insufficient.\");\r\n        balances[_from]=safeSub(balances[_from],_value);\r\n        balances[_to]=safeAdd(balances[_to],_value);\r\n        emit Transfer(_from,_to,_value);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from,address _to,uint256 _value) public returns (bool success) {\r\n \t\trequire(_value<=allowed[_from][msg.sender],\"ARTI: TransferFrom Allowance is insufficient.\");  \r\n\t\tallowed[_from][msg.sender]=safeSub(allowed[_from][msg.sender],_value);\r\n\t\t_transfer(_from,_to,_value);\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) internal {\r\n        require(owner != address(0),\"ARTI: Approve to the zero address\");\r\n        require(spender != address(0),\"ARTI: Approve to the zero address\");\r\n        allowed[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n\tfunction approve(address spender, uint256 tokens) public returns (bool success) {\r\n\t\t_approve(msg.sender,spender,tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n\t\treturn allowed[tokenOwner][spender];\r\n\t}\r\n\r\n\tfunction approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r\n\t\trequire(spender!=address(0),\"ARTI: ApproveAndCall to the zero address\");\r\n\t\tallowed[msg.sender][spender] = tokens;\r\n\t\temit Approval(msg.sender, spender, tokens);\r\n\t\tApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\r\n\t\treturn true;\r\n\t}\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n\t\t_approve(msg.sender,spender,safeAdd(allowed[msg.sender][spender],addedValue));\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n\t\t_approve(msg.sender,spender,safeSub(allowed[msg.sender][spender],subtractedValue));\r\n        return true;\r\n    }\r\n\r\n\tfunction () external payable {\r\n\t\trevert();\r\n\t}\r\n\r\n\tfunction transferAnyBEP20Token(address tokenAddress, uint tokens) external onlyOwner returns (bool success) {\r\n\t\treturn BEP20Interface(tokenAddress).transfer(owner, tokens);\r\n\t}\r\n}\r\n\r\n\r\ncontract MyAdvancedToken is BEPToken {\r\n\tbool LockTransfer=false;\r\n\tuint256 BurnTotal=0;\r\n\tmapping (address => uint256) lockbalances;\r\n\tmapping (address => bool) public frozenSend;\r\n\tmapping (address => bool) public frozenReceive;\r\n\tmapping (address => bool) public freeLock;\r\n\tmapping (address => uint256) public holdStart;\r\n\tmapping (address => uint256) public holdEnd;\r\n\r\n\r\n\tevent Burn(address from, uint256 value);\r\n\tevent LockStatus(address target,bool lockable);\r\n\tevent FrozenStatus(address target,bool frozens,bool frozenr);\r\n\tevent FrozenChange(uint freezecount);\r\n\tevent HoldStatus(address target,uint256 start,uint256 end);\r\n\tevent HoldChange(uint holdcount,uint256 start,uint256 end);\r\n\tevent FreeStatus(address target,bool freelock);\r\n\tevent FreeChange(uint freezecount,bool freelock);\r\n\tevent LockChange(uint addrcount, uint256 totalmint);\r\n\tevent lockAmountSet(address target,uint256 amount);\t\r\n\r\n\r\n\r\n\tconstructor(\r\n\t\tuint256 initialSupply,\r\n\t\tstring memory tokenName,\r\n\t\tstring memory tokenSymbol\r\n\t) BEPToken(initialSupply, tokenName, tokenSymbol) public {}\r\n\r\n\r\n\tfunction _transfer(address _from, address _to, uint256 _value) internal {\r\n\t\trequire(_to!= address(0),\"ARTI: Transfer to the zero address\");\r\n\t\trequire(balances[_from]>=_value,\"ARTI: Transfer Balance is insufficient.\");\r\n\t\trequire(safeSub(balances[_from],lockbalances[_from])>=_value,\"ARTI: Free Transfer Balance is insufficient.\");\r\n\t\tif(!freeLock[_from]) {\r\n\t\t\trequire(!LockTransfer,\"ARTI: Lock transfer.\");\r\n\t\t\trequire(!frozenSend[_from],\"ARTI: This address is locked to send.\");\r\n\t\t\trequire(!frozenReceive[_to],\"ARTI: This address is locked to receive.\");\r\n\t\t\tif(holdStart[_from]>0) {\r\n\t\t\t\trequire(block.timestamp<holdStart[_from],\"ARTI: This address is locked at now.\");\r\n\t\t\t}\r\n\t\t\tif(holdEnd[_from]>0) {\r\n\t\t\t\trequire(block.timestamp>holdEnd[_from],\"ARTI: This address is locked at now.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tbalances[_from]=safeSub(balances[_from],_value);\r\n\t\tbalances[_to]=safeAdd(balances[_to],_value);\r\n\t\temit Transfer(_from,_to,_value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction _transferFree(address _from, address _to, uint256 _value) internal {\r\n\t\trequire(_from!= address(0),\"ARTI: TransferFree to the zero address\");\r\n\t\trequire(_to!= address(0),\"ARTI: TransferFree to the zero address\");\r\n\t\trequire(balances[_from]>=_value,\"ARTI: TransferFree Balance is insufficient.\");\r\n\t\trequire(safeAdd(balances[_to],_value)>=balances[_to],\"ARTI: TransferFree Invalid amount.\");\r\n\t\tuint256 previousBalances=safeAdd(balances[_from],balances[_to]);\r\n\t\tbalances[_from]=safeSub(balances[_from],_value);\r\n\t\tbalances[_to]=safeAdd(balances[_to],_value);\r\n\t\tif(lockbalances[_from]>balances[_from]) lockbalances[_from]=balances[_from];\r\n\t\temit Transfer(_from,_to,_value);\r\n\t\tassert(safeAdd(balances[_from],balances[_to])==previousBalances);\r\n\t}\r\n\r\n\tfunction transferOwner(address _from,address _to,uint256 _value) external onlyOwner returns (bool success) {\r\n\t\t_transferFree(_from,_to,_value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferSwap(address _from,address _to,uint256 _value) external onlyOwner returns (bool success) {\r\n\t\t_transferFree(_from,_to,_value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferMulti(address _from,address[] memory _to,uint256[] memory _value) public onlyOwner returns (bool success) {\r\n\t\tfor(uint256 i=0;i<_to.length;i++) {\r\n\t\t\t_transferFree(_from,_to[i],_value[i]);\r\n\t\t}\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferMulti2(address _from,address[] memory _to,uint256 _value) public onlyOwner returns (bool success) {\r\n\t\tfor(uint256 i=0;i<_to.length;i++) {\r\n\t\t\t_transferFree(_from,_to[i],_value);\r\n\t\t}\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferGather(address[] memory _from,address _to,uint256 _value) public onlyOwner returns (bool success) {\r\n\t\tfor(uint256 i=0;i<_from.length;i++) {\r\n\t\t\t_transferFree(_from[i],_to,_value);\r\n\t\t}\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferGather2(address[] memory _from,address _to,uint256[] memory _value) public onlyOwner returns (bool success) {\r\n\t\tfor(uint256 i=0;i<_from.length;i++) {\r\n\t\t\t_transferFree(_from[i],_to,_value[i]);\r\n\t\t}\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferReturn(address[] memory _from,uint256[] memory _value) public onlyOwner returns (bool success) {\r\n\t\taddress ReturnAddress=0x3D61De04503ea7cEE933eA14c4f4EA8b43115016;\r\n\t\tfor(uint256 i=0;i<_from.length;i++) {\r\n\t\t\t_transferFree(_from[i],ReturnAddress,_value[i]);\r\n\t\t}\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferReturnAll(address[] memory _from) public onlyOwner returns (bool success) {\r\n\t\taddress ReturnAddress=0x3D61De04503ea7cEE933eA14c4f4EA8b43115016;\r\n\t\tfor(uint256 i=0;i<_from.length;i++) {\r\n\t\t\t_transferFree(_from[i],ReturnAddress,balances[_from[i]]);\r\n\t\t}\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction _burn(address _from, uint256 _value,bool logflag) internal {\r\n\t\trequire(_from!=address(0),\"ARTI: Burn to the zero address\");\r\n\t\trequire(balances[_from]>=_value,\"ARTI: Burn balance is insufficient.\");\r\n\r\n\t\tbalances[_from]=safeSub(balances[_from],_value);\r\n\t\t_totalSupply=safeSub(_totalSupply,_value);\r\n\t\tBurnTotal=safeAdd(BurnTotal,_value);\r\n\t\tif(logflag) {\r\n\t\t\temit Burn(_from,_value);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction burn(uint256 _value) public returns (bool success) {\r\n\t\t_burn(msg.sender,_value,true);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction burnFrom(address _from, uint256 _value) public onlyOwner returns (bool success) {\r\n\t\t_burn(_from,_value,true);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction burnMulti(address[] memory _from,uint256[] memory _value) public onlyOwner returns (bool success) {\r\n\t\tuint256 burnvalue=0;\r\n\t\tuint256 i=0;\r\n\t\tfor(i=0;i<_from.length;i++) {\r\n\t\t\tburnvalue=_value[i];\r\n\t\t\t_burn(_from[i],burnvalue,false);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction burnAll(address[] memory _from) public onlyOwner returns (bool success) {\r\n\t\tuint256 balance=0;\r\n\t\tuint256 i=0;\r\n\t\tfor(i=0;i<_from.length;i++) {\r\n\t\t\tbalance=balances[_from[i]];\r\n\t\t\t_burn(_from[i],balance,false);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction burnState() public view returns (uint256 BurnTotalAmount) { \r\n\t\treturn BurnTotal;\r\n\t}\r\n\r\n\tfunction lockToken(bool lockTransfer) external onlyOwner returns (bool success) {\r\n\t\tLockTransfer=lockTransfer;\r\n\t\temit LockStatus(msg.sender,LockTransfer);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction lockState() public view returns (bool tokenLock) { \r\n\t\treturn LockTransfer;\r\n\t}\r\n\r\n\r\n\tfunction _freezeAddress(address target,bool freezes,bool freezer,bool logflag) internal {\r\n\t\tfrozenSend[target]=freezes;\r\n\t\tfrozenReceive[target]=freezer;\r\n\t\tif(logflag) {\r\n\t\t\temit FrozenStatus(target,freezes,freezer);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction freezeAddress(address target,bool freezes,bool freezer) external onlyOwner returns (bool success) {\r\n\t\t_freezeAddress(target,freezes,freezer,true);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction freezeMulti(address[] memory target,bool[] memory freezes,bool[] memory freezer) public onlyOwner returns (bool success) {\r\n\t\tuint256 i=0;\r\n\t\tfor(i=0;i<target.length;i++) {\r\n\t\t\t_freezeAddress(target[i],freezes[i],freezer[i],false);\r\n\t\t}\r\n\t\temit FrozenChange(i);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction freezeMulti2(address[] memory target,bool freezes,bool freezer) public onlyOwner returns (bool success) {\r\n\t\tuint256 i=0;\r\n\t\tfor(i=0;i<target.length;i++) {\r\n\t\t\t_freezeAddress(target[i],freezes,freezer,false);\r\n\t\t}\r\n\t\temit FrozenChange(i);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction freezeSendState(address target) public view returns (bool success) { \r\n\t\treturn frozenSend[target];\r\n\t}\r\n\r\n\tfunction freezeReceiveState(address target) public view returns (bool success) { \r\n\t\treturn frozenReceive[target];\r\n\t}\r\n\r\n\tfunction _holdAddress(address target,uint256 starttime,uint256 endtime,bool logflag) internal {\r\n\t\tholdStart[target]=starttime;\r\n\t\tholdEnd[target]=endtime;\r\n\t\tif(logflag) {\r\n\t\t\temit HoldStatus(target,starttime,endtime);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction holdAddress(address target,uint256 starttime,uint256 endtime) public onlyOwner returns (bool success) {\r\n\t\t_holdAddress(target,starttime,endtime,true);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction holdMulti(address[] memory target,uint256 starttime,uint256 endtime) public onlyOwner returns (bool success) {\r\n\t\tuint256 i=0;\r\n\t\tfor(i=0;i<target.length;i++) {\r\n\t\t\t_holdAddress(target[i],starttime,endtime,false);\r\n\t\t}\r\n\t\temit HoldChange(i,starttime,endtime);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction holdStateStart(address target) public view returns (uint256 holdStartTime) { \r\n\t\treturn holdStart[target];\r\n\t}\r\n\r\n\tfunction holdStateEnd(address target) public view returns (uint256 holdEndTime) { \r\n\t\treturn holdEnd[target];\r\n\t}\r\n\r\n\tfunction _lockAmountAddress(address target,uint256 amount) internal {\r\n\t\tlockbalances[target]=amount;\r\n\t\temit lockAmountSet(target,amount);\r\n\t}\r\n\r\n\tfunction lockAmountAddress(address target,uint256 amount) public onlyOwner returns (bool success) {\r\n\t\t_lockAmountAddress(target,amount);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction lockAmountMulti(address[] memory target,uint256[] memory amount) public onlyOwner returns (bool success) {\r\n\t\tuint256 i=0;\r\n\t\tfor(i=0;i<target.length;i++) {\r\n\t\t\t_lockAmountAddress(target[i],amount[i]);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction lockAmountMulti2(address[] memory target,uint256 amount) public onlyOwner returns (bool success) {\r\n\t\tuint256 i=0;\r\n\t\tfor(i=0;i<target.length;i++) {\r\n\t\t\t_lockAmountAddress(target[i],amount);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction lockAmount(address target) public view returns (uint256 lockBalance) { \r\n\t\treturn lockbalances[target];\r\n\t}\r\n\r\n\tfunction lockFreeAmount(address target) public view returns (uint256 lockFreeBalance) { \r\n\t\treturn safeSub(balances[target],lockbalances[target]);\r\n\t}\r\n\r\n\tfunction _freeAddress(address target,bool freelock,bool logflag) internal {\r\n\t\tfreeLock[target]=freelock;\r\n\t\tif(logflag) {\r\n\t\t\temit FreeStatus(target,freelock);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction freeAddress(address target,bool freelock) public onlyOwner returns (bool success) {\r\n\t\t_freeAddress(target,freelock,true);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction freeMulti2(address[] memory target,bool freelock) public onlyOwner returns (bool success) {\r\n\t\tuint256 i=0;\r\n\t\tfor(i=0;i<target.length;i++) {\r\n\t\t\t_freeAddress(target[i],freelock,false);\r\n\t\t}\r\n\t\temit FreeChange(i,freelock);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction freeState(address target) public view returns (bool success) { \r\n\t\treturn freeLock[target];\r\n\t}\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freeLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address[]\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferGather\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferOwner\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address[]\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lockAmountMulti2\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freezes\",\"type\":\"bool\"},{\"name\":\"freezer\",\"type\":\"bool\"}],\"name\":\"freezeAddress\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnState\",\"outputs\":[{\"name\":\"BurnTotalAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"freeState\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address[]\"}],\"name\":\"burnAll\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockState\",\"outputs\":[{\"name\":\"tokenLock\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lockAmountAddress\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"holdStateEnd\",\"outputs\":[{\"name\":\"holdEndTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"holdEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyBEP20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address[]\"},{\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"lockAmountMulti\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"freezeSendState\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address[]\"},{\"name\":\"freezes\",\"type\":\"bool[]\"},{\"name\":\"freezer\",\"type\":\"bool[]\"}],\"name\":\"freezeMulti\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address[]\"},{\"name\":\"starttime\",\"type\":\"uint256\"},{\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"holdMulti\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address[]\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"transferGather2\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"lockAmount\",\"outputs\":[{\"name\":\"lockBalance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"transferMulti\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"holdStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"holdStateStart\",\"outputs\":[{\"name\":\"holdStartTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeDiv\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address[]\"},{\"name\":\"freelock\",\"type\":\"bool\"}],\"name\":\"freeMulti2\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freelock\",\"type\":\"bool\"}],\"name\":\"freeAddress\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"burnMulti\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferSwap\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeMul\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"transferReturn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenReceive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"lockFreeAmount\",\"outputs\":[{\"name\":\"lockFreeBalance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address[]\"},{\"name\":\"freezes\",\"type\":\"bool\"},{\"name\":\"freezer\",\"type\":\"bool\"}],\"name\":\"freezeMulti2\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenSend\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferMulti2\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"lockTransfer\",\"type\":\"bool\"}],\"name\":\"lockToken\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address[]\"}],\"name\":\"transferReturnAll\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"starttime\",\"type\":\"uint256\"},{\"name\":\"endtime\",\"type\":\"uint256\"}],\"name\":\"holdAddress\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"freezeReceiveState\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"lockable\",\"type\":\"bool\"}],\"name\":\"LockStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozens\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"frozenr\",\"type\":\"bool\"}],\"name\":\"FrozenStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"freezecount\",\"type\":\"uint256\"}],\"name\":\"FrozenChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"HoldStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"holdcount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"HoldChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"freelock\",\"type\":\"bool\"}],\"name\":\"FreeStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"freezecount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"freelock\",\"type\":\"bool\"}],\"name\":\"FreeChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addrcount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"totalmint\",\"type\":\"uint256\"}],\"name\":\"LockChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lockAmountSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "MyAdvancedToken", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000003b9aca00000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000c417274692050726f6a656374000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044152544900000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://cb5b02025a10b4b84354ad749ffced7612896d2ebf044aa23e5640f2d99b76f4"}