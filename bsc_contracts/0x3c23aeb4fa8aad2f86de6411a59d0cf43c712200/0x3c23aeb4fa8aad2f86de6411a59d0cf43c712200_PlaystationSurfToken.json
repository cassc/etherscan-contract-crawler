{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.8;\r\n\r\ncontract PlaystationSurfTokenProxy {\r\n    address public admin;\r\n    address public implementation;\r\n\r\n    event Upgraded(address indexed newImplementation);\r\n\r\n    constructor(address _implementation) public {\r\n        admin = msg.sender;\r\n        implementation = _implementation;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"Not admin\");\r\n        _;\r\n    }\r\n\r\n    function upgradeImplementation(address _newImplementation) external onlyAdmin {\r\n        require(_newImplementation != address(0), \"Invalid implementation address\");\r\n        require(_newImplementation != implementation, \"Same implementation\");\r\n\r\n        implementation = _newImplementation;\r\n\r\n        emit Upgraded(_newImplementation);\r\n    }\r\n\r\n    function recoverToken(address tokenAddress) external onlyAdmin {\r\n        require(tokenAddress != address(0), \"Invalid token address\");\r\n\r\n        // Forward the recoverToken call to the implementation contract\r\n        (bool success, ) = implementation.delegatecall(\r\n            abi.encodeWithSignature(\"recoverToken(address)\", tokenAddress)\r\n        );\r\n\r\n        require(success, \"Recover token call failed\");\r\n    }\r\n\r\n    receive() external payable {\r\n        address _impl = implementation;\r\n        require(_impl != address(0), \"Invalid implementation address\");\r\n\r\n        assembly {\r\n            let ptr := mload(0x40)\r\n            calldatacopy(ptr, 0, calldatasize())\r\n\r\n            let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)\r\n\r\n            let size := returndatasize()\r\n            returndatacopy(ptr, 0, size)\r\n\r\n            switch result\r\n            case 0 {\r\n                revert(ptr, size)\r\n            }\r\n            default {\r\n                return(ptr, size)\r\n            }\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"recoverToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PlaystationSurfTokenProxy", "CompilerVersion": "v0.6.8+commit.0bbfe453", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000937df20014742d93b796041a853e49fee084d5b9", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f4b8bba432c18e56661fc3fe7eeae13a4d9530ada0952c9fb6f3bff6c18e2349"}