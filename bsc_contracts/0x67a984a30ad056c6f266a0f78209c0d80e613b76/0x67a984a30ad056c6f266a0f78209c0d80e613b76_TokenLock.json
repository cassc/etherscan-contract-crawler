{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.18;\r\n\r\ninterface BEP20 \r\n{\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract TokenLock \r\n{\r\n    address public tokenAddress;\r\n    uint256 public lockDuration;\r\n    uint256 public lockEndTime;\r\n\r\n    mapping(address => uint256) public lockedBalances;\r\n    event TokensLocked(address indexed user, uint256 amount);\r\n    event TokensUnlocked(address indexed user, uint256 amount);\r\n\r\n\r\n    constructor() \r\n    {\r\n        tokenAddress = 0x9744B01247779C596aCFC7E5C6B963Eb7e1Be7e3;\r\n        lockDuration = 365 * 1 days;\r\n    }\r\n\r\n\r\n    function lockTokens(uint256 _amount) external \r\n    {\r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(BEP20(tokenAddress).balanceOf(msg.sender) >= _amount, \"Insufficient balance\");\r\n        BEP20(tokenAddress).transferFrom(msg.sender, address(this), _amount);\r\n        lockedBalances[msg.sender] += _amount;\r\n        if (lockEndTime < block.timestamp) \r\n        {\r\n            lockEndTime = block.timestamp + lockDuration;\r\n        }\r\n        emit TokensLocked(msg.sender, _amount);\r\n    }\r\n\r\n\r\n    function unlockTokens() external \r\n    {\r\n        require(lockedBalances[msg.sender] > 0, \"No tokens locked\");\r\n        require(block.timestamp >= lockEndTime, \"Tokens are still locked\");\r\n        uint256 amount = lockedBalances[msg.sender];\r\n        lockedBalances[msg.sender] = 0;\r\n        BEP20(tokenAddress).transfer(msg.sender, amount);\r\n        emit TokensUnlocked(msg.sender, amount);\r\n    }\r\n\r\n\r\n    function viewLockedBalance(address _user) external view returns (uint256) \r\n    {\r\n        return lockedBalances[_user];\r\n    }\r\n\r\n\r\n    function viewContractBalance() external view returns (uint256) \r\n    {\r\n        return BEP20(tokenAddress).balanceOf(address(this));\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnlocked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"lockDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"lockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"viewLockedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "TokenLock", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://dc3f3709775c5d2e84a05e849ea977edd493dc81e718934eb9c2d634ab6115af"}