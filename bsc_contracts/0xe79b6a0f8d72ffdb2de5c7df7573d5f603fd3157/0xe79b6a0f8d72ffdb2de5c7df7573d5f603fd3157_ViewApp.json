{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/contracts/Bep20/ViewApp.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.12;\\r\\n\\r\\nimport \\\"../interfaces/OwnableV2.sol\\\";\\r\\nimport \\\"../interfaces/IViewV2.sol\\\";\\r\\n\\r\\ncontract ViewApp is IViewV2, OwnableV2\\r\\n{\\r\\n    IViewV2 private viewImpliment;\\r\\n    constructor (address viewImp) {\\r\\n        viewImpliment = IViewV2(viewImp);\\r\\n    }\\r\\n/// USER\\r\\n    function isUserExist(address acc) public   override view returns(bool)\\r\\n    {\\r\\n        return viewImpliment.isUserExist(acc);\\r\\n    } \\r\\n    function isUserExistById(uint id) public   override view returns(bool) \\r\\n    {\\r\\n        return viewImpliment.isUserExistById(id);\\r\\n    } \\r\\n    function getReferalIdById(uint id) public   override view returns(uint)\\r\\n    {\\r\\n        return viewImpliment.getReferalIdById(id);\\r\\n    }\\r\\n    function getAddressById(uint id) public   override view returns (address)\\r\\n    {\\r\\n        return viewImpliment.getAddressById(id);\\r\\n    }\\r\\n    function getIdByAddress(address acc)public   override view returns(uint)\\r\\n    {\\r\\n        return viewImpliment.getIdByAddress(acc);\\r\\n    }\\r\\n    function getUser(uint id)public   override view returns(address,uint,uint,uint8,uint)\\r\\n    {\\r\\n        return viewImpliment.getUser(id);\\r\\n    }\\r\\n///\\r\\n\\r\\n/// TEAM   \\r\\n    function getRefCount(uint id, uint8 lvl) public   override view returns (uint)\\r\\n    {\\r\\n        return viewImpliment.getRefCount(id, lvl);\\r\\n    }\\r\\n    function getStatsCount(uint id) public   override view returns (uint)\\r\\n    {\\r\\n        return viewImpliment.getStatsCount(id);\\r\\n    }\\r\\n    function checkUpdate(uint id) public override view returns(bool)\\r\\n    {\\r\\n        return viewImpliment.checkUpdate(id);\\r\\n    }\\r\\n    function getLine (uint id) public override view returns (uint[] memory)\\r\\n    {\\r\\n        return viewImpliment.getLine(id);\\r\\n    }\\r\\n    function rewardPass(uint userId, uint8 lvl)public view returns(bool)\\r\\n    {\\r\\n        return viewImpliment.rewardPass(userId,lvl);\\r\\n    }\\r\\n///\\r\\n\\r\\n/// WALLET\\r\\n    function balanceOf(address account) public   override view returns (uint)\\r\\n    {\\r\\n        return viewImpliment.balanceOf(account);\\r\\n    }\\r\\n    function allowance(address owner, address spender) public   override view returns (uint)\\r\\n    {\\r\\n        return viewImpliment.allowance(owner, spender);\\r\\n    }\\r\\n///\\r\\n\\r\\n/// FROZEN\\r\\n    function getFrozenToken(address acc) public   override view returns(uint)\\r\\n    {\\r\\n        return viewImpliment.getFrozenToken(acc);\\r\\n    }\\r\\n    function getFrozenDate(address acc) public   override view returns(uint)\\r\\n    {\\r\\n        return viewImpliment.getFrozenDate(acc);\\r\\n    }\\r\\n    function balanceWithFrozen(address acc) public   override view returns(uint)\\r\\n    {\\r\\n        return viewImpliment.balanceWithFrozen(acc);\\r\\n    }\\r\\n///\\r\\n\\r\\n/// Unfrozen\\r\\n    function getCount() public  view returns (uint) {\\r\\n        return viewImpliment.getCount();\\r\\n    }\\r\\n\\r\\n    function getUnfrozenById(uint userId) public  view returns (address) {\\r\\n        return viewImpliment.getUnfrozenById(userId);\\r\\n    }\\r\\n\\r\\n    function getUnfrozenByAddress(address acc) public  view returns (bool) {\\r\\n        return viewImpliment.getUnfrozenByAddress(acc);\\r\\n    }\\r\\n\\r\\n    function getExtra(uint balance) public  view returns (uint8) {\\r\\n        return viewImpliment.getExtra(balance);\\r\\n    }\\r\\n///\\r\\n\\r\\n/// SUPPLY\\r\\n    /// Skolko est v sisteme\\r\\n    function totalSupply() public   override view returns (uint)\\r\\n    {\\r\\n        return viewImpliment.totalSupply();\\r\\n    }\\r\\n    /// Skolko mojet bit vipusheno v sistemy\\r\\n    function getEmission() public   override view returns(uint)\\r\\n    {\\r\\n        return viewImpliment.getEmission();\\r\\n    } \\r\\n///\\r\\n\\r\\n/// DEPOSITE\\r\\n    function getDeposite(address acc) public   override view returns(uint)\\r\\n    {\\r\\n        return viewImpliment.getDeposite(acc);\\r\\n    }\\r\\n    function getDepositeDate(address acc) public   override view returns(uint)\\r\\n    {\\r\\n        return viewImpliment.getDepositeDate(acc);\\r\\n    }\\r\\n    function getDepositeProfit(address acc) public   override view returns(uint)\\r\\n    {\\r\\n        return viewImpliment.getDepositeProfit(acc);\\r\\n    }\\r\\n    function getClearPercent(uint amount) public view returns(uint)\\r\\n    {\\r\\n        return viewImpliment.getClearPercent(amount);\\r\\n    }\\r\\n    function findReferalReward(uint amount, uint8 line) public view returns (uint)\\r\\n    {\\r\\n        return viewImpliment.findReferalReward(amount,line);\\r\\n    }\\r\\n///\\r\\n    function setImp(address newImp) onlyOwner public {\\r\\n        viewImpliment = IViewV2(newImp);\\r\\n    }\\r\\n}\"\r\n    },\r\n    \"contracts/contracts/interfaces/IViewV2.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n\\n\\nimport \\\"./IView.sol\\\";\\ninterface IViewV2 is IView\\n{\\n    function rewardPass(uint userId, uint8 lvl)external view returns(bool);\\n    function findReferalReward(uint amount, uint8 line) external view returns (uint);\\n    function getClearPercent(uint amount) external view returns(uint);\\n    function getCount() external  view returns (uint);\\n    function getUnfrozenById(uint userId) external  view returns (address);\\n    function getUnfrozenByAddress(address acc) external  view returns (bool);\\n    function getExtra(uint balance) external  view returns (uint8);\\n}\"\r\n    },\r\n    \"contracts/contracts/interfaces/OwnableV2.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.10;\\n\\nimport \\\"./Context.sol\\\";\\n\\nabstract contract OwnableV2 is Context\\n{\\n    address _owner;\\n    address public _newOwner;\\n    constructor()  \\n    {\\n        _owner = payable(msg.sender);\\n    }\\n\\n    modifier onlyOwner() \\n    {\\n        require(_msgSender() == _owner, \\\"Only owner\\\");\\n        _;\\n    }\\n\\n    function changeOwner(address newOwner) onlyOwner public\\n    {\\n        _newOwner = newOwner;\\n    }\\n    function confirm() public\\n    {\\n        require(_newOwner == msg.sender);\\n        _owner = _newOwner;\\n    }\\n}\\n\\n\"\r\n    },\r\n    \"contracts/contracts/interfaces/Context.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.10;\\n\\nabstract contract Context \\n{\\n    function _msgSender() internal view virtual returns (address) \\n    {\\n        return msg.sender;\\n    }\\n    function _msgData() internal view virtual returns (bytes calldata) \\n    {\\n        this; \\n        return msg.data;\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/contracts/interfaces/IView.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n\\ninterface IView \\n{\\n    function isUserExist(address acc) external view returns(bool);\\n    function isUserExistById(uint id) external view returns(bool);\\n    function getReferalIdById(uint id) external view returns(uint);\\n    function getAddressById(uint id) external view returns (address);\\n    function getIdByAddress(address acc)external view returns(uint);\\n    function getUser(uint id)external view returns(address,uint,uint,uint8,uint);\\n    function getRefCount(uint id, uint8 lvl) external view returns (uint);\\n    function getStatsCount(uint id) external view returns (uint);\\n    function checkUpdate(uint id) external view returns(bool);\\n    function getLine (uint id) external view returns (uint[] memory);\\n    function totalSupply() external view returns (uint);\\n    function getEmission() external view returns(uint);\\n    function balanceOf(address account) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n    function getFrozenToken(address acc) external view returns(uint);\\n    function getFrozenDate(address acc) external view returns(uint);\\n    function balanceWithFrozen(address acc) external view returns(uint);\\n    function getDeposite(address acc) external view returns(uint);\\n    function getDepositeDate(address acc) external view returns(uint);\\n    function getDepositeProfit(address acc) external view returns(uint);\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"viewImp\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"}],\"name\":\"balanceWithFrozen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"checkUpdate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"line\",\"type\":\"uint8\"}],\"name\":\"findReferalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAddressById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getClearPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"}],\"name\":\"getDeposite\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"}],\"name\":\"getDepositeDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"}],\"name\":\"getDepositeProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"getExtra\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"}],\"name\":\"getFrozenDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"}],\"name\":\"getFrozenToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"}],\"name\":\"getIdByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getLine\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"lvl\",\"type\":\"uint8\"}],\"name\":\"getRefCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getReferalIdById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getStatsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"}],\"name\":\"getUnfrozenByAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"}],\"name\":\"getUnfrozenById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"}],\"name\":\"isUserExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"isUserExistById\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"lvl\",\"type\":\"uint8\"}],\"name\":\"rewardPass\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImp\",\"type\":\"address\"}],\"name\":\"setImp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ViewApp", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000f5e5ca79a555fa1d93ccb5887d38ba97ec06bc18", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}