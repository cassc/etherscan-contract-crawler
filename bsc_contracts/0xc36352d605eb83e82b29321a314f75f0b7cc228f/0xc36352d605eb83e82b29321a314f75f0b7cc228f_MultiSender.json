{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n}\r\n\r\ncontract MultiSender {\r\n    address public owner;\r\n\r\n    event TokensSent(address indexed token, address indexed sender, address[] recipients, uint256[] amounts);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not the owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function multiSend(address _tokenAddress, address[] calldata _recipients, uint256[] calldata _amounts) external onlyOwner {\r\n        require(_recipients.length == _amounts.length, \"Recipients and amounts must be the same length\");\r\n\r\n        IERC20 token = IERC20(_tokenAddress);\r\n        uint256 totalAmount = 0;\r\n\r\n        for (uint256 i = 0; i < _amounts.length; i++) {\r\n            totalAmount += _amounts[i];\r\n        }\r\n\r\n        require(token.allowance(msg.sender, address(this)) >= totalAmount, \"Not enough tokens allowed for transfer\");\r\n\r\n        for (uint256 i = 0; i < _recipients.length; i++) {\r\n            require(token.transferFrom(msg.sender, _recipients[i], _amounts[i]), \"Failed to transfer tokens\");\r\n        }\r\n\r\n        emit TokensSent(_tokenAddress, msg.sender, _recipients, _amounts);\r\n    }\r\n\r\n    function multiSendSameAmount(address _tokenAddress, address[] calldata _recipients, uint256 _amount) external onlyOwner {\r\n        require(_recipients.length > 0, \"No recipients provided\");\r\n        require(_amount > 0, \"Amount must be greater than 0\");\r\n\r\n        IERC20 token = IERC20(_tokenAddress);\r\n        uint256 totalAmount = _amount * _recipients.length;\r\n\r\n        require(token.allowance(msg.sender, address(this)) >= totalAmount, \"Not enough tokens allowed for transfer\");\r\n\r\n        for (uint256 i = 0; i < _recipients.length; i++) {\r\n            require(token.transferFrom(msg.sender, _recipients[i], _amount), \"Failed to transfer tokens\");\r\n        }\r\n\r\n        uint256[] memory amounts = new uint256[](_recipients.length);\r\n        for (uint256 i = 0; i < _recipients.length; i++) {\r\n            amounts[i] = _amount;\r\n        }\r\n        emit TokensSent(_tokenAddress, msg.sender, _recipients, amounts);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"New owner is the zero address\");\r\n        owner = newOwner;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"TokensSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"multiSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"multiSendSameAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MultiSender", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e7e215837c7a1b6884c3f2568ddb355343d96a543f2d2922fc4ffbdf7b253615"}