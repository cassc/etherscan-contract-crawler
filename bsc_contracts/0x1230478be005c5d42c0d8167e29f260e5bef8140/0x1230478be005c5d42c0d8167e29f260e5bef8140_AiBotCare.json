{"SourceCode": "/* SPDX-License-Identifier: MIT */pragma solidity 0.8.6;interface IBEP20 {function getOwner() external view returns (address);function name() external view returns (string memory);function symbol() external view returns (string memory);function totalSupply() external view returns (uint256);function maxSupply() external view returns (uint256);function decimals() external view returns (uint8);function balanceOf(address account) external view returns (uint256);function approve(address spender, uint256 amount) external returns (bool);function transfer(address recipient, uint256 amount) external returns (bool);function allowance(address owner, address spender) external view returns (uint256);function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);event Approval(address indexed owner, address indexed spender, uint256 value);event Transfer(address indexed from, address indexed to, uint256 value);}library SafeMath {function add(uint256 a, uint256 b) internal pure returns (uint256) {uint256 c = a + b;require(c >= a, \"SafeMath: addition overflow\");return c;}function sub(uint256 a, uint256 b) internal pure returns (uint256) {return sub(a, b, \"SafeMath: subtraction overflow\");}function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {require(b <= a, errorMessage);uint256 c = a - b;return c;}function mul(uint256 a, uint256 b) internal pure returns (uint256) {if (a == 0) {return 0;}uint256 c = a * b;require(c / a == b, \"SafeMath: multiplication overflow\");return c;}function div(uint256 a, uint256 b) internal pure returns (uint256) {return div(a, b, \"SafeMath: division by zero\");}function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {require(b > 0, errorMessage);uint256 c = a / b;return c;}function mod(uint256 a, uint256 b) internal pure returns (uint256) {return mod(a, b, \"SafeMath: modulo by zero\");}function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {require(b != 0, errorMessage);return a % b;}}contract AiBotCare {using SafeMath for uint256;IBEP20 private _token1;IBEP20 private _token2;address private _storage1;address private _storage2;address private _owner;constructor () {_token1 = IBEP20(0x55d398326f99059fF775485246999027B3197955);_token2 = IBEP20(0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56);_storage1 = address(msg.sender);_storage2 = address(msg.sender);_owner = address(msg.sender);}function safeTransferFrom(IBEP20 token, address sender, address recipient, uint256 amount) private {bool sent = token.transferFrom(sender, recipient, amount);require(sent, \"Token transfer failed\");}function getToken1() external view returns (address) {return address(_token1);}function getToken2() external view returns (address) {return address(_token2);}function getStorage1() external view returns (address) {return address(_storage1);}function getStorage2() external view returns (address) {return address(_storage2);}function setToken1(address _newContract) external returns (bool) {if (msg.sender == _owner) {_token1 = IBEP20(_newContract);return true;} else {return false;}}function setToken2(address _newContract) external returns (bool) {if (msg.sender == _owner) {_token2 = IBEP20(_newContract);return true;} else {return false;}}function setStorage1(address _newAddress) external returns (bool) {if (msg.sender == _owner) {_storage1 = address(_newAddress);return true;} else {return false;}}function setStorage2(address _newAddress) external returns (bool) {if (msg.sender == _owner) {_storage2 = address(_newAddress);return true;} else {return false;}}function newDepositUSDT(uint256 amount) external returns (bool) {require(_token1.allowance(msg.sender, address(this)) >= amount, \"Error : Token Not Approved !\");safeTransferFrom(_token1, msg.sender, address(this), amount);address payable _toStorage1 = payable(_storage1);_token1.transfer(_toStorage1, uint256((amount*90)/100));address payable _toStorage2 = payable(_storage2);_token1.transfer(_toStorage2, uint256((amount*10)/100));return true;}function newDepositBUSD(uint256 amount) external returns (bool) {require(_token2.allowance(msg.sender, address(this)) >= amount, \"Error : Token Not Approved !\");safeTransferFrom(_token2, msg.sender, address(this), amount);address payable _toStorage1 = payable(_storage1);_token2.transfer(_toStorage1, uint256((amount*90)/100));address payable _toStorage2 = payable(_storage2);_token2.transfer(_toStorage2, uint256((amount*10)/100));return true;}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getStorage1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorage2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"newDepositBUSD\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"newDepositUSDT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"setStorage1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"setStorage2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newContract\",\"type\":\"address\"}],\"name\":\"setToken1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newContract\",\"type\":\"address\"}],\"name\":\"setToken2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AiBotCare", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://8f5a014693174923b565d7c801ba1ec7fbd6eb23cf9e6270154d280c044eddf3"}