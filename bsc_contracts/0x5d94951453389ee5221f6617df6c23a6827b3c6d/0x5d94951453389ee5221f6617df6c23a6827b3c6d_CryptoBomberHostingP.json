{"SourceCode": "// SPDX-License-Identifier: MIT\r\n// https://cbomber.io\r\n// CryptoBomberHostingPool\r\npragma solidity ^0.8.8;\r\n\r\ninterface IERC20 {\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IERC1155 {\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n}\r\n\r\nabstract contract Ownable {\r\n    address private _owner;\r\n \r\n    constructor() {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == _owner,\"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n \r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            _owner = newOwner;\r\n        }\r\n    }\r\n}\r\n\r\ncontract CryptoBomberHostingPool is Ownable{\r\n\r\n    mapping (address => bool) private sendUser;\r\n\r\n    modifier onlySend() {\r\n        require(isSend(msg.sender) || owner() == msg.sender, \"Role: caller does not have the distribute role or above\");\r\n        _;\r\n    }\r\n\r\n    function isSend(address account) public view returns (bool) {\r\n        return sendUser[account];\r\n    }\r\n\r\n    function addSend(address account) public onlyOwner{\r\n        sendUser[account] = true;\r\n    }\r\n\r\n    function removeSend(address account) public onlyOwner{\r\n        sendUser[account] = false;\r\n    }\r\n    \r\n    function approveTokenPool(address token, address pool, uint256 amount) public onlyOwner {\r\n        IERC20(token).approve(pool, amount);\r\n    }\r\n\r\n    function approveNFTPool(address nft, address pool, bool approved) public onlyOwner {\r\n        IERC1155(nft).setApprovalForAll(pool, approved);\r\n    }\r\n\r\n    function sendGas(address to, uint256 amount) public onlySend {\r\n        (bool s, ) = to.call{value: amount}(\"\");require(s);\r\n    }\r\n\r\n    receive() external payable {}\r\n    \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"approveNFTPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveTokenPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isSend\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "CryptoBomberHostingPool", "CompilerVersion": "v0.8.8+commit.dddeac2f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c141f96246bf5a9a517f5dae164788bf552327aecaab2fb6ddb6a6f60bc7d649"}