{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title Synthetix Crypto Services Airdrop\r\n * @dev Airdrop contract for distributing a fixed amount of tokens per user.\r\n *      Deployed by: 0xE7f1bbAE70a0249d500e3135FC993E2C99960C89\r\n *      For more information, join our Telegram: https://t.me/SynthetixCryptoServices\r\n */\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract Airdrop {\r\n    IERC20 public token;\r\n    address public owner;\r\n    uint256 public constant TOKENS_PER_RECIPIENT = 10 * 10**18; // 10 tokens, adjust for decimals\r\n\r\n    constructor(address _tokenAddress) {\r\n        token = IERC20(_tokenAddress);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    function distributeTokens(address[] memory recipients) public onlyOwner {\r\n        require(recipients.length <= 50, \"Max 50 addresses per transaction\");\r\n        for (uint256 i = 0; i < recipients.length; i++) {\r\n            token.transfer(recipients[i], TOKENS_PER_RECIPIENT);\r\n        }\r\n    }\r\n\r\n    // Allows owner to withdraw any ERC20 tokens sent to the contract\r\n    function withdrawTokens(address _token, uint256 _amount) public onlyOwner {\r\n        IERC20(_token).transfer(owner, _amount);\r\n    }\r\n\r\n    // Redirect any BNB sent to this contract to the owner\r\n    receive() external payable {\r\n        payable(owner).transfer(msg.value);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"TOKENS_PER_RECIPIENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"}],\"name\":\"distributeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Airdrop", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000008a927191ebcaa7fba026eb36fb8a397e7b6264dd", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://10dfac1b0b38c90bb4811647415492cce1767b7d6c7901fa670e9cb6141c95e5"}