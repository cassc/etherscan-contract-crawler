{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\ncontract Multicall {\r\n    function multicall(address[] calldata targets, bytes[] calldata data)\r\n        external\r\n        view\r\n        returns (bytes[] memory)\r\n    {\r\n        require(targets.length == data.length, \"target length != data length\");\r\n\r\n        bytes[] memory results = new bytes[](data.length);\r\n\r\n        for (uint i; i < targets.length; i++) {\r\n            (bool success, bytes memory result) = targets[i].staticcall(data[i]);\r\n            require(success, \"call failed\");\r\n            results[i] = result;\r\n        }\r\n        return results;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Multicall", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://bf03d50fb67b953b7f06b4579cdf8c08f6d29e0c333c60d85c45b69800a63d06"}