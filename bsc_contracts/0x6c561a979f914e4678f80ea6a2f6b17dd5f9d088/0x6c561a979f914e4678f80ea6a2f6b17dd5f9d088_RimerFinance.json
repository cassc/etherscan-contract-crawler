{"SourceCode": "// SPDX-License-Identifier: MIT\r\n//\r\n// Official links:\r\n// Site - https://rimer.finance\r\n// Telegram channel - https://t.me/rimer_finance\r\n// Telegram CIS(Russian) chat - https://t.me/rimer_finance_ru\r\n// Telegram English - https://t.me/rimer_finance_en\r\n// Telegram Bot of the Rimer Finance - https://t.me/RimerWalletBot?start=r03144424220\r\n// Contact Developer of Rimer Finance - https://t.me/Da_pshen\r\n// GitHub - https://github.com/dapshen\r\n// YouTube channel of the creator - https://youtube.com/@D_CR\r\n// Telegram channel of the creator - https://t.me/profitnee\r\n//\r\n// Disclaimers and Warnings and Info:\r\n// This smart-contract is the official BSC token \"Rimer Finance\"\r\n// We do not guarantee complete security, but we try to maximize it.\r\n// You can check official links and usk all questions in Telegram chat!\r\n// Remember that all investments, and especially in cryptocurrencies, have huge risks, and you can both earn and lose money!\r\n// Do Your Own Research(DYOR), Follow risk management.\r\n// And I advise you to diversify your monetary assets(do not invest all your money in one asset, but distribute the money among different assets)\r\n// We(Rimer Finance company, and all its investors/developers) are not responsible for your funds, and in case of loss of funds anywhere, we will not be to blame for this and will not reimburse the damage.\r\n// And in no case invest borrowed money or money that is a pity to lose! Because it can lead to tragedy and unforeseen consequences!\r\n// Good luck! And earn money!\r\n//\r\n// Tokenomics of Rimer Finance:\r\n// Contract Name: \"RimerFinance\"\r\n// Token(smart-contract) Chain: \"BSC\"\r\n// Token Name: \"Rimer Finance V2\"\r\n// Token Simbol: \"RIMER\"\r\n// Start Supply: 100 000 000\r\n// Decimal: 18\r\n// Start Fee: 5%\r\n// Start Percent Of Staking: 0.01%/hour(of the staking amount)\r\n// Admin Privileges: Change Fee(in the range 0%-20%/transaction), Change Staking Percent(in the range 0.001%/hour-0.01%/hour), Adding/Removing Addresses That Will Be Exempt Rrom Fees.\r\n// We do not guarantee, but as our results have shown there is no holes in this smart-contract and noone can scam it or(Mint Tokens/ Block Adresses/ Change Fee to very big percent)\r\n//\r\n// Disclaimer / \u0414\u0438\u0441\u043a\u043b\u0435\u0439\u043c\u0435\u0440 / DYOR/ \u0420\u0418\u0421\u041a(\u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u043d\u0430 \u0420\u0443\u0441\u0441\u043a\u043e\u043c \u042f\u0437\u044b\u043a\u0435/ Warning on Russian Language):\r\n// 1. \u042f \u043d\u0435 \u043f\u0440\u0438\u0437\u044b\u0432\u0430\u044e \u0432\u0430\u0441 \u043a \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044e- \u0432\u0441\u0451 \u0441\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u043d\u0435 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u044b\u0435 \u0441\u043e\u0432\u0435\u0442\u044b, \u0438 \u0442\u0430\u043a \u0436\u0435 \u044d\u0442\u0430 \u043a\u0440\u0438\u043f\u0442\u043e\u0432\u0430\u043b\u044e\u0442\u0430 \u0438\u043c\u0435\u0435\u0442 \u0440\u0438\u0441\u043a\u0438, \u0441\u043e\u0431\u043b\u044e\u0434\u0430\u0439\u0442\u0435 \u0440\u0438\u0441\u043a-\u043c\u0435\u043d\u0435\u0434\u0436\u043c\u0435\u043d\u0442!\r\n// 2. \u0417\u0430 \u0432\u0441\u0435 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0438 \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u044b \u0432\u044b \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442\u0435 \u0441\u0430\u043c\u0438 \u0438 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u043e\u0442\u044f\u0440\u044c - \u041f\u0440\u043e\u0435\u043a\u0442 \u0420\u0438\u043c\u0435\u0440 \u0424\u0438\u043d\u0430\u043d\u0441/\u0415\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c \u043d\u0438 \u0432 \u0447\u0451\u043c \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u0438\u043d\u043e\u0432\u0430\u0442!\r\n// 3. \u0412\u0441\u0451 \u0441\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0435 \u0432 \u0437\u0434\u0435\u0441\u044c - \u043b\u0438\u0447\u043d\u043e \u043c\u043e\u0451 \u043c\u043d\u0435\u043d\u0438\u0435 \u0438 \u043c\u043e\u0451 \u0440\u0435\u0448\u0435\u043d\u0438\u0435- \u041f\u043e\u0432\u0442\u043e\u0440\u044f\u0442\u044c \u043c\u043e\u0438 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0438\u043b\u0438 \u043d\u0435\u0442- \u0440\u0435\u0448\u0430\u0442\u044c \u0432\u0430\u043c.\r\n// 4. \u0422\u0430\u043a \u0436\u0435 \u043f\u043e\u043c\u043d\u0438\u0442\u0435 \u0447\u0442\u043e \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435\u043b\u044c\u0437\u044f \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u041f\u041e\u0421\u041b\u0415\u0414\u041d\u0418\u0415/\u0417\u0410\u0401\u041c\u041d\u042b\u0415/\u041a\u041e\u0422\u041e\u0420\u042b\u0415 \u0416\u0410\u041b\u041a\u041e \u041f\u041e\u0422\u0415\u0420\u042f\u0422\u042c \u0434\u0435\u043d\u044c\u0433\u0438!\r\n// 5. \u0418 \u0441\u043e\u0431\u043b\u044e\u0434\u0430\u0439\u0442\u0435 \u0440\u0438\u0441\u043a \u043c\u0435\u043d\u0435\u0434\u0436\u043c\u0435\u043d\u0442 \u0438 \u0434\u0438\u0432\u0435\u0440\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e - \u041d\u0435 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435 \u0434\u0435\u043d\u044c\u0433\u0438 \u0432 \u043e\u0434\u0438\u043d \u043f\u0440\u043e\u0435\u043a\u0442, \u0430 \u0441\u0434\u0435\u043b\u0430\u0439\u0442\u0435 \u043f\u043e\u0440\u0442\u0444\u043e\u043b\u0438\u043e \u0438\u0437 3-10 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u0447\u0442\u043e\u0431\u044b \u0441\u043d\u0438\u0437\u0438\u0442\u044c \u0440\u0438\u0441\u043a\u0438 \u0438 \u043f\u043e\u0432\u044b\u0441\u0438\u0442\u044c \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c.\r\n// 6. \u041d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0438\u043a\u043e\u043c\u0443 \u043d\u0435 \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u0432\u043e\u044e \u0421\u0418\u0414-\u0424\u0420\u0410\u0417\u0423 \u043e\u0442 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430- \u0432\u0441\u0435 \u043a\u0442\u043e \u0435\u0451 \u043f\u0440\u043e\u0441\u044f\u0442- \u0421\u043a\u0430\u043c\u043c\u0435\u0440\u044b!\r\n// 7. \u0418 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0439\u0442\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438/\u043d\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0439\u0442\u0435 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0438 \u043a \u043d\u0435\u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u043c \u0438 \u043d\u0435 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u043c DAPP \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c \u0438 \u0441\u043c\u0430\u0440\u0442-\u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u0430\u043c!\r\n//\r\n//                           _                     _                  _\r\n//  ___ _ __ ___   __ _ _ __| |_    ___ ___  _ __ | |_ _ __ __ _  ___| |_\r\n// / __| '_ ` _ \\ / _` | '__| __|  / __/ _ \\| '_ \\| __| '__/ _` |/ __| __|\r\n// \\__ \\ | | | | | (_| | |  | |_  | (_| (_) | | | | |_| | | (_| | (__| |_\r\n// |___/_| |_| |_|\\__,_|_|   \\__|  \\___\\___/|_| |_|\\__|_|  \\__,_|\\___|\\__|\r\n//\r\n//\r\n// \u2588\u2588\u2588\u2588                                         \u2588\u2588\u2588\u2588\u2588\u2588\r\n// \u2588   \u2588                                        \u2588\r\n// \u2588    \u2588                                       \u2588\r\n// \u2588    \u2588                                       \u2588\r\n// \u2588   \u2588   \u2588  \u2588  \u2588\u2588   \u2588\u2588      \u2588\u2588\u2588   \u2588  \u2588        \u2588\u2588\u2588\u2588\u2588\u2588  \u2588  \u2588  \u2588\u2588       \u2588\u2588\u2588  \u2588   \u2588  \u2588\u2588       \u2588\u2588\u2588     \u2588\u2588\u2588\r\n// \u2588\u2588\u2588\u2588       \u2588 \u2588  \u2588 \u2588  \u2588    \u2588   \u2588  \u2588 \u2588         \u2588          \u2588 \u2588  \u2588    \u2588\u2588   \u2588 \u2588   \u2588 \u2588  \u2588    \u2588\u2588   \u2588   \u2588   \u2588\r\n// \u2588 \u2588     \u2588  \u2588\u2588    \u2588    \u2588  \u2588    \u2588  \u2588\u2588          \u2588       \u2588  \u2588\u2588    \u2588  \u2588      \u2588    \u2588\u2588    \u2588  \u2588        \u2588    \u2588\r\n// \u2588  \u2588    \u2588  \u2588     \u2588    \u2588  \u2588\u2588\u2588\u2588\u2588   \u2588           \u2588       \u2588  \u2588     \u2588  \u2588      \u2588    \u2588     \u2588  \u2588        \u2588\u2588\u2588\u2588\u2588\r\n// \u2588   \u2588   \u2588  \u2588     \u2588    \u2588   \u2588      \u2588           \u2588       \u2588  \u2588     \u2588   \u2588\u2588   \u2588 \u2588   \u2588     \u2588   \u2588\u2588   \u2588   \u2588\r\n// \u2588    \u2588  \u2588  \u2588     \u2588    \u2588    \u2588\u2588\u2588\u2588  \u2588           \u2588       \u2588  \u2588     \u2588     \u2588\u2588\u2588   \u2588  \u2588     \u2588     \u2588\u2588\u2588     \u2588\u2588\u2588\u2588\r\n//\r\n//\r\n// \u2593\u2593\u2593\u2593\u2593\u2593                                      \u2593\u2593\u2593\u2593\r\n// \u2593                                         \u2593\u2593    \u2593\u2593\r\n// \u2593                                        \u2593        \u2593\r\n// \u2593                                         \u2593\u2593\r\n// \u2593\u2593\u2593\u2593\u2593\u2593  \u2593  \u2593    \u2593    \u2593\u2593\u2593        \u2593           \u2593\u2593          \u2593        \u2593\u2593\u2593  \u2593   \u2593   \u2593  \u2593  \u2593  \u2593\u2593     \u2593\u2593\u2593\u2593\r\n// \u2593           \u2593  \u2593    \u2593   \u2593       \u2593             \u2593\u2593        \u2593      \u2593\u2593   \u2593 \u2593   \u2593  \u2593      \u2593 \u2593  \u2593   \u2593    \u2593\r\n// \u2593       \u2593    \u2593\u2593    \u2593    \u2593  \u2593\u2593\u2593\u2593\u2593\u2593               \u2593\u2593   \u2593\u2593\u2593\u2593\u2593\u2593\u2593  \u2593      \u2593    \u2593\u2593\u2593    \u2593  \u2593\u2593    \u2593  \u2593    \u2593\r\n// \u2593       \u2593    \u2593\u2593    \u2593\u2593\u2593\u2593\u2593   \u2593    \u2593        \u2593        \u2593     \u2593     \u2593      \u2593    \u2593 \u2593    \u2593  \u2593     \u2593   \u2593\u2593\u2593\u2593\u2593\r\n// \u2593       \u2593   \u2593  \u2593    \u2593      \u2593    \u2593         \u2593\u2593    \u2593\u2593      \u2593      \u2593\u2593   \u2593 \u2593   \u2593  \u2593   \u2593  \u2593     \u2593       \u2593\r\n// \u2593       \u2593  \u2593    \u2593    \u2593\u2593\u2593\u2593  \u2593\u2593\u2593\u2593\u2593\u2593           \u2593\u2593\u2593\u2593        \u2593        \u2593\u2593\u2593   \u2593  \u2593   \u2593  \u2593  \u2593     \u2593   \u2593\u2593\u2593\u2593\r\n//\r\n//\r\n// \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592                        \u2592\u2592\u2592\u2592\u2592\u2592                                                \u2592\u2592\u2592\u2592\u2592\r\n//     \u2592\u2592                            \u2592     \u2592                                                 \u2592\r\n//     \u2592\u2592                            \u2592      \u2592                                                \u2592\r\n//     \u2592\u2592                            \u2592      \u2592                                                \u2592\r\n//     \u2592\u2592      \u2592         \u2592\u2592\u2592         \u2592     \u2592      \u2592\u2592\u2592     \u2592         \u2592    \u2592\u2592\u2592   \u2592  \u2592          \u2592     \u2592\u2592\u2592\u2592\r\n//     \u2592\u2592      \u2592        \u2592   \u2592        \u2592\u2592\u2592\u2592\u2592\u2592     \u2592\u2592   \u2592\u2592   \u2592    \u2592    \u2592   \u2592   \u2592  \u2592 \u2592           \u2592    \u2592    \u2592\r\n//     \u2592\u2592      \u2592 \u2592\u2592\u2592   \u2592    \u2592        \u2592         \u2592       \u2592   \u2592   \u2592   \u2592   \u2592    \u2592  \u2592\u2592            \u2592     \u2592\u2592\r\n//     \u2592\u2592      \u2592\u2592   \u2592  \u2592\u2592\u2592\u2592\u2592         \u2592         \u2592       \u2592   \u2592   \u2592   \u2592   \u2592\u2592\u2592\u2592\u2592   \u2592             \u2592       \u2592\u2592\r\n//     \u2592\u2592      \u2592    \u2592   \u2592            \u2592          \u2592\u2592   \u2592\u2592     \u2592 \u2592 \u2592 \u2592     \u2592      \u2592             \u2592    \u2592    \u2592\r\n//     \u2592\u2592      \u2592    \u2592    \u2592\u2592\u2592\u2592        \u2592            \u2592\u2592\u2592        \u2592   \u2592       \u2592\u2592\u2592\u2592  \u2592           \u2592\u2592\u2592\u2592\u2592   \u2592\u2592\u2592\u2592\r\n//\r\n//\r\n// \u2592\u2592\u2592\u2592\u2592                 \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592                        \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\r\n//   \u2592                       \u2592\u2592                                \u2592\u2592\r\n//   \u2592                       \u2592\u2592                                \u2592\u2592\r\n//   \u2592                       \u2592\u2592                                \u2592\u2592\r\n//   \u2592    \u2592  \u2592\u2592              \u2592\u2592      \u2592         \u2592\u2592\u2592             \u2592\u2592      \u2592  \u2592  \u2592     \u2592       \u2592     \u2592\r\n//   \u2592    \u2592 \u2592  \u2592             \u2592\u2592      \u2592        \u2592   \u2592            \u2592\u2592      \u2592 \u2592   \u2592     \u2592       \u2592     \u2592\r\n//   \u2592    \u2592\u2592    \u2592            \u2592\u2592      \u2592 \u2592\u2592\u2592   \u2592    \u2592            \u2592\u2592      \u2592\u2592    \u2592     \u2592    \u2592\u2592\u2592\u2592\u2592\u2592\u2592  \u2592 \u2592\u2592\u2592\r\n//   \u2592    \u2592     \u2592            \u2592\u2592      \u2592\u2592   \u2592  \u2592\u2592\u2592\u2592\u2592             \u2592\u2592      \u2592     \u2592     \u2592       \u2592     \u2592\u2592   \u2592\r\n//   \u2592    \u2592     \u2592            \u2592\u2592      \u2592    \u2592   \u2592                \u2592\u2592      \u2592      \u2592   \u2592 \u2592      \u2592     \u2592    \u2592\r\n// \u2592\u2592\u2592\u2592\u2592  \u2592     \u2592            \u2592\u2592      \u2592    \u2592    \u2592\u2592\u2592\u2592            \u2592\u2592      \u2592       \u2592\u2592\u2592   \u2592     \u2592     \u2592    \u2592\r\n//\r\n//\r\n// All of this comments and ARTs were written by dapshen(Daniil Pshenichni- Creator/Developer of Rimer Finance) *Have a good day!* And I am Living in Russia!!! Yeah, Russia is the Best!\r\n// One more dapshen comment - I just like pixel arts, so i did it, and i am thinking that \"The Power Is In The Truth!\". No Scamming = Big Profits)))\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  function transfer(address recipient, uint256 amount)\r\n  external\r\n  returns (bool);\r\n\r\n  function allowance(address owner, address spender)\r\n  external\r\n  view\r\n  returns (uint256);\r\n\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  function transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external returns (bool);\r\n\r\n  event Claim(address indexed owner, uint256 value);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(\r\n    address indexed owner,\r\n    address indexed spender,\r\n    uint256 value\r\n  );\r\n}\r\n\r\nlibrary SafeMath {\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b <= a, \"SafeMath: subtraction overflow\");\r\n    uint256 c = a - b;\r\n    return c;\r\n  }\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b > 0, \"SafeMath: division by zero\");\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract RimerFinance is IERC20 {\r\n  using SafeMath for uint256;\r\n\r\n  string private _name = \"Rimer Finance V2\";\r\n  string private _symbol = \"RIMER\";\r\n  uint8 private _decimals = 18;\r\n  uint256 private _totalSupply = 100000000 * 10**uint256(_decimals);\r\n\r\n  mapping(address => uint256) private _balances;\r\n  mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n  // Variables for fee and reward\r\n  uint256 public transactionFee = 5;\r\n  \r\n  uint256 public stackingPercentage = 10;\r\n  uint256 public stakingInterval = 1 hours;\r\n  mapping(address => uint256) public stackingBalance;\r\n  mapping(address => uint256) public lastClaimTimestamp;\r\n  \r\n  mapping(address => uint256) private _excludeAddress;\r\n  address[] public allHolders;\r\n\r\n  address public _owner;\r\n  address public _burnAddress;\r\n\r\n\r\n\r\n  constructor() {\r\n    _balances[msg.sender] = _totalSupply;\r\n    _owner = msg.sender;\r\n    _burnAddress = address(0);\r\n    lastClaimTimestamp[_owner] = block.timestamp;\r\n    allHolders.push(_owner);\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  function name() public view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  function symbol() public view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  function decimals() public view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  function totalSupply() public view override returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  function balanceOf(address account) public view override returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n    _transfer(msg.sender, recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address owner, address spender) public view override returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  function approve(address spender, uint256 amount) public override returns (bool) {\r\n    _approve(msg.sender, spender, amount);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\r\n    return true;\r\n  }\r\n\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\r\n    return true;\r\n  }\r\n\r\n  function getHoursElapsed(address user) public view returns (uint256)  {\r\n    if(lastClaimTimestamp[user] == 0) return 0;\r\n    return block.timestamp.sub(lastClaimTimestamp[user]).div(stakingInterval);\r\n  }\r\n\r\n  function getRewardPerHour(address user) public view returns (uint256)  {\r\n    if(lastClaimTimestamp[user] == 0) return 0;\r\n    return stackingBalance[user].mul(stackingPercentage).div(100000);\r\n  }\r\n\r\n  function depositToStaking(uint256 amount) \r\n  public returns(bool) {\r\n    address user = msg.sender;\r\n    require(amount >= 10**18*1000, \"Deposit amount must be multiple of 1000 RIMER\");\r\n    require(amount <= _balances[user], \"not enoght tokens\");\r\n    claimHolderRewards(user);\r\n    _balances[user] = _balances[user].sub(amount);  \r\n    stackingBalance[user]=stackingBalance[user].add(amount);\r\n    if (lastClaimTimestamp[user] == 0){\r\n      allHolders.push(user);\r\n      lastClaimTimestamp[user] = block.timestamp;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function withdrawFromStaking(uint256 amount) \r\n  public returns(bool) {\r\n    address user = msg.sender;\r\n    require(amount >= stackingBalance[user], \"not enoght tokens\");\r\n    claimHolderRewards(user);\r\n    stackingBalance[user]=stackingBalance[user].sub(amount);\r\n    _balances[user] = _balances[user].add(amount);   \r\n    return true;\r\n  }\r\n\r\n  function claimRewards() \r\n  public {\r\n    address user = msg.sender;\r\n    claimHolderRewards(user);\r\n  }\r\n\r\n  function calcRewards(address user) public view returns(uint256) {\r\n    require(stackingBalance[user] > 0, \"user has no rewards\");\r\n    return getHoursElapsed(user).mul(getRewardPerHour(user));\r\n  }\r\n\r\n  function updateTransactionFee(uint256 fee) public onlyOwner {\r\n    require(fee >= 0 && fee <= 20, \"Transaction fee: Invalid value\");\r\n    transactionFee = fee;\r\n  }\r\n\r\n  function updateRewardPercentage(uint256 percentage) public onlyOwner {\r\n    require(percentage >= 1 && percentage <= 10, \"Invalid value\");\r\n    for (uint i = 0; i < allHolders.length; i++) {\r\n      claimHolderRewards(allHolders[i]);\r\n    }\r\n    stackingPercentage = percentage;\r\n  }\r\n\r\n  function claimHolderRewards(address user) internal {\r\n    \r\n    if(stackingBalance[user] > 0){\r\n\r\n      uint256 rewardPerHour = getRewardPerHour(user);\r\n      uint256 hoursElapsed = getHoursElapsed(user);\r\n\r\n      uint256 reward = hoursElapsed.mul(rewardPerHour);\r\n      \r\n      lastClaimTimestamp[user] =lastClaimTimestamp[user].add(hoursElapsed.mul(stakingInterval));\r\n      _totalSupply = _totalSupply.add(reward);\r\n\r\n      _balances[user] = _balances[user].add(reward);\r\n      emit Claim(user, reward);\r\n    }\r\n  }\r\n\r\n  function addExcludeAddress(address exAddress)\r\n  public onlyOwner {\r\n    _excludeAddress[exAddress] = 1;\r\n  }\r\n\r\n  function removeExcludeAddress(address exAddress)\r\n  public onlyOwner {\r\n    _excludeAddress[exAddress] = 0;\r\n  }\r\n\r\n  function statusExcludeAddress(address exAddress)\r\n  public view returns (bool) {\r\n    if (_excludeAddress[exAddress] == 1)\r\n      return true;\r\n    return false;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0), \"Ownership: New owner is the zero address\");\r\n    _owner = newOwner;\r\n  }\r\n\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"Transfer: Transfer from the zero address\");\r\n    require(recipient != address(0), \"Transfer: Transfer to the zero address\");\r\n    require(amount > 0, \"Transfer: Transfer amount must be greater than zero\");\r\n    require(_balances[sender] >= amount, \"Transfer: Insufficient balance\");\r\n\r\n    uint256 transferAmount = amount;\r\n\r\n    if (_excludeAddress[sender] == 0 && _excludeAddress[recipient] == 0) {\r\n      uint256 fee = amount.mul(transactionFee).div(100);\r\n      transferAmount = amount.sub(fee);\r\n      _burn(sender, fee);\r\n    }\r\n\r\n    _balances[sender] = _balances[sender].sub(transferAmount);\r\n    _balances[recipient] = _balances[recipient].add(transferAmount);\r\n\r\n    if (lastClaimTimestamp[recipient] == 0){\r\n      allHolders.push(recipient);\r\n      lastClaimTimestamp[recipient] = block.timestamp;\r\n    }\r\n    emit Transfer(sender, recipient, transferAmount);\r\n  }\r\n\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"Burn: Burn from the zero address\");\r\n    require(amount > 0, \"Burn: Burn amount must be greater than zero\");\r\n    require(_balances[account] >= amount, \"Burn: Insufficient balance\");\r\n\r\n    _balances[account] = _balances[account].sub(amount);\r\n\r\n    _balances[_burnAddress] = _balances[_burnAddress].add(amount);\r\n\r\n    _totalSupply = _totalSupply.sub(amount);\r\n\r\n    emit Transfer(account, _burnAddress, amount);\r\n  }\r\n\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"Approve: Approve from the zero address\");\r\n    require(spender != address(0), \"Approve: Approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == _owner, \"Only Owner: Caller is not the owner\");\r\n    _;\r\n  }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exAddress\",\"type\":\"address\"}],\"name\":\"addExcludeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allHolders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calcRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToStaking\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getHoursElapsed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRewardPerHour\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastClaimTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exAddress\",\"type\":\"address\"}],\"name\":\"removeExcludeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stackingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stackingPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exAddress\",\"type\":\"address\"}],\"name\":\"statusExcludeAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transactionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"updateRewardPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateTransactionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromStaking\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RimerFinance", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://aa7005f13827139a44b442bd50b712648bc7b55c10248f7c89a38ffd162969c3"}