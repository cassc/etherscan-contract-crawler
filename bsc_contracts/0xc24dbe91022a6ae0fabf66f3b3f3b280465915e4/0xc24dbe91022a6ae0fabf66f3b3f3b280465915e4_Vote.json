{"SourceCode": "{\"Admin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity \\u003e=0.8.0 \\u003c0.9.0;\\r\\n\\r\\nimport \\u0027./IAdmin.sol\\u0027;\\r\\n\\r\\nabstract contract Admin is IAdmin {\\r\\n\\r\\n    address public admin;\\r\\n\\r\\n    modifier _onlyAdmin_() {\\r\\n        require(msg.sender == admin, \\u0027Admin: only admin\\u0027);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor () {\\r\\n        admin = msg.sender;\\r\\n        emit NewAdmin(admin);\\r\\n    }\\r\\n\\r\\n    function setAdmin(address newAdmin) external _onlyAdmin_ {\\r\\n        admin = newAdmin;\\r\\n        emit NewAdmin(newAdmin);\\r\\n    }\\r\\n\\r\\n}\\r\\n\"},\"IAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity \\u003e=0.8.0 \\u003c0.9.0;\\r\\n\\r\\ninterface IAdmin {\\r\\n\\r\\n    event NewAdmin(address indexed newAdmin);\\r\\n\\r\\n    function admin() external view returns (address);\\r\\n\\r\\n    function setAdmin(address newAdmin) external;\\r\\n\\r\\n}\\r\\n\"},\"Vote.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity \\u003e=0.8.0 \\u003c0.9.0;\\r\\n\\r\\nimport \\u0027./VoteStorage.sol\\u0027;\\r\\n\\r\\ncontract Vote is VoteStorage {\\r\\n\\r\\n    event NewImplementation(address newImplementation);\\r\\n\\r\\n    function setImplementation(address newImplementation) external _onlyAdmin_ {\\r\\n        implementation = newImplementation;\\r\\n        emit NewImplementation(newImplementation);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    fallback() external payable {\\r\\n        address imp = implementation;\\r\\n        assembly {\\r\\n            calldatacopy(0, 0, calldatasize())\\r\\n            let result := delegatecall(gas(), imp, 0, calldatasize(), 0, 0)\\r\\n            returndatacopy(0, 0, returndatasize())\\r\\n            switch result\\r\\n            case 0 { revert(0, returndatasize()) }\\r\\n            default { return(0, returndatasize()) }\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\\r\\n\"},\"VoteStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity \\u003e=0.8.0 \\u003c0.9.0;\\r\\n\\r\\nimport \\u0027./Admin.sol\\u0027;\\r\\n\\r\\nabstract contract VoteStorage is Admin {\\r\\n\\r\\n    address public implementation;\\r\\n\\r\\n    string public topic;\\r\\n\\r\\n    uint256 public numOptions;\\r\\n\\r\\n    uint256 public deadline;\\r\\n\\r\\n    // voters may contain duplicated address, if one submits more than one votes\\r\\n    address[] public voters;\\r\\n\\r\\n    // voter address =\\u003e vote\\r\\n    // vote starts from 1, 0 is reserved for no vote\\r\\n    mapping (address =\\u003e uint256) public votes;\\r\\n\\r\\n}\\r\\n\"}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Vote", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "1", "Implementation": "0xe09cf2e82976d462b7a700448640b91d7b1c9d72", "SwarmSource": "ipfs://302146a35c903dba50f7b727ec0d07b4ba0fbc8c764d5a56eff16d513992c95f"}