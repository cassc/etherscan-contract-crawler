{"SourceCode": "/**\r\n *Submitted for verification at Etherscan.io on 2022-06-23\r\n*/\r\n\r\n/**\r\n * GasCheck\r\n * Auther: @enoch_eth\r\n*/\r\npragma solidity ^0.8.0;\r\n\r\n /**\r\n * @title Contract that will work with ERC223 tokens.\r\n */\r\n \r\n interface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nabstract contract IERC223Recipient {\r\n\r\n struct ERC223TransferInfo\r\n    {\r\n        address token_contract;\r\n        address sender;\r\n        uint256 value;\r\n        bytes   data;\r\n    }\r\n    \r\n    ERC223TransferInfo private tkn;\r\n    uint256 loopnum;\r\n    \r\n/**\r\n * @dev Standard ERC223 function that will handle incoming token transfers.\r\n *\r\n * @param _from  Token sender address.\r\n * @param _value Amount of tokens.\r\n * @param _data  Transaction metadata.\r\n */\r\n    function tokenFallback(address _from, uint _value, bytes memory _data) public virtual\r\n    {\r\n        /**\r\n         * @dev Note that inside of the token transaction handler the actual sender of token transfer is accessible via the tkn.sender variable\r\n         * (analogue of msg.sender for Ether transfers)\r\n         * \r\n         * tkn.value - is the amount of transferred tokens\r\n         * tkn.data  - is the \"metadata\" of token transfer\r\n         * tkn.token_contract is most likely equal to msg.sender because the token contract typically invokes this function\r\n        */\r\n        tkn.token_contract = msg.sender;\r\n        tkn.sender         = _from;\r\n        tkn.value          = _value;\r\n        tkn.data           = _data;\r\n        \r\n        for (uint i = 3; i <= loopnum; i++) {\r\n            require(i-1 > 1);\r\n        }\r\n        // ACTUAL CODE\r\n    }\r\n}\r\n\r\ncontract MyContract is IERC223Recipient {\r\n\r\n    address payable public owner;\r\n    IERC20 public ATOKEN;\r\n\r\n    constructor() payable {\r\n        owner = payable(msg.sender);\r\n    }\r\n\r\n    function withdraw() public {\r\n        uint amount = address(this).balance;\r\n        (bool success, ) = owner.call{value: amount}(\"\");\r\n        require(success, \"Failed to send Ether\");\r\n    }\r\n\r\n    function withdrawERC20(address erc20token, uint amount) public {\r\n        require(msg.sender == owner);\r\n        address _ATOKEN = erc20token;\r\n        ATOKEN = IERC20(_ATOKEN);\r\n        _safeTransfer(ATOKEN, msg.sender, amount);\r\n    }\r\n\r\n    function setnum(uint256 num) public {\r\n        loopnum = num;\r\n    }\r\n\r\n    receive() external payable {\r\n        for (uint i = 3; i <= loopnum; i++) {\r\n            require(i-1 > 1);\r\n        }\r\n    }\r\n\r\n    function _safeTransfer(\r\n        IERC20 token,\r\n        address recipient,\r\n        uint amount\r\n    ) private {\r\n        bool sent = token.transfer(recipient, amount);\r\n        require(sent, \"Token transfer failed\");\r\n    }\r\n\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ATOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setnum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MyContract", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2c2d9ce4d17b56d61e7df81734db214bb79429069a249db7fb5dc103e347b0d0"}