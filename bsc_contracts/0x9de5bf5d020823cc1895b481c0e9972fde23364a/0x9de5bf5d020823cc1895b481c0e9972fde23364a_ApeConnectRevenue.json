{"SourceCode": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.13;\r\n\r\n\r\n\r\ninterface IBEP20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function decimals() external view returns (uint8);\r\n    function symbol() external view returns (string memory);\r\n    function name() external view returns (string memory);\r\n    function getOwner() external view returns (address);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract ApeConnectRevenue {\r\n    string public name = \"ApeConnectRevenue\";\r\n\r\n    //declaring owner state variable\r\n    address payable public  owner;\r\n    address payable public  manager; \r\n    address payable public  manager2; \r\n\r\n    event SendTokens(address indexed tokenAddress, uint256 amount,address indexed to,bool indexed valid);\r\n    event RecieveRewards(uint indexed tgId, address indexed  receiver, uint indexed  amount);\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event Received(address indexed sender, uint amount);\r\n\r\n    uint public currentRewardID = 0;\r\n    uint public currentReward = 10_000_000_000_000_000;\r\n    uint public totalRewarded = 0;\r\n    uint public isPaused = 0;\r\n\r\n    struct tgDetails {\r\n        address receiver; \r\n        uint reward;\r\n    }\r\n\r\n    struct RewardsInfo {\r\n        mapping (uint => tgDetails)  telegramId;\r\n    }\r\n\r\n    mapping (uint => RewardsInfo) private telegramIdReward;  // rewardId => receiver, claimedValue\r\n\r\n    \r\n    constructor(address payable _manager,address payable _manager2 ) payable {\r\n        owner = payable(msg.sender) ;\r\n        manager = _manager;\r\n        manager2 = _manager2;\r\n    }\r\n\r\n    receive() external payable {\r\n        emit Received(msg.sender, msg.value);\r\n    }\r\n\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner(msg.sender), \"!OWNER\"); _;\r\n    }\r\n    modifier onlyManagers() {\r\n        require(isManager(msg.sender), \"!OWNER\"); _;\r\n    }\r\n\r\n    function isOwner(address account) public view returns (bool) {\r\n        return account == owner;\r\n    }\r\n    function isManager(address account) public view returns (bool) {\r\n        return account == owner ||  account == manager || account == manager2; \r\n    }\r\n \r\n\r\n    // Function to allow users to deposit BNB\r\n    function deposit() external payable {\r\n        require(msg.value > 0, \"Deposit amount must be greater than 0\");\r\n        emit Received(msg.sender, msg.value);\r\n    }\r\n\r\n    function getContractBalance() external view returns (uint) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function getAllDetails(uint rewardId,uint tgId) external view returns (address, uint,uint) {\r\n        tgDetails memory details = telegramIdReward[rewardId].telegramId[tgId];\r\n        return (details.receiver, details.reward,isPaused);\r\n    }\r\n\r\n    function getAllDetailsCurrent(uint tgId) external view returns (address, uint,uint) {\r\n        tgDetails memory details = telegramIdReward[currentRewardID].telegramId[tgId];\r\n        return (details.receiver, details.reward,isPaused);\r\n    }\r\n\r\n    function rewardUser (uint tgId,address payable  walletReciever ) public onlyManagers returns (bool)  {\r\n        require(isPaused == 0, \"Rewarding is paused\");\r\n        uint256 bal = address(this).balance;\r\n        require(bal > currentReward, \"No balance to recover\");\r\n        walletReciever.transfer(currentReward);\r\n        RewardsInfo storage rewardsInfo = telegramIdReward[currentRewardID];\r\n        require(rewardsInfo.telegramId[tgId].receiver == address(0), \"User already rewarded\");\r\n        rewardsInfo.telegramId[tgId].receiver = walletReciever;\r\n        rewardsInfo.telegramId[tgId].reward = currentReward;\r\n        totalRewarded += currentReward;\r\n        emit RecieveRewards(tgId,walletReciever,currentReward);\r\n        return true;\r\n    }\r\n\r\n    function addNewRewardID () public onlyManagers returns (bool) {\r\n            currentRewardID += 1;\r\n            return true;\r\n    }\r\n\r\n    function setRewardID (uint _id) public onlyManagers returns (bool) {\r\n            currentRewardID = _id;\r\n            return true;\r\n    }\r\n\r\n\r\n    function enableReward (uint _status) public onlyManagers returns (bool) {\r\n            isPaused = _status;\r\n            return true;\r\n    }\r\n    \r\n\r\n    function setCurrentReward (uint _reward) public onlyManagers returns (bool) {\r\n            currentReward = _reward;\r\n            return true;\r\n    }\r\n\r\n\r\n    function sendBalance(uint _reward) external onlyManagers {\r\n            uint256 bal = address(this).balance;\r\n            require(bal > _reward, \"No balance to recover\");\r\n            owner.transfer(_reward);\r\n    }\r\n    function sendBalance() external onlyManagers {\r\n        uint256 bal = address(this).balance;\r\n        require(bal > 0, \"No balance to recover\");\r\n        owner.transfer(bal);\r\n    }\r\n\r\n    function sendTokens(address tokenAddress, uint256 amount,address to) public onlyManagers returns (bool success) {\r\n        bool valid = IBEP20(tokenAddress).transfer(to, amount);\r\n        return valid;\r\n    }\r\n\r\n    function setManagers(address payable _manager,address payable _manager2 ) external onlyOwner {\r\n            manager = _manager;\r\n            manager2 = _manager2;\r\n    }\r\n    \r\n    //Transfering Ownership\r\n    function transferOwnership(address payable  newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        address oldOwner = owner;\r\n        owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_manager2\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tgId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RecieveRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"SendTokens\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addNewRewardID\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRewardID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_status\",\"type\":\"uint256\"}],\"name\":\"enableReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tgId\",\"type\":\"uint256\"}],\"name\":\"getAllDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tgId\",\"type\":\"uint256\"}],\"name\":\"getAllDetailsCurrent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager2\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tgId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"walletReciever\",\"type\":\"address\"}],\"name\":\"rewardUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"sendBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sendTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"setCurrentReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_manager2\",\"type\":\"address\"}],\"name\":\"setManagers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"setRewardID\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewarded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "ApeConnectRevenue", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000c8ecfb49fcc2ac9f16f6c724a54c61e2cd856c350000000000000000000000004a837fc8ebf56404fba5c7d7d5b66b6995e088f6", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7b7939f198931aa192a64ed96dea12e9f847b6a80c72d775e57f64a066c53fcc"}