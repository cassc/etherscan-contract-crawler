{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2023-11-12\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.15;\r\nlibrary DateTime {\r\n    /*\r\n     *  Date and Time utilities for ethereum contracts\r\n     *\r\n     */\r\n\r\n    function getNowDateTime() public view returns (uint32) {\r\n        uint256 ts = block.timestamp + 8 hours;\r\n        return uint32(ts / 1 days);\r\n    }\r\n\r\n    function tsToDateTime(uint256 ts) public pure returns (uint32) {\r\n        return uint32((ts + 8 hours) / 1 days);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"name\":\"getNowDateTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"}],\"name\":\"tsToDateTime\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "DateTime", "CompilerVersion": "v0.8.15+commit.e14f2714", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://b728e7a98fb0250e19f83d3818c146fe40021f3a6ac9313b3bc28097ec989a72"}