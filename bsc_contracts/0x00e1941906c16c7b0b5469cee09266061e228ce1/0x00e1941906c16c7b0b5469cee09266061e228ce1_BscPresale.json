{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// Interface for BEP-20 token\r\ninterface IBEP20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract BscPresale {\r\n    address public owner;\r\n    IBEP20 public token; // Address of the BEP-20 token\r\n    uint256 public price; // Price of 1 token in wei (e.g., 0.000000797 BNB)\r\n    uint256 public totalTokensSold;\r\n    bool public isPresaleActive = true;\r\n\r\n    event TokensPurchased(address indexed buyer, uint256 amount);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    modifier presaleActive() {\r\n        require(isPresaleActive, \"Presale is not active\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _tokenAddress, uint256 _price) {\r\n        owner = msg.sender;\r\n        token = IBEP20(_tokenAddress);\r\n        price = _price;\r\n    }\r\n\r\n    function setPrice(uint256 _price) external onlyOwner {\r\n        require(isPresaleActive, \"Presale is not active\");\r\n        price = _price;\r\n    }\r\n\r\n    function withdrawFunds() external onlyOwner {\r\n        uint256 balance = address(this).balance;\r\n        require(balance > 0, \"No funds to withdraw\");\r\n        payable(owner).transfer(balance);\r\n    }\r\n\r\n    function buyTokens(uint256 amount) external presaleActive {\r\n        uint256 cost = amount * price;\r\n        require(address(this).balance >= cost, \"Insufficient contract balance\");\r\n\r\n        require(token.transfer(msg.sender, amount), \"Token transfer failed\");\r\n        totalTokensSold += amount;\r\n\r\n        emit TokensPurchased(msg.sender, amount);\r\n    }\r\n\r\n    function endPresale() external onlyOwner {\r\n        isPresaleActive = false;\r\n    }\r\n\r\n    receive() external payable {\r\n        revert(\"Fallback function not supported\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPresaleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "BscPresale", "CompilerVersion": "v0.8.15+commit.e14f2714", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000007f1c9136c9b9adee0bf79a70fcf6421cf18c2db3000000000000000000000000000000000000000000000000000000b990e6e200", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://855ea30d74480f6857e52679ede7dfa52ae858821e3a9faf00d3d153aae42e42"}