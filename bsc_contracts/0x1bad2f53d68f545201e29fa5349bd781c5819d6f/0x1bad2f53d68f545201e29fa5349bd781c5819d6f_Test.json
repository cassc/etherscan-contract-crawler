{"SourceCode": "// SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity ^0.8.7;\r\n\r\ninterface IChiToken {\r\n    function freeUpTo(uint256 value) external returns (uint256 freed);\r\n    function mint(uint256 value) external;\r\n}\r\ncontract Test {\r\n    address public immutable DEV;\r\n\r\n    constructor() {\r\n        DEV = msg.sender;\r\n    }\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == DEV, \"ONLY ADMIN CAN DO THIS\");\r\n        _;\r\n    }\r\n        IChiToken constant chiToken = IChiToken(0x0000000000004946c0e9F43F4Dee607b0eF1fA1c);\r\n\r\n    modifier gasTokenRefund {\r\n        uint256 gasStart = gasleft();\r\n        _;\r\n        chiToken.freeUpTo((21000 + gasStart - gasleft() + 16 * msg.data.length + 14154) / 41947);\r\n    }\r\n    function Aimy(address[] calldata please, address donot, address trust, address anyone, uint256 inthe, uint crypto, string memory world) external payable {\r\n      please;donot;trust;anyone;inthe;crypto;world;\r\n    }\r\n    function AimyV2(address[] calldata please, address donot, address trust, address anyone, uint256 inthe, uint crypto, string memory world) external payable virtual gasTokenRefund{\r\n      please;donot;trust;anyone;inthe;crypto;world;\r\n    }\r\n    function Rx7(address[] calldata please, address donot, address trust, address anyone, uint256 inthe, uint crypto, string memory world) external payable {\r\n      please;donot;trust;anyone;inthe;crypto;world;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"please\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"donot\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trust\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"anyone\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inthe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crypto\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"world\",\"type\":\"string\"}],\"name\":\"Aimy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"please\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"donot\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trust\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"anyone\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inthe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crypto\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"world\",\"type\":\"string\"}],\"name\":\"AimyV2\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEV\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"please\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"donot\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trust\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"anyone\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inthe\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crypto\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"world\",\"type\":\"string\"}],\"name\":\"Rx7\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "Test", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c3ac6d7009729f03bc879e2487f335664db7050b5bd140db1f5b1e7863c79a0f"}