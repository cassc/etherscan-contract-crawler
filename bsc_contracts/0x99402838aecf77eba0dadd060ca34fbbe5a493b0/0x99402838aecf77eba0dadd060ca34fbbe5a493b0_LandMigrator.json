{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"Migrator.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface iERC20 {\\r\\n\\r\\n\\tfunction balanceOf(address who) external view returns (uint256 balance);\\r\\n\\r\\n\\tfunction allowance(address owner, address spender) external view returns (uint256 remaining);\\r\\n\\r\\n\\tfunction transfer(address to, uint256 value) external returns (bool success);\\r\\n\\r\\n\\tfunction approve(address spender, uint256 value) external returns (bool success);\\r\\n\\r\\n\\tfunction transferFrom(address from, address to, uint256 value) external returns (bool success);\\r\\n\\r\\n\\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\\r\\n\\r\\n\\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\\r\\n}\\r\\n\\r\\ncontract Context {\\r\\n\\tfunction _msgSender() internal view returns (address) {\\r\\n\\t\\treturn msg.sender;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _msgData() internal view returns (bytes memory) {\\r\\n\\t\\tthis;\\r\\n\\t\\treturn msg.data;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n\\t\\tassert(b <= a);\\r\\n\\t\\treturn a - b;\\r\\n\\t}\\r\\n\\r\\n\\tfunction add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n\\t\\tc = a + b;\\r\\n\\t\\tassert(c >= a);\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nlibrary SafeERC20 {\\r\\n\\tfunction safeTransfer(iERC20 _token, address _to, uint256 _value) internal {\\r\\n\\t\\trequire(_token.transfer(_to, _value));\\r\\n\\t}\\r\\n\\tfunction safeTransferFrom(iERC20 _token, address _from, address _to, uint256 _value) internal {\\r\\n\\t\\trequire(_token.transferFrom(_from, _to, _value));\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Controllable is Context {\\r\\n    mapping (address => bool) public controllers;\\r\\n\\r\\n\\tconstructor () {\\r\\n\\t\\taddress msgSender = _msgSender();\\r\\n\\t\\tcontrollers[msgSender] = true;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyController() {\\r\\n\\t\\trequire(controllers[_msgSender()], \\\"Controllable: caller is not a controller\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n    function addController(address _address) public onlyController {\\r\\n        controllers[_address] = true;\\r\\n    }\\r\\n\\r\\n    function removeController(address _address) public onlyController {\\r\\n        delete controllers[_address];\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract Pausable is Controllable {\\r\\n\\tevent Pause();\\r\\n\\tevent Unpause();\\r\\n\\r\\n\\tbool public paused = false;\\r\\n\\r\\n\\tmodifier whenNotPaused() {\\r\\n\\t\\trequire(!paused);\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier whenPaused() {\\r\\n\\t\\trequire(paused);\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction pause() public onlyController whenNotPaused {\\r\\n\\t\\tpaused = true;\\r\\n\\t\\temit Pause();\\r\\n\\t}\\r\\n\\r\\n\\tfunction unpause() public onlyController whenPaused {\\r\\n\\t\\tpaused = false;\\r\\n\\t\\temit Unpause();\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract LandMigrator is Controllable, Pausable {\\r\\n\\tusing SafeMath for uint256;\\r\\n\\tusing SafeERC20 for iERC20;\\r\\n\\r\\n\\tmapping (address => bool) public blocklist;\\r\\n\\r\\n    iERC20 public constant tokenOld = iERC20(0x9D986A3f147212327Dd658F712d5264a73a1fdB0); \\r\\n    iERC20 public constant tokenNew = iERC20(0xA73164DB271931CF952cBaEfF9E8F5817b42fA5C);\\r\\n    address public tokenPool; \\r\\n    uint256 public blocked;\\r\\n\\r\\n\\tconstructor(address _tokenPool) {\\r\\n        tokenPool = _tokenPool;\\r\\n    \\tcontrollers[msg.sender] = true;\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction switchPool(address _tokenPool) public onlyController {\\r\\n\\t    tokenPool = _tokenPool;\\r\\n\\t}\\r\\n\\r\\n\\tfunction receiveEther() public payable {\\r\\n\\t\\trevert();\\r\\n\\t}\\r\\n\\r\\n    function swap() public {\\r\\n        uint256 _amount = tokenOld.balanceOf(msg.sender);\\r\\n        require(_amount > 0,\\\"No balance of MRPH tokens\\\");\\r\\n        _swap(_amount);\\r\\n    }\\r\\n\\r\\n    function _swap(uint256 _amount) internal {\\r\\n        tokenOld.safeTransferFrom(address(msg.sender), tokenPool, _amount);\\r\\n        if (blocklist[msg.sender]) {\\r\\n            blocked.add(_amount);\\r\\n        } else {\\r\\n            tokenNew.safeTransferFrom(tokenPool, address(msg.sender), _amount);\\r\\n        }\\r\\n        emit swapped(_amount);\\r\\n    }\\r\\n    \\r\\n    function blockAddress(address _address, bool _state) external onlyController returns (bool) {\\r\\n\\t\\tblocklist[_address] = _state;\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferToken(address tokenAddress, uint256 amount) external onlyController {\\r\\n\\t\\tiERC20(tokenAddress).safeTransfer(msg.sender,amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction flushToken(address tokenAddress) external onlyController {\\r\\n\\t\\tuint256 amount = iERC20(tokenAddress).balanceOf(address(this));\\r\\n\\t\\tiERC20(tokenAddress).safeTransfer(msg.sender,amount);\\r\\n\\t}\\r\\n\\r\\n    event swapped(uint256 indexed amount);\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenPool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"blockAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blocklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"flushToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenPool\",\"type\":\"address\"}],\"name\":\"switchPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenNew\",\"outputs\":[{\"internalType\":\"contract iERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenOld\",\"outputs\":[{\"internalType\":\"contract iERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LandMigrator", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000b5226e5ec74923a048ea063d6687b98415e3722e", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f4de5c9b11196d40a996100d97c3074161a4247a9fedf8c244010eca5749e374"}