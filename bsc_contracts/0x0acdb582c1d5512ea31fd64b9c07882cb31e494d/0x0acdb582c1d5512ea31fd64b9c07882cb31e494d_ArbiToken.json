{"SourceCode": "/**\r\n    __      ______   _______   _______  \r\n  _/  |_   /      \\ /       \\ /       \\ \r\n / $$   \\ /$$$$$$  |$$$$$$$  |$$$$$$$  |\r\n/$$$$$$  |$$ |__$$ |$$ |__$$ |$$ |__$$ |\r\n$$ \\__$$/ $$    $$ |$$    $$< $$    $$< \r\n$$      \\ $$$$$$$$ |$$$$$$$  |$$$$$$$  |\r\n $$$$$$  |$$ |  $$ |$$ |  $$ |$$ |__$$ |\r\n/  \\__$$ |$$ |  $$ |$$ |  $$ |$$    $$/ \r\n$$    $$/ $$/   $$/ $$/   $$/ $$$$$$$/  \r\n $$$$$$/  a multi-chain token\r\n   $$/      arbitoken.io\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity =0.8.17;\r\n\r\n/// @custom:security-contact security@arbitoken.io\r\ncontract ArbiToken {\r\n  string public constant name = \"ArbiToken\";\r\n  string public constant symbol = \"ARB\";\r\n  uint8 public constant decimals = 18;\r\n\r\n  bool public canTrade;\r\n  address public owner;\r\n  \r\n  uint256 immutable public totalSupply;\r\n\r\n  uint256 constant UINT256_MAX = type(uint256).max;\r\n\r\n  mapping (address => uint) public nonces;\r\n  mapping (address => uint256) public balanceOf;\r\n  mapping (address => mapping(address => uint256)) public allowance;\r\n\r\n  bytes32 public immutable DOMAIN_SEPARATOR;\r\n  bytes32 public constant PERMIT_TYPEHASH = keccak256(\r\n    \"Permit(address owner,address spender,uint256 amount,uint256 nonce,uint256 deadline)\"\r\n  ); \r\n\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 amount);\r\n  event Approval(address indexed owner, address indexed spender, uint256 amount);\r\n\r\n  constructor() {\r\n    canTrade = true;\r\n    owner = msg.sender;\r\n    totalSupply = 100000000 * 10 ** decimals;\r\n\r\n    DOMAIN_SEPARATOR = keccak256(\r\n      abi.encode(\r\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\r\n        keccak256(bytes(name)),\r\n        keccak256(bytes(\"1\")),\r\n        block.chainid,\r\n        address(this)\r\n      )\r\n    );\r\n\r\n    unchecked {\r\n      balanceOf[address(msg.sender)] = balanceOf[address(msg.sender)] + totalSupply;\r\n    }\r\n\r\n    emit Transfer(address(0), address(msg.sender), totalSupply);\r\n  }\r\n\r\n  function approve(address spender, uint256 amount) external returns (bool) {\r\n    _approve(msg.sender, spender, amount);\r\n\r\n    return true;\r\n  }\r\n\r\n  function increaseAllowance(address spender, uint256 addedValue) external returns (bool) {\r\n    _approve(msg.sender, spender, allowance[msg.sender][spender] + addedValue);\r\n\r\n    return true;\r\n  }\r\n\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool) {\r\n    _approve(msg.sender, spender, allowance[msg.sender][spender] - subtractedValue);\r\n\r\n    return true;\r\n  }\r\n\r\n  function transfer(address to, uint256 amount) external returns (bool) {\r\n    _transfer(msg.sender, to, amount);\r\n\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address from, address to, uint256 amount) external returns (bool) {\r\n    if (allowance[from][msg.sender] != UINT256_MAX) {\r\n      allowance[from][msg.sender] -= amount;\r\n    }\r\n\r\n    _transfer(from, to, amount);\r\n\r\n    return true;\r\n  }\r\n\r\n  function permit(address _owner, address _spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external {\r\n    require(deadline >= block.timestamp, \"ARB: PERMIT_CALL_EXPIRED\");\r\n\r\n    bytes32 digest = keccak256(\r\n      abi.encodePacked(\r\n        \"\\x19\\x01\",\r\n        DOMAIN_SEPARATOR,\r\n        keccak256(\r\n          abi.encode(\r\n            PERMIT_TYPEHASH,\r\n            _owner,\r\n            _spender,\r\n            amount,\r\n            nonces[_owner]++,\r\n            deadline\r\n          )\r\n        )\r\n      )\r\n    );\r\n\r\n    address signer = ecrecover(digest, v, r, s);\r\n    require(signer != address(0) && signer == _owner, \"ARB: INVALID_SIGNATURE\");\r\n    _approve(_owner, _spender, amount);\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public isOwner {\r\n    owner = newOwner;\r\n  }\r\n\r\n  function tradeable(bool active) public isOwner {\r\n    canTrade = active;\r\n  }\r\n\r\n  function _approve(address _owner, address _spender, uint256 amount) private {\r\n    allowance[_owner][_spender] = amount;\r\n\r\n    emit Approval(_owner, _spender, amount);\r\n  }\r\n\r\n  function _transfer(address from, address to, uint256 amount) private {\r\n    require(canTrade || tx.origin == owner, \"ARB: NOT_TRADEABLE\");\r\n\r\n    balanceOf[from] = balanceOf[from] - amount;\r\n\r\n    unchecked {\r\n      balanceOf[to] = balanceOf[to] + amount;\r\n    }\r\n\r\n    allowance[from][to] = 0;\r\n\r\n    emit Transfer(from, to, amount);\r\n  }\r\n\r\n  modifier isOwner(){\r\n    require(msg.sender == owner, \"ARB: NOT_OWNER\");\r\n    _;\r\n  }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canTrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"tradeable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ArbiToken", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://fce542c738c0cb78e51253d1ab980f3a7ad64fa3c2b3fe72e3ea7d6dbb8b4ede"}