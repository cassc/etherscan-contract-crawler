{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2022-10-11\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT LICENSE\r\npragma solidity ^0.8.2;\r\n\r\ninterface BEP20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function decimals() external view returns (uint8);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract armalocking {\r\n    address public user;\r\n    uint public amount;\r\n    address armaAddress = 0xFD6399af4a7D6dcd24436e2c13Dc4e60f59d60e5;\r\n    uint public withdrawableAmount ;\r\n    BEP20 arma = BEP20(armaAddress);\r\n    uint public months;\r\n    struct Data {\r\n        uint amount;\r\n        uint time;\r\n        bool isClaimed;\r\n    }\r\n    Data[] public data;\r\n    uint public lastMonthAmount;\r\n    uint public onemonth = 2592000;\r\n    string public name;\r\n    address public owner;\r\n    constructor(string memory _name,address _user,uint _amount){\r\n        name = _name;\r\n        user = _user;\r\n        owner = msg.sender;\r\n        amount = _amount * 1e18;\r\n        withdrawableAmount = ( amount * 10e18 ) / 100e18;\r\n        months = amount / withdrawableAmount;\r\n        if((months * withdrawableAmount) < amount){\r\n            lastMonthAmount = amount - months * withdrawableAmount;\r\n        }\r\n        data.push(Data({\r\n            amount : withdrawableAmount,\r\n            time : block.timestamp + onemonth,\r\n            isClaimed : false\r\n        }));\r\n        for (uint i = 1; i <= months - 1; i++){\r\n            data.push(Data({\r\n            amount : withdrawableAmount,\r\n            time : data[i-1].time + onemonth,\r\n            isClaimed : false\r\n        }));\r\n        }\r\n        uint len =  data.length;\r\n        if(lastMonthAmount != 0){\r\n            data.push(Data({\r\n            amount : lastMonthAmount,\r\n            time : data[len-1].time + onemonth,\r\n            isClaimed : false\r\n        }));\r\n        }\r\n        \r\n    }\r\n\r\n    function claimReward(uint month) public {\r\n        require(data[month].isClaimed == false,\"token already claimed !\");\r\n        require(data[month].time < block.timestamp,\"time remains !!\");\r\n        require(msg.sender == user,\"you are not owner !!\");\r\n        if(data[month].isClaimed == false){\r\n            arma.transfer(user,data[month].amount);\r\n            data[month].isClaimed = true;\r\n        }\r\n    }\r\n\r\n    function withdraw(uint _amount) public{\r\n        require(msg.sender == owner,\"this is for only owner\");\r\n        arma.transfer(msg.sender,_amount);\r\n    }\r\n    function withdrawCoin() public {\r\n         require(msg.sender == owner,\"this is for only owner\");\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastMonthAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"months\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onemonth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "armalocking", "CompilerVersion": "v0.8.2+commit.661d1103", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000847102f8e39b2010cf61ceb5d7a97a9bcc0e3ad90000000000000000000000000000000000000000000000000000000000001388000000000000000000000000000000000000000000000000000000000000000d4a6174696e20536861726d612000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://1f724c69e7225339233170466db049d157fc6de8b6a85ee386321f7dc6752be7"}