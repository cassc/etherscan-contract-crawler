{"SourceCode": "pragma solidity ^0.8.0;\r\n\r\ninterface BEP20 {\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\ncontract Reserve_Fund {\r\n    \r\n    string public TokenName = \"MetaHype\";\r\n    address public owner;\r\n    address validator_address;\r\n    uint256 public  Percent_Of_Token_locked = 5;\r\n\r\n    modifier onlyValidator() {\r\n        require(msg.sender == validator_address,\"not validator\");\r\n        _;\r\n    }\r\n    constructor(address _owner, address _validator){\r\n        owner = _owner;\r\n        validator_address =  _validator;\r\n    }\r\n\r\n    function emergency(address _token , uint256 amount , address adddr) onlyValidator public {\r\n        BEP20(_token).transfer(adddr,amount);\r\n    }\r\n    \r\n    function changeOwnerAddress(address _new_address ) public onlyValidator {\r\n        require(_new_address != address(0),\"Address is not Valid \");\r\n        owner = _new_address;\r\n    }\r\n    function updateValidatorAddress(address _new_address ) public onlyValidator {\r\n        require(_new_address != address(0),\"Address is not Valid \");\r\n        validator_address = _new_address;\r\n    }\r\n\r\n\r\n\r\n\r\n   \r\n\r\n   \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Percent_Of_Token_locked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TokenName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new_address\",\"type\":\"address\"}],\"name\":\"changeOwnerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"adddr\",\"type\":\"address\"}],\"name\":\"emergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new_address\",\"type\":\"address\"}],\"name\":\"updateValidatorAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Reserve_Fund", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000949bc17676d6c096acc6db0bc21505293ae58e3400000000000000000000000068fee89df701181bade9f796a0c9d249d6f45e20", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://a7865d4eb8527c7890cc21e3230e786426621879301daa75475454d48b5e5c2d"}