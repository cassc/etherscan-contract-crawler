{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2021-12-01\r\n*/\r\n\r\n/**\r\n *Submitted for verification at BscScan.com on 2021-06-18\r\n*/\r\n\r\n/**\r\n *Submitted for verification at BscScan.com on 2021-05-11\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\ninterface tokenRecipient{\r\n    function receiveApproval(address  _from,uint256  _value, address  _token, bytes calldata _extraData) external ;\r\n}\r\ncontract ContinuumFinanceToken{\r\n    //public var\r\n    address public owner;\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n    \r\n    //store token data set\r\n    mapping(address => uint256) public balanceOf;\r\n    //transition limite\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    \r\n    //event for transition\r\n    event Transfer(address indexed from,address indexed to , uint256 value);\r\n    //event for allowance\r\n    event Approval(address indexed owner,address indexed spender,uint256 value);\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    //func constructor\r\n    constructor() {\r\n        owner = msg.sender;\r\n        name = \"ContinuumFinance\";\r\n        symbol = \"CTN\";\r\n        decimals = 18;\r\n        totalSupply = 330000000 * 10 ** uint256(18);\r\n        \r\n        //init totalSupply to map(db)\r\n        balanceOf[owner] = totalSupply;\r\n    }\r\n    \r\n \r\n    // public functions\r\n    // 1 Transfer tokens \r\n    function transfer(address _to,uint256 _value) public{\r\n        _transfer(msg.sender,_to,_value);\r\n    }\r\n    \r\n    // 2 Transfer Other's tokens ,who had approve some token to me \r\n    function transferFrom(address _from,address _to,uint256 _value) public returns (bool success){\r\n        //validate the allowance \r\n        require(_value<=allowance[_from][msg.sender]);\r\n        //do action :sub allowance and do transfer \r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from,_to,_value);\r\n        \r\n        return true;\r\n    }\r\n    //A is msg.sender or i \r\n    //B is the person who has approve me to use his token or _from \r\n    //C is the receipient or _to\r\n    \r\n    // 3 set allowance for other address,like B approve A(_spender) to use his token\r\n    function approve(address _spender,uint256 _value) public returns (bool success){\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n    // 4 allowance and notify the receipient/spender \r\n    function approveAndCall(address _spender,uint256 _value,bytes calldata _extraData) public returns (bool success){\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if(approve(_spender,_value)){\r\n            spender.receiveApproval(msg.sender,_value,address(this),_extraData);\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    // onlyOwner function \r\n\r\n    // 12 transfer contract  Ownership to newOwner and transfer all balanceOf oldOwner to newOwner\r\n    function transferOwnership(address newOwner) onlyOwner public{\r\n        _transfer(owner,newOwner,balanceOf[owner]);\r\n        owner = newOwner;\r\n    }\r\n\r\n    \r\n    //internal transfer function\r\n    // 1 _transfer\r\n    function _transfer(address _from,address _to, uint256 _value) internal {\r\n        //validate input and ot her internal limites\r\n        require(_to != address(0));//check to address\r\n        require(balanceOf[_from] >= _value);//check from address has enough balance \r\n        require(balanceOf[_to] + _value >balanceOf[_to]);//after transfer the balance of _to address is ok ,no overflow\r\n        uint256 previousBalances = balanceOf[_from]+balanceOf[_to];//store it for add asset to power the security\r\n        //do transfer:sub from _from address,and add to the _to address\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        //after transfer: emit transfer event,and add asset for security\r\n        emit Transfer(_from,_to,_value);\r\n        assert(balanceOf[_from]+balanceOf[_to] == previousBalances);\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ContinuumFinanceToken", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://75a6f4adeb58fd2051d717de2b1d4e231f5c928a97038291460d5330153e7277"}