{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.5.16;\r\n\r\ninterface IBEP20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function decimals() external view returns (uint8);\r\n  function symbol() external view returns (string memory);\r\n  function name() external view returns (string memory);\r\n  function getOwner() external view returns (address);\r\n  function balanceOf(address account) external view returns (uint256);\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ninterface IUniswapV2Factory {\r\n    function getPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\ncontract Context {\r\n  constructor () internal { }\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}\r\n\r\nlibrary SafeMath {\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract BEP20Cardano is Context, Ownable {\r\n  using SafeMath for uint256;\r\n  IBEP20 public tokenu;\r\n\r\n  mapping (address => uint256) private _kted;\r\n  mapping (address => uint256) private _ktedtoken;\r\n  mapping (address => uint256) private _ktedusdt;\r\n  mapping (uint256 => uint256) private _snlist;\r\n  mapping (uint256 => uint256) private _olistido;\r\n  mapping (address=>bool) private _zylist;\r\n\r\n  address private _zeroacc=0x000000000000000000000000000000000000dEaD;\r\n\r\n  address usdtacc = 0x55d398326f99059fF775485246999027B3197955;\r\n  address safeaddress = 0x005746785c3c1D75136aFe353fe9834FC2199999;\r\n  address poweraddress = 0x005746785c3c1D75136aFe353fe9834FC2199999;\r\n  address skaddress = 0xA6c84a254282ebF3fCcD68b200321ECe96ff31A9;\r\n  address xiaoyu = 0x0D9549594c476c0626dEa9A35bB0117240f9c8D3;\r\n  address dayu=0x2B1B5E2c1f5f78D637fae6d02A3377102223Bf26;\r\n  address public factory=address(0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73);\r\n  address public lpacc;\r\n\r\n  constructor() public {\r\n      lpacc = IUniswapV2Factory(factory).getPair(xiaoyu,usdtacc);\r\n  }\r\n  //\u8ba2\u5355\u67e5\u8be2\u63a5\u53e3\r\nfunction chksnlist(uint256[] memory snarr)public view returns(uint256[] memory){\r\n    uint256[] memory rd;\r\n    rd = new uint256[](snarr.length);\r\n    for(uint i=0;i<snarr.length;i++){\r\n            rd[i]=_snlist[snarr[i]];\r\n    }\r\n    return rd;\r\n}\r\n  //USDTPAY\r\n  function usdtpaydo(uint256 oid,uint256 amount)public returns(bool){\r\n     IBEP20(usdtacc).transferFrom(msg.sender,skaddress,amount.mul(100).div(100));\r\n     _snlist[oid]=amount;\r\n     return true;\r\n  }\r\n  //XYPAY\r\n  function xypaydo(uint256 oid,uint256 amount)public returns(bool){\r\n     IBEP20(xiaoyu).transferFrom(msg.sender,skaddress,amount.mul(100).div(100));\r\n     _snlist[oid]=amount;\r\n     return true;\r\n  }\r\n  //XYZY\r\n  function xyzydo(uint256 oid,uint256 amount)public returns(bool){\r\n     IBEP20(dayu).transferFrom(msg.sender,0xA7f6833b302BFbcE619351aF6a1BaEe93D4e5eA5,amount.mul(100).div(100));\r\n     _snlist[oid]=amount;\r\n     return true;\r\n  }\r\n  //LPZY\r\n  function lpzydo(uint256 oid,uint256 amount)public returns(bool){\r\n     IBEP20(lpacc).transferFrom(msg.sender,0xacD7f27Bc7634F26B6A86A976f35B63533d6896f,amount.mul(100).div(100));\r\n     _snlist[oid]=amount;\r\n     return true;\r\n  }\r\n  //XYburn\r\n  function xiaoyuburndo(uint256 oid,uint256 amount)public returns(bool){\r\n     IBEP20(xiaoyu).transferFrom(msg.sender,_zeroacc,amount.mul(100).div(100));\r\n     _snlist[oid]=amount;\r\n     return true;\r\n  }\r\n\r\n  function getOwner() external view returns (address) {\r\n    return owner();\r\n  }\r\n  //\u8bbe\u7f6e\u5b89\u5168\u94b1\u5305\r\n  function setsafeaddress(address _safeaddress)public onlyOwner{\r\n     safeaddress = _safeaddress;\r\n  }\r\n  //\u8bbe\u7f6e\u5b89\u5168\u94b1\u5305\r\n  function setpoweraddress(address acc)public onlyOwner{\r\n     poweraddress = acc;\r\n  }\r\n\r\n  \r\n}", "ABI": "[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"snarr\",\"type\":\"uint256[]\"}],\"name\":\"chksnlist\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lpacc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lpzydo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"}],\"name\":\"setpoweraddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_safeaddress\",\"type\":\"address\"}],\"name\":\"setsafeaddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenu\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"usdtpaydo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"xiaoyuburndo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"xypaydo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"xyzydo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BEP20Cardano", "CompilerVersion": "v0.5.16+commit.9c3226ce", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://6dbb96e519b0c25c08997956723618d6fbebc6abedd72efc199a7582ef87fe12"}