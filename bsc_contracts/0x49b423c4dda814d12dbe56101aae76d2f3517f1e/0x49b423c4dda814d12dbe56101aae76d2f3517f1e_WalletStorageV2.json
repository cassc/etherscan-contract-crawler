{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.12;\r\n\r\ninterface IWalletStorage\r\n{\r\n    function getBalance(address acc) external view returns(uint);\r\n    function getAllow(address acc, address spender) external view returns (uint);\r\n    function addBalance(address acc, uint amount) external;\r\n    function subBalance(address acc, uint amount) external;\r\n    function allow(address acc, address rec, uint amount) external;\r\n}\r\nabstract contract Context \r\n{\r\n    function _msgSender() internal view virtual returns (address) \r\n    {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) \r\n    {\r\n        this; \r\n        return msg.data;\r\n    }\r\n}\r\nabstract contract OwnableV2 is Context\r\n{\r\n    address _owner;\r\n    address public _newOwner;\r\n    constructor()  \r\n    {\r\n        _owner = payable(msg.sender);\r\n    }\r\n\r\n    modifier onlyOwner() \r\n    {\r\n        require(_msgSender() == _owner, \"Only owner\");\r\n        _;\r\n    }\r\n\r\n    function changeOwner(address newOwner) onlyOwner public\r\n    {\r\n        _newOwner = newOwner;\r\n    }\r\n    function confirm() public\r\n    {\r\n        require(_newOwner == msg.sender);\r\n        _owner = _newOwner;\r\n    }\r\n}\r\nabstract contract ContractOwnerV2 is OwnableV2\r\n{\r\n    address _contractOwner;\r\n\r\n    modifier isContractOwner()\r\n    {\r\n        require(msg.sender == _contractOwner, \"no access\");\r\n        _;\r\n    }\r\n    function setContractOwner(address contractOwner) onlyOwner public \r\n    {\r\n        _contractOwner = contractOwner;\r\n    }\r\n}\r\ncontract WalletStorageV2 is IWalletStorage, ContractOwnerV2\r\n{\r\n    mapping (address => uint) private _balances;\r\n    mapping (address => mapping(address =>uint) ) private _allowances;\r\n    \r\n/// VIEW\r\n    function getBalance(address acc) public  override view returns(uint)\r\n    {\r\n        return _balances[acc];\r\n    } \r\n    function getAllow(address acc, address spender) public  override view returns (uint) \r\n    {\r\n        return _allowances[acc][spender];\r\n    } \r\n///\r\n\r\n/// FUNC\r\n    function addBalance(address acc, uint amount)  public  override isContractOwner\r\n    {\r\n        _balances[acc] += amount;\r\n    } \r\n    function subBalance(address acc, uint amount)  public  override isContractOwner\r\n    {\r\n        if (_balances[acc] > amount) \r\n        {\r\n            _balances[acc] -= amount;\r\n        } \r\n        else\r\n        {\r\n           _balances[acc] =0;\r\n        } \r\n    } \r\n    function allow(address acc, address rec, uint amount)  public  override isContractOwner\r\n    {\r\n       _allowances[acc][rec] = amount;\r\n    } \r\n}", "ABI": "[{\"inputs\":[],\"name\":\"_newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rec\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"allow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"getAllow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractOwner\",\"type\":\"address\"}],\"name\":\"setContractOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acc\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"subBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "WalletStorageV2", "CompilerVersion": "v0.8.12+commit.f00d7308", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://06f833ddbffb01fc854e19b96db96fe76462c6247b5f35bd8419e5208c5e6b84"}