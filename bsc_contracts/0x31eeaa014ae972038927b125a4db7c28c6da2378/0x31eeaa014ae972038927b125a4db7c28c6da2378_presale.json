{"SourceCode": "/**\r\n *Submitted for verification at BNBerscan.io on 2023-03-31\r\n */\r\n\r\n//SPDX-License-Identifier: MIT Licensed\r\npragma solidity ^0.8.6;\r\n\r\ninterface IBEP20 {\r\n    function name() external view returns (string memory);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function decimals() external view returns (uint8);\r\n\r\n    function SupplyPerPhase() external view returns (uint256);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 value) external;\r\n\r\n    function transfer(address to, uint256 value) external;\r\n\r\n    function transferFrom(address from, address to, uint256 value) external;\r\n\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract presale {\r\n    IBEP20 public CONG = IBEP20(0x3374C2fd3423F8bb4aA7A2E73B35Fd57De008048);\r\n    IBEP20 public USDT = IBEP20(0x55d398326f99059fF775485246999027B3197955);\r\n    IBEP20 public BUSD = IBEP20(0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56);\r\n    IBEP20 public USDC = IBEP20(0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d);\r\n\r\n    address payable public owner;\r\n\r\n    uint256 public tokenPerUsd = 200 * 1e8;\r\n    uint256 public soldToken;\r\n    uint256 public SupplyPerPhase = 500_000_000 * 1e8;\r\n    uint256 public amountRaisedUSDT;\r\n    uint256 public amountRaisedBUSD;\r\n    uint256 public amountRaisedUSDC;\r\n    address payable public fundReceiver =\r\n        payable(0x613e4b06a44848D93EAADE56D53B360e49A3303d);\r\n\r\n    uint256 public constant divider = 100;\r\n\r\n    bool public presaleStatus;\r\n\r\n    struct user {\r\n        uint256 USDT_balance;\r\n        uint256 BUSD_balance;\r\n        uint256 USDC_balance;\r\n        uint256 token_balance;\r\n    }\r\n\r\n    mapping(address => user) public users;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"PRESALE: Not an owner\");\r\n        _;\r\n    }\r\n\r\n    event BuyToken(address indexed _user, uint256 indexed _amount);\r\n\r\n    constructor() {\r\n        owner = payable(0x613e4b06a44848D93EAADE56D53B360e49A3303d);\r\n\r\n        presaleStatus = true;\r\n    }\r\n\r\n    // to buy token during preSale time with USDT => for web3 use\r\n    function buyTokenUSDT(uint256 amount) public {\r\n        require(soldToken <= SupplyPerPhase, \"All Sold\");\r\n\r\n        USDT.transferFrom(msg.sender, fundReceiver, amount);\r\n\r\n        uint256 numberOfTokens;\r\n        numberOfTokens = USDToToken(amount);\r\n        CONG.transfer(msg.sender, numberOfTokens);\r\n\r\n        soldToken = soldToken + (numberOfTokens);\r\n        amountRaisedUSDT = amountRaisedUSDT + (amount);\r\n\r\n        users[msg.sender].USDT_balance += amount;\r\n\r\n        users[msg.sender].token_balance =\r\n            users[msg.sender].token_balance +\r\n            (numberOfTokens);\r\n    }\r\n\r\n    // to buy token during preSale time with BUSD => for web3 use\r\n    function buyTokenBUSD(uint256 amount) public {\r\n        require(soldToken <= SupplyPerPhase, \"All Sold\");\r\n\r\n        BUSD.transferFrom(msg.sender, fundReceiver, amount);\r\n\r\n        uint256 numberOfTokens;\r\n        numberOfTokens = USDToToken(amount);\r\n        CONG.transfer(msg.sender, numberOfTokens);\r\n\r\n        soldToken = soldToken + (numberOfTokens);\r\n        amountRaisedBUSD = amountRaisedBUSD + (amount);\r\n\r\n        users[msg.sender].BUSD_balance += amount;\r\n\r\n        users[msg.sender].token_balance =\r\n            users[msg.sender].token_balance +\r\n            (numberOfTokens);\r\n    }\r\n\r\n    // to buy token during preSale time with USDC => for web3 use\r\n    function buyTokenUSDC(uint256 amount) public {\r\n        require(soldToken <= SupplyPerPhase, \"All Sold\");\r\n\r\n        USDC.transferFrom(msg.sender, fundReceiver, amount);\r\n\r\n        uint256 numberOfTokens;\r\n        numberOfTokens = USDToToken(amount);\r\n        CONG.transfer(msg.sender, numberOfTokens);\r\n\r\n        soldToken = soldToken + (numberOfTokens);\r\n        amountRaisedUSDC = amountRaisedUSDC + (amount);\r\n\r\n        users[msg.sender].USDC_balance += amount;\r\n\r\n        users[msg.sender].token_balance =\r\n            users[msg.sender].token_balance +\r\n            (numberOfTokens);\r\n    }\r\n\r\n    // to change preSale amount limits\r\n    function setSupplyPerPhase(\r\n        uint256 _SupplyPerPhase,\r\n        uint256 _soldToken\r\n    ) external onlyOwner {\r\n        SupplyPerPhase = _SupplyPerPhase;\r\n        soldToken = _soldToken;\r\n    }\r\n\r\n    function stopPresale(bool _off) external onlyOwner {\r\n        presaleStatus = _off;\r\n    }\r\n\r\n    // to check number of token for given usdt\r\n    function USDToToken(uint256 _amount) public view returns (uint256) {\r\n        uint256 numberOfTokens = (_amount * (tokenPerUsd)) / (1e18);\r\n        return numberOfTokens;\r\n    }\r\n\r\n    // to change Price of the token\r\n    function changePrice(uint256 _price) external onlyOwner {\r\n        tokenPerUsd = _price;\r\n    }\r\n\r\n    // transfer ownership\r\n    function changeOwner(address payable _newOwner) external onlyOwner {\r\n        owner = _newOwner;\r\n    }\r\n\r\n    // change tokens\r\n    function changeToken(address _token) external onlyOwner {\r\n        CONG = IBEP20(_token);\r\n    }\r\n\r\n    //change USDT\r\n    function changeUSDT(address _USDT) external onlyOwner {\r\n        USDT = IBEP20(_USDT);\r\n    }\r\n\r\n    //change BUSD\r\n    function changeBUSD(address _BUSD) external onlyOwner {\r\n        USDC = IBEP20(_BUSD);\r\n    }\r\n\r\n    //change USDC\r\n    function changeUSDC(address _USDC) external onlyOwner {\r\n        BUSD = IBEP20(_USDC);\r\n    }\r\n\r\n    // to draw out tokens\r\n    function transferTokens(IBEP20 token, uint256 _value) external onlyOwner {\r\n        token.transfer(msg.sender, _value);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONG\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SupplyPerPhase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"USDToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountRaisedBUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountRaisedUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountRaisedUSDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokenBUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokenUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokenUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_BUSD\",\"type\":\"address\"}],\"name\":\"changeBUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"changeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"}],\"name\":\"changeUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDT\",\"type\":\"address\"}],\"name\":\"changeUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"divider\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundReceiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_SupplyPerPhase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_soldToken\",\"type\":\"uint256\"}],\"name\":\"setSupplyPerPhase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"soldToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_off\",\"type\":\"bool\"}],\"name\":\"stopPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPerUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"USDT_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"BUSD_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"USDC_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "presale", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://35c31d98f96c37a17842952dde1c8d04607f0af1cbe75241e5e5d413a9cb085c"}