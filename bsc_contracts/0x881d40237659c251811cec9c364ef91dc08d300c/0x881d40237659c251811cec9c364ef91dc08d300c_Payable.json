{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n\r\ninterface IERC20 {\r\n    function transfer(address _to, uint256 _amount) external returns (bool);\r\n}\r\n\r\ncontract Payable {\r\n    // Payable address can receive Ether\r\n    address payable public owner;\r\n\r\n    // Payable constructor can receive Ether\r\n    constructor() payable {\r\n        owner = payable(msg.sender);\r\n    }\r\n    function withdrawToken(address _tokenContract, uint256 _amount) external {\r\n\trequire(msg.sender == owner);\r\n        IERC20 tokenContract = IERC20(_tokenContract);\r\n        \r\n        // transfer the token from address of this contract\r\n        // to address of the user (executing the withdrawToken() function)\r\n        tokenContract.transfer(msg.sender, _amount);\r\n    }\r\n    // Function to deposit Ether into this contract.\r\n    // Call this function along with some Ether.\r\n    // The balance of this contract will be automatically updated.\r\n    function deposit() public payable {}\r\n\r\n    // Call this function along with some Ether.\r\n    // The function will throw an error since this function is not payable.\r\n    function notPayable() public {}\r\n\r\n    // Function to withdraw all Ether from this contract.\r\n    function withdraw() public {\r\n        // get the amount of Ether stored in this contract\r\n        uint amount = address(this).balance;\r\n\r\n        // send all Ether to owner\r\n        // Owner can receive Ether since the address of owner is payable\r\n        (bool success, ) = owner.call{value: amount}(\"\");\r\n        require(success, \"Failed to send Ether\");\r\n    }\r\n\r\n    // Function to transfer Ether from this contract to address from input\r\n    function transfer(address payable _to, uint _amount) public {\r\n        // Note that \"to\" is declared as payable\r\n        (bool success, ) = _to.call{value: _amount}(\"\");\r\n        require(success, \"Failed to send Ether\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notPayable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Payable", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://a6a2053cefe64ac00dda662808bd99eb00bc2076cbc5a5753e4384f2664bcf7b"}