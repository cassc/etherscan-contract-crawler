{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract ICOPresale {\r\n    mapping(address => uint256) public balances;\r\n    mapping(address => bool) public hasReceivedTokens;\r\n    uint256 public totalTokensSold;\r\n    uint256 public constant PRESALE_SUPPLY = 80000000 * 10**18;\r\nuint256 public constant START_DATE = 1674499200; // Unix timestamp for June 23, 2023 (00:00:00 UTC)\r\nuint256 public constant END_DATE = 1677801600; // Unix timestamp for November 30, 2023 (00:00:00 UTC)\r\nuint256 public constant DISTRIBUTION_DATE = 1677859200; // Unix timestamp for December 1, 2023 (00:00:00 UTC)\r\n\r\n    address private contractOwner;\r\n    IERC20 private tokenContract;\r\n\r\n    event TokensPurchased(address indexed buyer, uint256 amount);\r\n    event TokensClaimed(address indexed recipient, uint256 amount);\r\n\r\n    constructor(address _tokenContract) {\r\n        contractOwner = msg.sender;\r\n        tokenContract = IERC20(_tokenContract);\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == contractOwner, \"Only the contract owner can call this function.\");\r\n        _;\r\n    }\r\n\r\n    function purchaseTokens(address[] memory _addresses, uint256[] memory _tokenAmounts) external onlyOwner {\r\n        require(_addresses.length == _tokenAmounts.length, \"Input array lengths do not match.\");\r\n\r\n        for (uint256 i = 0; i < _addresses.length; i++) {\r\n            address buyer = _addresses[i];\r\n            uint256 amount = _tokenAmounts[i];\r\n\r\n            require(!hasReceivedTokens[buyer], \"Tokens have already been distributed to this buyer.\");\r\n            require(totalTokensSold + amount <= PRESALE_SUPPLY, \"Not enough tokens available for purchase.\");\r\n\r\n            balances[buyer] += amount;\r\n            totalTokensSold += amount;\r\n            emit TokensPurchased(buyer, amount);\r\n        }\r\n    }\r\n\r\n    function claimTokens() external {\r\n        require(block.timestamp >= DISTRIBUTION_DATE, \"Token claim period has not started yet.\");\r\n        require(!hasReceivedTokens[msg.sender], \"Tokens have already been claimed by this address.\");\r\n\r\n        uint256 tokenAmount = balances[msg.sender];\r\n        require(tokenAmount > 0, \"No tokens available for claim.\");\r\n\r\n        hasReceivedTokens[msg.sender] = true;\r\n        require(tokenContract.transfer(msg.sender, tokenAmount), \"Token transfer failed.\");\r\n        emit TokensClaimed(msg.sender, tokenAmount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DISTRIBUTION_DATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"END_DATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRESALE_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"START_DATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasReceivedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"purchaseTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ICOPresale", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000007a5b0a58a2e714a3ee2ead63f808d415103daa9b", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://9426eeabd16bb436e36398e34f0b4e73f8ce76c63190dd434f864ea3a9152433"}