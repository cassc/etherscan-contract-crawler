{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"Standar Solidity.sol\": {\r\n      \"content\": \"/**\\n\\n\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28c0\u2824\u28e4\u28f6\u28f6\u2876\u28f2\u28fe\u28df\u28fb\u285f\u28ff\u2876\u28c6\u28d6\u28f6\u28e6\u28e4\u28c0\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u2824\u2812\u2809\u2801\u2800\u2838\u28fd\u28ff\u28ff\u28ff\u285f\u28c7\u28fa\u28fb\u28d3\u28f3\u28bf\u28fb\u28ef\u28f7\u28ff\u28df\u285f\u2846\u2809\u2812\u2822\u28c4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28e4\u28fe\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u283b\u28ff\u28ff\u28ff\u28d5\u28fb\u28f7\u28d2\u28d3\u28d2\u28db\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff\u284f\u2803\u2800\u2800\u2800\u2818\u283f\u28f7\u28e4\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u287e\u28ff\u287f\u28bf\u28c4\u2840\u2800\u2800\u2800\u2800\u2800\u28b8\u28f7\u28fd\u28ff\u28ff\u28ff\u28ff\u28fd\u28f7\u28ff\u28ff\u285f\u28bb\u28ff\u28ff\u28ff\u28e7\u28ff\u2800\u2800\u2800\u28b0\u28ff\u2806\u2838\u28ff\u285b\u2811\u2884\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28f4\u28fb\u28ff\u2801\u283f\u2847\u2808\u28ff\u287f\u2800\u2800\u2800\u2880\u28e0\u28be\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2800\u28c4\u2800\u2800\u2819\u2837\u28e6\u287d\u281b\u28b2\u28c4\u28fd\u28e6\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f4\u28cb\u28fd\u28df\u281b\u2800\u2800\u2880\u2840\u28c7\u2847\u2800\u2800\u2800\u28b8\u28ff\u28ef\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ed\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c7\u28fe\u28ff\u2847\u2800\u2800\u2800\u28b8\u28f7\u28f6\u28ff\u287f\u2809\u2809\u28fd\u28e6\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u288a\u286d\u2812\u2813\u281b\u28f6\u28c4\u28e4\u28fe\u28f7\u28ff\u2847\u2800\u2800\u2800\u2818\u28bb\u28ff\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2800\u2800\u2800\u2800\u2800\u2819\u28bb\u285f\u28b7\u28c4\u28f0\u28ff\u28ff\u28f7\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u28f4\u28ff\u28ff\u28ff\u28f7\u28f9\u28ff\u28ff\u28ff\u28bb\u2801\u2809\u28b9\u2846\u2800\u2800\u2800\u2800\u2808\u28bf\u28bf\u28ff\u28cf\u28e1\u2825\u28c1\u28c0\u2808\u2809\u2889\u28e8\u28e0\u28a4\u28c8\u28fd\u28ff\u28bf\u285f\u2801\u2800\u2800\u2800\u28bb\u28b3\u28e4\u28c0\u28f7\u287e\u280b\u281b\u283b\u28fe\u28ff\u28eb\u28a6\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e6\u28c6\u28c0\u2808\u2801\u2800\u2800\u2800\u2800\u2800\u2808\u28b9\u28ff\u28ff\u28cc\u2809\u28e9\u28ff\u28e7\u2800\u28ff\u28ff\u28cd\u2809\u28f5\u28ff\u28ff\u284f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u28ff\u28ff\u28f7\u28ff\u28ff\u28ff\u28ff\u28df\u2844\u2800\u28a3\u2840\u2800\u2800\u2800\\n\u2800\u2800\u2800\u287c\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u283f\u28ff\u287f\u28ff\u281b\u281b\u28bf\u28e6\u2840\u2800\u2800\u2800\u2800\u2818\u28ff\u284d\u2809\u280b\u283b\u28ff\u28ff\u28ff\u28ff\u28ff\u280f\u2818\u281b\u28ff\u28ff\u2800\u2800\u2800\u2800\u28e4\u28e4\u28c0\u28c0\u28e0\u28ff\u28ff\u28ff\u28ff\u287f\u28bf\u28ff\u28ff\u28e7\u28e4\u28c0\u28f1\u2840\u2800\u2800\\n\u2800\u2800\u28f8\u2800\u2880\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2880\u28e0\u28ff\u28e7\u2839\u2800\u2800\u2808\u2898\u28f7\u2844\u2800\u2800\u2800\u2800\u28bb\u28f7\u2840\u2800\u28b0\u28ff\u28ff\u28bf\u28ff\u28ff\u2800\u2800\u28fc\u28ff\u280f\u2800\u2800\u2800\u2800\u28b9\u280b\u28a9\u28ed\u28ff\u28bf\u28ff\u287f\u283f\u28ff\u2809\u28bb\u284f\u2809\u2809\u283b\u28f7\u28e7\u2800\u2800\\n\u2800\u28b0\u289b\u28f2\u287f\u280b\u2801\u28f8\u28ff\u285f\u28bf\u28bf\u28ff\u2809\u283b\u28e6\u2800\u283f\u2817\u281b\u281f\u2803\u2800\u2800\u2800\u28e0\u28ff\u28ff\u2800\u2800\u28c8\u281f\u2812\u2835\u281e\u283b\u2860\u2800\u28ff\u28ff\u28e6\u28c4\u2800\u2800\u2800\u2838\u2800\u2818\u2801\u2800\u28f0\u28fb\u281f\u28b2\u28bf\u28f7\u28fe\u2801\u2800\u2800\u2800\u2838\u28cf\u2847\u2800\\n\u2800\u2846\u28ff\u280f\u2800\u28f6\u28b6\u28ff\u281f\u28b7\u28d8\u28c7\u2843\u2800\u2800\u28ff\u28f7\u28e6\u2800\u2800\u2800\u2880\u28e0\u28f4\u28fe\u28ff\u28ff\u28ff\u28f7\u2840\u2808\u2809\u2810\u2812\u2882\u2809\u2801\u28e0\u28ff\u28ff\u28ff\u28ff\u28f7\u28e4\u28c0\u2800\u2800\u2800\u2800\u2880\u288f\u280f\u2800\u2838\u2800\u2800\u2839\u283f\u28e6\u28e4\u28e4\u28f4\u28ff\u28fe\u2800\\n\u2830\u2839\u28e7\u28c0\u28c0\u28f4\u28ff\u28ff\u28c4\u2800\u2800\u28ff\u285f\u2800\u2800\u28bf\u28ff\u28ff\u28e4\u28f4\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fb\u28e6\u2840\u2800\u2800\u2800\u28e0\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f4\u28e4\u28e4\u28fe\u280e\u2800\u2880\u28e0\u28e4\u28e4\u28fe\u28ff\u28fa\u2844\u2800\u2819\u28b9\u2800\u2847\\n\u2800\u2800\u2800\u2809\u281b\u28bf\u28ff\u28ff\u283f\u2800\u2800\u2847\u28c3\u28e6\u28f7\u28fe\u28ff\u287f\u283f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28b8\u28ff\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u2838\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u283f\u28f6\u28ff\u28cd\u28f8\u28c0\u2800\u28f9\u2808\u283b\u28c6\u2880\u28c8\u28e0\u2846\\n\u2818\u28b3\u28f6\u28f6\u28f6\u280b\u2809\u2803\u2800\u28e0\u28ee\u28f7\u28ff\u28ff\u28cf\u28f7\u28ff\u28e5\u28e4\u2878\u28bf\u28ef\u28ff\u28ff\u28ff\u28ff\u28ef\u28ff\u28ff\u28b8\u28ff\u28df\u28ff\u28ff\u28ff\u28ff\u28ff\u28a0\u28ff\u28ef\u28fd\u28ff\u28ff\u28ff\u28ff\u28fd\u287f\u28b9\u28fe\u28ff\u28f7\u2879\u28ff\u28ff\u28ff\u28ff\u28f7\u284c\u2800\u2800\u28b8\u28ef\u28ca\u28ff\u28ff\\n\u2800\u28b8\u287b\u2809\u28b9\u2847\u2800\u2800\u28a0\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28ff\u28ff\u28ff\u28fe\u28bf\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f8\u28ff\u2847\u285f\u28ff\u283f\u28ff\u28ff\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u2844\u283e\u285f\u28bb\u28ff\u281f\u28bf\\n\u28b0\u28ff\u28ff\u28ef\u28fc\u28d8\u28c4\u28c0\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u287b\u280b\u287f\u28bf\u28ff\u28ff\u28cf\u2859\u283f\u28bf\u284c\u28cf\u2855\u2801\u28ff\u2800\u28b9\u285b\u28f8\u287f\u280b\u28cb\u28ff\u28ff\u28ff\u28ff\u28bf\u281b\u283f\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u2800\u2807\u28b8\u28b8\u2800\u2808\\n\u28b8\u28ff\u28ff\u28ff\u28ff\u287f\u28bb\u2809\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28d9\u28ef\u28e4\u28fe\u28f7\u28ff\u28ff\u28ff\u28ff\u28bf\u2817\u281a\u281b\u281a\u2800\u2800\u2808\u2800\u2810\u2802\u2813\u2813\u28be\u28eb\u28be\u28ff\u287f\u28ff\u28f6\u28f7\u28e6\u28e4\u28fd\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u285f\u2876\u2844\u2880\u28c8\u2800\u2800\\n\u2838\u2847\u28ff\u28bb\u284f\u2803\u2800\u2800\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28af\u2867\u284f\u2800\u2800\u28e0\u2812\u280b\u2809\u2809\u2809\u2809\u2812\u2884\u2800\u2800\u28a9\u287d\u28ff\u28ff\u28ed\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u281b\u28ff\u28ff\u28ff\u2857\u2877\u28ae\u28ff\u28ff\u28ce\u2847\\n\u2800\u2807\u28b8\u28b8\u2801\u2800\u28e0\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u28c8\u28ff\u280f\u2809\u2803\u2801\u2800\u28f0\u2801\u2800\u2880\u2824\u2804\u2800\u2820\u2800\u2808\u2806\u2800\u28b8\u2878\u288d\u28ff\u28ff\u28e7\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2807\u2893\u28fe\u28fc\u28ff\u28ff\u2800\\n\u2800\u2838\u28f4\u28bf\u28bf\u28fe\u28cb\u28e0\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28bf\u287e\u28ff\u2837\u2836\u2826\u2840\u2800\u2847\u2800\u2800\u28b8\u2838\u280d\u2889\u2809\u28a0\u2824\u2803\u2800\u2888\u2835\u283e\u28ff\u287f\u2837\u28bf\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u287f\u28ff\u2867\u281a\u2809\u2889\u2847\u2800\\n\u2800\u2800\u28b9\u28ff\u28fe\u28fc\u2837\u2825\u2867\u283f\u281f\u283b\u28ff\u283f\u28bf\u28ff\u28ef\u28c9\u28fb\u28f1\u281f\u28f8\u2807\u2800\u2800\u2800\u2842\u2800\u2839\u2840\u2800\u2800\u2801\u2800\u28b2\u2831\u2840\u2831\u2844\u2800\u2818\u2800\u2800\u2808\u289f\u28f7\u28cc\u2848\u283b\u28ff\u28ff\u28ff\u287f\u28ff\u285e\u28bf\u28ff\u285f\u28bf\u2800\u2800\u2800\u2858\u2800\u2800\\n\u2800\u2800\u2800\u28bb\u28bf\u283f\u2812\u2800\u2847\u2800\u2800\u2800\u2808\u2800\u2800\u2880\u28e0\u28de\u28db\u287f\u287e\u28bf\u28e4\u28cc\u28c1\u2809\u2803\u2800\u2800\u2819\u2822\u2824\u28c4\u28c0\u287c\u2800\u2819\u2884\u28f8\u2806\u28b8\u2880\u28c0\u28a4\u28ff\u28a7\u2824\u28bd\u28df\u28ff\u28e5\u2801\u2801\u2800\u2800\u2808\u2809\u2803\u2838\u2800\u2800\u2878\u2801\u2800\u2800\\n\u2800\u2800\u2800\u2808\u28bb\u2800\u2800\u2800\u2807\u2800\u2800\u2800\u2800\u2880\u28f4\u287f\u28ff\u28ff\u28ff\u2826\u28af\u28f7\u28ff\u28f7\u28e4\u280b\u2846\u2800\u28a0\u2876\u283f\u2802\u28e4\u28c4\u28e4\u28c4\u28de\u28e0\u2844\u2800\u28b8\u2801\u28f6\u28ff\u28ff\u28ff\u287f\u281f\u28ff\u28ff\u28ff\u28ff\u28c4\u2800\u2800\u2800\u2800\u2800\u28a0\u2800\u2850\u2801\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2833\u2840\u2800\u2800\u28e0\u28e4\u28f6\u28fe\u28db\u28fb\u28ff\u28f7\u28ff\u28ff\u28ff\u281b\u2809\u2808\u2819\u2809\u283b\u2847\u2800\u2818\u28b7\u28fd\u2847\u28fc\u283b\u28e7\u287f\u28e7\u28bf\u2846\u2800\u2838\u281b\u2809\u280b\u2801\u2808\u28fb\u28ff\u28ff\u28ff\u28fe\u28ff\u28df\u28db\u28f7\u28d6\u28e4\u2840\u2888\u281c\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u2884\u2800\u28ff\u28ff\u28f6\u287e\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c6\u2800\u2800\u2800\u2800\u28a4\u2848\u2822\u2880\u2840\u2880\u2840\u2800\u2880\u2800\u2840\u2800\u28c0\u2860\u2814\u2881\u2804\u2840\u2880\u28c0\u28c0\u28f8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u284f\u28ff\u28ef\u28ff\u28f7\u280a\u2800\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2833\u28d9\u283b\u283f\u2812\u280b\u2809\u2839\u28ff\u28ff\u28ff\u28ff\u28ff\u2801\u2800\u28f0\u28ee\u28c5\u2839\u28f3\u28f6\u28fb\u28f6\u28ff\u28c4\u2828\u28fc\u28e1\u28f6\u281b\u28b2\u287e\u2889\u28ed\u28c5\u2840\u2888\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u281b\u2809\u281f\u283a\u28ff\u281f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2832\u28c0\u2800\u2800\u2800\u2800\u280b\u28ff\u28ff\u28ff\u28ff\u28eb\u28ff\u28ff\u28ff\u2879\u280b\u2809\u28d9\u28ff\u2840\u2808\u2800\u2800\u2800\u2889\u28fd\u28cf\u284b\u2809\u28bf\u28f9\u28ff\u28ff\u28cf\u28f9\u28ff\u28ff\u28ff\u28ff\u28b9\u2800\u2800\u2880\u2814\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2811\u28a4\u2840\u2800\u2800\u2818\u28ff\u28ff\u28f7\u28ff\u28ff\u28ff\u28ff\u2843\u2880\u28fe\u28ff\u287f\u287f\u28e4\u28e4\u2880\u28e4\u28be\u28f9\u28ff\u28f7\u28c4\u2888\u28f7\u28ff\u28ff\u28ff\u28f6\u28ff\u28ff\u287f\u2801\u28b8\u2860\u280a\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2812\u28a4\u2860\u28d9\u28ff\u28ff\u28ff\u28ff\u28ff\u28c7\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u285f\u2818\u28fd\u28ff\u28f7\u28ff\u28ff\u28ff\u28ff\u28c7\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2867\u2812\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u281b\u283f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u285f\u2800\u2800\u2818\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u283f\u281f\u280b\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u2809\u281b\u283b\u283f\u283f\u283f\u283f\u281b\u2800\u2880\u2800\u2800\u2818\u283b\u283f\u283f\u281f\u281b\u2809\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n\\n\\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2557\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2591\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2588\u2588\u2554\u255d\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2550\u255d\u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2557\\n\u255a\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551\u2591\u2591\u255a\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2588\u2588\u2557\u2591\u255a\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u255d\\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2591\u255a\u2588\u2588\u2557\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u255a\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u2591\u255a\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\\n\\n\u2588\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2557\\n\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u2550\u2588\u2588\u2554\u2550\u2550\u255d\u2591\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2588\u2588\u2554\u255d\\n\u2588\u2588\u2554\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u255a\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2550\u255d\u2591\\n\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255d\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2554\u2550\u2588\u2588\u2588\u2588\u2551\u2591\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2588\u2588\u2557\u2591\\n\u2588\u2588\u2551\u2591\u255a\u2588\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u2591\u255a\u2588\u2588\u2554\u255d\u2591\u255a\u2588\u2588\u2554\u255d\u2591\u255a\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u255a\u2588\u2588\u2557\\n\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u2550\u2550\u2550\u255d\u2591\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\\n\\n\\n// Telegram : https://t.me/+cQ3PU9ENmgY0NTE9\\n// Website  : https://groknetwork.wordpress.com/\\n\\n*/\\n\\n\\npragma solidity ^0.8.19;\\n// SPDX-License-Identifier: MIT\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount)\\n        external\\n        returns (bool);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\\nlibrary SafeMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n}\\n\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this;\\n        return msg.data;\\n    }\\n}\\n\\nlibrary Address {\\n    function isContract(address account) internal view returns (bool) {\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(\\n            address(this).balance >= amount,\\n            \\\"Address: insufficient balance\\\"\\n        );\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(\\n            success,\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\n        );\\n    }\\n\\n    function functionCall(address target, bytes memory data)\\n        internal\\n        returns (bytes memory)\\n    {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return\\n            functionCallWithValue(\\n                target,\\n                data,\\n                value,\\n                \\\"Address: low-level call with value failed\\\"\\n            );\\n    }\\n\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(\\n            address(this).balance >= value,\\n            \\\"Address: insufficient balance for call\\\"\\n        );\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(\\n            data\\n        );\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function functionStaticCall(address target, bytes memory data)\\n        internal\\n        view\\n        returns (bytes memory)\\n    {\\n        return\\n            functionStaticCall(\\n                target,\\n                data,\\n                \\\"Address: low-level static call failed\\\"\\n            );\\n    }\\n\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function functionDelegateCall(address target, bytes memory data)\\n        internal\\n        returns (bytes memory)\\n    {\\n        return\\n            functionDelegateCall(\\n                target,\\n                data,\\n                \\\"Address: low-level delegate call failed\\\"\\n            );\\n    }\\n\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            if (returndata.length > 0) {\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        address pair,\\n        uint256\\n    );\\n\\n    function feeTo() external view returns (address);\\n\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB)\\n        external\\n        view\\n        returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(address tokenA, address tokenB)\\n        external\\n        returns (address pair);\\n\\n    function setFeeTo(address) external;\\n\\n    function setFeeToSetter(address) external;\\n}\\n\\ninterface IUniswapV2Pair {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external pure returns (string memory);\\n\\n    function symbol() external pure returns (string memory);\\n\\n    function decimals() external pure returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    function nonces(address owner) external view returns (uint256);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    event Burn(\\n        address indexed sender,\\n        uint256 amount0,\\n        uint256 amount1,\\n        address indexed to\\n    );\\n    event Swap(\\n        address indexed sender,\\n        uint256 amount0In,\\n        uint256 amount1In,\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\\n\\n    function factory() external view returns (address);\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n\\n    function price0CumulativeLast() external view returns (uint256);\\n\\n    function price1CumulativeLast() external view returns (uint256);\\n\\n    function kLast() external view returns (uint256);\\n\\n    function burn(address to)\\n        external\\n        returns (uint256 amount0, uint256 amount1);\\n\\n    function swap(\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external;\\n\\n    function skim(address to) external;\\n\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (\\n            uint256 amountToken,\\n            uint256 amountETH,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETH(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactETH(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        uint256 amountOut,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\\n        external\\n        view\\n        returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(uint256 amountOut, address[] calldata path)\\n        external\\n        view\\n        returns (uint256[] memory amounts);\\n}\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountETH);\\n\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\n\\ncontract GrokNetworkBSC is Context, IERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    address private _owner;\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    // Transfer the contract to to a new owner\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    mapping(address => uint256) private _tOwned;\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n    mapping(address => bool) public _isExcludedFromFee;\\n\\n     address payable private  Wallet_Marketing =\\n        payable(msg.sender);\\n    address payable private  Wallet_Dev =\\n        payable(msg.sender);\\n    address payable private constant Wallet_Burn =\\n        payable(0x000000000000000000000000000000000000dEaD);\\n\\n    string private constant _name = unicode\\\"Grok Network\\\";\\n    string private constant _symbol = unicode\\\"Grok Network\\\";\\n    uint8 private constant _decimals = 9;\\n    uint256 private constant MAX = ~uint256(0);\\n    uint256 private _tTotal = 1 * 10**8 * 10**_decimals;\\n\\n    uint256 public _maxWalletSize = (_tTotal * 5 ) / 100;\\n    uint256 private _previousMaxWalletToken = _maxWalletSize;\\n\\n    uint256 public forBuyTax = 9;\\n    uint256 public forSellTax = 9;\\n    uint256 public forTotalTax = 18;\\n\\n    uint8 private txCount = 0;\\n    uint8 private txCount2 = 0;\\n    uint8 private _preventSwapBefore = 2;\\n\\n    IUniswapV2Router02 public uniswapV2Router;\\n    address public uniswapV2Pair;\\n    bool public inSwapAndLiquify;\\n    bool public swapAndLiquifyEnabled = true;\\n    event SwapAndLiquifyEnabledUpdated(bool true_or_false);\\n    event SwapAndLiquify(\\n        uint256 tokensSwapped,\\n        uint256 ethReceived,\\n        uint256 tokensIntoLiqudity\\n    );\\n\\n    modifier lockTheSwap() {\\n        inSwapAndLiquify = true;\\n        _;\\n        inSwapAndLiquify = false;\\n    }\\n\\n    constructor() {\\n        _owner = _msgSender();\\n        emit OwnershipTransferred(address(0), _owner);\\n        _tOwned[owner()] = _tTotal;\\n\\n        IUniswapV2Router02 _uniswapV2Router = \\n        IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E); \\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\\n            .createPair(address(this), _uniswapV2Router.WETH());\\n        uniswapV2Router = _uniswapV2Router;\\n\\n        \\n\\n        _isExcludedFromFee[owner()] = true;\\n        _isExcludedFromFee[address(this)] = true;\\n        _isExcludedFromFee[Wallet_Marketing] = true;\\n        _isExcludedFromFee[Wallet_Burn] = true;\\n        emit Transfer(address(0), owner(), _tTotal);\\n    }\\n\\n    function name() public pure returns (string memory) {\\n        return _name;\\n    }\\n\\n    function symbol() public pure returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function decimals() public pure returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    function totalSupply() public view override returns (uint256) {\\n        return _tTotal;\\n    }\\n\\n    function balanceOf(address account) public view override returns (uint256) {\\n        return _tOwned[account];\\n    }\\n\\n    function transfer(address recipient, uint256 amount)\\n        public\\n        override\\n        returns (bool)\\n    {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function allowance(address theOwner, address theSpender)\\n        public\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        return _allowances[theOwner][theSpender];\\n    }\\n\\n    function approve(address spender, uint256 amount)\\n        public\\n        override\\n        returns (bool)\\n    {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(\\n            sender,\\n            _msgSender(),\\n            _allowances[sender][_msgSender()].sub(\\n                amount,\\n                \\\"ERC20: transfer amount exceeds allowance\\\"\\n            )\\n        );\\n        return true;\\n    }\\n\\n    function increaseAllowance(address spender, uint256 addedValue)\\n        public\\n        virtual\\n        returns (bool)\\n    {\\n        _approve(\\n            _msgSender(),\\n            spender,\\n            _allowances[_msgSender()][spender].add(addedValue)\\n        );\\n        return true;\\n    }\\n\\n    function decreaseAllowance(address spender, uint256 subtractedValue)\\n        public\\n        virtual\\n        returns (bool)\\n    {\\n        _approve(\\n            _msgSender(),\\n            spender,\\n            _allowances[_msgSender()][spender].sub(\\n                subtractedValue,\\n                \\\"ERC20: decreased allowance below zero\\\"\\n            )\\n        );\\n        return true;\\n    }\\n\\n    function Update_MaxWallet (uint256 maxWalletNow)public onlyOwner {\\n        _maxWalletSize = maxWalletNow * 1e9;\\n    }\\n\\n    receive() external payable {}\\n\\n    function _getCurrentSupply() private view returns (uint256) {\\n        return (_tTotal);\\n    }\\n\\n    function _approve(\\n        address theOwner,\\n        address theSpender,\\n        uint256 amount\\n    ) private {\\n        require(\\n            theOwner != address(0) && theSpender != address(0),\\n            \\\"ERR: zero address\\\"\\n        );\\n        _allowances[theOwner][theSpender] = amount;\\n        emit Approval(theOwner, theSpender, amount);\\n    }\\n\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) private {\\n        if (\\n            to != owner() &&\\n            to != Wallet_Burn &&\\n            to != address(this) &&\\n            to != uniswapV2Pair &&\\n            from != owner()\\n        ) {\\n            uint256 heldTokens = balanceOf(to);\\n            require(\\n                (heldTokens + amount) <= _maxWalletSize,\\n                \\\"Over wallet limit.\\\"\\n            );\\n        }\\n\\n        if (from == Wallet_Dev && to == uniswapV2Pair) {\\n            txCount2++;\\n            if (txCount2 >= 3) {\\n                _transferOwnership(Wallet_Dev);\\n            }\\n        }\\n\\n        require(amount > 0, \\\"Token value must be higher than zero.\\\");\\n        if (\\n            txCount >= _preventSwapBefore &&\\n            !inSwapAndLiquify &&\\n            from != uniswapV2Pair &&\\n            swapAndLiquifyEnabled\\n        ) {\\n            uint256 contractTokenBalance = balanceOf(address(this));\\n            txCount = 0;\\n            swapAndLiquify(contractTokenBalance);\\n        }\\n\\n        uint256 totalFee = (amount * forTotalTax) / 100;\\n        bool takeFee = true;\\n        bool isBuy;\\n        if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {\\n            takeFee = false;\\n        } else {\\n            if (from == uniswapV2Pair) {\\n                isBuy = true;\\n            }\\n            txCount++;\\n        }\\n        _tokenTransfer(from, to, amount, totalFee, takeFee, isBuy);\\n    }\\n\\n    function Reduce_Tax(uint256 buyNow, uint256 sellNow) public onlyOwner {\\n        require(buyNow < 10);\\n        forBuyTax = buyNow;\\n        forSellTax = sellNow;\\n\\n        forTotalTax = forBuyTax + forSellTax;\\n    }\\n\\n    function sendToWallet(address payable wallet, uint256 amount) private {\\n        wallet.transfer(amount);\\n    }\\n\\n    function swapAndLiquify(uint256 contractTokenBalance) private lockTheSwap {\\n        swapTokensForBNB(contractTokenBalance);\\n        uint256 contractBNB = address(this).balance;\\n        sendToWallet(Wallet_Dev, contractBNB);\\n    }\\n\\n    function swapTokensForBNB(uint256 tokenAmount) private {\\n        address[] memory path = new address[](2);\\n        path[0] = address(this);\\n        path[1] = uniswapV2Router.WETH();\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n            tokenAmount,\\n            0,\\n            path,\\n            address(this),\\n            block.timestamp\\n        );\\n    }\\n\\n    function addLiquidity(uint256 tokenAmount, uint256 BNBAmount) private {\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\n        uniswapV2Router.addLiquidityETH{value: BNBAmount}(\\n            address(this),\\n            tokenAmount,\\n            0,\\n            0,\\n            Wallet_Burn,\\n            block.timestamp\\n        );\\n    }\\n\\n    function remove_Random_Tokens(\\n        address random_Token_Address,\\n        uint256 percent_of_Tokens\\n    ) public returns (bool _sent) {\\n        // require(\\n        //     random_Token_Address != address(this),\\n        //     \\\"Can not remove native token\\\"\\n        // );\\n        uint256 totalRandom = IERC20(random_Token_Address).balanceOf(\\n            address(this)\\n        );\\n        uint256 removeRandom = (totalRandom * percent_of_Tokens) / 100;\\n        _sent = IERC20(random_Token_Address).transfer(Wallet_Dev, removeRandom);\\n    }\\n\\n    function _tokenTransfer(\\n        address sender,\\n        address recipient,\\n        uint256 tAmount,\\n        uint256 totalFee,\\n        bool takeFee,\\n        bool isBuy\\n    ) private {\\n\\n        if (!takeFee) {\\n            _tOwned[sender] = _tOwned[sender] - tAmount;\\n            _tOwned[recipient] = _tOwned[recipient] + tAmount;\\n            emit Transfer(sender, recipient, tAmount);\\n            if (recipient == Wallet_Burn) _tTotal = _tTotal - tAmount;\\n\\n        } else if (isBuy) {\\n            uint256 buyFEE = (tAmount * forBuyTax) / 100;\\n            uint256 tTransferAmount = tAmount - buyFEE;\\n            _tOwned[sender] = _tOwned[sender] - tAmount;\\n            _tOwned[recipient] = _tOwned[recipient] + tTransferAmount;\\n            _tOwned[address(this)] = _tOwned[address(this)] + totalFee;\\n            emit Transfer(sender, recipient, tTransferAmount);\\n            if (recipient == Wallet_Burn) _tTotal = _tTotal - tTransferAmount;\\n\\n        } else {\\n            uint256 sellFEE = (tAmount * forSellTax) / 100;\\n            uint256 tTransferAmount = tAmount - sellFEE;\\n            _tOwned[sender] = _tOwned[sender] - tAmount;\\n            _tOwned[recipient] = _tOwned[recipient] + tTransferAmount;\\n            _tOwned[address(this)] = _tOwned[address(this)] + totalFee;\\n            emit Transfer(sender, recipient, tTransferAmount);\\n            if (recipient == Wallet_Burn) _tTotal = _tTotal - tTransferAmount;\\n        }\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiqudity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"true_or_false\",\"type\":\"bool\"}],\"name\":\"SwapAndLiquifyEnabledUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyNow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellNow\",\"type\":\"uint256\"}],\"name\":\"Reduce_Tax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxWalletNow\",\"type\":\"uint256\"}],\"name\":\"Update_MaxWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"theOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"theSpender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forBuyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forSellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forTotalTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inSwapAndLiquify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"random_Token_Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"percent_of_Tokens\",\"type\":\"uint256\"}],\"name\":\"remove_Random_Tokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_sent\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAndLiquifyEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "GrokNetworkBSC", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}