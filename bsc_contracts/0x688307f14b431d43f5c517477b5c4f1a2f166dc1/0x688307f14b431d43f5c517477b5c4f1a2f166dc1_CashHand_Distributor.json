{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2023-10-03\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract CashHand_Distributor {\r\n    address public USDCAddress;\r\n    address[] public aportadores;\r\n    uint256[] public aportes;\r\n    uint256 public totalAportes;\r\n    uint256 public maxAportadores = 1000;\r\n    address public owner;\r\n\r\n    mapping(address => mapping(address => address)) public votos;  // antigoEndereco => novoEndereco => aportador\r\n    mapping(address => mapping(address => uint256)) public contadorVotosProposicao; // antigoEndereco => novoEndereco => contador\r\n\r\n    constructor(address _USDCAddress) {\r\n        USDCAddress = _USDCAddress;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Somente o dono pode chamar essa funcao\");\r\n        _;\r\n    }\r\n\r\n    function adicionarAportador(address _aportador, uint256 _aporte) external onlyOwner {\r\n        require(aportadores.length < maxAportadores, \"Numero maximo de aportadores atingido\");\r\n        \r\n        aportadores.push(_aportador);\r\n        aportes.push(_aporte);\r\n        totalAportes += _aporte;\r\n    }\r\n\r\n    function distribuir(uint256 valor) external {\r\n        require(valor >= 12, \"O valor deve ser maior ou igual a 12\");\r\n        require(valor % 12 == 0, \"O valor deve ser multiplo de 12\");\r\n\r\n        IERC20 usdcToken = IERC20(USDCAddress);\r\n        uint256 balance = usdcToken.balanceOf(address(this));\r\n\r\n        require(balance >= valor * 1e18, \"Saldo insuficiente para distribuicao\");\r\n\r\n        uint256 valorBase = valor * 1e18;\r\n\r\n        for (uint i = 0; i < aportadores.length; i++) {\r\n            uint256 valorAportador = (valorBase * aportes[i]) / totalAportes;\r\n            require(usdcToken.transfer(aportadores[i], valorAportador), \"Falha na transferencia\");\r\n        }\r\n    }\r\n\r\n    function votarSubstituicao(address antigoEndereco, address novoEndereco) external {\r\n        require(aportadores[aportadorIndice(msg.sender)] == msg.sender, \"Apenas aportadores podem votar\");\r\n        require(aportadores[aportadorIndice(antigoEndereco)] == antigoEndereco, \"Endereco antigo nao eh um aportador\");\r\n\r\n        require(votos[antigoEndereco][novoEndereco] != msg.sender, \"Voto duplicado\");\r\n\r\n        votos[antigoEndereco][novoEndereco] = msg.sender;\r\n        contadorVotosProposicao[antigoEndereco][novoEndereco]++;\r\n\r\n        if (contadorVotosProposicao[antigoEndereco][novoEndereco] >= 12) {\r\n            _substituirAportador(antigoEndereco, novoEndereco);\r\n        }\r\n    }\r\n\r\n    function _substituirAportador(address antigoEndereco, address novoEndereco) internal {\r\n        uint256 indice = aportadorIndice(antigoEndereco);\r\n        aportadores[indice] = novoEndereco;\r\n    }\r\n\r\n    function Aportador(uint256 aportador) external view returns(address) {\r\n        return aportadores[aportador]; \r\n    }\r\n\r\n    function Aporte(uint256 aportador) external view returns(uint256) {\r\n        return aportes[aportador];\r\n    }\r\n\r\n    function consultarVotosProposicao(address antigoEndereco, address novoEndereco) external view returns (uint256) {\r\n        return contadorVotosProposicao[antigoEndereco][novoEndereco];\r\n    }\r\n\r\n    function consultarVotoCarteira(address antigoEndereco, address novoEndereco, address carteiraConsultada) external view returns (bool) {\r\n        return votos[antigoEndereco][novoEndereco] == carteiraConsultada;\r\n    }\r\n\r\n    function aportadorIndice(address aportadorEndereco) internal view returns (uint256) {\r\n        for (uint256 i = 0; i < aportadores.length; i++) {\r\n            if (aportadores[i] == aportadorEndereco) {\r\n                return i;\r\n            }\r\n        }\r\n        revert(\"Aportador nao encontrado\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDCAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aportador\",\"type\":\"uint256\"}],\"name\":\"Aportador\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aportador\",\"type\":\"uint256\"}],\"name\":\"Aporte\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDCAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aportador\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_aporte\",\"type\":\"uint256\"}],\"name\":\"adicionarAportador\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"aportadores\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"aportes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"antigoEndereco\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"novoEndereco\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"carteiraConsultada\",\"type\":\"address\"}],\"name\":\"consultarVotoCarteira\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"antigoEndereco\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"novoEndereco\",\"type\":\"address\"}],\"name\":\"consultarVotosProposicao\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contadorVotosProposicao\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"valor\",\"type\":\"uint256\"}],\"name\":\"distribuir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAportadores\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAportes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"antigoEndereco\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"novoEndereco\",\"type\":\"address\"}],\"name\":\"votarSubstituicao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "CashHand_Distributor", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000008ac76a51cc950d9822d68b83fe1ad97b32cd580d", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ac753673087eb61fe6c8bd25fbc94fdb01ff1d5e72ac509c79d731dc030622ae"}