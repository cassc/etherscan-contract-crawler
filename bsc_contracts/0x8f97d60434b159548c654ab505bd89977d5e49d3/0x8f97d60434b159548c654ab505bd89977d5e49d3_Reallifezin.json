{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2023-12-21\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract Reallifezin {\r\n    IERC20 public usdtToken;\r\n    address public owner;\r\n\r\n    // Initial setup with the USDT BEP-20 token address and setting the contract deployer as owner.\r\n    constructor(address _usdtTokenAddress) {\r\n        usdtToken = IERC20(_usdtTokenAddress);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // Modifier to restrict the function calling to owner only.\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not the owner\");\r\n        _;\r\n    }\r\n\r\n    // Function to allow users to send USDT to the contract.\r\n    function depositUSDT(uint256 _amount) public {\r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(usdtToken.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\");\r\n    }\r\n\r\n    // Function to allow the owner to send USDT from the contract to any address.\r\n    function transfer(address to, uint256 amount) public onlyOwner {\r\n        require(amount > 0, \"Amount should be greater than 0\");\r\n        require(usdtToken.balanceOf(address(this)) >= amount, \"Not enough USDT in contract\");\r\n        require(usdtToken.transfer(to, amount), \"Transfer failed\");\r\n    }\r\n\r\n    function rescueAnyBEP20Tokens(address _tokenAddr,address _to,uint256 _amount) public onlyOwner {\r\n        require(IERC20(_tokenAddr).balanceOf(address(this)) >= _amount, \"Not enough Balance in contract\");\r\n        require(IERC20(_tokenAddr).transfer(_to, _amount), \"Transfer failed\");\r\n    }\r\n\r\n    // Function to check the USDT balance of the contract.\r\n    function getContractUSDTBalance() public view returns (uint256) {\r\n        return usdtToken.balanceOf(address(this));\r\n    }\r\n\r\n    // Optional: Add function to change the owner.\r\n    function changeOwner(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"New owner is the zero address\");\r\n        owner = newOwner;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractUSDTBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"rescueAnyBEP20Tokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Reallifezin", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000055d398326f99059ff775485246999027b3197955", "EVMVersion": "Default", "Library": "", "LicenseType": "OSL-3.0", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://adc9a7558cf58108077a8315d92918ea324cfb9a078b178ee3a92d82856a5e1b"}