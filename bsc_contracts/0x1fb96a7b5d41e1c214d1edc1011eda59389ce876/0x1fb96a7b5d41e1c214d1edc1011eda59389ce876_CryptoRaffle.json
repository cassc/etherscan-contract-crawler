{"SourceCode": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\ncontract CryptoRaffle {\r\n    address public owner;\r\n    address public payout;\r\n    mapping(uint256 => address) public entrants;\r\n    mapping(address => uint256) public ticketsHeld;\r\n    bool public raffleOpen;\r\n    uint256 public drawTimestamp;\r\n    uint256 public drawNo;\r\n    uint256 public ticketPrice;\r\n    uint256 public totalPot;\r\n    uint256 public totalTickets;\r\n    uint256 public totalEntrants;\r\n    uint256 public lastDrawNo;\r\n    uint256 public lastTotalTickets;\r\n    uint256 public lastTotalPot;\r\n    uint256 public lastFirstAmt;\r\n    uint256 public lastSecondAmt;\r\n    uint256 public lastThirdAmt;\r\n    address public lastFirstAddress;\r\n    address public lastSecondAddress;\r\n    address public lastThirdAddress;\r\n\r\n    constructor(\r\n        uint256 _timestamp,\r\n        uint256 _ticketPrice,\r\n        address _payout\r\n    ) {\r\n        owner = msg.sender;\r\n        payout = _payout;\r\n        ticketPrice = _ticketPrice;\r\n        raffleOpen = true;\r\n        drawTimestamp = _timestamp;\r\n        drawNo = 0;\r\n    }\r\n\r\n    function enter() public payable {\r\n        require(msg.value >= ticketPrice, \"Eth send is below ticket price\");\r\n        require(raffleOpen, \"Raffle not open\");\r\n        require(totalEntrants < 1000, \"Raffle max entrants reached\");\r\n        uint256 ticketQty = msg.value / ticketPrice;\r\n        if (ticketsHeld[msg.sender] == 0) {\r\n            entrants[totalEntrants] = msg.sender;\r\n            totalEntrants++;\r\n        }\r\n        ticketsHeld[msg.sender] += ticketQty;\r\n        totalPot += msg.value;\r\n        totalTickets += ticketQty;\r\n    }\r\n\r\n    function getAddresses() public view returns (address[] memory) {\r\n        address[] memory ret = new address[](totalEntrants);\r\n        for (uint256 i = 0; i < totalEntrants; i++) {\r\n            ret[i] = entrants[i];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function getTicketQty() public view returns (uint256[] memory) {\r\n        uint256[] memory ret = new uint256[](totalEntrants);\r\n        for (uint256 i = 0; i < totalEntrants; i++) {\r\n            ret[i] = ticketsHeld[entrants[i]];\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function draw(\r\n        address _a,\r\n        address _b,\r\n        address _c,\r\n        uint256 _timestamp,\r\n        uint256 _ticketPrice\r\n    ) public payable {\r\n        require(msg.sender == owner, \"Caller must be the owner\");\r\n        require(raffleOpen, \"Raffle not open\");\r\n        lastDrawNo = drawNo;\r\n        lastTotalTickets = totalTickets;\r\n        lastTotalPot = totalPot;\r\n        if (totalTickets > 0) {\r\n            lastFirstAddress = _a;\r\n            lastSecondAddress = _b;\r\n            lastThirdAddress = _c;\r\n            lastFirstAmt = totalPot / 2;\r\n            lastSecondAmt = totalPot / 4;\r\n            lastThirdAmt = totalPot / 5;\r\n            payable(_a).transfer(lastFirstAmt);\r\n            payable(_b).transfer(lastSecondAmt);\r\n            payable(_c).transfer(lastThirdAmt);\r\n            payable(payout).transfer(totalPot / 20);\r\n        } else {\r\n            delete lastFirstAddress;\r\n            delete lastSecondAddress;\r\n            delete lastThirdAddress;\r\n            lastFirstAmt = 0;\r\n            lastSecondAmt = 0;\r\n            lastThirdAmt = 0;\r\n        }\r\n        for (uint256 i = 0; i < totalEntrants; i++) {\r\n            delete ticketsHeld[entrants[i]];\r\n            delete entrants[i];\r\n        }\r\n        ticketPrice = _ticketPrice;\r\n        drawTimestamp = _timestamp;\r\n        drawNo++;\r\n        totalPot = 0;\r\n        totalTickets = 0;\r\n        totalEntrants = 0;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ticketPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_payout\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_b\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_c\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ticketPrice\",\"type\":\"uint256\"}],\"name\":\"draw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drawNo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drawTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"entrants\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTicketQty\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastDrawNo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastFirstAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastFirstAmt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastSecondAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastSecondAmt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastThirdAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastThirdAmt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTotalPot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTotalTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"raffleOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ticketsHeld\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalEntrants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "CryptoRaffle", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000018bd2a34f8000000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000c5d10495d564500ef6881b04f93b12129f985eb9", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4bda99390724ed7c5af367e95318a4ee1fb620dab60cad219fc4e4760d450fe8"}