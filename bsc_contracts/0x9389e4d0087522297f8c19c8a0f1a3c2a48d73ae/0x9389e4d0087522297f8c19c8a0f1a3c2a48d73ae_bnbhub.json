{"SourceCode": "pragma solidity >=0.4.22 <0.7.0;\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n   \r\n    event OwnershipRenounced(address indexed previousOwner);\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        _transferOwnership(_newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address _newOwner) internal {\r\n        require(_newOwner != address(0));\r\n        emit OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\ncontract bnbhub is Ownable{\r\n\r\n    uint256 overall_invested;\r\n    struct User{\r\n        bool referred;\r\n        address referred_by;\r\n        uint256 total_invested_amount;\r\n        uint256 profit_remaining;\r\n        uint256 referal_profit;\r\n    }\r\n    \r\n    struct Referal_levels{\r\n        uint256 level_1;\r\n        uint256 level_2;\r\n        uint256 level_3;\r\n        uint256 level_4;\r\n        uint256 level_5;\r\n    }\r\n\r\n    struct Panel_1{\r\n        uint256 invested_amount;\r\n        uint256 profit;\r\n        uint256 profit_withdrawn;\r\n        uint256 start_time;\r\n        uint256 exp_time;\r\n        bool time_started;\r\n    }\r\n\r\n    struct Panel_2{\r\n        uint256 invested_amount;\r\n        uint256 profit;\r\n        uint256 profit_withdrawn;\r\n        uint256 start_time;\r\n        uint256 exp_time;\r\n        bool time_started;\r\n    }\r\n    \r\n    struct Panel_3{\r\n        uint256 invested_amount;\r\n        uint256 profit;\r\n        uint256 profit_withdrawn;\r\n        uint256 start_time;\r\n        uint256 exp_time;\r\n        bool time_started;\r\n    }\r\n\r\n    struct Panel_4{\r\n        uint256 invested_amount;\r\n        uint256 profit;\r\n        uint256 profit_withdrawn;\r\n        uint256 start_time;\r\n        uint256 exp_time;\r\n        bool time_started;\r\n    }\r\n\r\n\r\n    mapping(address => Panel_1) public panel_1;\r\n    mapping(address => Panel_2) public panel_2;\r\n    mapping(address => Panel_3) public panel_3;\r\n    mapping(address => Panel_4) public panel_4;\r\n\r\n    mapping(address => User) public user_info;\r\n    mapping(address => Referal_levels) public refer_info;\r\n\r\n    mapping(uint8 => address) public top_10_investors;\r\n\r\n        function top_10() public{\r\n        for(uint8 i=0; i<10; i++){\r\n            if(top_10_investors[i] == msg.sender){\r\n                for(uint8 j=i ; j<11;j++){\r\n                    top_10_investors[j] = top_10_investors[j+1];\r\n                }\r\n            }\r\n        }\r\n        for(uint8 i=0;i<10;i++){\r\n            if(user_info[top_10_investors[i]].total_invested_amount < user_info[msg.sender].total_invested_amount){\r\n\r\n                for(uint8 j = 10;j > i;j--){\r\n                    top_10_investors[j] = top_10_investors[j-1];\r\n                }\r\n                top_10_investors[i] = msg.sender;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    // -------------------- PANEL 1 -------------------------------  \r\n    // 1.9% : 220days\r\n\r\n    function invest_panel1() public payable {\r\n        \r\n        require(msg.value >= 0.01 ether, 'Please Enter Amount no less than 0.01');\r\n        \r\n        if(panel_1[msg.sender].time_started == false){\r\n            panel_1[msg.sender].start_time = now;\r\n            panel_1[msg.sender].time_started = true;\r\n            panel_1[msg.sender].exp_time = now + 220 days; //30*24*60*60\r\n        }\r\n\r\n            panel_1[msg.sender].invested_amount += msg.value;\r\n            user_info[msg.sender].total_invested_amount += msg.value; \r\n            overall_invested = overall_invested + msg.value;\r\n            referral_system(msg.value);\r\n            top_10();\r\n            //neg\r\n            if(panel1_days() <= 220){\r\n                panel_1[msg.sender].profit += ((msg.value*19*(220 - panel1_days()))/(1000)); //prof * 220\r\n            }\r\n    }\r\n\r\n    function is_plan_completed_p1() public view returns(bool){\r\n        if(panel_1[msg.sender].exp_time != 0){\r\n            if(now >= panel_1[msg.sender].exp_time){\r\n                return true;\r\n            }\r\n            if(now < panel_1[msg.sender].exp_time){\r\n                return false;\r\n            }\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n    function plan_completed_p1() public  returns(bool){\r\n        if( panel_1[msg.sender].exp_time != 0){\r\n            if(now >= panel_1[msg.sender].exp_time){\r\n                reset_panel_1();\r\n                return true;\r\n            }\r\n            if(now < panel_1[msg.sender].exp_time){\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function current_profit_p1() public view returns(uint256){\r\n        uint256 local_profit ;\r\n        if(now <= panel_1[msg.sender].exp_time){\r\n            if((((panel_1[msg.sender].profit + panel_1[msg.sender].profit_withdrawn)*(now-panel_1[msg.sender].start_time))/(220*(1 days))) > panel_1[msg.sender].profit_withdrawn){  // 220*1 days\r\n                local_profit = (((panel_1[msg.sender].profit + panel_1[msg.sender].profit_withdrawn)*(now-panel_1[msg.sender].start_time))/(220*(1 days))) - panel_1[msg.sender].profit_withdrawn; // 220* 1 days\r\n                return local_profit;\r\n            }else{\r\n                return 0;\r\n            }\r\n        }\r\n        if(now > panel_1[msg.sender].exp_time){\r\n            return panel_1[msg.sender].profit;\r\n        }\r\n    }\r\n    \r\n    function panel1_days() public view returns(uint256){\r\n        if(panel_1[msg.sender].time_started == true){\r\n            return ((now - panel_1[msg.sender].start_time)/(1 days)); //change to 24*60*60\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    \r\n    function withdraw_profit_panel1(uint256 amount) public payable {\r\n        uint256 current_profit = current_profit_p1();\r\n        require(amount <= current_profit, ' Amount sould be less than profit');\r\n        panel_1[msg.sender].profit_withdrawn = panel_1[msg.sender].profit_withdrawn + amount;\r\n        //neg\r\n        panel_1[msg.sender].profit = panel_1[msg.sender].profit - amount;\r\n        msg.sender.transfer(amount);\r\n    }\r\n\r\n    function is_valid_time() public view returns(bool){\r\n        if(panel_1[msg.sender].time_started == true){\r\n        return (now > l_l1())&&(now < u_l1());    \r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }    \r\n    \r\n    function l_l1() public view returns(uint256){\r\n        if(panel_1[msg.sender].time_started == true){\r\n            return (1 days)*panel1_days() + panel_1[msg.sender].start_time;     // 24*60*60  = 1 days\r\n        }else{\r\n            return now;\r\n        } \r\n    }    \r\n    \r\n    function u_l1() public view returns(uint256){\r\n        if(panel_1[msg.sender].time_started == true){\r\n            return ((1 days)*panel1_days() + panel_1[msg.sender].start_time + 8 hours);    \r\n        }else {\r\n            return now + (8 hours);  // 8*60*60  8 hours\r\n        }\r\n    }\r\n    \r\n    function reset_panel_1() private{\r\n        user_info[msg.sender].profit_remaining += panel_1[msg.sender].profit;\r\n\r\n        panel_1[msg.sender].invested_amount = 0;\r\n        panel_1[msg.sender].profit = 0;\r\n        panel_1[msg.sender].profit_withdrawn = 0;\r\n        panel_1[msg.sender].start_time = 0;\r\n        panel_1[msg.sender].exp_time = 0;\r\n        panel_1[msg.sender].time_started = false;\r\n    }\r\n\r\n    \r\n    // --------------------------------- PANEL 2 ----------------------\r\n    // 2.8% : 150days\r\n    \r\n    function invest_panel2() public payable {\r\n        \r\n        require(msg.value >= 0.01  ether, 'Please Enter Amount no less than 0.01');\r\n        \r\n        if(panel_2[msg.sender].time_started == false){\r\n            panel_2[msg.sender].start_time = now;\r\n            panel_2[msg.sender].time_started = true;\r\n            panel_2[msg.sender].exp_time = now + 150 days; //150*24*60*60  = 150 days\r\n        }\r\n        \r\n            panel_2[msg.sender].invested_amount += msg.value;\r\n            user_info[msg.sender].total_invested_amount += msg.value; \r\n            overall_invested = overall_invested + msg.value;\r\n            referral_system(msg.value);\r\n            top_10();\r\n            //neg\r\n            if(panel2_days() <= 150){ //150\r\n                panel_2[msg.sender].profit += ((msg.value*28*(150 - panel2_days()))/(1000)); // 150 - panel_days()\r\n            }\r\n\r\n    }\r\n\r\n    function is_plan_completed_p2() public view returns(bool){\r\n        if(panel_2[msg.sender].exp_time != 0){\r\n            if(now >= panel_2[msg.sender].exp_time){\r\n                return true;\r\n            }\r\n        if(now < panel_2[msg.sender].exp_time){\r\n            return false;\r\n            }\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n    function plan_completed_p2() public  returns(bool){\r\n        if( panel_2[msg.sender].exp_time != 0){\r\n        if(now >= panel_2[msg.sender].exp_time){\r\n            reset_panel_2();\r\n            return true;\r\n        }\r\n        if(now < panel_2[msg.sender].exp_time){\r\n            return false;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function current_profit_p2() public view returns(uint256){\r\n        uint256 local_profit ;\r\n        if(now <= panel_2[msg.sender].exp_time){\r\n            if((((panel_2[msg.sender].profit + panel_2[msg.sender].profit_withdrawn)*(now-panel_2[msg.sender].start_time))/(150*(1 days))) > panel_2[msg.sender].profit_withdrawn){  // 150 * 1 days\r\n                local_profit = (((panel_2[msg.sender].profit + panel_2[msg.sender].profit_withdrawn)*(now-panel_2[msg.sender].start_time))/(150*(1 days))) - panel_2[msg.sender].profit_withdrawn; // 20*24*60*60\r\n                return local_profit;\r\n            }else{\r\n                return 0;\r\n            }\r\n\r\n        }\r\n        if(now > panel_2[msg.sender].exp_time){\r\n            return panel_2[msg.sender].profit;\r\n        }\r\n    }\r\n\r\n    function panel2_days() public view returns(uint256){\r\n        if(panel_2[msg.sender].time_started == true){\r\n            return ((now - panel_2[msg.sender].start_time)/(1 days)); // change to 24*60*60   1 days\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    \r\n    function withdraw_profit_panel2(uint256 amount) public payable {\r\n        uint256 current_profit = current_profit_p2();\r\n        require(amount <= current_profit, ' Amount sould be less than profit');\r\n        panel_2[msg.sender].profit_withdrawn = panel_2[msg.sender].profit_withdrawn + amount;\r\n        //neg\r\n        panel_2[msg.sender].profit = panel_2[msg.sender].profit - amount;\r\n        msg.sender.transfer(amount);\r\n    }\r\n\r\n    function is_valid_time_p2() public view returns(bool){\r\n        if(panel_2[msg.sender].time_started == true){\r\n        return (now > l_l2())&&(now < u_l2());    \r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function l_l2() public view returns(uint256){\r\n        if(panel_2[msg.sender].time_started == true){\r\n            return (1 days)*panel2_days() + panel_2[msg.sender].start_time;     // 24*60*60 1 days\r\n        }else{\r\n            return now;\r\n        }\r\n        \r\n    }\r\n    function u_l2() public view returns(uint256){\r\n        if(panel_2[msg.sender].time_started == true){\r\n            return ((1 days)*panel2_days() + panel_2[msg.sender].start_time + 8 hours);    // 1 days  , 8 hours\r\n        }else {\r\n            return now + (8 hours);  // 8*60*60  8 hours\r\n        }\r\n    }\r\n\r\n    function reset_panel_2() private{\r\n        user_info[msg.sender].profit_remaining += panel_2[msg.sender].profit;\r\n\r\n        panel_2[msg.sender].invested_amount = 0;\r\n        panel_2[msg.sender].profit = 0;\r\n        panel_2[msg.sender].profit_withdrawn = 0;\r\n        panel_2[msg.sender].start_time = 0;\r\n        panel_2[msg.sender].exp_time = 0;\r\n        panel_2[msg.sender].time_started = false;\r\n    }  \r\n\r\n\r\n\r\n    // --------------------------------- PANEL 3 ---------------------------\r\n\r\n    // 3.6% : 90 days\r\n\r\n    function invest_panel3() public payable {\r\n        \r\n        require(msg.value>= 0.01 ether, 'Please Enter Amount no less than 0.01');\r\n        \r\n        if(panel_3[msg.sender].time_started == false){\r\n            panel_3[msg.sender].start_time = now;\r\n            panel_3[msg.sender].time_started = true;\r\n            panel_3[msg.sender].exp_time = now + 90 days; //90*24*60*60  = 90 days\r\n        }\r\n        \r\n            panel_3[msg.sender].invested_amount += msg.value;\r\n            user_info[msg.sender].total_invested_amount += msg.value; \r\n            overall_invested = overall_invested + msg.value;\r\n            referral_system(msg.value);\r\n            top_10();\r\n            //neg\r\n            if(panel3_days() <= 90){ //90\r\n                panel_3[msg.sender].profit += ((msg.value*36*(90 - panel3_days()))/(1000)); // 90 - panel_days()\r\n            }\r\n\r\n    }\r\n\r\n    function is_plan_completed_p3() public view returns(bool){\r\n        if(panel_3[msg.sender].exp_time != 0){\r\n            if(now >= panel_3[msg.sender].exp_time){\r\n                return true;\r\n            }\r\n        if(now < panel_3[msg.sender].exp_time){\r\n            return false;\r\n            }\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n    function plan_completed_p3() public  returns(bool){\r\n        if( panel_3[msg.sender].exp_time != 0){\r\n        if(now >= panel_3[msg.sender].exp_time){\r\n            reset_panel_3();\r\n            return true;\r\n        }\r\n        if(now < panel_3[msg.sender].exp_time){\r\n            return false;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function current_profit_p3() public view returns(uint256){\r\n        uint256 local_profit ;\r\n        if(now <= panel_3[msg.sender].exp_time){\r\n            if((((panel_3[msg.sender].profit + panel_3[msg.sender].profit_withdrawn)*(now-panel_3[msg.sender].start_time))/(90*(1 days))) > panel_3[msg.sender].profit_withdrawn){  // 90 * 1 days\r\n                local_profit = (((panel_3[msg.sender].profit + panel_3[msg.sender].profit_withdrawn)*(now-panel_3[msg.sender].start_time))/(90*(1 days))) - panel_3[msg.sender].profit_withdrawn; // 90*24*60*60\r\n                return local_profit;\r\n            }else{\r\n                return 0;\r\n            }\r\n\r\n        }\r\n        if(now > panel_3[msg.sender].exp_time){\r\n            return panel_3[msg.sender].profit;\r\n        }\r\n    }\r\n    \r\n    function panel3_days() public view returns(uint256){\r\n        if(panel_3[msg.sender].time_started == true){\r\n            return ((now - panel_3[msg.sender].start_time)/(1 days)); // change to 24*60*60   1 days\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    \r\n    function withdraw_profit_panel3(uint256 amount) public payable {\r\n        uint256 current_profit = current_profit_p3();\r\n        require(amount <= current_profit, ' Amount sould be less than profit');\r\n        panel_3[msg.sender].profit_withdrawn = panel_3[msg.sender].profit_withdrawn + amount;\r\n        //neg\r\n        panel_3[msg.sender].profit = panel_3[msg.sender].profit - amount;\r\n        msg.sender.transfer(amount);\r\n    }\r\n    \r\n    function is_valid_time_p3() public view returns(bool){\r\n        if(panel_3[msg.sender].time_started == true){\r\n        return (now > l_l3())&&(now < u_l3());    \r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    function l_l3() public view returns(uint256){\r\n        if(panel_3[msg.sender].time_started == true){\r\n            return (1 days)*panel3_days() + panel_3[msg.sender].start_time;     // 24*60*60 1 days\r\n        }else{\r\n            return now;\r\n        }  \r\n    } \r\n    function u_l3() public view returns(uint256){\r\n        if(panel_3[msg.sender].time_started == true){\r\n            return ((1 days)*panel3_days() + panel_3[msg.sender].start_time + 8 hours);    // 1 days  , 8 hours\r\n        }else {\r\n            return now + (8 hours);  // 8*60*60  8 hours\r\n        }\r\n    }\r\n\r\n    function reset_panel_3() private{\r\n        user_info[msg.sender].profit_remaining += panel_3[msg.sender].profit;\r\n\r\n        panel_3[msg.sender].invested_amount = 0;\r\n        panel_3[msg.sender].profit = 0;\r\n        panel_3[msg.sender].profit_withdrawn = 0;\r\n        panel_3[msg.sender].start_time = 0;\r\n        panel_3[msg.sender].exp_time = 0;\r\n        panel_3[msg.sender].time_started = false;\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n    // -------------------------------------------- PANEL - 4 -------------------------------------------------------\r\n    \r\n    // 4.9 % : 45 days\r\n\r\n    function invest_panel4() public payable {\r\n        \r\n        require(msg.value >= 0.01 ether, 'Please Enter Amount no less than 0.01');\r\n        \r\n        if(panel_4[msg.sender].time_started == false){\r\n            panel_4[msg.sender].start_time = now;\r\n            panel_4[msg.sender].time_started = true;\r\n            panel_4[msg.sender].exp_time = now + 45 days; //45*24*60*60  = 45 days\r\n        }\r\n        \r\n            panel_4[msg.sender].invested_amount += msg.value;\r\n            user_info[msg.sender].total_invested_amount += msg.value; \r\n            overall_invested = overall_invested + msg.value;\r\n            referral_system(msg.value);\r\n            top_10();\r\n            //neg\r\n            if(panel4_days() <= 45){ //45\r\n                panel_4[msg.sender].profit += ((msg.value*49*(45 - panel4_days()))/(1000)); // 45 - panel_days()\r\n            }\r\n\r\n    }\r\n    \r\n    function is_plan_completed_p4() public view returns(bool){\r\n        if(panel_4[msg.sender].exp_time != 0){\r\n            if(now >= panel_4[msg.sender].exp_time){\r\n                return true;\r\n            }\r\n        if(now < panel_4[msg.sender].exp_time){\r\n            return false;\r\n            }\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n    function plan_completed_p4() public  returns(bool){\r\n        if( panel_4[msg.sender].exp_time != 0){\r\n        if(now >= panel_4[msg.sender].exp_time){\r\n            reset_panel_4();\r\n            return true;\r\n        }\r\n        if(now < panel_4[msg.sender].exp_time){\r\n            return false;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function current_profit_p4() public view returns(uint256){\r\n        uint256 local_profit ;\r\n        if(now <= panel_4[msg.sender].exp_time){\r\n            if((((panel_4[msg.sender].profit + panel_4[msg.sender].profit_withdrawn)*(now-panel_4[msg.sender].start_time))/(45*(1 days))) > panel_4[msg.sender].profit_withdrawn){  // 45 * 1 days\r\n                local_profit = (((panel_4[msg.sender].profit + panel_4[msg.sender].profit_withdrawn)*(now-panel_4[msg.sender].start_time))/(45*(1 days))) - panel_4[msg.sender].profit_withdrawn; // 45*24*60*60\r\n                return local_profit;\r\n            }else{\r\n                return 0;\r\n            }\r\n\r\n        }\r\n        if(now > panel_4[msg.sender].exp_time){\r\n            return panel_4[msg.sender].profit;\r\n        }\r\n    }\r\n\r\n    function panel4_days() public view returns(uint256){\r\n        if(panel_4[msg.sender].time_started == true){\r\n            return ((now - panel_4[msg.sender].start_time)/(1 days)); // change to 24*60*60   1 days\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    function withdraw_profit_panel4(uint256 amount) public payable {\r\n        uint256 current_profit = current_profit_p4();\r\n        require(amount <= current_profit, ' Amount sould be less than profit');\r\n        panel_4[msg.sender].profit_withdrawn = panel_4[msg.sender].profit_withdrawn + amount;\r\n        //neg\r\n        panel_4[msg.sender].profit = panel_4[msg.sender].profit - amount;\r\n        msg.sender.transfer(amount);\r\n    }\r\n\r\n    function is_valid_time_p4() public view returns(bool){\r\n        if(panel_4[msg.sender].time_started == true){\r\n        return (now > l_l4())&&(now < u_l4());    \r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    function l_l4() public view returns(uint256){\r\n        if(panel_4[msg.sender].time_started == true){\r\n            return (1 days)*panel4_days() + panel_4[msg.sender].start_time;     // 24*60*60 1 days\r\n        }else{\r\n            return now;\r\n        }\r\n        \r\n    }    \r\n    function u_l4() public view returns(uint256){\r\n        if(panel_4[msg.sender].time_started == true){\r\n            return ((1 days)*panel4_days() + panel_4[msg.sender].start_time + 8 hours);    // 1 days  , 8 hours\r\n        }else {\r\n            return now + (8 hours);  // 8*60*60  8 hours\r\n        }\r\n    }\r\n\r\n    function reset_panel_4() private{\r\n        user_info[msg.sender].profit_remaining += panel_4[msg.sender].profit;\r\n\r\n        panel_4[msg.sender].invested_amount = 0;\r\n        panel_4[msg.sender].profit = 0;\r\n        panel_4[msg.sender].profit_withdrawn = 0;\r\n        panel_4[msg.sender].start_time = 0;\r\n        panel_4[msg.sender].exp_time = 0;\r\n        panel_4[msg.sender].time_started = false;\r\n    }\r\n\r\n\r\n// ------------- withdraw remaining profit ---------------------\r\n    function withdraw_rem_profit(uint256 amt) public payable{\r\n        require(amt <= user_info[msg.sender].profit_remaining, ' Withdraw amount should be less than remaining profit ');\r\n        user_info[msg.sender].profit_remaining = user_info[msg.sender].profit_remaining - amt;\r\n        msg.sender.transfer(amt); \r\n    }\r\n\r\n\r\n\r\n //------------------- Referal System ------------------------\r\n\r\n    function refer(address ref_add) public {\r\n        require(user_info[msg.sender].referred == false, ' Already referred ');\r\n        require(ref_add != msg.sender, ' You cannot refer yourself ');\r\n        \r\n        user_info[msg.sender].referred_by = ref_add;\r\n        user_info[msg.sender].referred = true;        \r\n        \r\n        address level1 = user_info[msg.sender].referred_by;\r\n        address level2 = user_info[level1].referred_by;\r\n        address level3 = user_info[level2].referred_by;\r\n        address level4 = user_info[level3].referred_by;\r\n        address level5 = user_info[level4].referred_by;\r\n        \r\n        \r\n        if( (level1 != msg.sender) && (level1 != address(0)) ){\r\n            refer_info[level1].level_1 += 1;\r\n        }\r\n        if( (level2 != msg.sender) && (level2 != address(0)) ){\r\n            refer_info[level2].level_2 += 1;\r\n        }\r\n        if( (level3 != msg.sender) && (level3 != address(0)) ){\r\n            refer_info[level3].level_3 += 1;\r\n        }\r\n        if( (level4 != msg.sender) && (level4 != address(0)) ){\r\n            refer_info[level4].level_4 += 1;\r\n        }\r\n        if( (level5 != msg.sender) && (level5 != address(0)) ){\r\n            refer_info[level5].level_5 += 1;\r\n        }\r\n       \r\n        \r\n    }\r\n\r\n    function referral_system(uint256 amount) private {\r\n        address level1 = user_info[msg.sender].referred_by;\r\n        address level2 = user_info[level1].referred_by;\r\n        address level3 = user_info[level2].referred_by;\r\n        address level4 = user_info[level3].referred_by;\r\n        address level5 = user_info[level4].referred_by;\r\n        \r\n\r\n        if( (level1 != msg.sender) && (level1 != address(0)) ){\r\n            user_info[level1].referal_profit += (amount*5)/(100);\r\n        }\r\n        if( (level2 != msg.sender) && (level2 != address(0)) ){\r\n            user_info[level2].referal_profit += (amount*2)/(100);\r\n        }\r\n        if( (level3 != msg.sender) && (level3 != address(0)) ){\r\n            user_info[level3].referal_profit += (amount*3)/(200);\r\n        }\r\n        if( (level4 != msg.sender) && (level4 != address(0)) ){\r\n            user_info[level4].referal_profit += (amount*3)/(200);\r\n        }\r\n        if( (level5 != msg.sender) && (level5 != address(0)) ){\r\n            user_info[level5].referal_profit += (amount*1)/(100);\r\n        }\r\n        \r\n    }\r\n\r\n    function referal_withdraw(uint256 amount) public {\r\n        require( user_info[msg.sender].referal_profit >= amount, 'Withdraw must be less than Profit');\r\n        user_info[msg.sender].referal_profit = user_info[msg.sender].referal_profit - amount;\r\n        msg.sender.transfer(amount);\r\n    }  \r\n\r\n    function over_inv() public view returns(uint256){\r\n        return overall_invested;\r\n    }\r\n\r\n    function SendETHFromContract(address payable _address, uint256 _amount) public payable onlyOwner returns (bool){\r\n        require(_address != address(0), \"error for transfer from the zero address\");\r\n        _address.transfer(_amount);\r\n        return true;\r\n    }\r\n   \r\n    function SendETHToContract() public payable returns (bool){\r\n        return true;\r\n    }\r\n    \r\n    function getBalance() public view returns(uint){\r\n        return address(this).balance ;\r\n    }\r\n\r\n}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"SendETHFromContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SendETHToContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"current_profit_p1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"current_profit_p2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"current_profit_p3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"current_profit_p4\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invest_panel1\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invest_panel2\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invest_panel3\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invest_panel4\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_plan_completed_p1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_plan_completed_p2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_plan_completed_p3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_plan_completed_p4\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_valid_time\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_valid_time_p2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_valid_time_p3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_valid_time_p4\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l_l1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l_l2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l_l3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l_l4\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"over_inv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"panel1_days\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"panel2_days\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"panel3_days\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"panel4_days\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"panel_1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"invested_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit_withdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp_time\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"time_started\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"panel_2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"invested_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit_withdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp_time\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"time_started\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"panel_3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"invested_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit_withdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp_time\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"time_started\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"panel_4\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"invested_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit_withdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exp_time\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"time_started\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"plan_completed_p1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"plan_completed_p2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"plan_completed_p3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"plan_completed_p4\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref_add\",\"type\":\"address\"}],\"name\":\"refer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"refer_info\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"level_1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level_2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level_3\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level_4\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level_5\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"referal_withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"top_10\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"top_10_investors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"u_l1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"u_l2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"u_l3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"u_l4\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"user_info\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"referred\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"referred_by\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total_invested_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit_remaining\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referal_profit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw_profit_panel1\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw_profit_panel2\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw_profit_panel3\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw_profit_panel4\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"withdraw_rem_profit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "bnbhub", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c04a39c1c1cb87b27520947a4bad025284570434bda60245586ee8359b95d5f9"}