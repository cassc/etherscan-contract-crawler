{"SourceCode": "// SPDX-License-Identifier: MIT\r\n// Swap paused deprecated tokens with new ones, Developed by Laqira Protocol team\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract SwapDeprecatedTokens {\r\n    IBEP20 private immutable _deprecatedTokens;\r\n    IBEP20 private immutable _newTokens;\r\n    address public owner;\r\n    \r\n    mapping(address => bool) private userSwapped;\r\n    mapping(address => bool) private excluded;\r\n    \r\n    constructor(IBEP20 deprecatedTokens_, IBEP20 newTokens_, address _owner) {\r\n        _deprecatedTokens = deprecatedTokens_;\r\n        _newTokens = newTokens_;\r\n        owner = _owner;\r\n    }\r\n    \r\n    function usersTokenSwap() external returns (bool) {\r\n        address _holder = msg.sender; \r\n        require(!isSwapped(_holder), \"User has swapped already\");\r\n        require(!isExcluded(_holder), \"User has been excluded\");\r\n        uint256 depTokenBalance = depToken().balanceOf(_holder);\r\n        newToken().transfer(_holder, depTokenBalance);\r\n        userSwapped[_holder] = true;\r\n        return true;\r\n    }\r\n    \r\n    function newToken() public view returns (IBEP20) {\r\n        return _newTokens;\r\n    }\r\n    \r\n    function depToken() public view returns (IBEP20) {\r\n        return _deprecatedTokens;\r\n    }\r\n    \r\n    function isSwapped(address _holder) public view returns (bool) {\r\n        return userSwapped[_holder];\r\n    }\r\n\r\n    function isExcluded(address _holder) public view returns (bool) {\r\n        return excluded[_holder];\r\n    }\r\n    \r\n    function excludeAddress(address _holder) external onlyOwner {\r\n        excluded[_holder] = true;\r\n    }\r\n    \r\n    function includeAddress(address _holder) external onlyOwner {\r\n        excluded[_holder] = false;\r\n    }\r\n    \r\n    function transferAnyBEP20(address _tokenAddress, address _to, uint256 _amount) external onlyOwner returns (bool) {\r\n        IBEP20(_tokenAddress).transfer(_to, _amount);\r\n        return true;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) external onlyOwner {\r\n        owner = _newOwner;\r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"caller is not the owner\");\r\n        _;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"deprecatedTokens_\",\"type\":\"address\"},{\"internalType\":\"contract IBEP20\",\"name\":\"newTokens_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"depToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"excludeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"includeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"isExcluded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"isSwapped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyBEP20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usersTokenSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SwapDeprecatedTokens", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000bc81ea817b579ec0334bca8e65e436b7cb540147000000000000000000000000c4a1e7106d08b7ff947254b6d75cf2b877d55daf000000000000000000000000394d006d4e7a156721a656d6e93bec72746cd00f", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://3d68859fbdfc3386a6273051ff00df33b3dc0af7516f1b2b152329631e00f83d"}