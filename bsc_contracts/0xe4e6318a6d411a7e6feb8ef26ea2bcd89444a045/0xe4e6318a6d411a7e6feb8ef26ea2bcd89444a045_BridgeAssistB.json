{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.2;\r\ninterface IERC20 {\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function mint(address to, uint256 amount) external returns (bool);\r\n    function burnFrom(address from, uint256 amount) external returns (bool);\r\n}\r\ncontract BridgeAssistB {\r\n    address public owner;\r\n    IERC20 public TKN;\r\n\r\n    modifier restricted {\r\n        require(msg.sender == owner, \"This function is restricted to owner\");\r\n        _;\r\n    }\r\n    \r\n    event Collect(address indexed sender, uint256 amount);\r\n    event Dispense(address indexed sender, uint256 amount);\r\n    event TransferOwnership(address indexed previousOwner, address indexed newOwner);\r\n\r\n    function collect(address _sender, uint256 _amount) public restricted returns (bool success) {\r\n        require(TKN.allowance(_sender, address(this)) >= _amount, \"Amount check failed\");\r\n        require(TKN.burnFrom(_sender,  _amount), \"burnFrom() failure. Make sure that your balance is not lower than the allowance you set\");\r\n        emit Collect(_sender, _amount);\r\n        return true;\r\n    }\r\n\r\n    function dispense(address payable _sender, uint256 _amount) public payable restricted returns (bool success) {\r\n        require(TKN.mint(_sender, _amount), \"mint() failure. Contact contract owner\");\r\n        if (msg.value > 0) _sender.transfer(msg.value);\r\n        emit Dispense(_sender, _amount);\r\n        return true;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public restricted {\r\n        require(_newOwner != address(0), \"Invalid address: should not be 0x0\");\r\n        emit TransferOwnership(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n\r\n    constructor(IERC20 _TKN, address _owner) {\r\n        TKN = _TKN;\r\n        owner = _owner;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_TKN\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Dispense\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TKN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"dispense\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BridgeAssistB", "CompilerVersion": "v0.8.2+commit.661d1103", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000007e35d0e9180bf3a1fc47b0d110be7a21a10b41fe000000000000000000000000ead37b6391dccd8a81a46f6b620409ead53c254f", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://76cfa17db5fc5423294844782f46fa1635d23cf194587c56fb2942fb24972a9f"}