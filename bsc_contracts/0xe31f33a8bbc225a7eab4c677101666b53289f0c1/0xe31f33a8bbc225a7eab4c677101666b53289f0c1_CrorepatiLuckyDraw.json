{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.2;\r\n\r\ncontract CrorepatiLuckyDraw{\r\n\r\n    address public owner;\r\n\tuint256[] public winner;\r\n\t\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can call this function.\");\r\n        _;\r\n    }\r\n\t\r\n\tuint256 constant public MAX_TICKET = 27000;\r\n\tuint[MAX_TICKET] public indices;\r\n    uint nonce;\r\n\t\r\n    constructor() {\r\n       owner = address(msg.sender);\r\n    }\r\n\t\r\n\tfunction chooseWinner(uint256 count) external onlyOwner{\r\n\t   for (uint256 i = 0; i < count; i++) \r\n\t   {\r\n\t       uint256 winnerNumber = 900000 + _randMod();\r\n\t\t   winner.push(winnerNumber);\r\n\t   }\r\n\t}\r\n\t\r\n\tfunction _randMod() private returns (uint) \r\n\t{\r\n        uint totalSize = MAX_TICKET - nonce;\r\n        uint index = uint(keccak256(abi.encodePacked(nonce, msg.sender, block.difficulty, block.timestamp))) % totalSize;\r\n        uint value = 0;\r\n        if (indices[index] != 0) \r\n\t\t{\r\n            value = indices[index];\r\n        } \r\n\t\telse \r\n\t\t{\r\n            value = index;\r\n        }\r\n\t\t\r\n        if (indices[totalSize - 1] == 0) \r\n\t\t{\r\n            indices[index] = totalSize - 1;\r\n        } \r\n\t\telse \r\n\t\t{\r\n            indices[index] = indices[totalSize - 1];\r\n        }\r\n        nonce++;\r\n        return value+1;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MAX_TICKET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"chooseWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"indices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "CrorepatiLuckyDraw", "CompilerVersion": "v0.8.2+commit.661d1103", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://fca77309caabaed6455747392c08d30131cac2989e49d8add3071cb5878717f1"}