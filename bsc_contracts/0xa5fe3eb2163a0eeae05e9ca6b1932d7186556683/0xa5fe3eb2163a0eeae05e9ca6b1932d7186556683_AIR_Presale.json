{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2024-01-10\r\n*/\r\n\r\n/**\r\n *Submitted for verification at BscScan.com on 2023-12-22\r\n*/\r\n\r\n/**\r\n *Submitted for verification at Arbiscan.io on 2023-08-20\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.12;\r\n\r\ninterface IST20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function decimals() external view returns (uint8);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n \r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract AIR_Presale {\r\n  using SafeMath for uint256;\r\n  IST20 public token;\r\n  uint256 public rate;\r\n  uint256 public weiRaised;\r\n  uint256 public weiMaxPurchaseBnb;\r\n  address payable private admin;\r\n  mapping(address => uint256) public purchasedBnb;\r\n  event TokenPurchase(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n  \r\n  constructor(uint256 _rate, IST20 _token, uint256 _max) public {\r\n    require(_rate > 0);\r\n    require(_max > 0);\r\n    require(_token != IST20(address(0)));\r\n    rate = _rate;\r\n    token = _token;\r\n    weiMaxPurchaseBnb = _max;\r\n    admin = 0x65D0C821A24594543bE39A5FA6DbdC3043aF725a;\r\n  }\r\n  fallback () external payable {\r\n    revert();    \r\n  }\r\n  receive () external payable {\r\n    revert();\r\n  }\r\n  function buyTokens(address _beneficiary) public payable {\r\n    uint256 maxBnbAmount = maxBnb(_beneficiary);\r\n    uint256 weiAmount = msg.value > maxBnbAmount ? maxBnbAmount : msg.value;\r\n    weiAmount = _preValidatePurchase(_beneficiary, weiAmount);\r\n    uint256 tokens = _getTokenAmount(weiAmount);\r\n    weiRaised = weiRaised.add(weiAmount);\r\n    _processPurchase(_beneficiary, tokens);\r\n    emit TokenPurchase(msg.sender, _beneficiary, weiAmount, tokens);\r\n    _updatePurchasingState(_beneficiary, weiAmount);\r\n    if (msg.value > weiAmount) {\r\n      uint256 refundAmount = msg.value.sub(weiAmount);\r\n      msg.sender.transfer(refundAmount);\r\n    }\r\n  }\r\n  function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) public view returns (uint256) {\r\n    require(_beneficiary != address(0));\r\n    require(_weiAmount != 0);\r\n    uint256 tokenAmount = _getTokenAmount(_weiAmount);\r\n    uint256 curBalance = token.balanceOf(address(this));\r\n    if (tokenAmount > curBalance) {\r\n      return curBalance.mul(1e18).div(rate);\r\n    }\r\n    return _weiAmount;\r\n  }\r\n  function _deliverTokens(address _beneficiary, uint256 _tokenAmount) internal {\r\n    token.transfer(_beneficiary, _tokenAmount);\r\n  }\r\n  function _processPurchase(address _beneficiary, uint256 _tokenAmount) internal {\r\n    _deliverTokens(_beneficiary, _tokenAmount);\r\n  }\r\n  function _updatePurchasingState(address _beneficiary, uint256 _weiAmount) internal {\r\n    purchasedBnb[_beneficiary] = _weiAmount.add(purchasedBnb[_beneficiary]);    \r\n  }\r\n  function _getTokenAmount(uint256 _weiAmount) public view returns (uint256) {\r\n    return _weiAmount.mul(rate).div(1e18);\r\n  }\r\n  function setPresaleRate(uint256 _rate) external {\r\n    require(admin == msg.sender, \"caller is not the owner\");\r\n    rate = _rate;\r\n  }    \r\n  function maxBnb(address _beneficiary) public view returns (uint256) {\r\n    return weiMaxPurchaseBnb.sub(purchasedBnb[_beneficiary]);\r\n  }\r\n  function withdrawCoins() external {\r\n    require(admin == msg.sender, \"caller is not the owner\");\r\n    admin.transfer(address(this).balance);\r\n  }\r\n  function withdrawTokens(address tokenAddress, uint256 tokens) external {\r\n    require(admin == msg.sender, \"caller is not the owner\");\r\n    IST20(tokenAddress).transfer(admin, tokens);\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"contract IST20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_weiAmount\",\"type\":\"uint256\"}],\"name\":\"_getTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_weiAmount\",\"type\":\"uint256\"}],\"name\":\"_preValidatePurchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"maxBnb\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"purchasedBnb\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setPresaleRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IST20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiMaxPurchaseBnb\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawCoins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "AIR_Presale", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000064f964e68233a76f520000000000000000000000000000000a123ab52a32267dc357b7599739d3c6caf856fe40000000000000000000000000000000000000000000000056bc75e2d63100000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e26ae73adc511c7b95e5a30361cabcb8431da0ad0c7798973c2d478a8138fbe3"}