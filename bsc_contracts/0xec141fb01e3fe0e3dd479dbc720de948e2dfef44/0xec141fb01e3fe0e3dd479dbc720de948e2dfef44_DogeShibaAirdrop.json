{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    \r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract Ownable   {\r\n    address public _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n   \r\n\r\n    constructor()  {\r\n        _owner = msg.sender;\r\n\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n      function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n     modifier onlyOwner() {\r\n        require(_owner == msg.sender, \"Ownable: caller is not the owner\");\r\n\r\n        _;\r\n    }\r\n\r\n    /**\r\n\r\n     * @dev Transfers ownership of the contract to a new account (newOwner).\r\n\r\n     * Can only be called by the current owner.\r\n\r\n     */\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n\r\n        _owner = newOwner;\r\n    }\r\n}\r\ncontract DogeShibaAirdrop is Ownable {\r\n    using SafeMath for uint256;\r\n    \r\n    mapping(address => bool) public processedAirdrops;\r\n    mapping(address => bool) public whitelisted;\r\n    \r\n    bool public whitelist = false;\r\n    uint256 public decimal = 1e18; \r\n    uint256 public dogeDecimal = 1e8;\r\n    uint256 public airdropAmount = 50000; \r\n    uint256 public dogeAmount = 5; \r\n    uint256 public totalAmount = 100000e18; \r\n    uint256 public totalAmountDoge = 100000e8; \r\n    uint256 public totalTokensAirdropped = 0; \r\n    uint256 public totalDogeAirdropped = 0;\r\n\r\n    IERC20 public tokenAddress;\r\n    IERC20 public DogeAddress;\r\n    \r\n    event AirdropProcessed(address recipient, uint amount, uint date);\r\n    \r\n    constructor(IERC20 _token , IERC20 _doge) {\r\n        tokenAddress = _token;\r\n        DogeAddress = _doge;\r\n    }\r\n    \r\n    function whitelistAddress(address[] memory _recipients) public onlyOwner returns (bool) {\r\n        require(_recipients.length <= 100, \"Exceeded maximum whitelist recipients\");\r\n        for (uint i = 0; i < _recipients.length; i++) {\r\n            whitelisted[_recipients[i]] = true;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    function airdropShiba() public payable {\r\n        require(msg.value == 0.009 ether, \"Insufficient fee\");\r\n        tokenAddress.transfer(msg.sender, airdropAmount * decimal);\r\n        totalTokensAirdropped = totalTokensAirdropped.add(airdropAmount); // Increment totalTokensAirdropped\r\n        emit AirdropProcessed(msg.sender, airdropAmount * decimal, block.timestamp);\r\n        \r\n        address userAdd = msg.sender;\r\n        if (whitelist) {\r\n            require(whitelisted[userAdd], \"User is not whitelisted\");\r\n        }\r\n    }\r\n\r\n     function airdropDoge() public payable {\r\n        require(msg.value == 0.009 ether, \"Insufficient fee\");\r\n        DogeAddress.transfer(msg.sender, dogeAmount * dogeDecimal);\r\n        totalDogeAirdropped = totalDogeAirdropped.add(dogeAmount); \r\n        emit AirdropProcessed(msg.sender, dogeAmount * decimal, block.timestamp);\r\n        \r\n        address userAdd = msg.sender;\r\n        if (whitelist) {\r\n            require(whitelisted[userAdd], \"User is not whitelisted\");\r\n        }\r\n    }\r\n    \r\n    function CheckContractBalance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n\r\n    function widtdrawDoge(uint256 amount) public onlyOwner{\r\n        require(amount>=0,\"Insufficient doge balance\");\r\n        DogeAddress.transfer(msg.sender,amount);\r\n    }\r\n\r\n    function withdrawShiba(uint256 amount) public onlyOwner{\r\n        require(amount>=0,\"Insufficient shiba Amount\");\r\n        tokenAddress.transfer(msg.sender,amount);\r\n    }\r\n    \r\n    function withdrawBNB(uint256 amount) public onlyOwner {\r\n        payable(msg.sender).transfer(amount);\r\n    }\r\n    \r\n    function turnWhitelist() public onlyOwner returns (bool success) {\r\n        whitelist = !whitelist; // Flip the value of whitelist\r\n        return whitelist;\r\n    }\r\n    \r\n    function changeShiba(address newToken) public onlyOwner {\r\n        tokenAddress = IERC20(newToken);\r\n    }\r\n\r\n    function changeDoge(address newDoge) public onlyOwner{\r\n        DogeAddress = IERC20(newDoge);\r\n    }\r\n    \r\n    function changeDecimal(uint256 newDecimal, uint256 newDogeDecimal) public onlyOwner {\r\n        decimal = newDecimal;\r\n        dogeDecimal= newDogeDecimal;\r\n    }\r\n\r\n    \r\n    function changeAirdropAmount(uint256 newAmount , uint newDogeAmount) public onlyOwner {\r\n        airdropAmount = newAmount;\r\n        dogeAmount = newDogeAmount;\r\n    }\r\n    \r\n    function getTokensAirdropped() public view returns (uint256) {\r\n        return totalTokensAirdropped;\r\n    }\r\n\r\n    function getDogeAirdropped() public view returns(uint256){\r\n        return totalDogeAirdropped;\r\n    }\r\n}\r\n\r\n\r\n// Mainnet\r\n//Doge ; 0xbA2aE424d960c26247Dd6c32edC70B295c744C43\r\n//SHIBA: 0x2859e4544C4bB03966803b044A93563Bd2D0DD4D", "ABI": "[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_doge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"AirdropProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CheckContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DogeAddress\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropDoge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropShiba\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newDogeAmount\",\"type\":\"uint256\"}],\"name\":\"changeAirdropAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDecimal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newDogeDecimal\",\"type\":\"uint256\"}],\"name\":\"changeDecimal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDoge\",\"type\":\"address\"}],\"name\":\"changeDoge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"changeShiba\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dogeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dogeDecimal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDogeAirdropped\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokensAirdropped\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"processedAirdrops\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmountDoge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDogeAirdropped\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensAirdropped\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"turnWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"}],\"name\":\"whitelistAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"widtdrawDoge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawBNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawShiba\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DogeShibaAirdrop", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000002859e4544c4bb03966803b044a93563bd2d0dd4d000000000000000000000000ba2ae424d960c26247dd6c32edc70b295c744c43", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://98ea635ef541c04e8599436471c571526aae9adcd930aef49342310a19d526d6"}