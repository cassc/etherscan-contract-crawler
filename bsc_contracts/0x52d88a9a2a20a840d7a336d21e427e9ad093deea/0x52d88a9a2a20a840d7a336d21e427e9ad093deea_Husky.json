{"SourceCode": "pragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this;\r\n        return msg.data;\r\n    }\r\n}\r\n\r\ncontract ERC20 is Context, IERC20 {\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    uint256 private _totalSupply;\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    constructor (string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        _approve(sender, _msgSender(), currentAllowance - amount);\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        _balances[sender] = senderBalance - amount;\r\n        _balances[recipient] += amount;\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        _balances[account] = accountBalance - amount;\r\n        _totalSupply -= amount;\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\r\n}\r\n\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMMMWMMMMMMMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWMMMMMWWMMMMMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMMMWWWWMWWMWWMMMMMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWXxodxKWMWMMMMMMMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWK0O0XWMMMMMMMMMMMMMMMMMMMMMMMMMMMMWMXdoO0kodXWWMMMMMMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNxdOKOk0WMMMMWMMMMMMMMMMMMMMMMMMMMMMWXxxKK0XXxlOWMMMMMMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMNxck00XXkkXWMMMMMMMMMMMMMMMMMMMMMMMMWXkkXK0O0NNxcxNMMMMMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMWMMO:dKOO0NN0kOXWMMMMMMMMMMMMMMMMMMMMMWKOKXK0OkkKWNx:xNMMMMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMWMXll0KOkkKNWNOxkXWWWMMMMMMMMMMMMMMMWN0OKNX0OOkxkKWNd;kWMMMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMWx:kXK0kxkKNWWXdckNWMMMMMMMMMMMMMWWXO0NNXKOkkxxx0NWK::KMWMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMXlcKX0kkxxkKWWWNx;lXWWWWWWNNNNNNXNXO0NWNK0kxddxxOXWWd.dWWMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMM0:dXK0kxdxkKX0kxl,.;cccc::;;;,,,,;;;lxOK0OxdddddxKWWk.;KMMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMWx:kXK0kddxxo;'.........................;ldxdooodxKWWk.'OMMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMWd:ONK0koc,...............................':loooxOXWWk..xWMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMWx;kN0kl,....'..............................':okKNWWNo..oNMMMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMWO;lXO:..'ck00d;............:dkko;............:0WWWW0:..oWMWMMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMXl,c,..;kXNNNN0:.........;kNWWWWXx;...........:dOKKo. .xWMWMWMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMMWWWKc....lKNXXXKXNk,.......;OWWWWWWWW0c.............,,.. .oNWWMMWMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMMMMMWXkl'....oXNXKOkkOKKc.....,lkNWNNXNWWWWXo'.............    .o0XWMMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMWMWXd,...';:xXKdlcclcckXd....'xXNNKkollokKNWNO:.............    ..,dNMMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMNKkd:..,oOKXNWNd.,c:oo:xNd...;kNWN0l,;;lo:;o0NWXd;..............    .oXMMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMWO;...'cONWWWWNW0c'. ..cKNl.'lKWWWK:.,:.,lc.'kWWWNKx:..................lOXWMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMNo.,dOKNWWWWWWNNN0l,. ,OWNxo0NWWX0o. .'   .,xNWWWWWWXOo:'.........,;....'xWMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMXl.:XWWWWWWWNWWNNNKxldKWWWWWWWWN0Oxc'.',,:dKNWWNWWWWWWNXKOkddddxk0X0;...'xWMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMXl.;0WWWWWWWWNWNXK00KWWWWWWWWMWWNNNXXKKXNNWWWWWWWWWNWWWNWWWWWWWWWWWKc...,OWMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMNo.c0WWWWWWNNNNKKXNNNNNNWWWMMMWWWWWWNNWWWWWWWWWWWWWWWWWWWWWWWWWWWWWNO:..lXMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMNd:kWWWWWWWNXXKKOxdolcclodk0NWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWK:.,kWMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMWO:dNWWWWWNNXXKkc;;;;;;;:::cOWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWNx..,dNMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMK:cKWWWWNNNXXNk;,;:ccc::;':0WWWWWWWWWWWWWNXXWWWWWWWWWWWWWWWWWWWWWW0;..'xWMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMK:,xNWWWNWNKKNKl..''''.  'xNWWWWWWWWWWWWKockNWWWWWWWWWWWWWWWWWWWWXl...,0MMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMXo':KWWWWWNXKXN0o,......;kNNWWWWWWWWWWXx:l0NWWWWWWNNNNNNNNWWWWWWWOc...:XMMMMMMMMMM\r\n// MMMMMMMMMMMMMMMMMMWO,'oNWWWWNX00XX0d:. .,lkKNNWWWWWWWWXx;;xNWWWWWWWWNNNNNWWWWWWWWWWXo.  lNMMWWMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMNd;lKWNWWNXKkxkkkl'  'lkKXWWWWNXKkl'.;ONWWWWNNNNNNNNNWWWWWWWWWWXd.   :XMWWWMMMMMM\r\n// MMMMMMMMMMMMMMMMMWWMKdkNWWWWNXXKkoc;'.   .,:odolc,'.   :0WWWWNNNNNNNNNNWWWWWWWWWW0l..   .lKWWWMMMMMM\r\n// MMMMMMMMMMMMMMMMMMMWW0dOWWWWWNXXKOdl,.               .lKWWWNNNNNNNNNNNNNNWWWWWWXx;....    ':xKWMMMMM\r\n// MMMMMMMMMMMMMMMMMMMWMNxcOWWWWNNNX0kdc,..............,xNWWNNNNNNNNNNNNNNNWWWWWXx:.......      .l0WMMM\r\n// MMMMMMMMMMMMMMMMMMWMMWXdcxNWWWNNNK0kl;;;;,,;;;;;;cldKNWWNNNNNNNNNWWNNNWWWWWXkc'........        .lKWM\r\n// MMMMMMMMMMMMMMMMMMMMMMMNxco0WWWWNNX0dlllcccllllld0NWWNNNXNNNNNNNNNNNWWWWWWNOc'.........          .lO\r\n// MMMMMMMMMMMMMMMMMMMMWWMMW0ockXWWWNNKxddddddddxdxKWWNXXXXNNNNNNNNNWWWWWWWN0d:'...............       .\r\n// MMMMMMMMMMMMMMMMMMMMMMMWMWNOldKNWWWXOxxxxxxkxddOK000KXXXNNNNWWWWWWWWWXOo:,..''................      \r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMXdoKWWWWX0OkkkkkxdkOO00KXXNNWNWWWWWWWWXko:,'''''....................    \r\n// MMMMMMMMMMMMMMMMMMMMMMMMWWMMM0cdXWWWWN0kkxxkkOO0KKXXNNNWWWWWWWWX0xl;,,,''.........................  \r\n// MMMMMMMMMMMMMMMMMMMMMMMMWWMWMXl,cxKWWWNKOOO000KKXNNNNNWWWMWWWXxc;,,,''........'..................   \r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMWWMNd;,;dNWWWWNXKKKKXXNWWWWWMWWMWWWO:,;;,'.......''''...................  \r\n// MMMMMMMMMMMMMMMMMMMMMMMMMWWWWNx:;:lkNMWWWWNXXXXNNWMMWWMMWWWW0l;::'...'',,,,,'''''''.................\r\n// MMMMMMMMMMMMMMMMMMMMMMMMWWMMWWO:,;;ckNWWWWWWWNNNWMMMWWMMWWWNklc;',:c::;;,,''''''....................\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMWMMMMXl,;;:xNWWWMMMMWWWMMMMWWMMWWWWXd;;clc:;,''''''''......................\r\n// MMMMMMMMMMMMMMMMMMMMMMMMMMWWWMWk:,,;l0WWWWWWMMWWMMMMWMMMWWWW0l;:ccclodoc;'....''....................\r\n\r\ncontract Husky is ERC20 {\r\n    address public admin;\r\n\r\n    constructor() ERC20(\"Husky\", \"HUSKY\") {\r\n        admin = msg.sender;\r\n    }\r\n\r\n      function updateAdmin(address newAdmin) external {\r\n    require(msg.sender == admin, 'only admin');\r\n    admin = newAdmin;\r\n  }\r\n\r\n  function mint(address to, uint amount) external {\r\n    require(msg.sender == admin, 'only admin');\r\n    _mint(to, amount);\r\n  }\r\n\r\n  function burn(address owner, uint amount) external {\r\n    require(msg.sender == admin, 'only admin');\r\n    _burn(owner, amount);\r\n  }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"updateAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Husky", "CompilerVersion": "v0.8.6+commit.11564f7e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ddfe22a0797a5be3bae9a039fe28ef3805fd3c36682d700d96da5e46f953d437"}