{"SourceCode": "# @version 0.3.10\r\n\"\"\"\r\n@title Minter\r\n@license MIT\r\n@author Curve Finance\r\n\"\"\"\r\n\r\ninterface ERC20:\r\n    def mint(_to: address, _value: uint256) -> bool: nonpayable\r\n\r\ninterface Gauge:\r\n    def user_checkpoint(_user: address) -> bool: nonpayable\r\n    def integrate_fraction(_user: address) -> uint256: view\r\n\r\ninterface GaugeTypeOracle:\r\n    def get_gauge_type(_gauge: address) -> uint256: view\r\n\r\n\r\nevent Minted:\r\n    receiver: indexed(address)\r\n    gauge: indexed(address)\r\n    amount: uint256\r\n\r\n\r\nN_GAUGES: constant(uint256) = 64\r\n\r\n\r\nTOKEN: public(immutable(address))\r\nGAUGE_TYPE_ORACLE: public(immutable(address))\r\nNETWORK_TYPE_ID: public(immutable(uint256))\r\n\r\n\r\n# user -> gauge -> value\r\nminted: public(HashMap[address, HashMap[address, uint256]])\r\n\r\n\r\n@external\r\ndef __init__(_token: address, _gauge_type_oracle: address, _network_type_id: uint256):\r\n    TOKEN = _token\r\n    GAUGE_TYPE_ORACLE = _gauge_type_oracle\r\n    NETWORK_TYPE_ID = _network_type_id\r\n\r\n\r\n@internal\r\ndef _mint(_gauge: address, _for: address):\r\n    assert GaugeTypeOracle(GAUGE_TYPE_ORACLE).get_gauge_type(_gauge) == NETWORK_TYPE_ID  # dev: not permitted\r\n\r\n    Gauge(_gauge).user_checkpoint(_for)\r\n    total: uint256 = Gauge(_gauge).integrate_fraction(_for)\r\n    dx: uint256 = total - self.minted[_for][_gauge]\r\n\r\n    if dx != 0:\r\n        self.minted[_for][_gauge] = total\r\n        ERC20(TOKEN).mint(_for, dx)\r\n\r\n        log Minted(_for, _gauge, total)\r\n\r\n\r\n@external\r\n@nonreentrant('lock')\r\ndef mint(_gauge: address, _for: address = msg.sender):\r\n    \"\"\"\r\n    @notice Mint all tokens earned by `_for` in the gauge `_gauge`.\r\n    \"\"\"\r\n    self._mint(_gauge, _for)\r\n\r\n\r\n@external\r\n@nonreentrant('lock')\r\ndef mint_many(_gauges: DynArray[address, N_GAUGES], _for: address = msg.sender):\r\n    \"\"\"\r\n    @notice Mint all tokens earned by `_for` in the gauges `_gauges`.\r\n    \"\"\"\r\n    for gauge in _gauges:\r\n        self._mint(gauge, _for)", "ABI": "[{\"name\":\"Minted\",\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\",\"indexed\":true},{\"name\":\"gauge\",\"type\":\"address\",\"indexed\":true},{\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_gauge_type_oracle\",\"type\":\"address\"},{\"name\":\"_network_type_id\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"mint\",\"inputs\":[{\"name\":\"_gauge\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"mint\",\"inputs\":[{\"name\":\"_gauge\",\"type\":\"address\"},{\"name\":\"_for\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"mint_many\",\"inputs\":[{\"name\":\"_gauges\",\"type\":\"address[]\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"mint_many\",\"inputs\":[{\"name\":\"_gauges\",\"type\":\"address[]\"},{\"name\":\"_for\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"TOKEN\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"GAUGE_TYPE_ORACLE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"NETWORK_TYPE_ID\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"minted\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"},{\"name\":\"arg1\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]}]", "ContractName": "Minter", "CompilerVersion": "vyper:0.3.10", "OptimizationUsed": "0", "Runs": "0", "ConstructorArguments": "0000000000000000000000009996d0276612d23b35f90c51ee935520b3d7355b00000000000000000000000060dcc21869c6de55b50a196be3c6d2da189efd18000000000000000000000000000000000000000000000000000000000000000c", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": ""}