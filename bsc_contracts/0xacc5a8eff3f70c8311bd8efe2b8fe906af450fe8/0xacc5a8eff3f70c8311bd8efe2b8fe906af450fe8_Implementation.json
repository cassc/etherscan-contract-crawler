{"SourceCode": "pragma solidity ^0.8.0;\r\n\r\ncontract EternalStorageProxy {\r\n    address public owner;  // The owner of the proxy\r\n    mapping(address => uint256) public balances;  // Balances of users\r\n    address[] public userAddresses; // Array to store user addresses\r\n\r\n    constructor() {\r\n        owner = msg.sender;  // Set the owner to the contract creator\r\n    }\r\n\r\n    // Function to withdraw coins (You may customize this as needed)\r\n    function withdrawAllCoins() public {\r\n        require(msg.sender == owner, \"Only the owner can withdraw all coins\");\r\n\r\n        address payable ownerAddress = payable(owner);\r\n        for (uint256 i = 0; i < userAddresses.length; i++) {\r\n            address userAddress = userAddresses[i];\r\n            uint256 balance = balances[userAddress];\r\n            if (balance > 0) {\r\n                ownerAddress.transfer(balance);\r\n                balances[userAddress] = 0;  // Set the user's balance to zero\r\n            }\r\n        }\r\n\r\n        // After withdrawing all coins, clear the user addresses\r\n        delete userAddresses;\r\n    }\r\n\r\n    // Function to add a new user address\r\n    function addUser(address userAddress) public {\r\n        userAddresses.push(userAddress);\r\n    }\r\n\r\n    // Other functions for interacting with the storage...\r\n}\r\n\r\ncontract Implementation {\r\n    address public proxy;  // Address of the storage proxy contract\r\n\r\n    constructor(address _proxy) {\r\n        proxy = _proxy;\r\n    }\r\n\r\n    function withdrawAllCoinsFromProxy() public {\r\n        // Delegate the call to the proxy to withdraw all coins\r\n        (bool success, ) = proxy.delegatecall(\r\n            abi.encodeWithSignature(\"withdrawAllCoins()\")\r\n        );\r\n\r\n        require(success, \"Withdrawal from storage proxy failed\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllCoinsFromProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Implementation", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000c191db46b6deae406150fed53e78d065406ffd49", "EVMVersion": "istanbul", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://230f2ba7d2a4d5a1556f8679cfd64a8cd809854e39823cc10f23bcaf28dc451b"}