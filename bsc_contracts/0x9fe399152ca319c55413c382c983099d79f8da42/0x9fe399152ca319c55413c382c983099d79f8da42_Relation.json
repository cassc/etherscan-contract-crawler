{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Relation.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract RelationStorage {\\n\\n    struct RecommerData {\\n        uint256 ts;\\n        address addr;\\n    }\\n\\n    uint public totalAddresses;\\n    // parent node\\n    mapping (address => address) public _recommerMapping;\\n    // have node\\n    mapping (address => bool) internal _haveChild;\\n    \\n    constructor() {\\n    }\\n}\\n\\ncontract Relation is RelationStorage() {\\n\\n    modifier onlyBoss() {\\n        require(bosses[msg.sender], \\\"Relation: caller is not the boss\\\");\\n        _;\\n    }\\n\\n    mapping(address => bool) public bosses;\\n\\n      constructor(address _boss) {\\n        bosses[_boss] = true;\\n    }\\n\\n    function addBoss(address _boss) external onlyBoss {\\n        bosses[_boss] = true;\\n    }\\n\\n    function removeBoss(address _boss) external onlyBoss {\\n        bosses[_boss] = false;\\n    }\\n\\n    // bind\\n    function addRelationEx(address slef,address recommer) external onlyBoss returns (bool) {\\n\\n        require(recommer != slef,\\\"your_self\\\");                   \\n\\n        require(_recommerMapping[slef] == address(0),\\\"binded\\\");\\n        \\n        require(!_haveChild[slef], \\\"error\\\");\\n\\n        totalAddresses++;\\n\\n        _recommerMapping[slef] = recommer;\\n        _haveChild[slef] = true;\\n        return true;\\n    }\\n\\n    // find parent\\n    function parentOf(address owner) external view returns(address){\\n        return _recommerMapping[owner];\\n    }\\n    \\n    // find parent\\n    function getForefathers(address owner,uint num) public view returns(address[] memory fathers){\\n\\n        fathers = new address[](num);\\n\\n        address parent  = owner;\\n        for( uint i = 0; i < num; i++){\\n            parent = _recommerMapping[parent];\\n\\n            if(parent == address(0) ) break;\\n\\n            fathers[i] = parent;\\n        }\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_boss\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_recommerMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_boss\",\"type\":\"address\"}],\"name\":\"addBoss\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"slef\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recommer\",\"type\":\"address\"}],\"name\":\"addRelationEx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bosses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"getForefathers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"fathers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"parentOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_boss\",\"type\":\"address\"}],\"name\":\"removeBoss\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAddresses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Relation", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000d9eb236b9c703ab79cb8e0153b1184845cef7064", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}