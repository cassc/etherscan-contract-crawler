{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.19;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function decimals() external view returns (uint256);\r\n    function symbol() external view returns (string memory);\r\n    function name() external view returns (string memory);\r\n    function getOwner() external view returns (address);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function mint(address to,uint256 amount) external returns (bool);\r\n    function burn(address from,uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface IHelper {\r\n    function current_price() external view returns (uint256);\r\n    function thisClaimed(address account) external view returns (uint256);\r\n    function presaleClaimed(address account) external view returns (uint256);\r\n    function presaleUSD2MOO(uint256 amount) external view returns (uint256);\r\n    function getPresaleBalanceUSD(address account) external view returns (uint256);\r\n}\r\n\r\ninterface IDepositor {\r\n    function depositWithPermit(address account,address referral,address userCA,uint256 amountTOKEN,uint256 amountUSD,bool isblockReferralReward) external returns (bool);\r\n    function claimReward(address account,address userCA,bool isblockReferralReward) external returns (bool);\r\n}\r\n\r\ncontract permission {\r\n    mapping(address => mapping(string => bytes32)) private permit;\r\n\r\n    function newpermit(address adr,string memory str) internal { permit[adr][str] = bytes32(keccak256(abi.encode(adr,str))); }\r\n\r\n    function clearpermit(address adr,string memory str) internal { permit[adr][str] = bytes32(keccak256(abi.encode(\"null\"))); }\r\n\r\n    function checkpermit(address adr,string memory str) public view returns (bool) {\r\n        if(permit[adr][str]==bytes32(keccak256(abi.encode(adr,str)))){ return true; }else{ return false; }\r\n    }\r\n\r\n    modifier forRole(string memory str) {\r\n        require(checkpermit(msg.sender,str),\"Permit Revert!\");\r\n        _;\r\n    }\r\n}\r\n\r\ncontract MooMoohHelperV4 is permission {\r\n\r\n    address public owner;\r\n    address public depositor = 0xf08133A1a2a0301832A03DF8D8F0C4406E39c5E6;\r\n    address public userCA = 0x91EdA823eeddc18d89Ec5124517bA7F14820Ad86;\r\n\r\n    address public tokenMOO = 0x6d6F4afbe38A04d15399EabB47Edfdd78c12D729;\r\n    address public tokenTracker = 0xe740DbBC235b876EdE13D7427574cf46b06F8d66;\r\n    address public tokenRenew = 0x00aC5cc0DEAFbbba47c2B4A35Ff45d636b1abb83;\r\n\r\n    address public tokenPair = 0xC47B852b6138A5579340Dbe6fe94cE18F62100fd;\r\n    address public bnbPair = 0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE;\r\n    address public wbnb = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\r\n    address public usdt = 0x55d398326f99059fF775485246999027B3197955;\r\n\r\n    address public mooHelperV3 = 0x5c026E9E6213af5c3af6A48B9Fb43e102E1282e5;\r\n\r\n    bool locked;\r\n    modifier noReentrant() {\r\n        require(!locked, \"No re-entrancy\");\r\n        locked = true;\r\n        _;\r\n        locked = false;\r\n    }\r\n\r\n    constructor() {\r\n        newpermit(msg.sender,\"permit\");\r\n        newpermit(msg.sender,\"owner\");\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function current_price() public view returns (uint256) {\r\n        return IHelper(mooHelperV3).current_price();\r\n    }\r\n\r\n    function thisClaimed(address account) public view returns (uint256) {\r\n        return IHelper(mooHelperV3).thisClaimed(account);\r\n    }\r\n\r\n    function presaleUSD2MOO(uint256 amount) public view returns (uint256) {\r\n        return IHelper(mooHelperV3).presaleUSD2MOO(amount);\r\n    } \r\n\r\n    function getPresaleBalanceUSD(address account) public view returns (uint256) {\r\n        return IHelper(mooHelperV3).getPresaleBalanceUSD(account);\r\n    }\r\n\r\n    function presaleClaimed(address account) public view returns (uint256) {\r\n        return IHelper(mooHelperV3).presaleClaimed(account);\r\n    }\r\n\r\n    function getBNBPerToken() public view returns (uint256) {\r\n        uint256 bnb = IERC20(wbnb).balanceOf(tokenPair) * 1e18;\r\n        uint256 token = IERC20(tokenMOO).balanceOf(tokenPair) * 1e12;\r\n        return bnb / token;\r\n    }\r\n\r\n    function getBNBPrice() public view returns (uint256) {\r\n        uint256 wbnbPair = IERC20(wbnb).balanceOf(bnbPair);\r\n        uint256 usdtPair = IERC20(usdt).balanceOf(bnbPair);\r\n        return ( usdtPair * 1e18 ) / wbnbPair;\r\n    }\r\n\r\n    function getMooPrice() public view returns (uint256) {\r\n        return getBNBPerToken() * getBNBPrice() / 1e24;\r\n    }\r\n\r\n    function getMooPriceAmount(uint256 amount) public view returns (uint256) {\r\n        return getMooPrice() * amount;\r\n    }\r\n\r\n\r\n    function depositWithToken(address account,address referral,uint256 amount) public noReentrant returns (bool) {\r\n        uint256 usdMooPrice = getMooPriceAmount(amount);\r\n        IERC20(tokenMOO).transferFrom(msg.sender,address(this),amount);\r\n        IDepositor(depositor).depositWithPermit(account,referral,userCA,amount,usdMooPrice,false);\r\n        return true;\r\n    }\r\n\r\n    function depositWithRenew(address account,address referral) public noReentrant returns (bool) {\r\n        uint256 renewBalance = IERC20(tokenRenew).balanceOf(account);\r\n        require(renewBalance>=200000000000000);\r\n        IERC20(tokenRenew).burn(account,renewBalance);\r\n        IDepositor(depositor).depositWithPermit(account,referral,userCA,renewBalance,renewBalance*100000,true);\r\n        return true;\r\n    }\r\n\r\n    function claimReward(address account) public noReentrant returns (bool) {\r\n        IDepositor(depositor).claimReward(account,userCA,false);\r\n        return true;\r\n    }\r\n\r\n    function claimTracker(address account) public noReentrant returns (bool) {\r\n        uint256 claimBalance = IERC20(tokenTracker).balanceOf(account);\r\n        IERC20(tokenTracker).burn(account,claimBalance);\r\n        IERC20(tokenMOO).transfer(account,claimBalance);\r\n        return true;\r\n    }\r\n\r\n    function withdrawToken(address token,uint256 amount) public forRole(\"owner\") returns (bool) {\r\n        IERC20(token).transfer(msg.sender,amount);\r\n        return true;\r\n    }\r\n\r\n    function withdrawETH(uint256 amount) public forRole(\"owner\") returns (bool) {\r\n        (bool success,) = msg.sender.call{ value: amount }(\"\");\r\n        require(success, \"MOOMOOUP REVERT: FAIL TO WITHDRAW ETH\");\r\n        return true;\r\n    }\r\n\r\n    function grantRole(address adr,string memory role) public forRole(\"owner\") returns (bool) {\r\n        newpermit(adr,role);\r\n        return true;\r\n    }\r\n\r\n    function revokeRole(address adr,string memory role) public forRole(\"owner\") returns (bool) {\r\n        clearpermit(adr,role);\r\n        return true;\r\n    }\r\n\r\n    function transferOwnership(address adr) public forRole(\"owner\") returns (bool) {\r\n        newpermit(adr,\"owner\");\r\n        clearpermit(msg.sender,\"owner\");\r\n        owner = adr;\r\n        return true;\r\n    }\r\n\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"bnbPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"checkpermit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"claimReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"claimTracker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"current_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"depositWithRenew\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositWithToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBNBPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBNBPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMooPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getMooPriceAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPresaleBalanceUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"grantRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mooHelperV3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"presaleClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"presaleUSD2MOO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"revokeRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"thisClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenMOO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenRenew\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTracker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wbnb\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MooMoohHelperV4", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://389370184c23a06f552fcf495ab369ebfc69c1733cf79f2afca7c59b0e23506a"}