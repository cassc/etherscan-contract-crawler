{"SourceCode": "// SPDX-License-Identifier: GPL-3.0 \r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n  \r\n    function totalSupply() external view returns (uint256);\r\n\r\n \r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n   \r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.8.2;\r\n\r\n\r\ncontract AirdropDoge {\r\n\r\n    uint256 public total_ClaimAirdrop;\r\n    uint256 public cost = 80 * 10 ** 14;  \r\n    address public owner;\r\n\r\n    IERC20 public token;\r\n    uint256 _decimal =  8;\r\n    uint256 public reward = 5 * 10 ** _decimal;\r\n    uint256 public referral_reward = 5 * 10 ** _decimal;\r\n\r\n    bool public paused = false;\r\n\r\n    mapping(address => uint) public total_claims;\r\n    mapping (uint => address) public _users;\r\n    mapping(address => bool) public _claimed;\r\n    mapping(address => mapping (address => bool)) _valid;\r\n\r\n    constructor(address _token) {\r\n        token = IERC20(_token);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner,\"Caller: Must be Owner!!\");\r\n        _;\r\n    }\r\n\r\n    mapping(address => uint) public dayClaim;\r\n    mapping(address => uint256) public clock;\r\n    //50000000\r\n    uint256 public total_Count = 50000000 * 10 ** _decimal;\r\n    uint256 public total_gons;\r\n\r\n    function Airdrop(address _referral) public payable { \r\n\r\n\r\n        require(!paused,\"AirDrop is Paused!!\");\r\n\r\n        require(total_gons <= total_Count,\"Air Drop Rewards Distributed!!\");\r\n\r\n        require(msg.value >= cost,\"Insufficient Funds!!\");\r\n\r\n        if(dayClaim[msg.sender] == 0 ) {\r\n            clock[msg.sender] = block.timestamp;\r\n        }\r\n\r\n        if(block.timestamp <= clock[msg.sender] + 1 days ){\r\n            require(dayClaim[msg.sender] != 10,\"Daily Limit Exceeded!!\");\r\n        }\r\n\r\n        if(dayClaim[msg.sender] == 10) {\r\n            clock[msg.sender] = block.timestamp;\r\n            dayClaim[msg.sender] = 0;\r\n        }\r\n\r\n        dayClaim[msg.sender] += 1;\r\n\r\n        if (total_claims[msg.sender] <= 0)\r\n        {\r\n            _users[total_ClaimAirdrop] = msg.sender;\r\n            total_ClaimAirdrop += 1;\r\n        }\r\n\r\n        total_claims[msg.sender] += msg.value;\r\n\r\n        (bool success,) = payable(owner).call{value: msg.value}(\"\");\r\n        require(success,\"Transaction Failed!!\");\r\n\r\n        token.transfer(msg.sender, reward);\r\n\r\n        total_gons += reward;\r\n\r\n        if (_referral != address(0))\r\n        {\r\n            require(msg.sender != _referral,\"You can't refer yourself!!\");\r\n          //  require(!_valid[msg.sender][_referral],\"Referral Already Used\");\r\n            require(_claimed[_referral],\"Not Valid Referral!!\");\r\n\r\n            token.transfer(_referral, referral_reward);\r\n            total_gons += referral_reward;\r\n\r\n            _valid[msg.sender][_referral] = true;\r\n        }\r\n\r\n        _claimed[msg.sender] = true;\r\n        // token.transferFrom(owner(),msg.sender, reward); \r\n    }\r\n\r\n    function Balance() public view returns(uint256){\r\n        return address(this).balance;\r\n    }\r\n\r\n    function token_Balance() public view returns(uint256){\r\n        return token.balanceOf(address(this));\r\n    }\r\n\r\n    function setRewards(uint _ClaimReward, uint _referralReward) external onlyOwner{\r\n        reward = _ClaimReward;\r\n        referral_reward = _referralReward;\r\n    }\r\n\r\n    function withdraw() public onlyOwner {\r\n        (bool success,) = payable(owner).call{value: address(this).balance}(\"\");\r\n        require(success,\"Transaction Failed!!\");\r\n        token.transfer(msg.sender, token.balanceOf(address(this)));\r\n    }\r\n\r\n    function setCost(uint _amount) public onlyOwner{\r\n        cost = _amount;\r\n    }\r\n\r\n    function setPaused(bool _value) external onlyOwner{\r\n        paused = _value;\r\n    }\r\n\r\n    function setAirMax(uint _value) external onlyOwner{\r\n        total_Count = _value;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) external onlyOwner{\r\n\t\towner = _newOwner;\r\n\t}\r\n\r\n    \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referral\",\"type\":\"address\"}],\"name\":\"Airdrop\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_users\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dayClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referral_reward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setAirMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ClaimReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_referralReward\",\"type\":\"uint256\"}],\"name\":\"setRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token_Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total_ClaimAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total_Count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"total_claims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total_gons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AirdropDoge", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000ba2ae424d960c26247dd6c32edc70b295c744c43", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7d3df729605fa3bce3c896f70ec30aba2cb4f943d23d5f5c9760e31a8406e9dd"}