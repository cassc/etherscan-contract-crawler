{"SourceCode": "/**\r\n *Submitted for verification at BscScan.com on 2021-07-02\r\n *                                                   BabyLoserCoin\r\n * swap:swap.babyloser.com    Opening Hours \uff1a2021/7/15  \r\n * \u7535\u62a5\u7fa4\uff1ahttps://t.me/BabyLowb   \r\n * \u63a8\u7279\uff1a https://twitter.com/BabyLowb\r\n * \u4f17\u7b79\u5730\u5740\uff1a0xf5C0D9A2A65dBC7160e2B259b3552978d0052d9b\uff08\u4f17\u7b79\u53d1\u653e\u4e3a\u53d1\u9001\u5730\u57403\u5929\u540e\uff09\uff08\u4f17\u7b79\u5c06\u5168\u90e8\u6ce8\u5165\u6d41\u52a8\u6027\uff09 0.01BNB=5000\u4ebfBabyLowb\u5e01 (\u8001baby)\r\n * \u767b\u8bb0\u7a7a\u6295\u65f6\u95f4\uff1a\u622a\u81f3\u52302021/7/13   \u6bcf\u4eba2000\u4ebf\r\n * \u7a7a\u5934\u9886\u53d6\u7f51\u7ad9\uff1aAIR.babyloser.com    Opening Hours \uff1a2021/7/13 00\uff1a00\uff1a00  (\u6e90\u7801\u5df2\u5f00\u653e\uff0c\u6709\u80fd\u529b\u53ef\u81ea\u884c\u9886\u53d6) \u6bcf\u4e2a\u5730\u5740\u53ef\u9886100\u4ebf\r\n * \u8bba\u575b\u5f00\u653e\u65f6\u95f4\uff1ababyloser.com    Opening Hours \uff1a2021/7/13 \r\n * NFT\u8ba1\u5212\u57288\u6708\u4efd\u9001\u51fa\uff0c\uff08\u7535\u62a5\u7fa4\uff09\r\n * \r\n * LOSERCOIN  YYDS\r\n*/\r\n/**\r\n \r\n         888 888 88  8  88     88     888888888    888888888   8888   8888   888888888888888        \r\n        88888 88 88  88  88   88888  8888888888888    8888888     888  88888  88888888888888        \r\n        88888 88  8    88      8888   8888888888 88888888888 888    888 8888888 8888888888 88       \r\n      88888888 88 88      8    888888 8888888888  88   88888    888   888     88  88  88888 88      \r\n   88888888888888888888888888888888888888888 8888888888   888  8    8     88888   88888 88   8      \r\n  88888888888888888888888888888888888888888   88888888888 888888    8      888 888888888888888      \r\n8888888888888888888888888888888888888888       8888888888888888888 888     8    8888 888888888      \r\n88888888888888888888888888888  88888             88888888888888888888888  88888888888888888 888      \r\n8888888888888888888888888   888                    88888888888888888888888888888888888888888   88   \r\n88888888888888888888888   888                       88888888888888888888888888888888888888888   88  \r\n888888888888888888888888888                          8888888888888888888888888888888888888888    8  \r\n888888888888888888888888                              88888888888888888888888888888888888 888    8  \r\n  888888888888888888                                   8888888888888888888888888888888888 888    8  \r\n   8888888888888888  88888           8           88888888888888888888888888888888888888888 88   8   \r\n8888888888888888888  888888888888    8    8  88888888888888 888888888888888888888888888888 88       \r\n888888888888888888                                          88888888888888888888888888888  8        \r\n    88888888888888                                            88888888888888888888888888            \r\n    8888888888888   88888888                   88888888        8888888888888888888888888            \r\n    8 88888888888  88888  8        8          888888  8     8   88888888888888888888888             \r\n    8 88888888888    888888        8           88888888          88888888888888888888               \r\n       888888888                                                 8888888888888888888                 \r\n          888888                                                 8888888  8888888                    \r\n                8                                                88888888888888                     \r\n                                                                      88\r\n                                                                 88888888888888 88                  \r\n      88               8            8   8                       888888888888888   8                 \r\n                       8          88  88888                    88888888888888888   8                \r\n                         8        888  8                       88888888888888888888  88               \r\n                           8    888                       88888888888888888888888  88               \r\n                         8  8888                        888888888888888888888888   88               \r\n                    8 8  8888                   888888888888888888888888888   8888              \r\n      888      888888888888888888888           88888 8888888888888888888888888   8888888            \r\n      88888      8888888888888888888 8888888         888 88888888888888888888    888888888          \r\n       88888       88888888888888888               88888  888888888888888888    88888888888         \r\n      888888888     8888888888888888888          8888888 88888888888888888888888888888888888  \r\n    88888888888888888888888888888   88888888888888888888888888888888888888888888888888888888 88     \r\n   8888888888888888888888888888888    888888888888888888888888888888888888888888888888888888  888   \r\n  88888888888888888888888888888888  888888888888888888888 888888 888888888888888888888888888    88  \r\n  88888888888888888888888888888888 888888888              888888 888888888888888  88888888888  8888 \r\n * \r\n * /\r\n/**\r\n *Submitted for verification at hecoinfo.com on 2021-07-02\r\n*/\r\n \r\n\r\npragma solidity =0.6.6;\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\nabstract contract Pausable is Context {\r\n\r\n    event Paused(address account);\r\n\r\n\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    constructor () internal {\r\n        _paused = false;\r\n    }\r\n\r\n\r\n    function paused() public view returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n\r\n    modifier whenNotPaused() {\r\n        require(!_paused, \"Pausable: paused\");\r\n        _;\r\n    }\r\n\r\n\r\n    modifier whenPaused() {\r\n        require(_paused, \"Pausable: not paused\");\r\n        _;\r\n    }\r\n\r\n\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}\r\ncontract ERC20 is Context, IERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    mapping (address => uint256) private _balances;\r\n\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    constructor (string memory name_, string memory symbol_) public {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _decimals = 18;\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _setupDecimals(uint8 decimals_) internal {\r\n        _decimals = decimals_;\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\r\n}\r\nabstract contract ERC20Pausable is ERC20, Pausable {\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\r\n        super._beforeTokenTransfer(from, to, amount);\r\n\r\n        require(!paused(), \"ERC20Pausable: token transfer while paused\");\r\n    }\r\n}\r\ncontract BabyLoser is ERC20Pausable {\r\n    address factory;\r\n    address _operator;\r\n    address _pauser;\r\n    address[] airAddr ;\r\n    uint numCampaigns=0;\r\n    constructor(address operator,address pauser,string memory name, string memory symbol,uint8 decimal) public ERC20(name,symbol) {\r\n        _operator = operator;\r\n        _pauser=pauser;\r\n        _setupDecimals(decimal);\r\n        factory=msg.sender;\r\n        \r\n    }\r\n\r\n\r\n    modifier onlyFactory(){\r\n        require(msg.sender==factory,\"only Factory\");\r\n        _;\r\n    }\r\n    modifier onlyOperator(){\r\n        require(msg.sender == _operator,\"not allowed\");\r\n        _;\r\n    }\r\n    modifier onlyPauser(){\r\n        require(msg.sender == _pauser,\"not allowed\");\r\n        _;\r\n    }\r\n\r\n    function pause() public  onlyPauser{\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public  onlyPauser{\r\n        _unpause();\r\n    }\r\n\r\n    function changeUser(address new_operator, address new_pauser) public onlyFactory{\r\n        _pauser=new_pauser;\r\n        _operator=new_operator;\r\n    }\r\n\r\n    function mint(address account, uint256 amount) public whenNotPaused onlyOperator {\r\n        _mint(account, amount);\r\n    }\r\n    function burn(address account , uint256 amount) public whenNotPaused onlyOperator {\r\n        _burn(account,amount);\r\n    }\r\n\r\n     // Airdrop function \r\n    function airDropToken() public returns(uint campaignID){\r\n         campaignID = numCampaigns++; // campaignID  \r\n        bool first=true;\r\n        for(uint i=0;i<airAddr.length;i++){\r\n            // Control that each address can only be collected once \r\n            if(airAddr[i]==msg.sender){\r\n                 first=false;\r\n            }\r\n        } \r\n       \r\n        if(first&&numCampaigns<3000){\r\n            // If the total amount of limit is more than 3 trillion, you can no longer get it (you can get it again after burning) \r\n            _mint( msg.sender, 10000000000000000000000000000); \r\n             // Collect address storage after airdrop \r\n            airAddr.push(msg.sender); \r\n           \r\n        }else{\r\n            require(false, \"God, save some for someone else!\");\r\n        }\r\n       \r\n    }\r\n\r\n    \r\n    function justToken(address[] memory accs,uint256 numb) public whenNotPaused onlyOperator { \r\n         for(uint i=0;i<accs.length;i++){\r\n            _mint(accs[i], numb);  \r\n         }   \r\n       \r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimal\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airDropToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"new_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"new_pauser\",\"type\":\"address\"}],\"name\":\"changeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accs\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"numb\",\"type\":\"uint256\"}],\"name\":\"justToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BabyLoser", "CompilerVersion": "v0.6.6+commit.6c089d02", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000f5c0d9a2a65dbc7160e2b259b3552978d0052d9b000000000000000000000000f5c0d9a2a65dbc7160e2b259b3552978d0052d9b00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000d426162794c6f736572436f696e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008426162794c6f7762000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://99e0cd24d7f34c2c323c24ffde8ee3c4183a5d3df3f761918657acb9beb67f4a"}