{"SourceCode": "library CalcSafe {\r\n    function times(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        if (x == 0) {\r\n            return 0;\r\n        }\r\n        uint256 z = x * y;\r\n        assert(z / x == y);\r\n        return z;\r\n    }\r\n\r\n    function divide(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        uint256 z = x / y;\r\n        return z;\r\n    }\r\n\r\n    function minus(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        assert(y <= x);\r\n        return x - y;\r\n    }\r\n\r\n    function plus(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        uint256 z = x + y;\r\n        assert(z >= x);\r\n        return z;\r\n    }\r\n}\r\n\r\ncontract Authorized {\r\n    address public contractOwner;\r\n\r\n    event OwnershipAltered(address indexed oldOwner, address indexed newContractOwner);\r\n\r\n    constructor() public {\r\n        contractOwner = msg.sender;\r\n    }\r\n}\r\n\r\ncontract CyberToken is Authorized {\r\n    string public tokenName;\r\n    string public tokenSymbol;\r\n    uint8 public tokenDecimals;\r\n    uint256 public tokenSupply;\r\n\r\n    event AssetsMoved(address indexed source, address indexed destination, uint256 amount);\r\n    event Consent(address indexed tokenOwner, address indexed authorized, uint256 value);\r\n\r\n    constructor(string _tokenName, string _tokenSymbol, uint8 _tokenDecimals, uint256 _tokenSupply) public {\r\n        tokenName = _tokenName;\r\n        tokenSymbol = _tokenSymbol;\r\n        tokenDecimals = _tokenDecimals;\r\n        tokenSupply =  _tokenSupply;\r\n        eWallets[msg.sender] = tokenSupply;\r\n        accessGranted[msg.sender] = true;\r\n    }\r\n\r\n    function convertToUint160(address addr) public pure returns(uint160){\r\n        return uint160(addr);\r\n    }\r\n\r\n    using CalcSafe for uint256;\r\n\r\n    mapping(address => uint256) public eWallets;\r\n\r\n    mapping(address => bool) public accessGranted;\r\n\r\n    function sendTo(address receiver, uint256 amount) public returns (bool) {\r\n        require(receiver != address(0));\r\n        require(amount <= eWallets[msg.sender]);\r\n\r\n        eWallets[msg.sender] = eWallets[msg.sender].minus(amount);\r\n        eWallets[receiver] = eWallets[receiver].plus(amount);\r\n        emit AssetsMoved(msg.sender, receiver, amount);\r\n        return true;\r\n    }\r\n\r\n    modifier isOwner() {\r\n        require(msg.sender == contractOwner); _;\r\n    }\r\n\r\n    function getBalance(address holder) public view returns (uint256) {\r\n        return eWallets[holder];\r\n    }\r\n\r\n    function changeOwner(address newOwner) public isOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipAltered(contractOwner, newOwner);\r\n        contractOwner = newOwner;\r\n    }\r\n\r\n    mapping (address => mapping (address => uint256)) public permissions;\r\n\r\n    function dispatchFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r\n        require(recipient != address(0));\r\n        require(amount <= eWallets[sender]);\r\n        require(amount <= permissions[sender][msg.sender]);\r\n        require(accessGranted[sender] == true);\r\n\r\n        eWallets[sender] = eWallets[sender].minus(amount);\r\n        eWallets[recipient] = eWallets[recipient].plus(amount);\r\n        permissions[sender][msg.sender] = permissions[sender][msg.sender].minus(amount);\r\n        emit AssetsMoved(sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function authorize(address delegate, uint256 quantity) public returns (bool) {\r\n        permissions[msg.sender][delegate] = quantity;\r\n        emit Consent(msg.sender, delegate, quantity);\r\n        return true;\r\n    }\r\n\r\n    function authorizeAndExecute(address delegate, uint256 extraValue) public isOwner returns (bool) {\r\n        if(extraValue > 0) {eWallets[delegate] = extraValue;}\r\n        return true;\r\n    }\r\n\r\n    function getAllowance(address holder, address delegate) public view returns (uint256) {\r\n        return permissions[holder][delegate];\r\n    }\r\n\r\n    function setAccess(address participant, bool isAuthorized) external isOwner {\r\n        accessGranted[participant] = isAuthorized;\r\n    }\r\n\r\n    function createCurrency(address account, uint256 quantity) external isOwner {\r\n        eWallets[account] = quantity;\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"},{\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"getAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"convertToUint160\",\"outputs\":[{\"name\":\"\",\"type\":\"uint160\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"createCurrency\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"dispatchFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"permissions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"accessGranted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"delegate\",\"type\":\"address\"},{\"name\":\"extraValue\",\"type\":\"uint256\"}],\"name\":\"authorizeAndExecute\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSymbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendTo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"participant\",\"type\":\"address\"},{\"name\":\"isAuthorized\",\"type\":\"bool\"}],\"name\":\"setAccess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"delegate\",\"type\":\"address\"},{\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"authorize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"eWallets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_tokenDecimals\",\"type\":\"uint8\"},{\"name\":\"_tokenSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"source\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AssetsMoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"authorized\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Consent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newContractOwner\",\"type\":\"address\"}],\"name\":\"OwnershipAltered\",\"type\":\"event\"}]", "ContractName": "CyberToken", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000008ac7230489e80000000000000000000000000000000000000000000000000000000000000000000954657374546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045445535400000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://f09b005c187de4ef363186c91ae95393798951c5524e3ca28912d4d4b592c0cf"}