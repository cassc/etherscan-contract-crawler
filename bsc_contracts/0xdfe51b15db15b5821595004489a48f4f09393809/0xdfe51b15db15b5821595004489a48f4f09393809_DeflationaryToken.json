{"SourceCode": "pragma solidity ^0.8.4;\r\n\r\ncontract DeflationaryToken {\r\n    mapping(address => uint) private balances;\r\n    mapping(address => mapping(address => uint)) private allowed;\r\n    uint public totalSupply;\r\n    string public name;\r\n    string public symbol;\r\n    uint public decimals;\r\n    uint public deflation;\r\n    uint public minSupply;\r\n    uint public initialSupply;\r\n    uint public burnt;\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    \r\n    constructor(string memory _name, string memory _symbol, uint _dec, uint _supply, uint _deflation, uint _minSupply, address _owner) {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _dec;\r\n        totalSupply = _supply * 10 ** decimals;\r\n        initialSupply = _supply * 10 ** decimals;\r\n        deflation = _deflation;\r\n        minSupply = _minSupply * 10 ** decimals;\r\n        burnt = 0;\r\n        balances[_owner] = totalSupply;\r\n        emit Transfer(address(0), _owner, totalSupply);\r\n    }\r\n    \r\n    function balanceOf(address owner) public view returns(uint) {\r\n        return balances[owner];\r\n    }\r\n    \r\n    function transfer(address to, uint value) public returns(bool) {\r\n        require(balances[msg.sender] >= value, 'balance too low');\r\n        \r\n        balances[msg.sender] -= value;\r\n        \r\n        if (deflation > 0 && totalSupply > minSupply) {\r\n            uint defAmount = value * deflation / 1000;\r\n            \r\n            if (defAmount > 0) {\r\n                \r\n                if (totalSupply - defAmount < minSupply) {\r\n                    defAmount = totalSupply - minSupply;\r\n                }\r\n                value = value - defAmount;\r\n                totalSupply -= defAmount;\r\n                burnt += defAmount;\r\n                emit Transfer(msg.sender, address(0), defAmount);\r\n            }\r\n        }\r\n        \r\n        balances[to] += value;\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address from, address to, uint value) public returns(bool) {\r\n        require(balances[from] >= value, 'balance too low');\r\n        require(allowed[from][msg.sender] >= value, 'allowance too low');\r\n        \r\n        balances[from] -= value;\r\n        allowed[from][msg.sender] -=value;\r\n\r\n        if (deflation > 0 && totalSupply > minSupply) {\r\n            uint defAmount = value * deflation / 1000;\r\n            \r\n            if (defAmount > 0) {\r\n                \r\n                if (totalSupply - defAmount < minSupply) {\r\n                    defAmount = totalSupply - minSupply;\r\n                }\r\n                \r\n                value = value - defAmount;\r\n                totalSupply -= defAmount;\r\n                burnt += defAmount;\r\n                emit Transfer(from, address(0), defAmount);\r\n            }\r\n        }\r\n        \r\n        balances[to] += value;\r\n        emit Transfer(from, to, value);\r\n        return true;   \r\n    }\r\n    \r\n    function approve(address spender, uint value) public returns (bool) {\r\n        allowed[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;   \r\n    }\r\n    \r\n    function allowance(address owner, address spender) public view returns (uint) {\r\n        return allowed[owner][spender];\r\n    }\r\n    \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_dec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deflation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deflation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DeflationaryToken", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000d3c21bcecceda10000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000bafba3cb1afd8cb583717c56ed90cff68f9b907b000000000000000000000000000000000000000000000000000000000000000a5370616365586d6f6f4e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a5350414345584d4f4f4e00000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7fbeb0e63168af770ddffdc35f6413159b1b2c374c2bddc5701b6fe92aae36ea"}