{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract CSDOGESALE\r\n{\r\n    struct presale\r\n    {\r\n       uint256 amount;\r\n       uint256 token;\r\n       uint256 rewards;\r\n    }\r\n\r\n    address public token;\r\n    address public BUSDtoken;\r\n    uint256 public BNBprice;\r\n    uint256 public BUSDprice;\r\n    uint256 public presalerewards;\r\n    uint256 public airdroprewards;\r\n    address public devwallet;\r\n    bool public stop;\r\n    mapping(address => presale) userinfo;\r\n\r\n    constructor(address _devwallet,address _address,address _BUSDtoken,uint256 _BNBratio,uint256 _BUSDratio,uint256 _presalerewards,uint256 _airdroprewards)\r\n    {\r\n        token = _address;\r\n        BNBprice   = _BNBratio;\r\n        BUSDprice  = _BUSDratio;\r\n        presalerewards = _presalerewards;\r\n        airdroprewards = _airdroprewards;\r\n        devwallet = _devwallet;\r\n        BUSDtoken = _BUSDtoken;\r\n        stop = true;\r\n    }\r\n      \r\n    function tokentransferBNB(address _address,bool choice) public payable\r\n    {\r\n        require(stop,\"sale end\");\r\n        require(msg.value!=0,\"zero bnb not allow\");\r\n        uint256 amount = (msg.value*BNBprice)/(uint256(10**9));\r\n        IERC20(token).transfer(msg.sender,amount);\r\n        userinfo[msg.sender].amount += msg.value;\r\n        userinfo[msg.sender].token += amount;\r\n        if(presalerewards != 0 && _address != address(0))\r\n        {\r\n            if(choice)\r\n            {\r\n                uint256 rewardsdistribute = (amount*airdroprewards)/uint256(100);\r\n                IERC20(token).transfer(_address,rewardsdistribute);\r\n                userinfo[_address].rewards += rewardsdistribute;\r\n            }\r\n            else\r\n            {\r\n                uint256 rewardsdistribute = (amount*presalerewards)/uint256(100);\r\n                IERC20(token).transfer(_address,rewardsdistribute);\r\n                userinfo[_address].rewards += rewardsdistribute;\r\n            }\r\n        }\r\n    }\r\n                                                                           \r\n    function tokentransferBUSD(uint256 BUSDamount,address _address) external\r\n    {\r\n        require(stop,\"sale end\");\r\n        require(IERC20(BUSDtoken).allowance(msg.sender,address(this)) >= BUSDamount,\"Approve that much amount\");\r\n        uint256 amount = (BUSDamount*BUSDprice)/(uint256(10**9));\r\n        IERC20(token).transfer(msg.sender,amount);\r\n        userinfo[msg.sender].amount += BUSDamount;\r\n        userinfo[msg.sender].token += amount;\r\n        if(presalerewards != 0)\r\n        {\r\n           uint256 rewardsdistribute = (amount*presalerewards)/uint256(100);\r\n           IERC20(token).transfer(_address,rewardsdistribute);\r\n           userinfo[_address].rewards += rewardsdistribute;\r\n        }\r\n    }\r\n\r\n    function endsale() external\r\n    {\r\n        require(devwallet == msg.sender,\"You are not allowed\");\r\n        stop = false; \r\n    }\r\n\r\n    function setpresale(uint256 percentage) external \r\n    {\r\n        require(devwallet == msg.sender,\"You are not allowed\");\r\n        presalerewards = percentage;\r\n    }\r\n\r\n    function setairdrop(uint256 percentage) external \r\n    {\r\n        require(devwallet == msg.sender,\"You are not allowed\");\r\n        airdroprewards = percentage;\r\n    }  \r\n\r\n    function bnbtokenprice(uint256 price) external \r\n    {\r\n        require(devwallet == msg.sender,\"You are not allowed\");\r\n        BNBprice = price;\r\n    } \r\n\r\n    function busdtokenprice(uint256 price) external \r\n    {\r\n        require(devwallet == msg.sender,\"You are not allowed\");\r\n        BUSDprice = price;\r\n    } \r\n\r\n    function withdrawbnb(uint256 amount) external \r\n    {\r\n        require(msg.sender == devwallet,\"not devwallet\");\r\n        (bool success,) = devwallet.call{value:amount}(\"\");\r\n        require(success,\"refund failed\"); \r\n    }\r\n\r\n    function withdrawBUSD(uint256 amount) external \r\n    {\r\n        require(msg.sender == devwallet,\"not devwallet\");\r\n        IERC20(BUSDtoken).transfer(devwallet,amount);\r\n    }\r\n\r\n    function withdrawCSDOGEToken(uint256 amount) external \r\n    {\r\n        require(msg.sender == devwallet,\"not devwallet\");\r\n        IERC20(token).transfer(devwallet,amount);\r\n    }    \r\n\r\n    function getuserinfo() external view returns(presale memory)\r\n    {\r\n        return userinfo[msg.sender];\r\n    }\r\n\r\n    function ratio(uint256 amount,bool choice) external view returns(uint256 value)\r\n    {\r\n        if(choice)\r\n        {\r\n            return (BNBprice*amount);\r\n        }\r\n        else\r\n        {\r\n            return (BUSDprice*amount);\r\n        }\r\n                \r\n    }    \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devwallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_BUSDtoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_BNBratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_BUSDratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_presalerewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_airdroprewards\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BNBprice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BUSDprice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BUSDtoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdroprewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"bnbtokenprice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"busdtokenprice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devwallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endsale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getuserinfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"internalType\":\"struct CSDOGESALE.presale\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presalerewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"}],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"setairdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"setpresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stop\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"choice\",\"type\":\"bool\"}],\"name\":\"tokentransferBNB\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"BUSDamount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"tokentransferBUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawBUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCSDOGEToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawbnb\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "CSDOGESALE", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000bf86e21c8cd7bdf2a4c2ff8cfe557f7e9ad678b20000000000000000000000006eabbb5c4fda0033936d07cf1a444e8816c009fc000000000000000000000000e9e7cea3dedca5984780bafc599bd69add087d5600000000000000000000000000000000000000000000000000000000ee6b2800000000000000000000000000000000000000000000000000000000000065b9aa000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000064", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ca80ec818db34bf7b0db99be0780d722b516f3f317755ad154dbab4cebe55990"}