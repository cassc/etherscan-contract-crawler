{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract TokenSale {\r\n    address public owner;\r\n    IERC20 public token; // \u8fd9\u662f\u60a8\u8981\u51fa\u552e\u7684\u4ee3\u5e01\r\n    IERC20 public usdt; // \u5047\u8bbe\u60a8\u4f7f\u7528\u7684\u662fUSDT\u4f5c\u4e3a\u652f\u4ed8\u65b9\u5f0f\r\n    uint256 public rate; // 1 USDT \u53ef\u4ee5\u4e70\u5230\u591a\u5c11\u4ee3\u5e01\r\n    uint256 public minPurchase; // \u6700\u5c0f\u8d2d\u4e70\u91cf\uff08USDT\uff09\r\n    uint256 public maxPurchase; // \u6700\u5927\u8d2d\u4e70\u91cf\uff08USDT\uff09\r\n\r\n    constructor(address _token, address _usdt, uint256 _rate) {\r\n        owner = msg.sender;\r\n        token = IERC20(_token);\r\n        usdt = IERC20(_usdt);\r\n        rate = _rate;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    function setRate(uint256 _rate) external onlyOwner {\r\n        rate = _rate;\r\n    }\r\n\r\n    function setPurchaseLimits(uint256 _min, uint256 _max) external onlyOwner {\r\n        require(_min <= _max, \"Min should not be greater than max\");\r\n        minPurchase = _min;\r\n        maxPurchase = _max;\r\n    }\r\n\r\n    function setToken(address _token) external onlyOwner {\r\n        token = IERC20(_token);\r\n    }\r\n\r\n    function buyTokens(uint256 usdtAmount) external {\r\n        require(usdtAmount >= minPurchase && usdtAmount <= maxPurchase, \"Invalid purchase amount\");\r\n        \r\n        uint256 tokenAmount = usdtAmount * rate;\r\n        \r\n        // \u7528\u6237\u652f\u4ed8 USDT\r\n        require(usdt.transferFrom(msg.sender, address(this), usdtAmount), \"Transfer of USDT failed\");\r\n        \r\n        // \u5408\u7ea6\u8f6c\u79fb\u4ee3\u5e01\u7ed9\u7528\u6237\r\n        require(token.transfer(msg.sender, tokenAmount), \"Transfer of tokens failed\");\r\n    }\r\n\r\n    function withdrawUSDT() external onlyOwner {\r\n        uint256 balance = usdt.balanceOf(address(this));\r\n        require(usdt.transfer(owner, balance), \"Transfer of USDT failed\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPurchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPurchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setPurchaseLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TokenSale", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000009b1c3d278c5d2c837432c4d5dcfdc9fbd0abc7d700000000000000000000000055d398326f99059ff775485246999027b3197955000000000000000000000000000000000000000000000000d244fecc58ee8000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://5a6dd2728a2f11d59f89ea34e53d566a48143654eec4e942e05c98522d132949"}