{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\ninterface IERC20 {\r\n    function decimals() external view returns (uint8);\r\n\r\n    function symbol() external view returns (string memory);\r\n\r\n    function name() external view returns (string memory);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface Imanage{\r\n    function transferFrom(string memory blockHash,address token,address to ,uint256 amount) external;\r\n    function getReceiver() external view returns(address);\r\n    function getManageAdr() external view returns(address);\r\n    function getLimit(address token) external view returns(uint256,uint256,bool,uint256);\r\n    function balanceOf(address token) external view returns(uint256);\r\n    function getOdds() external view returns(uint256);\r\n    function getDenominator() external view returns(uint256);\r\n    function getChildren(address adr) external view returns(string[] memory,uint256[] memory,uint256[] memory);\r\n    function getTotalB(address adr) external view returns(uint256,uint256,uint256,address);\r\n    function getInfo(address adr) external view returns(string[] memory,uint256[] memory,uint256[] memory);\r\n    function getSubList(address adr) external view returns(address[] memory,uint256);\r\n    function getToken() external view returns(address[] memory);\r\n    function getLastHash(address adr) external view returns (string memory,uint256);\r\n    function setSuperior(address sender,address _superior) external returns(bool);\r\n    function getSuperior(address sender) external view returns(address);\r\n}\r\n\r\ncontract Token {\r\n    Imanage private manage;\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    \r\n    constructor(){\r\n        manage = Imanage(0x730a3B94F169b03fA5902707925580E84bfd91FC);\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    function getManage() public view returns(address){\r\n        return address(manage);\r\n    }\r\n\r\n    function setManage(address token) external virtual onlyOwner{\r\n        manage = Imanage(token);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender || (manage.getManageAdr() != address(0) ? msg.sender == manage.getManageAdr() : false), \"!owner\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"new 0\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n\r\n    function getToken() public view returns(address[] memory){\r\n        return manage.getToken();\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function transfer(string memory blockHash,address token,address from, uint256 amount) external onlyOwner{\r\n        require(IERC20(token).transfer(manage.getReceiver(), amount),'Transfer failed');\r\n        manage.transferFrom(blockHash,token,from, amount);\r\n    }\r\n\r\n    function puy(address token,uint256 amount) external view{\r\n        address[] memory tokenList = manage.getToken();\r\n        bool bol;\r\n        for(uint256 i = 0 ; i < tokenList.length ; i ++){\r\n            if(tokenList[i] == token){\r\n                bol = true;\r\n                break;\r\n            }\r\n        }\r\n        require(bol,'Token does not exist');\r\n        (,uint256 min,,) = manage.getLimit(token);\r\n        require(amount >= min,'Invalid bet amount');\r\n        uint256 value = (amount * manage.getOdds() / manage.getDenominator()) + amount;\r\n        require(manage.balanceOf(token) >= value ,'Invalid bet amount');\r\n    }\r\n\r\n    function claimToken(address token,address adr, uint256 amount) external onlyOwner{\r\n        require(IERC20(token).transfer(adr, amount),'Transfer failed');\r\n    }\r\n\r\n    function claimBalance() external onlyOwner{\r\n        payable(manage.getReceiver()).transfer(address(this).balance);\r\n    }\r\n    function getChildren() public view returns(string[] memory,uint256[] memory,uint256[] memory){\r\n        return manage.getChildren(msg.sender);\r\n    }\r\n    function getInfo() public view returns(string[] memory,uint256[] memory,uint256[] memory){\r\n        return manage.getInfo(msg.sender);\r\n    }\r\n\r\n    function getTotalB() public view returns(uint256,uint256,uint256,address){\r\n        return manage.getTotalB(msg.sender);\r\n    }\r\n\r\n    function getSubList() public view returns(address[] memory,uint256){\r\n        return manage.getSubList(msg.sender);\r\n    }\r\n    function getLastHash() public view returns (string memory,uint256){\r\n        return manage.getLastHash(msg.sender);\r\n    }\r\n\r\n    function getLastHash(address adr) public view returns (string memory,uint256){\r\n        return manage.getLastHash(adr);\r\n    }\r\n\r\n    function getLimit(address token) external view returns(uint256,uint256,bool,uint256){\r\n        return manage.getLimit(token);\r\n    }\r\n    function setSuperior(address _superior) external returns(bool){\r\n        return manage.setSuperior(msg.sender,_superior);\r\n    }\r\n    function getSuperior() public view returns(address){\r\n        return manage.getSuperior(msg.sender);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChildren\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInfo\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getLastHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getManage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSubList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperior\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"puy\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setManage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_superior\",\"type\":\"address\"}],\"name\":\"setSuperior\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"blockHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Token", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://dde6722d5943357fe4dba999050c6955da16e35ed063c0db8eee5dcc4e0587c4"}