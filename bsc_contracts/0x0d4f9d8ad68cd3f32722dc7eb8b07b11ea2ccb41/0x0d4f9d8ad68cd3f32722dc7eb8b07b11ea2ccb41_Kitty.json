{"SourceCode": "// SPDX-License-Identifier: CC-BY-4.0\r\n// 2021 Kitty Research Labs\r\n\r\n// solhint-disable compiler-version\r\n// solhint-disable const-name-snakecase\r\n// solhint-disable func-visibility\r\n\r\npragma solidity ^0.8.1;\r\n\r\nlibrary SafeMath {\r\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n\r\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n\r\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n\r\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n\r\n    function subtractToZero(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (b > a) c = 0; else c = a - b;\r\n    }\r\n}\r\n\r\nlibrary Math {\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a < b) return a;\r\n        return b;\r\n    }\r\n\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a > b) return a;\r\n        return b;\r\n    }\r\n}\r\n\r\ninterface ERC20Interface {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract ERC20Constants {\r\n    string  public constant name = \"KittyCoin\";\r\n    string  public constant symbol = \"KITTY\";\r\n    uint256 public constant decimals = 18;\r\n}\r\n\r\ncontract TokenConstants is ERC20Constants {\r\n    uint256 public constant MAX_SUPPLY  = 69420 * (10 ** decimals);\r\n    uint256 public constant MAX_AIRDROP =    32 * (10 ** decimals);\r\n    uint256 public constant MIN_AIRDROP =     1 * (10 ** decimals);    \r\n}\r\n\r\ncontract ERC20Token is ERC20Interface, TokenConstants {\r\n    using SafeMath for uint;\r\n    \r\n    mapping (address => uint256) internal balances;\r\n    mapping (address => mapping(address => uint256)) internal allowances;\r\n    \r\n    function _isValidRecipient(address recipient) internal view returns (bool) {\r\n        return recipient != address(0x0) && recipient != address(this);\r\n    }    \r\n    \r\n    function _transfer(address sender, address recipient, uint256 amount) internal returns (bool) {\r\n        require(balances[sender] >= amount, \"Insufficient balance amount\");\r\n        balances[sender] = balances[sender].safeSub(amount);\r\n        balances[recipient] = balances[recipient].safeAdd(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function _transferFrom(address sender, address recipient, uint256 amount) internal returns (bool) {\r\n        uint256 currentAllowance = allowances[sender][msg.sender];\r\n        require(currentAllowance >= amount, \"Insufficient allowance amount\");\r\n        allowances[sender][msg.sender] = currentAllowance.safeSub(amount);\r\n        return _transfer(sender, recipient, amount);\r\n    }\r\n\r\n    function totalSupply() external override view returns (uint256) {\r\n        return MAX_SUPPLY.safeSub(balances[address(0x0)]);\r\n    }\r\n\r\n    function balanceOf(address account) external override view returns (uint256) {\r\n        return balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n        require(_isValidRecipient(recipient), \"Invalid recipient\");\r\n        return _transfer(msg.sender, recipient, amount);\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n        require(sender != address(0x0), \"Invalid sender\");\r\n        require(_isValidRecipient(recipient), \"Invalid recipient\");\r\n        return _transferFrom(sender, recipient, amount);\r\n    }\r\n\r\n    function allowance(address owner, address spender) external override view returns (uint256) {\r\n        return allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) external override returns (bool) {\r\n        allowances[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract Kitty is ERC20Token {\r\n    mapping (address => bool) internal claims;\r\n\r\n    constructor() {\r\n        balances[address(this)] = MAX_SUPPLY;\r\n    }\r\n\r\n    function contractBalance() external view returns (uint256) {\r\n        return balances[address(this)];\r\n    }\r\n    \r\n    function myBalance() external view returns (uint256) {\r\n        return balances[msg.sender];\r\n    }\r\n    \r\n    function alreadyClaimed() external view returns (bool) {\r\n        return claims[msg.sender];\r\n    }\r\n    \r\n    function claimAirdrop() external {\r\n        uint256 remainingSupply = balances[address(this)];\r\n        require(remainingSupply > 0, \"Airdrop finished\");\r\n        require(claims[msg.sender] == false, \"Stop being greedy!\");\r\n        claims[msg.sender] = true;\r\n        uint256 amount = (MAX_AIRDROP * ((remainingSupply * 1000) / MAX_SUPPLY)) / 1000;\r\n        amount = Math.min(remainingSupply, Math.max(MIN_AIRDROP, amount));\r\n        _transfer(address(this), msg.sender, amount);\r\n    }\r\n    \r\n    receive() external payable {\r\n        revert(\"No thanks!\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_AIRDROP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_AIRDROP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alreadyClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Kitty", "CompilerVersion": "v0.8.1+commit.df193b15", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7885cd1f53f8933def2562cd69d7652d7b8556338e60ec95acbdf95f2cf6ba70"}