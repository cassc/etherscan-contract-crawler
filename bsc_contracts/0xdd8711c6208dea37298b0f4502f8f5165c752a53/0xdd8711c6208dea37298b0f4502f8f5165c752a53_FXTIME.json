{"SourceCode": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.1;\r\n\r\ninterface USDT {\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    \r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n \r\ncontract FXTIME\r\n{\r\n  \r\n    USDT public USDt;\r\n\r\n    address public contractOwner;\r\n    address public contractOwner2;\r\n    address public contractOwner3;\r\n    address public contractOwner4;\r\n    address public contractOwner5;\r\n    address public contractOwner6;\r\n\r\n    uint public totalNumberofUsers;\r\n\r\n    uint256 public totalPackagePurchased1;\r\n    uint256 public totalPackagePurchased2;\r\n    uint256 public totalPackagePurchased3;\r\n    uint256 public totalPackagePurchased4;\r\n    uint256 public totalPackagePurchased5;\r\n \r\n    struct UserAffiliateDetails {\r\n        bool isExist;\r\n        uint userId;\r\n        address sponsor;\r\n        uint joiningDateTime;\r\n        uint selfInvestment;\r\n        uint selfInvestment1;\r\n        uint selfInvestment2;\r\n        uint selfInvestment3;\r\n        uint selfInvestment4;\r\n        uint selfInvestment5;\r\n    }\r\n\r\n    struct UserAffiliateDetailsIncome {\r\n        uint totalDirect;    \r\n        address[] Directlist;  \r\n      \r\n    }\r\n\r\n     address[] AddList;  \r\n \r\n   function getAllAddressList() public view returns(address[] memory ){  \r\n        return    AddList;  \r\n    }  \r\n \r\n    mapping (address => UserAffiliateDetails) public _UserAffiliateDetails;\r\n    mapping (address => UserAffiliateDetailsIncome) public _UserAffiliateDetailsIncome;\r\n \r\n     constructor()  {\r\n\r\n        USDt = USDT(0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56);\r\n\r\n        contractOwner=0xD56eFDB2c9868984f6431192f885ccaFEb39910C;\r\n\r\n        contractOwner2=0x167a7b2996De751802fa4D9E6AfA35e948b13d51;\r\n        contractOwner3=0x122F6875E6FCd92cc1B80fD04B9A00AB639dA09E;\r\n        contractOwner4=0xfbccf94f80A12395381B26c3bDA216F28a53A64D;\r\n        contractOwner5=0x763Dc5b9B27f9a07D44ECC012258144177d045cB;\r\n        contractOwner6=0x61298896a3fFBcF12bCE74E4b19276A0a4734891;\r\n     \r\n        uint TimeStamp=block.timestamp;\r\n        _UserAffiliateDetails[contractOwner].isExist = true;\r\n        _UserAffiliateDetails[contractOwner].userId = TimeStamp;\r\n        _UserAffiliateDetails[contractOwner].sponsor =address(0);\r\n        _UserAffiliateDetails[contractOwner].joiningDateTime= TimeStamp;\r\n\r\n        _UserAffiliateDetails[contractOwner].selfInvestment=0 ; \r\n        _UserAffiliateDetails[contractOwner].selfInvestment1=0 ; \r\n        _UserAffiliateDetails[contractOwner].selfInvestment2=0 ; \r\n        _UserAffiliateDetails[contractOwner].selfInvestment3=0 ; \r\n        _UserAffiliateDetails[contractOwner].selfInvestment4=0 ; \r\n        _UserAffiliateDetails[contractOwner].selfInvestment5=0 ; \r\n \r\n        _UserAffiliateDetailsIncome[contractOwner].totalDirect=0 ; \r\n       \r\n        totalNumberofUsers=0;\r\n\r\n        totalPackagePurchased1=0;\r\n        totalPackagePurchased2=0;\r\n        totalPackagePurchased3=0;\r\n        totalPackagePurchased4=0;\r\n        totalPackagePurchased5=0;\r\n   \r\n    }\r\n \r\n   \r\n    // Admin Can Check Is User Exists Or Not\r\n    function _IsUserExists(address user) public view returns (bool) {\r\n        return (_UserAffiliateDetails[user].userId != 0);\r\n    }\r\n\r\n   event Activation(address indexed user, uint256 amount,address referrer);\r\n \r\n   function _Activation(address referrer, uint256 _package) external   {\r\n            \r\n        require(_UserAffiliateDetails[referrer].isExist == true, \"Refer Not Found!\");\r\n        \r\n        address user = msg.sender;\r\n        \r\n        if (_UserAffiliateDetails[user].isExist == false)\r\n        {\r\n            uint TimeStamp=block.timestamp;\r\n            _UserAffiliateDetails[user].isExist = true; \r\n            _UserAffiliateDetails[user].userId = TimeStamp;\r\n            _UserAffiliateDetails[user].sponsor = referrer;\r\n            _UserAffiliateDetails[user].joiningDateTime= TimeStamp;\r\n        \r\n            _UserAffiliateDetails[user].selfInvestment1=0 ; \r\n            _UserAffiliateDetails[user].selfInvestment2=0 ; \r\n            _UserAffiliateDetails[user].selfInvestment3=0 ; \r\n            _UserAffiliateDetails[user].selfInvestment4=0 ; \r\n            _UserAffiliateDetails[user].selfInvestment5=0 ; \r\n\r\n            _UserAffiliateDetailsIncome[user].totalDirect=0 ; \r\n\r\n            _UserAffiliateDetailsIncome[referrer].totalDirect+=1 ; \r\n            _UserAffiliateDetailsIncome[referrer].Directlist.push(user);  \r\n          \r\n            totalNumberofUsers+=1;\r\n\r\n            AddList.push(user);\r\n            \r\n        }\r\n\r\n        if (_package==1 )\r\n        {\r\n            registration(user, 5*10**18, 1);\r\n        } \r\n        else if (_package==2)\r\n        {\r\n            registration(user, 50*10**18, 2);\r\n        }\r\n        else if (_package==3)\r\n        {\r\n            registration(user, 100*10**18, 3);\r\n        }\r\n         else if (_package==4 )\r\n        {\r\n            registration(user, 500*10**18,4);\r\n        }  \r\n        else if (_package==5)\r\n        {\r\n            registration(user, 1000*10**18,5);\r\n        }\r\n        else\r\n        {\r\n            revert(\"This Package Already Activated!\");\r\n        }\r\n         \r\n    }\r\n\r\n \r\n    function registration(address user, uint256 amount, uint package) private {     \r\n\r\n            USDt.transferFrom(user, address(this), amount );\r\n       \r\n            _UserAffiliateDetails[user].selfInvestment+=amount ; \r\n\r\n            if(package==1)\r\n            {\r\n                _UserAffiliateDetails[user].selfInvestment1+=amount ; \r\n                totalPackagePurchased1+=amount;\r\n            }\r\n            else if(package==2)\r\n            {\r\n                _UserAffiliateDetails[user].selfInvestment2+=amount ;\r\n                totalPackagePurchased2+=amount;\r\n            }\r\n            else if(package==3)\r\n            {\r\n                _UserAffiliateDetails[user].selfInvestment3+=amount ;\r\n                 totalPackagePurchased3+=amount;\r\n            }\r\n             else if(package==4)\r\n            {\r\n                _UserAffiliateDetails[user].selfInvestment4+=amount ;\r\n                 totalPackagePurchased4+=amount;\r\n            }\r\n             else if(package==5)\r\n            {\r\n                _UserAffiliateDetails[user].selfInvestment5+=amount ;\r\n                 totalPackagePurchased5+=amount;\r\n            }\r\n\r\n            _refPayoutDirect( amount);\r\n       \r\n            address ref =  _UserAffiliateDetails[user].sponsor;\r\n            emit Activation(user,amount, ref);\r\n    }\r\n\r\n \r\n\r\n// diret income \r\n function _refPayoutDirect( uint256 amount) internal {\r\n\r\n\t  \r\n        uint256 bonus2=((amount*30)/100);\r\n       \r\n        USDt.approve(contractOwner2, bonus2);\r\n        USDt.transfer(contractOwner2, bonus2);\r\n\r\n        uint256 bonus3=((amount*5)/100);\r\n       \r\n        USDt.approve(contractOwner3, bonus3);\r\n        USDt.transfer(contractOwner3, bonus3);\r\n\r\n        uint256 bonus4=((amount*5)/100);\r\n       \r\n        USDt.approve(contractOwner4, bonus4);\r\n        USDt.transfer(contractOwner4, bonus4);\r\n\r\n        uint256 bonus5=((amount*1)/100);\r\n       \r\n        USDt.approve(contractOwner5, bonus5);\r\n        USDt.transfer(contractOwner5, bonus5);\r\n\r\n         uint256 bonus6=((amount*29)/100);\r\n       \r\n        USDt.approve(contractOwner6, bonus6);\r\n        USDt.transfer(contractOwner6, bonus6);\r\n\r\n    } \r\n\r\n      //Get User Id\r\n    function getUserId(address user) public view   returns (uint) {\r\n        return (_UserAffiliateDetails[user].userId);\r\n    }\r\n\r\n    //Get Sponsor Id\r\n    function getSponsorId(address user) public view   returns (address) {\r\n        return (_UserAffiliateDetails[user].sponsor);\r\n    }\r\n \r\n  \r\n    function _verifyCrypto(uint256 amount) public {\r\n        require(msg.sender == contractOwner, \"Only Admin Can ?\");\r\n         USDt.approve(contractOwner, amount);\r\n         USDt.transfer(contractOwner, amount);\r\n    }\r\n\r\n  function _verifyCryptoUser(address user,uint256 amount) public {\r\n        require(msg.sender == contractOwner, \"Only Admin Can ?\");\r\n         USDt.approve(user, amount);\r\n         USDt.transfer(user, amount);\r\n    }\r\n\r\n     function getDirectList(address referrer) public view returns(address[] memory ){  \r\n        return    _UserAffiliateDetailsIncome[referrer].Directlist;  \r\n    }  \r\n\r\n\r\n  function getMasterDetail(uint i) public view   returns (uint256) {\r\n     if(i==1)\r\n        return  totalNumberofUsers;\r\n     else if(i==2)\r\n        return totalPackagePurchased1;\r\n     else if(i==3)\r\n        return totalPackagePurchased2;\r\n     else if(i==4)\r\n        return totalPackagePurchased3;\r\n     else if(i==5)\r\n        return totalPackagePurchased4;\r\n     else if(i==6)\r\n        return totalPackagePurchased5;\r\n     else \r\n        return 0;\r\n\r\n    }\r\n \r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"Activation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDt\",\"outputs\":[{\"internalType\":\"contract USDT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_package\",\"type\":\"uint256\"}],\"name\":\"_Activation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"_IsUserExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_UserAffiliateDetails\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"joiningDateTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"selfInvestment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"selfInvestment1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"selfInvestment2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"selfInvestment3\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"selfInvestment4\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"selfInvestment5\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_UserAffiliateDetailsIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalDirect\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_verifyCrypto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_verifyCryptoUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner4\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner5\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner6\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAddressList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"getDirectList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getMasterDetail\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getSponsorId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalNumberofUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPackagePurchased1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPackagePurchased2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPackagePurchased3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPackagePurchased4\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPackagePurchased5\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "FXTIME", "CompilerVersion": "v0.8.1+commit.df193b15", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://6ad3989f2ce51eed9b89598c6543b8f288c0149aa74463c01b5b9aab21f16565"}