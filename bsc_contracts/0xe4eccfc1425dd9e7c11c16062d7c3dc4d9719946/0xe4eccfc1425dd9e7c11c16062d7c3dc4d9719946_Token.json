{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0;\r\n\r\ncontract Token {\r\n    string public name; // Holds the name of the token\r\n    string public symbol; // Holds the symbol of the token\r\n    uint8 public decimals; // Holds the decimal places of the token\r\n    uint256 public totalSupply; // Holds the total suppy of the token\r\n    address payable public owner; // Holds the owner of the token\r\n\r\n    /* This creates a mapping with all balances */\r\n    mapping (address => uint256) public balanceOf;\r\n    /* This creates a mapping of accounts with allowances */\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    /* This event is always fired on a successfull call of the\r\n       transfer, transferFrom, mint, and burn methods */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    /* This event is always fired on a successfull call of the approve method */\r\n    event Approve(address indexed owner, address indexed spender, uint256 value);\r\n    constructor() {\r\n        name = \"BDOGE\"; // Sets the name of the token, i.e Ether\r\n        symbol = \"BDOGE\"; // Sets the symbol of the token, i.e ETH\r\n        decimals = 18; // Sets the number of decimal places\r\n        uint256 _initialSupply =  2100000000000000000000000000000; // Holds an initial supply of coins\r\n\r\n        /* Sets the owner of the token to whoever deployed it */\r\n        owner = payable(msg.sender);\r\n\r\n        balanceOf[owner] = _initialSupply; // Transfers all tokens to owner\r\n        totalSupply = _initialSupply; // Sets the total supply of tokens\r\n\r\n        /* Whenever tokens are created, burnt, or transfered,\r\n            the Transfer event is fired */\r\n        emit Transfer(address(0), msg.sender, _initialSupply);\r\n    }\r\n      function getOwner() public view returns (address) {\r\n        return owner;\r\n    }\r\n   function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        uint256 senderBalance = balanceOf[msg.sender];\r\n        uint256 receiverBalance = balanceOf[_to];\r\n\r\n        require(_to != address(0), \"Receiver address invalid\");\r\n        require(_value >= 0, \"Value must be greater or equal to 0\");\r\n        require(senderBalance > _value, \"Not enough balance\");\r\n\r\n        balanceOf[msg.sender] = senderBalance - _value;\r\n        balanceOf[_to] = receiverBalance + _value;\r\n\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }   \r\n    function transferFrom(address _from, address _to, uint256 _value)\r\n      public returns (bool success) {\r\n        uint256 senderBalance = balanceOf[msg.sender];\r\n        uint256 fromAllowance = allowance[_from][msg.sender];\r\n        uint256 receiverBalance = balanceOf[_to];\r\n\r\n        require(_to != address(0), \"Receiver address invalid\");\r\n        require(_value >= 0, \"Value must be greater or equal to 0\");\r\n        require(senderBalance > _value, \"Not enough balance\");\r\n        require(fromAllowance >= _value, \"Not enough allowance\");\r\n\r\n        balanceOf[_from] = senderBalance - _value;\r\n        balanceOf[_to] = receiverBalance + _value;\r\n        allowance[_from][msg.sender] = fromAllowance - _value;\r\n\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }    \r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        require(_value > 0, \"Value must be greater than 0\");\r\n\r\n        allowance[msg.sender][_spender] = _value;\r\n\r\n        emit Approve(msg.sender, _spender, _value);\r\n        return true;\r\n    }    \r\n    function mint(uint256 _amount) public returns (bool success) {\r\n        require(msg.sender == owner, \"Operation unauthorised\");\r\n\r\n        totalSupply += _amount;\r\n        balanceOf[msg.sender] += _amount;\r\n\r\n        emit Transfer(address(0), msg.sender, _amount);\r\n        return true;\r\n    }\r\n    function burn(uint256 _amount) public returns (bool success) {\r\n      require(msg.sender != address(0), \"Invalid burn recipient\");\r\n\r\n      uint256 accountBalance = balanceOf[msg.sender];\r\n      require(accountBalance > _amount, \"Burn amount exceeds balance\");\r\n\r\n      balanceOf[msg.sender] -= _amount;\r\n      totalSupply -= _amount;\r\n\r\n      emit Transfer(msg.sender, address(0), _amount);\r\n      return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Token", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0404414d4854a487d57d749baae6a4768f0204781687f71a6bfd0d1f386353af"}