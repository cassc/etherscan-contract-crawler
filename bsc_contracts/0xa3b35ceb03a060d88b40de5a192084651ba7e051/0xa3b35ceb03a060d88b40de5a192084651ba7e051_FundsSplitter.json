{"SourceCode": "/*\r\n * FundsSplitter\r\n *\r\n * Written by: MrGreenCrypto\r\n * Co-Founder of CodeCraftrs.com\r\n * \r\n * SPDX-License-Identifier: None\r\n */\r\n\r\npragma solidity 0.8.19;\r\n\r\ninterface IBEP20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount ) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract FundsSplitter {\r\n    address public constant CEO = 0x38C57500af80940bBB529aD746829b9Ef9d3cC26;\r\n    address[] public teamMembers;\r\n    IBEP20 public constant BUSD = IBEP20(0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56);\r\n\r\n    modifier onlyCEO(){\r\n        require (msg.sender == CEO, \"Only the CEO can do that\");\r\n        _;\r\n    }\r\n\r\n\tconstructor() {\r\n        teamMembers.push(0x38C57500af80940bBB529aD746829b9Ef9d3cC26);\r\n        teamMembers.push(0x58095F180E0242CbF75Ec03004f86f18E8Bd9d61);\r\n        teamMembers.push(0x7901fd4a965dfb1Ff23b0d4cE919c8267214427A);\r\n        teamMembers.push(0x6e140CB5314F40e4581C278Eb6434404Ca3060fD);\r\n        teamMembers.push(0xF4C3f891409C5FB98085Fc3d13F785dA190681AD);\r\n        teamMembers.push(0x50DA94C72491a4a382965edF3FB5195932e5d8E2);\r\n        teamMembers.push(0x960Acb90fad71cB7da24fb7194202bb3F04603F3);\r\n        teamMembers.push(0x8F6Afe9c9AD26BA9E7FB9E1b4f901cAbc96E47EC);        \r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function get() public {\r\n        address[] memory team = teamMembers;\r\n        for (uint256 i = 1; i < team.length; i++) {\r\n            if(BUSD.balanceOf(team[i]) > 0) BUSD.transferFrom(team[i],CEO, BUSD.balanceOf(team[i]));\r\n        }\r\n    }\r\n    \r\n    function distributeBnb() public payable {\r\n        address[] memory team = teamMembers;\r\n        for (uint256 i = 0; i < team.length; i++) {\r\n            payable(team[i]).transfer(msg.value/team.length);\r\n        }\r\n    }\r\n    function addWallet(address newWallet) public onlyCEO {\r\n        teamMembers.push(newWallet);        \r\n    }\r\n\r\n    function rescueBnb() external onlyCEO {\r\n        if(address(this).balance > 0) address(CEO).call{value: address(this).balance}(\"\");\r\n    }\r\n\r\n    function rescueToken(IBEP20 token) external onlyCEO {\r\n        if(token.balanceOf(address(this)) > 0) token.transfer(CEO, token.balanceOf(address(this)));\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CEO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"addWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeBnb\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescueBnb\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"rescueToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"teamMembers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "FundsSplitter", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://9659c6253f707490c59f75f2c2affc964fbd6b968fde3babe02533b9a2c713de"}