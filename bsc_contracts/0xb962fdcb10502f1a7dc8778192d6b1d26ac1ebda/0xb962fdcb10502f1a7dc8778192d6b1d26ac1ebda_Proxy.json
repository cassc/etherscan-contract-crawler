{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Proxy {\r\n    address delegate;\r\n    address proxyAdmin = msg.sender;\r\n\r\n    constructor(address delegate_){ delegate = delegate_; }\r\n\r\n    function upgradeDelegate(address newDelegateAddress) public {\r\n        require(msg.sender == proxyAdmin);\r\n        delegate = newDelegateAddress;\r\n    }\r\n\r\n    function _delegate() public {\r\n        address addr = delegate;\r\n        assembly {\r\n            calldatacopy(0, 0, calldatasize())\r\n            let result := delegatecall(gas(), addr, 0, calldatasize(), 0, 0)\r\n            returndatacopy(0, 0, returndatasize())\r\n            switch result\r\n            case 0 { revert(0, returndatasize()) }\r\n            default { return(0, returndatasize()) }\r\n        }\r\n    }\r\n\r\n    fallback() external payable { _delegate(); }\r\n    receive() payable external { _delegate(); }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"_delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDelegateAddress\",\"type\":\"address\"}],\"name\":\"upgradeDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Proxy", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000919da4c73eaf29cb60e1660839c51a488f41b092", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://8f00304831166502f361e45fda0f936e9f90c5d576a5c348e007e94020c81009"}