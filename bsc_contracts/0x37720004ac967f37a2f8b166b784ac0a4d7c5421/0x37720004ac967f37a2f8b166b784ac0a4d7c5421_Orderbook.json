{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/OrderBook/Orderbook.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nimport \\\"./OrderbookStorage.sol\\\";\\r\\n\\r\\ncontract Orderbook is OrderbookStorage {\\r\\n    event NewImplementation(address newImplementation);\\r\\n\\r\\n    function setImplementation(address newImplementation) external _onlyAdmin_ {\\r\\n        implementation = newImplementation;\\r\\n        emit NewImplementation(newImplementation);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    fallback() external payable {\\r\\n        address imp = implementation;\\r\\n        assembly {\\r\\n            calldatacopy(0, 0, calldatasize())\\r\\n            let result := delegatecall(gas(), imp, 0, calldatasize(), 0, 0)\\r\\n            returndatacopy(0, 0, returndatasize())\\r\\n            switch result\\r\\n            case 0 {\\r\\n                revert(0, returndatasize())\\r\\n            }\\r\\n            default {\\r\\n                return(0, returndatasize())\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\"\r\n    },\r\n    \"contracts/OrderBook/OrderbookStorage.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nimport \\\"../utils/Admin.sol\\\";\\r\\n\\r\\nabstract contract OrderbookStorage is Admin {\\r\\n    address public implementation;\\r\\n\\r\\n    bool internal _mutex;\\r\\n\\r\\n    modifier _reentryLock_() {\\r\\n        require(!_mutex, \\\"Router: reentry\\\");\\r\\n        _mutex = true;\\r\\n        _;\\r\\n        _mutex = false;\\r\\n    }\\r\\n\\r\\n    // executor => active\\r\\n    mapping(address => bool) public isExecutor;\\r\\n\\r\\n    struct Order {\\r\\n        bool isIsolated;\\r\\n        address pool;\\r\\n        address account;\\r\\n        uint256 index;\\r\\n        address asset; // The token used for margin, address(0) for ETH\\r\\n        int256 amount; // The amount of margin\\r\\n        string symbolName;\\r\\n        uint256 executionFee;\\r\\n        int256[] orderParams; // 0:trigerPrice, 1:isAboveTrigerPrice, 2: isIndexPrice, 3:volume, 4: priceLimit\\r\\n    }\\r\\n\\r\\n    // account -> index -> Order\\r\\n\\tmapping (address => mapping(uint256 => Order)) public orders;\\r\\n    mapping (address => uint256) public ordersIndex;\\r\\n\\r\\n    mapping (address => address) public routers;\\r\\n    address public isolatedRouter;\\r\\n}\\r\\n\"\r\n    },\r\n    \"contracts/utils/Admin.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nimport './IAdmin.sol';\\r\\n\\r\\nabstract contract Admin is IAdmin {\\r\\n\\r\\n    address public admin;\\r\\n\\r\\n    modifier _onlyAdmin_() {\\r\\n        require(msg.sender == admin, 'Admin: only admin');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor () {\\r\\n        admin = msg.sender;\\r\\n        emit NewAdmin(admin);\\r\\n    }\\r\\n\\r\\n    function setAdmin(address newAdmin) external _onlyAdmin_ {\\r\\n        admin = newAdmin;\\r\\n        emit NewAdmin(newAdmin);\\r\\n    }\\r\\n\\r\\n}\\r\\n\"\r\n    },\r\n    \"contracts/utils/IAdmin.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\ninterface IAdmin {\\r\\n\\r\\n    event NewAdmin(address indexed newAdmin);\\r\\n\\r\\n    function admin() external view returns (address);\\r\\n\\r\\n    function setAdmin(address newAdmin) external;\\r\\n\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExecutor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isolatedRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isIsolated\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"symbolName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ordersIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"routers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Orderbook", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xdae749c1c6b5d5195a3b1e73fc5fc238431473e3", "SwarmSource": ""}