{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/tax/ZeroTaxHandler.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.11;\\r\\n\\r\\nimport \\\"./ITaxHandler.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title Zero tax handler contract\\r\\n * @dev This contract should only be used by protocols that collect taxes on certain transactions and want to set it to\\r\\n * zero.\\r\\n */\\r\\ncontract ZeroTaxHandler is ITaxHandler {\\r\\n    /**\\r\\n     * @notice Get taxed tokens for transfers. This method always returns zero.\\r\\n     * @param benefactor Address of the benefactor.\\r\\n     * @param beneficiary Address of the beneficiary.\\r\\n     * @param amount Number of tokens in the transfer.\\r\\n     * @return Number of tokens to pay as tax. This is statically set to zero.\\r\\n     */\\r\\n    function getTax(\\r\\n        address benefactor,\\r\\n        address beneficiary,\\r\\n        uint256 amount\\r\\n    ) external pure override returns (uint256) {\\r\\n        // Silence a few warnings. This will be optimized out by the compiler.\\r\\n        benefactor;\\r\\n        beneficiary;\\r\\n        amount;\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n}\\r\\n\"\r\n    },\r\n    \"contracts/tax/ITaxHandler.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.11;\\r\\n\\r\\n/**\\r\\n * @title Tax handler interface\\r\\n * @dev Any class that implements this interface can be used for protocol-specific tax calculations.\\r\\n */\\r\\ninterface ITaxHandler {\\r\\n    /**\\r\\n     * @notice Get number of tokens to pay as tax.\\r\\n     * @param benefactor Address of the benefactor.\\r\\n     * @param beneficiary Address of the beneficiary.\\r\\n     * @param amount Number of tokens in the transfer.\\r\\n     * @return Number of tokens to pay as tax.\\r\\n     */\\r\\n    function getTax(\\r\\n        address benefactor,\\r\\n        address beneficiary,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256);\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"none\"\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 888\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"benefactor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "ZeroTaxHandler", "CompilerVersion": "v0.8.11+commit.d7f03943", "OptimizationUsed": "1", "Runs": "888", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}