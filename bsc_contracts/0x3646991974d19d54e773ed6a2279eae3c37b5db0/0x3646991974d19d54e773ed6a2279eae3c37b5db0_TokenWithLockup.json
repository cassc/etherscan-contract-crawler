{"SourceCode": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.5.16;\r\n\r\ncontract TokenWithLockup {\r\n    mapping(address => uint256) public balances;\r\n    mapping(address => uint256) public initialLockedBalances;\r\n    mapping(address => uint256) public lockupStartTimes;\r\n    mapping(address => mapping(address => uint256)) allowed;\r\n    mapping(address => bool) public isSigner;\r\n    uint256 public lockupPeriod = 180 days;\r\n    uint256 public vestingPeriod = 30 days;\r\n    uint256 public unlockPercentagePerMonth = 10;\r\n    address public owner;\r\n    uint public totalSupply = 10000000000 * 10 ** 18;\r\n    string public name;\r\n    string public symbol;\r\n    uint public decimals = 18;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    constructor(string memory _name, string memory _symbol) public {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        owner = msg.sender;\r\n        balances[msg.sender] = totalSupply;\r\n        isSigner[msg.sender] = true;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call this function.\");\r\n        _;\r\n    }\r\n    modifier onlySigner() {\r\n        require(isSigner[msg.sender], \"Not authorized\");\r\n        _;\r\n    }\r\n\r\n    function setSigner(address signer, bool status) public onlyOwner {\r\n        isSigner[signer] = status;\r\n    }\r\n\r\n    function setLockupPeriod(uint256 _lockupPeriod) public onlySigner {\r\n        lockupPeriod = _lockupPeriod;\r\n    }\r\n\r\n    function setVestingPeriod(uint256 _vestingPeriod) public onlySigner {\r\n        vestingPeriod = _vestingPeriod;\r\n    }\r\n\r\n    function setUnlockPercentagePerMonth(\r\n        uint256 _unlockPercentage\r\n    ) public onlySigner {\r\n        unlockPercentagePerMonth = _unlockPercentage;\r\n    }\r\n\r\n    function balanceOf(address holder) public view returns (uint) {\r\n        return balances[holder];\r\n    }\r\n\r\n    function getLockedBalance(address account) public view returns (uint256) {\r\n        require(account != address(0), \"BEP20: account zero address\");\r\n        if (block.timestamp < lockupStartTimes[account] + lockupPeriod) {\r\n            return initialLockedBalances[account];\r\n        } else {\r\n            uint256 monthsAfterLockup = (block.timestamp -\r\n                lockupStartTimes[account] -\r\n                lockupPeriod) / vestingPeriod;\r\n            uint256 unlockedBalance = (initialLockedBalances[account] *\r\n                unlockPercentagePerMonth *\r\n                monthsAfterLockup) / 100;\r\n            unlockedBalance = unlockedBalance > initialLockedBalances[account]\r\n                ? initialLockedBalances[account]\r\n                : unlockedBalance;\r\n            return initialLockedBalances[account] - unlockedBalance;\r\n        }\r\n    }\r\n\r\n    function isUnlocked(\r\n        address account,\r\n        uint256 amount\r\n    ) public view returns (bool) {\r\n        uint256 lockedBalance = getLockedBalance(account);\r\n        uint256 availableBalance = balances[account] - lockedBalance;\r\n        return availableBalance >= amount;\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n        require(to != address(0), \"BEP20: transfer to the zero address\");\r\n        require(balances[msg.sender] >= value, \"Insufficient balance\");\r\n        require(isUnlocked(msg.sender, value), \"Tokens are locked\");\r\n        balances[msg.sender] -= value;\r\n        balances[to] += value;\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function unLockupTokens(address account) public onlySigner {\r\n        require(account != address(0), \"BEP20: account zero address\");\r\n        require(\r\n            balances[account] > 0 && initialLockedBalances[account] > 0,\r\n            \"Tokens already unlocked\"\r\n        );\r\n        initialLockedBalances[account] = 0;\r\n        lockupStartTimes[account] = 0;\r\n    }\r\n\r\n    function approveSigner(\r\n        address spender,\r\n        uint256 value\r\n    ) public onlySigner returns (bool) {\r\n        require(spender != address(0), \"BEP20: spender zero address\");\r\n        require(balances[msg.sender] >= value, \"Insufficient balance\");\r\n\r\n        allowed[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFromLockup(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) public returns (bool) {\r\n        require(from != address(0), \"BEP20: transfer from the zero address\");\r\n        require(to != address(0), \"BEP20: transfer to the zero address\");\r\n        require(isSigner[msg.sender], \"Not authorized\");\r\n        require(balances[from] >= value, \"Insufficient balance\");\r\n        require(allowed[from][msg.sender] >= value, \"Not authorized\");\r\n        require(isUnlocked(from, value), \"Tokens are locked\");\r\n\r\n        initialLockedBalances[to] += value;\r\n        lockupStartTimes[to] = block.timestamp;\r\n        balances[from] -= value;\r\n        balances[to] += value;\r\n        allowed[from][msg.sender] -= value;\r\n        emit Transfer(from, to, value);\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLockedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialLockedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"isUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockupPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockupStartTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lockupPeriod\",\"type\":\"uint256\"}],\"name\":\"setLockupPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlockPercentage\",\"type\":\"uint256\"}],\"name\":\"setUnlockPercentagePerMonth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vestingPeriod\",\"type\":\"uint256\"}],\"name\":\"setVestingPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromLockup\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"unLockupTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockPercentagePerMonth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vestingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "TokenWithLockup", "CompilerVersion": "v0.5.16+commit.9c3226ce", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000011434243544342432044455620544f4b454e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000074342435443424300000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://78ed95c7240f54c4534ea5de885dad5cb371b68b12d439947edf7531aeca79dd"}