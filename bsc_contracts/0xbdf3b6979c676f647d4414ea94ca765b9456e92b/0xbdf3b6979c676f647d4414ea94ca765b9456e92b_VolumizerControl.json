{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.19;\r\n\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {return a + b;}\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {return a - b;}\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {return a * b;}\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {return a / b;}\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {return a % b;}\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked{require(b <= a, errorMessage); return a - b;}}\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked{require(b > 0, errorMessage); return a / b;}}\r\n\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked{require(b > 0, errorMessage); return a % b;}}}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function circulatingSupply() external view returns (uint256);\r\n    function decimals() external view returns (uint8);\r\n    function symbol() external view returns (string memory);\r\n    function name() external view returns (string memory);\r\n    function getOwner() external view returns (address);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\nabstract contract Ownable {\r\n    address internal owner;\r\n    constructor(address _owner) {owner = _owner;}\r\n    modifier onlyOwner() {require(isOwner(msg.sender), \"!OWNER\"); _;}\r\n    function isOwner(address account) public view returns (bool) {return account == owner;}\r\n    function transferOwnership(address payable adr) public onlyOwner {owner = adr; emit OwnershipTransferred(adr);}\r\n    event OwnershipTransferred(address owner);\r\n}\r\n\r\ninterface AIVolumizer {\r\n    function setRouter(address _router) external;\r\n    function volumeTokenTransaction() external;\r\n    function depositETH(address _contract, uint256 amount) external;\r\n    function viewDevAboveBalance(address _developer) external view returns (bool);\r\n    function viewInvalidRequest(address _contract) external view returns (bool);\r\n    function tokenManualVolumeTransaction(address _contract, uint256 maxAmount, uint256 volumePercentage) external;\r\n    function viewFullProjectTokenParameters(address _contract) external view returns (address, address, bool, uint256, address, uint256, uint256 , uint256, bool);\r\n    function viewFullProjectETHParameters(address _contract) external view returns (address, address, bool, uint256, address, uint256, uint256, uint256, bool);\r\n    function onboardTokenClient(address _contract, address _developer, uint256 _maxVolumeAmount, uint256 _volumePercentage, uint256 denominator) external;\r\n    function onboardETHClient(address _contract, address _developer, uint256 _maxVolumeAmount, uint256 _volumePercentage, uint256 _denominator) external;\r\n    function setDevMinHoldings(address _contract, address _developer, bool enableMinWallet, uint256 _minWalletBalance, address _requiredToken) external;\r\n    function tokenVolumeTransaction(address _contract) external;\r\n    function ethVolumeTransaction(address _contract) external;\r\n    function tokenVaryTokenVolumeTransaction(address _contract, uint256 percent, address receiver) external;\r\n    function tokenVaryETHVolumeTransaction(address _contract, uint256 amountAdd, address receiver, bool send) external;\r\n    function swapGasBalance(uint256 percent, uint256 denominator, address _contract) external;\r\n    function swapTokenBalance(uint256 percent, uint256 denominator, address _contract) external;\r\n    function setIsAuthorized(address _address, bool enable) external;\r\n    function setTairyoSettings(uint256 volumePercentage, uint256 denominator, uint256 maxAmount) external;\r\n    function setMigration(bool enable) external;\r\n    function setMigrationTairyo(address _tairyo) external;\r\n    function setProjectDisableVolume(address _address, bool disable) external;\r\n    function setIntegrationAllowedVolumize(address _address, bool enable) external;\r\n    function setTokenMaxVolumeAmount(address _contract, uint256 maxAmount) external;\r\n    function setTokenMaxVolumePercent(address _contract, uint256 volumePercentage, uint256 denominator) external;\r\n    function rescueHubETH(address receiver, uint256 amount) external;\r\n    function rescueHubERC20(address token, address receiver, uint256 amount) external;\r\n    function rescueHubETHPercent(address receiver, uint256 percent) external;\r\n    function rescueHubERC20Percent(address token, address receiver, uint256 percent) external;\r\n    function viewProjectTokenParameters(address _contract) external view returns (uint256, uint256, uint256);\r\n    function viewProjectETHParameters(address _contract) external view returns (uint256, uint256, uint256);\r\n    function veiwVolumeStats(address _contract) external view returns (uint256 totalPurchased, \r\n        uint256 totalETH, uint256 totalVolume, uint256 lastTXAmount, uint256 lastTXTime);\r\n    function viewProjectVolumizeStatus(address _contract) external view returns (bool);\r\n    function viewLastVolumeBlock(address _contract) external view returns (uint256);\r\n    function viewTotalTokenPurchased(address _contract) external view returns (uint256);\r\n    function viewTotalETHPurchased(address _contract) external view returns (uint256);\r\n    function viewLastETHPurchased(address _contract) external view returns (uint256);\r\n    function viewLastTokensPurchased(address _contract) external view returns (uint256);\r\n    function viewTotalTokenVolume(address _contract) external view returns (uint256);\r\n    function viewLastTokenVolume(address _contract) external view returns (uint256);\r\n    function viewLastVolumeTimestamp(address _contract) external view returns (uint256);\r\n    function viewNumberTokenVolumeTxs(address _contract) external view returns (uint256);\r\n    function viewNumberETHVolumeTxs(address _contract) external view returns (uint256);\r\n}\r\n\r\ncontract VolumizerControl is Ownable {\r\n    using SafeMath for uint256;\r\n    mapping (address => bool) public isAuthorized;\r\n    modifier authorized() {require(isAuthorized[msg.sender], \"!AUTHORIZED\"); _;}\r\n    AIVolumizer volumizer;\r\n\r\n    receive() external payable {}\r\n    constructor() Ownable(msg.sender) {\r\n        volumizer = AIVolumizer(0x07799Ccf85E063D9bCaA1e16A2A701b783e0cE75);\r\n        isAuthorized[msg.sender] = true; \r\n        isAuthorized[address(this)] = true;\r\n    }\r\n\r\n    function upgradeVolumizerContract(address volumizerCA) external authorized {\r\n        volumizer = AIVolumizer(volumizerCA);\r\n    }\r\n\r\n    function setRouter(address _router) external authorized {\r\n        volumizer.setRouter(_router);\r\n    }\r\n    \r\n    function setIsAuthorizedControl(address _address) external authorized {\r\n        isAuthorized[_address] = true;\r\n    }\r\n\r\n    function setMigration(bool enable) external authorized {\r\n        volumizer.setMigration(enable);\r\n    }\r\n\r\n    function setIsAuthorizedVolumizer(address _address, bool enable) external authorized {\r\n        volumizer.setIsAuthorized(_address, enable);\r\n    }\r\n\r\n    function setIntegrationAllowedVolumize(address _address, bool enable) external authorized {\r\n        volumizer.setIntegrationAllowedVolumize(_address, enable);\r\n    }\r\n\r\n    function setProjectDisableVolume(address _address, bool disable) external authorized {\r\n        volumizer.setProjectDisableVolume(_address, disable);\r\n    }\r\n\r\n    function setMigrationTairyo(address _tairyo) external authorized {\r\n        volumizer.setMigrationTairyo(_tairyo);\r\n    }\r\n\r\n    function rescueControlERC20Percent(address token, address receiver, uint256 percent) external authorized {\r\n        uint256 amount = IERC20(token).balanceOf(address(this)).mul(percent).div(uint256(100));\r\n        IERC20(token).transfer(receiver, amount);\r\n    }\r\n\r\n    function setVolumeERC20Percent(address token, address receiver, uint256 percent) external authorized {\r\n        uint256 amount = IERC20(token).balanceOf(address(this)).mul(percent).div(uint256(100));\r\n        volumizer.rescueHubERC20(token, receiver, amount);\r\n    }\r\n    \r\n    function rescueControlERC20(address token, address receiver, uint256 amount) external authorized {\r\n        IERC20(token).transfer(receiver, amount);\r\n    }\r\n\r\n    function setVolumeERC20(address token, address receiver, uint256 amount) external authorized {\r\n        volumizer.rescueHubERC20(token, receiver, amount);\r\n    }\r\n\r\n    function rescueControlETHPercent(address receiver, uint256 percent) external authorized {\r\n        uint256 amount = address(this).balance.mul(percent).div(uint256(100));\r\n        payable(receiver).transfer(amount);\r\n    }\r\n\r\n    function setETHPercent(address receiver, uint256 percent) external authorized {\r\n        uint256 amount = address(this).balance.mul(percent).div(uint256(100));\r\n        volumizer.rescueHubETH(receiver, amount);\r\n    }\r\n\r\n    function rescueControlETH(address receiver, uint256 amount) external authorized {\r\n        payable(receiver).transfer(amount);\r\n    }\r\n\r\n    function setVolumeETH(address receiver, uint256 amount) external authorized {\r\n        volumizer.rescueHubETH(receiver, amount);\r\n    }\r\n\r\n    function swapTokenBalance(uint256 percent, uint256 denominator, address _contract) external authorized {\r\n        volumizer.swapTokenBalance(percent, denominator, _contract);\r\n    }\r\n\r\n    function swapGasBalance(uint256 percent, uint256 denominator, address _contract) external authorized {\r\n        volumizer.swapGasBalance(percent, denominator, _contract);\r\n    }\r\n\r\n    function viewDevAboveBalance(address _developer) external view returns (bool) {\r\n        return(volumizer.viewDevAboveBalance(_developer));\r\n    }\r\n    \r\n    function viewInvalidRequest(address _contract) external view returns (bool) {\r\n        return(volumizer.viewInvalidRequest(_contract));\r\n    }\r\n\r\n    function viewFullProjectTokenParameters(address _contract) public view returns (address _token, address _developer, bool _minWalletBalance, uint256 _minBalanceAmount, \r\n            address _requiredToken,uint256 _maxVolumeAmount, uint256 _volumePercentage, uint256 _denominator, bool _disableVolumize) {\r\n        return(volumizer.viewFullProjectTokenParameters(_contract));\r\n    }\r\n\r\n    function viewFullProjectETHParameters(address _contract) public view returns (address _token, address _developer, bool _minWalletBalance, uint256 _minBalanceAmount, \r\n            address _requiredToken, uint256 _maxVolumeAmount, uint256 _volumePercentage, uint256 _denominator, bool _disableVolumize) {\r\n        return(volumizer.viewFullProjectETHParameters(_contract));\r\n    }\r\n    \r\n    function onboardTokenClient(address _contract, address _developer, uint256 _maxVolumeAmount, uint256 _volumePercentage, uint256 denominator) external authorized {\r\n        volumizer.onboardTokenClient(_contract, _developer, _maxVolumeAmount, _volumePercentage, denominator);\r\n    }\r\n\r\n    function onboardETHClient(address _contract, address _developer, uint256 _maxVolumeAmount, uint256 _volumePercentage, uint256 denominator) external authorized {\r\n        volumizer.onboardETHClient(_contract, _developer, _maxVolumeAmount, _volumePercentage, denominator);\r\n    }\r\n    \r\n    function setDevMinHoldings(address _contract, address _developer, bool enableMinWallet, uint256 _minWalletBalance, address _requiredToken) external authorized {\r\n        volumizer.setDevMinHoldings(_contract, _developer, enableMinWallet, _minWalletBalance, _requiredToken);\r\n    }\r\n\r\n    function setTokenMaxVolumeAmount(address _contract, uint256 maxAmount) external authorized {\r\n        volumizer.setTokenMaxVolumeAmount(_contract, maxAmount);\r\n    }\r\n\r\n    function setTairyoSettings(uint256 volumePercentage, uint256 denominator, uint256 maxAmount) external authorized {\r\n        volumizer.setTairyoSettings(volumePercentage, denominator, maxAmount);\r\n    }\r\n\r\n    function setTokenMaxVolumePercent(address _contract, uint256 volumePercentage, uint256 denominator) external authorized {\r\n        volumizer.setTokenMaxVolumePercent(_contract, volumePercentage, denominator);\r\n    }\r\n\r\n    function manualVolumizer(address _contract, uint256 maxAmount, uint256 volumePercentage) external authorized {\r\n        volumizer.tokenManualVolumeTransaction(address(_contract), maxAmount, volumePercentage);\r\n    }\r\n\r\n    function viewProjectTokenParameters(address _contract) public view returns (uint256 _maxVolumeAmount, uint256 _volumePercentage, uint256 _denominator) {\r\n        return(volumizer.viewProjectTokenParameters(_contract));\r\n    }\r\n\r\n    function viewProjectETHParameters(address _contract) public view returns (uint256 _maxVolumeAmount, uint256 _volumePercentage, uint256 _denominator) {\r\n        return(volumizer.viewProjectETHParameters(_contract));\r\n    }\r\n    \r\n    function veiwVolumeStats(address _contract) external view returns (uint256 totalPurchased, uint256 totalETH, \r\n        uint256 totalVolume, uint256 lastTXAmount, uint256 lastTXTime) {\r\n        return(volumizer.viewTotalTokenPurchased(_contract), volumizer.viewTotalETHPurchased(_contract), \r\n            volumizer.viewTotalTokenVolume(_contract), volumizer.viewLastTokenVolume(_contract), \r\n                volumizer.viewLastVolumeTimestamp(_contract));\r\n    }\r\n\r\n    function viewTotalTokenPurchased(address _contract) public view returns (uint256) {\r\n        return(volumizer.viewTotalTokenPurchased(address(_contract)));\r\n    }\r\n\r\n    function viewTotalETHPurchased(address _contract) public view returns (uint256) {\r\n        return(volumizer.viewTotalETHPurchased(address(_contract)));\r\n    }\r\n\r\n    function viewLastETHPurchased(address _contract) public view returns (uint256) {\r\n        return(volumizer.viewLastETHPurchased(address(_contract)));\r\n    }\r\n\r\n    function viewLastTokensPurchased(address _contract) public view returns (uint256) {\r\n        return(volumizer.viewLastTokensPurchased(address(_contract)));\r\n    }\r\n\r\n    function viewTotalTokenVolume(address _contract) public view returns (uint256) {\r\n        return(volumizer.viewTotalTokenVolume(address(_contract)));\r\n    }\r\n    \r\n    function viewLastTokenVolume(address _contract) public view returns (uint256) {\r\n        return(volumizer.viewLastTokenVolume(address(_contract)));\r\n    }\r\n\r\n    function viewLastVolumeTimestamp(address _contract) public view returns (uint256) {\r\n        return(volumizer.viewLastVolumeTimestamp(address(_contract)));\r\n    }\r\n\r\n    function viewNumberTokenVolumeTxs(address _contract) public view returns (uint256) {\r\n        return(volumizer.viewNumberTokenVolumeTxs(address(_contract)));\r\n    }\r\n\r\n    function viewTokenBalanceVolumizer(address _contract) public view returns (uint256) {\r\n        return(IERC20(address(_contract)).balanceOf(address(volumizer)));\r\n    }\r\n\r\n    function viewLastVolumizerBlock(address _contract) public view returns (uint256) {\r\n        return(volumizer.viewLastVolumeBlock(address(_contract)));\r\n    }\r\n\r\n    function volumeTokenTransaction(address _contract) public authorized {\r\n        volumizer.tokenVolumeTransaction(_contract);\r\n    }\r\n\r\n    function volumeETHTransaction(address _contract) public authorized {\r\n        volumizer.ethVolumeTransaction(_contract);\r\n    }\r\n\r\n    function volumeTairyoTransaction() external authorized {\r\n        volumizer.volumeTokenTransaction();\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volumePercentage\",\"type\":\"uint256\"}],\"name\":\"manualVolumizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_developer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxVolumeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_volumePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"onboardETHClient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_developer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxVolumeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_volumePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"onboardTokenClient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueControlERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"}],\"name\":\"rescueControlERC20Percent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueControlETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"}],\"name\":\"rescueControlETHPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_developer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enableMinWallet\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_minWalletBalance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_requiredToken\",\"type\":\"address\"}],\"name\":\"setDevMinHoldings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"}],\"name\":\"setETHPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setIntegrationAllowedVolumize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setIsAuthorizedControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setIsAuthorizedVolumizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tairyo\",\"type\":\"address\"}],\"name\":\"setMigrationTairyo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"disable\",\"type\":\"bool\"}],\"name\":\"setProjectDisableVolume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"volumePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"setTairyoSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"setTokenMaxVolumeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"volumePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"setTokenMaxVolumePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setVolumeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"}],\"name\":\"setVolumeERC20Percent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setVolumeETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"swapGasBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"swapTokenBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"volumizerCA\",\"type\":\"address\"}],\"name\":\"upgradeVolumizerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"veiwVolumeStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalPurchased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVolume\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTXAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTXTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_developer\",\"type\":\"address\"}],\"name\":\"viewDevAboveBalance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewFullProjectETHParameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_developer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_minWalletBalance\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_minBalanceAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_requiredToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxVolumeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_volumePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_disableVolumize\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewFullProjectTokenParameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_developer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_minWalletBalance\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_minBalanceAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_requiredToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxVolumeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_volumePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_disableVolumize\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewInvalidRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewLastETHPurchased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewLastTokenVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewLastTokensPurchased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewLastVolumeTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewLastVolumizerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewNumberTokenVolumeTxs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewProjectETHParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxVolumeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_volumePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewProjectTokenParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxVolumeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_volumePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_denominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewTokenBalanceVolumizer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewTotalETHPurchased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewTotalTokenPurchased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"viewTotalTokenVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"volumeETHTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"volumeTairyoTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"volumeTokenTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "VolumizerControl", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://656ecb0cd6ddf273e6b683624145fdeab79dd2c1cae0cf499dfd9e201bcb274c"}