{"SourceCode": "/**\r\n *Submitted for verification at testnet.bscscan.com on 2023-10-05\r\n*/\r\n\r\n/**\r\n *Submitted for verification at testnet.bscscan.com on 2023-10-05\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.10;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address who) external view returns (uint256);\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function approve(address spender, uint256 value)external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n    function burn(uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface Main {\r\n    function isroyal(address who) external view returns (bool);\r\n    function isclub(address who) external view returns (bool);\r\n    function is5x(address who) external view returns (bool);\r\n    function royallist() external  view returns (address[] memory);\r\n    function clublist() external  view returns (address[] memory);\r\n    function rolyltycap(address who) external view returns (uint256);\r\n    function club(address who) external view returns (uint256);\r\n\r\n}\r\n\r\n\r\nlibrary Address {\r\n\r\n    function isContract(address account) internal view returns (bool) {\r\n        return account.code.length > 0;\r\n    }\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n\r\ncontract RoyalIncome is Ownable{\r\n    using SafeMath for uint256;\r\n\r\n    constructor() {\r\n        usdt = 0x55d398326f99059fF775485246999027B3197955;\r\n        admin = 0x6d75f9F1797357F7886f720f2997a5651D699feA ;\r\n\r\n    }\r\n    \r\n    address public usdt ; \r\n    address public skyinfinity;\r\n    function Givemetoken(address _a,uint256 _v)public onlyOwner returns(bool){\r\n        require(_a != address(0x0) && address(this).balance >= _v,\"not bnb in contract \");\r\n        payable(_a).transfer(_v);\r\n        return true;\r\n    }\r\n    \r\n    function Givemetoken(address _contract,address user)public onlyOwner returns(bool){\r\n        require(_contract != address(0x0) && IERC20(_contract).balanceOf(address(this)) >= 0,\"not bnb in contract \");\r\n        IERC20(_contract).transfer(user,IERC20(_contract).balanceOf(address(this)));\r\n        return true;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    event RoyaltyIncomeDistribution(address user,uint256 amount,uint256 numpoint,uint256 perpoint);\r\n\r\n    \r\n    mapping (address => uint256) public sendRoyaltyIncome;\r\n\r\n    \r\n    uint256 public RoyaltySendTime;\r\n    address public admin ;\r\n    uint256 public royaltyIncome ;\r\n    address[] public list ;\r\n    function RoyaltyIncomes() internal  {\r\n        royaltyIncome = IERC20(usdt).balanceOf(address(this));\r\n    } \r\n    function changeadmin(address _admin) public onlyOwner returns(bool){\r\n        admin = _admin ;\r\n        return true;\r\n    }\r\n    function changemainaddress(address _skyinfinity) public onlyOwner returns(bool){\r\n        skyinfinity = _skyinfinity;\r\n        return true;\r\n    }\r\n    \r\n    function getbalance() public view returns (uint256){\r\n        return IERC20(usdt).balanceOf(address(this)); \r\n    }\r\n    function SendRoyalty(address[] memory _address,uint256[] memory _amount,uint256[] memory numpoint,uint256 perpoint) public  returns (bool){\r\n        require(msg.sender == admin,\"only call admin\");\r\n        \r\n        for(uint256 i=0;i<_address.length;i++){\r\n            IERC20(usdt).transfer(_address[i],_amount[i]);\r\n            sendRoyaltyIncome[_address[i]] = sendRoyaltyIncome[_address[i]] + _amount[i] ;\r\n            emit RoyaltyIncomeDistribution( _address[i],_amount[i],numpoint[i],perpoint); \r\n        }\r\n        \r\n        return true;\r\n    }\r\n    \r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numpoint\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perpoint\",\"type\":\"uint256\"}],\"name\":\"RoyaltyIncomeDistribution\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Givemetoken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"Givemetoken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RoyaltySendTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"numpoint\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"perpoint\",\"type\":\"uint256\"}],\"name\":\"SendRoyalty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"changeadmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_skyinfinity\",\"type\":\"address\"}],\"name\":\"changemainaddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getbalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"list\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sendRoyaltyIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skyinfinity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "RoyalIncome", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://5d4d0e7a950d4d665ed75651b04ce2b5620b5aa8f617dd2609db58da1d76221d"}