{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"fixLP.sol\": {\r\n      \"content\": \"/**\\r\\n *Submitted for verification at BscScan.com on 2023-08-16\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: No license\\r\\n// BY EASYTOKEN.APP/\\r\\npragma solidity 0.8.19;\\r\\n\\r\\ninterface WBNB {\\r\\n    function deposit() external payable;\\r\\n}\\r\\ninterface IERC20 {\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns(bool);\\r\\n}\\r\\ninterface Pair {\\r\\n    function mint(address to) external returns (uint liquidity);\\r\\n    function sync() external;\\r\\n}\\r\\n\\r\\ncontract FixLPContract {\\r\\n\\r\\n    function fixLP(address token, uint tokenAmount, address wbnb, address pair) external payable {\\r\\n        // step 1: get WBNB\\r\\n        WBNB(wbnb).deposit{value: msg.value}();\\r\\n        // step 2: send Tokens & WBNB to pair (remember to approve this contract on token before calling)\\r\\n        IERC20(token).transferFrom(msg.sender, pair, tokenAmount);\\r\\n        IERC20(wbnb).transfer(address(pair), msg.value);\\r\\n        // step 3: mint LP & fix\\r\\n        Pair(pair).mint(msg.sender);\\r\\n    }\\r\\n\\r\\n    function secondFix(address token, uint tokenAmount, address pair) external {\\r\\n        // step 1: send Tokens to pair (remember to approve this contract on token before calling)\\r\\n        IERC20(token).transferFrom(msg.sender, pair, tokenAmount);\\r\\n        // step 2: sync pair\\r\\n        Pair(pair).sync();\\r\\n    }\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wbnb\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"fixLP\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"secondFix\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "FixLPContract", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}