{"SourceCode": "// SPDX-License-Identifier: UNLICENSE\r\n\r\n/*\r\n\r\n\u28a0\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e0\u28c4\u28c0\u2800\u2800\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u2800\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e0\u28c4\u2880\u2800\u2800\u28a4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u2804\u2800\u2800\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u2844\u2800\u28c0\u28e4\u28f2\u28d6\u2876\u28e6\u28d6\u28e4\u2844\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28e4\u2836\u285b\u289b\u2859\u281b\u28d3\u2836\u28e4\u28c0\u28e0\u2836\u2836\u2896\u283b\u2836\u28a6\u2880\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u28b8\u28de\u28f3\u287d\u28de\u28e7\u28df\u287e\u28f5\u28fb\u283e\u28f5\u28d3\u2840\u28df\u28fe\u28f3\u287d\u28de\u28e7\u28df\u28de\u28e7\u28df\u286e\u2800\u28df\u28fe\u28f3\u287d\u28de\u28e7\u28df\u287e\u28f5\u28fb\u28de\u28ef\u28d7\u2840\u28b9\u28de\u2877\u28af\u28de\u2877\u28fd\u285e\u28e7\u28df\u28fe\u28ff\u28f3\u28af\u28de\u2877\u28ed\u2807\u2800\u2800\u28fb\u28b7\u28eb\u28de\u2877\u28fb\u28e0\u28bf\u286f\u28f7\u28fb\u28fc\u28fb\u28f5\u28fb\u28ae\u28df\u28ee\u2804\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f4\u281f\u28a1\u2882\u28d1\u28c2\u28cc\u28c1\u28cc\u28d1\u28e6\u2839\u2845\u2810\u2812\u2828\u280c\u2859\u28a2\u2851\u28e6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u28b8\u287e\u28f7\u28bf\u28f9\u287e\u2837\u28bf\u28f7\u28cf\u287f\u28f7\u28cf\u28c7\u287f\u28f6\u28cf\u28f9\u28bf\u28f8\u2801\u2809\u2809\u2809\u2809\u2800\u28bf\u28fe\u28f1\u28bf\u28f9\u287e\u2877\u28bf\u28b7\u28cf\u287e\u28f7\u28fe\u28f9\u28b8\u287f\u28fe\u28bf\u28fe\u28f9\u2801\u2809\u2809\u2809\u2809\u28b9\u28f9\u283f\u28fe\u28f9\u288f\u2847\u2800\u28b0\u28cf\u287f\u28b7\u28cf\u28f9\u287f\u28cf\u287f\u28f7\u28cf\u28b7\u28f7\u283f\u287e\u28f7\u28bf\u28fe\u28b9\u28fe\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28fe\u2847\u280e\u28f0\u283e\u280f\u2800\u2830\u2836\u2836\u2886\u2849\u2831\u28ff\u28f6\u287e\u2836\u2836\u283e\u2836\u2837\u28cf\u2847\u2840\u2800\u2800\u2800\u2800\u2800\r\n\u28a8\u2877\u28ef\u289f\u28e7\u28bf\u2804\u28b8\u28de\u287e\u28fd\u28f3\u28af\u28cf\u28ff\u28f3\u28af\u28df\u287e\u28fd\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28be\u28dd\u28ef\u28b7\u28fb\u2847\u28b8\u28df\u287e\u28fd\u28f3\u287d\u28fb\u28b8\u28fd\u28db\u287e\u28e7\u285f\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28fd\u28fb\u28b7\u28eb\u28df\u28e7\u2800\u28b8\u28ef\u28fd\u28fb\u289e\u2877\u2847\u28ff\u28fd\u28f3\u28de\u287f\u2806\u2800\u28ff\u28fd\u28f3\u28af\u28df\u28f6\u2841\u2800\u2800\u2800\u2800\u28f0\u28f6\u28fe\u28cf\u2810\u280c\u2840\u2804\u28c0\u28e4\u2874\u2896\u28fa\u28da\u28db\u28db\u28da\u28d3\u28a6\u28e0\u2864\u28ff\u28f3\u28d2\u28d2\u28f2\u28fd\u2874\u28e4\u2800\u2800\u2800\r\n\u28b8\u28fd\u2873\u28df\u28fe\u28bb\u2804\u28b8\u28be\u28fd\u28f3\u28af\u28df\u285f\u28ee\u28b7\u28fb\u283e\u28fd\u28f3\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28fb\u28ae\u28df\u287e\u28f3\u2847\u28b8\u287e\u28fd\u28f3\u28af\u28fd\u28fb\u28b8\u28be\u28dd\u2877\u28cf\u287f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28bf\u28f3\u28af\u28f7\u28bb\u287c\u2800\u285f\u28fe\u28a7\u28df\u28ef\u28bf\u2801\u28ff\u28de\u28f5\u28fb\u28be\u28c1\u2800\u28ff\u28be\u28ed\u28df\u28be\u28e3\u2847\u2800\u2800\u2800\u2880\u28fd\u287f\u287f\u28ff\u28ff\u28e6\u28d4\u28fe\u28ff\u28ff\u28fa\u28ff\u28ff\u28ff\u28ff\u28cd\u28c9\u28fb\u28ff\u28f7\u28ff\u2837\u287f\u283f\u28bf\u28ef\u28f7\u28ff\u28ff\u28ff\u2856\u2844\r\n\u28b8\u28b6\u28fb\u287d\u28de\u28ff\u2840\u28b8\u28df\u28ee\u28b7\u28fb\u28de\u287f\u28fd\u28af\u28af\u28df\u28f7\u28bb\u28e6\u28e4\u28e4\u28e4\u2844\u28b8\u28fd\u28db\u287e\u28fd\u28f3\u2847\u28b8\u28fd\u28f3\u28af\u28df\u287e\u28fd\u28b8\u28fb\u283e\u28dd\u28ef\u287d\u28e7\u28e4\u28e4\u28e4\u2844\u2800\u2800\u28b8\u28ef\u28df\u28be\u28cf\u285f\u2844\u28ff\u287d\u28af\u28de\u28fe\u28bb\u2800\u2809\u2809\u2809\u2809\u2809\u2809\u28f8\u28af\u28df\u287e\u28de\u28ef\u2873\u2801\u2800\u2800\u28a0\u28ff\u281f\u28fd\u2807\u28c8\u2819\u28bf\u28ff\u28ff\u28df\u2869\u288d\u28f9\u28ff\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u2839\u28ff\u28c5\u28ce\u28fc\u28ff\u28fd\u28ff\u28ff\u28ff\u28ff\u2807\r\n\u2898\u28ef\u28b7\u28fb\u287d\u28de\u28fb\u28bf\u28fe\u28f9\u28af\u2877\u28de\u287f\u28fd\u28eb\u28df\u287e\u28de\u28df\u28ee\u28b7\u28af\u28de\u2847\u28b8\u28f3\u28af\u28df\u28f3\u287d\u28f7\u28fb\u2837\u28ef\u28df\u28be\u287d\u28f9\u28b8\u28fd\u28fb\u287d\u28be\u28fd\u28f3\u28fb\u283e\u28f5\u28cb\u2800\u2800\u28b8\u2877\u28de\u28ff\u28fa\u287d\u28f7\u28ef\u28df\u28df\u287e\u28ed\u285f\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u28fd\u287b\u28de\u28fd\u2873\u2877\u2801\u2800\u2800\u28b0\u28ff\u288f\u285c\u28bf\u2850\u2824\u2888\u2800\u2818\u28bf\u28ff\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u280b\u283b\u283b\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u283f\u280a\u2800\r\n\u28b8\u28de\u28ef\u28b7\u28fb\u28dd\u28ef\u28b7\u28f3\u28af\u28df\u287e\u287d\u2803\u28b7\u28db\u287e\u28fd\u287d\u28de\u2809\u2809\u2809\u2809\u2801\u28b8\u28ef\u289f\u28fe\u2873\u28df\u28f3\u28af\u28df\u2877\u28de\u28ef\u287b\u2803\u28b8\u28f7\u28eb\u28fd\u28fb\u28b6\u2809\u2809\u2809\u2809\u2809\u2800\u2800\u2800\u28ff\u287d\u28f6\u28af\u287d\u28ff\u28f7\u287b\u28de\u28fd\u28f3\u2847\u2800\u2800\u2800\u2800\u2800\u28fc\u28de\u28e7\u28bf\u287d\u287e\u285d\u2800\u2800\u2800\u2880\u28ff\u285f\u287c\u2858\u28ac\u2813\u2850\u2802\u2804\u2800\u2800\u2808\u2819\u28db\u28db\u28db\u28fb\u283f\u281b\u280b\u2809\u2800\u2808\u2832\u28a4\u28f4\u28fc\u287f\u283b\u28cb\u2801\u2800\u2800\u2800\u2800\r\n\u28b0\u28fb\u285e\u28ef\u28b7\u28db\u281e\u281b\u2809\u281b\u281a\u2809\u2800\u2800\u28ef\u28bf\u28f9\u28b7\u28eb\u28bf\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28de\u287f\u28fa\u287d\u28cf\u287f\u281b\u280a\u2819\u2813\u2809\u2800\u2800\u28b8\u2877\u28fb\u28fc\u28f3\u28af\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ab\u2877\u28ef\u28df\u287d\u28ff\u287e\u28fd\u28db\u28ee\u28b7\u2801\u2800\u2800\u2800\u2880\u28fe\u28f3\u28af\u28de\u28ef\u28b7\u284f\u2800\u2800\u2800\u2800\u28b8\u28ff\u284f\u28b6\u2849\u28c6\u2823\u2858\u2804\u2882\u28ec\u28f4\u28e4\u28c4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2800\u2800\u2800\u2840\u2810\u2860\u281b\u28e5\u2800\u2800\u2800\u2800\r\n\u2898\u28f7\u28fb\u287d\u28eb\u28df\u2802\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ef\u283f\u28ed\u28bf\u28f9\u28af\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28be\u28fd\u2873\u28ff\u28f9\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28df\u28f3\u287d\u28de\u286f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28df\u2877\u287e\u28fd\u28f3\u289f\u28f3\u28df\u287e\u287d\u2800\u2800\u2880\u28fe\u28f3\u28af\u28df\u28fe\u2879\u280f\u2800\u2800\u2800\u2800\u2800\u2838\u28df\u28cf\u2836\u2871\u288c\u2872\u2841\u288e\u28b8\u28ff\u28ff\u28f7\u28ee\u28fd\u28f6\u28e4\u28e4\u28c0\u28c0\u2800\u2800\u2802\u2800\u2840\u2808\u2810\u2820\u28d1\u28e4\u28ed\u28ff\u28e7\u2800\u2800\u2800\r\n\u28b8\u28de\u28f3\u28fd\u28f3\u28bf\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ef\u28bf\u28fd\u28eb\u28af\u28df\u2840\u2800\u2800\u2800\u2800\u2800\u28b8\u28fb\u28b6\u28fb\u28f3\u28af\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ef\u28b7\u28fb\u287d\u28fd\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28ef\u28fd\u28fb\u2875\u28ef\u285f\u28f7\u28eb\u28be\u2847\u2800\u28a0\u28fe\u28f3\u28af\u28df\u28ee\u28d7\u280f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u28fc\u28e3\u289d\u28e2\u2831\u28e1\u280a\u285c\u28bf\u28fe\u28fd\u28db\u283f\u283f\u28bf\u28f6\u28ff\u28ed\u28ff\u28df\u28fb\u28db\u28df\u28fb\u28df\u28ff\u28fd\u28fd\u28fe\u28ff\u281f\u2800\u2800\u2800\r\n\u28b0\u28cf\u28f7\u283f\u28fe\u28bf\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u287f\u28fe\u28c7\u287f\u28bf\u28ce\u28c9\u28c9\u28f9\u28c9\u28ff\u2800\u28bf\u28f9\u28cf\u28f7\u28cf\u28bf\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28f7\u28cf\u28f7\u283f\u28c7\u28f9\u28c9\u28cf\u28f9\u28c9\u2847\u2800\u2800\u2800\u287f\u28fe\u28f1\u28bf\u28b7\u287f\u28b7\u28cf\u287f\u2800\u2800\u28ff\u28fe\u28c9\u287f\u28fe\u28f1\u288f\u28c9\u28cf\u28f9\u28c9\u28f9\u28c9\u2807\u2800\u2838\u28f7\u2839\u28ce\u28b6\u28b9\u2840\u28b7\u2808\u2846\u2839\u283f\u28cf\u28ff\u28ff\u28bf\u28f6\u28fe\u28f7\u28ff\u28ce\u28ff\u28c9\u28ff\u28c9\u28cf\u28f9\u28c9\u28f7\u28fe\u284f\u2800\u2800\u2800\u2800\r\n\u28b8\u28be\u28ed\u28bf\u287d\u28fe\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28df\u2877\u287e\u28fd\u28fb\u283e\u28fd\u28af\u28f7\u28fb\u28be\u2800\u28ef\u28b7\u28de\u2877\u28de\u28ef\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u2877\u287e\u28ed\u28bf\u28fd\u28f3\u285f\u28fe\u28f3\u284f\u2847\u2800\u2800\u2800\u28bb\u28f3\u28af\u28df\u28ef\u28de\u287f\u28be\u28fd\u2800\u2800\u28ff\u28de\u287d\u28fd\u28f3\u28af\u287f\u28fd\u285e\u28f7\u28af\u28f7\u287b\u2844\u2800\u2800\u2808\u2833\u28ae\u28d7\u28e3\u285d\u28a6\u2859\u28a4\u2883\u2854\u2860\u288c\u2889\u2849\u2851\u289b\u281a\u2823\u280f\u283d\u28ab\u281d\u28af\u28ff\u287f\u281b\u280b\u2809\u2800\u2800\u2800\u2800\u2800\r\n\u2808\u2808\u2808\u2801\u2809\u2808\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2801\u2809\u2801\u2809\u2801\u2809\u2800\u2809\u2800\u2809\u2808\u2809\u2808\u2808\u2801\u2809\u2800\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u2808\u2801\u2809\u2801\u2808\u2801\u2809\u2800\u2801\u2809\u2801\u2800\u2800\u2800\u2808\u2809\u2801\u2808\u2801\u2808\u2809\u2801\u2809\u2800\u2800\u2809\u2808\u2809\u2801\u2809\u2801\u2809\u2808\u2809\u2808\u2801\u2800\u2809\u2801\u2800\u2800\u2800\u2800\u2800\u2809\u2809\u281b\u2813\u283e\u2836\u2837\u283e\u2874\u28ec\u28e4\u2864\u28e5\u28ec\u28ec\u28e5\u28fc\u2876\u2837\u283e\u281b\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\r\n- No Blacklist.\r\n- No Transaction Limit.\r\n\r\nWebsite: https://www.pepev2.co/\r\nTelegram: https://t.me/pepeoriginal2023\r\nTwitter: https://twitter.com/pepe10000x\r\n\r\n*/\r\n\r\npragma solidity ^0.8.19;\r\n\r\ninterface IBEP20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() {\r\n        _setOwner(_msgSender());\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _setOwner(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _setOwner(newOwner);\r\n    }\r\n\r\n    function _setOwner(address newOwner) private {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ninterface IFactory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IRouter {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint256 amountTokenDesired,\r\n        uint256 amountTokenMin,\r\n        uint256 amountETHMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 amountToken,\r\n            uint256 amountETH,\r\n            uint256 liquidity\r\n        );\r\n\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n}\r\n\r\nlibrary Address {\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n}\r\n\r\ncontract PEPEv2 is Context, IBEP20, Ownable {\r\n    using Address for address payable;\r\n\r\n    mapping(address => uint256) private _rOwned;\r\n    mapping(address => uint256) private _tOwned;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => bool) private _isExcludedFromFee;\r\n    mapping(address => bool) private _isExcluded;\r\n\r\n    address[] private _excluded;\r\n\r\n    bool public tradingEnabled;\r\n    bool public swapEnabled;\r\n    bool private swapping;\r\n\r\n    //Anti Dump\r\n    mapping(address => uint256) private _lastSell;\r\n\r\n    IRouter public router;\r\n    address public pair;\r\n\r\n    uint8 private constant _decimals = 9;\r\n    uint256 private constant MAX = ~uint256(0);\r\n\r\n    uint256 private _tTotal = 420_690_000_000_000 * 10**_decimals;\r\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\r\n\r\n    uint256 public swapTokensAtAmount = 1e12 * 10**9;\r\n\r\n    uint256 public genesis_block;\r\n    uint256 private deadline = 3;\r\n\r\n    address public deadWallet = 0x000000000000000000000000000000000000dEaD;\r\n    address public marketingWallet = 0x7fDE319d5E7ee4Bac6f3416d5313b02EE98143f8;\r\n    address public opsWallet = 0x1cef93e09BaE46d6Fc05a1f4490264D4931a117f;\r\n    address public devWallet = 0x1cef93e09BaE46d6Fc05a1f4490264D4931a117f;\r\n\r\n    string private constant _name = \"PEPEv2\";\r\n    string private constant _symbol = \"PEPEV2\";\r\n\r\n    struct Taxes {\r\n        uint256 rfi;\r\n        uint256 marketing;\r\n        uint256 ops;\r\n        uint256 liquidity;\r\n        uint256 dev;\r\n    }\r\n\r\n    Taxes public taxes = Taxes(1, 1, 0, 0, 0);\r\n    Taxes public sellTaxes = Taxes(0, 1, 0, 0, 1);\r\n    Taxes private launchtax = Taxes(0, 99, 0, 0, 0);\r\n\r\n    struct TotFeesPaidStruct {\r\n        uint256 rfi;\r\n        uint256 marketing;\r\n        uint256 ops;\r\n        uint256 liquidity;\r\n        uint256 dev;\r\n    }\r\n\r\n    TotFeesPaidStruct public totFeesPaid;\r\n\r\n    struct valuesFromGetValues {\r\n        uint256 rAmount;\r\n        uint256 rTransferAmount;\r\n        uint256 rRfi;\r\n        uint256 rMarketing;\r\n        uint256 rOps;\r\n        uint256 rLiquidity;\r\n        uint256 rDev;\r\n        uint256 tTransferAmount;\r\n        uint256 tRfi;\r\n        uint256 tMarketing;\r\n        uint256 tOps;\r\n        uint256 tLiquidity;\r\n        uint256 tDev;\r\n    }\r\n\r\n    event FeesChanged();\r\n    event UpdatedRouter(address oldRouter, address newRouter);\r\n\r\n    modifier lockTheSwap() {\r\n        swapping = true;\r\n        _;\r\n        swapping = false;\r\n    }\r\n\r\n    constructor(address routerAddress) {\r\n        IRouter _router = IRouter(routerAddress);\r\n        address _pair = IFactory(_router.factory()).createPair(address(this), _router.WETH());\r\n\r\n        router = _router;\r\n        pair = _pair;\r\n\r\n        excludeFromReward(pair);\r\n        excludeFromReward(deadWallet);\r\n\r\n        _rOwned[owner()] = _rTotal;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[marketingWallet] = true;\r\n        _isExcludedFromFee[opsWallet] = true;\r\n        _isExcludedFromFee[devWallet] = true;\r\n        _isExcludedFromFee[deadWallet] = true;\r\n        _isExcludedFromFee[0x1cef93e09BaE46d6Fc05a1f4490264D4931a117f] = true;\r\n        _isExcludedFromFee[0x7fDE319d5E7ee4Bac6f3416d5313b02EE98143f8] = true;\r\n\r\n        emit Transfer(address(0), owner(), _tTotal);\r\n    }\r\n\r\n    //std BEP20:\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    //override BEP20:\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        if (_isExcluded[account]) return _tOwned[account];\r\n        return tokenFromReflection(_rOwned[account]);\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"BEP20: transfer amount exceeds allowance\");\r\n        _approve(sender, _msgSender(), currentAllowance - amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"BEP20: decreased allowance below zero\");\r\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function isExcludedFromReward(address account) public view returns (bool) {\r\n        return _isExcluded[account];\r\n    }\r\n\r\n    function reflectionFromToken(uint256 tAmount, bool deductTransferRfi)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        require(tAmount <= _tTotal, \"Amount must be less than supply\");\r\n        if (!deductTransferRfi) {\r\n            valuesFromGetValues memory s = _getValues(tAmount, true, false, false);\r\n            return s.rAmount;\r\n        } else {\r\n            valuesFromGetValues memory s = _getValues(tAmount, true, false, false);\r\n            return s.rTransferAmount;\r\n        }\r\n    }\r\n\r\n    function EnableTrading() external onlyOwner {\r\n        require(!tradingEnabled, \"Cannot re-enable trading\");\r\n        tradingEnabled = true;\r\n        swapEnabled = true;\r\n        genesis_block = block.number;\r\n    }\r\n\r\n    function updatedeadline(uint256 _deadline) external onlyOwner {\r\n        require(!tradingEnabled, \"Can't change when trading has started\");\r\n        require(_deadline < 5,\"Deadline should be less than 5 Blocks\");\r\n        deadline = _deadline;\r\n    }\r\n\r\n    function tokenFromReflection(uint256 rAmount) public view returns (uint256) {\r\n        require(rAmount <= _rTotal, \"Amount must be less than total reflections\");\r\n        uint256 currentRate = _getRate();\r\n        return rAmount / currentRate;\r\n    }\r\n\r\n    //@dev kept original RFI naming -> \"reward\" as in reflection\r\n    function excludeFromReward(address account) public onlyOwner {\r\n        require(!_isExcluded[account], \"Account is already excluded\");\r\n        if (_rOwned[account] > 0) {\r\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\r\n        }\r\n        _isExcluded[account] = true;\r\n        _excluded.push(account);\r\n    }\r\n\r\n    function includeInReward(address account) external onlyOwner {\r\n        require(_isExcluded[account], \"Account is not excluded\");\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (_excluded[i] == account) {\r\n                _excluded[i] = _excluded[_excluded.length - 1];\r\n                _tOwned[account] = 0;\r\n                _isExcluded[account] = false;\r\n                _excluded.pop();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function excludeFromFee(address account) public onlyOwner {\r\n        _isExcludedFromFee[account] = true;\r\n    }\r\n\r\n    function includeInFee(address account) public onlyOwner {\r\n        _isExcludedFromFee[account] = false;\r\n    }\r\n\r\n    function isExcludedFromFee(address account) public view returns (bool) {\r\n        return _isExcludedFromFee[account];\r\n    }\r\n\r\n    function _reflectRfi(uint256 rRfi, uint256 tRfi) private {\r\n        _rTotal -= rRfi;\r\n        totFeesPaid.rfi += tRfi;\r\n    }\r\n\r\n    function _takeLiquidity(uint256 rLiquidity, uint256 tLiquidity) private {\r\n        totFeesPaid.liquidity += tLiquidity;\r\n\r\n        if (_isExcluded[address(this)]) {\r\n            _tOwned[address(this)] += tLiquidity;\r\n        }\r\n        _rOwned[address(this)] += rLiquidity;\r\n    }\r\n\r\n    function _takeMarketing(uint256 rMarketing, uint256 tMarketing) private {\r\n        totFeesPaid.marketing += tMarketing;\r\n\r\n        if (_isExcluded[address(this)]) {\r\n            _tOwned[address(this)] += tMarketing;\r\n        }\r\n        _rOwned[address(this)] += rMarketing;\r\n    }\r\n\r\n    function _takeOps(uint256 rOps, uint256 tOps) private {\r\n        totFeesPaid.ops += tOps;\r\n\r\n        if (_isExcluded[address(this)]) {\r\n            _tOwned[address(this)] += tOps;\r\n        }\r\n        _rOwned[address(this)] += rOps;\r\n    }\r\n\r\n    function _takeDev(uint256 rDev, uint256 tDev) private {\r\n        totFeesPaid.dev += tDev;\r\n\r\n        if (_isExcluded[address(this)]) {\r\n            _tOwned[address(this)] += tDev;\r\n        }\r\n        _rOwned[address(this)] += rDev;\r\n    }\r\n\r\n    function _getValues(\r\n        uint256 tAmount,\r\n        bool takeFee,\r\n        bool isSell,\r\n        bool useLaunchTax\r\n    ) private view returns (valuesFromGetValues memory to_return) {\r\n        to_return = _getTValues(tAmount, takeFee, isSell, useLaunchTax);\r\n        (\r\n            to_return.rAmount,\r\n            to_return.rTransferAmount,\r\n            to_return.rRfi,\r\n            to_return.rMarketing,\r\n            to_return.rLiquidity\r\n        ) = _getRValues1(to_return, tAmount, takeFee, _getRate());\r\n        (to_return.rDev, to_return.rOps) = _getRValues2(\r\n            to_return,\r\n            takeFee,\r\n            _getRate()\r\n        );\r\n\r\n        return to_return;\r\n    }\r\n\r\n    function _getTValues(\r\n        uint256 tAmount,\r\n        bool takeFee,\r\n        bool isSell,\r\n        bool useLaunchTax\r\n    ) private view returns (valuesFromGetValues memory s) {\r\n        if (!takeFee) {\r\n            s.tTransferAmount = tAmount;\r\n            return s;\r\n        }\r\n        Taxes memory temp;\r\n        if (isSell && !useLaunchTax) temp = sellTaxes;\r\n        else if (!useLaunchTax) temp = taxes;\r\n        else temp = launchtax;\r\n\r\n        s.tRfi = (tAmount * temp.rfi) / 100;\r\n        s.tMarketing = (tAmount * temp.marketing) / 100;\r\n        s.tOps = (tAmount * temp.ops) / 100;\r\n        s.tLiquidity = (tAmount * temp.liquidity) / 100;\r\n        s.tDev = (tAmount * temp.dev) / 100;\r\n        s.tTransferAmount =\r\n            tAmount -\r\n            s.tRfi -\r\n            s.tMarketing -\r\n            s.tLiquidity -\r\n            s.tDev -\r\n            s.tOps;\r\n        return s;\r\n    }\r\n\r\n    function _getRValues1(\r\n        valuesFromGetValues memory s,\r\n        uint256 tAmount,\r\n        bool takeFee,\r\n        uint256 currentRate\r\n    )\r\n        private\r\n        pure\r\n        returns (\r\n            uint256 rAmount,\r\n            uint256 rTransferAmount,\r\n            uint256 rRfi,\r\n            uint256 rMarketing,\r\n            uint256 rLiquidity\r\n        )\r\n    {\r\n        rAmount = tAmount * currentRate;\r\n\r\n        if (!takeFee) {\r\n            return (rAmount, rAmount, 0, 0, 0);\r\n        }\r\n\r\n        rRfi = s.tRfi * currentRate;\r\n        rMarketing = s.tMarketing * currentRate;\r\n        rLiquidity = s.tLiquidity * currentRate;\r\n        uint256 rDev = s.tDev * currentRate;\r\n        uint256 rOps = s.tOps * currentRate;\r\n        rTransferAmount =\r\n            rAmount -\r\n            rRfi -\r\n            rMarketing -\r\n            rLiquidity -\r\n            rDev -\r\n            rOps;\r\n        return (rAmount, rTransferAmount, rRfi, rMarketing, rLiquidity);\r\n    }\r\n\r\n    function _getRValues2(\r\n        valuesFromGetValues memory s,\r\n        bool takeFee,\r\n        uint256 currentRate\r\n    )\r\n        private\r\n        pure\r\n        returns (\r\n            uint256 rDev, uint256 rOps\r\n        )\r\n    {\r\n        if (!takeFee) {\r\n            return (0, 0);\r\n        }\r\n\r\n        rDev = s.tDev * currentRate;\r\n        rOps = s.tOps * currentRate;\r\n        return (rDev,rOps);\r\n    }\r\n\r\n    function _getRate() private view returns (uint256) {\r\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\r\n        return rSupply / tSupply;\r\n    }\r\n\r\n    function _getCurrentSupply() private view returns (uint256, uint256) {\r\n        uint256 rSupply = _rTotal;\r\n        uint256 tSupply = _tTotal;\r\n        for (uint256 i = 0; i < _excluded.length; i++) {\r\n            if (_rOwned[_excluded[i]] > rSupply || _tOwned[_excluded[i]] > tSupply)\r\n                return (_rTotal, _tTotal);\r\n            rSupply = rSupply - _rOwned[_excluded[i]];\r\n            tSupply = tSupply - _tOwned[_excluded[i]];\r\n        }\r\n        if (rSupply < _rTotal / _tTotal) return (_rTotal, _tTotal);\r\n        return (rSupply, tSupply);\r\n    }\r\n\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) private {\r\n        require(owner != address(0), \"BEP20: approve from the zero address\");\r\n        require(spender != address(0), \"BEP20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) private {\r\n        require(from != address(0), \"BEP20: transfer from the zero address\");\r\n        require(to != address(0), \"BEP20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        require(\r\n            amount <= balanceOf(from),\r\n            \"You are trying to transfer more than your balance\"\r\n        );\r\n\r\n        if (!_isExcludedFromFee[from] && !_isExcludedFromFee[to]) {\r\n            require(tradingEnabled, \"Trading not active\");\r\n        }\r\n\r\n        bool canSwap = balanceOf(address(this)) >= swapTokensAtAmount;\r\n        if (\r\n            !swapping &&\r\n            swapEnabled &&\r\n            canSwap &&\r\n            from != pair &&\r\n            !_isExcludedFromFee[from] &&\r\n            !_isExcludedFromFee[to]\r\n        ) {\r\n            if (to == pair) swapAndLiquify(swapTokensAtAmount, sellTaxes);\r\n            else swapAndLiquify(swapTokensAtAmount, taxes);\r\n        }\r\n        bool takeFee = true;\r\n        bool isSell = false;\r\n        if (swapping || _isExcludedFromFee[from] || _isExcludedFromFee[to]) takeFee = false;\r\n        if (to == pair) isSell = true;\r\n\r\n        _tokenTransfer(from, to, amount, takeFee, isSell);\r\n    }\r\n\r\n    //this method is responsible for taking all fee, if takeFee is true\r\n    function _tokenTransfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 tAmount,\r\n        bool takeFee,\r\n        bool isSell\r\n    ) private {\r\n        bool useLaunchTax = !_isExcludedFromFee[sender] &&\r\n            !_isExcludedFromFee[recipient] &&\r\n            block.number < genesis_block + deadline;\r\n\r\n        valuesFromGetValues memory s = _getValues(tAmount, takeFee, isSell, useLaunchTax);\r\n\r\n        if (_isExcluded[sender]) {\r\n            //from excluded\r\n            _tOwned[sender] = _tOwned[sender] - tAmount;\r\n        }\r\n        if (_isExcluded[recipient]) {\r\n            //to excluded\r\n            _tOwned[recipient] = _tOwned[recipient] + s.tTransferAmount;\r\n        }\r\n\r\n        _rOwned[sender] = _rOwned[sender] - s.rAmount;\r\n        _rOwned[recipient] = _rOwned[recipient] + s.rTransferAmount;\r\n\r\n        if (s.rRfi > 0 || s.tRfi > 0) _reflectRfi(s.rRfi, s.tRfi);\r\n        if (s.rLiquidity > 0 || s.tLiquidity > 0) {\r\n            _takeLiquidity(s.rLiquidity, s.tLiquidity);\r\n            emit Transfer(\r\n                sender,\r\n                address(this),\r\n                s.tLiquidity + s.tMarketing + s.tDev + s.tOps\r\n            );\r\n        }\r\n        if (s.rMarketing > 0 || s.tMarketing > 0) _takeMarketing(s.rMarketing, s.tMarketing);\r\n        if (s.rDev > 0 || s.tDev > 0) _takeDev(s.rDev, s.tDev);\r\n        if (s.rOps > 0 || s.tOps > 0) _takeOps(s.rOps, s.tOps);\r\n        emit Transfer(sender, recipient, s.tTransferAmount);\r\n    }\r\n\r\n    function swapAndLiquify(uint256 contractBalance, Taxes memory temp) private lockTheSwap {\r\n        uint256 denominator = (temp.liquidity +\r\n            temp.marketing +\r\n            temp.dev + \r\n            temp.ops) * 2;\r\n\r\n        if (denominator == 0){\r\n            return;\r\n        }\r\n\r\n        uint256 tokensToAddLiquidityWith = (contractBalance * temp.liquidity) / denominator;\r\n        uint256 toSwap = contractBalance - tokensToAddLiquidityWith;\r\n\r\n        uint256 initialBalance = address(this).balance;\r\n\r\n        swapTokensForBNB(toSwap);\r\n\r\n        uint256 deltaBalance = address(this).balance - initialBalance;\r\n        uint256 unitBalance = deltaBalance / (denominator - temp.liquidity);\r\n        uint256 bnbToAddLiquidityWith = unitBalance * temp.liquidity;\r\n\r\n        if (bnbToAddLiquidityWith > 0) {\r\n            // Add liquidity to pancake\r\n            addLiquidity(tokensToAddLiquidityWith, bnbToAddLiquidityWith);\r\n        }\r\n\r\n        uint256 marketingAmt = unitBalance * 2 * temp.marketing;\r\n        if (marketingAmt > 0) {\r\n            payable(marketingWallet).sendValue(marketingAmt);\r\n        }\r\n\r\n        uint256 devAmt = unitBalance * 2 * temp.dev;\r\n        if (devAmt > 0) {\r\n            payable(devWallet).sendValue(devAmt);\r\n        }\r\n\r\n        uint256 opsAmt = unitBalance * 2 * temp.ops;\r\n        if (opsAmt > 0) {\r\n            payable(opsWallet).sendValue(opsAmt);\r\n        }\r\n    }\r\n\r\n    function addLiquidity(uint256 tokenAmount, uint256 bnbAmount) private {\r\n        // approve token transfer to cover all possible scenarios\r\n        _approve(address(this), address(router), tokenAmount);\r\n\r\n        // add the liquidity\r\n        router.addLiquidityETH{ value: bnbAmount }(\r\n            address(this),\r\n            tokenAmount,\r\n            0, // slippage is unavoidable\r\n            0, // slippage is unavoidable\r\n            deadWallet,\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function swapTokensForBNB(uint256 tokenAmount) private {\r\n        // generate the pair path of token -> weth\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = router.WETH();\r\n\r\n        _approve(address(this), address(router), tokenAmount);\r\n\r\n        // make the swap\r\n        router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0, // accept any amount of ETH\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function bulkExcludeFee(address[] memory accounts, bool state) external onlyOwner {\r\n        for (uint256 i = 0; i < accounts.length; i++) {\r\n            _isExcludedFromFee[accounts[i]] = state;\r\n        }\r\n    }\r\n\r\n    function updateMarketingWallet(address newWallet) external onlyOwner {\r\n        require(newWallet != address(0),\"Fee Address cannot be zero address\");\r\n        marketingWallet = newWallet;\r\n    }\r\n\r\n    function updateDevWallet(address newWallet) external onlyOwner {\r\n        require(newWallet != address(0),\"Fee Address cannot be zero address\");\r\n        devWallet = newWallet;\r\n    }\r\n\r\n    function setTaxes(\r\n        uint256 _rfi,\r\n        uint256 _marketing,\r\n        uint256 _ops,\r\n        uint256 _liquidity,\r\n        uint256 _dev\r\n    ) public onlyOwner {\r\n        require((_rfi + _marketing + _ops +_liquidity + _dev ) <= 10, \"Must keep fees at 10% or less\");\r\n        taxes = Taxes(_rfi, _marketing, _ops, _liquidity, _dev);\r\n        emit FeesChanged();\r\n    }\r\n\r\n    function setSellTaxes(\r\n        uint256 _rfi,\r\n        uint256 _marketing,\r\n        uint256 _ops,\r\n        uint256 _liquidity,\r\n        uint256 _dev\r\n    ) public onlyOwner {\r\n        require((_rfi + _marketing + _ops + _liquidity + _dev ) <= 10, \"Must keep fees at 10% or less\");\r\n        sellTaxes = Taxes(_rfi, _marketing, _ops ,_liquidity, _dev);\r\n        emit FeesChanged();\r\n    }\r\n\r\n\r\n    function updateOpsWallet(address newWallet) external onlyOwner {\r\n        require(newWallet != address(0),\"Fee Address cannot be zero address\");\r\n        opsWallet = newWallet;\r\n    }\r\n\r\n    function updateSwapTokensAtAmount(uint256 amount) external onlyOwner {\r\n        require(amount <= 1e7, \"Cannot set swap threshold amount higher than 1% of tokens\");\r\n        swapTokensAtAmount = amount * 10**_decimals;\r\n    }\r\n\r\n    function updateSwapEnabled(bool _enabled) external onlyOwner {\r\n        swapEnabled = _enabled;\r\n    }\r\n\r\n    //Use this in case BNB are sent to the contract by mistake\r\n    function rescueBNB(uint256 weiAmount) external onlyOwner {\r\n        require(address(this).balance >= weiAmount, \"insufficient BNB balance\");\r\n        payable(msg.sender).transfer(weiAmount);\r\n    }\r\n\r\n    //Use this in case BEP20 Tokens are sent to the contract by mistake\r\n    function rescueAnyBEP20Tokens(address _tokenAddr,address _to, uint256 _amount) public onlyOwner {\r\n        require(_tokenAddr != address(this), \"Owner can't claim contract's balance of its own tokens\");\r\n        IBEP20(_tokenAddr).transfer(_to, _amount);\r\n    }\r\n\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"FeesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldRouter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRouter\",\"type\":\"address\"}],\"name\":\"UpdatedRouter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EnableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"bulkExcludeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"genesis_block\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"opsWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deductTransferRfi\",\"type\":\"bool\"}],\"name\":\"reflectionFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"rescueAnyBEP20Tokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"rescueBNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTaxes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rfi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ops\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dev\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rfi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ops\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dev\",\"type\":\"uint256\"}],\"name\":\"setSellTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rfi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ops\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dev\",\"type\":\"uint256\"}],\"name\":\"setTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTokensAtAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rfi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ops\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dev\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"}],\"name\":\"tokenFromReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totFeesPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rfi\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ops\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dev\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"updateDevWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"updateMarketingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"updateOpsWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"updateSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateSwapTokensAtAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"updatedeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PEPEv2", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000010ed43c718714eb63d5aa57b78b54704e256024e", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://98e550f6c814344f1bc519a04cc1735f6bcf92fcc289436f192642538e99dce9"}