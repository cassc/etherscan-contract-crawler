{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.4;\r\ncontract ZELWIN {\r\n    string public constant name = \"ZELWIN\";\r\n    string public constant symbol = \"ZLW\";\r\n    uint8 public constant decimals = 18;\r\n    uint256 public totalSupply;\r\n    uint256 public constant MAX_SUPPLY = 3e26;\r\n\r\n    address private _owner;\r\n    modifier restricted {\r\n        require(msg.sender == _owner, \"This function is restricted to owner\");\r\n        _;\r\n    }\r\n    modifier issuerOnly {\r\n        require(_isIssuer[msg.sender], \"You do not have issuer rights\");\r\n        _;\r\n    }\r\n    modifier isNotZeroAddress (address _address) {\r\n        require(_address != address(0), \"ERC20: Zero address\");\r\n        _;\r\n    }\r\n    modifier isNotZELWIN (address _address) {\r\n        require(_address != address(this), \"ERC20: ZELWIN Token address\");\r\n        _;\r\n    }\r\n\r\n    mapping(address => uint256) private _balanceOf;\r\n    mapping(address => mapping(address => uint256)) private _allowance;\r\n    mapping(address => bool) private _isIssuer;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event IssuerRights(address indexed issuer, bool value);\r\n    event TransferOwnership(address indexed previousOwner, address indexed newOwner);\r\n\r\n    function getOwner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function balanceOf(address _user) public view returns (uint256) {\r\n        return _balanceOf[_user];\r\n    }\r\n\r\n    function allowance(address _user, address _spender) public view returns (uint256){\r\n        return _allowance[_user][_spender];\r\n    }\r\n\r\n    function isIssuer(address _user) public view returns (bool) {\r\n        return _isIssuer[_user];\r\n    }\r\n\r\n    function mint(address _to, uint256 _amount) public issuerOnly isNotZeroAddress(_to) isNotZELWIN(_to) returns (bool success) {\r\n        totalSupply += _amount;\r\n        require(totalSupply <= MAX_SUPPLY, \"Minting overflows total supply limit\");\r\n        _balanceOf[_to] += _amount;\r\n        emit Transfer(address(0), _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    function burn(uint256 _amount) public issuerOnly returns (bool success) {\r\n        totalSupply -= _amount;\r\n        _balanceOf[msg.sender] -= _amount;\r\n        emit Transfer(msg.sender, address(0), _amount);\r\n        return true;\r\n    }\r\n\r\n    function burnFrom(address _from, uint256 _amount) public issuerOnly returns (bool success) {\r\n        _allowance[_from][msg.sender] -= _amount;\r\n        _balanceOf[_from] -= _amount;\r\n        totalSupply -= _amount;\r\n        emit Transfer(_from, address(0), _amount);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _amount) public isNotZeroAddress(_spender) returns (bool success) {\r\n        _allowance[msg.sender][_spender] = _amount;\r\n        emit Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _amount) public isNotZeroAddress(_to) returns (bool success) {\r\n        _balanceOf[msg.sender] -= _amount;\r\n        _balanceOf[_to] += _amount;\r\n        emit Transfer(msg.sender, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom( address _from, address _to, uint256 _amount) public isNotZeroAddress(_to) isNotZELWIN(_to) returns (bool success) {\r\n        _allowance[_from][msg.sender] -= _amount;\r\n        _balanceOf[_from] -= _amount;\r\n        _balanceOf[_to] += _amount;\r\n        emit Transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public restricted isNotZeroAddress(_newOwner) {\r\n        emit TransferOwnership(_owner, _newOwner);\r\n        _owner = _newOwner;\r\n    }\r\n\r\n    function setIssuerRights(address _issuer, bool _value) public restricted isNotZeroAddress(_issuer) {\r\n        _isIssuer[_issuer] = _value;\r\n        emit IssuerRights(_issuer, _value);\r\n    }\r\n\r\n    constructor() {\r\n        _owner = msg.sender;\r\n        emit TransferOwnership(address(0), msg.sender);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"IssuerRights\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setIssuerRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ZELWIN", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://d08ac840a4f0e731e990d6790cff37bddc55003bbaf3fb90a70f6619bd12991b"}