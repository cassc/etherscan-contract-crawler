{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n}\r\n\r\ncontract TokenSender {\r\n    address private _tokenAddress;\r\n\r\n    constructor(address tokenAddress) {\r\n        _tokenAddress = tokenAddress;\r\n    }\r\n\r\n    function sendTokens(address[] memory recipients, uint256[] memory amounts) external {\r\n        require(recipients.length == amounts.length, \"Array lengths do not match\");\r\n        for (uint256 i = 0; i < recipients.length; i++) {\r\n            (bool success, ) = _tokenAddress.call(abi.encodeWithSignature(\"transfer(address,uint256)\", recipients[i], amounts[i]));\r\n            require(success, \"Token transfer failed\");\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"sendTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "TokenSender", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000b56fdba9444d6d41ec669dce5dfe242b944a581c", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2ce7a26baf50ea19eda0ede2d5932e4f279178081185ee8ec164328beda7f69b"}