{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/BlokToken.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.19;\\n\\n// ----------------------------------------------------------------------------\\n// EIP-20: ERC-20 Token Standard\\n// https://eips.ethereum.org/EIPS/eip-20\\n// -----------------------------------------\\n\\ninterface ERC20Interface {\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(\\n        address _tokenOwner\\n    ) external view returns (uint256 balance);\\n\\n    function transfer(\\n        address _to,\\n        uint256 _tokens\\n    ) external returns (bool success);\\n\\n    function allowance(\\n        address _tokenOwner,\\n        address _spender\\n    ) external view returns (uint256 remaining);\\n\\n    function approve(\\n        address _spender,\\n        uint256 _tokens\\n    ) external returns (bool success);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _tokens\\n    ) external returns (bool success);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 tokens);\\n    event Approval(\\n        address indexed tokenOwner,\\n        address indexed spender,\\n        uint256 tokens\\n    );\\n}\\n\\ncontract BlokToken is ERC20Interface {\\n    string public name;\\n    string public symbol;\\n    uint256 public decimals = 18;\\n    uint256 public override totalSupply;\\n    address public admin;\\n    address[] holders;\\n\\n    mapping(address => uint256) public balances;\\n    mapping(address => mapping(address => uint256)) allowed;\\n\\n    constructor(\\n        uint256 initialSupply,\\n        string memory tokenName,\\n        string memory tokenSymbol\\n    ) {\\n        totalSupply = initialSupply;\\n        admin = msg.sender;\\n        balances[msg.sender] = totalSupply;\\n        holders.push(msg.sender);\\n        name = tokenName;\\n        symbol = tokenSymbol;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"only admin can execute this\\\");\\n        _;\\n    }\\n\\n    function balanceOf(\\n        address _tokenOwner\\n    ) public view override returns (uint256 balance) {\\n        return balances[_tokenOwner];\\n    }\\n\\n    function _transfer(address _from, address _to, uint256 _tokens) internal {\\n        balances[_from] -= _tokens;\\n        balances[_to] += _tokens;\\n\\n        if (balances[_from] == 0) {\\n            for (uint256 i = 0; i < holders.length; i++) {\\n                if (holders[i] == _from) {\\n                    holders[i] = holders[holders.length - 1];\\n                    holders.pop();\\n                }\\n            }\\n        }\\n\\n        bool isHolderExist;\\n        for (uint256 i = 0; i < holders.length; i++) {\\n            if (holders[i] == _to) {\\n                isHolderExist = true;\\n            }\\n        }\\n        if (!isHolderExist) {\\n            holders.push(_to);\\n        }\\n        emit Transfer(_from, _to, _tokens);\\n    }\\n\\n    function transfer(\\n        address _to,\\n        uint256 _tokens\\n    ) public override returns (bool success) {\\n        require(balances[msg.sender] >= _tokens, \\\"insufficient balance\\\");\\n        _transfer(msg.sender, _to, _tokens);\\n        return true;\\n    }\\n\\n    function allowance(\\n        address _tokenOwner,\\n        address _spender\\n    ) public view override returns (uint256) {\\n        return allowed[_tokenOwner][_spender];\\n    }\\n\\n    function approve(\\n        address _spender,\\n        uint256 _tokens\\n    ) public override returns (bool success) {\\n        require(balances[msg.sender] >= _tokens);\\n        require(_tokens > 0);\\n\\n        allowed[msg.sender][_spender] = _tokens;\\n\\n        emit Approval(msg.sender, _spender, _tokens);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _tokens\\n    ) public override returns (bool success) {\\n        require(allowed[_from][msg.sender] >= _tokens, \\\"not allowed\\\");\\n        require(balances[_from] >= _tokens, \\\"insufficient balance\\\");\\n\\n        allowed[_from][msg.sender] -= _tokens;\\n        _transfer(_from, _to, _tokens);\\n\\n        emit Transfer(_from, _to, _tokens);\\n\\n        return true;\\n    }\\n\\n    function getHolders() public view returns (address[] memory) {\\n        return holders;\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 100\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHolders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BlokToken", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "100", "ConstructorArguments": "0000000000000000000000000000000000000000000002170dc4027fb1780000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000f426c6f6b746f6b2e696f202d2030310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b4348492d53414e2d413031000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}