{"SourceCode": "pragma solidity ^0.8.0;\r\n\r\ncontract Whitelist {\r\n    mapping(address => bool) private _whitelist;\r\n    address private _owner;\r\n\r\n    event AddedToWhitelist(address indexed account);\r\n    event RemovedFromWhitelist(address indexed account);\r\n\r\n    constructor() {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    function isWhitelisted(address account) external view returns (bool) {\r\n        return _whitelist[account];\r\n    }\r\n\r\n    function addToWhitelist() external {\r\n        require(!_whitelist[msg.sender], \"Account is already whitelisted\");\r\n        _whitelist[msg.sender] = true;\r\n        emit AddedToWhitelist(msg.sender);\r\n    }\r\n\r\n    function removeFromWhitelist(address account) external onlyOwner {\r\n        require(_whitelist[account], \"Account is not whitelisted\");\r\n        _whitelist[account] = false;\r\n        emit RemovedFromWhitelist(account);\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == _owner, \"Only the contract owner can call this function\");\r\n        _;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddedToWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RemovedFromWhitelist\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Whitelist", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0a647e1fa8d4567981ee354597502f062677801ef69bd447ef545376468bfeb5"}