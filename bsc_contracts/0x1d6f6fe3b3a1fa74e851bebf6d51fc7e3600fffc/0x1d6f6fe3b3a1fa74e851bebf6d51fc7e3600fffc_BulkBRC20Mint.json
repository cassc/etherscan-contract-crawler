{"SourceCode": "pragma solidity ^0.8.0;\r\n\r\n/*\r\n* \u7531BOX\u7f16\u5199, \u63a8\u7279@BoxMrChen\r\n* BNBI\u6279\u91cf\u6253\u811a\u672c\r\n* \u601d\u8def\u6765\u6e90\u5927\u795e:Incredible\r\n* \u4e0d\u662f\u5f88\u8ba4\u53ef\u8fd9\u79cd\u94ed\u6587,\u65e0\u6240\u8c13,\u5927\u5bb6\u4e00\u8d77\u6b7b.\r\n*/\r\n\r\ncontract BulkBRC20Mint {\r\n    function claim(uint count) public {\r\n        bytes memory inscription = bytes('data:,{\"p\":\"bsc-20\",\"op\":\"mint\",\"tick\":\"bnbi\",\"amt\":\"5000\"}');\r\n        uint size = inscription.length;\r\n        address sender = msg.sender;\r\n        assembly {\r\n            let ptr := add(inscription, 0x20)\r\n            for { let i := 0 } lt(i, count) { i := add(i, 1) } {\r\n                pop(call(gas(), sender, 0, ptr, size, 0, 0))\r\n            }\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BulkBRC20Mint", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "1", "Runs": "99999", "ConstructorArguments": "", "EVMVersion": "paris", "Library": "", "LicenseType": "BSL 1.1", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c6fb8b3974b98bb2f3f8ad6eb81e73fae2587000376b1d80b4dcbcbe358e5995"}