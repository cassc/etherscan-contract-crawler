{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface ILoyalpulse {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract LoyalpulsePresale {\r\n    ILoyalpulse public token;\r\n    address public owner;\r\n    uint256 public constant TOKEN_PRICE = 3650; // Price in Gwei (0.00000365 BNB)\r\n    uint256 public constant TOKEN_DECIMAL = 18;\r\n    bool public presaleEnded;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can perform this action\");\r\n        _;\r\n    }\r\n\r\nconstructor() {\r\n    token = ILoyalpulse(0x27e837aC9D45Aa068F151Ee9980BB058685829c1);\r\n    owner = msg.sender;  // Sets the creator of the contract as the owner\r\n}\r\n\r\n\r\n    function buyTokens() public payable {\r\n        require(!presaleEnded, \"Presale is over\");\r\n        uint256 tokensToReceive = (msg.value * 10**TOKEN_DECIMAL) / (TOKEN_PRICE * 10**9);\r\n        require(token.transfer(msg.sender, tokensToReceive), \"Token transfer failed\");\r\n    }\r\n\r\n    function endPresale() public onlyOwner {\r\n        presaleEnded = true;\r\n    }\r\n\r\n    function withdrawTokens() public onlyOwner {\r\n        uint256 remainingTokens = token.balanceOf(address(this));\r\n        require(token.transfer(owner, remainingTokens), \"Token transfer failed\");\r\n    }\r\n\r\n    function withdrawBNB() public onlyOwner {\r\n        payable(owner).transfer(address(this).balance);\r\n    }\r\n\r\n    receive() external payable {\r\n        buyTokens();\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"TOKEN_DECIMAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ILoyalpulse\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "LoyalpulsePresale", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://f3774844745a4c4d738236532f97a8296586efb94583c8701eb9b4a4fb3a5680"}