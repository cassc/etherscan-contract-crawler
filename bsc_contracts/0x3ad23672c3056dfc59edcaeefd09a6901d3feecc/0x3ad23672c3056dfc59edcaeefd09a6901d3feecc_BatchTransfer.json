{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract BatchTransfer {\r\n    function batchTransferTokens(\r\n        address tokenAddress,\r\n        address[] memory recipients,\r\n        uint256[] memory amounts\r\n    ) public returns (bool) {\r\n        require(recipients.length == amounts.length, \"Mismatched array lengths\");\r\n\r\n        IERC20 token = IERC20(tokenAddress);\r\n        uint256 totalAmount = 0;\r\n\r\n        for (uint256 i = 0; i < amounts.length; i++) {\r\n            totalAmount += amounts[i];\r\n        }\r\n\r\n        require(token.balanceOf(msg.sender) >= totalAmount, \"Insufficient balance\");\r\n\r\n        for (uint256 i = 0; i < recipients.length; i++) {\r\n            require(token.transfer(recipients[i], amounts[i]), \"Transfer failed\");\r\n        }\r\n\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BatchTransfer", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e30012d9af15553bc0bb182cb3ad6277df48b1d8ccf494b35b09f6bcb24771d0"}