{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/dev/work/code/amongus/src/contracts/AufToken.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity >=0.5.0 <0.7.0;\\n\\ncontract Ownable {\\n    \\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    constructor () public {\\n        _owner = msg.sender;\\n        emit OwnershipTransferred(address(0), _owner);\\n    }\\n\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    function isOwner() public view returns (bool) {\\n        return msg.sender == _owner;\\n    }\\n\\n    function transferOwnership(address _newOwner) public onlyOwner {\\n        _transferOwnership(_newOwner);\\n    }\\n\\n    function _transferOwnership(address _newOwner) internal {\\n        require(_newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, _newOwner);\\n        _owner = _newOwner;\\n    }\\n}\\n\\n\\nlibrary SafeMath {\\n    function safeAdd(uint a, uint b) internal pure returns (uint c) {\\n        c = a + b;\\n        require(c >= a);\\n    }\\n    function safeSub(uint a, uint b) internal pure returns (uint c) {\\n        require(b <= a);\\n        c = a - b;\\n    }\\n    function safeMul(uint a, uint b) internal pure returns (uint c) {\\n        c = a * b;\\n        require(a == 0 || c / a == b);\\n    }\\n    function safeDiv(uint a, uint b) internal pure returns (uint c) {\\n        require(b > 0);\\n        c = a / b;\\n    }\\n}\\n\\n\\ninterface ERC20{\\n    \\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address _tokenOwner) external view returns (uint256);\\n    function allowance(address _tokenOwner, address _spender) external view returns (uint256);\\n    function transfer(address _to, uint256 _tokens) external returns (bool);\\n    function approve(address _spender, uint256 _tokens)  external returns (bool);\\n    function transferFrom(address _from, address _to, uint256 _tokens) external returns (bool);\\n    \\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\\n    event Transfer(address indexed from, address indexed to, uint tokens);\\n    \\n}\\n\\n\\n\\n\\ncontract AufToken is Ownable, ERC20{\\n    \\n    using SafeMath for uint256;\\n\\n    string _name;\\n    string  _symbol;\\n    uint256 _totalSupply;\\n    uint256 _decimal;\\n    \\n    mapping(address => uint256) _balances;\\n    mapping(address => mapping (address => uint256)) _allowances;\\n    \\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\\n    event Transfer(address indexed from, address indexed to, uint tokens);\\n    \\n    constructor() public {\\n        _name = \\\"Amongus.finance\\\";\\n        _symbol = \\\"AMONG\\\";\\n        _decimal = 18;\\n        _totalSupply = 21000000 * 10 ** _decimal;\\n        _balances[0xf2596513BccbCbF318d5A18AF9A8A24EA589D0C7] = _totalSupply;\\n        emit Transfer(address(0), 0xf2596513BccbCbF318d5A18AF9A8A24EA589D0C7, _totalSupply);\\n    }\\n    \\n    \\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n    \\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n    \\n    function decimals() public view returns (uint256) {\\n        return _decimal;\\n    }\\n    \\n    function totalSupply() external view  override returns (uint256) {\\n        return _totalSupply;\\n    }\\n    \\n    function balanceOf(address _tokenOwner) external view override returns (uint256) {\\n        return _balances[_tokenOwner];\\n    }\\n    \\n    function transfer(address _to, uint256 _tokens) external override returns (bool) {\\n        _transfer(msg.sender, _to, _tokens);\\n        return true;\\n    }\\n    \\n    function _transfer(address _sender, address _recipient, uint256 _amount) internal {\\n        require(_sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(_recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _balances[_sender] = _balances[_sender].safeSub(_amount);\\n        _balances[_recipient] = _balances[_recipient].safeAdd(_amount);\\n        emit Transfer(_sender, _recipient, _amount);\\n    }\\n    \\n    function allowance(address _tokenOwner, address _spender) external view override returns (uint256) {\\n        return _allowances[_tokenOwner][_spender];\\n    }\\n    \\n    function approve(address _spender, uint256 _tokens) external override returns (bool) {\\n        _approve(msg.sender, _spender, _tokens);\\n        return true;\\n    }\\n    \\n    function _approve(address _owner, address _spender, uint256 _value) internal {\\n        require(_owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(_spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[_owner][_spender] = _value;\\n        emit Approval(_owner, _spender, _value);\\n    }\\n    \\n    \\n    function transferFrom(address _from, address _to, uint256 _tokens) external override returns (bool) {\\n        _transfer(_from, _to, _tokens);\\n        _approve(_from, msg.sender, _allowances[_from][msg.sender].safeSub(_tokens));\\n        return true;\\n    }\\n    receive () external payable {\\n        revert();\\n    }\\n\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "AufToken", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}