{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.9;\r\n\r\ninterface IERC20 {\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IERC20Metadata is IERC20 {\r\n\r\n  function name() external view returns (string memory);\r\n\r\n  function symbol() external view returns (string memory);\r\n\r\n  function decimals() external view returns (uint8);\r\n}\r\n\r\nabstract contract Context {\r\n  function _msgSender() internal view virtual returns (address) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view virtual returns (bytes calldata) {\r\n    return msg.data;\r\n  }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  constructor() {\r\n    _transferOwnership(_msgSender());\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    _checkOwner();\r\n    _;\r\n  }\r\n\r\n  function owner() public view virtual returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  function _checkOwner() internal view virtual {\r\n    require(owner() == _msgSender(), 'Ownable: caller is not the owner');\r\n  }\r\n\r\n  function renounceOwnership() public virtual onlyOwner {\r\n    _transferOwnership(address(0));\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public virtual onlyOwner {\r\n    require(newOwner != address(0), 'Ownable: new owner is the zero address');\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  function _transferOwnership(address newOwner) internal virtual {\r\n    address oldOwner = _owner;\r\n    _owner = newOwner;\r\n    emit OwnershipTransferred(oldOwner, newOwner);\r\n  }\r\n}\r\n\r\ncontract BitcoinETFToken is Context, IERC20Metadata, Ownable {\r\n  mapping(address => uint256) private _balances;\r\n\r\n  mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n\r\n  string private _name;\r\n  string private _symbol;\r\n  uint8 private constant _decimals = 18;\r\n  uint256 public burnPercentage = 5;\r\n  uint256 public constant presaleReserve = 7200000000 * (10 ** _decimals);\r\n  uint256 public constant stakingReserve = 2500000000 * (10 ** _decimals);\r\n  uint256 public constant cexListReserve = 200000000 * (10 ** _decimals);\r\n  uint256 public constant airdropReserve = 100000000 * (10 ** _decimals);\r\n\r\n  mapping(address => bool) public isWhitelisted;\r\n  event BurnPercentageChanged(uint256 oldBurnPercentage, uint256 newBurnPercentage, uint256 timestamp);\r\n\r\n  constructor(string memory name_, string memory symbol_) {\r\n    _name = name_;\r\n    _symbol = symbol_;\r\n    _mint(0x853ffB780c52a23baFaaC23bb6Ffe2ec9f46635A, presaleReserve);\r\n    _mint(0xb06a9665890406dB83802c07fF283345321B171b, stakingReserve);\r\n    _mint(0x24e2e063572fC39FED2a648Ebb371E9c98a81108, cexListReserve);\r\n    _mint(0xa133DA2DF519DB51f1BB911fb4f3346D4190f95B, airdropReserve);\r\n  }\r\n\r\n  function decreaseBurnPercentage(uint256 _burnPercentage) external onlyOwner {\r\n    require(_burnPercentage >= 0 && _burnPercentage <= 5, 'unrecognised burn percentage');\r\n    require(_burnPercentage < burnPercentage, 'New burn percentage must be less than current value');\r\n    emit BurnPercentageChanged(burnPercentage, _burnPercentage, block.timestamp);\r\n    burnPercentage = _burnPercentage;\r\n  }\r\n\r\n  function whitelistAddress(address _address, bool _status) external onlyOwner {\r\n    isWhitelisted[_address] = _status;\r\n  }\r\n\r\n  function name() public view virtual override returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  function symbol() public view virtual override returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  function decimals() public view virtual override returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  function totalSupply() public view virtual override returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  function balanceOf(address account) public view virtual override returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n    uint256 burnTax = isWhitelisted[_msgSender()] || isWhitelisted[recipient] ? 0 : ((amount * burnPercentage) / 100);\r\n    if (burnTax > 0) _burn(_msgSender(), burnTax);\r\n    _transfer(_msgSender(), recipient, amount - burnTax);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address from, address to) public view virtual override returns (uint256) {\r\n    return _allowances[from][to];\r\n  }\r\n\r\n  function approve(address to, uint256 amount) public virtual override returns (bool) {\r\n    _approve(_msgSender(), to, amount);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n    uint256 burnTax = isWhitelisted[sender] || isWhitelisted[recipient] ? 0 : ((amount * burnPercentage) / 100);\r\n    if (burnTax > 0) _burn(sender, burnTax);\r\n    _transfer(sender, recipient, amount - burnTax);\r\n    uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n    require(currentAllowance >= amount, 'ERC20: transfer amount exceeds allowance');\r\n    unchecked {\r\n      _approve(sender, _msgSender(), currentAllowance - amount);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function increaseAllowance(address to, uint256 addedValue) public virtual returns (bool) {\r\n    _approve(_msgSender(), to, _allowances[_msgSender()][to] + addedValue);\r\n    return true;\r\n  }\r\n\r\n  function decreaseAllowance(address to, uint256 subtractedValue) public virtual returns (bool) {\r\n    uint256 currentAllowance = _allowances[_msgSender()][to];\r\n    require(currentAllowance >= subtractedValue, 'ERC20: decreased allowance below zero');\r\n    unchecked {\r\n      _approve(_msgSender(), to, currentAllowance - subtractedValue);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r\n    require(amount > 0, 'ERC20: transfer amount zero');\r\n    require(sender != address(0), 'ERC20: transfer from the zero address');\r\n    require(recipient != address(0), 'ERC20: transfer to the zero address');\r\n\r\n    uint256 senderBalance = _balances[sender];\r\n    require(senderBalance >= amount, 'ERC20: transfer amount exceeds balance');\r\n    unchecked {\r\n      _balances[sender] = senderBalance - amount;\r\n    }\r\n    _balances[recipient] += amount;\r\n\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  function _mint(address account, uint256 amount) internal virtual {\r\n    require(account != address(0), 'ERC20: mint to the zero address');\r\n\r\n    _totalSupply += amount;\r\n    _balances[account] += amount;\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  function _burn(address account, uint256 amount) internal virtual {\r\n    require(account != address(0), 'ERC20: burn from the zero address');\r\n\r\n    uint256 accountBalance = _balances[account];\r\n    require(accountBalance >= amount, 'ERC20: burn amount exceeds balance');\r\n    unchecked {\r\n      _balances[account] = accountBalance - amount;\r\n    }\r\n    _totalSupply -= amount;\r\n\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  function burn(uint256 amount) external {\r\n    _burn(_msgSender(), amount);\r\n  }\r\n\r\n  function _approve(address from, address to, uint256 amount) internal virtual {\r\n    require(from != address(0), 'ERC20: approve from the zero address');\r\n    require(to != address(0), 'ERC20: approve to the zero address');\r\n\r\n    _allowances[from][to] = amount;\r\n    emit Approval(from, to, amount);\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBurnPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBurnPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BurnPercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cexListReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnPercentage\",\"type\":\"uint256\"}],\"name\":\"decreaseBurnPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"whitelistAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BitcoinETFToken", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000b424954434f494e2045544600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064254434554460000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7c23d02b25e75a55c5d76f28534052cb3da62ab2e490f1516f2f3a2344d4f8bc"}