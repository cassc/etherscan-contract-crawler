{"SourceCode": "pragma solidity 0.5.4;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\ncontract Ownable {\r\n   address public owner;\r\n    modifier onlyOwner {\r\n        require(owner == msg.sender, \"Not Owner\");\r\n        _;\r\n    }\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n  require(msg.sender != address(0));\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\ninterface ITRC20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool);\r\n  \r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n  function burn(uint256 value) external returns (bool);\r\n  event Transfer(address indexed from,address indexed to,uint256 value);\r\n  event Approval(address indexed owner,address indexed sender,uint256 value);\r\n}\r\n\r\ncontract MultiSend is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    constructor(address ownerAddress) public {\r\n\t\towner = ownerAddress;\r\n    }\r\n\t\r\n  \tfunction multisend_Token(ITRC20 _Token, address[]  memory  _contributors, uint256[] memory _balances, uint256 totalQty) public  {\r\n    \tuint256 total = totalQty;\r\n        uint256 i = 0;\r\n        for (i; i < _contributors.length; i++) {\r\n            require(total >= _balances[i]);\r\n            total = total.sub(_balances[i]);\r\n            _Token.transferFrom(msg.sender, _contributors[i], _balances[i]);\r\n        }\r\n    }\r\n    function multisend_Coin( address[]  memory  _contributors, uint256[] memory _balances, uint256 totalQty) public payable {\r\n        require(totalQty==msg.value);\r\n    \tuint256 total = totalQty;\r\n        for (uint i=0; i < _contributors.length; i++) {\r\n            require(total >= _balances[i]);\r\n            total = total.sub(_balances[i]);\r\n            uint balanace = _balances[i];\r\n            address contributer = _contributors[i];\r\n            address(uint160(contributer)).transfer(balanace);\r\n        }\r\n\r\n    }\r\n\t\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contributors\",\"type\":\"address[]\"},{\"name\":\"_balances\",\"type\":\"uint256[]\"},{\"name\":\"totalQty\",\"type\":\"uint256\"}],\"name\":\"multisend_Coin\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_Token\",\"type\":\"address\"},{\"name\":\"_contributors\",\"type\":\"address[]\"},{\"name\":\"_balances\",\"type\":\"uint256[]\"},{\"name\":\"totalQty\",\"type\":\"uint256\"}],\"name\":\"multisend_Token\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ownerAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]", "ContractName": "MultiSend", "CompilerVersion": "v0.5.4+commit.9549d8ff", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000a571a77b82dfb898357e60d9082c44082d114c97", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://a494169ccfda49db5a142328993dfd7b80bfe69e2678627f2c9575f911c39cbc"}