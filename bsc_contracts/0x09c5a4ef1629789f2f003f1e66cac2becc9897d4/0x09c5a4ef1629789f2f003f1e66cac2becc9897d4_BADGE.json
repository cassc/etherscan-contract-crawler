{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract BADGE {\r\n  string public name = \"BADGE Token\";\r\n  string public symbol = \"BADGE\";\r\n  uint8 public decimals = 18;\r\n  uint256 public totalSupply = 0;\r\n  \r\n  mapping(address => bool) public owners;\r\n  mapping(address => bool) public minters;\r\n  mapping(address => bool) public operators;\r\n  mapping (address => bool) public frozen;\r\n  bool public allUnfrozen = false;\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n  mapping (address => uint256) internal balances;\r\n  mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n  modifier onlyOwner() {\r\n    require(owners[msg.sender], \"BADGE Token: No owner privilege\");\r\n    _;\r\n  }\r\n\r\n  modifier onlyMinter() {\r\n    require(minters[msg.sender], \"BADGE Token: No minter privilege\");\r\n    _;\r\n  }\r\n\r\n  modifier onlyOperator() {\r\n    require(operators[msg.sender], \"BADGE Token: No operator privilege\");\r\n    _;\r\n  }\r\n\r\n  modifier Transferable(address _account) {\r\n    require(allUnfrozen || !frozen[_account], \"BADGE Token: Account is frozen\");\r\n     _;\r\n  }\r\n\r\n  constructor() {\r\n    owners[msg.sender] = true;\r\n    minters[msg.sender] = true;\r\n  }\r\n\r\n  // Admin\r\n  function setOwner(address _owner) external onlyOwner returns (bool) {\r\n    owners[_owner] = true;\r\n    return true;\r\n  }\r\n\r\n  function removeOwner(address _owner) external onlyOwner returns (bool) {\r\n    require(_owner != msg.sender, \"BADGE Token: Cannot remove yourself\");\r\n    owners[_owner] = false;\r\n    return true;\r\n  }\r\n\r\n  function setMinter(address _minter) external onlyOwner returns (bool) {\r\n    minters[_minter] = true;\r\n    return true;\r\n  }\r\n\r\n  function removeMinter(address _minter) external onlyOwner returns (bool) {\r\n    minters[_minter] = false;\r\n    return true;\r\n  }\r\n\r\n  function setOperator(address _operator) external onlyOwner returns (bool) {\r\n    operators[_operator] = true;\r\n    return true;\r\n  }\r\n\r\n  function removeOperator(address _operator) external onlyOwner returns (bool) {\r\n    operators[_operator] = false;\r\n    return true;\r\n  }\r\n\r\n  function setAllUnfrozen(bool _allUnfrozen) external onlyOwner returns (bool) {\r\n    allUnfrozen = _allUnfrozen;\r\n    return true;\r\n  }\r\n\r\n  // View\r\n  function balanceOf(address _account) external view returns (uint256 balance) {\r\n    return balances[_account];\r\n  }\r\n\r\n  function allowance(address _account, address _spender) external view returns (uint256) {\r\n    return allowed[_account][_spender];\r\n  }\r\n\r\n  // External\r\n  function transfer(address _to, uint256 _amount) external Transferable(msg.sender) returns (bool) {\r\n    _transfer(msg.sender, _to, _amount);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) external Transferable(_from) returns (bool) {\r\n    require(_value <= allowed[_from][msg.sender], 'BADGE Token: insufficient allowance');\r\n\r\n    _transfer(_from, _to, _value);\r\n\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender] - _value;\r\n\r\n    return true;\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value) external returns (bool) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    emit Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n  \r\n  function mint(address _to, uint256 _amount) external onlyMinter returns (bool) {\r\n    _mint(_to, _amount);\r\n    return true;\r\n  }\r\n  \r\n  function burn(uint256 _amount) external returns (bool) {\r\n    _burn(msg.sender, _amount);\r\n    return true;\r\n  }\r\n\r\n  function freeze(address _account) external onlyOwner returns (bool) {\r\n    _freeze(_account);\r\n    return true;\r\n  }\r\n\r\n  function unfreeze(address _account) external onlyOwner returns (bool) {\r\n    _unfreeze(_account);\r\n    return true;\r\n  }\r\n\r\n  function transferAndFreeze(address _to, uint256 _amount) external onlyOperator returns (bool) {\r\n    _transfer(msg.sender, _to, _amount);\r\n    _freeze(_to);\r\n    return true;\r\n  }\r\n\r\n  function mintAndFreeze(address _to, uint256 _value) external onlyMinter returns (bool) {\r\n    _mint(_to, _value);\r\n    _freeze(_to);\r\n    return true;\r\n  }\r\n\r\n  // Private\r\n  function _transfer(address _from, address _to, uint256 _amount) private returns (bool) {\r\n    require(_to != address(0), 'to address not to be zero');\r\n    require(_amount <= balances[_from], 'BADGE Token: insufficient balance');\r\n\r\n    balances[_from] = balances[_from] - _amount;\r\n    balances[_to] = balances[_to] + _amount;\r\n\r\n    emit Transfer(_from, _to, _amount);\r\n\r\n    return true;\r\n  }\r\n\r\n  function _mint(address _to, uint256 _amount) private returns (bool) {\r\n    require(_to != address(0), 'to address not to be zero');\r\n    balances[_to] = balances[_to] + _amount;\r\n    totalSupply = totalSupply + _amount;\r\n    emit Transfer(address(0), _to, _amount);\r\n    return true;\r\n  }\r\n\r\n  function _burn(address _from, uint256 _amount) private returns (bool) {\r\n    require(_amount <= balances[_from], 'BADGE Token: insufficient balance');\r\n    balances[_from] = balances[_from] - _amount;\r\n    totalSupply = totalSupply - _amount;\r\n    emit Transfer(_from, address(0), _amount);\r\n    return true;\r\n  }\r\n\r\n  function _freeze(address _account) private returns (bool) {\r\n    frozen[_account] = true;\r\n    return true;\r\n  }\r\n\r\n  function _unfreeze(address _account) private returns (bool) {\r\n    frozen[_account] = false;\r\n    return true;\r\n  }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allUnfrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mintAndFreeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_allUnfrozen\",\"type\":\"bool\"}],\"name\":\"setAllUnfrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferAndFreeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"unfreeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BADGE", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://b4a00309ad77567dd2d2468250611da7e9773f7e1fc90d56793b71361c792118"}