{"SourceCode": "// SPDX-License-Identifier: UNLISCENSED\r\npragma solidity 0.8.4;\r\n\r\ncontract GameOceansTokenOfficial {\r\n    string public constant name = \"GameOceans\";\r\n    string public constant symbol = \"GOT\";\r\n    uint8 public constant decimals = 18;\r\n    address public tokenOwner;\r\n    address public founderClub;\r\n    address public creatorsClub;\r\n    address public socialMediaClub;\r\n    address public donationClub;\r\n    address public airdropClub;\r\n    address public mintAddress;\r\n    address public utilityServiceAddress;\r\n\r\n    mapping(address => uint256) balances;\r\n\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n\r\n    uint256 totalSupply_ = 2500000000 ether;\r\n    uint256 maxSupply_ = 10000000000 ether;\r\n    uint256 airdropClubSupply_ = 500000000 ether;\r\n\r\n    uint256 founderClubSupply_ = 700000000 ether; // 1\r\n    uint256 creatorsClubSupply_ = 1000000000 ether; // 2\r\n    uint256 socialMediaClubSupply_ = 200000000 ether; // 3\r\n    uint256 donationClubSupply_ = 100000000 ether; // 4\r\n    uint256 mintingSupply_ = 5000000000 ether; // 5\r\n\r\n    mapping(uint8 => uint256) public alreadyMinted;\r\n\r\n    using SafeMath for uint256;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event Mint(address indexed to, uint256 amount);\r\n    event Burn(address indexed user, uint256 amount);\r\n\r\n    constructor(address _founder, address _creators, address _socialMedia,address _mintAddress,address _utilityAddress,address _donations, address _airdrop) {\r\n        mintAddress = _mintAddress;\r\n        utilityServiceAddress = _utilityAddress;\r\n        tokenOwner = msg.sender;\r\n        founderClub = _founder;\r\n        creatorsClub = _creators;\r\n        socialMediaClub = _socialMedia;\r\n        donationClub = _donations;\r\n        airdropClub = _airdrop;\r\n\r\n        assignInitialBalance(tokenOwner,totalSupply_);\r\n        totalSupply_ = totalSupply_.add(airdropClubSupply_);\r\n        assignInitialBalance(airdropClub,airdropClubSupply_);\r\n\r\n    }\r\n\r\n    function assignInitialBalance(address _user,uint256 _amount) private {\r\n        balances[_user] = _amount;\r\n    }\r\n    \r\n    modifier onlyOwner(){\r\n        require(msg.sender == tokenOwner,\"only owner allowed\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _new) public onlyOwner returns(bool) {\r\n        tokenOwner = _new;\r\n        return true;\r\n    }\r\n\r\n    function changeMintAddress(address _new) public onlyOwner returns(bool) {\r\n        mintAddress = _new;\r\n        return true;\r\n    }\r\n\r\n    function changeUtilityAddress(address _new) public onlyOwner returns(bool) {\r\n        utilityServiceAddress = _new;\r\n        return true;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return totalSupply_;\r\n    }\r\n\r\n    function maxSupply() public view returns (uint256) {\r\n        return maxSupply_;\r\n    }\r\n\r\n    function balanceOf(address _uAddress) public view returns (uint256) {\r\n        return balances[_uAddress];\r\n    }\r\n\r\n    function transfer(address receiver, uint256 numTokens) public returns (bool) {\r\n        require(numTokens <= balances[msg.sender]);\r\n        balances[msg.sender] = balances[msg.sender].sub(numTokens);\r\n        balances[receiver] = balances[receiver].add(numTokens);\r\n        emit Transfer(msg.sender, receiver, numTokens);\r\n        burnUtilityUseAmount(receiver,numTokens);\r\n        mint(numTokens,founderClub,1,5);\r\n        mint(numTokens,creatorsClub,2,5);\r\n        mint(numTokens,socialMediaClub,3,5);\r\n        mint(numTokens,donationClub,4,5);\r\n        mint(numTokens,mintAddress,5,10);\r\n        return true;\r\n    }\r\n    \r\n    function transferBNB(address receiver, uint256 _value) public onlyOwner returns (bool) {\r\n        require(address(this).balance > _value);\r\n        payable(receiver).transfer(_value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address delegate, uint256 numTokens) public  returns (bool) {\r\n        allowed[msg.sender][delegate] = numTokens;\r\n        emit Approval(msg.sender, delegate, numTokens);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address delegate) public  view returns (uint) {\r\n        return allowed[owner][delegate];\r\n    }\r\n\r\n    function transferFrom(address owner, address buyer, uint256 numTokens) public returns (bool) {\r\n        require(numTokens <= balances[owner]);\r\n        require(numTokens <= allowed[owner][msg.sender]);\r\n\r\n        balances[owner] = balances[owner].sub(numTokens);\r\n        allowed[owner][msg.sender] = allowed[owner][msg.sender].sub(numTokens);\r\n        balances[buyer] = balances[buyer].add(numTokens);\r\n        emit Transfer(owner, buyer, numTokens);\r\n        burnUtilityUseAmount(buyer,numTokens);\r\n        mint(numTokens,founderClub,1,5);\r\n        mint(numTokens,creatorsClub,2,5);\r\n        mint(numTokens,socialMediaClub,3,5);\r\n        mint(numTokens,donationClub,4,5);\r\n        mint(numTokens,mintAddress,5,10);\r\n        return true;\r\n    }\r\n\r\n    function mint(uint256 transAmt,address userAddress_,uint8 mapIndex, uint256 percentage) private {\r\n        uint256 amount = transAmt.mul(percentage).div(100);\r\n        if(totalSupply_.add(amount) <= maxSupply_ && (alreadyMinted[mapIndex].add(amount) <= mintingSupply_)){\r\n            balances[userAddress_] += amount;\r\n            totalSupply_ = totalSupply_.add(amount);\r\n            alreadyMinted[mapIndex] = alreadyMinted[mapIndex].add(amount);\r\n            emit Mint(userAddress_, amount);\r\n        }        \r\n    }\r\n\r\n    function burnUtilityUseAmount(address _user,uint256 _amount) private {\r\n        if(_user == utilityServiceAddress){\r\n            burnToken(_user,_amount);       \r\n        }\r\n    }\r\n\r\n    function burnToken(address _user,uint256 _amount) private {\r\n        require(_amount > 0, \"Amount must be greater than zero\");\r\n        require(_amount < balances[_user], \"Insufficient balance\");\r\n\r\n        balances[_user] = balances[_user].sub(_amount);\r\n        totalSupply_ = totalSupply_.sub(_amount);\r\n        emit Burn(_user, _amount);\r\n    }\r\n\r\n}\r\n\r\n\r\nlibrary SafeMath {\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_founder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_creators\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_socialMedia\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mintAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_utilityAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_donations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_airdrop\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropClub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"alreadyMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uAddress\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"changeMintAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"changeUtilityAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorsClub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donationClub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"founderClub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"socialMediaClub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferBNB\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilityServiceAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "GameOceansTokenOfficial", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000ed9792c0e4841b8d39b90a2f05309ad03e2d5b33000000000000000000000000b7792befb0d880052d63a27c5d7341c466d1b54a0000000000000000000000003f69d4f3c14a92643bc154c2fc31b113d05c7cf000000000000000000000000066a998bdd3599f01adf9309b6df3414385e4489700000000000000000000000095829c28a78befbb1935847f3e89d56e988c7c18000000000000000000000000ac52a288e3a710311692427e8b572fc4dadb031d0000000000000000000000002be97ccbeb332ebd571aa4e525a206f6de70c16a", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://1224ad2954090c190516ee2bb3bb1c3d4724743293d85f49da2ddb871d987d24"}