{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ninterface IErc20Contract {\r\n    // External ERC20 contract\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    function balanceOf(address tokenOwner) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\nstruct VestingIndex {\r\n    address _wallet;\r\n    uint256 _amount;\r\n    uint256 _date;\r\n}\r\n\r\ncontract LOAStaking {\r\n    IErc20Contract public _erc20Contract; // External ERC20 contract\r\n    address _admin;\r\n    uint256 _startDate = 1640304000;\r\n    uint256 _endDate = 1642896000;\r\n    mapping(address => uint256) public _totalAddressAmount;\r\n    VestingIndex public _vestingIndex;\r\n    VestingIndex[] public _vesting;\r\n    uint256 public _totalAmount;\r\n    mapping(address => VestingIndex[]) _vestedAddress;\r\n\r\n    constructor(address erc20Contract) {\r\n        _admin = msg.sender;\r\n        _erc20Contract = IErc20Contract(erc20Contract);\r\n    }\r\n\r\n    // receive erc20 token with the amount\r\n    function deposit(uint256 amount) external {\r\n        require(amount > 0, \"Amount Should be more than 1 $LOA\");\r\n        require(\r\n            block.timestamp >= _startDate && block.timestamp <= _endDate,\r\n            \"Deposit rejected, Stake2Win has either not yet started or ended\"\r\n        );\r\n        require(\r\n            _erc20Contract.transferFrom(msg.sender, address(this), amount),\r\n            \"transferFrom failed\"\r\n        );\r\n\r\n        _vestingIndex = VestingIndex(msg.sender, amount, block.timestamp);\r\n        _totalAddressAmount[msg.sender] += amount;\r\n        _totalAmount += amount;\r\n        _vesting.push(_vestingIndex);\r\n        _vestedAddress[msg.sender].push(_vestingIndex);\r\n    }\r\n\r\n    function withdraw() external {\r\n        uint256 length = _vestedAddress[msg.sender].length;\r\n        if (length > 0) {\r\n            for (uint256 i = 0; i < length; i++) {\r\n                uint256 date = _vestedAddress[msg.sender][i]._date + 30 days;\r\n                if (block.timestamp >= date) {\r\n                    require(\r\n                        _erc20Contract.transfer(\r\n                            _vestedAddress[msg.sender][i]._wallet,\r\n                            _vestedAddress[msg.sender][i]._amount\r\n                        ),\r\n                        \"transfer failed\"\r\n                    );\r\n                    _totalAmount -= _vestedAddress[msg.sender][i]._amount;\r\n                    _vestedAddress[msg.sender][i]._amount = 0;\r\n                    delete _vestedAddress[msg.sender][i];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function returnAddresses() external view returns (VestingIndex[] memory) {\r\n        return _vesting;\r\n    }\r\n\r\n    // Reject all direct deposit to this contract\r\n    receive() external payable {\r\n        revert();\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Contract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_erc20Contract\",\"outputs\":[{\"internalType\":\"contract IErc20Contract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_totalAddressAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_vesting\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_vestingIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnAddresses\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"internalType\":\"struct VestingIndex[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "LOAStaking", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000094b69263fca20119ae817b6f783fc0f13b02ad50", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://24f49b14c30de9924bd1f55b489f35da343b3f5b3b7346d529ef3a0c8a94acc4"}